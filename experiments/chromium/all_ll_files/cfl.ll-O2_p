; ModuleID = '../../third_party/libaom/source/libaom/av1/common/cfl.c'
source_filename = "../../third_party/libaom/source/libaom/av1/common/cfl.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.cfl_ctx = type { [1024 x i16], [1024 x i16], [2 x i32], i32, [2 x [32 x i16]], i32, i32, i32, i32, i32, i32 }
%struct.SequenceHeader = type { i32, i32, i32, i32, i8, i32, i32, i8, i32, i32, %struct.OrderHintInfo, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i32, [32 x i32], i32, %struct.aom_timing, i8, %struct.aom_dec_model_info, i8, [32 x i8], [32 x i8], [33 x %struct.aom_dec_model_op_parameters] }
%struct.OrderHintInfo = type { i32, i32, i32, i32 }
%struct.aom_timing = type { i32, i32, i32, i32 }
%struct.aom_dec_model_info = type { i32, i32, i32, i32 }
%struct.aom_dec_model_op_parameters = type { i32, i64, i64, i32, i32, i32, i32, i32 }
%struct.macroblockd = type { i32, i32, i32, i8, [3 x %struct.macroblockd_plane], %struct.TileInfo, %struct.MB_MODE_INFO**, i8, i8, i8, i8, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, i8*, i32, i32, i32, i32, i32, [2 x %struct.scale_factors*], %struct.yv12_buffer_config*, [3 x i8*], [3 x [32 x i8]], i8*, [32 x i8], i8*, i8*, [32 x i8], [3 x %struct.WienerInfo], [3 x %struct.SgrprojInfo], i8, i8, [29 x [8 x %struct.candidate_mv]], [29 x [8 x i16]], i8, i8, [8 x i8], %struct.frame_contexts*, i32, [8 x i32], [8 x i32], i32, i32, %struct.aom_internal_error_info*, %struct.WarpedMotionParams*, i8, [4 x i8], [4 x i8], i8*, %struct.cfl_ctx, [2 x i16], i16*, [2 x i8*], [8 x i8] }
%struct.macroblockd_plane = type { i8, i32, i32, %struct.buf_2d, [2 x %struct.buf_2d], i8*, i8*, [8 x [2 x i16]], i8*, i8, i8, [8 x [19 x i8*]], [8 x [19 x i8*]] }
%struct.buf_2d = type { i8*, i8*, i32, i32, i32 }
%struct.TileInfo = type { i32, i32, i32, i32, i32, i32 }
%struct.MB_MODE_INFO = type <{ i8, i8, i8, i8, i32, [2 x %union.int_mv], [2 x i8], [2 x i8], %union.int_interpfilters, i8, i8, i8, i8, %struct.WarpedMotionParams, i8, i8, [6 x i8], %struct.INTERINTER_COMPOUND_DATA, [2 x i8], %struct.FILTER_INTRA_MODE_INFO, i8, i8, %struct.PALETTE_MODE_INFO, i8, i8, [16 x i8], i8, [4 x i8], i16, [7 x i8] }>
%union.int_mv = type { i32 }
%union.int_interpfilters = type { i32 }
%struct.WarpedMotionParams = type { [8 x i32], i16, i16, i16, i16, i8, i8 }
%struct.INTERINTER_COMPOUND_DATA = type { i8*, i8, i8, i8, i8 }
%struct.FILTER_INTRA_MODE_INFO = type { i8, i8 }
%struct.PALETTE_MODE_INFO = type { [24 x i16], [2 x i8] }
%struct.scale_factors = type { i32, i32, i32, i32, i32 (i32, %struct.scale_factors*)*, i32 (i32, %struct.scale_factors*)* }
%struct.yv12_buffer_config = type { %union.anon, %union.anon.0, %union.anon.2, %union.anon.4, %union.anon.6, %union.anon.8, i32, [3 x i8*], i8*, i32, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, %struct.aom_metadata_array* }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, i32 }
%union.anon.0 = type { %struct.anon.1 }
%struct.anon.1 = type { i32, i32 }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { i32, i32 }
%union.anon.4 = type { %struct.anon.5 }
%struct.anon.5 = type { i32, i32 }
%union.anon.6 = type { %struct.anon.7 }
%struct.anon.7 = type { i32, i32 }
%union.anon.8 = type { %struct.anon.9 }
%struct.anon.9 = type { i8*, i8*, i8* }
%struct.aom_metadata_array = type { i64, %struct.aom_metadata** }
%struct.aom_metadata = type { i32, i8*, i64, i32 }
%struct.WienerInfo = type { [8 x i16], [8 x i16] }
%struct.SgrprojInfo = type { i32, [2 x i32] }
%struct.candidate_mv = type { %union.int_mv, %union.int_mv }
%struct.frame_contexts = type { [5 x [13 x [3 x i16]]], [5 x [2 x [9 x [3 x i16]]]], [2 x [3 x [3 x i16]]], [2 x [2 x [6 x i16]]], [2 x [2 x [7 x i16]]], [2 x [2 x [8 x i16]]], [2 x [2 x [9 x i16]]], [2 x [2 x [10 x i16]]], [2 x [2 x [11 x i16]]], [2 x [2 x [12 x i16]]], [5 x [2 x [4 x [4 x i16]]]], [5 x [2 x [42 x [5 x i16]]]], [5 x [2 x [21 x [5 x i16]]]], [6 x [3 x i16]], [2 x [3 x i16]], [6 x [3 x i16]], [3 x [3 x i16]], [8 x [9 x i16]], [22 x [3 x i16]], [22 x [17 x i16]], [4 x [3 x i16]], [22 x [3 x i16]], [4 x [5 x i16]], [22 x [4 x i16]], [22 x [3 x i16]], [7 x [8 x i16]], [7 x [8 x i16]], [7 x [5 x [9 x i16]]], [7 x [5 x [9 x i16]]], [7 x [3 x [3 x i16]]], [2 x [3 x i16]], [5 x [3 x i16]], [3 x [6 x [3 x i16]]], [5 x [3 x i16]], [3 x [3 x [3 x i16]]], [3 x [3 x [3 x i16]]], [3 x [2 x [3 x i16]]], [21 x [3 x i16]], [6 x [3 x i16]], [6 x [3 x i16]], [3 x [3 x i16]], [3 x [3 x i16]], [4 x [3 x i16]], %struct.nmv_context, %struct.nmv_context, [3 x i16], %struct.segmentation_probs, [22 x [3 x i16]], [6 x i16], [4 x i16], [3 x i16], [3 x i16], [4 x [14 x i16]], [2 x [13 x [15 x i16]]], [20 x [11 x i16]], [16 x [4 x i16]], [5 x [5 x [14 x i16]]], [8 x [8 x i16]], [4 x [3 x [4 x i16]]], [5 x i16], [4 x [5 x i16]], [5 x i16], [3 x [4 x [13 x [17 x i16]]]], [4 x [4 x [17 x i16]]], [9 x i16], [6 x [17 x i16]], i32 }
%struct.nmv_context = type { [5 x i16], [2 x %struct.nmv_component] }
%struct.nmv_component = type { [12 x i16], [2 x [5 x i16]], [5 x i16], [3 x i16], [3 x i16], [3 x i16], [3 x i16], [10 x [3 x i16]] }
%struct.segmentation_probs = type { [9 x i16], [3 x [3 x i16]], [3 x [9 x i16]] }
%struct.aom_internal_error_info = type { i32, i32, [200 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }

@tx_size_wide = internal unnamed_addr constant [19 x i32] [i32 4, i32 8, i32 16, i32 32, i32 64, i32 4, i32 8, i32 8, i32 16, i32 16, i32 32, i32 32, i32 64, i32 4, i32 16, i32 8, i32 32, i32 16, i32 64], align 16
@tx_size_high = internal unnamed_addr constant [19 x i32] [i32 4, i32 8, i32 16, i32 32, i32 64, i32 8, i32 4, i32 16, i32 8, i32 32, i32 16, i32 64, i32 32, i32 16, i32 4, i32 32, i32 8, i32 64, i32 16], align 16
@cfl_get_subtract_average_fn_c.sub_avg = internal unnamed_addr constant [19 x void (i16*, i16*)*] [void (i16*, i16*)* @cfl_subtract_average_4x4_c, void (i16*, i16*)* @cfl_subtract_average_8x8_c, void (i16*, i16*)* @cfl_subtract_average_16x16_c, void (i16*, i16*)* @cfl_subtract_average_32x32_c, void (i16*, i16*)* null, void (i16*, i16*)* @cfl_subtract_average_4x8_c, void (i16*, i16*)* @cfl_subtract_average_8x4_c, void (i16*, i16*)* @cfl_subtract_average_8x16_c, void (i16*, i16*)* @cfl_subtract_average_16x8_c, void (i16*, i16*)* @cfl_subtract_average_16x32_c, void (i16*, i16*)* @cfl_subtract_average_32x16_c, void (i16*, i16*)* null, void (i16*, i16*)* null, void (i16*, i16*)* @cfl_subtract_average_4x16_c, void (i16*, i16*)* @cfl_subtract_average_16x4_c, void (i16*, i16*)* @cfl_subtract_average_8x32_c, void (i16*, i16*)* @cfl_subtract_average_32x8_c, void (i16*, i16*)* null, void (i16*, i16*)* null], align 16
@cfl_get_predict_lbd_fn_c.pred = internal unnamed_addr constant [19 x void (i16*, i8*, i32, i32)*] [void (i16*, i8*, i32, i32)* @cfl_predict_lbd_4x4_c, void (i16*, i8*, i32, i32)* @cfl_predict_lbd_8x8_c, void (i16*, i8*, i32, i32)* @cfl_predict_lbd_16x16_c, void (i16*, i8*, i32, i32)* @cfl_predict_lbd_32x32_c, void (i16*, i8*, i32, i32)* null, void (i16*, i8*, i32, i32)* @cfl_predict_lbd_4x8_c, void (i16*, i8*, i32, i32)* @cfl_predict_lbd_8x4_c, void (i16*, i8*, i32, i32)* @cfl_predict_lbd_8x16_c, void (i16*, i8*, i32, i32)* @cfl_predict_lbd_16x8_c, void (i16*, i8*, i32, i32)* @cfl_predict_lbd_16x32_c, void (i16*, i8*, i32, i32)* @cfl_predict_lbd_32x16_c, void (i16*, i8*, i32, i32)* null, void (i16*, i8*, i32, i32)* null, void (i16*, i8*, i32, i32)* @cfl_predict_lbd_4x16_c, void (i16*, i8*, i32, i32)* @cfl_predict_lbd_16x4_c, void (i16*, i8*, i32, i32)* @cfl_predict_lbd_8x32_c, void (i16*, i8*, i32, i32)* @cfl_predict_lbd_32x8_c, void (i16*, i8*, i32, i32)* null, void (i16*, i8*, i32, i32)* null], align 16
@cfl_get_predict_lbd_fn = external local_unnamed_addr global void (i16*, i8*, i32, i32)* (i8)*, align 8
@cfl_get_luma_subsampling_420_lbd_c.subfn_420 = internal unnamed_addr constant [19 x void (i8*, i32, i16*)*] [void (i8*, i32, i16*)* @cfl_subsample_lbd_420_4x4_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_420_8x8_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_420_16x16_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_420_32x32_c, void (i8*, i32, i16*)* null, void (i8*, i32, i16*)* @cfl_subsample_lbd_420_4x8_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_420_8x4_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_420_8x16_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_420_16x8_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_420_16x32_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_420_32x16_c, void (i8*, i32, i16*)* null, void (i8*, i32, i16*)* null, void (i8*, i32, i16*)* @cfl_subsample_lbd_420_4x16_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_420_16x4_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_420_8x32_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_420_32x8_c, void (i8*, i32, i16*)* null, void (i8*, i32, i16*)* null], align 16
@cfl_get_luma_subsampling_422_lbd_c.subfn_422 = internal unnamed_addr constant [19 x void (i8*, i32, i16*)*] [void (i8*, i32, i16*)* @cfl_subsample_lbd_422_4x4_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_422_8x8_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_422_16x16_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_422_32x32_c, void (i8*, i32, i16*)* null, void (i8*, i32, i16*)* @cfl_subsample_lbd_422_4x8_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_422_8x4_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_422_8x16_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_422_16x8_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_422_16x32_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_422_32x16_c, void (i8*, i32, i16*)* null, void (i8*, i32, i16*)* null, void (i8*, i32, i16*)* @cfl_subsample_lbd_422_4x16_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_422_16x4_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_422_8x32_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_422_32x8_c, void (i8*, i32, i16*)* null, void (i8*, i32, i16*)* null], align 16
@cfl_get_luma_subsampling_444_lbd_c.subfn_444 = internal unnamed_addr constant [19 x void (i8*, i32, i16*)*] [void (i8*, i32, i16*)* @cfl_subsample_lbd_444_4x4_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_444_8x8_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_444_16x16_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_444_32x32_c, void (i8*, i32, i16*)* null, void (i8*, i32, i16*)* @cfl_subsample_lbd_444_4x8_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_444_8x4_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_444_8x16_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_444_16x8_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_444_16x32_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_444_32x16_c, void (i8*, i32, i16*)* null, void (i8*, i32, i16*)* null, void (i8*, i32, i16*)* @cfl_subsample_lbd_444_4x16_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_444_16x4_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_444_8x32_c, void (i8*, i32, i16*)* @cfl_subsample_lbd_444_32x8_c, void (i8*, i32, i16*)* null, void (i8*, i32, i16*)* null], align 16
@block_size_high = internal unnamed_addr constant [22 x i8] c"\04\08\04\08\10\08\10 \10 @ @\80@\80\10\04 \08@\10", align 16
@block_size_wide = internal unnamed_addr constant [22 x i8] c"\04\04\08\08\08\10\10\10   @@@\80\80\04\10\08 \10@", align 16
@cfl_get_subtract_average_fn = external local_unnamed_addr global void (i16*, i16*)* (i8)*, align 8
@cfl_get_luma_subsampling_420_lbd = external local_unnamed_addr global void (i8*, i32, i16*)* (i8)*, align 8
@cfl_get_luma_subsampling_422_lbd = external local_unnamed_addr global void (i8*, i32, i16*)* (i8)*, align 8
@cfl_get_luma_subsampling_444_lbd = external local_unnamed_addr global void (i8*, i32, i16*)* (i8)*, align 8
@tx_size_wide_log2 = internal unnamed_addr constant [19 x i32] [i32 2, i32 3, i32 4, i32 5, i32 6, i32 2, i32 3, i32 3, i32 4, i32 4, i32 5, i32 5, i32 6, i32 2, i32 4, i32 3, i32 5, i32 4, i32 6], align 16
@tx_size_high_log2 = internal unnamed_addr constant [19 x i32] [i32 2, i32 3, i32 4, i32 5, i32 6, i32 3, i32 2, i32 4, i32 3, i32 5, i32 4, i32 6, i32 5, i32 4, i32 2, i32 5, i32 3, i32 6, i32 4], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @cfl_init(%struct.cfl_ctx* nocapture, %struct.SequenceHeader* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %1, i64 0, i32 32
  %4 = bitcast %struct.cfl_ctx* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 4096, i1 false)
  %5 = load i32, i32* %3, align 8
  %6 = getelementptr inbounds %struct.cfl_ctx, %struct.cfl_ctx* %0, i64 0, i32 8
  store i32 %5, i32* %6, align 4
  %7 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %1, i64 0, i32 33
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.cfl_ctx, %struct.cfl_ctx* %0, i64 0, i32 9
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds %struct.cfl_ctx, %struct.cfl_ctx* %0, i64 0, i32 7
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %struct.cfl_ctx, %struct.cfl_ctx* %0, i64 0, i32 10
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %struct.cfl_ctx, %struct.cfl_ctx* %0, i64 0, i32 3
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %struct.cfl_ctx, %struct.cfl_ctx* %0, i64 0, i32 2, i64 0
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %struct.cfl_ctx, %struct.cfl_ctx* %0, i64 0, i32 2, i64 1
  store i32 0, i32* %14, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @cfl_store_dc_pred(%struct.macroblockd* nocapture, i8* nocapture readonly, i8 zeroext, i32) local_unnamed_addr #0 {
  %5 = zext i8 %2 to i64
  %6 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 4, i64 %5, i64 0
  %7 = bitcast i16* %6 to i8*
  %8 = sext i32 %3 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 1 %1, i64 %8, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @cfl_load_dc_pred(%struct.macroblockd* nocapture readonly, i8* nocapture, i32, i8 zeroext, i8 zeroext) local_unnamed_addr #0 {
  %6 = zext i8 %3 to i64
  %7 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_high, i64 0, i64 %6
  %8 = load i32, i32* %7, align 4
  %9 = zext i8 %4 to i64
  %10 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 4, i64 %9, i64 0
  %11 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_wide, i64 0, i64 %6
  %12 = load i32, i32* %11, align 4
  %13 = bitcast i16* %10 to i8*
  %14 = sext i32 %12 to i64
  %15 = sext i32 %2 to i64
  %16 = add i32 %8, -1
  %17 = icmp ult i32 %16, 3
  br i1 %17, label %29, label %18

18:                                               ; preds = %5
  %19 = and i32 %8, -4
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi i8* [ %1, %18 ], [ %26, %20 ]
  %22 = phi i32 [ %19, %18 ], [ %27, %20 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* align 2 %13, i64 %14, i1 false) #4
  %23 = getelementptr inbounds i8, i8* %21, i64 %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 2 %13, i64 %14, i1 false) #4
  %24 = getelementptr inbounds i8, i8* %23, i64 %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 2 %13, i64 %14, i1 false) #4
  %25 = getelementptr inbounds i8, i8* %24, i64 %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 2 %13, i64 %14, i1 false) #4
  %26 = getelementptr inbounds i8, i8* %25, i64 %15
  %27 = add i32 %22, -4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %20

29:                                               ; preds = %5, %20
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subtract_average_4x4_c(i16* nocapture readonly, i16* nocapture) #2 {
  %3 = load i16, i16* %0, align 2
  %4 = zext i16 %3 to i32
  %5 = add nuw nsw i32 %4, 8
  %6 = getelementptr inbounds i16, i16* %0, i64 1
  %7 = load i16, i16* %6, align 2
  %8 = zext i16 %7 to i32
  %9 = add nuw nsw i32 %5, %8
  %10 = getelementptr inbounds i16, i16* %0, i64 2
  %11 = load i16, i16* %10, align 2
  %12 = zext i16 %11 to i32
  %13 = add nuw nsw i32 %9, %12
  %14 = getelementptr inbounds i16, i16* %0, i64 3
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i32
  %17 = add nuw nsw i32 %13, %16
  %18 = getelementptr inbounds i16, i16* %0, i64 32
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = add nuw nsw i32 %17, %20
  %22 = getelementptr inbounds i16, i16* %0, i64 33
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = add nuw nsw i32 %21, %24
  %26 = getelementptr inbounds i16, i16* %0, i64 34
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = add nuw nsw i32 %25, %28
  %30 = getelementptr inbounds i16, i16* %0, i64 35
  %31 = load i16, i16* %30, align 2
  %32 = zext i16 %31 to i32
  %33 = add nuw nsw i32 %29, %32
  %34 = getelementptr inbounds i16, i16* %0, i64 64
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  %37 = add nuw nsw i32 %33, %36
  %38 = getelementptr inbounds i16, i16* %0, i64 65
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = add nuw nsw i32 %37, %40
  %42 = getelementptr inbounds i16, i16* %0, i64 66
  %43 = load i16, i16* %42, align 2
  %44 = zext i16 %43 to i32
  %45 = add nuw nsw i32 %41, %44
  %46 = getelementptr inbounds i16, i16* %0, i64 67
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = add nuw nsw i32 %45, %48
  %50 = getelementptr inbounds i16, i16* %0, i64 96
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = add nuw nsw i32 %49, %52
  %54 = getelementptr inbounds i16, i16* %0, i64 97
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add nuw nsw i32 %53, %56
  %58 = getelementptr inbounds i16, i16* %0, i64 98
  %59 = load i16, i16* %58, align 2
  %60 = zext i16 %59 to i32
  %61 = add nuw nsw i32 %57, %60
  %62 = getelementptr inbounds i16, i16* %0, i64 99
  %63 = load i16, i16* %62, align 2
  %64 = zext i16 %63 to i32
  %65 = add nuw nsw i32 %61, %64
  %66 = lshr i32 %65, 4
  %67 = trunc i32 %66 to i16
  %68 = sub i16 %3, %67
  store i16 %68, i16* %1, align 2
  %69 = load i16, i16* %6, align 2
  %70 = sub i16 %69, %67
  %71 = getelementptr inbounds i16, i16* %1, i64 1
  store i16 %70, i16* %71, align 2
  %72 = load i16, i16* %10, align 2
  %73 = sub i16 %72, %67
  %74 = getelementptr inbounds i16, i16* %1, i64 2
  store i16 %73, i16* %74, align 2
  %75 = load i16, i16* %14, align 2
  %76 = sub i16 %75, %67
  %77 = getelementptr inbounds i16, i16* %1, i64 3
  store i16 %76, i16* %77, align 2
  %78 = getelementptr inbounds i16, i16* %1, i64 32
  %79 = load i16, i16* %18, align 2
  %80 = sub i16 %79, %67
  store i16 %80, i16* %78, align 2
  %81 = load i16, i16* %22, align 2
  %82 = sub i16 %81, %67
  %83 = getelementptr inbounds i16, i16* %1, i64 33
  store i16 %82, i16* %83, align 2
  %84 = load i16, i16* %26, align 2
  %85 = sub i16 %84, %67
  %86 = getelementptr inbounds i16, i16* %1, i64 34
  store i16 %85, i16* %86, align 2
  %87 = load i16, i16* %30, align 2
  %88 = sub i16 %87, %67
  %89 = getelementptr inbounds i16, i16* %1, i64 35
  store i16 %88, i16* %89, align 2
  %90 = getelementptr inbounds i16, i16* %1, i64 64
  %91 = load i16, i16* %34, align 2
  %92 = sub i16 %91, %67
  store i16 %92, i16* %90, align 2
  %93 = load i16, i16* %38, align 2
  %94 = sub i16 %93, %67
  %95 = getelementptr inbounds i16, i16* %1, i64 65
  store i16 %94, i16* %95, align 2
  %96 = load i16, i16* %42, align 2
  %97 = sub i16 %96, %67
  %98 = getelementptr inbounds i16, i16* %1, i64 66
  store i16 %97, i16* %98, align 2
  %99 = load i16, i16* %46, align 2
  %100 = sub i16 %99, %67
  %101 = getelementptr inbounds i16, i16* %1, i64 67
  store i16 %100, i16* %101, align 2
  %102 = getelementptr inbounds i16, i16* %1, i64 96
  %103 = load i16, i16* %50, align 2
  %104 = sub i16 %103, %67
  store i16 %104, i16* %102, align 2
  %105 = load i16, i16* %54, align 2
  %106 = sub i16 %105, %67
  %107 = getelementptr inbounds i16, i16* %1, i64 97
  store i16 %106, i16* %107, align 2
  %108 = load i16, i16* %58, align 2
  %109 = sub i16 %108, %67
  %110 = getelementptr inbounds i16, i16* %1, i64 98
  store i16 %109, i16* %110, align 2
  %111 = load i16, i16* %62, align 2
  %112 = sub i16 %111, %67
  %113 = getelementptr inbounds i16, i16* %1, i64 99
  store i16 %112, i16* %113, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subtract_average_4x8_c(i16* nocapture readonly, i16* nocapture) #2 {
  %3 = load i16, i16* %0, align 2
  %4 = zext i16 %3 to i32
  %5 = add nuw nsw i32 %4, 16
  %6 = getelementptr inbounds i16, i16* %0, i64 1
  %7 = load i16, i16* %6, align 2
  %8 = zext i16 %7 to i32
  %9 = add nuw nsw i32 %5, %8
  %10 = getelementptr inbounds i16, i16* %0, i64 2
  %11 = load i16, i16* %10, align 2
  %12 = zext i16 %11 to i32
  %13 = add nuw nsw i32 %9, %12
  %14 = getelementptr inbounds i16, i16* %0, i64 3
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i32
  %17 = add nuw nsw i32 %13, %16
  %18 = getelementptr inbounds i16, i16* %0, i64 32
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = add nuw nsw i32 %17, %20
  %22 = getelementptr inbounds i16, i16* %0, i64 33
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = add nuw nsw i32 %21, %24
  %26 = getelementptr inbounds i16, i16* %0, i64 34
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = add nuw nsw i32 %25, %28
  %30 = getelementptr inbounds i16, i16* %0, i64 35
  %31 = load i16, i16* %30, align 2
  %32 = zext i16 %31 to i32
  %33 = add nuw nsw i32 %29, %32
  %34 = getelementptr inbounds i16, i16* %0, i64 64
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  %37 = add nuw nsw i32 %33, %36
  %38 = getelementptr inbounds i16, i16* %0, i64 65
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = add nuw nsw i32 %37, %40
  %42 = getelementptr inbounds i16, i16* %0, i64 66
  %43 = load i16, i16* %42, align 2
  %44 = zext i16 %43 to i32
  %45 = add nuw nsw i32 %41, %44
  %46 = getelementptr inbounds i16, i16* %0, i64 67
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = add nuw nsw i32 %45, %48
  %50 = getelementptr inbounds i16, i16* %0, i64 96
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = add nuw nsw i32 %49, %52
  %54 = getelementptr inbounds i16, i16* %0, i64 97
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add nuw nsw i32 %53, %56
  %58 = getelementptr inbounds i16, i16* %0, i64 98
  %59 = load i16, i16* %58, align 2
  %60 = zext i16 %59 to i32
  %61 = add nuw nsw i32 %57, %60
  %62 = getelementptr inbounds i16, i16* %0, i64 99
  %63 = load i16, i16* %62, align 2
  %64 = zext i16 %63 to i32
  %65 = add nuw nsw i32 %61, %64
  %66 = getelementptr inbounds i16, i16* %0, i64 128
  %67 = load i16, i16* %66, align 2
  %68 = zext i16 %67 to i32
  %69 = add nuw nsw i32 %65, %68
  %70 = getelementptr inbounds i16, i16* %0, i64 129
  %71 = load i16, i16* %70, align 2
  %72 = zext i16 %71 to i32
  %73 = add nuw nsw i32 %69, %72
  %74 = getelementptr inbounds i16, i16* %0, i64 130
  %75 = load i16, i16* %74, align 2
  %76 = zext i16 %75 to i32
  %77 = add nuw nsw i32 %73, %76
  %78 = getelementptr inbounds i16, i16* %0, i64 131
  %79 = load i16, i16* %78, align 2
  %80 = zext i16 %79 to i32
  %81 = add nuw nsw i32 %77, %80
  %82 = getelementptr inbounds i16, i16* %0, i64 160
  %83 = load i16, i16* %82, align 2
  %84 = zext i16 %83 to i32
  %85 = add nuw nsw i32 %81, %84
  %86 = getelementptr inbounds i16, i16* %0, i64 161
  %87 = load i16, i16* %86, align 2
  %88 = zext i16 %87 to i32
  %89 = add nuw nsw i32 %85, %88
  %90 = getelementptr inbounds i16, i16* %0, i64 162
  %91 = load i16, i16* %90, align 2
  %92 = zext i16 %91 to i32
  %93 = add nuw nsw i32 %89, %92
  %94 = getelementptr inbounds i16, i16* %0, i64 163
  %95 = load i16, i16* %94, align 2
  %96 = zext i16 %95 to i32
  %97 = add nuw nsw i32 %93, %96
  %98 = getelementptr inbounds i16, i16* %0, i64 192
  %99 = load i16, i16* %98, align 2
  %100 = zext i16 %99 to i32
  %101 = add nuw nsw i32 %97, %100
  %102 = getelementptr inbounds i16, i16* %0, i64 193
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i32
  %105 = add nuw nsw i32 %101, %104
  %106 = getelementptr inbounds i16, i16* %0, i64 194
  %107 = load i16, i16* %106, align 2
  %108 = zext i16 %107 to i32
  %109 = add nuw nsw i32 %105, %108
  %110 = getelementptr inbounds i16, i16* %0, i64 195
  %111 = load i16, i16* %110, align 2
  %112 = zext i16 %111 to i32
  %113 = add nuw nsw i32 %109, %112
  %114 = getelementptr inbounds i16, i16* %0, i64 224
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = add nuw nsw i32 %113, %116
  %118 = getelementptr inbounds i16, i16* %0, i64 225
  %119 = load i16, i16* %118, align 2
  %120 = zext i16 %119 to i32
  %121 = add nuw nsw i32 %117, %120
  %122 = getelementptr inbounds i16, i16* %0, i64 226
  %123 = load i16, i16* %122, align 2
  %124 = zext i16 %123 to i32
  %125 = add nuw nsw i32 %121, %124
  %126 = getelementptr inbounds i16, i16* %0, i64 227
  %127 = load i16, i16* %126, align 2
  %128 = zext i16 %127 to i32
  %129 = add nuw nsw i32 %125, %128
  %130 = lshr i32 %129, 5
  %131 = trunc i32 %130 to i16
  %132 = load i16, i16* %0, align 2
  %133 = sub i16 %132, %131
  store i16 %133, i16* %1, align 2
  %134 = load i16, i16* %6, align 2
  %135 = sub i16 %134, %131
  %136 = getelementptr inbounds i16, i16* %1, i64 1
  store i16 %135, i16* %136, align 2
  %137 = load i16, i16* %10, align 2
  %138 = sub i16 %137, %131
  %139 = getelementptr inbounds i16, i16* %1, i64 2
  store i16 %138, i16* %139, align 2
  %140 = load i16, i16* %14, align 2
  %141 = sub i16 %140, %131
  %142 = getelementptr inbounds i16, i16* %1, i64 3
  store i16 %141, i16* %142, align 2
  %143 = getelementptr inbounds i16, i16* %1, i64 32
  %144 = load i16, i16* %18, align 2
  %145 = sub i16 %144, %131
  store i16 %145, i16* %143, align 2
  %146 = load i16, i16* %22, align 2
  %147 = sub i16 %146, %131
  %148 = getelementptr inbounds i16, i16* %1, i64 33
  store i16 %147, i16* %148, align 2
  %149 = load i16, i16* %26, align 2
  %150 = sub i16 %149, %131
  %151 = getelementptr inbounds i16, i16* %1, i64 34
  store i16 %150, i16* %151, align 2
  %152 = load i16, i16* %30, align 2
  %153 = sub i16 %152, %131
  %154 = getelementptr inbounds i16, i16* %1, i64 35
  store i16 %153, i16* %154, align 2
  %155 = getelementptr inbounds i16, i16* %1, i64 64
  %156 = load i16, i16* %34, align 2
  %157 = sub i16 %156, %131
  store i16 %157, i16* %155, align 2
  %158 = load i16, i16* %38, align 2
  %159 = sub i16 %158, %131
  %160 = getelementptr inbounds i16, i16* %1, i64 65
  store i16 %159, i16* %160, align 2
  %161 = load i16, i16* %42, align 2
  %162 = sub i16 %161, %131
  %163 = getelementptr inbounds i16, i16* %1, i64 66
  store i16 %162, i16* %163, align 2
  %164 = load i16, i16* %46, align 2
  %165 = sub i16 %164, %131
  %166 = getelementptr inbounds i16, i16* %1, i64 67
  store i16 %165, i16* %166, align 2
  %167 = getelementptr inbounds i16, i16* %1, i64 96
  %168 = load i16, i16* %50, align 2
  %169 = sub i16 %168, %131
  store i16 %169, i16* %167, align 2
  %170 = load i16, i16* %54, align 2
  %171 = sub i16 %170, %131
  %172 = getelementptr inbounds i16, i16* %1, i64 97
  store i16 %171, i16* %172, align 2
  %173 = load i16, i16* %58, align 2
  %174 = sub i16 %173, %131
  %175 = getelementptr inbounds i16, i16* %1, i64 98
  store i16 %174, i16* %175, align 2
  %176 = load i16, i16* %62, align 2
  %177 = sub i16 %176, %131
  %178 = getelementptr inbounds i16, i16* %1, i64 99
  store i16 %177, i16* %178, align 2
  %179 = getelementptr inbounds i16, i16* %1, i64 128
  %180 = load i16, i16* %66, align 2
  %181 = sub i16 %180, %131
  store i16 %181, i16* %179, align 2
  %182 = load i16, i16* %70, align 2
  %183 = sub i16 %182, %131
  %184 = getelementptr inbounds i16, i16* %1, i64 129
  store i16 %183, i16* %184, align 2
  %185 = load i16, i16* %74, align 2
  %186 = sub i16 %185, %131
  %187 = getelementptr inbounds i16, i16* %1, i64 130
  store i16 %186, i16* %187, align 2
  %188 = load i16, i16* %78, align 2
  %189 = sub i16 %188, %131
  %190 = getelementptr inbounds i16, i16* %1, i64 131
  store i16 %189, i16* %190, align 2
  %191 = getelementptr inbounds i16, i16* %1, i64 160
  %192 = load i16, i16* %82, align 2
  %193 = sub i16 %192, %131
  store i16 %193, i16* %191, align 2
  %194 = load i16, i16* %86, align 2
  %195 = sub i16 %194, %131
  %196 = getelementptr inbounds i16, i16* %1, i64 161
  store i16 %195, i16* %196, align 2
  %197 = load i16, i16* %90, align 2
  %198 = sub i16 %197, %131
  %199 = getelementptr inbounds i16, i16* %1, i64 162
  store i16 %198, i16* %199, align 2
  %200 = load i16, i16* %94, align 2
  %201 = sub i16 %200, %131
  %202 = getelementptr inbounds i16, i16* %1, i64 163
  store i16 %201, i16* %202, align 2
  %203 = getelementptr inbounds i16, i16* %1, i64 192
  %204 = load i16, i16* %98, align 2
  %205 = sub i16 %204, %131
  store i16 %205, i16* %203, align 2
  %206 = load i16, i16* %102, align 2
  %207 = sub i16 %206, %131
  %208 = getelementptr inbounds i16, i16* %1, i64 193
  store i16 %207, i16* %208, align 2
  %209 = load i16, i16* %106, align 2
  %210 = sub i16 %209, %131
  %211 = getelementptr inbounds i16, i16* %1, i64 194
  store i16 %210, i16* %211, align 2
  %212 = load i16, i16* %110, align 2
  %213 = sub i16 %212, %131
  %214 = getelementptr inbounds i16, i16* %1, i64 195
  store i16 %213, i16* %214, align 2
  %215 = getelementptr inbounds i16, i16* %1, i64 224
  %216 = load i16, i16* %114, align 2
  %217 = sub i16 %216, %131
  store i16 %217, i16* %215, align 2
  %218 = load i16, i16* %118, align 2
  %219 = sub i16 %218, %131
  %220 = getelementptr inbounds i16, i16* %1, i64 225
  store i16 %219, i16* %220, align 2
  %221 = load i16, i16* %122, align 2
  %222 = sub i16 %221, %131
  %223 = getelementptr inbounds i16, i16* %1, i64 226
  store i16 %222, i16* %223, align 2
  %224 = load i16, i16* %126, align 2
  %225 = sub i16 %224, %131
  %226 = getelementptr inbounds i16, i16* %1, i64 227
  store i16 %225, i16* %226, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subtract_average_4x16_c(i16* nocapture readonly, i16* nocapture) #2 {
  %3 = load i16, i16* %0, align 2
  %4 = zext i16 %3 to i32
  %5 = add nuw nsw i32 %4, 32
  %6 = getelementptr inbounds i16, i16* %0, i64 1
  %7 = load i16, i16* %6, align 2
  %8 = zext i16 %7 to i32
  %9 = add nuw nsw i32 %5, %8
  %10 = getelementptr inbounds i16, i16* %0, i64 2
  %11 = load i16, i16* %10, align 2
  %12 = zext i16 %11 to i32
  %13 = add nuw nsw i32 %9, %12
  %14 = getelementptr inbounds i16, i16* %0, i64 3
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i32
  %17 = add nuw nsw i32 %13, %16
  %18 = getelementptr inbounds i16, i16* %0, i64 32
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = add nuw nsw i32 %17, %20
  %22 = getelementptr inbounds i16, i16* %0, i64 33
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = add nuw nsw i32 %21, %24
  %26 = getelementptr inbounds i16, i16* %0, i64 34
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = add nsw i32 %25, %28
  %30 = getelementptr inbounds i16, i16* %0, i64 35
  %31 = load i16, i16* %30, align 2
  %32 = zext i16 %31 to i32
  %33 = add nsw i32 %29, %32
  %34 = getelementptr inbounds i16, i16* %0, i64 64
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  %37 = add nsw i32 %33, %36
  %38 = getelementptr inbounds i16, i16* %0, i64 65
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %37, %40
  %42 = getelementptr inbounds i16, i16* %0, i64 66
  %43 = load i16, i16* %42, align 2
  %44 = zext i16 %43 to i32
  %45 = add nsw i32 %41, %44
  %46 = getelementptr inbounds i16, i16* %0, i64 67
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = add nsw i32 %45, %48
  %50 = getelementptr inbounds i16, i16* %0, i64 96
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %49, %52
  %54 = getelementptr inbounds i16, i16* %0, i64 97
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add nsw i32 %53, %56
  %58 = getelementptr inbounds i16, i16* %0, i64 98
  %59 = load i16, i16* %58, align 2
  %60 = zext i16 %59 to i32
  %61 = add nsw i32 %57, %60
  %62 = getelementptr inbounds i16, i16* %0, i64 99
  %63 = load i16, i16* %62, align 2
  %64 = zext i16 %63 to i32
  %65 = add nsw i32 %61, %64
  %66 = getelementptr inbounds i16, i16* %0, i64 128
  %67 = load i16, i16* %66, align 2
  %68 = zext i16 %67 to i32
  %69 = add nsw i32 %65, %68
  %70 = getelementptr inbounds i16, i16* %0, i64 129
  %71 = load i16, i16* %70, align 2
  %72 = zext i16 %71 to i32
  %73 = add nsw i32 %69, %72
  %74 = getelementptr inbounds i16, i16* %0, i64 130
  %75 = load i16, i16* %74, align 2
  %76 = zext i16 %75 to i32
  %77 = add nsw i32 %73, %76
  %78 = getelementptr inbounds i16, i16* %0, i64 131
  %79 = load i16, i16* %78, align 2
  %80 = zext i16 %79 to i32
  %81 = add nsw i32 %77, %80
  %82 = getelementptr inbounds i16, i16* %0, i64 160
  %83 = load i16, i16* %82, align 2
  %84 = zext i16 %83 to i32
  %85 = add nsw i32 %81, %84
  %86 = getelementptr inbounds i16, i16* %0, i64 161
  %87 = load i16, i16* %86, align 2
  %88 = zext i16 %87 to i32
  %89 = add nsw i32 %85, %88
  %90 = getelementptr inbounds i16, i16* %0, i64 162
  %91 = load i16, i16* %90, align 2
  %92 = zext i16 %91 to i32
  %93 = add nsw i32 %89, %92
  %94 = getelementptr inbounds i16, i16* %0, i64 163
  %95 = load i16, i16* %94, align 2
  %96 = zext i16 %95 to i32
  %97 = add nsw i32 %93, %96
  %98 = getelementptr inbounds i16, i16* %0, i64 192
  %99 = load i16, i16* %98, align 2
  %100 = zext i16 %99 to i32
  %101 = add nsw i32 %97, %100
  %102 = getelementptr inbounds i16, i16* %0, i64 193
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i32
  %105 = add nsw i32 %101, %104
  %106 = getelementptr inbounds i16, i16* %0, i64 194
  %107 = load i16, i16* %106, align 2
  %108 = zext i16 %107 to i32
  %109 = add nsw i32 %105, %108
  %110 = getelementptr inbounds i16, i16* %0, i64 195
  %111 = load i16, i16* %110, align 2
  %112 = zext i16 %111 to i32
  %113 = add nsw i32 %109, %112
  %114 = getelementptr inbounds i16, i16* %0, i64 224
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = add nsw i32 %113, %116
  %118 = getelementptr inbounds i16, i16* %0, i64 225
  %119 = load i16, i16* %118, align 2
  %120 = zext i16 %119 to i32
  %121 = add nsw i32 %117, %120
  %122 = getelementptr inbounds i16, i16* %0, i64 226
  %123 = load i16, i16* %122, align 2
  %124 = zext i16 %123 to i32
  %125 = add nsw i32 %121, %124
  %126 = getelementptr inbounds i16, i16* %0, i64 227
  %127 = load i16, i16* %126, align 2
  %128 = zext i16 %127 to i32
  %129 = add nsw i32 %125, %128
  %130 = getelementptr inbounds i16, i16* %0, i64 256
  %131 = load i16, i16* %130, align 2
  %132 = zext i16 %131 to i32
  %133 = add nsw i32 %129, %132
  %134 = getelementptr inbounds i16, i16* %0, i64 257
  %135 = load i16, i16* %134, align 2
  %136 = zext i16 %135 to i32
  %137 = add nsw i32 %133, %136
  %138 = getelementptr inbounds i16, i16* %0, i64 258
  %139 = load i16, i16* %138, align 2
  %140 = zext i16 %139 to i32
  %141 = add nsw i32 %137, %140
  %142 = getelementptr inbounds i16, i16* %0, i64 259
  %143 = load i16, i16* %142, align 2
  %144 = zext i16 %143 to i32
  %145 = add nsw i32 %141, %144
  %146 = getelementptr inbounds i16, i16* %0, i64 288
  %147 = load i16, i16* %146, align 2
  %148 = zext i16 %147 to i32
  %149 = add nsw i32 %145, %148
  %150 = getelementptr inbounds i16, i16* %0, i64 289
  %151 = load i16, i16* %150, align 2
  %152 = zext i16 %151 to i32
  %153 = add nsw i32 %149, %152
  %154 = getelementptr inbounds i16, i16* %0, i64 290
  %155 = load i16, i16* %154, align 2
  %156 = zext i16 %155 to i32
  %157 = add nsw i32 %153, %156
  %158 = getelementptr inbounds i16, i16* %0, i64 291
  %159 = load i16, i16* %158, align 2
  %160 = zext i16 %159 to i32
  %161 = add nsw i32 %157, %160
  %162 = getelementptr inbounds i16, i16* %0, i64 320
  %163 = load i16, i16* %162, align 2
  %164 = zext i16 %163 to i32
  %165 = add nsw i32 %161, %164
  %166 = getelementptr inbounds i16, i16* %0, i64 321
  %167 = load i16, i16* %166, align 2
  %168 = zext i16 %167 to i32
  %169 = add nsw i32 %165, %168
  %170 = getelementptr inbounds i16, i16* %0, i64 322
  %171 = load i16, i16* %170, align 2
  %172 = zext i16 %171 to i32
  %173 = add nsw i32 %169, %172
  %174 = getelementptr inbounds i16, i16* %0, i64 323
  %175 = load i16, i16* %174, align 2
  %176 = zext i16 %175 to i32
  %177 = add nsw i32 %173, %176
  %178 = getelementptr inbounds i16, i16* %0, i64 352
  %179 = load i16, i16* %178, align 2
  %180 = zext i16 %179 to i32
  %181 = add nsw i32 %177, %180
  %182 = getelementptr inbounds i16, i16* %0, i64 353
  %183 = load i16, i16* %182, align 2
  %184 = zext i16 %183 to i32
  %185 = add nsw i32 %181, %184
  %186 = getelementptr inbounds i16, i16* %0, i64 354
  %187 = load i16, i16* %186, align 2
  %188 = zext i16 %187 to i32
  %189 = add nsw i32 %185, %188
  %190 = getelementptr inbounds i16, i16* %0, i64 355
  %191 = load i16, i16* %190, align 2
  %192 = zext i16 %191 to i32
  %193 = add nsw i32 %189, %192
  %194 = getelementptr inbounds i16, i16* %0, i64 384
  %195 = load i16, i16* %194, align 2
  %196 = zext i16 %195 to i32
  %197 = add nsw i32 %193, %196
  %198 = getelementptr inbounds i16, i16* %0, i64 385
  %199 = load i16, i16* %198, align 2
  %200 = zext i16 %199 to i32
  %201 = add nsw i32 %197, %200
  %202 = getelementptr inbounds i16, i16* %0, i64 386
  %203 = load i16, i16* %202, align 2
  %204 = zext i16 %203 to i32
  %205 = add nsw i32 %201, %204
  %206 = getelementptr inbounds i16, i16* %0, i64 387
  %207 = load i16, i16* %206, align 2
  %208 = zext i16 %207 to i32
  %209 = add nsw i32 %205, %208
  %210 = getelementptr inbounds i16, i16* %0, i64 416
  %211 = load i16, i16* %210, align 2
  %212 = zext i16 %211 to i32
  %213 = add nsw i32 %209, %212
  %214 = getelementptr inbounds i16, i16* %0, i64 417
  %215 = load i16, i16* %214, align 2
  %216 = zext i16 %215 to i32
  %217 = add nsw i32 %213, %216
  %218 = getelementptr inbounds i16, i16* %0, i64 418
  %219 = load i16, i16* %218, align 2
  %220 = zext i16 %219 to i32
  %221 = add nsw i32 %217, %220
  %222 = getelementptr inbounds i16, i16* %0, i64 419
  %223 = load i16, i16* %222, align 2
  %224 = zext i16 %223 to i32
  %225 = add nsw i32 %221, %224
  %226 = getelementptr inbounds i16, i16* %0, i64 448
  %227 = load i16, i16* %226, align 2
  %228 = zext i16 %227 to i32
  %229 = add nsw i32 %225, %228
  %230 = getelementptr inbounds i16, i16* %0, i64 449
  %231 = load i16, i16* %230, align 2
  %232 = zext i16 %231 to i32
  %233 = add nsw i32 %229, %232
  %234 = getelementptr inbounds i16, i16* %0, i64 450
  %235 = load i16, i16* %234, align 2
  %236 = zext i16 %235 to i32
  %237 = add nsw i32 %233, %236
  %238 = getelementptr inbounds i16, i16* %0, i64 451
  %239 = load i16, i16* %238, align 2
  %240 = zext i16 %239 to i32
  %241 = add nsw i32 %237, %240
  %242 = getelementptr inbounds i16, i16* %0, i64 480
  %243 = load i16, i16* %242, align 2
  %244 = zext i16 %243 to i32
  %245 = add nsw i32 %241, %244
  %246 = getelementptr inbounds i16, i16* %0, i64 481
  %247 = load i16, i16* %246, align 2
  %248 = zext i16 %247 to i32
  %249 = add nsw i32 %245, %248
  %250 = getelementptr inbounds i16, i16* %0, i64 482
  %251 = load i16, i16* %250, align 2
  %252 = zext i16 %251 to i32
  %253 = add nsw i32 %249, %252
  %254 = getelementptr inbounds i16, i16* %0, i64 483
  %255 = load i16, i16* %254, align 2
  %256 = zext i16 %255 to i32
  %257 = add nsw i32 %253, %256
  %258 = lshr i32 %257, 6
  %259 = trunc i32 %258 to i16
  br label %260

260:                                              ; preds = %260, %2
  %261 = phi i32 [ 0, %2 ], [ %296, %260 ]
  %262 = phi i16* [ %0, %2 ], [ %294, %260 ]
  %263 = phi i16* [ %1, %2 ], [ %295, %260 ]
  %264 = load i16, i16* %262, align 2
  %265 = sub i16 %264, %259
  store i16 %265, i16* %263, align 2
  %266 = getelementptr inbounds i16, i16* %262, i64 1
  %267 = load i16, i16* %266, align 2
  %268 = sub i16 %267, %259
  %269 = getelementptr inbounds i16, i16* %263, i64 1
  store i16 %268, i16* %269, align 2
  %270 = getelementptr inbounds i16, i16* %262, i64 2
  %271 = load i16, i16* %270, align 2
  %272 = sub i16 %271, %259
  %273 = getelementptr inbounds i16, i16* %263, i64 2
  store i16 %272, i16* %273, align 2
  %274 = getelementptr inbounds i16, i16* %262, i64 3
  %275 = load i16, i16* %274, align 2
  %276 = sub i16 %275, %259
  %277 = getelementptr inbounds i16, i16* %263, i64 3
  store i16 %276, i16* %277, align 2
  %278 = getelementptr inbounds i16, i16* %262, i64 32
  %279 = getelementptr inbounds i16, i16* %263, i64 32
  %280 = load i16, i16* %278, align 2
  %281 = sub i16 %280, %259
  store i16 %281, i16* %279, align 2
  %282 = getelementptr inbounds i16, i16* %262, i64 33
  %283 = load i16, i16* %282, align 2
  %284 = sub i16 %283, %259
  %285 = getelementptr inbounds i16, i16* %263, i64 33
  store i16 %284, i16* %285, align 2
  %286 = getelementptr inbounds i16, i16* %262, i64 34
  %287 = load i16, i16* %286, align 2
  %288 = sub i16 %287, %259
  %289 = getelementptr inbounds i16, i16* %263, i64 34
  store i16 %288, i16* %289, align 2
  %290 = getelementptr inbounds i16, i16* %262, i64 35
  %291 = load i16, i16* %290, align 2
  %292 = sub i16 %291, %259
  %293 = getelementptr inbounds i16, i16* %263, i64 35
  store i16 %292, i16* %293, align 2
  %294 = getelementptr inbounds i16, i16* %262, i64 64
  %295 = getelementptr inbounds i16, i16* %263, i64 64
  %296 = add nuw nsw i32 %261, 2
  %297 = icmp eq i32 %296, 16
  br i1 %297, label %298, label %260

298:                                              ; preds = %260
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subtract_average_8x4_c(i16* nocapture readonly, i16* nocapture) #2 {
  %3 = load i16, i16* %0, align 2
  %4 = zext i16 %3 to i32
  %5 = add nuw nsw i32 %4, 16
  %6 = getelementptr inbounds i16, i16* %0, i64 1
  %7 = load i16, i16* %6, align 2
  %8 = zext i16 %7 to i32
  %9 = add nuw nsw i32 %5, %8
  %10 = getelementptr inbounds i16, i16* %0, i64 2
  %11 = load i16, i16* %10, align 2
  %12 = zext i16 %11 to i32
  %13 = add nuw nsw i32 %9, %12
  %14 = getelementptr inbounds i16, i16* %0, i64 3
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i32
  %17 = add nuw nsw i32 %13, %16
  %18 = getelementptr inbounds i16, i16* %0, i64 4
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = add nuw nsw i32 %17, %20
  %22 = getelementptr inbounds i16, i16* %0, i64 5
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = add nuw nsw i32 %21, %24
  %26 = getelementptr inbounds i16, i16* %0, i64 6
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = add nuw nsw i32 %25, %28
  %30 = getelementptr inbounds i16, i16* %0, i64 7
  %31 = load i16, i16* %30, align 2
  %32 = zext i16 %31 to i32
  %33 = add nuw nsw i32 %29, %32
  %34 = getelementptr inbounds i16, i16* %0, i64 32
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  %37 = add nuw nsw i32 %33, %36
  %38 = getelementptr inbounds i16, i16* %0, i64 33
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = add nuw nsw i32 %37, %40
  %42 = getelementptr inbounds i16, i16* %0, i64 34
  %43 = load i16, i16* %42, align 2
  %44 = zext i16 %43 to i32
  %45 = add nuw nsw i32 %41, %44
  %46 = getelementptr inbounds i16, i16* %0, i64 35
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = add nuw nsw i32 %45, %48
  %50 = getelementptr inbounds i16, i16* %0, i64 36
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = add nuw nsw i32 %49, %52
  %54 = getelementptr inbounds i16, i16* %0, i64 37
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add nuw nsw i32 %53, %56
  %58 = getelementptr inbounds i16, i16* %0, i64 38
  %59 = load i16, i16* %58, align 2
  %60 = zext i16 %59 to i32
  %61 = add nuw nsw i32 %57, %60
  %62 = getelementptr inbounds i16, i16* %0, i64 39
  %63 = load i16, i16* %62, align 2
  %64 = zext i16 %63 to i32
  %65 = add nuw nsw i32 %61, %64
  %66 = getelementptr inbounds i16, i16* %0, i64 64
  %67 = load i16, i16* %66, align 2
  %68 = zext i16 %67 to i32
  %69 = add nuw nsw i32 %65, %68
  %70 = getelementptr inbounds i16, i16* %0, i64 65
  %71 = load i16, i16* %70, align 2
  %72 = zext i16 %71 to i32
  %73 = add nuw nsw i32 %69, %72
  %74 = getelementptr inbounds i16, i16* %0, i64 66
  %75 = load i16, i16* %74, align 2
  %76 = zext i16 %75 to i32
  %77 = add nuw nsw i32 %73, %76
  %78 = getelementptr inbounds i16, i16* %0, i64 67
  %79 = load i16, i16* %78, align 2
  %80 = zext i16 %79 to i32
  %81 = add nuw nsw i32 %77, %80
  %82 = getelementptr inbounds i16, i16* %0, i64 68
  %83 = load i16, i16* %82, align 2
  %84 = zext i16 %83 to i32
  %85 = add nuw nsw i32 %81, %84
  %86 = getelementptr inbounds i16, i16* %0, i64 69
  %87 = load i16, i16* %86, align 2
  %88 = zext i16 %87 to i32
  %89 = add nuw nsw i32 %85, %88
  %90 = getelementptr inbounds i16, i16* %0, i64 70
  %91 = load i16, i16* %90, align 2
  %92 = zext i16 %91 to i32
  %93 = add nuw nsw i32 %89, %92
  %94 = getelementptr inbounds i16, i16* %0, i64 71
  %95 = load i16, i16* %94, align 2
  %96 = zext i16 %95 to i32
  %97 = add nuw nsw i32 %93, %96
  %98 = getelementptr inbounds i16, i16* %0, i64 96
  %99 = load i16, i16* %98, align 2
  %100 = zext i16 %99 to i32
  %101 = add nuw nsw i32 %97, %100
  %102 = getelementptr inbounds i16, i16* %0, i64 97
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i32
  %105 = add nuw nsw i32 %101, %104
  %106 = getelementptr inbounds i16, i16* %0, i64 98
  %107 = load i16, i16* %106, align 2
  %108 = zext i16 %107 to i32
  %109 = add nuw nsw i32 %105, %108
  %110 = getelementptr inbounds i16, i16* %0, i64 99
  %111 = load i16, i16* %110, align 2
  %112 = zext i16 %111 to i32
  %113 = add nuw nsw i32 %109, %112
  %114 = getelementptr inbounds i16, i16* %0, i64 100
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = add nuw nsw i32 %113, %116
  %118 = getelementptr inbounds i16, i16* %0, i64 101
  %119 = load i16, i16* %118, align 2
  %120 = zext i16 %119 to i32
  %121 = add nuw nsw i32 %117, %120
  %122 = getelementptr inbounds i16, i16* %0, i64 102
  %123 = load i16, i16* %122, align 2
  %124 = zext i16 %123 to i32
  %125 = add nuw nsw i32 %121, %124
  %126 = getelementptr inbounds i16, i16* %0, i64 103
  %127 = load i16, i16* %126, align 2
  %128 = zext i16 %127 to i32
  %129 = add nuw nsw i32 %125, %128
  %130 = lshr i32 %129, 5
  %131 = trunc i32 %130 to i16
  %132 = load i16, i16* %0, align 2
  %133 = sub i16 %132, %131
  store i16 %133, i16* %1, align 2
  %134 = load i16, i16* %6, align 2
  %135 = sub i16 %134, %131
  %136 = getelementptr inbounds i16, i16* %1, i64 1
  store i16 %135, i16* %136, align 2
  %137 = load i16, i16* %10, align 2
  %138 = sub i16 %137, %131
  %139 = getelementptr inbounds i16, i16* %1, i64 2
  store i16 %138, i16* %139, align 2
  %140 = load i16, i16* %14, align 2
  %141 = sub i16 %140, %131
  %142 = getelementptr inbounds i16, i16* %1, i64 3
  store i16 %141, i16* %142, align 2
  %143 = load i16, i16* %18, align 2
  %144 = sub i16 %143, %131
  %145 = getelementptr inbounds i16, i16* %1, i64 4
  store i16 %144, i16* %145, align 2
  %146 = load i16, i16* %22, align 2
  %147 = sub i16 %146, %131
  %148 = getelementptr inbounds i16, i16* %1, i64 5
  store i16 %147, i16* %148, align 2
  %149 = load i16, i16* %26, align 2
  %150 = sub i16 %149, %131
  %151 = getelementptr inbounds i16, i16* %1, i64 6
  store i16 %150, i16* %151, align 2
  %152 = load i16, i16* %30, align 2
  %153 = sub i16 %152, %131
  %154 = getelementptr inbounds i16, i16* %1, i64 7
  store i16 %153, i16* %154, align 2
  %155 = getelementptr inbounds i16, i16* %1, i64 32
  %156 = load i16, i16* %34, align 2
  %157 = sub i16 %156, %131
  store i16 %157, i16* %155, align 2
  %158 = load i16, i16* %38, align 2
  %159 = sub i16 %158, %131
  %160 = getelementptr inbounds i16, i16* %1, i64 33
  store i16 %159, i16* %160, align 2
  %161 = load i16, i16* %42, align 2
  %162 = sub i16 %161, %131
  %163 = getelementptr inbounds i16, i16* %1, i64 34
  store i16 %162, i16* %163, align 2
  %164 = load i16, i16* %46, align 2
  %165 = sub i16 %164, %131
  %166 = getelementptr inbounds i16, i16* %1, i64 35
  store i16 %165, i16* %166, align 2
  %167 = load i16, i16* %50, align 2
  %168 = sub i16 %167, %131
  %169 = getelementptr inbounds i16, i16* %1, i64 36
  store i16 %168, i16* %169, align 2
  %170 = load i16, i16* %54, align 2
  %171 = sub i16 %170, %131
  %172 = getelementptr inbounds i16, i16* %1, i64 37
  store i16 %171, i16* %172, align 2
  %173 = load i16, i16* %58, align 2
  %174 = sub i16 %173, %131
  %175 = getelementptr inbounds i16, i16* %1, i64 38
  store i16 %174, i16* %175, align 2
  %176 = load i16, i16* %62, align 2
  %177 = sub i16 %176, %131
  %178 = getelementptr inbounds i16, i16* %1, i64 39
  store i16 %177, i16* %178, align 2
  %179 = getelementptr inbounds i16, i16* %1, i64 64
  %180 = load i16, i16* %66, align 2
  %181 = sub i16 %180, %131
  store i16 %181, i16* %179, align 2
  %182 = load i16, i16* %70, align 2
  %183 = sub i16 %182, %131
  %184 = getelementptr inbounds i16, i16* %1, i64 65
  store i16 %183, i16* %184, align 2
  %185 = load i16, i16* %74, align 2
  %186 = sub i16 %185, %131
  %187 = getelementptr inbounds i16, i16* %1, i64 66
  store i16 %186, i16* %187, align 2
  %188 = load i16, i16* %78, align 2
  %189 = sub i16 %188, %131
  %190 = getelementptr inbounds i16, i16* %1, i64 67
  store i16 %189, i16* %190, align 2
  %191 = load i16, i16* %82, align 2
  %192 = sub i16 %191, %131
  %193 = getelementptr inbounds i16, i16* %1, i64 68
  store i16 %192, i16* %193, align 2
  %194 = load i16, i16* %86, align 2
  %195 = sub i16 %194, %131
  %196 = getelementptr inbounds i16, i16* %1, i64 69
  store i16 %195, i16* %196, align 2
  %197 = load i16, i16* %90, align 2
  %198 = sub i16 %197, %131
  %199 = getelementptr inbounds i16, i16* %1, i64 70
  store i16 %198, i16* %199, align 2
  %200 = load i16, i16* %94, align 2
  %201 = sub i16 %200, %131
  %202 = getelementptr inbounds i16, i16* %1, i64 71
  store i16 %201, i16* %202, align 2
  %203 = getelementptr inbounds i16, i16* %1, i64 96
  %204 = load i16, i16* %98, align 2
  %205 = sub i16 %204, %131
  store i16 %205, i16* %203, align 2
  %206 = load i16, i16* %102, align 2
  %207 = sub i16 %206, %131
  %208 = getelementptr inbounds i16, i16* %1, i64 97
  store i16 %207, i16* %208, align 2
  %209 = load i16, i16* %106, align 2
  %210 = sub i16 %209, %131
  %211 = getelementptr inbounds i16, i16* %1, i64 98
  store i16 %210, i16* %211, align 2
  %212 = load i16, i16* %110, align 2
  %213 = sub i16 %212, %131
  %214 = getelementptr inbounds i16, i16* %1, i64 99
  store i16 %213, i16* %214, align 2
  %215 = load i16, i16* %114, align 2
  %216 = sub i16 %215, %131
  %217 = getelementptr inbounds i16, i16* %1, i64 100
  store i16 %216, i16* %217, align 2
  %218 = load i16, i16* %118, align 2
  %219 = sub i16 %218, %131
  %220 = getelementptr inbounds i16, i16* %1, i64 101
  store i16 %219, i16* %220, align 2
  %221 = load i16, i16* %122, align 2
  %222 = sub i16 %221, %131
  %223 = getelementptr inbounds i16, i16* %1, i64 102
  store i16 %222, i16* %223, align 2
  %224 = load i16, i16* %126, align 2
  %225 = sub i16 %224, %131
  %226 = getelementptr inbounds i16, i16* %1, i64 103
  store i16 %225, i16* %226, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subtract_average_8x8_c(i16* nocapture readonly, i16* nocapture) #2 {
  %3 = load i16, i16* %0, align 2
  %4 = zext i16 %3 to i32
  %5 = add nuw nsw i32 %4, 32
  %6 = getelementptr inbounds i16, i16* %0, i64 1
  %7 = load i16, i16* %6, align 2
  %8 = zext i16 %7 to i32
  %9 = add nuw nsw i32 %5, %8
  %10 = getelementptr inbounds i16, i16* %0, i64 2
  %11 = load i16, i16* %10, align 2
  %12 = zext i16 %11 to i32
  %13 = add nuw nsw i32 %9, %12
  %14 = getelementptr inbounds i16, i16* %0, i64 3
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i32
  %17 = add nuw nsw i32 %13, %16
  %18 = getelementptr inbounds i16, i16* %0, i64 4
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = add nuw nsw i32 %17, %20
  %22 = getelementptr inbounds i16, i16* %0, i64 5
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = add nuw nsw i32 %21, %24
  %26 = getelementptr inbounds i16, i16* %0, i64 6
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = add nuw nsw i32 %25, %28
  %30 = getelementptr inbounds i16, i16* %0, i64 7
  %31 = load i16, i16* %30, align 2
  %32 = zext i16 %31 to i32
  %33 = add nuw nsw i32 %29, %32
  %34 = getelementptr inbounds i16, i16* %0, i64 32
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  %37 = add nuw nsw i32 %33, %36
  %38 = getelementptr inbounds i16, i16* %0, i64 33
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = add nuw nsw i32 %37, %40
  %42 = getelementptr inbounds i16, i16* %0, i64 34
  %43 = load i16, i16* %42, align 2
  %44 = zext i16 %43 to i32
  %45 = add nuw nsw i32 %41, %44
  %46 = getelementptr inbounds i16, i16* %0, i64 35
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = add nuw nsw i32 %45, %48
  %50 = getelementptr inbounds i16, i16* %0, i64 36
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = add nuw nsw i32 %49, %52
  %54 = getelementptr inbounds i16, i16* %0, i64 37
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add nuw nsw i32 %53, %56
  %58 = getelementptr inbounds i16, i16* %0, i64 38
  %59 = load i16, i16* %58, align 2
  %60 = zext i16 %59 to i32
  %61 = add nuw nsw i32 %57, %60
  %62 = getelementptr inbounds i16, i16* %0, i64 39
  %63 = load i16, i16* %62, align 2
  %64 = zext i16 %63 to i32
  %65 = add nuw nsw i32 %61, %64
  %66 = getelementptr inbounds i16, i16* %0, i64 64
  %67 = load i16, i16* %66, align 2
  %68 = zext i16 %67 to i32
  %69 = add nuw nsw i32 %65, %68
  %70 = getelementptr inbounds i16, i16* %0, i64 65
  %71 = load i16, i16* %70, align 2
  %72 = zext i16 %71 to i32
  %73 = add nuw nsw i32 %69, %72
  %74 = getelementptr inbounds i16, i16* %0, i64 66
  %75 = load i16, i16* %74, align 2
  %76 = zext i16 %75 to i32
  %77 = add nuw nsw i32 %73, %76
  %78 = getelementptr inbounds i16, i16* %0, i64 67
  %79 = load i16, i16* %78, align 2
  %80 = zext i16 %79 to i32
  %81 = add nuw nsw i32 %77, %80
  %82 = getelementptr inbounds i16, i16* %0, i64 68
  %83 = load i16, i16* %82, align 2
  %84 = zext i16 %83 to i32
  %85 = add nuw nsw i32 %81, %84
  %86 = getelementptr inbounds i16, i16* %0, i64 69
  %87 = load i16, i16* %86, align 2
  %88 = zext i16 %87 to i32
  %89 = add nuw nsw i32 %85, %88
  %90 = getelementptr inbounds i16, i16* %0, i64 70
  %91 = load i16, i16* %90, align 2
  %92 = zext i16 %91 to i32
  %93 = add nuw nsw i32 %89, %92
  %94 = getelementptr inbounds i16, i16* %0, i64 71
  %95 = load i16, i16* %94, align 2
  %96 = zext i16 %95 to i32
  %97 = add nuw nsw i32 %93, %96
  %98 = getelementptr inbounds i16, i16* %0, i64 96
  %99 = load i16, i16* %98, align 2
  %100 = zext i16 %99 to i32
  %101 = add nuw nsw i32 %97, %100
  %102 = getelementptr inbounds i16, i16* %0, i64 97
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i32
  %105 = add nuw nsw i32 %101, %104
  %106 = getelementptr inbounds i16, i16* %0, i64 98
  %107 = load i16, i16* %106, align 2
  %108 = zext i16 %107 to i32
  %109 = add nuw nsw i32 %105, %108
  %110 = getelementptr inbounds i16, i16* %0, i64 99
  %111 = load i16, i16* %110, align 2
  %112 = zext i16 %111 to i32
  %113 = add nuw nsw i32 %109, %112
  %114 = getelementptr inbounds i16, i16* %0, i64 100
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = add nuw nsw i32 %113, %116
  %118 = getelementptr inbounds i16, i16* %0, i64 101
  %119 = load i16, i16* %118, align 2
  %120 = zext i16 %119 to i32
  %121 = add nuw nsw i32 %117, %120
  %122 = getelementptr inbounds i16, i16* %0, i64 102
  %123 = load i16, i16* %122, align 2
  %124 = zext i16 %123 to i32
  %125 = add nuw nsw i32 %121, %124
  %126 = getelementptr inbounds i16, i16* %0, i64 103
  %127 = load i16, i16* %126, align 2
  %128 = zext i16 %127 to i32
  %129 = add nuw nsw i32 %125, %128
  %130 = getelementptr inbounds i16, i16* %0, i64 128
  %131 = load i16, i16* %130, align 2
  %132 = zext i16 %131 to i32
  %133 = add nuw nsw i32 %129, %132
  %134 = getelementptr inbounds i16, i16* %0, i64 129
  %135 = load i16, i16* %134, align 2
  %136 = zext i16 %135 to i32
  %137 = add nuw nsw i32 %133, %136
  %138 = getelementptr inbounds i16, i16* %0, i64 130
  %139 = load i16, i16* %138, align 2
  %140 = zext i16 %139 to i32
  %141 = add nuw nsw i32 %137, %140
  %142 = getelementptr inbounds i16, i16* %0, i64 131
  %143 = load i16, i16* %142, align 2
  %144 = zext i16 %143 to i32
  %145 = add nuw nsw i32 %141, %144
  %146 = getelementptr inbounds i16, i16* %0, i64 132
  %147 = load i16, i16* %146, align 2
  %148 = zext i16 %147 to i32
  %149 = add nuw nsw i32 %145, %148
  %150 = getelementptr inbounds i16, i16* %0, i64 133
  %151 = load i16, i16* %150, align 2
  %152 = zext i16 %151 to i32
  %153 = add nuw nsw i32 %149, %152
  %154 = getelementptr inbounds i16, i16* %0, i64 134
  %155 = load i16, i16* %154, align 2
  %156 = zext i16 %155 to i32
  %157 = add nuw nsw i32 %153, %156
  %158 = getelementptr inbounds i16, i16* %0, i64 135
  %159 = load i16, i16* %158, align 2
  %160 = zext i16 %159 to i32
  %161 = add nuw nsw i32 %157, %160
  %162 = getelementptr inbounds i16, i16* %0, i64 160
  %163 = load i16, i16* %162, align 2
  %164 = zext i16 %163 to i32
  %165 = add nuw nsw i32 %161, %164
  %166 = getelementptr inbounds i16, i16* %0, i64 161
  %167 = load i16, i16* %166, align 2
  %168 = zext i16 %167 to i32
  %169 = add nuw nsw i32 %165, %168
  %170 = getelementptr inbounds i16, i16* %0, i64 162
  %171 = load i16, i16* %170, align 2
  %172 = zext i16 %171 to i32
  %173 = add nuw nsw i32 %169, %172
  %174 = getelementptr inbounds i16, i16* %0, i64 163
  %175 = load i16, i16* %174, align 2
  %176 = zext i16 %175 to i32
  %177 = add nuw nsw i32 %173, %176
  %178 = getelementptr inbounds i16, i16* %0, i64 164
  %179 = load i16, i16* %178, align 2
  %180 = zext i16 %179 to i32
  %181 = add nuw nsw i32 %177, %180
  %182 = getelementptr inbounds i16, i16* %0, i64 165
  %183 = load i16, i16* %182, align 2
  %184 = zext i16 %183 to i32
  %185 = add nuw nsw i32 %181, %184
  %186 = getelementptr inbounds i16, i16* %0, i64 166
  %187 = load i16, i16* %186, align 2
  %188 = zext i16 %187 to i32
  %189 = add nuw nsw i32 %185, %188
  %190 = getelementptr inbounds i16, i16* %0, i64 167
  %191 = load i16, i16* %190, align 2
  %192 = zext i16 %191 to i32
  %193 = add nuw nsw i32 %189, %192
  %194 = getelementptr inbounds i16, i16* %0, i64 192
  %195 = load i16, i16* %194, align 2
  %196 = zext i16 %195 to i32
  %197 = add nuw nsw i32 %193, %196
  %198 = getelementptr inbounds i16, i16* %0, i64 193
  %199 = load i16, i16* %198, align 2
  %200 = zext i16 %199 to i32
  %201 = add nuw nsw i32 %197, %200
  %202 = getelementptr inbounds i16, i16* %0, i64 194
  %203 = load i16, i16* %202, align 2
  %204 = zext i16 %203 to i32
  %205 = add nuw nsw i32 %201, %204
  %206 = getelementptr inbounds i16, i16* %0, i64 195
  %207 = load i16, i16* %206, align 2
  %208 = zext i16 %207 to i32
  %209 = add nuw nsw i32 %205, %208
  %210 = getelementptr inbounds i16, i16* %0, i64 196
  %211 = load i16, i16* %210, align 2
  %212 = zext i16 %211 to i32
  %213 = add nuw nsw i32 %209, %212
  %214 = getelementptr inbounds i16, i16* %0, i64 197
  %215 = load i16, i16* %214, align 2
  %216 = zext i16 %215 to i32
  %217 = add nuw nsw i32 %213, %216
  %218 = getelementptr inbounds i16, i16* %0, i64 198
  %219 = load i16, i16* %218, align 2
  %220 = zext i16 %219 to i32
  %221 = add nuw nsw i32 %217, %220
  %222 = getelementptr inbounds i16, i16* %0, i64 199
  %223 = load i16, i16* %222, align 2
  %224 = zext i16 %223 to i32
  %225 = add nuw nsw i32 %221, %224
  %226 = getelementptr inbounds i16, i16* %0, i64 224
  %227 = load i16, i16* %226, align 2
  %228 = zext i16 %227 to i32
  %229 = add nuw nsw i32 %225, %228
  %230 = getelementptr inbounds i16, i16* %0, i64 225
  %231 = load i16, i16* %230, align 2
  %232 = zext i16 %231 to i32
  %233 = add nuw nsw i32 %229, %232
  %234 = getelementptr inbounds i16, i16* %0, i64 226
  %235 = load i16, i16* %234, align 2
  %236 = zext i16 %235 to i32
  %237 = add nuw nsw i32 %233, %236
  %238 = getelementptr inbounds i16, i16* %0, i64 227
  %239 = load i16, i16* %238, align 2
  %240 = zext i16 %239 to i32
  %241 = add nuw nsw i32 %237, %240
  %242 = getelementptr inbounds i16, i16* %0, i64 228
  %243 = load i16, i16* %242, align 2
  %244 = zext i16 %243 to i32
  %245 = add nuw nsw i32 %241, %244
  %246 = getelementptr inbounds i16, i16* %0, i64 229
  %247 = load i16, i16* %246, align 2
  %248 = zext i16 %247 to i32
  %249 = add nuw nsw i32 %245, %248
  %250 = getelementptr inbounds i16, i16* %0, i64 230
  %251 = load i16, i16* %250, align 2
  %252 = zext i16 %251 to i32
  %253 = add nuw nsw i32 %249, %252
  %254 = getelementptr inbounds i16, i16* %0, i64 231
  %255 = load i16, i16* %254, align 2
  %256 = zext i16 %255 to i32
  %257 = add nuw nsw i32 %253, %256
  %258 = lshr i32 %257, 6
  %259 = trunc i32 %258 to i16
  br label %260

260:                                              ; preds = %260, %2
  %261 = phi i32 [ 0, %2 ], [ %296, %260 ]
  %262 = phi i16* [ %0, %2 ], [ %294, %260 ]
  %263 = phi i16* [ %1, %2 ], [ %295, %260 ]
  %264 = load i16, i16* %262, align 2
  %265 = sub i16 %264, %259
  store i16 %265, i16* %263, align 2
  %266 = getelementptr inbounds i16, i16* %262, i64 1
  %267 = load i16, i16* %266, align 2
  %268 = sub i16 %267, %259
  %269 = getelementptr inbounds i16, i16* %263, i64 1
  store i16 %268, i16* %269, align 2
  %270 = getelementptr inbounds i16, i16* %262, i64 2
  %271 = load i16, i16* %270, align 2
  %272 = sub i16 %271, %259
  %273 = getelementptr inbounds i16, i16* %263, i64 2
  store i16 %272, i16* %273, align 2
  %274 = getelementptr inbounds i16, i16* %262, i64 3
  %275 = load i16, i16* %274, align 2
  %276 = sub i16 %275, %259
  %277 = getelementptr inbounds i16, i16* %263, i64 3
  store i16 %276, i16* %277, align 2
  %278 = getelementptr inbounds i16, i16* %262, i64 4
  %279 = load i16, i16* %278, align 2
  %280 = sub i16 %279, %259
  %281 = getelementptr inbounds i16, i16* %263, i64 4
  store i16 %280, i16* %281, align 2
  %282 = getelementptr inbounds i16, i16* %262, i64 5
  %283 = load i16, i16* %282, align 2
  %284 = sub i16 %283, %259
  %285 = getelementptr inbounds i16, i16* %263, i64 5
  store i16 %284, i16* %285, align 2
  %286 = getelementptr inbounds i16, i16* %262, i64 6
  %287 = load i16, i16* %286, align 2
  %288 = sub i16 %287, %259
  %289 = getelementptr inbounds i16, i16* %263, i64 6
  store i16 %288, i16* %289, align 2
  %290 = getelementptr inbounds i16, i16* %262, i64 7
  %291 = load i16, i16* %290, align 2
  %292 = sub i16 %291, %259
  %293 = getelementptr inbounds i16, i16* %263, i64 7
  store i16 %292, i16* %293, align 2
  %294 = getelementptr inbounds i16, i16* %262, i64 32
  %295 = getelementptr inbounds i16, i16* %263, i64 32
  %296 = add nuw nsw i32 %261, 1
  %297 = icmp eq i32 %296, 8
  br i1 %297, label %298, label %260

298:                                              ; preds = %260
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subtract_average_8x16_c(i16* nocapture readonly, i16* nocapture) #2 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi i32 [ 0, %2 ], [ %31, %3 ]
  %5 = phi i16* [ %0, %2 ], [ %30, %3 ]
  %6 = phi i32 [ 64, %2 ], [ %29, %3 ]
  %7 = bitcast i16* %5 to <8 x i16>*
  %8 = load <8 x i16>, <8 x i16>* %7, align 2
  %9 = zext <8 x i16> %8 to <8 x i32>
  %10 = shufflevector <8 x i32> %9, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %11 = add nsw <8 x i32> %10, %9
  %12 = shufflevector <8 x i32> %11, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %13 = add nsw <8 x i32> %11, %12
  %14 = shufflevector <8 x i32> %13, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %15 = add nsw <8 x i32> %13, %14
  %16 = extractelement <8 x i32> %15, i32 0
  %17 = add nsw i32 %16, %6
  %18 = getelementptr inbounds i16, i16* %5, i64 32
  %19 = bitcast i16* %18 to <8 x i16>*
  %20 = load <8 x i16>, <8 x i16>* %19, align 2
  %21 = zext <8 x i16> %20 to <8 x i32>
  %22 = shufflevector <8 x i32> %21, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %23 = add nsw <8 x i32> %22, %21
  %24 = shufflevector <8 x i32> %23, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %25 = add nsw <8 x i32> %23, %24
  %26 = shufflevector <8 x i32> %25, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %27 = add nsw <8 x i32> %25, %26
  %28 = extractelement <8 x i32> %27, i32 0
  %29 = add nsw i32 %28, %17
  %30 = getelementptr inbounds i16, i16* %5, i64 64
  %31 = add nuw nsw i32 %4, 2
  %32 = icmp eq i32 %31, 16
  br i1 %32, label %33, label %3

33:                                               ; preds = %3
  %34 = lshr i32 %29, 7
  %35 = trunc i32 %34 to i16
  br label %36

36:                                               ; preds = %36, %33
  %37 = phi i32 [ 0, %33 ], [ %72, %36 ]
  %38 = phi i16* [ %0, %33 ], [ %70, %36 ]
  %39 = phi i16* [ %1, %33 ], [ %71, %36 ]
  %40 = load i16, i16* %38, align 2
  %41 = sub i16 %40, %35
  store i16 %41, i16* %39, align 2
  %42 = getelementptr inbounds i16, i16* %38, i64 1
  %43 = load i16, i16* %42, align 2
  %44 = sub i16 %43, %35
  %45 = getelementptr inbounds i16, i16* %39, i64 1
  store i16 %44, i16* %45, align 2
  %46 = getelementptr inbounds i16, i16* %38, i64 2
  %47 = load i16, i16* %46, align 2
  %48 = sub i16 %47, %35
  %49 = getelementptr inbounds i16, i16* %39, i64 2
  store i16 %48, i16* %49, align 2
  %50 = getelementptr inbounds i16, i16* %38, i64 3
  %51 = load i16, i16* %50, align 2
  %52 = sub i16 %51, %35
  %53 = getelementptr inbounds i16, i16* %39, i64 3
  store i16 %52, i16* %53, align 2
  %54 = getelementptr inbounds i16, i16* %38, i64 4
  %55 = load i16, i16* %54, align 2
  %56 = sub i16 %55, %35
  %57 = getelementptr inbounds i16, i16* %39, i64 4
  store i16 %56, i16* %57, align 2
  %58 = getelementptr inbounds i16, i16* %38, i64 5
  %59 = load i16, i16* %58, align 2
  %60 = sub i16 %59, %35
  %61 = getelementptr inbounds i16, i16* %39, i64 5
  store i16 %60, i16* %61, align 2
  %62 = getelementptr inbounds i16, i16* %38, i64 6
  %63 = load i16, i16* %62, align 2
  %64 = sub i16 %63, %35
  %65 = getelementptr inbounds i16, i16* %39, i64 6
  store i16 %64, i16* %65, align 2
  %66 = getelementptr inbounds i16, i16* %38, i64 7
  %67 = load i16, i16* %66, align 2
  %68 = sub i16 %67, %35
  %69 = getelementptr inbounds i16, i16* %39, i64 7
  store i16 %68, i16* %69, align 2
  %70 = getelementptr inbounds i16, i16* %38, i64 32
  %71 = getelementptr inbounds i16, i16* %39, i64 32
  %72 = add nuw nsw i32 %37, 1
  %73 = icmp eq i32 %72, 16
  br i1 %73, label %74, label %36

74:                                               ; preds = %36
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subtract_average_8x32_c(i16* nocapture readonly, i16* nocapture) #2 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi i32 [ 0, %2 ], [ %31, %3 ]
  %5 = phi i16* [ %0, %2 ], [ %30, %3 ]
  %6 = phi i32 [ 128, %2 ], [ %29, %3 ]
  %7 = bitcast i16* %5 to <8 x i16>*
  %8 = load <8 x i16>, <8 x i16>* %7, align 2
  %9 = zext <8 x i16> %8 to <8 x i32>
  %10 = shufflevector <8 x i32> %9, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %11 = add nsw <8 x i32> %10, %9
  %12 = shufflevector <8 x i32> %11, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %13 = add nsw <8 x i32> %11, %12
  %14 = shufflevector <8 x i32> %13, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %15 = add nsw <8 x i32> %13, %14
  %16 = extractelement <8 x i32> %15, i32 0
  %17 = add nsw i32 %16, %6
  %18 = getelementptr inbounds i16, i16* %5, i64 32
  %19 = bitcast i16* %18 to <8 x i16>*
  %20 = load <8 x i16>, <8 x i16>* %19, align 2
  %21 = zext <8 x i16> %20 to <8 x i32>
  %22 = shufflevector <8 x i32> %21, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %23 = add nsw <8 x i32> %22, %21
  %24 = shufflevector <8 x i32> %23, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %25 = add nsw <8 x i32> %23, %24
  %26 = shufflevector <8 x i32> %25, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %27 = add nsw <8 x i32> %25, %26
  %28 = extractelement <8 x i32> %27, i32 0
  %29 = add nsw i32 %28, %17
  %30 = getelementptr inbounds i16, i16* %5, i64 64
  %31 = add nuw nsw i32 %4, 2
  %32 = icmp eq i32 %31, 32
  br i1 %32, label %33, label %3

33:                                               ; preds = %3
  %34 = lshr i32 %29, 8
  %35 = trunc i32 %34 to i16
  br label %36

36:                                               ; preds = %36, %33
  %37 = phi i32 [ 0, %33 ], [ %72, %36 ]
  %38 = phi i16* [ %0, %33 ], [ %70, %36 ]
  %39 = phi i16* [ %1, %33 ], [ %71, %36 ]
  %40 = load i16, i16* %38, align 2
  %41 = sub i16 %40, %35
  store i16 %41, i16* %39, align 2
  %42 = getelementptr inbounds i16, i16* %38, i64 1
  %43 = load i16, i16* %42, align 2
  %44 = sub i16 %43, %35
  %45 = getelementptr inbounds i16, i16* %39, i64 1
  store i16 %44, i16* %45, align 2
  %46 = getelementptr inbounds i16, i16* %38, i64 2
  %47 = load i16, i16* %46, align 2
  %48 = sub i16 %47, %35
  %49 = getelementptr inbounds i16, i16* %39, i64 2
  store i16 %48, i16* %49, align 2
  %50 = getelementptr inbounds i16, i16* %38, i64 3
  %51 = load i16, i16* %50, align 2
  %52 = sub i16 %51, %35
  %53 = getelementptr inbounds i16, i16* %39, i64 3
  store i16 %52, i16* %53, align 2
  %54 = getelementptr inbounds i16, i16* %38, i64 4
  %55 = load i16, i16* %54, align 2
  %56 = sub i16 %55, %35
  %57 = getelementptr inbounds i16, i16* %39, i64 4
  store i16 %56, i16* %57, align 2
  %58 = getelementptr inbounds i16, i16* %38, i64 5
  %59 = load i16, i16* %58, align 2
  %60 = sub i16 %59, %35
  %61 = getelementptr inbounds i16, i16* %39, i64 5
  store i16 %60, i16* %61, align 2
  %62 = getelementptr inbounds i16, i16* %38, i64 6
  %63 = load i16, i16* %62, align 2
  %64 = sub i16 %63, %35
  %65 = getelementptr inbounds i16, i16* %39, i64 6
  store i16 %64, i16* %65, align 2
  %66 = getelementptr inbounds i16, i16* %38, i64 7
  %67 = load i16, i16* %66, align 2
  %68 = sub i16 %67, %35
  %69 = getelementptr inbounds i16, i16* %39, i64 7
  store i16 %68, i16* %69, align 2
  %70 = getelementptr inbounds i16, i16* %38, i64 32
  %71 = getelementptr inbounds i16, i16* %39, i64 32
  %72 = add nuw nsw i32 %37, 1
  %73 = icmp eq i32 %72, 32
  br i1 %73, label %74, label %36

74:                                               ; preds = %36
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subtract_average_16x4_c(i16* nocapture readonly, i16* nocapture) #2 {
  %3 = load i16, i16* %0, align 2
  %4 = zext i16 %3 to i32
  %5 = add nuw nsw i32 %4, 32
  %6 = getelementptr inbounds i16, i16* %0, i64 1
  %7 = load i16, i16* %6, align 2
  %8 = zext i16 %7 to i32
  %9 = add nuw nsw i32 %5, %8
  %10 = getelementptr inbounds i16, i16* %0, i64 2
  %11 = load i16, i16* %10, align 2
  %12 = zext i16 %11 to i32
  %13 = add nuw nsw i32 %9, %12
  %14 = getelementptr inbounds i16, i16* %0, i64 3
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i32
  %17 = add nuw nsw i32 %13, %16
  %18 = getelementptr inbounds i16, i16* %0, i64 4
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = add nuw nsw i32 %17, %20
  %22 = getelementptr inbounds i16, i16* %0, i64 5
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = add nuw nsw i32 %21, %24
  %26 = getelementptr inbounds i16, i16* %0, i64 6
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = add nuw nsw i32 %25, %28
  %30 = getelementptr inbounds i16, i16* %0, i64 7
  %31 = load i16, i16* %30, align 2
  %32 = zext i16 %31 to i32
  %33 = add nuw nsw i32 %29, %32
  %34 = getelementptr inbounds i16, i16* %0, i64 8
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  %37 = add nuw nsw i32 %33, %36
  %38 = getelementptr inbounds i16, i16* %0, i64 9
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = add nuw nsw i32 %37, %40
  %42 = getelementptr inbounds i16, i16* %0, i64 10
  %43 = load i16, i16* %42, align 2
  %44 = zext i16 %43 to i32
  %45 = add nuw nsw i32 %41, %44
  %46 = getelementptr inbounds i16, i16* %0, i64 11
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = add nuw nsw i32 %45, %48
  %50 = getelementptr inbounds i16, i16* %0, i64 12
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = add nuw nsw i32 %49, %52
  %54 = getelementptr inbounds i16, i16* %0, i64 13
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add nuw nsw i32 %53, %56
  %58 = getelementptr inbounds i16, i16* %0, i64 14
  %59 = load i16, i16* %58, align 2
  %60 = zext i16 %59 to i32
  %61 = add nuw nsw i32 %57, %60
  %62 = getelementptr inbounds i16, i16* %0, i64 15
  %63 = load i16, i16* %62, align 2
  %64 = zext i16 %63 to i32
  %65 = add nuw nsw i32 %61, %64
  %66 = getelementptr inbounds i16, i16* %0, i64 32
  %67 = load i16, i16* %66, align 2
  %68 = zext i16 %67 to i32
  %69 = add nuw nsw i32 %65, %68
  %70 = getelementptr inbounds i16, i16* %0, i64 33
  %71 = load i16, i16* %70, align 2
  %72 = zext i16 %71 to i32
  %73 = add nuw nsw i32 %69, %72
  %74 = getelementptr inbounds i16, i16* %0, i64 34
  %75 = load i16, i16* %74, align 2
  %76 = zext i16 %75 to i32
  %77 = add nuw nsw i32 %73, %76
  %78 = getelementptr inbounds i16, i16* %0, i64 35
  %79 = load i16, i16* %78, align 2
  %80 = zext i16 %79 to i32
  %81 = add nuw nsw i32 %77, %80
  %82 = getelementptr inbounds i16, i16* %0, i64 36
  %83 = load i16, i16* %82, align 2
  %84 = zext i16 %83 to i32
  %85 = add nuw nsw i32 %81, %84
  %86 = getelementptr inbounds i16, i16* %0, i64 37
  %87 = load i16, i16* %86, align 2
  %88 = zext i16 %87 to i32
  %89 = add nuw nsw i32 %85, %88
  %90 = getelementptr inbounds i16, i16* %0, i64 38
  %91 = load i16, i16* %90, align 2
  %92 = zext i16 %91 to i32
  %93 = add nuw nsw i32 %89, %92
  %94 = getelementptr inbounds i16, i16* %0, i64 39
  %95 = load i16, i16* %94, align 2
  %96 = zext i16 %95 to i32
  %97 = add nuw nsw i32 %93, %96
  %98 = getelementptr inbounds i16, i16* %0, i64 40
  %99 = load i16, i16* %98, align 2
  %100 = zext i16 %99 to i32
  %101 = add nuw nsw i32 %97, %100
  %102 = getelementptr inbounds i16, i16* %0, i64 41
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i32
  %105 = add nuw nsw i32 %101, %104
  %106 = getelementptr inbounds i16, i16* %0, i64 42
  %107 = load i16, i16* %106, align 2
  %108 = zext i16 %107 to i32
  %109 = add nuw nsw i32 %105, %108
  %110 = getelementptr inbounds i16, i16* %0, i64 43
  %111 = load i16, i16* %110, align 2
  %112 = zext i16 %111 to i32
  %113 = add nuw nsw i32 %109, %112
  %114 = getelementptr inbounds i16, i16* %0, i64 44
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = add nuw nsw i32 %113, %116
  %118 = getelementptr inbounds i16, i16* %0, i64 45
  %119 = load i16, i16* %118, align 2
  %120 = zext i16 %119 to i32
  %121 = add nuw nsw i32 %117, %120
  %122 = getelementptr inbounds i16, i16* %0, i64 46
  %123 = load i16, i16* %122, align 2
  %124 = zext i16 %123 to i32
  %125 = add nuw nsw i32 %121, %124
  %126 = getelementptr inbounds i16, i16* %0, i64 47
  %127 = load i16, i16* %126, align 2
  %128 = zext i16 %127 to i32
  %129 = add nuw nsw i32 %125, %128
  %130 = getelementptr inbounds i16, i16* %0, i64 64
  %131 = load i16, i16* %130, align 2
  %132 = zext i16 %131 to i32
  %133 = add nuw nsw i32 %129, %132
  %134 = getelementptr inbounds i16, i16* %0, i64 65
  %135 = load i16, i16* %134, align 2
  %136 = zext i16 %135 to i32
  %137 = add nuw nsw i32 %133, %136
  %138 = getelementptr inbounds i16, i16* %0, i64 66
  %139 = load i16, i16* %138, align 2
  %140 = zext i16 %139 to i32
  %141 = add nuw nsw i32 %137, %140
  %142 = getelementptr inbounds i16, i16* %0, i64 67
  %143 = load i16, i16* %142, align 2
  %144 = zext i16 %143 to i32
  %145 = add nuw nsw i32 %141, %144
  %146 = getelementptr inbounds i16, i16* %0, i64 68
  %147 = load i16, i16* %146, align 2
  %148 = zext i16 %147 to i32
  %149 = add nuw nsw i32 %145, %148
  %150 = getelementptr inbounds i16, i16* %0, i64 69
  %151 = load i16, i16* %150, align 2
  %152 = zext i16 %151 to i32
  %153 = add nuw nsw i32 %149, %152
  %154 = getelementptr inbounds i16, i16* %0, i64 70
  %155 = load i16, i16* %154, align 2
  %156 = zext i16 %155 to i32
  %157 = add nuw nsw i32 %153, %156
  %158 = getelementptr inbounds i16, i16* %0, i64 71
  %159 = load i16, i16* %158, align 2
  %160 = zext i16 %159 to i32
  %161 = add nuw nsw i32 %157, %160
  %162 = getelementptr inbounds i16, i16* %0, i64 72
  %163 = load i16, i16* %162, align 2
  %164 = zext i16 %163 to i32
  %165 = add nuw nsw i32 %161, %164
  %166 = getelementptr inbounds i16, i16* %0, i64 73
  %167 = load i16, i16* %166, align 2
  %168 = zext i16 %167 to i32
  %169 = add nuw nsw i32 %165, %168
  %170 = getelementptr inbounds i16, i16* %0, i64 74
  %171 = load i16, i16* %170, align 2
  %172 = zext i16 %171 to i32
  %173 = add nuw nsw i32 %169, %172
  %174 = getelementptr inbounds i16, i16* %0, i64 75
  %175 = load i16, i16* %174, align 2
  %176 = zext i16 %175 to i32
  %177 = add nuw nsw i32 %173, %176
  %178 = getelementptr inbounds i16, i16* %0, i64 76
  %179 = load i16, i16* %178, align 2
  %180 = zext i16 %179 to i32
  %181 = add nuw nsw i32 %177, %180
  %182 = getelementptr inbounds i16, i16* %0, i64 77
  %183 = load i16, i16* %182, align 2
  %184 = zext i16 %183 to i32
  %185 = add nuw nsw i32 %181, %184
  %186 = getelementptr inbounds i16, i16* %0, i64 78
  %187 = load i16, i16* %186, align 2
  %188 = zext i16 %187 to i32
  %189 = add nuw nsw i32 %185, %188
  %190 = getelementptr inbounds i16, i16* %0, i64 79
  %191 = load i16, i16* %190, align 2
  %192 = zext i16 %191 to i32
  %193 = add nuw nsw i32 %189, %192
  %194 = getelementptr inbounds i16, i16* %0, i64 96
  %195 = load i16, i16* %194, align 2
  %196 = zext i16 %195 to i32
  %197 = add nuw nsw i32 %193, %196
  %198 = getelementptr inbounds i16, i16* %0, i64 97
  %199 = load i16, i16* %198, align 2
  %200 = zext i16 %199 to i32
  %201 = add nuw nsw i32 %197, %200
  %202 = getelementptr inbounds i16, i16* %0, i64 98
  %203 = load i16, i16* %202, align 2
  %204 = zext i16 %203 to i32
  %205 = add nuw nsw i32 %201, %204
  %206 = getelementptr inbounds i16, i16* %0, i64 99
  %207 = load i16, i16* %206, align 2
  %208 = zext i16 %207 to i32
  %209 = add nuw nsw i32 %205, %208
  %210 = getelementptr inbounds i16, i16* %0, i64 100
  %211 = load i16, i16* %210, align 2
  %212 = zext i16 %211 to i32
  %213 = add nuw nsw i32 %209, %212
  %214 = getelementptr inbounds i16, i16* %0, i64 101
  %215 = load i16, i16* %214, align 2
  %216 = zext i16 %215 to i32
  %217 = add nuw nsw i32 %213, %216
  %218 = getelementptr inbounds i16, i16* %0, i64 102
  %219 = load i16, i16* %218, align 2
  %220 = zext i16 %219 to i32
  %221 = add nuw nsw i32 %217, %220
  %222 = getelementptr inbounds i16, i16* %0, i64 103
  %223 = load i16, i16* %222, align 2
  %224 = zext i16 %223 to i32
  %225 = add nuw nsw i32 %221, %224
  %226 = getelementptr inbounds i16, i16* %0, i64 104
  %227 = load i16, i16* %226, align 2
  %228 = zext i16 %227 to i32
  %229 = add nuw nsw i32 %225, %228
  %230 = getelementptr inbounds i16, i16* %0, i64 105
  %231 = load i16, i16* %230, align 2
  %232 = zext i16 %231 to i32
  %233 = add nuw nsw i32 %229, %232
  %234 = getelementptr inbounds i16, i16* %0, i64 106
  %235 = load i16, i16* %234, align 2
  %236 = zext i16 %235 to i32
  %237 = add nuw nsw i32 %233, %236
  %238 = getelementptr inbounds i16, i16* %0, i64 107
  %239 = load i16, i16* %238, align 2
  %240 = zext i16 %239 to i32
  %241 = add nuw nsw i32 %237, %240
  %242 = getelementptr inbounds i16, i16* %0, i64 108
  %243 = load i16, i16* %242, align 2
  %244 = zext i16 %243 to i32
  %245 = add nuw nsw i32 %241, %244
  %246 = getelementptr inbounds i16, i16* %0, i64 109
  %247 = load i16, i16* %246, align 2
  %248 = zext i16 %247 to i32
  %249 = add nuw nsw i32 %245, %248
  %250 = getelementptr inbounds i16, i16* %0, i64 110
  %251 = load i16, i16* %250, align 2
  %252 = zext i16 %251 to i32
  %253 = add nuw nsw i32 %249, %252
  %254 = getelementptr inbounds i16, i16* %0, i64 111
  %255 = load i16, i16* %254, align 2
  %256 = zext i16 %255 to i32
  %257 = add nuw nsw i32 %253, %256
  %258 = lshr i32 %257, 6
  %259 = trunc i32 %258 to i16
  br label %260

260:                                              ; preds = %260, %2
  %261 = phi i32 [ 0, %2 ], [ %328, %260 ]
  %262 = phi i16* [ %0, %2 ], [ %326, %260 ]
  %263 = phi i16* [ %1, %2 ], [ %327, %260 ]
  %264 = load i16, i16* %262, align 2
  %265 = sub i16 %264, %259
  store i16 %265, i16* %263, align 2
  %266 = getelementptr inbounds i16, i16* %262, i64 1
  %267 = load i16, i16* %266, align 2
  %268 = sub i16 %267, %259
  %269 = getelementptr inbounds i16, i16* %263, i64 1
  store i16 %268, i16* %269, align 2
  %270 = getelementptr inbounds i16, i16* %262, i64 2
  %271 = load i16, i16* %270, align 2
  %272 = sub i16 %271, %259
  %273 = getelementptr inbounds i16, i16* %263, i64 2
  store i16 %272, i16* %273, align 2
  %274 = getelementptr inbounds i16, i16* %262, i64 3
  %275 = load i16, i16* %274, align 2
  %276 = sub i16 %275, %259
  %277 = getelementptr inbounds i16, i16* %263, i64 3
  store i16 %276, i16* %277, align 2
  %278 = getelementptr inbounds i16, i16* %262, i64 4
  %279 = load i16, i16* %278, align 2
  %280 = sub i16 %279, %259
  %281 = getelementptr inbounds i16, i16* %263, i64 4
  store i16 %280, i16* %281, align 2
  %282 = getelementptr inbounds i16, i16* %262, i64 5
  %283 = load i16, i16* %282, align 2
  %284 = sub i16 %283, %259
  %285 = getelementptr inbounds i16, i16* %263, i64 5
  store i16 %284, i16* %285, align 2
  %286 = getelementptr inbounds i16, i16* %262, i64 6
  %287 = load i16, i16* %286, align 2
  %288 = sub i16 %287, %259
  %289 = getelementptr inbounds i16, i16* %263, i64 6
  store i16 %288, i16* %289, align 2
  %290 = getelementptr inbounds i16, i16* %262, i64 7
  %291 = load i16, i16* %290, align 2
  %292 = sub i16 %291, %259
  %293 = getelementptr inbounds i16, i16* %263, i64 7
  store i16 %292, i16* %293, align 2
  %294 = getelementptr inbounds i16, i16* %262, i64 8
  %295 = load i16, i16* %294, align 2
  %296 = sub i16 %295, %259
  %297 = getelementptr inbounds i16, i16* %263, i64 8
  store i16 %296, i16* %297, align 2
  %298 = getelementptr inbounds i16, i16* %262, i64 9
  %299 = load i16, i16* %298, align 2
  %300 = sub i16 %299, %259
  %301 = getelementptr inbounds i16, i16* %263, i64 9
  store i16 %300, i16* %301, align 2
  %302 = getelementptr inbounds i16, i16* %262, i64 10
  %303 = load i16, i16* %302, align 2
  %304 = sub i16 %303, %259
  %305 = getelementptr inbounds i16, i16* %263, i64 10
  store i16 %304, i16* %305, align 2
  %306 = getelementptr inbounds i16, i16* %262, i64 11
  %307 = load i16, i16* %306, align 2
  %308 = sub i16 %307, %259
  %309 = getelementptr inbounds i16, i16* %263, i64 11
  store i16 %308, i16* %309, align 2
  %310 = getelementptr inbounds i16, i16* %262, i64 12
  %311 = load i16, i16* %310, align 2
  %312 = sub i16 %311, %259
  %313 = getelementptr inbounds i16, i16* %263, i64 12
  store i16 %312, i16* %313, align 2
  %314 = getelementptr inbounds i16, i16* %262, i64 13
  %315 = load i16, i16* %314, align 2
  %316 = sub i16 %315, %259
  %317 = getelementptr inbounds i16, i16* %263, i64 13
  store i16 %316, i16* %317, align 2
  %318 = getelementptr inbounds i16, i16* %262, i64 14
  %319 = load i16, i16* %318, align 2
  %320 = sub i16 %319, %259
  %321 = getelementptr inbounds i16, i16* %263, i64 14
  store i16 %320, i16* %321, align 2
  %322 = getelementptr inbounds i16, i16* %262, i64 15
  %323 = load i16, i16* %322, align 2
  %324 = sub i16 %323, %259
  %325 = getelementptr inbounds i16, i16* %263, i64 15
  store i16 %324, i16* %325, align 2
  %326 = getelementptr inbounds i16, i16* %262, i64 32
  %327 = getelementptr inbounds i16, i16* %263, i64 32
  %328 = add nuw nsw i32 %261, 1
  %329 = icmp eq i32 %328, 4
  br i1 %329, label %330, label %260

330:                                              ; preds = %260
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subtract_average_16x8_c(i16* nocapture readonly, i16* nocapture) #2 {
  %3 = bitcast i16* %0 to <16 x i16>*
  %4 = load <16 x i16>, <16 x i16>* %3, align 2
  %5 = zext <16 x i16> %4 to <16 x i32>
  %6 = shufflevector <16 x i32> %5, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %7 = add nsw <16 x i32> %6, %5
  %8 = shufflevector <16 x i32> %7, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %9 = add nsw <16 x i32> %7, %8
  %10 = shufflevector <16 x i32> %9, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %11 = add nsw <16 x i32> %9, %10
  %12 = shufflevector <16 x i32> %11, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %13 = add nsw <16 x i32> %11, %12
  %14 = extractelement <16 x i32> %13, i32 0
  %15 = add nsw i32 %14, 64
  %16 = getelementptr inbounds i16, i16* %0, i64 32
  %17 = bitcast i16* %16 to <16 x i16>*
  %18 = load <16 x i16>, <16 x i16>* %17, align 2
  %19 = zext <16 x i16> %18 to <16 x i32>
  %20 = shufflevector <16 x i32> %19, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %21 = add nsw <16 x i32> %20, %19
  %22 = shufflevector <16 x i32> %21, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %23 = add nsw <16 x i32> %21, %22
  %24 = shufflevector <16 x i32> %23, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %25 = add nsw <16 x i32> %23, %24
  %26 = shufflevector <16 x i32> %25, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %27 = add nsw <16 x i32> %25, %26
  %28 = extractelement <16 x i32> %27, i32 0
  %29 = add nsw i32 %28, %15
  %30 = getelementptr inbounds i16, i16* %0, i64 64
  %31 = bitcast i16* %30 to <16 x i16>*
  %32 = load <16 x i16>, <16 x i16>* %31, align 2
  %33 = zext <16 x i16> %32 to <16 x i32>
  %34 = shufflevector <16 x i32> %33, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %35 = add nsw <16 x i32> %34, %33
  %36 = shufflevector <16 x i32> %35, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %37 = add nsw <16 x i32> %35, %36
  %38 = shufflevector <16 x i32> %37, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %39 = add nsw <16 x i32> %37, %38
  %40 = shufflevector <16 x i32> %39, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %41 = add nsw <16 x i32> %39, %40
  %42 = extractelement <16 x i32> %41, i32 0
  %43 = add nsw i32 %42, %29
  %44 = getelementptr inbounds i16, i16* %0, i64 96
  %45 = bitcast i16* %44 to <16 x i16>*
  %46 = load <16 x i16>, <16 x i16>* %45, align 2
  %47 = zext <16 x i16> %46 to <16 x i32>
  %48 = shufflevector <16 x i32> %47, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %49 = add nsw <16 x i32> %48, %47
  %50 = shufflevector <16 x i32> %49, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %51 = add nsw <16 x i32> %49, %50
  %52 = shufflevector <16 x i32> %51, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %53 = add nsw <16 x i32> %51, %52
  %54 = shufflevector <16 x i32> %53, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %55 = add nsw <16 x i32> %53, %54
  %56 = extractelement <16 x i32> %55, i32 0
  %57 = add nsw i32 %56, %43
  %58 = getelementptr inbounds i16, i16* %0, i64 128
  %59 = bitcast i16* %58 to <16 x i16>*
  %60 = load <16 x i16>, <16 x i16>* %59, align 2
  %61 = zext <16 x i16> %60 to <16 x i32>
  %62 = shufflevector <16 x i32> %61, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %63 = add nsw <16 x i32> %62, %61
  %64 = shufflevector <16 x i32> %63, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %65 = add nsw <16 x i32> %63, %64
  %66 = shufflevector <16 x i32> %65, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %67 = add nsw <16 x i32> %65, %66
  %68 = shufflevector <16 x i32> %67, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %69 = add nsw <16 x i32> %67, %68
  %70 = extractelement <16 x i32> %69, i32 0
  %71 = add nsw i32 %70, %57
  %72 = getelementptr inbounds i16, i16* %0, i64 160
  %73 = bitcast i16* %72 to <16 x i16>*
  %74 = load <16 x i16>, <16 x i16>* %73, align 2
  %75 = zext <16 x i16> %74 to <16 x i32>
  %76 = shufflevector <16 x i32> %75, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %77 = add nsw <16 x i32> %76, %75
  %78 = shufflevector <16 x i32> %77, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %79 = add nsw <16 x i32> %77, %78
  %80 = shufflevector <16 x i32> %79, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %81 = add nsw <16 x i32> %79, %80
  %82 = shufflevector <16 x i32> %81, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %83 = add nsw <16 x i32> %81, %82
  %84 = extractelement <16 x i32> %83, i32 0
  %85 = add nsw i32 %84, %71
  %86 = getelementptr inbounds i16, i16* %0, i64 192
  %87 = bitcast i16* %86 to <16 x i16>*
  %88 = load <16 x i16>, <16 x i16>* %87, align 2
  %89 = zext <16 x i16> %88 to <16 x i32>
  %90 = shufflevector <16 x i32> %89, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %91 = add nsw <16 x i32> %90, %89
  %92 = shufflevector <16 x i32> %91, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %93 = add nsw <16 x i32> %91, %92
  %94 = shufflevector <16 x i32> %93, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %95 = add nsw <16 x i32> %93, %94
  %96 = shufflevector <16 x i32> %95, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %97 = add nsw <16 x i32> %95, %96
  %98 = extractelement <16 x i32> %97, i32 0
  %99 = add nsw i32 %98, %85
  %100 = getelementptr inbounds i16, i16* %0, i64 224
  %101 = bitcast i16* %100 to <16 x i16>*
  %102 = load <16 x i16>, <16 x i16>* %101, align 2
  %103 = zext <16 x i16> %102 to <16 x i32>
  %104 = shufflevector <16 x i32> %103, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %105 = add nsw <16 x i32> %104, %103
  %106 = shufflevector <16 x i32> %105, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %107 = add nsw <16 x i32> %105, %106
  %108 = shufflevector <16 x i32> %107, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %109 = add nsw <16 x i32> %107, %108
  %110 = shufflevector <16 x i32> %109, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %111 = add nsw <16 x i32> %109, %110
  %112 = extractelement <16 x i32> %111, i32 0
  %113 = add nsw i32 %112, %99
  %114 = lshr i32 %113, 7
  %115 = trunc i32 %114 to i16
  br label %116

116:                                              ; preds = %116, %2
  %117 = phi i32 [ 0, %2 ], [ %184, %116 ]
  %118 = phi i16* [ %0, %2 ], [ %182, %116 ]
  %119 = phi i16* [ %1, %2 ], [ %183, %116 ]
  %120 = load i16, i16* %118, align 2
  %121 = sub i16 %120, %115
  store i16 %121, i16* %119, align 2
  %122 = getelementptr inbounds i16, i16* %118, i64 1
  %123 = load i16, i16* %122, align 2
  %124 = sub i16 %123, %115
  %125 = getelementptr inbounds i16, i16* %119, i64 1
  store i16 %124, i16* %125, align 2
  %126 = getelementptr inbounds i16, i16* %118, i64 2
  %127 = load i16, i16* %126, align 2
  %128 = sub i16 %127, %115
  %129 = getelementptr inbounds i16, i16* %119, i64 2
  store i16 %128, i16* %129, align 2
  %130 = getelementptr inbounds i16, i16* %118, i64 3
  %131 = load i16, i16* %130, align 2
  %132 = sub i16 %131, %115
  %133 = getelementptr inbounds i16, i16* %119, i64 3
  store i16 %132, i16* %133, align 2
  %134 = getelementptr inbounds i16, i16* %118, i64 4
  %135 = load i16, i16* %134, align 2
  %136 = sub i16 %135, %115
  %137 = getelementptr inbounds i16, i16* %119, i64 4
  store i16 %136, i16* %137, align 2
  %138 = getelementptr inbounds i16, i16* %118, i64 5
  %139 = load i16, i16* %138, align 2
  %140 = sub i16 %139, %115
  %141 = getelementptr inbounds i16, i16* %119, i64 5
  store i16 %140, i16* %141, align 2
  %142 = getelementptr inbounds i16, i16* %118, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = sub i16 %143, %115
  %145 = getelementptr inbounds i16, i16* %119, i64 6
  store i16 %144, i16* %145, align 2
  %146 = getelementptr inbounds i16, i16* %118, i64 7
  %147 = load i16, i16* %146, align 2
  %148 = sub i16 %147, %115
  %149 = getelementptr inbounds i16, i16* %119, i64 7
  store i16 %148, i16* %149, align 2
  %150 = getelementptr inbounds i16, i16* %118, i64 8
  %151 = load i16, i16* %150, align 2
  %152 = sub i16 %151, %115
  %153 = getelementptr inbounds i16, i16* %119, i64 8
  store i16 %152, i16* %153, align 2
  %154 = getelementptr inbounds i16, i16* %118, i64 9
  %155 = load i16, i16* %154, align 2
  %156 = sub i16 %155, %115
  %157 = getelementptr inbounds i16, i16* %119, i64 9
  store i16 %156, i16* %157, align 2
  %158 = getelementptr inbounds i16, i16* %118, i64 10
  %159 = load i16, i16* %158, align 2
  %160 = sub i16 %159, %115
  %161 = getelementptr inbounds i16, i16* %119, i64 10
  store i16 %160, i16* %161, align 2
  %162 = getelementptr inbounds i16, i16* %118, i64 11
  %163 = load i16, i16* %162, align 2
  %164 = sub i16 %163, %115
  %165 = getelementptr inbounds i16, i16* %119, i64 11
  store i16 %164, i16* %165, align 2
  %166 = getelementptr inbounds i16, i16* %118, i64 12
  %167 = load i16, i16* %166, align 2
  %168 = sub i16 %167, %115
  %169 = getelementptr inbounds i16, i16* %119, i64 12
  store i16 %168, i16* %169, align 2
  %170 = getelementptr inbounds i16, i16* %118, i64 13
  %171 = load i16, i16* %170, align 2
  %172 = sub i16 %171, %115
  %173 = getelementptr inbounds i16, i16* %119, i64 13
  store i16 %172, i16* %173, align 2
  %174 = getelementptr inbounds i16, i16* %118, i64 14
  %175 = load i16, i16* %174, align 2
  %176 = sub i16 %175, %115
  %177 = getelementptr inbounds i16, i16* %119, i64 14
  store i16 %176, i16* %177, align 2
  %178 = getelementptr inbounds i16, i16* %118, i64 15
  %179 = load i16, i16* %178, align 2
  %180 = sub i16 %179, %115
  %181 = getelementptr inbounds i16, i16* %119, i64 15
  store i16 %180, i16* %181, align 2
  %182 = getelementptr inbounds i16, i16* %118, i64 32
  %183 = getelementptr inbounds i16, i16* %119, i64 32
  %184 = add nuw nsw i32 %117, 1
  %185 = icmp eq i32 %184, 8
  br i1 %185, label %186, label %116

186:                                              ; preds = %116
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subtract_average_16x16_c(i16* nocapture readonly, i16* nocapture) #2 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi i32 [ 0, %2 ], [ %35, %3 ]
  %5 = phi i16* [ %0, %2 ], [ %34, %3 ]
  %6 = phi i32 [ 128, %2 ], [ %33, %3 ]
  %7 = bitcast i16* %5 to <16 x i16>*
  %8 = load <16 x i16>, <16 x i16>* %7, align 2
  %9 = zext <16 x i16> %8 to <16 x i32>
  %10 = shufflevector <16 x i32> %9, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %11 = add nsw <16 x i32> %10, %9
  %12 = shufflevector <16 x i32> %11, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %13 = add nsw <16 x i32> %11, %12
  %14 = shufflevector <16 x i32> %13, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %15 = add nsw <16 x i32> %13, %14
  %16 = shufflevector <16 x i32> %15, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %17 = add nsw <16 x i32> %15, %16
  %18 = extractelement <16 x i32> %17, i32 0
  %19 = add nsw i32 %18, %6
  %20 = getelementptr inbounds i16, i16* %5, i64 32
  %21 = bitcast i16* %20 to <16 x i16>*
  %22 = load <16 x i16>, <16 x i16>* %21, align 2
  %23 = zext <16 x i16> %22 to <16 x i32>
  %24 = shufflevector <16 x i32> %23, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %25 = add nsw <16 x i32> %24, %23
  %26 = shufflevector <16 x i32> %25, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %27 = add nsw <16 x i32> %25, %26
  %28 = shufflevector <16 x i32> %27, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %29 = add nsw <16 x i32> %27, %28
  %30 = shufflevector <16 x i32> %29, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %31 = add nsw <16 x i32> %29, %30
  %32 = extractelement <16 x i32> %31, i32 0
  %33 = add nsw i32 %32, %19
  %34 = getelementptr inbounds i16, i16* %5, i64 64
  %35 = add nuw nsw i32 %4, 2
  %36 = icmp eq i32 %35, 16
  br i1 %36, label %37, label %3

37:                                               ; preds = %3
  %38 = lshr i32 %33, 8
  %39 = trunc i32 %38 to i16
  br label %40

40:                                               ; preds = %40, %37
  %41 = phi i32 [ 0, %37 ], [ %108, %40 ]
  %42 = phi i16* [ %0, %37 ], [ %106, %40 ]
  %43 = phi i16* [ %1, %37 ], [ %107, %40 ]
  %44 = load i16, i16* %42, align 2
  %45 = sub i16 %44, %39
  store i16 %45, i16* %43, align 2
  %46 = getelementptr inbounds i16, i16* %42, i64 1
  %47 = load i16, i16* %46, align 2
  %48 = sub i16 %47, %39
  %49 = getelementptr inbounds i16, i16* %43, i64 1
  store i16 %48, i16* %49, align 2
  %50 = getelementptr inbounds i16, i16* %42, i64 2
  %51 = load i16, i16* %50, align 2
  %52 = sub i16 %51, %39
  %53 = getelementptr inbounds i16, i16* %43, i64 2
  store i16 %52, i16* %53, align 2
  %54 = getelementptr inbounds i16, i16* %42, i64 3
  %55 = load i16, i16* %54, align 2
  %56 = sub i16 %55, %39
  %57 = getelementptr inbounds i16, i16* %43, i64 3
  store i16 %56, i16* %57, align 2
  %58 = getelementptr inbounds i16, i16* %42, i64 4
  %59 = load i16, i16* %58, align 2
  %60 = sub i16 %59, %39
  %61 = getelementptr inbounds i16, i16* %43, i64 4
  store i16 %60, i16* %61, align 2
  %62 = getelementptr inbounds i16, i16* %42, i64 5
  %63 = load i16, i16* %62, align 2
  %64 = sub i16 %63, %39
  %65 = getelementptr inbounds i16, i16* %43, i64 5
  store i16 %64, i16* %65, align 2
  %66 = getelementptr inbounds i16, i16* %42, i64 6
  %67 = load i16, i16* %66, align 2
  %68 = sub i16 %67, %39
  %69 = getelementptr inbounds i16, i16* %43, i64 6
  store i16 %68, i16* %69, align 2
  %70 = getelementptr inbounds i16, i16* %42, i64 7
  %71 = load i16, i16* %70, align 2
  %72 = sub i16 %71, %39
  %73 = getelementptr inbounds i16, i16* %43, i64 7
  store i16 %72, i16* %73, align 2
  %74 = getelementptr inbounds i16, i16* %42, i64 8
  %75 = load i16, i16* %74, align 2
  %76 = sub i16 %75, %39
  %77 = getelementptr inbounds i16, i16* %43, i64 8
  store i16 %76, i16* %77, align 2
  %78 = getelementptr inbounds i16, i16* %42, i64 9
  %79 = load i16, i16* %78, align 2
  %80 = sub i16 %79, %39
  %81 = getelementptr inbounds i16, i16* %43, i64 9
  store i16 %80, i16* %81, align 2
  %82 = getelementptr inbounds i16, i16* %42, i64 10
  %83 = load i16, i16* %82, align 2
  %84 = sub i16 %83, %39
  %85 = getelementptr inbounds i16, i16* %43, i64 10
  store i16 %84, i16* %85, align 2
  %86 = getelementptr inbounds i16, i16* %42, i64 11
  %87 = load i16, i16* %86, align 2
  %88 = sub i16 %87, %39
  %89 = getelementptr inbounds i16, i16* %43, i64 11
  store i16 %88, i16* %89, align 2
  %90 = getelementptr inbounds i16, i16* %42, i64 12
  %91 = load i16, i16* %90, align 2
  %92 = sub i16 %91, %39
  %93 = getelementptr inbounds i16, i16* %43, i64 12
  store i16 %92, i16* %93, align 2
  %94 = getelementptr inbounds i16, i16* %42, i64 13
  %95 = load i16, i16* %94, align 2
  %96 = sub i16 %95, %39
  %97 = getelementptr inbounds i16, i16* %43, i64 13
  store i16 %96, i16* %97, align 2
  %98 = getelementptr inbounds i16, i16* %42, i64 14
  %99 = load i16, i16* %98, align 2
  %100 = sub i16 %99, %39
  %101 = getelementptr inbounds i16, i16* %43, i64 14
  store i16 %100, i16* %101, align 2
  %102 = getelementptr inbounds i16, i16* %42, i64 15
  %103 = load i16, i16* %102, align 2
  %104 = sub i16 %103, %39
  %105 = getelementptr inbounds i16, i16* %43, i64 15
  store i16 %104, i16* %105, align 2
  %106 = getelementptr inbounds i16, i16* %42, i64 32
  %107 = getelementptr inbounds i16, i16* %43, i64 32
  %108 = add nuw nsw i32 %41, 1
  %109 = icmp eq i32 %108, 16
  br i1 %109, label %110, label %40

110:                                              ; preds = %40
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subtract_average_16x32_c(i16* nocapture readonly, i16* nocapture) #2 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi i32 [ 0, %2 ], [ %35, %3 ]
  %5 = phi i16* [ %0, %2 ], [ %34, %3 ]
  %6 = phi i32 [ 256, %2 ], [ %33, %3 ]
  %7 = bitcast i16* %5 to <16 x i16>*
  %8 = load <16 x i16>, <16 x i16>* %7, align 2
  %9 = zext <16 x i16> %8 to <16 x i32>
  %10 = shufflevector <16 x i32> %9, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %11 = add nsw <16 x i32> %10, %9
  %12 = shufflevector <16 x i32> %11, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %13 = add nsw <16 x i32> %11, %12
  %14 = shufflevector <16 x i32> %13, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %15 = add nsw <16 x i32> %13, %14
  %16 = shufflevector <16 x i32> %15, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %17 = add nsw <16 x i32> %15, %16
  %18 = extractelement <16 x i32> %17, i32 0
  %19 = add nsw i32 %18, %6
  %20 = getelementptr inbounds i16, i16* %5, i64 32
  %21 = bitcast i16* %20 to <16 x i16>*
  %22 = load <16 x i16>, <16 x i16>* %21, align 2
  %23 = zext <16 x i16> %22 to <16 x i32>
  %24 = shufflevector <16 x i32> %23, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %25 = add nsw <16 x i32> %24, %23
  %26 = shufflevector <16 x i32> %25, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %27 = add nsw <16 x i32> %25, %26
  %28 = shufflevector <16 x i32> %27, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %29 = add nsw <16 x i32> %27, %28
  %30 = shufflevector <16 x i32> %29, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %31 = add nsw <16 x i32> %29, %30
  %32 = extractelement <16 x i32> %31, i32 0
  %33 = add nsw i32 %32, %19
  %34 = getelementptr inbounds i16, i16* %5, i64 64
  %35 = add nuw nsw i32 %4, 2
  %36 = icmp eq i32 %35, 32
  br i1 %36, label %37, label %3

37:                                               ; preds = %3
  %38 = lshr i32 %33, 9
  %39 = trunc i32 %38 to i16
  br label %40

40:                                               ; preds = %40, %37
  %41 = phi i32 [ 0, %37 ], [ %108, %40 ]
  %42 = phi i16* [ %0, %37 ], [ %106, %40 ]
  %43 = phi i16* [ %1, %37 ], [ %107, %40 ]
  %44 = load i16, i16* %42, align 2
  %45 = sub i16 %44, %39
  store i16 %45, i16* %43, align 2
  %46 = getelementptr inbounds i16, i16* %42, i64 1
  %47 = load i16, i16* %46, align 2
  %48 = sub i16 %47, %39
  %49 = getelementptr inbounds i16, i16* %43, i64 1
  store i16 %48, i16* %49, align 2
  %50 = getelementptr inbounds i16, i16* %42, i64 2
  %51 = load i16, i16* %50, align 2
  %52 = sub i16 %51, %39
  %53 = getelementptr inbounds i16, i16* %43, i64 2
  store i16 %52, i16* %53, align 2
  %54 = getelementptr inbounds i16, i16* %42, i64 3
  %55 = load i16, i16* %54, align 2
  %56 = sub i16 %55, %39
  %57 = getelementptr inbounds i16, i16* %43, i64 3
  store i16 %56, i16* %57, align 2
  %58 = getelementptr inbounds i16, i16* %42, i64 4
  %59 = load i16, i16* %58, align 2
  %60 = sub i16 %59, %39
  %61 = getelementptr inbounds i16, i16* %43, i64 4
  store i16 %60, i16* %61, align 2
  %62 = getelementptr inbounds i16, i16* %42, i64 5
  %63 = load i16, i16* %62, align 2
  %64 = sub i16 %63, %39
  %65 = getelementptr inbounds i16, i16* %43, i64 5
  store i16 %64, i16* %65, align 2
  %66 = getelementptr inbounds i16, i16* %42, i64 6
  %67 = load i16, i16* %66, align 2
  %68 = sub i16 %67, %39
  %69 = getelementptr inbounds i16, i16* %43, i64 6
  store i16 %68, i16* %69, align 2
  %70 = getelementptr inbounds i16, i16* %42, i64 7
  %71 = load i16, i16* %70, align 2
  %72 = sub i16 %71, %39
  %73 = getelementptr inbounds i16, i16* %43, i64 7
  store i16 %72, i16* %73, align 2
  %74 = getelementptr inbounds i16, i16* %42, i64 8
  %75 = load i16, i16* %74, align 2
  %76 = sub i16 %75, %39
  %77 = getelementptr inbounds i16, i16* %43, i64 8
  store i16 %76, i16* %77, align 2
  %78 = getelementptr inbounds i16, i16* %42, i64 9
  %79 = load i16, i16* %78, align 2
  %80 = sub i16 %79, %39
  %81 = getelementptr inbounds i16, i16* %43, i64 9
  store i16 %80, i16* %81, align 2
  %82 = getelementptr inbounds i16, i16* %42, i64 10
  %83 = load i16, i16* %82, align 2
  %84 = sub i16 %83, %39
  %85 = getelementptr inbounds i16, i16* %43, i64 10
  store i16 %84, i16* %85, align 2
  %86 = getelementptr inbounds i16, i16* %42, i64 11
  %87 = load i16, i16* %86, align 2
  %88 = sub i16 %87, %39
  %89 = getelementptr inbounds i16, i16* %43, i64 11
  store i16 %88, i16* %89, align 2
  %90 = getelementptr inbounds i16, i16* %42, i64 12
  %91 = load i16, i16* %90, align 2
  %92 = sub i16 %91, %39
  %93 = getelementptr inbounds i16, i16* %43, i64 12
  store i16 %92, i16* %93, align 2
  %94 = getelementptr inbounds i16, i16* %42, i64 13
  %95 = load i16, i16* %94, align 2
  %96 = sub i16 %95, %39
  %97 = getelementptr inbounds i16, i16* %43, i64 13
  store i16 %96, i16* %97, align 2
  %98 = getelementptr inbounds i16, i16* %42, i64 14
  %99 = load i16, i16* %98, align 2
  %100 = sub i16 %99, %39
  %101 = getelementptr inbounds i16, i16* %43, i64 14
  store i16 %100, i16* %101, align 2
  %102 = getelementptr inbounds i16, i16* %42, i64 15
  %103 = load i16, i16* %102, align 2
  %104 = sub i16 %103, %39
  %105 = getelementptr inbounds i16, i16* %43, i64 15
  store i16 %104, i16* %105, align 2
  %106 = getelementptr inbounds i16, i16* %42, i64 32
  %107 = getelementptr inbounds i16, i16* %43, i64 32
  %108 = add nuw nsw i32 %41, 1
  %109 = icmp eq i32 %108, 32
  br i1 %109, label %110, label %40

110:                                              ; preds = %40
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subtract_average_32x8_c(i16* nocapture readonly, i16* nocapture) #2 {
  %3 = bitcast i16* %0 to <32 x i16>*
  %4 = load <32 x i16>, <32 x i16>* %3, align 2
  %5 = zext <32 x i16> %4 to <32 x i32>
  %6 = shufflevector <32 x i32> %5, <32 x i32> undef, <32 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %7 = add nsw <32 x i32> %6, %5
  %8 = shufflevector <32 x i32> %7, <32 x i32> undef, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %9 = add nsw <32 x i32> %7, %8
  %10 = shufflevector <32 x i32> %9, <32 x i32> undef, <32 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %11 = add nsw <32 x i32> %9, %10
  %12 = shufflevector <32 x i32> %11, <32 x i32> undef, <32 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %13 = add nsw <32 x i32> %11, %12
  %14 = shufflevector <32 x i32> %13, <32 x i32> undef, <32 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %15 = add nsw <32 x i32> %13, %14
  %16 = extractelement <32 x i32> %15, i32 0
  %17 = add nsw i32 %16, 128
  %18 = getelementptr inbounds i16, i16* %0, i64 32
  %19 = bitcast i16* %18 to <32 x i16>*
  %20 = load <32 x i16>, <32 x i16>* %19, align 2
  %21 = zext <32 x i16> %20 to <32 x i32>
  %22 = shufflevector <32 x i32> %21, <32 x i32> undef, <32 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %23 = add nsw <32 x i32> %22, %21
  %24 = shufflevector <32 x i32> %23, <32 x i32> undef, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %25 = add nsw <32 x i32> %23, %24
  %26 = shufflevector <32 x i32> %25, <32 x i32> undef, <32 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %27 = add nsw <32 x i32> %25, %26
  %28 = shufflevector <32 x i32> %27, <32 x i32> undef, <32 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %29 = add nsw <32 x i32> %27, %28
  %30 = shufflevector <32 x i32> %29, <32 x i32> undef, <32 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %31 = add nsw <32 x i32> %29, %30
  %32 = extractelement <32 x i32> %31, i32 0
  %33 = add nsw i32 %32, %17
  %34 = getelementptr inbounds i16, i16* %0, i64 64
  %35 = bitcast i16* %34 to <32 x i16>*
  %36 = load <32 x i16>, <32 x i16>* %35, align 2
  %37 = zext <32 x i16> %36 to <32 x i32>
  %38 = shufflevector <32 x i32> %37, <32 x i32> undef, <32 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %39 = add nsw <32 x i32> %38, %37
  %40 = shufflevector <32 x i32> %39, <32 x i32> undef, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %41 = add nsw <32 x i32> %39, %40
  %42 = shufflevector <32 x i32> %41, <32 x i32> undef, <32 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %43 = add nsw <32 x i32> %41, %42
  %44 = shufflevector <32 x i32> %43, <32 x i32> undef, <32 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %45 = add nsw <32 x i32> %43, %44
  %46 = shufflevector <32 x i32> %45, <32 x i32> undef, <32 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %47 = add nsw <32 x i32> %45, %46
  %48 = extractelement <32 x i32> %47, i32 0
  %49 = add nsw i32 %48, %33
  %50 = getelementptr inbounds i16, i16* %0, i64 96
  %51 = bitcast i16* %50 to <32 x i16>*
  %52 = load <32 x i16>, <32 x i16>* %51, align 2
  %53 = zext <32 x i16> %52 to <32 x i32>
  %54 = shufflevector <32 x i32> %53, <32 x i32> undef, <32 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %55 = add nsw <32 x i32> %54, %53
  %56 = shufflevector <32 x i32> %55, <32 x i32> undef, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %57 = add nsw <32 x i32> %55, %56
  %58 = shufflevector <32 x i32> %57, <32 x i32> undef, <32 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %59 = add nsw <32 x i32> %57, %58
  %60 = shufflevector <32 x i32> %59, <32 x i32> undef, <32 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %61 = add nsw <32 x i32> %59, %60
  %62 = shufflevector <32 x i32> %61, <32 x i32> undef, <32 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %63 = add nsw <32 x i32> %61, %62
  %64 = extractelement <32 x i32> %63, i32 0
  %65 = add nsw i32 %64, %49
  %66 = getelementptr inbounds i16, i16* %0, i64 128
  %67 = bitcast i16* %66 to <32 x i16>*
  %68 = load <32 x i16>, <32 x i16>* %67, align 2
  %69 = zext <32 x i16> %68 to <32 x i32>
  %70 = shufflevector <32 x i32> %69, <32 x i32> undef, <32 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %71 = add nsw <32 x i32> %70, %69
  %72 = shufflevector <32 x i32> %71, <32 x i32> undef, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %73 = add nsw <32 x i32> %71, %72
  %74 = shufflevector <32 x i32> %73, <32 x i32> undef, <32 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %75 = add nsw <32 x i32> %73, %74
  %76 = shufflevector <32 x i32> %75, <32 x i32> undef, <32 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %77 = add nsw <32 x i32> %75, %76
  %78 = shufflevector <32 x i32> %77, <32 x i32> undef, <32 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %79 = add nsw <32 x i32> %77, %78
  %80 = extractelement <32 x i32> %79, i32 0
  %81 = add nsw i32 %80, %65
  %82 = getelementptr inbounds i16, i16* %0, i64 160
  %83 = bitcast i16* %82 to <32 x i16>*
  %84 = load <32 x i16>, <32 x i16>* %83, align 2
  %85 = zext <32 x i16> %84 to <32 x i32>
  %86 = shufflevector <32 x i32> %85, <32 x i32> undef, <32 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %87 = add nsw <32 x i32> %86, %85
  %88 = shufflevector <32 x i32> %87, <32 x i32> undef, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %89 = add nsw <32 x i32> %87, %88
  %90 = shufflevector <32 x i32> %89, <32 x i32> undef, <32 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %91 = add nsw <32 x i32> %89, %90
  %92 = shufflevector <32 x i32> %91, <32 x i32> undef, <32 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %93 = add nsw <32 x i32> %91, %92
  %94 = shufflevector <32 x i32> %93, <32 x i32> undef, <32 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %95 = add nsw <32 x i32> %93, %94
  %96 = extractelement <32 x i32> %95, i32 0
  %97 = add nsw i32 %96, %81
  %98 = getelementptr inbounds i16, i16* %0, i64 192
  %99 = bitcast i16* %98 to <32 x i16>*
  %100 = load <32 x i16>, <32 x i16>* %99, align 2
  %101 = zext <32 x i16> %100 to <32 x i32>
  %102 = shufflevector <32 x i32> %101, <32 x i32> undef, <32 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %103 = add nsw <32 x i32> %102, %101
  %104 = shufflevector <32 x i32> %103, <32 x i32> undef, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %105 = add nsw <32 x i32> %103, %104
  %106 = shufflevector <32 x i32> %105, <32 x i32> undef, <32 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %107 = add nsw <32 x i32> %105, %106
  %108 = shufflevector <32 x i32> %107, <32 x i32> undef, <32 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %109 = add nsw <32 x i32> %107, %108
  %110 = shufflevector <32 x i32> %109, <32 x i32> undef, <32 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %111 = add nsw <32 x i32> %109, %110
  %112 = extractelement <32 x i32> %111, i32 0
  %113 = add nsw i32 %112, %97
  %114 = getelementptr inbounds i16, i16* %0, i64 224
  %115 = bitcast i16* %114 to <32 x i16>*
  %116 = load <32 x i16>, <32 x i16>* %115, align 2
  %117 = zext <32 x i16> %116 to <32 x i32>
  %118 = shufflevector <32 x i32> %117, <32 x i32> undef, <32 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %119 = add nsw <32 x i32> %118, %117
  %120 = shufflevector <32 x i32> %119, <32 x i32> undef, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %121 = add nsw <32 x i32> %119, %120
  %122 = shufflevector <32 x i32> %121, <32 x i32> undef, <32 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %123 = add nsw <32 x i32> %121, %122
  %124 = shufflevector <32 x i32> %123, <32 x i32> undef, <32 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %125 = add nsw <32 x i32> %123, %124
  %126 = shufflevector <32 x i32> %125, <32 x i32> undef, <32 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %127 = add nsw <32 x i32> %125, %126
  %128 = extractelement <32 x i32> %127, i32 0
  %129 = add nsw i32 %128, %113
  %130 = lshr i32 %129, 8
  %131 = trunc i32 %130 to i16
  %132 = getelementptr i16, i16* %1, i64 32
  %133 = getelementptr i16, i16* %0, i64 32
  %134 = icmp ugt i16* %133, %1
  %135 = icmp ugt i16* %132, %0
  %136 = and i1 %134, %135
  br i1 %136, label %195, label %137

137:                                              ; preds = %2
  %138 = insertelement <8 x i16> undef, i16 %131, i32 0
  %139 = shufflevector <8 x i16> %138, <8 x i16> undef, <8 x i32> zeroinitializer
  %140 = bitcast i16* %0 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !2
  %142 = sub <8 x i16> %141, %139
  %143 = bitcast i16* %1 to <8 x i16>*
  store <8 x i16> %142, <8 x i16>* %143, align 2, !alias.scope !5, !noalias !2
  %144 = getelementptr inbounds i16, i16* %0, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !2
  %147 = sub <8 x i16> %146, %139
  %148 = getelementptr inbounds i16, i16* %1, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %147, <8 x i16>* %149, align 2, !alias.scope !5, !noalias !2
  %150 = getelementptr inbounds i16, i16* %0, i64 16
  %151 = bitcast i16* %150 to <8 x i16>*
  %152 = load <8 x i16>, <8 x i16>* %151, align 2, !alias.scope !2
  %153 = sub <8 x i16> %152, %139
  %154 = getelementptr inbounds i16, i16* %1, i64 16
  %155 = bitcast i16* %154 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %155, align 2, !alias.scope !5, !noalias !2
  %156 = getelementptr inbounds i16, i16* %0, i64 24
  %157 = bitcast i16* %156 to <8 x i16>*
  %158 = load <8 x i16>, <8 x i16>* %157, align 2, !alias.scope !2
  %159 = sub <8 x i16> %158, %139
  %160 = getelementptr inbounds i16, i16* %1, i64 24
  %161 = bitcast i16* %160 to <8 x i16>*
  store <8 x i16> %159, <8 x i16>* %161, align 2, !alias.scope !5, !noalias !2
  br label %162

162:                                              ; preds = %195, %137
  %163 = getelementptr inbounds i16, i16* %0, i64 32
  %164 = getelementptr inbounds i16, i16* %1, i64 32
  %165 = getelementptr i16, i16* %1, i64 64
  %166 = getelementptr i16, i16* %0, i64 64
  %167 = icmp ult i16* %164, %166
  %168 = icmp ult i16* %163, %165
  %169 = and i1 %167, %168
  br i1 %169, label %218, label %170

170:                                              ; preds = %162
  %171 = insertelement <8 x i16> undef, i16 %131, i32 0
  %172 = shufflevector <8 x i16> %171, <8 x i16> undef, <8 x i32> zeroinitializer
  %173 = bitcast i16* %163 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !7
  %175 = sub <8 x i16> %174, %172
  %176 = bitcast i16* %164 to <8 x i16>*
  store <8 x i16> %175, <8 x i16>* %176, align 2, !alias.scope !10, !noalias !7
  %177 = getelementptr inbounds i16, i16* %0, i64 40
  %178 = bitcast i16* %177 to <8 x i16>*
  %179 = load <8 x i16>, <8 x i16>* %178, align 2, !alias.scope !7
  %180 = sub <8 x i16> %179, %172
  %181 = getelementptr inbounds i16, i16* %1, i64 40
  %182 = bitcast i16* %181 to <8 x i16>*
  store <8 x i16> %180, <8 x i16>* %182, align 2, !alias.scope !10, !noalias !7
  %183 = getelementptr inbounds i16, i16* %0, i64 48
  %184 = bitcast i16* %183 to <8 x i16>*
  %185 = load <8 x i16>, <8 x i16>* %184, align 2, !alias.scope !7
  %186 = sub <8 x i16> %185, %172
  %187 = getelementptr inbounds i16, i16* %1, i64 48
  %188 = bitcast i16* %187 to <8 x i16>*
  store <8 x i16> %186, <8 x i16>* %188, align 2, !alias.scope !10, !noalias !7
  %189 = getelementptr inbounds i16, i16* %0, i64 56
  %190 = bitcast i16* %189 to <8 x i16>*
  %191 = load <8 x i16>, <8 x i16>* %190, align 2, !alias.scope !7
  %192 = sub <8 x i16> %191, %172
  %193 = getelementptr inbounds i16, i16* %1, i64 56
  %194 = bitcast i16* %193 to <8 x i16>*
  store <8 x i16> %192, <8 x i16>* %194, align 2, !alias.scope !10, !noalias !7
  br label %241

195:                                              ; preds = %2, %195
  %196 = phi i64 [ %216, %195 ], [ 0, %2 ]
  %197 = getelementptr inbounds i16, i16* %0, i64 %196
  %198 = load i16, i16* %197, align 2
  %199 = sub i16 %198, %131
  %200 = getelementptr inbounds i16, i16* %1, i64 %196
  store i16 %199, i16* %200, align 2
  %201 = or i64 %196, 1
  %202 = getelementptr inbounds i16, i16* %0, i64 %201
  %203 = load i16, i16* %202, align 2
  %204 = sub i16 %203, %131
  %205 = getelementptr inbounds i16, i16* %1, i64 %201
  store i16 %204, i16* %205, align 2
  %206 = or i64 %196, 2
  %207 = getelementptr inbounds i16, i16* %0, i64 %206
  %208 = load i16, i16* %207, align 2
  %209 = sub i16 %208, %131
  %210 = getelementptr inbounds i16, i16* %1, i64 %206
  store i16 %209, i16* %210, align 2
  %211 = or i64 %196, 3
  %212 = getelementptr inbounds i16, i16* %0, i64 %211
  %213 = load i16, i16* %212, align 2
  %214 = sub i16 %213, %131
  %215 = getelementptr inbounds i16, i16* %1, i64 %211
  store i16 %214, i16* %215, align 2
  %216 = add nuw nsw i64 %196, 4
  %217 = icmp eq i64 %216, 32
  br i1 %217, label %162, label %195, !llvm.loop !12

218:                                              ; preds = %162, %218
  %219 = phi i64 [ %239, %218 ], [ 0, %162 ]
  %220 = getelementptr inbounds i16, i16* %163, i64 %219
  %221 = load i16, i16* %220, align 2
  %222 = sub i16 %221, %131
  %223 = getelementptr inbounds i16, i16* %164, i64 %219
  store i16 %222, i16* %223, align 2
  %224 = or i64 %219, 1
  %225 = getelementptr inbounds i16, i16* %163, i64 %224
  %226 = load i16, i16* %225, align 2
  %227 = sub i16 %226, %131
  %228 = getelementptr inbounds i16, i16* %164, i64 %224
  store i16 %227, i16* %228, align 2
  %229 = or i64 %219, 2
  %230 = getelementptr inbounds i16, i16* %163, i64 %229
  %231 = load i16, i16* %230, align 2
  %232 = sub i16 %231, %131
  %233 = getelementptr inbounds i16, i16* %164, i64 %229
  store i16 %232, i16* %233, align 2
  %234 = or i64 %219, 3
  %235 = getelementptr inbounds i16, i16* %163, i64 %234
  %236 = load i16, i16* %235, align 2
  %237 = sub i16 %236, %131
  %238 = getelementptr inbounds i16, i16* %164, i64 %234
  store i16 %237, i16* %238, align 2
  %239 = add nuw nsw i64 %219, 4
  %240 = icmp eq i64 %239, 32
  br i1 %240, label %241, label %218, !llvm.loop !14

241:                                              ; preds = %218, %170
  %242 = getelementptr inbounds i16, i16* %0, i64 64
  %243 = getelementptr inbounds i16, i16* %1, i64 64
  %244 = getelementptr i16, i16* %1, i64 96
  %245 = getelementptr i16, i16* %0, i64 96
  %246 = icmp ult i16* %243, %245
  %247 = icmp ult i16* %242, %244
  %248 = and i1 %246, %247
  br i1 %248, label %274, label %249

249:                                              ; preds = %241
  %250 = insertelement <8 x i16> undef, i16 %131, i32 0
  %251 = shufflevector <8 x i16> %250, <8 x i16> undef, <8 x i32> zeroinitializer
  %252 = bitcast i16* %242 to <8 x i16>*
  %253 = load <8 x i16>, <8 x i16>* %252, align 2, !alias.scope !15
  %254 = sub <8 x i16> %253, %251
  %255 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %255, align 2, !alias.scope !18, !noalias !15
  %256 = getelementptr inbounds i16, i16* %0, i64 72
  %257 = bitcast i16* %256 to <8 x i16>*
  %258 = load <8 x i16>, <8 x i16>* %257, align 2, !alias.scope !15
  %259 = sub <8 x i16> %258, %251
  %260 = getelementptr inbounds i16, i16* %1, i64 72
  %261 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %259, <8 x i16>* %261, align 2, !alias.scope !18, !noalias !15
  %262 = getelementptr inbounds i16, i16* %0, i64 80
  %263 = bitcast i16* %262 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2, !alias.scope !15
  %265 = sub <8 x i16> %264, %251
  %266 = getelementptr inbounds i16, i16* %1, i64 80
  %267 = bitcast i16* %266 to <8 x i16>*
  store <8 x i16> %265, <8 x i16>* %267, align 2, !alias.scope !18, !noalias !15
  %268 = getelementptr inbounds i16, i16* %0, i64 88
  %269 = bitcast i16* %268 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !15
  %271 = sub <8 x i16> %270, %251
  %272 = getelementptr inbounds i16, i16* %1, i64 88
  %273 = bitcast i16* %272 to <8 x i16>*
  store <8 x i16> %271, <8 x i16>* %273, align 2, !alias.scope !18, !noalias !15
  br label %297

274:                                              ; preds = %241, %274
  %275 = phi i64 [ %295, %274 ], [ 0, %241 ]
  %276 = getelementptr inbounds i16, i16* %242, i64 %275
  %277 = load i16, i16* %276, align 2
  %278 = sub i16 %277, %131
  %279 = getelementptr inbounds i16, i16* %243, i64 %275
  store i16 %278, i16* %279, align 2
  %280 = or i64 %275, 1
  %281 = getelementptr inbounds i16, i16* %242, i64 %280
  %282 = load i16, i16* %281, align 2
  %283 = sub i16 %282, %131
  %284 = getelementptr inbounds i16, i16* %243, i64 %280
  store i16 %283, i16* %284, align 2
  %285 = or i64 %275, 2
  %286 = getelementptr inbounds i16, i16* %242, i64 %285
  %287 = load i16, i16* %286, align 2
  %288 = sub i16 %287, %131
  %289 = getelementptr inbounds i16, i16* %243, i64 %285
  store i16 %288, i16* %289, align 2
  %290 = or i64 %275, 3
  %291 = getelementptr inbounds i16, i16* %242, i64 %290
  %292 = load i16, i16* %291, align 2
  %293 = sub i16 %292, %131
  %294 = getelementptr inbounds i16, i16* %243, i64 %290
  store i16 %293, i16* %294, align 2
  %295 = add nuw nsw i64 %275, 4
  %296 = icmp eq i64 %295, 32
  br i1 %296, label %297, label %274, !llvm.loop !20

297:                                              ; preds = %274, %249
  %298 = getelementptr inbounds i16, i16* %0, i64 96
  %299 = getelementptr inbounds i16, i16* %1, i64 96
  %300 = getelementptr i16, i16* %1, i64 128
  %301 = getelementptr i16, i16* %0, i64 128
  %302 = icmp ult i16* %299, %301
  %303 = icmp ult i16* %298, %300
  %304 = and i1 %302, %303
  br i1 %304, label %330, label %305

305:                                              ; preds = %297
  %306 = insertelement <8 x i16> undef, i16 %131, i32 0
  %307 = shufflevector <8 x i16> %306, <8 x i16> undef, <8 x i32> zeroinitializer
  %308 = bitcast i16* %298 to <8 x i16>*
  %309 = load <8 x i16>, <8 x i16>* %308, align 2, !alias.scope !21
  %310 = sub <8 x i16> %309, %307
  %311 = bitcast i16* %299 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %311, align 2, !alias.scope !24, !noalias !21
  %312 = getelementptr inbounds i16, i16* %0, i64 104
  %313 = bitcast i16* %312 to <8 x i16>*
  %314 = load <8 x i16>, <8 x i16>* %313, align 2, !alias.scope !21
  %315 = sub <8 x i16> %314, %307
  %316 = getelementptr inbounds i16, i16* %1, i64 104
  %317 = bitcast i16* %316 to <8 x i16>*
  store <8 x i16> %315, <8 x i16>* %317, align 2, !alias.scope !24, !noalias !21
  %318 = getelementptr inbounds i16, i16* %0, i64 112
  %319 = bitcast i16* %318 to <8 x i16>*
  %320 = load <8 x i16>, <8 x i16>* %319, align 2, !alias.scope !21
  %321 = sub <8 x i16> %320, %307
  %322 = getelementptr inbounds i16, i16* %1, i64 112
  %323 = bitcast i16* %322 to <8 x i16>*
  store <8 x i16> %321, <8 x i16>* %323, align 2, !alias.scope !24, !noalias !21
  %324 = getelementptr inbounds i16, i16* %0, i64 120
  %325 = bitcast i16* %324 to <8 x i16>*
  %326 = load <8 x i16>, <8 x i16>* %325, align 2, !alias.scope !21
  %327 = sub <8 x i16> %326, %307
  %328 = getelementptr inbounds i16, i16* %1, i64 120
  %329 = bitcast i16* %328 to <8 x i16>*
  store <8 x i16> %327, <8 x i16>* %329, align 2, !alias.scope !24, !noalias !21
  br label %353

330:                                              ; preds = %297, %330
  %331 = phi i64 [ %351, %330 ], [ 0, %297 ]
  %332 = getelementptr inbounds i16, i16* %298, i64 %331
  %333 = load i16, i16* %332, align 2
  %334 = sub i16 %333, %131
  %335 = getelementptr inbounds i16, i16* %299, i64 %331
  store i16 %334, i16* %335, align 2
  %336 = or i64 %331, 1
  %337 = getelementptr inbounds i16, i16* %298, i64 %336
  %338 = load i16, i16* %337, align 2
  %339 = sub i16 %338, %131
  %340 = getelementptr inbounds i16, i16* %299, i64 %336
  store i16 %339, i16* %340, align 2
  %341 = or i64 %331, 2
  %342 = getelementptr inbounds i16, i16* %298, i64 %341
  %343 = load i16, i16* %342, align 2
  %344 = sub i16 %343, %131
  %345 = getelementptr inbounds i16, i16* %299, i64 %341
  store i16 %344, i16* %345, align 2
  %346 = or i64 %331, 3
  %347 = getelementptr inbounds i16, i16* %298, i64 %346
  %348 = load i16, i16* %347, align 2
  %349 = sub i16 %348, %131
  %350 = getelementptr inbounds i16, i16* %299, i64 %346
  store i16 %349, i16* %350, align 2
  %351 = add nuw nsw i64 %331, 4
  %352 = icmp eq i64 %351, 32
  br i1 %352, label %353, label %330, !llvm.loop !26

353:                                              ; preds = %330, %305
  %354 = getelementptr inbounds i16, i16* %0, i64 128
  %355 = getelementptr inbounds i16, i16* %1, i64 128
  %356 = getelementptr i16, i16* %1, i64 160
  %357 = getelementptr i16, i16* %0, i64 160
  %358 = icmp ult i16* %355, %357
  %359 = icmp ult i16* %354, %356
  %360 = and i1 %358, %359
  br i1 %360, label %386, label %361

361:                                              ; preds = %353
  %362 = insertelement <8 x i16> undef, i16 %131, i32 0
  %363 = shufflevector <8 x i16> %362, <8 x i16> undef, <8 x i32> zeroinitializer
  %364 = bitcast i16* %354 to <8 x i16>*
  %365 = load <8 x i16>, <8 x i16>* %364, align 2, !alias.scope !27
  %366 = sub <8 x i16> %365, %363
  %367 = bitcast i16* %355 to <8 x i16>*
  store <8 x i16> %366, <8 x i16>* %367, align 2, !alias.scope !30, !noalias !27
  %368 = getelementptr inbounds i16, i16* %0, i64 136
  %369 = bitcast i16* %368 to <8 x i16>*
  %370 = load <8 x i16>, <8 x i16>* %369, align 2, !alias.scope !27
  %371 = sub <8 x i16> %370, %363
  %372 = getelementptr inbounds i16, i16* %1, i64 136
  %373 = bitcast i16* %372 to <8 x i16>*
  store <8 x i16> %371, <8 x i16>* %373, align 2, !alias.scope !30, !noalias !27
  %374 = getelementptr inbounds i16, i16* %0, i64 144
  %375 = bitcast i16* %374 to <8 x i16>*
  %376 = load <8 x i16>, <8 x i16>* %375, align 2, !alias.scope !27
  %377 = sub <8 x i16> %376, %363
  %378 = getelementptr inbounds i16, i16* %1, i64 144
  %379 = bitcast i16* %378 to <8 x i16>*
  store <8 x i16> %377, <8 x i16>* %379, align 2, !alias.scope !30, !noalias !27
  %380 = getelementptr inbounds i16, i16* %0, i64 152
  %381 = bitcast i16* %380 to <8 x i16>*
  %382 = load <8 x i16>, <8 x i16>* %381, align 2, !alias.scope !27
  %383 = sub <8 x i16> %382, %363
  %384 = getelementptr inbounds i16, i16* %1, i64 152
  %385 = bitcast i16* %384 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %385, align 2, !alias.scope !30, !noalias !27
  br label %409

386:                                              ; preds = %353, %386
  %387 = phi i64 [ %407, %386 ], [ 0, %353 ]
  %388 = getelementptr inbounds i16, i16* %354, i64 %387
  %389 = load i16, i16* %388, align 2
  %390 = sub i16 %389, %131
  %391 = getelementptr inbounds i16, i16* %355, i64 %387
  store i16 %390, i16* %391, align 2
  %392 = or i64 %387, 1
  %393 = getelementptr inbounds i16, i16* %354, i64 %392
  %394 = load i16, i16* %393, align 2
  %395 = sub i16 %394, %131
  %396 = getelementptr inbounds i16, i16* %355, i64 %392
  store i16 %395, i16* %396, align 2
  %397 = or i64 %387, 2
  %398 = getelementptr inbounds i16, i16* %354, i64 %397
  %399 = load i16, i16* %398, align 2
  %400 = sub i16 %399, %131
  %401 = getelementptr inbounds i16, i16* %355, i64 %397
  store i16 %400, i16* %401, align 2
  %402 = or i64 %387, 3
  %403 = getelementptr inbounds i16, i16* %354, i64 %402
  %404 = load i16, i16* %403, align 2
  %405 = sub i16 %404, %131
  %406 = getelementptr inbounds i16, i16* %355, i64 %402
  store i16 %405, i16* %406, align 2
  %407 = add nuw nsw i64 %387, 4
  %408 = icmp eq i64 %407, 32
  br i1 %408, label %409, label %386, !llvm.loop !32

409:                                              ; preds = %386, %361
  %410 = getelementptr inbounds i16, i16* %0, i64 160
  %411 = getelementptr inbounds i16, i16* %1, i64 160
  %412 = getelementptr i16, i16* %1, i64 192
  %413 = getelementptr i16, i16* %0, i64 192
  %414 = icmp ult i16* %411, %413
  %415 = icmp ult i16* %410, %412
  %416 = and i1 %414, %415
  br i1 %416, label %442, label %417

417:                                              ; preds = %409
  %418 = insertelement <8 x i16> undef, i16 %131, i32 0
  %419 = shufflevector <8 x i16> %418, <8 x i16> undef, <8 x i32> zeroinitializer
  %420 = bitcast i16* %410 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !33
  %422 = sub <8 x i16> %421, %419
  %423 = bitcast i16* %411 to <8 x i16>*
  store <8 x i16> %422, <8 x i16>* %423, align 2, !alias.scope !36, !noalias !33
  %424 = getelementptr inbounds i16, i16* %0, i64 168
  %425 = bitcast i16* %424 to <8 x i16>*
  %426 = load <8 x i16>, <8 x i16>* %425, align 2, !alias.scope !33
  %427 = sub <8 x i16> %426, %419
  %428 = getelementptr inbounds i16, i16* %1, i64 168
  %429 = bitcast i16* %428 to <8 x i16>*
  store <8 x i16> %427, <8 x i16>* %429, align 2, !alias.scope !36, !noalias !33
  %430 = getelementptr inbounds i16, i16* %0, i64 176
  %431 = bitcast i16* %430 to <8 x i16>*
  %432 = load <8 x i16>, <8 x i16>* %431, align 2, !alias.scope !33
  %433 = sub <8 x i16> %432, %419
  %434 = getelementptr inbounds i16, i16* %1, i64 176
  %435 = bitcast i16* %434 to <8 x i16>*
  store <8 x i16> %433, <8 x i16>* %435, align 2, !alias.scope !36, !noalias !33
  %436 = getelementptr inbounds i16, i16* %0, i64 184
  %437 = bitcast i16* %436 to <8 x i16>*
  %438 = load <8 x i16>, <8 x i16>* %437, align 2, !alias.scope !33
  %439 = sub <8 x i16> %438, %419
  %440 = getelementptr inbounds i16, i16* %1, i64 184
  %441 = bitcast i16* %440 to <8 x i16>*
  store <8 x i16> %439, <8 x i16>* %441, align 2, !alias.scope !36, !noalias !33
  br label %465

442:                                              ; preds = %409, %442
  %443 = phi i64 [ %463, %442 ], [ 0, %409 ]
  %444 = getelementptr inbounds i16, i16* %410, i64 %443
  %445 = load i16, i16* %444, align 2
  %446 = sub i16 %445, %131
  %447 = getelementptr inbounds i16, i16* %411, i64 %443
  store i16 %446, i16* %447, align 2
  %448 = or i64 %443, 1
  %449 = getelementptr inbounds i16, i16* %410, i64 %448
  %450 = load i16, i16* %449, align 2
  %451 = sub i16 %450, %131
  %452 = getelementptr inbounds i16, i16* %411, i64 %448
  store i16 %451, i16* %452, align 2
  %453 = or i64 %443, 2
  %454 = getelementptr inbounds i16, i16* %410, i64 %453
  %455 = load i16, i16* %454, align 2
  %456 = sub i16 %455, %131
  %457 = getelementptr inbounds i16, i16* %411, i64 %453
  store i16 %456, i16* %457, align 2
  %458 = or i64 %443, 3
  %459 = getelementptr inbounds i16, i16* %410, i64 %458
  %460 = load i16, i16* %459, align 2
  %461 = sub i16 %460, %131
  %462 = getelementptr inbounds i16, i16* %411, i64 %458
  store i16 %461, i16* %462, align 2
  %463 = add nuw nsw i64 %443, 4
  %464 = icmp eq i64 %463, 32
  br i1 %464, label %465, label %442, !llvm.loop !38

465:                                              ; preds = %442, %417
  %466 = getelementptr inbounds i16, i16* %0, i64 192
  %467 = getelementptr inbounds i16, i16* %1, i64 192
  %468 = getelementptr i16, i16* %1, i64 224
  %469 = getelementptr i16, i16* %0, i64 224
  %470 = icmp ult i16* %467, %469
  %471 = icmp ult i16* %466, %468
  %472 = and i1 %470, %471
  br i1 %472, label %498, label %473

473:                                              ; preds = %465
  %474 = insertelement <8 x i16> undef, i16 %131, i32 0
  %475 = shufflevector <8 x i16> %474, <8 x i16> undef, <8 x i32> zeroinitializer
  %476 = bitcast i16* %466 to <8 x i16>*
  %477 = load <8 x i16>, <8 x i16>* %476, align 2, !alias.scope !39
  %478 = sub <8 x i16> %477, %475
  %479 = bitcast i16* %467 to <8 x i16>*
  store <8 x i16> %478, <8 x i16>* %479, align 2, !alias.scope !42, !noalias !39
  %480 = getelementptr inbounds i16, i16* %0, i64 200
  %481 = bitcast i16* %480 to <8 x i16>*
  %482 = load <8 x i16>, <8 x i16>* %481, align 2, !alias.scope !39
  %483 = sub <8 x i16> %482, %475
  %484 = getelementptr inbounds i16, i16* %1, i64 200
  %485 = bitcast i16* %484 to <8 x i16>*
  store <8 x i16> %483, <8 x i16>* %485, align 2, !alias.scope !42, !noalias !39
  %486 = getelementptr inbounds i16, i16* %0, i64 208
  %487 = bitcast i16* %486 to <8 x i16>*
  %488 = load <8 x i16>, <8 x i16>* %487, align 2, !alias.scope !39
  %489 = sub <8 x i16> %488, %475
  %490 = getelementptr inbounds i16, i16* %1, i64 208
  %491 = bitcast i16* %490 to <8 x i16>*
  store <8 x i16> %489, <8 x i16>* %491, align 2, !alias.scope !42, !noalias !39
  %492 = getelementptr inbounds i16, i16* %0, i64 216
  %493 = bitcast i16* %492 to <8 x i16>*
  %494 = load <8 x i16>, <8 x i16>* %493, align 2, !alias.scope !39
  %495 = sub <8 x i16> %494, %475
  %496 = getelementptr inbounds i16, i16* %1, i64 216
  %497 = bitcast i16* %496 to <8 x i16>*
  store <8 x i16> %495, <8 x i16>* %497, align 2, !alias.scope !42, !noalias !39
  br label %521

498:                                              ; preds = %465, %498
  %499 = phi i64 [ %519, %498 ], [ 0, %465 ]
  %500 = getelementptr inbounds i16, i16* %466, i64 %499
  %501 = load i16, i16* %500, align 2
  %502 = sub i16 %501, %131
  %503 = getelementptr inbounds i16, i16* %467, i64 %499
  store i16 %502, i16* %503, align 2
  %504 = or i64 %499, 1
  %505 = getelementptr inbounds i16, i16* %466, i64 %504
  %506 = load i16, i16* %505, align 2
  %507 = sub i16 %506, %131
  %508 = getelementptr inbounds i16, i16* %467, i64 %504
  store i16 %507, i16* %508, align 2
  %509 = or i64 %499, 2
  %510 = getelementptr inbounds i16, i16* %466, i64 %509
  %511 = load i16, i16* %510, align 2
  %512 = sub i16 %511, %131
  %513 = getelementptr inbounds i16, i16* %467, i64 %509
  store i16 %512, i16* %513, align 2
  %514 = or i64 %499, 3
  %515 = getelementptr inbounds i16, i16* %466, i64 %514
  %516 = load i16, i16* %515, align 2
  %517 = sub i16 %516, %131
  %518 = getelementptr inbounds i16, i16* %467, i64 %514
  store i16 %517, i16* %518, align 2
  %519 = add nuw nsw i64 %499, 4
  %520 = icmp eq i64 %519, 32
  br i1 %520, label %521, label %498, !llvm.loop !44

521:                                              ; preds = %498, %473
  %522 = getelementptr inbounds i16, i16* %0, i64 224
  %523 = getelementptr inbounds i16, i16* %1, i64 224
  %524 = getelementptr i16, i16* %1, i64 256
  %525 = getelementptr i16, i16* %0, i64 256
  %526 = icmp ult i16* %523, %525
  %527 = icmp ult i16* %522, %524
  %528 = and i1 %526, %527
  br i1 %528, label %554, label %529

529:                                              ; preds = %521
  %530 = insertelement <8 x i16> undef, i16 %131, i32 0
  %531 = shufflevector <8 x i16> %530, <8 x i16> undef, <8 x i32> zeroinitializer
  %532 = bitcast i16* %522 to <8 x i16>*
  %533 = load <8 x i16>, <8 x i16>* %532, align 2, !alias.scope !45
  %534 = sub <8 x i16> %533, %531
  %535 = bitcast i16* %523 to <8 x i16>*
  store <8 x i16> %534, <8 x i16>* %535, align 2, !alias.scope !48, !noalias !45
  %536 = getelementptr inbounds i16, i16* %0, i64 232
  %537 = bitcast i16* %536 to <8 x i16>*
  %538 = load <8 x i16>, <8 x i16>* %537, align 2, !alias.scope !45
  %539 = sub <8 x i16> %538, %531
  %540 = getelementptr inbounds i16, i16* %1, i64 232
  %541 = bitcast i16* %540 to <8 x i16>*
  store <8 x i16> %539, <8 x i16>* %541, align 2, !alias.scope !48, !noalias !45
  %542 = getelementptr inbounds i16, i16* %0, i64 240
  %543 = bitcast i16* %542 to <8 x i16>*
  %544 = load <8 x i16>, <8 x i16>* %543, align 2, !alias.scope !45
  %545 = sub <8 x i16> %544, %531
  %546 = getelementptr inbounds i16, i16* %1, i64 240
  %547 = bitcast i16* %546 to <8 x i16>*
  store <8 x i16> %545, <8 x i16>* %547, align 2, !alias.scope !48, !noalias !45
  %548 = getelementptr inbounds i16, i16* %0, i64 248
  %549 = bitcast i16* %548 to <8 x i16>*
  %550 = load <8 x i16>, <8 x i16>* %549, align 2, !alias.scope !45
  %551 = sub <8 x i16> %550, %531
  %552 = getelementptr inbounds i16, i16* %1, i64 248
  %553 = bitcast i16* %552 to <8 x i16>*
  store <8 x i16> %551, <8 x i16>* %553, align 2, !alias.scope !48, !noalias !45
  br label %577

554:                                              ; preds = %521, %554
  %555 = phi i64 [ %575, %554 ], [ 0, %521 ]
  %556 = getelementptr inbounds i16, i16* %522, i64 %555
  %557 = load i16, i16* %556, align 2
  %558 = sub i16 %557, %131
  %559 = getelementptr inbounds i16, i16* %523, i64 %555
  store i16 %558, i16* %559, align 2
  %560 = or i64 %555, 1
  %561 = getelementptr inbounds i16, i16* %522, i64 %560
  %562 = load i16, i16* %561, align 2
  %563 = sub i16 %562, %131
  %564 = getelementptr inbounds i16, i16* %523, i64 %560
  store i16 %563, i16* %564, align 2
  %565 = or i64 %555, 2
  %566 = getelementptr inbounds i16, i16* %522, i64 %565
  %567 = load i16, i16* %566, align 2
  %568 = sub i16 %567, %131
  %569 = getelementptr inbounds i16, i16* %523, i64 %565
  store i16 %568, i16* %569, align 2
  %570 = or i64 %555, 3
  %571 = getelementptr inbounds i16, i16* %522, i64 %570
  %572 = load i16, i16* %571, align 2
  %573 = sub i16 %572, %131
  %574 = getelementptr inbounds i16, i16* %523, i64 %570
  store i16 %573, i16* %574, align 2
  %575 = add nuw nsw i64 %555, 4
  %576 = icmp eq i64 %575, 32
  br i1 %576, label %577, label %554, !llvm.loop !50

577:                                              ; preds = %554, %529
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subtract_average_32x16_c(i16* nocapture readonly, i16* nocapture) #2 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi i32 [ 0, %2 ], [ %23, %3 ]
  %5 = phi i16* [ %0, %2 ], [ %22, %3 ]
  %6 = phi i32 [ 256, %2 ], [ %21, %3 ]
  %7 = bitcast i16* %5 to <32 x i16>*
  %8 = load <32 x i16>, <32 x i16>* %7, align 2
  %9 = zext <32 x i16> %8 to <32 x i32>
  %10 = shufflevector <32 x i32> %9, <32 x i32> undef, <32 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %11 = add nsw <32 x i32> %10, %9
  %12 = shufflevector <32 x i32> %11, <32 x i32> undef, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %13 = add nsw <32 x i32> %11, %12
  %14 = shufflevector <32 x i32> %13, <32 x i32> undef, <32 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %15 = add nsw <32 x i32> %13, %14
  %16 = shufflevector <32 x i32> %15, <32 x i32> undef, <32 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %17 = add nsw <32 x i32> %15, %16
  %18 = shufflevector <32 x i32> %17, <32 x i32> undef, <32 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %19 = add nsw <32 x i32> %17, %18
  %20 = extractelement <32 x i32> %19, i32 0
  %21 = add nsw i32 %20, %6
  %22 = getelementptr inbounds i16, i16* %5, i64 32
  %23 = add nuw nsw i32 %4, 1
  %24 = icmp eq i32 %23, 16
  br i1 %24, label %25, label %3

25:                                               ; preds = %3
  %26 = lshr i32 %21, 9
  %27 = trunc i32 %26 to i16
  %28 = getelementptr i16, i16* %1, i64 32
  %29 = getelementptr i16, i16* %0, i64 32
  %30 = icmp ugt i16* %29, %1
  %31 = icmp ugt i16* %28, %0
  %32 = and i1 %30, %31
  br i1 %32, label %91, label %33

33:                                               ; preds = %25
  %34 = insertelement <8 x i16> undef, i16 %27, i32 0
  %35 = shufflevector <8 x i16> %34, <8 x i16> undef, <8 x i32> zeroinitializer
  %36 = bitcast i16* %0 to <8 x i16>*
  %37 = load <8 x i16>, <8 x i16>* %36, align 2, !alias.scope !51
  %38 = sub <8 x i16> %37, %35
  %39 = bitcast i16* %1 to <8 x i16>*
  store <8 x i16> %38, <8 x i16>* %39, align 2, !alias.scope !54, !noalias !51
  %40 = getelementptr inbounds i16, i16* %0, i64 8
  %41 = bitcast i16* %40 to <8 x i16>*
  %42 = load <8 x i16>, <8 x i16>* %41, align 2, !alias.scope !51
  %43 = sub <8 x i16> %42, %35
  %44 = getelementptr inbounds i16, i16* %1, i64 8
  %45 = bitcast i16* %44 to <8 x i16>*
  store <8 x i16> %43, <8 x i16>* %45, align 2, !alias.scope !54, !noalias !51
  %46 = getelementptr inbounds i16, i16* %0, i64 16
  %47 = bitcast i16* %46 to <8 x i16>*
  %48 = load <8 x i16>, <8 x i16>* %47, align 2, !alias.scope !51
  %49 = sub <8 x i16> %48, %35
  %50 = getelementptr inbounds i16, i16* %1, i64 16
  %51 = bitcast i16* %50 to <8 x i16>*
  store <8 x i16> %49, <8 x i16>* %51, align 2, !alias.scope !54, !noalias !51
  %52 = getelementptr inbounds i16, i16* %0, i64 24
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2, !alias.scope !51
  %55 = sub <8 x i16> %54, %35
  %56 = getelementptr inbounds i16, i16* %1, i64 24
  %57 = bitcast i16* %56 to <8 x i16>*
  store <8 x i16> %55, <8 x i16>* %57, align 2, !alias.scope !54, !noalias !51
  br label %58

58:                                               ; preds = %91, %33
  %59 = getelementptr inbounds i16, i16* %0, i64 32
  %60 = getelementptr inbounds i16, i16* %1, i64 32
  %61 = getelementptr i16, i16* %1, i64 64
  %62 = getelementptr i16, i16* %0, i64 64
  %63 = icmp ult i16* %60, %62
  %64 = icmp ult i16* %59, %61
  %65 = and i1 %63, %64
  br i1 %65, label %114, label %66

66:                                               ; preds = %58
  %67 = insertelement <8 x i16> undef, i16 %27, i32 0
  %68 = shufflevector <8 x i16> %67, <8 x i16> undef, <8 x i32> zeroinitializer
  %69 = bitcast i16* %59 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !56
  %71 = sub <8 x i16> %70, %68
  %72 = bitcast i16* %60 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %72, align 2, !alias.scope !59, !noalias !56
  %73 = getelementptr inbounds i16, i16* %0, i64 40
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !56
  %76 = sub <8 x i16> %75, %68
  %77 = getelementptr inbounds i16, i16* %1, i64 40
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %78, align 2, !alias.scope !59, !noalias !56
  %79 = getelementptr inbounds i16, i16* %0, i64 48
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !56
  %82 = sub <8 x i16> %81, %68
  %83 = getelementptr inbounds i16, i16* %1, i64 48
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %84, align 2, !alias.scope !59, !noalias !56
  %85 = getelementptr inbounds i16, i16* %0, i64 56
  %86 = bitcast i16* %85 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !56
  %88 = sub <8 x i16> %87, %68
  %89 = getelementptr inbounds i16, i16* %1, i64 56
  %90 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %90, align 2, !alias.scope !59, !noalias !56
  br label %137

91:                                               ; preds = %25, %91
  %92 = phi i64 [ %112, %91 ], [ 0, %25 ]
  %93 = getelementptr inbounds i16, i16* %0, i64 %92
  %94 = load i16, i16* %93, align 2
  %95 = sub i16 %94, %27
  %96 = getelementptr inbounds i16, i16* %1, i64 %92
  store i16 %95, i16* %96, align 2
  %97 = or i64 %92, 1
  %98 = getelementptr inbounds i16, i16* %0, i64 %97
  %99 = load i16, i16* %98, align 2
  %100 = sub i16 %99, %27
  %101 = getelementptr inbounds i16, i16* %1, i64 %97
  store i16 %100, i16* %101, align 2
  %102 = or i64 %92, 2
  %103 = getelementptr inbounds i16, i16* %0, i64 %102
  %104 = load i16, i16* %103, align 2
  %105 = sub i16 %104, %27
  %106 = getelementptr inbounds i16, i16* %1, i64 %102
  store i16 %105, i16* %106, align 2
  %107 = or i64 %92, 3
  %108 = getelementptr inbounds i16, i16* %0, i64 %107
  %109 = load i16, i16* %108, align 2
  %110 = sub i16 %109, %27
  %111 = getelementptr inbounds i16, i16* %1, i64 %107
  store i16 %110, i16* %111, align 2
  %112 = add nuw nsw i64 %92, 4
  %113 = icmp eq i64 %112, 32
  br i1 %113, label %58, label %91, !llvm.loop !61

114:                                              ; preds = %58, %114
  %115 = phi i64 [ %135, %114 ], [ 0, %58 ]
  %116 = getelementptr inbounds i16, i16* %59, i64 %115
  %117 = load i16, i16* %116, align 2
  %118 = sub i16 %117, %27
  %119 = getelementptr inbounds i16, i16* %60, i64 %115
  store i16 %118, i16* %119, align 2
  %120 = or i64 %115, 1
  %121 = getelementptr inbounds i16, i16* %59, i64 %120
  %122 = load i16, i16* %121, align 2
  %123 = sub i16 %122, %27
  %124 = getelementptr inbounds i16, i16* %60, i64 %120
  store i16 %123, i16* %124, align 2
  %125 = or i64 %115, 2
  %126 = getelementptr inbounds i16, i16* %59, i64 %125
  %127 = load i16, i16* %126, align 2
  %128 = sub i16 %127, %27
  %129 = getelementptr inbounds i16, i16* %60, i64 %125
  store i16 %128, i16* %129, align 2
  %130 = or i64 %115, 3
  %131 = getelementptr inbounds i16, i16* %59, i64 %130
  %132 = load i16, i16* %131, align 2
  %133 = sub i16 %132, %27
  %134 = getelementptr inbounds i16, i16* %60, i64 %130
  store i16 %133, i16* %134, align 2
  %135 = add nuw nsw i64 %115, 4
  %136 = icmp eq i64 %135, 32
  br i1 %136, label %137, label %114, !llvm.loop !62

137:                                              ; preds = %114, %66
  %138 = getelementptr inbounds i16, i16* %0, i64 64
  %139 = getelementptr inbounds i16, i16* %1, i64 64
  %140 = getelementptr i16, i16* %1, i64 96
  %141 = getelementptr i16, i16* %0, i64 96
  %142 = icmp ult i16* %139, %141
  %143 = icmp ult i16* %138, %140
  %144 = and i1 %142, %143
  br i1 %144, label %170, label %145

145:                                              ; preds = %137
  %146 = insertelement <8 x i16> undef, i16 %27, i32 0
  %147 = shufflevector <8 x i16> %146, <8 x i16> undef, <8 x i32> zeroinitializer
  %148 = bitcast i16* %138 to <8 x i16>*
  %149 = load <8 x i16>, <8 x i16>* %148, align 2, !alias.scope !63
  %150 = sub <8 x i16> %149, %147
  %151 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %150, <8 x i16>* %151, align 2, !alias.scope !66, !noalias !63
  %152 = getelementptr inbounds i16, i16* %0, i64 72
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !63
  %155 = sub <8 x i16> %154, %147
  %156 = getelementptr inbounds i16, i16* %1, i64 72
  %157 = bitcast i16* %156 to <8 x i16>*
  store <8 x i16> %155, <8 x i16>* %157, align 2, !alias.scope !66, !noalias !63
  %158 = getelementptr inbounds i16, i16* %0, i64 80
  %159 = bitcast i16* %158 to <8 x i16>*
  %160 = load <8 x i16>, <8 x i16>* %159, align 2, !alias.scope !63
  %161 = sub <8 x i16> %160, %147
  %162 = getelementptr inbounds i16, i16* %1, i64 80
  %163 = bitcast i16* %162 to <8 x i16>*
  store <8 x i16> %161, <8 x i16>* %163, align 2, !alias.scope !66, !noalias !63
  %164 = getelementptr inbounds i16, i16* %0, i64 88
  %165 = bitcast i16* %164 to <8 x i16>*
  %166 = load <8 x i16>, <8 x i16>* %165, align 2, !alias.scope !63
  %167 = sub <8 x i16> %166, %147
  %168 = getelementptr inbounds i16, i16* %1, i64 88
  %169 = bitcast i16* %168 to <8 x i16>*
  store <8 x i16> %167, <8 x i16>* %169, align 2, !alias.scope !66, !noalias !63
  br label %193

170:                                              ; preds = %137, %170
  %171 = phi i64 [ %191, %170 ], [ 0, %137 ]
  %172 = getelementptr inbounds i16, i16* %138, i64 %171
  %173 = load i16, i16* %172, align 2
  %174 = sub i16 %173, %27
  %175 = getelementptr inbounds i16, i16* %139, i64 %171
  store i16 %174, i16* %175, align 2
  %176 = or i64 %171, 1
  %177 = getelementptr inbounds i16, i16* %138, i64 %176
  %178 = load i16, i16* %177, align 2
  %179 = sub i16 %178, %27
  %180 = getelementptr inbounds i16, i16* %139, i64 %176
  store i16 %179, i16* %180, align 2
  %181 = or i64 %171, 2
  %182 = getelementptr inbounds i16, i16* %138, i64 %181
  %183 = load i16, i16* %182, align 2
  %184 = sub i16 %183, %27
  %185 = getelementptr inbounds i16, i16* %139, i64 %181
  store i16 %184, i16* %185, align 2
  %186 = or i64 %171, 3
  %187 = getelementptr inbounds i16, i16* %138, i64 %186
  %188 = load i16, i16* %187, align 2
  %189 = sub i16 %188, %27
  %190 = getelementptr inbounds i16, i16* %139, i64 %186
  store i16 %189, i16* %190, align 2
  %191 = add nuw nsw i64 %171, 4
  %192 = icmp eq i64 %191, 32
  br i1 %192, label %193, label %170, !llvm.loop !68

193:                                              ; preds = %170, %145
  %194 = getelementptr inbounds i16, i16* %0, i64 96
  %195 = getelementptr inbounds i16, i16* %1, i64 96
  %196 = getelementptr i16, i16* %1, i64 128
  %197 = getelementptr i16, i16* %0, i64 128
  %198 = icmp ult i16* %195, %197
  %199 = icmp ult i16* %194, %196
  %200 = and i1 %198, %199
  br i1 %200, label %226, label %201

201:                                              ; preds = %193
  %202 = insertelement <8 x i16> undef, i16 %27, i32 0
  %203 = shufflevector <8 x i16> %202, <8 x i16> undef, <8 x i32> zeroinitializer
  %204 = bitcast i16* %194 to <8 x i16>*
  %205 = load <8 x i16>, <8 x i16>* %204, align 2, !alias.scope !69
  %206 = sub <8 x i16> %205, %203
  %207 = bitcast i16* %195 to <8 x i16>*
  store <8 x i16> %206, <8 x i16>* %207, align 2, !alias.scope !72, !noalias !69
  %208 = getelementptr inbounds i16, i16* %0, i64 104
  %209 = bitcast i16* %208 to <8 x i16>*
  %210 = load <8 x i16>, <8 x i16>* %209, align 2, !alias.scope !69
  %211 = sub <8 x i16> %210, %203
  %212 = getelementptr inbounds i16, i16* %1, i64 104
  %213 = bitcast i16* %212 to <8 x i16>*
  store <8 x i16> %211, <8 x i16>* %213, align 2, !alias.scope !72, !noalias !69
  %214 = getelementptr inbounds i16, i16* %0, i64 112
  %215 = bitcast i16* %214 to <8 x i16>*
  %216 = load <8 x i16>, <8 x i16>* %215, align 2, !alias.scope !69
  %217 = sub <8 x i16> %216, %203
  %218 = getelementptr inbounds i16, i16* %1, i64 112
  %219 = bitcast i16* %218 to <8 x i16>*
  store <8 x i16> %217, <8 x i16>* %219, align 2, !alias.scope !72, !noalias !69
  %220 = getelementptr inbounds i16, i16* %0, i64 120
  %221 = bitcast i16* %220 to <8 x i16>*
  %222 = load <8 x i16>, <8 x i16>* %221, align 2, !alias.scope !69
  %223 = sub <8 x i16> %222, %203
  %224 = getelementptr inbounds i16, i16* %1, i64 120
  %225 = bitcast i16* %224 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %225, align 2, !alias.scope !72, !noalias !69
  br label %249

226:                                              ; preds = %193, %226
  %227 = phi i64 [ %247, %226 ], [ 0, %193 ]
  %228 = getelementptr inbounds i16, i16* %194, i64 %227
  %229 = load i16, i16* %228, align 2
  %230 = sub i16 %229, %27
  %231 = getelementptr inbounds i16, i16* %195, i64 %227
  store i16 %230, i16* %231, align 2
  %232 = or i64 %227, 1
  %233 = getelementptr inbounds i16, i16* %194, i64 %232
  %234 = load i16, i16* %233, align 2
  %235 = sub i16 %234, %27
  %236 = getelementptr inbounds i16, i16* %195, i64 %232
  store i16 %235, i16* %236, align 2
  %237 = or i64 %227, 2
  %238 = getelementptr inbounds i16, i16* %194, i64 %237
  %239 = load i16, i16* %238, align 2
  %240 = sub i16 %239, %27
  %241 = getelementptr inbounds i16, i16* %195, i64 %237
  store i16 %240, i16* %241, align 2
  %242 = or i64 %227, 3
  %243 = getelementptr inbounds i16, i16* %194, i64 %242
  %244 = load i16, i16* %243, align 2
  %245 = sub i16 %244, %27
  %246 = getelementptr inbounds i16, i16* %195, i64 %242
  store i16 %245, i16* %246, align 2
  %247 = add nuw nsw i64 %227, 4
  %248 = icmp eq i64 %247, 32
  br i1 %248, label %249, label %226, !llvm.loop !74

249:                                              ; preds = %226, %201
  %250 = getelementptr inbounds i16, i16* %0, i64 128
  %251 = getelementptr inbounds i16, i16* %1, i64 128
  %252 = getelementptr i16, i16* %1, i64 160
  %253 = getelementptr i16, i16* %0, i64 160
  %254 = icmp ult i16* %251, %253
  %255 = icmp ult i16* %250, %252
  %256 = and i1 %254, %255
  br i1 %256, label %282, label %257

257:                                              ; preds = %249
  %258 = insertelement <8 x i16> undef, i16 %27, i32 0
  %259 = shufflevector <8 x i16> %258, <8 x i16> undef, <8 x i32> zeroinitializer
  %260 = bitcast i16* %250 to <8 x i16>*
  %261 = load <8 x i16>, <8 x i16>* %260, align 2, !alias.scope !75
  %262 = sub <8 x i16> %261, %259
  %263 = bitcast i16* %251 to <8 x i16>*
  store <8 x i16> %262, <8 x i16>* %263, align 2, !alias.scope !78, !noalias !75
  %264 = getelementptr inbounds i16, i16* %0, i64 136
  %265 = bitcast i16* %264 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !75
  %267 = sub <8 x i16> %266, %259
  %268 = getelementptr inbounds i16, i16* %1, i64 136
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %269, align 2, !alias.scope !78, !noalias !75
  %270 = getelementptr inbounds i16, i16* %0, i64 144
  %271 = bitcast i16* %270 to <8 x i16>*
  %272 = load <8 x i16>, <8 x i16>* %271, align 2, !alias.scope !75
  %273 = sub <8 x i16> %272, %259
  %274 = getelementptr inbounds i16, i16* %1, i64 144
  %275 = bitcast i16* %274 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %275, align 2, !alias.scope !78, !noalias !75
  %276 = getelementptr inbounds i16, i16* %0, i64 152
  %277 = bitcast i16* %276 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !75
  %279 = sub <8 x i16> %278, %259
  %280 = getelementptr inbounds i16, i16* %1, i64 152
  %281 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %279, <8 x i16>* %281, align 2, !alias.scope !78, !noalias !75
  br label %305

282:                                              ; preds = %249, %282
  %283 = phi i64 [ %303, %282 ], [ 0, %249 ]
  %284 = getelementptr inbounds i16, i16* %250, i64 %283
  %285 = load i16, i16* %284, align 2
  %286 = sub i16 %285, %27
  %287 = getelementptr inbounds i16, i16* %251, i64 %283
  store i16 %286, i16* %287, align 2
  %288 = or i64 %283, 1
  %289 = getelementptr inbounds i16, i16* %250, i64 %288
  %290 = load i16, i16* %289, align 2
  %291 = sub i16 %290, %27
  %292 = getelementptr inbounds i16, i16* %251, i64 %288
  store i16 %291, i16* %292, align 2
  %293 = or i64 %283, 2
  %294 = getelementptr inbounds i16, i16* %250, i64 %293
  %295 = load i16, i16* %294, align 2
  %296 = sub i16 %295, %27
  %297 = getelementptr inbounds i16, i16* %251, i64 %293
  store i16 %296, i16* %297, align 2
  %298 = or i64 %283, 3
  %299 = getelementptr inbounds i16, i16* %250, i64 %298
  %300 = load i16, i16* %299, align 2
  %301 = sub i16 %300, %27
  %302 = getelementptr inbounds i16, i16* %251, i64 %298
  store i16 %301, i16* %302, align 2
  %303 = add nuw nsw i64 %283, 4
  %304 = icmp eq i64 %303, 32
  br i1 %304, label %305, label %282, !llvm.loop !80

305:                                              ; preds = %282, %257
  %306 = getelementptr inbounds i16, i16* %0, i64 160
  %307 = getelementptr inbounds i16, i16* %1, i64 160
  %308 = getelementptr i16, i16* %1, i64 192
  %309 = getelementptr i16, i16* %0, i64 192
  %310 = icmp ult i16* %307, %309
  %311 = icmp ult i16* %306, %308
  %312 = and i1 %310, %311
  br i1 %312, label %338, label %313

313:                                              ; preds = %305
  %314 = insertelement <8 x i16> undef, i16 %27, i32 0
  %315 = shufflevector <8 x i16> %314, <8 x i16> undef, <8 x i32> zeroinitializer
  %316 = bitcast i16* %306 to <8 x i16>*
  %317 = load <8 x i16>, <8 x i16>* %316, align 2, !alias.scope !81
  %318 = sub <8 x i16> %317, %315
  %319 = bitcast i16* %307 to <8 x i16>*
  store <8 x i16> %318, <8 x i16>* %319, align 2, !alias.scope !84, !noalias !81
  %320 = getelementptr inbounds i16, i16* %0, i64 168
  %321 = bitcast i16* %320 to <8 x i16>*
  %322 = load <8 x i16>, <8 x i16>* %321, align 2, !alias.scope !81
  %323 = sub <8 x i16> %322, %315
  %324 = getelementptr inbounds i16, i16* %1, i64 168
  %325 = bitcast i16* %324 to <8 x i16>*
  store <8 x i16> %323, <8 x i16>* %325, align 2, !alias.scope !84, !noalias !81
  %326 = getelementptr inbounds i16, i16* %0, i64 176
  %327 = bitcast i16* %326 to <8 x i16>*
  %328 = load <8 x i16>, <8 x i16>* %327, align 2, !alias.scope !81
  %329 = sub <8 x i16> %328, %315
  %330 = getelementptr inbounds i16, i16* %1, i64 176
  %331 = bitcast i16* %330 to <8 x i16>*
  store <8 x i16> %329, <8 x i16>* %331, align 2, !alias.scope !84, !noalias !81
  %332 = getelementptr inbounds i16, i16* %0, i64 184
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !81
  %335 = sub <8 x i16> %334, %315
  %336 = getelementptr inbounds i16, i16* %1, i64 184
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %335, <8 x i16>* %337, align 2, !alias.scope !84, !noalias !81
  br label %361

338:                                              ; preds = %305, %338
  %339 = phi i64 [ %359, %338 ], [ 0, %305 ]
  %340 = getelementptr inbounds i16, i16* %306, i64 %339
  %341 = load i16, i16* %340, align 2
  %342 = sub i16 %341, %27
  %343 = getelementptr inbounds i16, i16* %307, i64 %339
  store i16 %342, i16* %343, align 2
  %344 = or i64 %339, 1
  %345 = getelementptr inbounds i16, i16* %306, i64 %344
  %346 = load i16, i16* %345, align 2
  %347 = sub i16 %346, %27
  %348 = getelementptr inbounds i16, i16* %307, i64 %344
  store i16 %347, i16* %348, align 2
  %349 = or i64 %339, 2
  %350 = getelementptr inbounds i16, i16* %306, i64 %349
  %351 = load i16, i16* %350, align 2
  %352 = sub i16 %351, %27
  %353 = getelementptr inbounds i16, i16* %307, i64 %349
  store i16 %352, i16* %353, align 2
  %354 = or i64 %339, 3
  %355 = getelementptr inbounds i16, i16* %306, i64 %354
  %356 = load i16, i16* %355, align 2
  %357 = sub i16 %356, %27
  %358 = getelementptr inbounds i16, i16* %307, i64 %354
  store i16 %357, i16* %358, align 2
  %359 = add nuw nsw i64 %339, 4
  %360 = icmp eq i64 %359, 32
  br i1 %360, label %361, label %338, !llvm.loop !86

361:                                              ; preds = %338, %313
  %362 = getelementptr inbounds i16, i16* %0, i64 192
  %363 = getelementptr inbounds i16, i16* %1, i64 192
  %364 = getelementptr i16, i16* %1, i64 224
  %365 = getelementptr i16, i16* %0, i64 224
  %366 = icmp ult i16* %363, %365
  %367 = icmp ult i16* %362, %364
  %368 = and i1 %366, %367
  br i1 %368, label %394, label %369

369:                                              ; preds = %361
  %370 = insertelement <8 x i16> undef, i16 %27, i32 0
  %371 = shufflevector <8 x i16> %370, <8 x i16> undef, <8 x i32> zeroinitializer
  %372 = bitcast i16* %362 to <8 x i16>*
  %373 = load <8 x i16>, <8 x i16>* %372, align 2, !alias.scope !87
  %374 = sub <8 x i16> %373, %371
  %375 = bitcast i16* %363 to <8 x i16>*
  store <8 x i16> %374, <8 x i16>* %375, align 2, !alias.scope !90, !noalias !87
  %376 = getelementptr inbounds i16, i16* %0, i64 200
  %377 = bitcast i16* %376 to <8 x i16>*
  %378 = load <8 x i16>, <8 x i16>* %377, align 2, !alias.scope !87
  %379 = sub <8 x i16> %378, %371
  %380 = getelementptr inbounds i16, i16* %1, i64 200
  %381 = bitcast i16* %380 to <8 x i16>*
  store <8 x i16> %379, <8 x i16>* %381, align 2, !alias.scope !90, !noalias !87
  %382 = getelementptr inbounds i16, i16* %0, i64 208
  %383 = bitcast i16* %382 to <8 x i16>*
  %384 = load <8 x i16>, <8 x i16>* %383, align 2, !alias.scope !87
  %385 = sub <8 x i16> %384, %371
  %386 = getelementptr inbounds i16, i16* %1, i64 208
  %387 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %387, align 2, !alias.scope !90, !noalias !87
  %388 = getelementptr inbounds i16, i16* %0, i64 216
  %389 = bitcast i16* %388 to <8 x i16>*
  %390 = load <8 x i16>, <8 x i16>* %389, align 2, !alias.scope !87
  %391 = sub <8 x i16> %390, %371
  %392 = getelementptr inbounds i16, i16* %1, i64 216
  %393 = bitcast i16* %392 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %393, align 2, !alias.scope !90, !noalias !87
  br label %417

394:                                              ; preds = %361, %394
  %395 = phi i64 [ %415, %394 ], [ 0, %361 ]
  %396 = getelementptr inbounds i16, i16* %362, i64 %395
  %397 = load i16, i16* %396, align 2
  %398 = sub i16 %397, %27
  %399 = getelementptr inbounds i16, i16* %363, i64 %395
  store i16 %398, i16* %399, align 2
  %400 = or i64 %395, 1
  %401 = getelementptr inbounds i16, i16* %362, i64 %400
  %402 = load i16, i16* %401, align 2
  %403 = sub i16 %402, %27
  %404 = getelementptr inbounds i16, i16* %363, i64 %400
  store i16 %403, i16* %404, align 2
  %405 = or i64 %395, 2
  %406 = getelementptr inbounds i16, i16* %362, i64 %405
  %407 = load i16, i16* %406, align 2
  %408 = sub i16 %407, %27
  %409 = getelementptr inbounds i16, i16* %363, i64 %405
  store i16 %408, i16* %409, align 2
  %410 = or i64 %395, 3
  %411 = getelementptr inbounds i16, i16* %362, i64 %410
  %412 = load i16, i16* %411, align 2
  %413 = sub i16 %412, %27
  %414 = getelementptr inbounds i16, i16* %363, i64 %410
  store i16 %413, i16* %414, align 2
  %415 = add nuw nsw i64 %395, 4
  %416 = icmp eq i64 %415, 32
  br i1 %416, label %417, label %394, !llvm.loop !92

417:                                              ; preds = %394, %369
  %418 = getelementptr inbounds i16, i16* %0, i64 224
  %419 = getelementptr inbounds i16, i16* %1, i64 224
  %420 = getelementptr i16, i16* %1, i64 256
  %421 = getelementptr i16, i16* %0, i64 256
  %422 = icmp ult i16* %419, %421
  %423 = icmp ult i16* %418, %420
  %424 = and i1 %422, %423
  br i1 %424, label %450, label %425

425:                                              ; preds = %417
  %426 = insertelement <8 x i16> undef, i16 %27, i32 0
  %427 = shufflevector <8 x i16> %426, <8 x i16> undef, <8 x i32> zeroinitializer
  %428 = bitcast i16* %418 to <8 x i16>*
  %429 = load <8 x i16>, <8 x i16>* %428, align 2, !alias.scope !93
  %430 = sub <8 x i16> %429, %427
  %431 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %430, <8 x i16>* %431, align 2, !alias.scope !96, !noalias !93
  %432 = getelementptr inbounds i16, i16* %0, i64 232
  %433 = bitcast i16* %432 to <8 x i16>*
  %434 = load <8 x i16>, <8 x i16>* %433, align 2, !alias.scope !93
  %435 = sub <8 x i16> %434, %427
  %436 = getelementptr inbounds i16, i16* %1, i64 232
  %437 = bitcast i16* %436 to <8 x i16>*
  store <8 x i16> %435, <8 x i16>* %437, align 2, !alias.scope !96, !noalias !93
  %438 = getelementptr inbounds i16, i16* %0, i64 240
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !93
  %441 = sub <8 x i16> %440, %427
  %442 = getelementptr inbounds i16, i16* %1, i64 240
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %441, <8 x i16>* %443, align 2, !alias.scope !96, !noalias !93
  %444 = getelementptr inbounds i16, i16* %0, i64 248
  %445 = bitcast i16* %444 to <8 x i16>*
  %446 = load <8 x i16>, <8 x i16>* %445, align 2, !alias.scope !93
  %447 = sub <8 x i16> %446, %427
  %448 = getelementptr inbounds i16, i16* %1, i64 248
  %449 = bitcast i16* %448 to <8 x i16>*
  store <8 x i16> %447, <8 x i16>* %449, align 2, !alias.scope !96, !noalias !93
  br label %473

450:                                              ; preds = %417, %450
  %451 = phi i64 [ %471, %450 ], [ 0, %417 ]
  %452 = getelementptr inbounds i16, i16* %418, i64 %451
  %453 = load i16, i16* %452, align 2
  %454 = sub i16 %453, %27
  %455 = getelementptr inbounds i16, i16* %419, i64 %451
  store i16 %454, i16* %455, align 2
  %456 = or i64 %451, 1
  %457 = getelementptr inbounds i16, i16* %418, i64 %456
  %458 = load i16, i16* %457, align 2
  %459 = sub i16 %458, %27
  %460 = getelementptr inbounds i16, i16* %419, i64 %456
  store i16 %459, i16* %460, align 2
  %461 = or i64 %451, 2
  %462 = getelementptr inbounds i16, i16* %418, i64 %461
  %463 = load i16, i16* %462, align 2
  %464 = sub i16 %463, %27
  %465 = getelementptr inbounds i16, i16* %419, i64 %461
  store i16 %464, i16* %465, align 2
  %466 = or i64 %451, 3
  %467 = getelementptr inbounds i16, i16* %418, i64 %466
  %468 = load i16, i16* %467, align 2
  %469 = sub i16 %468, %27
  %470 = getelementptr inbounds i16, i16* %419, i64 %466
  store i16 %469, i16* %470, align 2
  %471 = add nuw nsw i64 %451, 4
  %472 = icmp eq i64 %471, 32
  br i1 %472, label %473, label %450, !llvm.loop !98

473:                                              ; preds = %450, %425
  %474 = getelementptr inbounds i16, i16* %0, i64 256
  %475 = getelementptr inbounds i16, i16* %1, i64 256
  %476 = getelementptr i16, i16* %1, i64 288
  %477 = getelementptr i16, i16* %0, i64 288
  %478 = icmp ult i16* %475, %477
  %479 = icmp ult i16* %474, %476
  %480 = and i1 %478, %479
  br i1 %480, label %506, label %481

481:                                              ; preds = %473
  %482 = insertelement <8 x i16> undef, i16 %27, i32 0
  %483 = shufflevector <8 x i16> %482, <8 x i16> undef, <8 x i32> zeroinitializer
  %484 = bitcast i16* %474 to <8 x i16>*
  %485 = load <8 x i16>, <8 x i16>* %484, align 2, !alias.scope !99
  %486 = sub <8 x i16> %485, %483
  %487 = bitcast i16* %475 to <8 x i16>*
  store <8 x i16> %486, <8 x i16>* %487, align 2, !alias.scope !102, !noalias !99
  %488 = getelementptr inbounds i16, i16* %0, i64 264
  %489 = bitcast i16* %488 to <8 x i16>*
  %490 = load <8 x i16>, <8 x i16>* %489, align 2, !alias.scope !99
  %491 = sub <8 x i16> %490, %483
  %492 = getelementptr inbounds i16, i16* %1, i64 264
  %493 = bitcast i16* %492 to <8 x i16>*
  store <8 x i16> %491, <8 x i16>* %493, align 2, !alias.scope !102, !noalias !99
  %494 = getelementptr inbounds i16, i16* %0, i64 272
  %495 = bitcast i16* %494 to <8 x i16>*
  %496 = load <8 x i16>, <8 x i16>* %495, align 2, !alias.scope !99
  %497 = sub <8 x i16> %496, %483
  %498 = getelementptr inbounds i16, i16* %1, i64 272
  %499 = bitcast i16* %498 to <8 x i16>*
  store <8 x i16> %497, <8 x i16>* %499, align 2, !alias.scope !102, !noalias !99
  %500 = getelementptr inbounds i16, i16* %0, i64 280
  %501 = bitcast i16* %500 to <8 x i16>*
  %502 = load <8 x i16>, <8 x i16>* %501, align 2, !alias.scope !99
  %503 = sub <8 x i16> %502, %483
  %504 = getelementptr inbounds i16, i16* %1, i64 280
  %505 = bitcast i16* %504 to <8 x i16>*
  store <8 x i16> %503, <8 x i16>* %505, align 2, !alias.scope !102, !noalias !99
  br label %529

506:                                              ; preds = %473, %506
  %507 = phi i64 [ %527, %506 ], [ 0, %473 ]
  %508 = getelementptr inbounds i16, i16* %474, i64 %507
  %509 = load i16, i16* %508, align 2
  %510 = sub i16 %509, %27
  %511 = getelementptr inbounds i16, i16* %475, i64 %507
  store i16 %510, i16* %511, align 2
  %512 = or i64 %507, 1
  %513 = getelementptr inbounds i16, i16* %474, i64 %512
  %514 = load i16, i16* %513, align 2
  %515 = sub i16 %514, %27
  %516 = getelementptr inbounds i16, i16* %475, i64 %512
  store i16 %515, i16* %516, align 2
  %517 = or i64 %507, 2
  %518 = getelementptr inbounds i16, i16* %474, i64 %517
  %519 = load i16, i16* %518, align 2
  %520 = sub i16 %519, %27
  %521 = getelementptr inbounds i16, i16* %475, i64 %517
  store i16 %520, i16* %521, align 2
  %522 = or i64 %507, 3
  %523 = getelementptr inbounds i16, i16* %474, i64 %522
  %524 = load i16, i16* %523, align 2
  %525 = sub i16 %524, %27
  %526 = getelementptr inbounds i16, i16* %475, i64 %522
  store i16 %525, i16* %526, align 2
  %527 = add nuw nsw i64 %507, 4
  %528 = icmp eq i64 %527, 32
  br i1 %528, label %529, label %506, !llvm.loop !104

529:                                              ; preds = %506, %481
  %530 = getelementptr inbounds i16, i16* %0, i64 288
  %531 = getelementptr inbounds i16, i16* %1, i64 288
  %532 = getelementptr i16, i16* %1, i64 320
  %533 = getelementptr i16, i16* %0, i64 320
  %534 = icmp ult i16* %531, %533
  %535 = icmp ult i16* %530, %532
  %536 = and i1 %534, %535
  br i1 %536, label %562, label %537

537:                                              ; preds = %529
  %538 = insertelement <8 x i16> undef, i16 %27, i32 0
  %539 = shufflevector <8 x i16> %538, <8 x i16> undef, <8 x i32> zeroinitializer
  %540 = bitcast i16* %530 to <8 x i16>*
  %541 = load <8 x i16>, <8 x i16>* %540, align 2, !alias.scope !105
  %542 = sub <8 x i16> %541, %539
  %543 = bitcast i16* %531 to <8 x i16>*
  store <8 x i16> %542, <8 x i16>* %543, align 2, !alias.scope !108, !noalias !105
  %544 = getelementptr inbounds i16, i16* %0, i64 296
  %545 = bitcast i16* %544 to <8 x i16>*
  %546 = load <8 x i16>, <8 x i16>* %545, align 2, !alias.scope !105
  %547 = sub <8 x i16> %546, %539
  %548 = getelementptr inbounds i16, i16* %1, i64 296
  %549 = bitcast i16* %548 to <8 x i16>*
  store <8 x i16> %547, <8 x i16>* %549, align 2, !alias.scope !108, !noalias !105
  %550 = getelementptr inbounds i16, i16* %0, i64 304
  %551 = bitcast i16* %550 to <8 x i16>*
  %552 = load <8 x i16>, <8 x i16>* %551, align 2, !alias.scope !105
  %553 = sub <8 x i16> %552, %539
  %554 = getelementptr inbounds i16, i16* %1, i64 304
  %555 = bitcast i16* %554 to <8 x i16>*
  store <8 x i16> %553, <8 x i16>* %555, align 2, !alias.scope !108, !noalias !105
  %556 = getelementptr inbounds i16, i16* %0, i64 312
  %557 = bitcast i16* %556 to <8 x i16>*
  %558 = load <8 x i16>, <8 x i16>* %557, align 2, !alias.scope !105
  %559 = sub <8 x i16> %558, %539
  %560 = getelementptr inbounds i16, i16* %1, i64 312
  %561 = bitcast i16* %560 to <8 x i16>*
  store <8 x i16> %559, <8 x i16>* %561, align 2, !alias.scope !108, !noalias !105
  br label %585

562:                                              ; preds = %529, %562
  %563 = phi i64 [ %583, %562 ], [ 0, %529 ]
  %564 = getelementptr inbounds i16, i16* %530, i64 %563
  %565 = load i16, i16* %564, align 2
  %566 = sub i16 %565, %27
  %567 = getelementptr inbounds i16, i16* %531, i64 %563
  store i16 %566, i16* %567, align 2
  %568 = or i64 %563, 1
  %569 = getelementptr inbounds i16, i16* %530, i64 %568
  %570 = load i16, i16* %569, align 2
  %571 = sub i16 %570, %27
  %572 = getelementptr inbounds i16, i16* %531, i64 %568
  store i16 %571, i16* %572, align 2
  %573 = or i64 %563, 2
  %574 = getelementptr inbounds i16, i16* %530, i64 %573
  %575 = load i16, i16* %574, align 2
  %576 = sub i16 %575, %27
  %577 = getelementptr inbounds i16, i16* %531, i64 %573
  store i16 %576, i16* %577, align 2
  %578 = or i64 %563, 3
  %579 = getelementptr inbounds i16, i16* %530, i64 %578
  %580 = load i16, i16* %579, align 2
  %581 = sub i16 %580, %27
  %582 = getelementptr inbounds i16, i16* %531, i64 %578
  store i16 %581, i16* %582, align 2
  %583 = add nuw nsw i64 %563, 4
  %584 = icmp eq i64 %583, 32
  br i1 %584, label %585, label %562, !llvm.loop !110

585:                                              ; preds = %562, %537
  %586 = getelementptr inbounds i16, i16* %0, i64 320
  %587 = getelementptr inbounds i16, i16* %1, i64 320
  %588 = getelementptr i16, i16* %1, i64 352
  %589 = getelementptr i16, i16* %0, i64 352
  %590 = icmp ult i16* %587, %589
  %591 = icmp ult i16* %586, %588
  %592 = and i1 %590, %591
  br i1 %592, label %618, label %593

593:                                              ; preds = %585
  %594 = insertelement <8 x i16> undef, i16 %27, i32 0
  %595 = shufflevector <8 x i16> %594, <8 x i16> undef, <8 x i32> zeroinitializer
  %596 = bitcast i16* %586 to <8 x i16>*
  %597 = load <8 x i16>, <8 x i16>* %596, align 2, !alias.scope !111
  %598 = sub <8 x i16> %597, %595
  %599 = bitcast i16* %587 to <8 x i16>*
  store <8 x i16> %598, <8 x i16>* %599, align 2, !alias.scope !114, !noalias !111
  %600 = getelementptr inbounds i16, i16* %0, i64 328
  %601 = bitcast i16* %600 to <8 x i16>*
  %602 = load <8 x i16>, <8 x i16>* %601, align 2, !alias.scope !111
  %603 = sub <8 x i16> %602, %595
  %604 = getelementptr inbounds i16, i16* %1, i64 328
  %605 = bitcast i16* %604 to <8 x i16>*
  store <8 x i16> %603, <8 x i16>* %605, align 2, !alias.scope !114, !noalias !111
  %606 = getelementptr inbounds i16, i16* %0, i64 336
  %607 = bitcast i16* %606 to <8 x i16>*
  %608 = load <8 x i16>, <8 x i16>* %607, align 2, !alias.scope !111
  %609 = sub <8 x i16> %608, %595
  %610 = getelementptr inbounds i16, i16* %1, i64 336
  %611 = bitcast i16* %610 to <8 x i16>*
  store <8 x i16> %609, <8 x i16>* %611, align 2, !alias.scope !114, !noalias !111
  %612 = getelementptr inbounds i16, i16* %0, i64 344
  %613 = bitcast i16* %612 to <8 x i16>*
  %614 = load <8 x i16>, <8 x i16>* %613, align 2, !alias.scope !111
  %615 = sub <8 x i16> %614, %595
  %616 = getelementptr inbounds i16, i16* %1, i64 344
  %617 = bitcast i16* %616 to <8 x i16>*
  store <8 x i16> %615, <8 x i16>* %617, align 2, !alias.scope !114, !noalias !111
  br label %641

618:                                              ; preds = %585, %618
  %619 = phi i64 [ %639, %618 ], [ 0, %585 ]
  %620 = getelementptr inbounds i16, i16* %586, i64 %619
  %621 = load i16, i16* %620, align 2
  %622 = sub i16 %621, %27
  %623 = getelementptr inbounds i16, i16* %587, i64 %619
  store i16 %622, i16* %623, align 2
  %624 = or i64 %619, 1
  %625 = getelementptr inbounds i16, i16* %586, i64 %624
  %626 = load i16, i16* %625, align 2
  %627 = sub i16 %626, %27
  %628 = getelementptr inbounds i16, i16* %587, i64 %624
  store i16 %627, i16* %628, align 2
  %629 = or i64 %619, 2
  %630 = getelementptr inbounds i16, i16* %586, i64 %629
  %631 = load i16, i16* %630, align 2
  %632 = sub i16 %631, %27
  %633 = getelementptr inbounds i16, i16* %587, i64 %629
  store i16 %632, i16* %633, align 2
  %634 = or i64 %619, 3
  %635 = getelementptr inbounds i16, i16* %586, i64 %634
  %636 = load i16, i16* %635, align 2
  %637 = sub i16 %636, %27
  %638 = getelementptr inbounds i16, i16* %587, i64 %634
  store i16 %637, i16* %638, align 2
  %639 = add nuw nsw i64 %619, 4
  %640 = icmp eq i64 %639, 32
  br i1 %640, label %641, label %618, !llvm.loop !116

641:                                              ; preds = %618, %593
  %642 = getelementptr inbounds i16, i16* %0, i64 352
  %643 = getelementptr inbounds i16, i16* %1, i64 352
  %644 = getelementptr i16, i16* %1, i64 384
  %645 = getelementptr i16, i16* %0, i64 384
  %646 = icmp ult i16* %643, %645
  %647 = icmp ult i16* %642, %644
  %648 = and i1 %646, %647
  br i1 %648, label %674, label %649

649:                                              ; preds = %641
  %650 = insertelement <8 x i16> undef, i16 %27, i32 0
  %651 = shufflevector <8 x i16> %650, <8 x i16> undef, <8 x i32> zeroinitializer
  %652 = bitcast i16* %642 to <8 x i16>*
  %653 = load <8 x i16>, <8 x i16>* %652, align 2, !alias.scope !117
  %654 = sub <8 x i16> %653, %651
  %655 = bitcast i16* %643 to <8 x i16>*
  store <8 x i16> %654, <8 x i16>* %655, align 2, !alias.scope !120, !noalias !117
  %656 = getelementptr inbounds i16, i16* %0, i64 360
  %657 = bitcast i16* %656 to <8 x i16>*
  %658 = load <8 x i16>, <8 x i16>* %657, align 2, !alias.scope !117
  %659 = sub <8 x i16> %658, %651
  %660 = getelementptr inbounds i16, i16* %1, i64 360
  %661 = bitcast i16* %660 to <8 x i16>*
  store <8 x i16> %659, <8 x i16>* %661, align 2, !alias.scope !120, !noalias !117
  %662 = getelementptr inbounds i16, i16* %0, i64 368
  %663 = bitcast i16* %662 to <8 x i16>*
  %664 = load <8 x i16>, <8 x i16>* %663, align 2, !alias.scope !117
  %665 = sub <8 x i16> %664, %651
  %666 = getelementptr inbounds i16, i16* %1, i64 368
  %667 = bitcast i16* %666 to <8 x i16>*
  store <8 x i16> %665, <8 x i16>* %667, align 2, !alias.scope !120, !noalias !117
  %668 = getelementptr inbounds i16, i16* %0, i64 376
  %669 = bitcast i16* %668 to <8 x i16>*
  %670 = load <8 x i16>, <8 x i16>* %669, align 2, !alias.scope !117
  %671 = sub <8 x i16> %670, %651
  %672 = getelementptr inbounds i16, i16* %1, i64 376
  %673 = bitcast i16* %672 to <8 x i16>*
  store <8 x i16> %671, <8 x i16>* %673, align 2, !alias.scope !120, !noalias !117
  br label %697

674:                                              ; preds = %641, %674
  %675 = phi i64 [ %695, %674 ], [ 0, %641 ]
  %676 = getelementptr inbounds i16, i16* %642, i64 %675
  %677 = load i16, i16* %676, align 2
  %678 = sub i16 %677, %27
  %679 = getelementptr inbounds i16, i16* %643, i64 %675
  store i16 %678, i16* %679, align 2
  %680 = or i64 %675, 1
  %681 = getelementptr inbounds i16, i16* %642, i64 %680
  %682 = load i16, i16* %681, align 2
  %683 = sub i16 %682, %27
  %684 = getelementptr inbounds i16, i16* %643, i64 %680
  store i16 %683, i16* %684, align 2
  %685 = or i64 %675, 2
  %686 = getelementptr inbounds i16, i16* %642, i64 %685
  %687 = load i16, i16* %686, align 2
  %688 = sub i16 %687, %27
  %689 = getelementptr inbounds i16, i16* %643, i64 %685
  store i16 %688, i16* %689, align 2
  %690 = or i64 %675, 3
  %691 = getelementptr inbounds i16, i16* %642, i64 %690
  %692 = load i16, i16* %691, align 2
  %693 = sub i16 %692, %27
  %694 = getelementptr inbounds i16, i16* %643, i64 %690
  store i16 %693, i16* %694, align 2
  %695 = add nuw nsw i64 %675, 4
  %696 = icmp eq i64 %695, 32
  br i1 %696, label %697, label %674, !llvm.loop !122

697:                                              ; preds = %674, %649
  %698 = getelementptr inbounds i16, i16* %0, i64 384
  %699 = getelementptr inbounds i16, i16* %1, i64 384
  %700 = getelementptr i16, i16* %1, i64 416
  %701 = getelementptr i16, i16* %0, i64 416
  %702 = icmp ult i16* %699, %701
  %703 = icmp ult i16* %698, %700
  %704 = and i1 %702, %703
  br i1 %704, label %730, label %705

705:                                              ; preds = %697
  %706 = insertelement <8 x i16> undef, i16 %27, i32 0
  %707 = shufflevector <8 x i16> %706, <8 x i16> undef, <8 x i32> zeroinitializer
  %708 = bitcast i16* %698 to <8 x i16>*
  %709 = load <8 x i16>, <8 x i16>* %708, align 2, !alias.scope !123
  %710 = sub <8 x i16> %709, %707
  %711 = bitcast i16* %699 to <8 x i16>*
  store <8 x i16> %710, <8 x i16>* %711, align 2, !alias.scope !126, !noalias !123
  %712 = getelementptr inbounds i16, i16* %0, i64 392
  %713 = bitcast i16* %712 to <8 x i16>*
  %714 = load <8 x i16>, <8 x i16>* %713, align 2, !alias.scope !123
  %715 = sub <8 x i16> %714, %707
  %716 = getelementptr inbounds i16, i16* %1, i64 392
  %717 = bitcast i16* %716 to <8 x i16>*
  store <8 x i16> %715, <8 x i16>* %717, align 2, !alias.scope !126, !noalias !123
  %718 = getelementptr inbounds i16, i16* %0, i64 400
  %719 = bitcast i16* %718 to <8 x i16>*
  %720 = load <8 x i16>, <8 x i16>* %719, align 2, !alias.scope !123
  %721 = sub <8 x i16> %720, %707
  %722 = getelementptr inbounds i16, i16* %1, i64 400
  %723 = bitcast i16* %722 to <8 x i16>*
  store <8 x i16> %721, <8 x i16>* %723, align 2, !alias.scope !126, !noalias !123
  %724 = getelementptr inbounds i16, i16* %0, i64 408
  %725 = bitcast i16* %724 to <8 x i16>*
  %726 = load <8 x i16>, <8 x i16>* %725, align 2, !alias.scope !123
  %727 = sub <8 x i16> %726, %707
  %728 = getelementptr inbounds i16, i16* %1, i64 408
  %729 = bitcast i16* %728 to <8 x i16>*
  store <8 x i16> %727, <8 x i16>* %729, align 2, !alias.scope !126, !noalias !123
  br label %753

730:                                              ; preds = %697, %730
  %731 = phi i64 [ %751, %730 ], [ 0, %697 ]
  %732 = getelementptr inbounds i16, i16* %698, i64 %731
  %733 = load i16, i16* %732, align 2
  %734 = sub i16 %733, %27
  %735 = getelementptr inbounds i16, i16* %699, i64 %731
  store i16 %734, i16* %735, align 2
  %736 = or i64 %731, 1
  %737 = getelementptr inbounds i16, i16* %698, i64 %736
  %738 = load i16, i16* %737, align 2
  %739 = sub i16 %738, %27
  %740 = getelementptr inbounds i16, i16* %699, i64 %736
  store i16 %739, i16* %740, align 2
  %741 = or i64 %731, 2
  %742 = getelementptr inbounds i16, i16* %698, i64 %741
  %743 = load i16, i16* %742, align 2
  %744 = sub i16 %743, %27
  %745 = getelementptr inbounds i16, i16* %699, i64 %741
  store i16 %744, i16* %745, align 2
  %746 = or i64 %731, 3
  %747 = getelementptr inbounds i16, i16* %698, i64 %746
  %748 = load i16, i16* %747, align 2
  %749 = sub i16 %748, %27
  %750 = getelementptr inbounds i16, i16* %699, i64 %746
  store i16 %749, i16* %750, align 2
  %751 = add nuw nsw i64 %731, 4
  %752 = icmp eq i64 %751, 32
  br i1 %752, label %753, label %730, !llvm.loop !128

753:                                              ; preds = %730, %705
  %754 = getelementptr inbounds i16, i16* %0, i64 416
  %755 = getelementptr inbounds i16, i16* %1, i64 416
  %756 = getelementptr i16, i16* %1, i64 448
  %757 = getelementptr i16, i16* %0, i64 448
  %758 = icmp ult i16* %755, %757
  %759 = icmp ult i16* %754, %756
  %760 = and i1 %758, %759
  br i1 %760, label %786, label %761

761:                                              ; preds = %753
  %762 = insertelement <8 x i16> undef, i16 %27, i32 0
  %763 = shufflevector <8 x i16> %762, <8 x i16> undef, <8 x i32> zeroinitializer
  %764 = bitcast i16* %754 to <8 x i16>*
  %765 = load <8 x i16>, <8 x i16>* %764, align 2, !alias.scope !129
  %766 = sub <8 x i16> %765, %763
  %767 = bitcast i16* %755 to <8 x i16>*
  store <8 x i16> %766, <8 x i16>* %767, align 2, !alias.scope !132, !noalias !129
  %768 = getelementptr inbounds i16, i16* %0, i64 424
  %769 = bitcast i16* %768 to <8 x i16>*
  %770 = load <8 x i16>, <8 x i16>* %769, align 2, !alias.scope !129
  %771 = sub <8 x i16> %770, %763
  %772 = getelementptr inbounds i16, i16* %1, i64 424
  %773 = bitcast i16* %772 to <8 x i16>*
  store <8 x i16> %771, <8 x i16>* %773, align 2, !alias.scope !132, !noalias !129
  %774 = getelementptr inbounds i16, i16* %0, i64 432
  %775 = bitcast i16* %774 to <8 x i16>*
  %776 = load <8 x i16>, <8 x i16>* %775, align 2, !alias.scope !129
  %777 = sub <8 x i16> %776, %763
  %778 = getelementptr inbounds i16, i16* %1, i64 432
  %779 = bitcast i16* %778 to <8 x i16>*
  store <8 x i16> %777, <8 x i16>* %779, align 2, !alias.scope !132, !noalias !129
  %780 = getelementptr inbounds i16, i16* %0, i64 440
  %781 = bitcast i16* %780 to <8 x i16>*
  %782 = load <8 x i16>, <8 x i16>* %781, align 2, !alias.scope !129
  %783 = sub <8 x i16> %782, %763
  %784 = getelementptr inbounds i16, i16* %1, i64 440
  %785 = bitcast i16* %784 to <8 x i16>*
  store <8 x i16> %783, <8 x i16>* %785, align 2, !alias.scope !132, !noalias !129
  br label %809

786:                                              ; preds = %753, %786
  %787 = phi i64 [ %807, %786 ], [ 0, %753 ]
  %788 = getelementptr inbounds i16, i16* %754, i64 %787
  %789 = load i16, i16* %788, align 2
  %790 = sub i16 %789, %27
  %791 = getelementptr inbounds i16, i16* %755, i64 %787
  store i16 %790, i16* %791, align 2
  %792 = or i64 %787, 1
  %793 = getelementptr inbounds i16, i16* %754, i64 %792
  %794 = load i16, i16* %793, align 2
  %795 = sub i16 %794, %27
  %796 = getelementptr inbounds i16, i16* %755, i64 %792
  store i16 %795, i16* %796, align 2
  %797 = or i64 %787, 2
  %798 = getelementptr inbounds i16, i16* %754, i64 %797
  %799 = load i16, i16* %798, align 2
  %800 = sub i16 %799, %27
  %801 = getelementptr inbounds i16, i16* %755, i64 %797
  store i16 %800, i16* %801, align 2
  %802 = or i64 %787, 3
  %803 = getelementptr inbounds i16, i16* %754, i64 %802
  %804 = load i16, i16* %803, align 2
  %805 = sub i16 %804, %27
  %806 = getelementptr inbounds i16, i16* %755, i64 %802
  store i16 %805, i16* %806, align 2
  %807 = add nuw nsw i64 %787, 4
  %808 = icmp eq i64 %807, 32
  br i1 %808, label %809, label %786, !llvm.loop !134

809:                                              ; preds = %786, %761
  %810 = getelementptr inbounds i16, i16* %0, i64 448
  %811 = getelementptr inbounds i16, i16* %1, i64 448
  %812 = getelementptr i16, i16* %1, i64 480
  %813 = getelementptr i16, i16* %0, i64 480
  %814 = icmp ult i16* %811, %813
  %815 = icmp ult i16* %810, %812
  %816 = and i1 %814, %815
  br i1 %816, label %842, label %817

817:                                              ; preds = %809
  %818 = insertelement <8 x i16> undef, i16 %27, i32 0
  %819 = shufflevector <8 x i16> %818, <8 x i16> undef, <8 x i32> zeroinitializer
  %820 = bitcast i16* %810 to <8 x i16>*
  %821 = load <8 x i16>, <8 x i16>* %820, align 2, !alias.scope !135
  %822 = sub <8 x i16> %821, %819
  %823 = bitcast i16* %811 to <8 x i16>*
  store <8 x i16> %822, <8 x i16>* %823, align 2, !alias.scope !138, !noalias !135
  %824 = getelementptr inbounds i16, i16* %0, i64 456
  %825 = bitcast i16* %824 to <8 x i16>*
  %826 = load <8 x i16>, <8 x i16>* %825, align 2, !alias.scope !135
  %827 = sub <8 x i16> %826, %819
  %828 = getelementptr inbounds i16, i16* %1, i64 456
  %829 = bitcast i16* %828 to <8 x i16>*
  store <8 x i16> %827, <8 x i16>* %829, align 2, !alias.scope !138, !noalias !135
  %830 = getelementptr inbounds i16, i16* %0, i64 464
  %831 = bitcast i16* %830 to <8 x i16>*
  %832 = load <8 x i16>, <8 x i16>* %831, align 2, !alias.scope !135
  %833 = sub <8 x i16> %832, %819
  %834 = getelementptr inbounds i16, i16* %1, i64 464
  %835 = bitcast i16* %834 to <8 x i16>*
  store <8 x i16> %833, <8 x i16>* %835, align 2, !alias.scope !138, !noalias !135
  %836 = getelementptr inbounds i16, i16* %0, i64 472
  %837 = bitcast i16* %836 to <8 x i16>*
  %838 = load <8 x i16>, <8 x i16>* %837, align 2, !alias.scope !135
  %839 = sub <8 x i16> %838, %819
  %840 = getelementptr inbounds i16, i16* %1, i64 472
  %841 = bitcast i16* %840 to <8 x i16>*
  store <8 x i16> %839, <8 x i16>* %841, align 2, !alias.scope !138, !noalias !135
  br label %865

842:                                              ; preds = %809, %842
  %843 = phi i64 [ %863, %842 ], [ 0, %809 ]
  %844 = getelementptr inbounds i16, i16* %810, i64 %843
  %845 = load i16, i16* %844, align 2
  %846 = sub i16 %845, %27
  %847 = getelementptr inbounds i16, i16* %811, i64 %843
  store i16 %846, i16* %847, align 2
  %848 = or i64 %843, 1
  %849 = getelementptr inbounds i16, i16* %810, i64 %848
  %850 = load i16, i16* %849, align 2
  %851 = sub i16 %850, %27
  %852 = getelementptr inbounds i16, i16* %811, i64 %848
  store i16 %851, i16* %852, align 2
  %853 = or i64 %843, 2
  %854 = getelementptr inbounds i16, i16* %810, i64 %853
  %855 = load i16, i16* %854, align 2
  %856 = sub i16 %855, %27
  %857 = getelementptr inbounds i16, i16* %811, i64 %853
  store i16 %856, i16* %857, align 2
  %858 = or i64 %843, 3
  %859 = getelementptr inbounds i16, i16* %810, i64 %858
  %860 = load i16, i16* %859, align 2
  %861 = sub i16 %860, %27
  %862 = getelementptr inbounds i16, i16* %811, i64 %858
  store i16 %861, i16* %862, align 2
  %863 = add nuw nsw i64 %843, 4
  %864 = icmp eq i64 %863, 32
  br i1 %864, label %865, label %842, !llvm.loop !140

865:                                              ; preds = %842, %817
  %866 = getelementptr inbounds i16, i16* %0, i64 480
  %867 = getelementptr inbounds i16, i16* %1, i64 480
  %868 = getelementptr i16, i16* %1, i64 512
  %869 = getelementptr i16, i16* %0, i64 512
  %870 = icmp ult i16* %867, %869
  %871 = icmp ult i16* %866, %868
  %872 = and i1 %870, %871
  br i1 %872, label %898, label %873

873:                                              ; preds = %865
  %874 = insertelement <8 x i16> undef, i16 %27, i32 0
  %875 = shufflevector <8 x i16> %874, <8 x i16> undef, <8 x i32> zeroinitializer
  %876 = bitcast i16* %866 to <8 x i16>*
  %877 = load <8 x i16>, <8 x i16>* %876, align 2, !alias.scope !141
  %878 = sub <8 x i16> %877, %875
  %879 = bitcast i16* %867 to <8 x i16>*
  store <8 x i16> %878, <8 x i16>* %879, align 2, !alias.scope !144, !noalias !141
  %880 = getelementptr inbounds i16, i16* %0, i64 488
  %881 = bitcast i16* %880 to <8 x i16>*
  %882 = load <8 x i16>, <8 x i16>* %881, align 2, !alias.scope !141
  %883 = sub <8 x i16> %882, %875
  %884 = getelementptr inbounds i16, i16* %1, i64 488
  %885 = bitcast i16* %884 to <8 x i16>*
  store <8 x i16> %883, <8 x i16>* %885, align 2, !alias.scope !144, !noalias !141
  %886 = getelementptr inbounds i16, i16* %0, i64 496
  %887 = bitcast i16* %886 to <8 x i16>*
  %888 = load <8 x i16>, <8 x i16>* %887, align 2, !alias.scope !141
  %889 = sub <8 x i16> %888, %875
  %890 = getelementptr inbounds i16, i16* %1, i64 496
  %891 = bitcast i16* %890 to <8 x i16>*
  store <8 x i16> %889, <8 x i16>* %891, align 2, !alias.scope !144, !noalias !141
  %892 = getelementptr inbounds i16, i16* %0, i64 504
  %893 = bitcast i16* %892 to <8 x i16>*
  %894 = load <8 x i16>, <8 x i16>* %893, align 2, !alias.scope !141
  %895 = sub <8 x i16> %894, %875
  %896 = getelementptr inbounds i16, i16* %1, i64 504
  %897 = bitcast i16* %896 to <8 x i16>*
  store <8 x i16> %895, <8 x i16>* %897, align 2, !alias.scope !144, !noalias !141
  br label %921

898:                                              ; preds = %865, %898
  %899 = phi i64 [ %919, %898 ], [ 0, %865 ]
  %900 = getelementptr inbounds i16, i16* %866, i64 %899
  %901 = load i16, i16* %900, align 2
  %902 = sub i16 %901, %27
  %903 = getelementptr inbounds i16, i16* %867, i64 %899
  store i16 %902, i16* %903, align 2
  %904 = or i64 %899, 1
  %905 = getelementptr inbounds i16, i16* %866, i64 %904
  %906 = load i16, i16* %905, align 2
  %907 = sub i16 %906, %27
  %908 = getelementptr inbounds i16, i16* %867, i64 %904
  store i16 %907, i16* %908, align 2
  %909 = or i64 %899, 2
  %910 = getelementptr inbounds i16, i16* %866, i64 %909
  %911 = load i16, i16* %910, align 2
  %912 = sub i16 %911, %27
  %913 = getelementptr inbounds i16, i16* %867, i64 %909
  store i16 %912, i16* %913, align 2
  %914 = or i64 %899, 3
  %915 = getelementptr inbounds i16, i16* %866, i64 %914
  %916 = load i16, i16* %915, align 2
  %917 = sub i16 %916, %27
  %918 = getelementptr inbounds i16, i16* %867, i64 %914
  store i16 %917, i16* %918, align 2
  %919 = add nuw nsw i64 %899, 4
  %920 = icmp eq i64 %919, 32
  br i1 %920, label %921, label %898, !llvm.loop !146

921:                                              ; preds = %898, %873
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subtract_average_32x32_c(i16* nocapture readonly, i16* nocapture) #2 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi i32 [ 0, %2 ], [ %23, %3 ]
  %5 = phi i16* [ %0, %2 ], [ %22, %3 ]
  %6 = phi i32 [ 512, %2 ], [ %21, %3 ]
  %7 = bitcast i16* %5 to <32 x i16>*
  %8 = load <32 x i16>, <32 x i16>* %7, align 2
  %9 = zext <32 x i16> %8 to <32 x i32>
  %10 = shufflevector <32 x i32> %9, <32 x i32> undef, <32 x i32> <i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %11 = add nsw <32 x i32> %10, %9
  %12 = shufflevector <32 x i32> %11, <32 x i32> undef, <32 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %13 = add nsw <32 x i32> %11, %12
  %14 = shufflevector <32 x i32> %13, <32 x i32> undef, <32 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %15 = add nsw <32 x i32> %13, %14
  %16 = shufflevector <32 x i32> %15, <32 x i32> undef, <32 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %17 = add nsw <32 x i32> %15, %16
  %18 = shufflevector <32 x i32> %17, <32 x i32> undef, <32 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %19 = add nsw <32 x i32> %17, %18
  %20 = extractelement <32 x i32> %19, i32 0
  %21 = add nsw i32 %20, %6
  %22 = getelementptr inbounds i16, i16* %5, i64 32
  %23 = add nuw nsw i32 %4, 1
  %24 = icmp eq i32 %23, 32
  br i1 %24, label %25, label %3

25:                                               ; preds = %3
  %26 = lshr i32 %21, 10
  %27 = trunc i32 %26 to i16
  %28 = insertelement <8 x i16> undef, i16 %27, i32 0
  %29 = shufflevector <8 x i16> %28, <8 x i16> undef, <8 x i32> zeroinitializer
  br label %30

30:                                               ; preds = %67, %25
  %31 = phi i64 [ %72, %67 ], [ 0, %25 ]
  %32 = phi i32 [ %70, %67 ], [ 0, %25 ]
  %33 = phi i16* [ %68, %67 ], [ %0, %25 ]
  %34 = phi i16* [ %69, %67 ], [ %1, %25 ]
  %35 = shl nuw nsw i64 %31, 5
  %36 = add i64 %35, 32
  %37 = getelementptr i16, i16* %0, i64 %36
  %38 = getelementptr i16, i16* %0, i64 %35
  %39 = getelementptr i16, i16* %1, i64 %36
  %40 = getelementptr i16, i16* %1, i64 %35
  %41 = icmp ult i16* %40, %37
  %42 = icmp ult i16* %38, %39
  %43 = and i1 %41, %42
  br i1 %43, label %73, label %44

44:                                               ; preds = %30
  %45 = bitcast i16* %33 to <8 x i16>*
  %46 = load <8 x i16>, <8 x i16>* %45, align 2, !alias.scope !147
  %47 = sub <8 x i16> %46, %29
  %48 = bitcast i16* %34 to <8 x i16>*
  store <8 x i16> %47, <8 x i16>* %48, align 2, !alias.scope !150, !noalias !147
  %49 = getelementptr inbounds i16, i16* %33, i64 8
  %50 = bitcast i16* %49 to <8 x i16>*
  %51 = load <8 x i16>, <8 x i16>* %50, align 2, !alias.scope !147
  %52 = sub <8 x i16> %51, %29
  %53 = getelementptr inbounds i16, i16* %34, i64 8
  %54 = bitcast i16* %53 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %54, align 2, !alias.scope !150, !noalias !147
  %55 = getelementptr inbounds i16, i16* %33, i64 16
  %56 = bitcast i16* %55 to <8 x i16>*
  %57 = load <8 x i16>, <8 x i16>* %56, align 2, !alias.scope !147
  %58 = sub <8 x i16> %57, %29
  %59 = getelementptr inbounds i16, i16* %34, i64 16
  %60 = bitcast i16* %59 to <8 x i16>*
  store <8 x i16> %58, <8 x i16>* %60, align 2, !alias.scope !150, !noalias !147
  %61 = getelementptr inbounds i16, i16* %33, i64 24
  %62 = bitcast i16* %61 to <8 x i16>*
  %63 = load <8 x i16>, <8 x i16>* %62, align 2, !alias.scope !147
  %64 = sub <8 x i16> %63, %29
  %65 = getelementptr inbounds i16, i16* %34, i64 24
  %66 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %64, <8 x i16>* %66, align 2, !alias.scope !150, !noalias !147
  br label %67

67:                                               ; preds = %73, %44
  %68 = getelementptr inbounds i16, i16* %33, i64 32
  %69 = getelementptr inbounds i16, i16* %34, i64 32
  %70 = add nuw nsw i32 %32, 1
  %71 = icmp eq i32 %70, 32
  %72 = add i64 %31, 1
  br i1 %71, label %96, label %30

73:                                               ; preds = %30, %73
  %74 = phi i64 [ %94, %73 ], [ 0, %30 ]
  %75 = getelementptr inbounds i16, i16* %33, i64 %74
  %76 = load i16, i16* %75, align 2
  %77 = sub i16 %76, %27
  %78 = getelementptr inbounds i16, i16* %34, i64 %74
  store i16 %77, i16* %78, align 2
  %79 = or i64 %74, 1
  %80 = getelementptr inbounds i16, i16* %33, i64 %79
  %81 = load i16, i16* %80, align 2
  %82 = sub i16 %81, %27
  %83 = getelementptr inbounds i16, i16* %34, i64 %79
  store i16 %82, i16* %83, align 2
  %84 = or i64 %74, 2
  %85 = getelementptr inbounds i16, i16* %33, i64 %84
  %86 = load i16, i16* %85, align 2
  %87 = sub i16 %86, %27
  %88 = getelementptr inbounds i16, i16* %34, i64 %84
  store i16 %87, i16* %88, align 2
  %89 = or i64 %74, 3
  %90 = getelementptr inbounds i16, i16* %33, i64 %89
  %91 = load i16, i16* %90, align 2
  %92 = sub i16 %91, %27
  %93 = getelementptr inbounds i16, i16* %34, i64 %89
  store i16 %92, i16* %93, align 2
  %94 = add nuw nsw i64 %74, 4
  %95 = icmp eq i64 %94, 32
  br i1 %95, label %67, label %73, !llvm.loop !152

96:                                               ; preds = %67
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void (i16*, i16*)* @cfl_get_subtract_average_fn_c(i8 zeroext) local_unnamed_addr #3 {
  %2 = urem i8 %0, 19
  %3 = zext i8 %2 to i64
  %4 = getelementptr inbounds [19 x void (i16*, i16*)*], [19 x void (i16*, i16*)*]* @cfl_get_subtract_average_fn_c.sub_avg, i64 0, i64 %3
  %5 = load void (i16*, i16*)*, void (i16*, i16*)** %4, align 8
  ret void (i16*, i16*)* %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_predict_lbd_4x4_c(i16* nocapture readonly, i8* nocapture, i32, i32) #2 {
  %5 = sext i32 %2 to i64
  br label %6

6:                                                ; preds = %90, %4
  %7 = phi i32 [ 0, %4 ], [ %103, %90 ]
  %8 = phi i16* [ %0, %4 ], [ %102, %90 ]
  %9 = phi i8* [ %1, %4 ], [ %101, %90 ]
  %10 = load i16, i16* %8, align 2
  %11 = sext i16 %10 to i32
  %12 = mul nsw i32 %11, %3
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %6
  %15 = sub i32 32, %12
  %16 = ashr i32 %15, 6
  %17 = sub nsw i32 0, %16
  br label %21

18:                                               ; preds = %6
  %19 = add nuw nsw i32 %12, 32
  %20 = ashr i32 %19, 6
  br label %21

21:                                               ; preds = %18, %14
  %22 = phi i32 [ %17, %14 ], [ %20, %18 ]
  %23 = load i8, i8* %9, align 1
  %24 = zext i8 %23 to i32
  %25 = add nsw i32 %22, %24
  %26 = icmp sgt i32 %25, 0
  %27 = select i1 %26, i32 %25, i32 0
  %28 = icmp slt i32 %27, 255
  %29 = select i1 %28, i32 %27, i32 255
  %30 = trunc i32 %29 to i8
  store i8 %30, i8* %9, align 1
  %31 = getelementptr inbounds i16, i16* %8, i64 1
  %32 = load i16, i16* %31, align 2
  %33 = sext i16 %32 to i32
  %34 = mul nsw i32 %33, %3
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %40, label %37

36:                                               ; preds = %90
  ret void

37:                                               ; preds = %21
  %38 = add nuw nsw i32 %34, 32
  %39 = ashr i32 %38, 6
  br label %44

40:                                               ; preds = %21
  %41 = sub i32 32, %34
  %42 = ashr i32 %41, 6
  %43 = sub nsw i32 0, %42
  br label %44

44:                                               ; preds = %40, %37
  %45 = phi i32 [ %43, %40 ], [ %39, %37 ]
  %46 = getelementptr inbounds i8, i8* %9, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = add nsw i32 %45, %48
  %50 = icmp sgt i32 %49, 0
  %51 = select i1 %50, i32 %49, i32 0
  %52 = icmp slt i32 %51, 255
  %53 = select i1 %52, i32 %51, i32 255
  %54 = trunc i32 %53 to i8
  store i8 %54, i8* %46, align 1
  %55 = getelementptr inbounds i16, i16* %8, i64 2
  %56 = load i16, i16* %55, align 2
  %57 = sext i16 %56 to i32
  %58 = mul nsw i32 %57, %3
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %44
  %61 = add nuw nsw i32 %58, 32
  %62 = ashr i32 %61, 6
  br label %67

63:                                               ; preds = %44
  %64 = sub i32 32, %58
  %65 = ashr i32 %64, 6
  %66 = sub nsw i32 0, %65
  br label %67

67:                                               ; preds = %63, %60
  %68 = phi i32 [ %66, %63 ], [ %62, %60 ]
  %69 = getelementptr inbounds i8, i8* %9, i64 2
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = add nsw i32 %68, %71
  %73 = icmp sgt i32 %72, 0
  %74 = select i1 %73, i32 %72, i32 0
  %75 = icmp slt i32 %74, 255
  %76 = select i1 %75, i32 %74, i32 255
  %77 = trunc i32 %76 to i8
  store i8 %77, i8* %69, align 1
  %78 = getelementptr inbounds i16, i16* %8, i64 3
  %79 = load i16, i16* %78, align 2
  %80 = sext i16 %79 to i32
  %81 = mul nsw i32 %80, %3
  %82 = icmp slt i32 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %67
  %84 = add nuw nsw i32 %81, 32
  %85 = ashr i32 %84, 6
  br label %90

86:                                               ; preds = %67
  %87 = sub i32 32, %81
  %88 = ashr i32 %87, 6
  %89 = sub nsw i32 0, %88
  br label %90

90:                                               ; preds = %86, %83
  %91 = phi i32 [ %89, %86 ], [ %85, %83 ]
  %92 = getelementptr inbounds i8, i8* %9, i64 3
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = add nsw i32 %91, %94
  %96 = icmp sgt i32 %95, 0
  %97 = select i1 %96, i32 %95, i32 0
  %98 = icmp slt i32 %97, 255
  %99 = select i1 %98, i32 %97, i32 255
  %100 = trunc i32 %99 to i8
  store i8 %100, i8* %92, align 1
  %101 = getelementptr inbounds i8, i8* %9, i64 %5
  %102 = getelementptr inbounds i16, i16* %8, i64 32
  %103 = add nuw nsw i32 %7, 1
  %104 = icmp eq i32 %103, 4
  br i1 %104, label %36, label %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_predict_lbd_4x8_c(i16* nocapture readonly, i8* nocapture, i32, i32) #2 {
  %5 = sext i32 %2 to i64
  br label %6

6:                                                ; preds = %90, %4
  %7 = phi i32 [ 0, %4 ], [ %103, %90 ]
  %8 = phi i16* [ %0, %4 ], [ %102, %90 ]
  %9 = phi i8* [ %1, %4 ], [ %101, %90 ]
  %10 = load i16, i16* %8, align 2
  %11 = sext i16 %10 to i32
  %12 = mul nsw i32 %11, %3
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %6
  %15 = sub i32 32, %12
  %16 = ashr i32 %15, 6
  %17 = sub nsw i32 0, %16
  br label %21

18:                                               ; preds = %6
  %19 = add nuw nsw i32 %12, 32
  %20 = ashr i32 %19, 6
  br label %21

21:                                               ; preds = %18, %14
  %22 = phi i32 [ %17, %14 ], [ %20, %18 ]
  %23 = load i8, i8* %9, align 1
  %24 = zext i8 %23 to i32
  %25 = add nsw i32 %22, %24
  %26 = icmp sgt i32 %25, 0
  %27 = select i1 %26, i32 %25, i32 0
  %28 = icmp slt i32 %27, 255
  %29 = select i1 %28, i32 %27, i32 255
  %30 = trunc i32 %29 to i8
  store i8 %30, i8* %9, align 1
  %31 = getelementptr inbounds i16, i16* %8, i64 1
  %32 = load i16, i16* %31, align 2
  %33 = sext i16 %32 to i32
  %34 = mul nsw i32 %33, %3
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %40, label %37

36:                                               ; preds = %90
  ret void

37:                                               ; preds = %21
  %38 = add nuw nsw i32 %34, 32
  %39 = ashr i32 %38, 6
  br label %44

40:                                               ; preds = %21
  %41 = sub i32 32, %34
  %42 = ashr i32 %41, 6
  %43 = sub nsw i32 0, %42
  br label %44

44:                                               ; preds = %40, %37
  %45 = phi i32 [ %43, %40 ], [ %39, %37 ]
  %46 = getelementptr inbounds i8, i8* %9, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = add nsw i32 %45, %48
  %50 = icmp sgt i32 %49, 0
  %51 = select i1 %50, i32 %49, i32 0
  %52 = icmp slt i32 %51, 255
  %53 = select i1 %52, i32 %51, i32 255
  %54 = trunc i32 %53 to i8
  store i8 %54, i8* %46, align 1
  %55 = getelementptr inbounds i16, i16* %8, i64 2
  %56 = load i16, i16* %55, align 2
  %57 = sext i16 %56 to i32
  %58 = mul nsw i32 %57, %3
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %44
  %61 = add nuw nsw i32 %58, 32
  %62 = ashr i32 %61, 6
  br label %67

63:                                               ; preds = %44
  %64 = sub i32 32, %58
  %65 = ashr i32 %64, 6
  %66 = sub nsw i32 0, %65
  br label %67

67:                                               ; preds = %63, %60
  %68 = phi i32 [ %66, %63 ], [ %62, %60 ]
  %69 = getelementptr inbounds i8, i8* %9, i64 2
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = add nsw i32 %68, %71
  %73 = icmp sgt i32 %72, 0
  %74 = select i1 %73, i32 %72, i32 0
  %75 = icmp slt i32 %74, 255
  %76 = select i1 %75, i32 %74, i32 255
  %77 = trunc i32 %76 to i8
  store i8 %77, i8* %69, align 1
  %78 = getelementptr inbounds i16, i16* %8, i64 3
  %79 = load i16, i16* %78, align 2
  %80 = sext i16 %79 to i32
  %81 = mul nsw i32 %80, %3
  %82 = icmp slt i32 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %67
  %84 = add nuw nsw i32 %81, 32
  %85 = ashr i32 %84, 6
  br label %90

86:                                               ; preds = %67
  %87 = sub i32 32, %81
  %88 = ashr i32 %87, 6
  %89 = sub nsw i32 0, %88
  br label %90

90:                                               ; preds = %86, %83
  %91 = phi i32 [ %89, %86 ], [ %85, %83 ]
  %92 = getelementptr inbounds i8, i8* %9, i64 3
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = add nsw i32 %91, %94
  %96 = icmp sgt i32 %95, 0
  %97 = select i1 %96, i32 %95, i32 0
  %98 = icmp slt i32 %97, 255
  %99 = select i1 %98, i32 %97, i32 255
  %100 = trunc i32 %99 to i8
  store i8 %100, i8* %92, align 1
  %101 = getelementptr inbounds i8, i8* %9, i64 %5
  %102 = getelementptr inbounds i16, i16* %8, i64 32
  %103 = add nuw nsw i32 %7, 1
  %104 = icmp eq i32 %103, 8
  br i1 %104, label %36, label %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_predict_lbd_4x16_c(i16* nocapture readonly, i8* nocapture, i32, i32) #2 {
  %5 = sext i32 %2 to i64
  br label %6

6:                                                ; preds = %90, %4
  %7 = phi i32 [ 0, %4 ], [ %103, %90 ]
  %8 = phi i16* [ %0, %4 ], [ %102, %90 ]
  %9 = phi i8* [ %1, %4 ], [ %101, %90 ]
  %10 = load i16, i16* %8, align 2
  %11 = sext i16 %10 to i32
  %12 = mul nsw i32 %11, %3
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %6
  %15 = sub i32 32, %12
  %16 = ashr i32 %15, 6
  %17 = sub nsw i32 0, %16
  br label %21

18:                                               ; preds = %6
  %19 = add nuw nsw i32 %12, 32
  %20 = ashr i32 %19, 6
  br label %21

21:                                               ; preds = %18, %14
  %22 = phi i32 [ %17, %14 ], [ %20, %18 ]
  %23 = load i8, i8* %9, align 1
  %24 = zext i8 %23 to i32
  %25 = add nsw i32 %22, %24
  %26 = icmp sgt i32 %25, 0
  %27 = select i1 %26, i32 %25, i32 0
  %28 = icmp slt i32 %27, 255
  %29 = select i1 %28, i32 %27, i32 255
  %30 = trunc i32 %29 to i8
  store i8 %30, i8* %9, align 1
  %31 = getelementptr inbounds i16, i16* %8, i64 1
  %32 = load i16, i16* %31, align 2
  %33 = sext i16 %32 to i32
  %34 = mul nsw i32 %33, %3
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %40, label %37

36:                                               ; preds = %90
  ret void

37:                                               ; preds = %21
  %38 = add nuw nsw i32 %34, 32
  %39 = ashr i32 %38, 6
  br label %44

40:                                               ; preds = %21
  %41 = sub i32 32, %34
  %42 = ashr i32 %41, 6
  %43 = sub nsw i32 0, %42
  br label %44

44:                                               ; preds = %40, %37
  %45 = phi i32 [ %43, %40 ], [ %39, %37 ]
  %46 = getelementptr inbounds i8, i8* %9, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = add nsw i32 %45, %48
  %50 = icmp sgt i32 %49, 0
  %51 = select i1 %50, i32 %49, i32 0
  %52 = icmp slt i32 %51, 255
  %53 = select i1 %52, i32 %51, i32 255
  %54 = trunc i32 %53 to i8
  store i8 %54, i8* %46, align 1
  %55 = getelementptr inbounds i16, i16* %8, i64 2
  %56 = load i16, i16* %55, align 2
  %57 = sext i16 %56 to i32
  %58 = mul nsw i32 %57, %3
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %44
  %61 = add nuw nsw i32 %58, 32
  %62 = ashr i32 %61, 6
  br label %67

63:                                               ; preds = %44
  %64 = sub i32 32, %58
  %65 = ashr i32 %64, 6
  %66 = sub nsw i32 0, %65
  br label %67

67:                                               ; preds = %63, %60
  %68 = phi i32 [ %66, %63 ], [ %62, %60 ]
  %69 = getelementptr inbounds i8, i8* %9, i64 2
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = add nsw i32 %68, %71
  %73 = icmp sgt i32 %72, 0
  %74 = select i1 %73, i32 %72, i32 0
  %75 = icmp slt i32 %74, 255
  %76 = select i1 %75, i32 %74, i32 255
  %77 = trunc i32 %76 to i8
  store i8 %77, i8* %69, align 1
  %78 = getelementptr inbounds i16, i16* %8, i64 3
  %79 = load i16, i16* %78, align 2
  %80 = sext i16 %79 to i32
  %81 = mul nsw i32 %80, %3
  %82 = icmp slt i32 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %67
  %84 = add nuw nsw i32 %81, 32
  %85 = ashr i32 %84, 6
  br label %90

86:                                               ; preds = %67
  %87 = sub i32 32, %81
  %88 = ashr i32 %87, 6
  %89 = sub nsw i32 0, %88
  br label %90

90:                                               ; preds = %86, %83
  %91 = phi i32 [ %89, %86 ], [ %85, %83 ]
  %92 = getelementptr inbounds i8, i8* %9, i64 3
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = add nsw i32 %91, %94
  %96 = icmp sgt i32 %95, 0
  %97 = select i1 %96, i32 %95, i32 0
  %98 = icmp slt i32 %97, 255
  %99 = select i1 %98, i32 %97, i32 255
  %100 = trunc i32 %99 to i8
  store i8 %100, i8* %92, align 1
  %101 = getelementptr inbounds i8, i8* %9, i64 %5
  %102 = getelementptr inbounds i16, i16* %8, i64 32
  %103 = add nuw nsw i32 %7, 1
  %104 = icmp eq i32 %103, 16
  br i1 %104, label %36, label %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_predict_lbd_8x4_c(i16* nocapture readonly, i8* nocapture, i32, i32) #2 {
  %5 = sext i32 %2 to i64
  br label %6

6:                                                ; preds = %182, %4
  %7 = phi i32 [ 0, %4 ], [ %195, %182 ]
  %8 = phi i16* [ %0, %4 ], [ %194, %182 ]
  %9 = phi i8* [ %1, %4 ], [ %193, %182 ]
  %10 = load i16, i16* %8, align 2
  %11 = sext i16 %10 to i32
  %12 = mul nsw i32 %11, %3
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %6
  %15 = sub i32 32, %12
  %16 = ashr i32 %15, 6
  %17 = sub nsw i32 0, %16
  br label %21

18:                                               ; preds = %6
  %19 = add nuw nsw i32 %12, 32
  %20 = ashr i32 %19, 6
  br label %21

21:                                               ; preds = %18, %14
  %22 = phi i32 [ %17, %14 ], [ %20, %18 ]
  %23 = load i8, i8* %9, align 1
  %24 = zext i8 %23 to i32
  %25 = add nsw i32 %22, %24
  %26 = icmp sgt i32 %25, 0
  %27 = select i1 %26, i32 %25, i32 0
  %28 = icmp slt i32 %27, 255
  %29 = select i1 %28, i32 %27, i32 255
  %30 = trunc i32 %29 to i8
  store i8 %30, i8* %9, align 1
  %31 = getelementptr inbounds i16, i16* %8, i64 1
  %32 = load i16, i16* %31, align 2
  %33 = sext i16 %32 to i32
  %34 = mul nsw i32 %33, %3
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %40, label %37

36:                                               ; preds = %182
  ret void

37:                                               ; preds = %21
  %38 = add nuw nsw i32 %34, 32
  %39 = ashr i32 %38, 6
  br label %44

40:                                               ; preds = %21
  %41 = sub i32 32, %34
  %42 = ashr i32 %41, 6
  %43 = sub nsw i32 0, %42
  br label %44

44:                                               ; preds = %40, %37
  %45 = phi i32 [ %43, %40 ], [ %39, %37 ]
  %46 = getelementptr inbounds i8, i8* %9, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = add nsw i32 %45, %48
  %50 = icmp sgt i32 %49, 0
  %51 = select i1 %50, i32 %49, i32 0
  %52 = icmp slt i32 %51, 255
  %53 = select i1 %52, i32 %51, i32 255
  %54 = trunc i32 %53 to i8
  store i8 %54, i8* %46, align 1
  %55 = getelementptr inbounds i16, i16* %8, i64 2
  %56 = load i16, i16* %55, align 2
  %57 = sext i16 %56 to i32
  %58 = mul nsw i32 %57, %3
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %44
  %61 = add nuw nsw i32 %58, 32
  %62 = ashr i32 %61, 6
  br label %67

63:                                               ; preds = %44
  %64 = sub i32 32, %58
  %65 = ashr i32 %64, 6
  %66 = sub nsw i32 0, %65
  br label %67

67:                                               ; preds = %63, %60
  %68 = phi i32 [ %66, %63 ], [ %62, %60 ]
  %69 = getelementptr inbounds i8, i8* %9, i64 2
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = add nsw i32 %68, %71
  %73 = icmp sgt i32 %72, 0
  %74 = select i1 %73, i32 %72, i32 0
  %75 = icmp slt i32 %74, 255
  %76 = select i1 %75, i32 %74, i32 255
  %77 = trunc i32 %76 to i8
  store i8 %77, i8* %69, align 1
  %78 = getelementptr inbounds i16, i16* %8, i64 3
  %79 = load i16, i16* %78, align 2
  %80 = sext i16 %79 to i32
  %81 = mul nsw i32 %80, %3
  %82 = icmp slt i32 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %67
  %84 = add nuw nsw i32 %81, 32
  %85 = ashr i32 %84, 6
  br label %90

86:                                               ; preds = %67
  %87 = sub i32 32, %81
  %88 = ashr i32 %87, 6
  %89 = sub nsw i32 0, %88
  br label %90

90:                                               ; preds = %86, %83
  %91 = phi i32 [ %89, %86 ], [ %85, %83 ]
  %92 = getelementptr inbounds i8, i8* %9, i64 3
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = add nsw i32 %91, %94
  %96 = icmp sgt i32 %95, 0
  %97 = select i1 %96, i32 %95, i32 0
  %98 = icmp slt i32 %97, 255
  %99 = select i1 %98, i32 %97, i32 255
  %100 = trunc i32 %99 to i8
  store i8 %100, i8* %92, align 1
  %101 = getelementptr inbounds i16, i16* %8, i64 4
  %102 = load i16, i16* %101, align 2
  %103 = sext i16 %102 to i32
  %104 = mul nsw i32 %103, %3
  %105 = icmp slt i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %90
  %107 = add nuw nsw i32 %104, 32
  %108 = ashr i32 %107, 6
  br label %113

109:                                              ; preds = %90
  %110 = sub i32 32, %104
  %111 = ashr i32 %110, 6
  %112 = sub nsw i32 0, %111
  br label %113

113:                                              ; preds = %109, %106
  %114 = phi i32 [ %112, %109 ], [ %108, %106 ]
  %115 = getelementptr inbounds i8, i8* %9, i64 4
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = add nsw i32 %114, %117
  %119 = icmp sgt i32 %118, 0
  %120 = select i1 %119, i32 %118, i32 0
  %121 = icmp slt i32 %120, 255
  %122 = select i1 %121, i32 %120, i32 255
  %123 = trunc i32 %122 to i8
  store i8 %123, i8* %115, align 1
  %124 = getelementptr inbounds i16, i16* %8, i64 5
  %125 = load i16, i16* %124, align 2
  %126 = sext i16 %125 to i32
  %127 = mul nsw i32 %126, %3
  %128 = icmp slt i32 %127, 0
  br i1 %128, label %132, label %129

129:                                              ; preds = %113
  %130 = add nuw nsw i32 %127, 32
  %131 = ashr i32 %130, 6
  br label %136

132:                                              ; preds = %113
  %133 = sub i32 32, %127
  %134 = ashr i32 %133, 6
  %135 = sub nsw i32 0, %134
  br label %136

136:                                              ; preds = %132, %129
  %137 = phi i32 [ %135, %132 ], [ %131, %129 ]
  %138 = getelementptr inbounds i8, i8* %9, i64 5
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = add nsw i32 %137, %140
  %142 = icmp sgt i32 %141, 0
  %143 = select i1 %142, i32 %141, i32 0
  %144 = icmp slt i32 %143, 255
  %145 = select i1 %144, i32 %143, i32 255
  %146 = trunc i32 %145 to i8
  store i8 %146, i8* %138, align 1
  %147 = getelementptr inbounds i16, i16* %8, i64 6
  %148 = load i16, i16* %147, align 2
  %149 = sext i16 %148 to i32
  %150 = mul nsw i32 %149, %3
  %151 = icmp slt i32 %150, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %136
  %153 = add nuw nsw i32 %150, 32
  %154 = ashr i32 %153, 6
  br label %159

155:                                              ; preds = %136
  %156 = sub i32 32, %150
  %157 = ashr i32 %156, 6
  %158 = sub nsw i32 0, %157
  br label %159

159:                                              ; preds = %155, %152
  %160 = phi i32 [ %158, %155 ], [ %154, %152 ]
  %161 = getelementptr inbounds i8, i8* %9, i64 6
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = add nsw i32 %160, %163
  %165 = icmp sgt i32 %164, 0
  %166 = select i1 %165, i32 %164, i32 0
  %167 = icmp slt i32 %166, 255
  %168 = select i1 %167, i32 %166, i32 255
  %169 = trunc i32 %168 to i8
  store i8 %169, i8* %161, align 1
  %170 = getelementptr inbounds i16, i16* %8, i64 7
  %171 = load i16, i16* %170, align 2
  %172 = sext i16 %171 to i32
  %173 = mul nsw i32 %172, %3
  %174 = icmp slt i32 %173, 0
  br i1 %174, label %178, label %175

175:                                              ; preds = %159
  %176 = add nuw nsw i32 %173, 32
  %177 = ashr i32 %176, 6
  br label %182

178:                                              ; preds = %159
  %179 = sub i32 32, %173
  %180 = ashr i32 %179, 6
  %181 = sub nsw i32 0, %180
  br label %182

182:                                              ; preds = %178, %175
  %183 = phi i32 [ %181, %178 ], [ %177, %175 ]
  %184 = getelementptr inbounds i8, i8* %9, i64 7
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i32
  %187 = add nsw i32 %183, %186
  %188 = icmp sgt i32 %187, 0
  %189 = select i1 %188, i32 %187, i32 0
  %190 = icmp slt i32 %189, 255
  %191 = select i1 %190, i32 %189, i32 255
  %192 = trunc i32 %191 to i8
  store i8 %192, i8* %184, align 1
  %193 = getelementptr inbounds i8, i8* %9, i64 %5
  %194 = getelementptr inbounds i16, i16* %8, i64 32
  %195 = add nuw nsw i32 %7, 1
  %196 = icmp eq i32 %195, 4
  br i1 %196, label %36, label %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_predict_lbd_8x8_c(i16* nocapture readonly, i8* nocapture, i32, i32) #2 {
  %5 = sext i32 %2 to i64
  br label %6

6:                                                ; preds = %182, %4
  %7 = phi i32 [ 0, %4 ], [ %195, %182 ]
  %8 = phi i16* [ %0, %4 ], [ %194, %182 ]
  %9 = phi i8* [ %1, %4 ], [ %193, %182 ]
  %10 = load i16, i16* %8, align 2
  %11 = sext i16 %10 to i32
  %12 = mul nsw i32 %11, %3
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %6
  %15 = sub i32 32, %12
  %16 = ashr i32 %15, 6
  %17 = sub nsw i32 0, %16
  br label %21

18:                                               ; preds = %6
  %19 = add nuw nsw i32 %12, 32
  %20 = ashr i32 %19, 6
  br label %21

21:                                               ; preds = %18, %14
  %22 = phi i32 [ %17, %14 ], [ %20, %18 ]
  %23 = load i8, i8* %9, align 1
  %24 = zext i8 %23 to i32
  %25 = add nsw i32 %22, %24
  %26 = icmp sgt i32 %25, 0
  %27 = select i1 %26, i32 %25, i32 0
  %28 = icmp slt i32 %27, 255
  %29 = select i1 %28, i32 %27, i32 255
  %30 = trunc i32 %29 to i8
  store i8 %30, i8* %9, align 1
  %31 = getelementptr inbounds i16, i16* %8, i64 1
  %32 = load i16, i16* %31, align 2
  %33 = sext i16 %32 to i32
  %34 = mul nsw i32 %33, %3
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %40, label %37

36:                                               ; preds = %182
  ret void

37:                                               ; preds = %21
  %38 = add nuw nsw i32 %34, 32
  %39 = ashr i32 %38, 6
  br label %44

40:                                               ; preds = %21
  %41 = sub i32 32, %34
  %42 = ashr i32 %41, 6
  %43 = sub nsw i32 0, %42
  br label %44

44:                                               ; preds = %40, %37
  %45 = phi i32 [ %43, %40 ], [ %39, %37 ]
  %46 = getelementptr inbounds i8, i8* %9, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = add nsw i32 %45, %48
  %50 = icmp sgt i32 %49, 0
  %51 = select i1 %50, i32 %49, i32 0
  %52 = icmp slt i32 %51, 255
  %53 = select i1 %52, i32 %51, i32 255
  %54 = trunc i32 %53 to i8
  store i8 %54, i8* %46, align 1
  %55 = getelementptr inbounds i16, i16* %8, i64 2
  %56 = load i16, i16* %55, align 2
  %57 = sext i16 %56 to i32
  %58 = mul nsw i32 %57, %3
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %44
  %61 = add nuw nsw i32 %58, 32
  %62 = ashr i32 %61, 6
  br label %67

63:                                               ; preds = %44
  %64 = sub i32 32, %58
  %65 = ashr i32 %64, 6
  %66 = sub nsw i32 0, %65
  br label %67

67:                                               ; preds = %63, %60
  %68 = phi i32 [ %66, %63 ], [ %62, %60 ]
  %69 = getelementptr inbounds i8, i8* %9, i64 2
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = add nsw i32 %68, %71
  %73 = icmp sgt i32 %72, 0
  %74 = select i1 %73, i32 %72, i32 0
  %75 = icmp slt i32 %74, 255
  %76 = select i1 %75, i32 %74, i32 255
  %77 = trunc i32 %76 to i8
  store i8 %77, i8* %69, align 1
  %78 = getelementptr inbounds i16, i16* %8, i64 3
  %79 = load i16, i16* %78, align 2
  %80 = sext i16 %79 to i32
  %81 = mul nsw i32 %80, %3
  %82 = icmp slt i32 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %67
  %84 = add nuw nsw i32 %81, 32
  %85 = ashr i32 %84, 6
  br label %90

86:                                               ; preds = %67
  %87 = sub i32 32, %81
  %88 = ashr i32 %87, 6
  %89 = sub nsw i32 0, %88
  br label %90

90:                                               ; preds = %86, %83
  %91 = phi i32 [ %89, %86 ], [ %85, %83 ]
  %92 = getelementptr inbounds i8, i8* %9, i64 3
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = add nsw i32 %91, %94
  %96 = icmp sgt i32 %95, 0
  %97 = select i1 %96, i32 %95, i32 0
  %98 = icmp slt i32 %97, 255
  %99 = select i1 %98, i32 %97, i32 255
  %100 = trunc i32 %99 to i8
  store i8 %100, i8* %92, align 1
  %101 = getelementptr inbounds i16, i16* %8, i64 4
  %102 = load i16, i16* %101, align 2
  %103 = sext i16 %102 to i32
  %104 = mul nsw i32 %103, %3
  %105 = icmp slt i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %90
  %107 = add nuw nsw i32 %104, 32
  %108 = ashr i32 %107, 6
  br label %113

109:                                              ; preds = %90
  %110 = sub i32 32, %104
  %111 = ashr i32 %110, 6
  %112 = sub nsw i32 0, %111
  br label %113

113:                                              ; preds = %109, %106
  %114 = phi i32 [ %112, %109 ], [ %108, %106 ]
  %115 = getelementptr inbounds i8, i8* %9, i64 4
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = add nsw i32 %114, %117
  %119 = icmp sgt i32 %118, 0
  %120 = select i1 %119, i32 %118, i32 0
  %121 = icmp slt i32 %120, 255
  %122 = select i1 %121, i32 %120, i32 255
  %123 = trunc i32 %122 to i8
  store i8 %123, i8* %115, align 1
  %124 = getelementptr inbounds i16, i16* %8, i64 5
  %125 = load i16, i16* %124, align 2
  %126 = sext i16 %125 to i32
  %127 = mul nsw i32 %126, %3
  %128 = icmp slt i32 %127, 0
  br i1 %128, label %132, label %129

129:                                              ; preds = %113
  %130 = add nuw nsw i32 %127, 32
  %131 = ashr i32 %130, 6
  br label %136

132:                                              ; preds = %113
  %133 = sub i32 32, %127
  %134 = ashr i32 %133, 6
  %135 = sub nsw i32 0, %134
  br label %136

136:                                              ; preds = %132, %129
  %137 = phi i32 [ %135, %132 ], [ %131, %129 ]
  %138 = getelementptr inbounds i8, i8* %9, i64 5
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = add nsw i32 %137, %140
  %142 = icmp sgt i32 %141, 0
  %143 = select i1 %142, i32 %141, i32 0
  %144 = icmp slt i32 %143, 255
  %145 = select i1 %144, i32 %143, i32 255
  %146 = trunc i32 %145 to i8
  store i8 %146, i8* %138, align 1
  %147 = getelementptr inbounds i16, i16* %8, i64 6
  %148 = load i16, i16* %147, align 2
  %149 = sext i16 %148 to i32
  %150 = mul nsw i32 %149, %3
  %151 = icmp slt i32 %150, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %136
  %153 = add nuw nsw i32 %150, 32
  %154 = ashr i32 %153, 6
  br label %159

155:                                              ; preds = %136
  %156 = sub i32 32, %150
  %157 = ashr i32 %156, 6
  %158 = sub nsw i32 0, %157
  br label %159

159:                                              ; preds = %155, %152
  %160 = phi i32 [ %158, %155 ], [ %154, %152 ]
  %161 = getelementptr inbounds i8, i8* %9, i64 6
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = add nsw i32 %160, %163
  %165 = icmp sgt i32 %164, 0
  %166 = select i1 %165, i32 %164, i32 0
  %167 = icmp slt i32 %166, 255
  %168 = select i1 %167, i32 %166, i32 255
  %169 = trunc i32 %168 to i8
  store i8 %169, i8* %161, align 1
  %170 = getelementptr inbounds i16, i16* %8, i64 7
  %171 = load i16, i16* %170, align 2
  %172 = sext i16 %171 to i32
  %173 = mul nsw i32 %172, %3
  %174 = icmp slt i32 %173, 0
  br i1 %174, label %178, label %175

175:                                              ; preds = %159
  %176 = add nuw nsw i32 %173, 32
  %177 = ashr i32 %176, 6
  br label %182

178:                                              ; preds = %159
  %179 = sub i32 32, %173
  %180 = ashr i32 %179, 6
  %181 = sub nsw i32 0, %180
  br label %182

182:                                              ; preds = %178, %175
  %183 = phi i32 [ %181, %178 ], [ %177, %175 ]
  %184 = getelementptr inbounds i8, i8* %9, i64 7
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i32
  %187 = add nsw i32 %183, %186
  %188 = icmp sgt i32 %187, 0
  %189 = select i1 %188, i32 %187, i32 0
  %190 = icmp slt i32 %189, 255
  %191 = select i1 %190, i32 %189, i32 255
  %192 = trunc i32 %191 to i8
  store i8 %192, i8* %184, align 1
  %193 = getelementptr inbounds i8, i8* %9, i64 %5
  %194 = getelementptr inbounds i16, i16* %8, i64 32
  %195 = add nuw nsw i32 %7, 1
  %196 = icmp eq i32 %195, 8
  br i1 %196, label %36, label %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_predict_lbd_8x16_c(i16* nocapture readonly, i8* nocapture, i32, i32) #2 {
  %5 = sext i32 %2 to i64
  br label %6

6:                                                ; preds = %182, %4
  %7 = phi i32 [ 0, %4 ], [ %195, %182 ]
  %8 = phi i16* [ %0, %4 ], [ %194, %182 ]
  %9 = phi i8* [ %1, %4 ], [ %193, %182 ]
  %10 = load i16, i16* %8, align 2
  %11 = sext i16 %10 to i32
  %12 = mul nsw i32 %11, %3
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %6
  %15 = sub i32 32, %12
  %16 = ashr i32 %15, 6
  %17 = sub nsw i32 0, %16
  br label %21

18:                                               ; preds = %6
  %19 = add nuw nsw i32 %12, 32
  %20 = ashr i32 %19, 6
  br label %21

21:                                               ; preds = %18, %14
  %22 = phi i32 [ %17, %14 ], [ %20, %18 ]
  %23 = load i8, i8* %9, align 1
  %24 = zext i8 %23 to i32
  %25 = add nsw i32 %22, %24
  %26 = icmp sgt i32 %25, 0
  %27 = select i1 %26, i32 %25, i32 0
  %28 = icmp slt i32 %27, 255
  %29 = select i1 %28, i32 %27, i32 255
  %30 = trunc i32 %29 to i8
  store i8 %30, i8* %9, align 1
  %31 = getelementptr inbounds i16, i16* %8, i64 1
  %32 = load i16, i16* %31, align 2
  %33 = sext i16 %32 to i32
  %34 = mul nsw i32 %33, %3
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %40, label %37

36:                                               ; preds = %182
  ret void

37:                                               ; preds = %21
  %38 = add nuw nsw i32 %34, 32
  %39 = ashr i32 %38, 6
  br label %44

40:                                               ; preds = %21
  %41 = sub i32 32, %34
  %42 = ashr i32 %41, 6
  %43 = sub nsw i32 0, %42
  br label %44

44:                                               ; preds = %40, %37
  %45 = phi i32 [ %43, %40 ], [ %39, %37 ]
  %46 = getelementptr inbounds i8, i8* %9, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = add nsw i32 %45, %48
  %50 = icmp sgt i32 %49, 0
  %51 = select i1 %50, i32 %49, i32 0
  %52 = icmp slt i32 %51, 255
  %53 = select i1 %52, i32 %51, i32 255
  %54 = trunc i32 %53 to i8
  store i8 %54, i8* %46, align 1
  %55 = getelementptr inbounds i16, i16* %8, i64 2
  %56 = load i16, i16* %55, align 2
  %57 = sext i16 %56 to i32
  %58 = mul nsw i32 %57, %3
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %44
  %61 = add nuw nsw i32 %58, 32
  %62 = ashr i32 %61, 6
  br label %67

63:                                               ; preds = %44
  %64 = sub i32 32, %58
  %65 = ashr i32 %64, 6
  %66 = sub nsw i32 0, %65
  br label %67

67:                                               ; preds = %63, %60
  %68 = phi i32 [ %66, %63 ], [ %62, %60 ]
  %69 = getelementptr inbounds i8, i8* %9, i64 2
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = add nsw i32 %68, %71
  %73 = icmp sgt i32 %72, 0
  %74 = select i1 %73, i32 %72, i32 0
  %75 = icmp slt i32 %74, 255
  %76 = select i1 %75, i32 %74, i32 255
  %77 = trunc i32 %76 to i8
  store i8 %77, i8* %69, align 1
  %78 = getelementptr inbounds i16, i16* %8, i64 3
  %79 = load i16, i16* %78, align 2
  %80 = sext i16 %79 to i32
  %81 = mul nsw i32 %80, %3
  %82 = icmp slt i32 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %67
  %84 = add nuw nsw i32 %81, 32
  %85 = ashr i32 %84, 6
  br label %90

86:                                               ; preds = %67
  %87 = sub i32 32, %81
  %88 = ashr i32 %87, 6
  %89 = sub nsw i32 0, %88
  br label %90

90:                                               ; preds = %86, %83
  %91 = phi i32 [ %89, %86 ], [ %85, %83 ]
  %92 = getelementptr inbounds i8, i8* %9, i64 3
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = add nsw i32 %91, %94
  %96 = icmp sgt i32 %95, 0
  %97 = select i1 %96, i32 %95, i32 0
  %98 = icmp slt i32 %97, 255
  %99 = select i1 %98, i32 %97, i32 255
  %100 = trunc i32 %99 to i8
  store i8 %100, i8* %92, align 1
  %101 = getelementptr inbounds i16, i16* %8, i64 4
  %102 = load i16, i16* %101, align 2
  %103 = sext i16 %102 to i32
  %104 = mul nsw i32 %103, %3
  %105 = icmp slt i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %90
  %107 = add nuw nsw i32 %104, 32
  %108 = ashr i32 %107, 6
  br label %113

109:                                              ; preds = %90
  %110 = sub i32 32, %104
  %111 = ashr i32 %110, 6
  %112 = sub nsw i32 0, %111
  br label %113

113:                                              ; preds = %109, %106
  %114 = phi i32 [ %112, %109 ], [ %108, %106 ]
  %115 = getelementptr inbounds i8, i8* %9, i64 4
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = add nsw i32 %114, %117
  %119 = icmp sgt i32 %118, 0
  %120 = select i1 %119, i32 %118, i32 0
  %121 = icmp slt i32 %120, 255
  %122 = select i1 %121, i32 %120, i32 255
  %123 = trunc i32 %122 to i8
  store i8 %123, i8* %115, align 1
  %124 = getelementptr inbounds i16, i16* %8, i64 5
  %125 = load i16, i16* %124, align 2
  %126 = sext i16 %125 to i32
  %127 = mul nsw i32 %126, %3
  %128 = icmp slt i32 %127, 0
  br i1 %128, label %132, label %129

129:                                              ; preds = %113
  %130 = add nuw nsw i32 %127, 32
  %131 = ashr i32 %130, 6
  br label %136

132:                                              ; preds = %113
  %133 = sub i32 32, %127
  %134 = ashr i32 %133, 6
  %135 = sub nsw i32 0, %134
  br label %136

136:                                              ; preds = %132, %129
  %137 = phi i32 [ %135, %132 ], [ %131, %129 ]
  %138 = getelementptr inbounds i8, i8* %9, i64 5
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = add nsw i32 %137, %140
  %142 = icmp sgt i32 %141, 0
  %143 = select i1 %142, i32 %141, i32 0
  %144 = icmp slt i32 %143, 255
  %145 = select i1 %144, i32 %143, i32 255
  %146 = trunc i32 %145 to i8
  store i8 %146, i8* %138, align 1
  %147 = getelementptr inbounds i16, i16* %8, i64 6
  %148 = load i16, i16* %147, align 2
  %149 = sext i16 %148 to i32
  %150 = mul nsw i32 %149, %3
  %151 = icmp slt i32 %150, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %136
  %153 = add nuw nsw i32 %150, 32
  %154 = ashr i32 %153, 6
  br label %159

155:                                              ; preds = %136
  %156 = sub i32 32, %150
  %157 = ashr i32 %156, 6
  %158 = sub nsw i32 0, %157
  br label %159

159:                                              ; preds = %155, %152
  %160 = phi i32 [ %158, %155 ], [ %154, %152 ]
  %161 = getelementptr inbounds i8, i8* %9, i64 6
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = add nsw i32 %160, %163
  %165 = icmp sgt i32 %164, 0
  %166 = select i1 %165, i32 %164, i32 0
  %167 = icmp slt i32 %166, 255
  %168 = select i1 %167, i32 %166, i32 255
  %169 = trunc i32 %168 to i8
  store i8 %169, i8* %161, align 1
  %170 = getelementptr inbounds i16, i16* %8, i64 7
  %171 = load i16, i16* %170, align 2
  %172 = sext i16 %171 to i32
  %173 = mul nsw i32 %172, %3
  %174 = icmp slt i32 %173, 0
  br i1 %174, label %178, label %175

175:                                              ; preds = %159
  %176 = add nuw nsw i32 %173, 32
  %177 = ashr i32 %176, 6
  br label %182

178:                                              ; preds = %159
  %179 = sub i32 32, %173
  %180 = ashr i32 %179, 6
  %181 = sub nsw i32 0, %180
  br label %182

182:                                              ; preds = %178, %175
  %183 = phi i32 [ %181, %178 ], [ %177, %175 ]
  %184 = getelementptr inbounds i8, i8* %9, i64 7
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i32
  %187 = add nsw i32 %183, %186
  %188 = icmp sgt i32 %187, 0
  %189 = select i1 %188, i32 %187, i32 0
  %190 = icmp slt i32 %189, 255
  %191 = select i1 %190, i32 %189, i32 255
  %192 = trunc i32 %191 to i8
  store i8 %192, i8* %184, align 1
  %193 = getelementptr inbounds i8, i8* %9, i64 %5
  %194 = getelementptr inbounds i16, i16* %8, i64 32
  %195 = add nuw nsw i32 %7, 1
  %196 = icmp eq i32 %195, 16
  br i1 %196, label %36, label %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_predict_lbd_8x32_c(i16* nocapture readonly, i8* nocapture, i32, i32) #2 {
  %5 = sext i32 %2 to i64
  br label %6

6:                                                ; preds = %182, %4
  %7 = phi i32 [ 0, %4 ], [ %195, %182 ]
  %8 = phi i16* [ %0, %4 ], [ %194, %182 ]
  %9 = phi i8* [ %1, %4 ], [ %193, %182 ]
  %10 = load i16, i16* %8, align 2
  %11 = sext i16 %10 to i32
  %12 = mul nsw i32 %11, %3
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %6
  %15 = sub i32 32, %12
  %16 = ashr i32 %15, 6
  %17 = sub nsw i32 0, %16
  br label %21

18:                                               ; preds = %6
  %19 = add nuw nsw i32 %12, 32
  %20 = ashr i32 %19, 6
  br label %21

21:                                               ; preds = %18, %14
  %22 = phi i32 [ %17, %14 ], [ %20, %18 ]
  %23 = load i8, i8* %9, align 1
  %24 = zext i8 %23 to i32
  %25 = add nsw i32 %22, %24
  %26 = icmp sgt i32 %25, 0
  %27 = select i1 %26, i32 %25, i32 0
  %28 = icmp slt i32 %27, 255
  %29 = select i1 %28, i32 %27, i32 255
  %30 = trunc i32 %29 to i8
  store i8 %30, i8* %9, align 1
  %31 = getelementptr inbounds i16, i16* %8, i64 1
  %32 = load i16, i16* %31, align 2
  %33 = sext i16 %32 to i32
  %34 = mul nsw i32 %33, %3
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %40, label %37

36:                                               ; preds = %182
  ret void

37:                                               ; preds = %21
  %38 = add nuw nsw i32 %34, 32
  %39 = ashr i32 %38, 6
  br label %44

40:                                               ; preds = %21
  %41 = sub i32 32, %34
  %42 = ashr i32 %41, 6
  %43 = sub nsw i32 0, %42
  br label %44

44:                                               ; preds = %40, %37
  %45 = phi i32 [ %43, %40 ], [ %39, %37 ]
  %46 = getelementptr inbounds i8, i8* %9, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = add nsw i32 %45, %48
  %50 = icmp sgt i32 %49, 0
  %51 = select i1 %50, i32 %49, i32 0
  %52 = icmp slt i32 %51, 255
  %53 = select i1 %52, i32 %51, i32 255
  %54 = trunc i32 %53 to i8
  store i8 %54, i8* %46, align 1
  %55 = getelementptr inbounds i16, i16* %8, i64 2
  %56 = load i16, i16* %55, align 2
  %57 = sext i16 %56 to i32
  %58 = mul nsw i32 %57, %3
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %44
  %61 = add nuw nsw i32 %58, 32
  %62 = ashr i32 %61, 6
  br label %67

63:                                               ; preds = %44
  %64 = sub i32 32, %58
  %65 = ashr i32 %64, 6
  %66 = sub nsw i32 0, %65
  br label %67

67:                                               ; preds = %63, %60
  %68 = phi i32 [ %66, %63 ], [ %62, %60 ]
  %69 = getelementptr inbounds i8, i8* %9, i64 2
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = add nsw i32 %68, %71
  %73 = icmp sgt i32 %72, 0
  %74 = select i1 %73, i32 %72, i32 0
  %75 = icmp slt i32 %74, 255
  %76 = select i1 %75, i32 %74, i32 255
  %77 = trunc i32 %76 to i8
  store i8 %77, i8* %69, align 1
  %78 = getelementptr inbounds i16, i16* %8, i64 3
  %79 = load i16, i16* %78, align 2
  %80 = sext i16 %79 to i32
  %81 = mul nsw i32 %80, %3
  %82 = icmp slt i32 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %67
  %84 = add nuw nsw i32 %81, 32
  %85 = ashr i32 %84, 6
  br label %90

86:                                               ; preds = %67
  %87 = sub i32 32, %81
  %88 = ashr i32 %87, 6
  %89 = sub nsw i32 0, %88
  br label %90

90:                                               ; preds = %86, %83
  %91 = phi i32 [ %89, %86 ], [ %85, %83 ]
  %92 = getelementptr inbounds i8, i8* %9, i64 3
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = add nsw i32 %91, %94
  %96 = icmp sgt i32 %95, 0
  %97 = select i1 %96, i32 %95, i32 0
  %98 = icmp slt i32 %97, 255
  %99 = select i1 %98, i32 %97, i32 255
  %100 = trunc i32 %99 to i8
  store i8 %100, i8* %92, align 1
  %101 = getelementptr inbounds i16, i16* %8, i64 4
  %102 = load i16, i16* %101, align 2
  %103 = sext i16 %102 to i32
  %104 = mul nsw i32 %103, %3
  %105 = icmp slt i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %90
  %107 = add nuw nsw i32 %104, 32
  %108 = ashr i32 %107, 6
  br label %113

109:                                              ; preds = %90
  %110 = sub i32 32, %104
  %111 = ashr i32 %110, 6
  %112 = sub nsw i32 0, %111
  br label %113

113:                                              ; preds = %109, %106
  %114 = phi i32 [ %112, %109 ], [ %108, %106 ]
  %115 = getelementptr inbounds i8, i8* %9, i64 4
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = add nsw i32 %114, %117
  %119 = icmp sgt i32 %118, 0
  %120 = select i1 %119, i32 %118, i32 0
  %121 = icmp slt i32 %120, 255
  %122 = select i1 %121, i32 %120, i32 255
  %123 = trunc i32 %122 to i8
  store i8 %123, i8* %115, align 1
  %124 = getelementptr inbounds i16, i16* %8, i64 5
  %125 = load i16, i16* %124, align 2
  %126 = sext i16 %125 to i32
  %127 = mul nsw i32 %126, %3
  %128 = icmp slt i32 %127, 0
  br i1 %128, label %132, label %129

129:                                              ; preds = %113
  %130 = add nuw nsw i32 %127, 32
  %131 = ashr i32 %130, 6
  br label %136

132:                                              ; preds = %113
  %133 = sub i32 32, %127
  %134 = ashr i32 %133, 6
  %135 = sub nsw i32 0, %134
  br label %136

136:                                              ; preds = %132, %129
  %137 = phi i32 [ %135, %132 ], [ %131, %129 ]
  %138 = getelementptr inbounds i8, i8* %9, i64 5
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = add nsw i32 %137, %140
  %142 = icmp sgt i32 %141, 0
  %143 = select i1 %142, i32 %141, i32 0
  %144 = icmp slt i32 %143, 255
  %145 = select i1 %144, i32 %143, i32 255
  %146 = trunc i32 %145 to i8
  store i8 %146, i8* %138, align 1
  %147 = getelementptr inbounds i16, i16* %8, i64 6
  %148 = load i16, i16* %147, align 2
  %149 = sext i16 %148 to i32
  %150 = mul nsw i32 %149, %3
  %151 = icmp slt i32 %150, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %136
  %153 = add nuw nsw i32 %150, 32
  %154 = ashr i32 %153, 6
  br label %159

155:                                              ; preds = %136
  %156 = sub i32 32, %150
  %157 = ashr i32 %156, 6
  %158 = sub nsw i32 0, %157
  br label %159

159:                                              ; preds = %155, %152
  %160 = phi i32 [ %158, %155 ], [ %154, %152 ]
  %161 = getelementptr inbounds i8, i8* %9, i64 6
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = add nsw i32 %160, %163
  %165 = icmp sgt i32 %164, 0
  %166 = select i1 %165, i32 %164, i32 0
  %167 = icmp slt i32 %166, 255
  %168 = select i1 %167, i32 %166, i32 255
  %169 = trunc i32 %168 to i8
  store i8 %169, i8* %161, align 1
  %170 = getelementptr inbounds i16, i16* %8, i64 7
  %171 = load i16, i16* %170, align 2
  %172 = sext i16 %171 to i32
  %173 = mul nsw i32 %172, %3
  %174 = icmp slt i32 %173, 0
  br i1 %174, label %178, label %175

175:                                              ; preds = %159
  %176 = add nuw nsw i32 %173, 32
  %177 = ashr i32 %176, 6
  br label %182

178:                                              ; preds = %159
  %179 = sub i32 32, %173
  %180 = ashr i32 %179, 6
  %181 = sub nsw i32 0, %180
  br label %182

182:                                              ; preds = %178, %175
  %183 = phi i32 [ %181, %178 ], [ %177, %175 ]
  %184 = getelementptr inbounds i8, i8* %9, i64 7
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i32
  %187 = add nsw i32 %183, %186
  %188 = icmp sgt i32 %187, 0
  %189 = select i1 %188, i32 %187, i32 0
  %190 = icmp slt i32 %189, 255
  %191 = select i1 %190, i32 %189, i32 255
  %192 = trunc i32 %191 to i8
  store i8 %192, i8* %184, align 1
  %193 = getelementptr inbounds i8, i8* %9, i64 %5
  %194 = getelementptr inbounds i16, i16* %8, i64 32
  %195 = add nuw nsw i32 %7, 1
  %196 = icmp eq i32 %195, 32
  br i1 %196, label %36, label %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_predict_lbd_16x4_c(i16* nocapture readonly, i8* nocapture, i32, i32) #2 {
  %5 = sext i32 %2 to i64
  %6 = bitcast i16* %0 to i8*
  %7 = getelementptr i8, i8* %1, i64 16
  %8 = getelementptr i16, i16* %0, i64 16
  %9 = bitcast i16* %8 to i8*
  %10 = icmp ugt i8* %9, %1
  %11 = icmp ugt i8* %7, %6
  %12 = and i1 %10, %11
  br i1 %12, label %118, label %13

13:                                               ; preds = %4
  %14 = insertelement <8 x i32> undef, i32 %3, i32 0
  %15 = shufflevector <8 x i32> %14, <8 x i32> undef, <8 x i32> zeroinitializer
  %16 = bitcast i16* %0 to <8 x i16>*
  %17 = load <8 x i16>, <8 x i16>* %16, align 2, !alias.scope !153
  %18 = sext <8 x i16> %17 to <8 x i32>
  %19 = mul nsw <8 x i32> %15, %18
  %20 = icmp sgt <8 x i32> %19, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %21 = add nuw nsw <8 x i32> %19, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %22 = ashr <8 x i32> %21, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %23 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %19
  %24 = ashr <8 x i32> %23, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %25 = sub nsw <8 x i32> zeroinitializer, %24
  %26 = select <8 x i1> %20, <8 x i32> %22, <8 x i32> %25
  %27 = bitcast i8* %1 to <8 x i8>*
  %28 = load <8 x i8>, <8 x i8>* %27, align 1, !alias.scope !156, !noalias !153
  %29 = zext <8 x i8> %28 to <8 x i32>
  %30 = add nsw <8 x i32> %26, %29
  %31 = icmp sgt <8 x i32> %30, zeroinitializer
  %32 = select <8 x i1> %31, <8 x i32> %30, <8 x i32> zeroinitializer
  %33 = icmp slt <8 x i32> %32, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %34 = select <8 x i1> %33, <8 x i32> %32, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %35 = trunc <8 x i32> %34 to <8 x i8>
  %36 = bitcast i8* %1 to <8 x i8>*
  store <8 x i8> %35, <8 x i8>* %36, align 1, !alias.scope !156, !noalias !153
  %37 = getelementptr inbounds i16, i16* %0, i64 8
  %38 = bitcast i16* %37 to <8 x i16>*
  %39 = load <8 x i16>, <8 x i16>* %38, align 2, !alias.scope !153
  %40 = sext <8 x i16> %39 to <8 x i32>
  %41 = mul nsw <8 x i32> %15, %40
  %42 = icmp sgt <8 x i32> %41, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %43 = add nuw nsw <8 x i32> %41, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %44 = ashr <8 x i32> %43, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %45 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %41
  %46 = ashr <8 x i32> %45, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %47 = sub nsw <8 x i32> zeroinitializer, %46
  %48 = select <8 x i1> %42, <8 x i32> %44, <8 x i32> %47
  %49 = getelementptr inbounds i8, i8* %1, i64 8
  %50 = bitcast i8* %49 to <8 x i8>*
  %51 = load <8 x i8>, <8 x i8>* %50, align 1, !alias.scope !156, !noalias !153
  %52 = zext <8 x i8> %51 to <8 x i32>
  %53 = add nsw <8 x i32> %48, %52
  %54 = icmp sgt <8 x i32> %53, zeroinitializer
  %55 = select <8 x i1> %54, <8 x i32> %53, <8 x i32> zeroinitializer
  %56 = icmp slt <8 x i32> %55, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %57 = select <8 x i1> %56, <8 x i32> %55, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %58 = trunc <8 x i32> %57 to <8 x i8>
  %59 = bitcast i8* %49 to <8 x i8>*
  store <8 x i8> %58, <8 x i8>* %59, align 1, !alias.scope !156, !noalias !153
  br label %60

60:                                               ; preds = %132, %13
  %61 = getelementptr inbounds i8, i8* %1, i64 %5
  %62 = getelementptr inbounds i16, i16* %0, i64 32
  %63 = bitcast i16* %62 to i8*
  %64 = add nsw i64 %5, 16
  %65 = getelementptr i8, i8* %1, i64 %64
  %66 = getelementptr i16, i16* %0, i64 48
  %67 = bitcast i16* %66 to i8*
  %68 = icmp ult i8* %61, %67
  %69 = icmp ugt i8* %65, %63
  %70 = and i1 %68, %69
  br i1 %70, label %145, label %71

71:                                               ; preds = %60
  %72 = insertelement <8 x i32> undef, i32 %3, i32 0
  %73 = shufflevector <8 x i32> %72, <8 x i32> undef, <8 x i32> zeroinitializer
  %74 = bitcast i16* %62 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !158
  %76 = sext <8 x i16> %75 to <8 x i32>
  %77 = mul nsw <8 x i32> %73, %76
  %78 = icmp sgt <8 x i32> %77, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %79 = add nuw nsw <8 x i32> %77, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %80 = ashr <8 x i32> %79, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %81 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %77
  %82 = ashr <8 x i32> %81, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %83 = sub nsw <8 x i32> zeroinitializer, %82
  %84 = select <8 x i1> %78, <8 x i32> %80, <8 x i32> %83
  %85 = bitcast i8* %61 to <8 x i8>*
  %86 = load <8 x i8>, <8 x i8>* %85, align 1, !alias.scope !161, !noalias !158
  %87 = zext <8 x i8> %86 to <8 x i32>
  %88 = add nsw <8 x i32> %84, %87
  %89 = icmp sgt <8 x i32> %88, zeroinitializer
  %90 = select <8 x i1> %89, <8 x i32> %88, <8 x i32> zeroinitializer
  %91 = icmp slt <8 x i32> %90, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %92 = select <8 x i1> %91, <8 x i32> %90, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %93 = trunc <8 x i32> %92 to <8 x i8>
  %94 = bitcast i8* %61 to <8 x i8>*
  store <8 x i8> %93, <8 x i8>* %94, align 1, !alias.scope !161, !noalias !158
  %95 = getelementptr inbounds i16, i16* %0, i64 40
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !158
  %98 = sext <8 x i16> %97 to <8 x i32>
  %99 = mul nsw <8 x i32> %73, %98
  %100 = icmp sgt <8 x i32> %99, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %101 = add nuw nsw <8 x i32> %99, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %102 = ashr <8 x i32> %101, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %103 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %99
  %104 = ashr <8 x i32> %103, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %105 = sub nsw <8 x i32> zeroinitializer, %104
  %106 = select <8 x i1> %100, <8 x i32> %102, <8 x i32> %105
  %107 = getelementptr inbounds i8, i8* %61, i64 8
  %108 = bitcast i8* %107 to <8 x i8>*
  %109 = load <8 x i8>, <8 x i8>* %108, align 1, !alias.scope !161, !noalias !158
  %110 = zext <8 x i8> %109 to <8 x i32>
  %111 = add nsw <8 x i32> %106, %110
  %112 = icmp sgt <8 x i32> %111, zeroinitializer
  %113 = select <8 x i1> %112, <8 x i32> %111, <8 x i32> zeroinitializer
  %114 = icmp slt <8 x i32> %113, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %115 = select <8 x i1> %114, <8 x i32> %113, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %116 = trunc <8 x i32> %115 to <8 x i8>
  %117 = bitcast i8* %107 to <8 x i8>*
  store <8 x i8> %116, <8 x i8>* %117, align 1, !alias.scope !161, !noalias !158
  br label %172

118:                                              ; preds = %4, %132
  %119 = phi i64 [ %143, %132 ], [ 0, %4 ]
  %120 = getelementptr inbounds i16, i16* %0, i64 %119
  %121 = load i16, i16* %120, align 2
  %122 = sext i16 %121 to i32
  %123 = mul nsw i32 %122, %3
  %124 = icmp slt i32 %123, 0
  br i1 %124, label %125, label %129

125:                                              ; preds = %118
  %126 = sub i32 32, %123
  %127 = ashr i32 %126, 6
  %128 = sub nsw i32 0, %127
  br label %132

129:                                              ; preds = %118
  %130 = add nuw nsw i32 %123, 32
  %131 = ashr i32 %130, 6
  br label %132

132:                                              ; preds = %129, %125
  %133 = phi i32 [ %128, %125 ], [ %131, %129 ]
  %134 = getelementptr inbounds i8, i8* %1, i64 %119
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i32
  %137 = add nsw i32 %133, %136
  %138 = icmp sgt i32 %137, 0
  %139 = select i1 %138, i32 %137, i32 0
  %140 = icmp slt i32 %139, 255
  %141 = select i1 %140, i32 %139, i32 255
  %142 = trunc i32 %141 to i8
  store i8 %142, i8* %134, align 1
  %143 = add nuw nsw i64 %119, 1
  %144 = icmp eq i64 %143, 16
  br i1 %144, label %60, label %118, !llvm.loop !163

145:                                              ; preds = %60, %159
  %146 = phi i64 [ %170, %159 ], [ 0, %60 ]
  %147 = getelementptr inbounds i16, i16* %62, i64 %146
  %148 = load i16, i16* %147, align 2
  %149 = sext i16 %148 to i32
  %150 = mul nsw i32 %149, %3
  %151 = icmp slt i32 %150, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %145
  %153 = add nuw nsw i32 %150, 32
  %154 = ashr i32 %153, 6
  br label %159

155:                                              ; preds = %145
  %156 = sub i32 32, %150
  %157 = ashr i32 %156, 6
  %158 = sub nsw i32 0, %157
  br label %159

159:                                              ; preds = %155, %152
  %160 = phi i32 [ %158, %155 ], [ %154, %152 ]
  %161 = getelementptr inbounds i8, i8* %61, i64 %146
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = add nsw i32 %160, %163
  %165 = icmp sgt i32 %164, 0
  %166 = select i1 %165, i32 %164, i32 0
  %167 = icmp slt i32 %166, 255
  %168 = select i1 %167, i32 %166, i32 255
  %169 = trunc i32 %168 to i8
  store i8 %169, i8* %161, align 1
  %170 = add nuw nsw i64 %146, 1
  %171 = icmp eq i64 %170, 16
  br i1 %171, label %172, label %145, !llvm.loop !164

172:                                              ; preds = %159, %71
  %173 = getelementptr inbounds i8, i8* %61, i64 %5
  %174 = getelementptr inbounds i16, i16* %0, i64 64
  %175 = bitcast i16* %174 to i8*
  %176 = shl nsw i64 %5, 1
  %177 = add nsw i64 %176, 16
  %178 = getelementptr i8, i8* %1, i64 %177
  %179 = getelementptr i16, i16* %0, i64 80
  %180 = bitcast i16* %179 to i8*
  %181 = icmp ult i8* %173, %180
  %182 = icmp ugt i8* %178, %175
  %183 = and i1 %181, %182
  br i1 %183, label %231, label %184

184:                                              ; preds = %172
  %185 = insertelement <8 x i32> undef, i32 %3, i32 0
  %186 = shufflevector <8 x i32> %185, <8 x i32> undef, <8 x i32> zeroinitializer
  %187 = bitcast i16* %174 to <8 x i16>*
  %188 = load <8 x i16>, <8 x i16>* %187, align 2, !alias.scope !165
  %189 = sext <8 x i16> %188 to <8 x i32>
  %190 = mul nsw <8 x i32> %186, %189
  %191 = icmp sgt <8 x i32> %190, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %192 = add nuw nsw <8 x i32> %190, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %193 = ashr <8 x i32> %192, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %194 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %190
  %195 = ashr <8 x i32> %194, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %196 = sub nsw <8 x i32> zeroinitializer, %195
  %197 = select <8 x i1> %191, <8 x i32> %193, <8 x i32> %196
  %198 = bitcast i8* %173 to <8 x i8>*
  %199 = load <8 x i8>, <8 x i8>* %198, align 1, !alias.scope !168, !noalias !165
  %200 = zext <8 x i8> %199 to <8 x i32>
  %201 = add nsw <8 x i32> %197, %200
  %202 = icmp sgt <8 x i32> %201, zeroinitializer
  %203 = select <8 x i1> %202, <8 x i32> %201, <8 x i32> zeroinitializer
  %204 = icmp slt <8 x i32> %203, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %205 = select <8 x i1> %204, <8 x i32> %203, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %206 = trunc <8 x i32> %205 to <8 x i8>
  %207 = bitcast i8* %173 to <8 x i8>*
  store <8 x i8> %206, <8 x i8>* %207, align 1, !alias.scope !168, !noalias !165
  %208 = getelementptr inbounds i16, i16* %0, i64 72
  %209 = bitcast i16* %208 to <8 x i16>*
  %210 = load <8 x i16>, <8 x i16>* %209, align 2, !alias.scope !165
  %211 = sext <8 x i16> %210 to <8 x i32>
  %212 = mul nsw <8 x i32> %186, %211
  %213 = icmp sgt <8 x i32> %212, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %214 = add nuw nsw <8 x i32> %212, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %215 = ashr <8 x i32> %214, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %216 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %212
  %217 = ashr <8 x i32> %216, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %218 = sub nsw <8 x i32> zeroinitializer, %217
  %219 = select <8 x i1> %213, <8 x i32> %215, <8 x i32> %218
  %220 = getelementptr inbounds i8, i8* %173, i64 8
  %221 = bitcast i8* %220 to <8 x i8>*
  %222 = load <8 x i8>, <8 x i8>* %221, align 1, !alias.scope !168, !noalias !165
  %223 = zext <8 x i8> %222 to <8 x i32>
  %224 = add nsw <8 x i32> %219, %223
  %225 = icmp sgt <8 x i32> %224, zeroinitializer
  %226 = select <8 x i1> %225, <8 x i32> %224, <8 x i32> zeroinitializer
  %227 = icmp slt <8 x i32> %226, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %228 = select <8 x i1> %227, <8 x i32> %226, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %229 = trunc <8 x i32> %228 to <8 x i8>
  %230 = bitcast i8* %220 to <8 x i8>*
  store <8 x i8> %229, <8 x i8>* %230, align 1, !alias.scope !168, !noalias !165
  br label %258

231:                                              ; preds = %172, %245
  %232 = phi i64 [ %256, %245 ], [ 0, %172 ]
  %233 = getelementptr inbounds i16, i16* %174, i64 %232
  %234 = load i16, i16* %233, align 2
  %235 = sext i16 %234 to i32
  %236 = mul nsw i32 %235, %3
  %237 = icmp slt i32 %236, 0
  br i1 %237, label %241, label %238

238:                                              ; preds = %231
  %239 = add nuw nsw i32 %236, 32
  %240 = ashr i32 %239, 6
  br label %245

241:                                              ; preds = %231
  %242 = sub i32 32, %236
  %243 = ashr i32 %242, 6
  %244 = sub nsw i32 0, %243
  br label %245

245:                                              ; preds = %241, %238
  %246 = phi i32 [ %244, %241 ], [ %240, %238 ]
  %247 = getelementptr inbounds i8, i8* %173, i64 %232
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %248 to i32
  %250 = add nsw i32 %246, %249
  %251 = icmp sgt i32 %250, 0
  %252 = select i1 %251, i32 %250, i32 0
  %253 = icmp slt i32 %252, 255
  %254 = select i1 %253, i32 %252, i32 255
  %255 = trunc i32 %254 to i8
  store i8 %255, i8* %247, align 1
  %256 = add nuw nsw i64 %232, 1
  %257 = icmp eq i64 %256, 16
  br i1 %257, label %258, label %231, !llvm.loop !170

258:                                              ; preds = %245, %184
  %259 = getelementptr inbounds i8, i8* %173, i64 %5
  %260 = getelementptr inbounds i16, i16* %0, i64 96
  %261 = bitcast i16* %260 to i8*
  %262 = mul nsw i64 %5, 3
  %263 = add nsw i64 %262, 16
  %264 = getelementptr i8, i8* %1, i64 %263
  %265 = getelementptr i16, i16* %0, i64 112
  %266 = bitcast i16* %265 to i8*
  %267 = icmp ult i8* %259, %266
  %268 = icmp ugt i8* %264, %261
  %269 = and i1 %267, %268
  br i1 %269, label %317, label %270

270:                                              ; preds = %258
  %271 = insertelement <8 x i32> undef, i32 %3, i32 0
  %272 = shufflevector <8 x i32> %271, <8 x i32> undef, <8 x i32> zeroinitializer
  %273 = bitcast i16* %260 to <8 x i16>*
  %274 = load <8 x i16>, <8 x i16>* %273, align 2, !alias.scope !171
  %275 = sext <8 x i16> %274 to <8 x i32>
  %276 = mul nsw <8 x i32> %272, %275
  %277 = icmp sgt <8 x i32> %276, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %278 = add nuw nsw <8 x i32> %276, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %279 = ashr <8 x i32> %278, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %280 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %276
  %281 = ashr <8 x i32> %280, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %282 = sub nsw <8 x i32> zeroinitializer, %281
  %283 = select <8 x i1> %277, <8 x i32> %279, <8 x i32> %282
  %284 = bitcast i8* %259 to <8 x i8>*
  %285 = load <8 x i8>, <8 x i8>* %284, align 1, !alias.scope !174, !noalias !171
  %286 = zext <8 x i8> %285 to <8 x i32>
  %287 = add nsw <8 x i32> %283, %286
  %288 = icmp sgt <8 x i32> %287, zeroinitializer
  %289 = select <8 x i1> %288, <8 x i32> %287, <8 x i32> zeroinitializer
  %290 = icmp slt <8 x i32> %289, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %291 = select <8 x i1> %290, <8 x i32> %289, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %292 = trunc <8 x i32> %291 to <8 x i8>
  %293 = bitcast i8* %259 to <8 x i8>*
  store <8 x i8> %292, <8 x i8>* %293, align 1, !alias.scope !174, !noalias !171
  %294 = getelementptr inbounds i16, i16* %0, i64 104
  %295 = bitcast i16* %294 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !171
  %297 = sext <8 x i16> %296 to <8 x i32>
  %298 = mul nsw <8 x i32> %272, %297
  %299 = icmp sgt <8 x i32> %298, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %300 = add nuw nsw <8 x i32> %298, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %301 = ashr <8 x i32> %300, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %302 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %298
  %303 = ashr <8 x i32> %302, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %304 = sub nsw <8 x i32> zeroinitializer, %303
  %305 = select <8 x i1> %299, <8 x i32> %301, <8 x i32> %304
  %306 = getelementptr inbounds i8, i8* %259, i64 8
  %307 = bitcast i8* %306 to <8 x i8>*
  %308 = load <8 x i8>, <8 x i8>* %307, align 1, !alias.scope !174, !noalias !171
  %309 = zext <8 x i8> %308 to <8 x i32>
  %310 = add nsw <8 x i32> %305, %309
  %311 = icmp sgt <8 x i32> %310, zeroinitializer
  %312 = select <8 x i1> %311, <8 x i32> %310, <8 x i32> zeroinitializer
  %313 = icmp slt <8 x i32> %312, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %314 = select <8 x i1> %313, <8 x i32> %312, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %315 = trunc <8 x i32> %314 to <8 x i8>
  %316 = bitcast i8* %306 to <8 x i8>*
  store <8 x i8> %315, <8 x i8>* %316, align 1, !alias.scope !174, !noalias !171
  br label %344

317:                                              ; preds = %258, %331
  %318 = phi i64 [ %342, %331 ], [ 0, %258 ]
  %319 = getelementptr inbounds i16, i16* %260, i64 %318
  %320 = load i16, i16* %319, align 2
  %321 = sext i16 %320 to i32
  %322 = mul nsw i32 %321, %3
  %323 = icmp slt i32 %322, 0
  br i1 %323, label %327, label %324

324:                                              ; preds = %317
  %325 = add nuw nsw i32 %322, 32
  %326 = ashr i32 %325, 6
  br label %331

327:                                              ; preds = %317
  %328 = sub i32 32, %322
  %329 = ashr i32 %328, 6
  %330 = sub nsw i32 0, %329
  br label %331

331:                                              ; preds = %327, %324
  %332 = phi i32 [ %330, %327 ], [ %326, %324 ]
  %333 = getelementptr inbounds i8, i8* %259, i64 %318
  %334 = load i8, i8* %333, align 1
  %335 = zext i8 %334 to i32
  %336 = add nsw i32 %332, %335
  %337 = icmp sgt i32 %336, 0
  %338 = select i1 %337, i32 %336, i32 0
  %339 = icmp slt i32 %338, 255
  %340 = select i1 %339, i32 %338, i32 255
  %341 = trunc i32 %340 to i8
  store i8 %341, i8* %333, align 1
  %342 = add nuw nsw i64 %318, 1
  %343 = icmp eq i64 %342, 16
  br i1 %343, label %344, label %317, !llvm.loop !176

344:                                              ; preds = %331, %270
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_predict_lbd_16x8_c(i16* nocapture readonly, i8* nocapture, i32, i32) #2 {
  %5 = sext i32 %2 to i64
  %6 = insertelement <8 x i32> undef, i32 %3, i32 0
  %7 = shufflevector <8 x i32> %6, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %8

8:                                                ; preds = %71, %4
  %9 = phi i64 [ %76, %71 ], [ 0, %4 ]
  %10 = phi i32 [ %74, %71 ], [ 0, %4 ]
  %11 = phi i16* [ %73, %71 ], [ %0, %4 ]
  %12 = phi i8* [ %72, %71 ], [ %1, %4 ]
  %13 = mul i64 %9, %5
  %14 = shl nuw nsw i64 %9, 5
  %15 = or i64 %14, 16
  %16 = getelementptr i16, i16* %0, i64 %15
  %17 = bitcast i16* %16 to i8*
  %18 = getelementptr i16, i16* %0, i64 %14
  %19 = bitcast i16* %18 to i8*
  %20 = add i64 %13, 16
  %21 = getelementptr i8, i8* %1, i64 %20
  %22 = getelementptr i8, i8* %1, i64 %13
  %23 = icmp ult i8* %22, %17
  %24 = icmp ugt i8* %21, %19
  %25 = and i1 %23, %24
  br i1 %25, label %77, label %26

26:                                               ; preds = %8
  %27 = bitcast i16* %11 to <8 x i16>*
  %28 = load <8 x i16>, <8 x i16>* %27, align 2, !alias.scope !177
  %29 = sext <8 x i16> %28 to <8 x i32>
  %30 = mul nsw <8 x i32> %7, %29
  %31 = icmp sgt <8 x i32> %30, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %32 = add nuw nsw <8 x i32> %30, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %33 = ashr <8 x i32> %32, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %34 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %30
  %35 = ashr <8 x i32> %34, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %36 = sub nsw <8 x i32> zeroinitializer, %35
  %37 = select <8 x i1> %31, <8 x i32> %33, <8 x i32> %36
  %38 = bitcast i8* %12 to <8 x i8>*
  %39 = load <8 x i8>, <8 x i8>* %38, align 1, !alias.scope !180, !noalias !177
  %40 = zext <8 x i8> %39 to <8 x i32>
  %41 = add nsw <8 x i32> %37, %40
  %42 = icmp sgt <8 x i32> %41, zeroinitializer
  %43 = select <8 x i1> %42, <8 x i32> %41, <8 x i32> zeroinitializer
  %44 = icmp slt <8 x i32> %43, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %45 = select <8 x i1> %44, <8 x i32> %43, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %46 = trunc <8 x i32> %45 to <8 x i8>
  %47 = bitcast i8* %12 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !180, !noalias !177
  %48 = getelementptr inbounds i16, i16* %11, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !177
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = mul nsw <8 x i32> %7, %51
  %53 = icmp sgt <8 x i32> %52, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %54 = add nuw nsw <8 x i32> %52, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %55 = ashr <8 x i32> %54, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %56 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %52
  %57 = ashr <8 x i32> %56, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %58 = sub nsw <8 x i32> zeroinitializer, %57
  %59 = select <8 x i1> %53, <8 x i32> %55, <8 x i32> %58
  %60 = getelementptr inbounds i8, i8* %12, i64 8
  %61 = bitcast i8* %60 to <8 x i8>*
  %62 = load <8 x i8>, <8 x i8>* %61, align 1, !alias.scope !180, !noalias !177
  %63 = zext <8 x i8> %62 to <8 x i32>
  %64 = add nsw <8 x i32> %59, %63
  %65 = icmp sgt <8 x i32> %64, zeroinitializer
  %66 = select <8 x i1> %65, <8 x i32> %64, <8 x i32> zeroinitializer
  %67 = icmp slt <8 x i32> %66, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %68 = select <8 x i1> %67, <8 x i32> %66, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %69 = trunc <8 x i32> %68 to <8 x i8>
  %70 = bitcast i8* %60 to <8 x i8>*
  store <8 x i8> %69, <8 x i8>* %70, align 1, !alias.scope !180, !noalias !177
  br label %71

71:                                               ; preds = %91, %26
  %72 = getelementptr inbounds i8, i8* %12, i64 %5
  %73 = getelementptr inbounds i16, i16* %11, i64 32
  %74 = add nuw nsw i32 %10, 1
  %75 = icmp eq i32 %74, 8
  %76 = add i64 %9, 1
  br i1 %75, label %104, label %8

77:                                               ; preds = %8, %91
  %78 = phi i64 [ %102, %91 ], [ 0, %8 ]
  %79 = getelementptr inbounds i16, i16* %11, i64 %78
  %80 = load i16, i16* %79, align 2
  %81 = sext i16 %80 to i32
  %82 = mul nsw i32 %81, %3
  %83 = icmp slt i32 %82, 0
  br i1 %83, label %84, label %88

84:                                               ; preds = %77
  %85 = sub i32 32, %82
  %86 = ashr i32 %85, 6
  %87 = sub nsw i32 0, %86
  br label %91

88:                                               ; preds = %77
  %89 = add nuw nsw i32 %82, 32
  %90 = ashr i32 %89, 6
  br label %91

91:                                               ; preds = %88, %84
  %92 = phi i32 [ %87, %84 ], [ %90, %88 ]
  %93 = getelementptr inbounds i8, i8* %12, i64 %78
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = add nsw i32 %92, %95
  %97 = icmp sgt i32 %96, 0
  %98 = select i1 %97, i32 %96, i32 0
  %99 = icmp slt i32 %98, 255
  %100 = select i1 %99, i32 %98, i32 255
  %101 = trunc i32 %100 to i8
  store i8 %101, i8* %93, align 1
  %102 = add nuw nsw i64 %78, 1
  %103 = icmp eq i64 %102, 16
  br i1 %103, label %71, label %77, !llvm.loop !182

104:                                              ; preds = %71
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_predict_lbd_16x16_c(i16* nocapture readonly, i8* nocapture, i32, i32) #2 {
  %5 = sext i32 %2 to i64
  %6 = insertelement <8 x i32> undef, i32 %3, i32 0
  %7 = shufflevector <8 x i32> %6, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %8

8:                                                ; preds = %71, %4
  %9 = phi i64 [ %76, %71 ], [ 0, %4 ]
  %10 = phi i32 [ %74, %71 ], [ 0, %4 ]
  %11 = phi i16* [ %73, %71 ], [ %0, %4 ]
  %12 = phi i8* [ %72, %71 ], [ %1, %4 ]
  %13 = mul i64 %9, %5
  %14 = shl nuw nsw i64 %9, 5
  %15 = or i64 %14, 16
  %16 = getelementptr i16, i16* %0, i64 %15
  %17 = bitcast i16* %16 to i8*
  %18 = getelementptr i16, i16* %0, i64 %14
  %19 = bitcast i16* %18 to i8*
  %20 = add i64 %13, 16
  %21 = getelementptr i8, i8* %1, i64 %20
  %22 = getelementptr i8, i8* %1, i64 %13
  %23 = icmp ult i8* %22, %17
  %24 = icmp ugt i8* %21, %19
  %25 = and i1 %23, %24
  br i1 %25, label %77, label %26

26:                                               ; preds = %8
  %27 = bitcast i16* %11 to <8 x i16>*
  %28 = load <8 x i16>, <8 x i16>* %27, align 2, !alias.scope !183
  %29 = sext <8 x i16> %28 to <8 x i32>
  %30 = mul nsw <8 x i32> %7, %29
  %31 = icmp sgt <8 x i32> %30, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %32 = add nuw nsw <8 x i32> %30, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %33 = ashr <8 x i32> %32, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %34 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %30
  %35 = ashr <8 x i32> %34, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %36 = sub nsw <8 x i32> zeroinitializer, %35
  %37 = select <8 x i1> %31, <8 x i32> %33, <8 x i32> %36
  %38 = bitcast i8* %12 to <8 x i8>*
  %39 = load <8 x i8>, <8 x i8>* %38, align 1, !alias.scope !186, !noalias !183
  %40 = zext <8 x i8> %39 to <8 x i32>
  %41 = add nsw <8 x i32> %37, %40
  %42 = icmp sgt <8 x i32> %41, zeroinitializer
  %43 = select <8 x i1> %42, <8 x i32> %41, <8 x i32> zeroinitializer
  %44 = icmp slt <8 x i32> %43, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %45 = select <8 x i1> %44, <8 x i32> %43, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %46 = trunc <8 x i32> %45 to <8 x i8>
  %47 = bitcast i8* %12 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !186, !noalias !183
  %48 = getelementptr inbounds i16, i16* %11, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !183
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = mul nsw <8 x i32> %7, %51
  %53 = icmp sgt <8 x i32> %52, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %54 = add nuw nsw <8 x i32> %52, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %55 = ashr <8 x i32> %54, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %56 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %52
  %57 = ashr <8 x i32> %56, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %58 = sub nsw <8 x i32> zeroinitializer, %57
  %59 = select <8 x i1> %53, <8 x i32> %55, <8 x i32> %58
  %60 = getelementptr inbounds i8, i8* %12, i64 8
  %61 = bitcast i8* %60 to <8 x i8>*
  %62 = load <8 x i8>, <8 x i8>* %61, align 1, !alias.scope !186, !noalias !183
  %63 = zext <8 x i8> %62 to <8 x i32>
  %64 = add nsw <8 x i32> %59, %63
  %65 = icmp sgt <8 x i32> %64, zeroinitializer
  %66 = select <8 x i1> %65, <8 x i32> %64, <8 x i32> zeroinitializer
  %67 = icmp slt <8 x i32> %66, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %68 = select <8 x i1> %67, <8 x i32> %66, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %69 = trunc <8 x i32> %68 to <8 x i8>
  %70 = bitcast i8* %60 to <8 x i8>*
  store <8 x i8> %69, <8 x i8>* %70, align 1, !alias.scope !186, !noalias !183
  br label %71

71:                                               ; preds = %91, %26
  %72 = getelementptr inbounds i8, i8* %12, i64 %5
  %73 = getelementptr inbounds i16, i16* %11, i64 32
  %74 = add nuw nsw i32 %10, 1
  %75 = icmp eq i32 %74, 16
  %76 = add i64 %9, 1
  br i1 %75, label %104, label %8

77:                                               ; preds = %8, %91
  %78 = phi i64 [ %102, %91 ], [ 0, %8 ]
  %79 = getelementptr inbounds i16, i16* %11, i64 %78
  %80 = load i16, i16* %79, align 2
  %81 = sext i16 %80 to i32
  %82 = mul nsw i32 %81, %3
  %83 = icmp slt i32 %82, 0
  br i1 %83, label %84, label %88

84:                                               ; preds = %77
  %85 = sub i32 32, %82
  %86 = ashr i32 %85, 6
  %87 = sub nsw i32 0, %86
  br label %91

88:                                               ; preds = %77
  %89 = add nuw nsw i32 %82, 32
  %90 = ashr i32 %89, 6
  br label %91

91:                                               ; preds = %88, %84
  %92 = phi i32 [ %87, %84 ], [ %90, %88 ]
  %93 = getelementptr inbounds i8, i8* %12, i64 %78
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = add nsw i32 %92, %95
  %97 = icmp sgt i32 %96, 0
  %98 = select i1 %97, i32 %96, i32 0
  %99 = icmp slt i32 %98, 255
  %100 = select i1 %99, i32 %98, i32 255
  %101 = trunc i32 %100 to i8
  store i8 %101, i8* %93, align 1
  %102 = add nuw nsw i64 %78, 1
  %103 = icmp eq i64 %102, 16
  br i1 %103, label %71, label %77, !llvm.loop !188

104:                                              ; preds = %71
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_predict_lbd_16x32_c(i16* nocapture readonly, i8* nocapture, i32, i32) #2 {
  %5 = sext i32 %2 to i64
  %6 = insertelement <8 x i32> undef, i32 %3, i32 0
  %7 = shufflevector <8 x i32> %6, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %8

8:                                                ; preds = %71, %4
  %9 = phi i64 [ %76, %71 ], [ 0, %4 ]
  %10 = phi i32 [ %74, %71 ], [ 0, %4 ]
  %11 = phi i16* [ %73, %71 ], [ %0, %4 ]
  %12 = phi i8* [ %72, %71 ], [ %1, %4 ]
  %13 = mul i64 %9, %5
  %14 = shl nuw nsw i64 %9, 5
  %15 = or i64 %14, 16
  %16 = getelementptr i16, i16* %0, i64 %15
  %17 = bitcast i16* %16 to i8*
  %18 = getelementptr i16, i16* %0, i64 %14
  %19 = bitcast i16* %18 to i8*
  %20 = add i64 %13, 16
  %21 = getelementptr i8, i8* %1, i64 %20
  %22 = getelementptr i8, i8* %1, i64 %13
  %23 = icmp ult i8* %22, %17
  %24 = icmp ugt i8* %21, %19
  %25 = and i1 %23, %24
  br i1 %25, label %77, label %26

26:                                               ; preds = %8
  %27 = bitcast i16* %11 to <8 x i16>*
  %28 = load <8 x i16>, <8 x i16>* %27, align 2, !alias.scope !189
  %29 = sext <8 x i16> %28 to <8 x i32>
  %30 = mul nsw <8 x i32> %7, %29
  %31 = icmp sgt <8 x i32> %30, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %32 = add nuw nsw <8 x i32> %30, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %33 = ashr <8 x i32> %32, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %34 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %30
  %35 = ashr <8 x i32> %34, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %36 = sub nsw <8 x i32> zeroinitializer, %35
  %37 = select <8 x i1> %31, <8 x i32> %33, <8 x i32> %36
  %38 = bitcast i8* %12 to <8 x i8>*
  %39 = load <8 x i8>, <8 x i8>* %38, align 1, !alias.scope !192, !noalias !189
  %40 = zext <8 x i8> %39 to <8 x i32>
  %41 = add nsw <8 x i32> %37, %40
  %42 = icmp sgt <8 x i32> %41, zeroinitializer
  %43 = select <8 x i1> %42, <8 x i32> %41, <8 x i32> zeroinitializer
  %44 = icmp slt <8 x i32> %43, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %45 = select <8 x i1> %44, <8 x i32> %43, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %46 = trunc <8 x i32> %45 to <8 x i8>
  %47 = bitcast i8* %12 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !192, !noalias !189
  %48 = getelementptr inbounds i16, i16* %11, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !189
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = mul nsw <8 x i32> %7, %51
  %53 = icmp sgt <8 x i32> %52, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %54 = add nuw nsw <8 x i32> %52, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %55 = ashr <8 x i32> %54, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %56 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %52
  %57 = ashr <8 x i32> %56, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %58 = sub nsw <8 x i32> zeroinitializer, %57
  %59 = select <8 x i1> %53, <8 x i32> %55, <8 x i32> %58
  %60 = getelementptr inbounds i8, i8* %12, i64 8
  %61 = bitcast i8* %60 to <8 x i8>*
  %62 = load <8 x i8>, <8 x i8>* %61, align 1, !alias.scope !192, !noalias !189
  %63 = zext <8 x i8> %62 to <8 x i32>
  %64 = add nsw <8 x i32> %59, %63
  %65 = icmp sgt <8 x i32> %64, zeroinitializer
  %66 = select <8 x i1> %65, <8 x i32> %64, <8 x i32> zeroinitializer
  %67 = icmp slt <8 x i32> %66, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %68 = select <8 x i1> %67, <8 x i32> %66, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %69 = trunc <8 x i32> %68 to <8 x i8>
  %70 = bitcast i8* %60 to <8 x i8>*
  store <8 x i8> %69, <8 x i8>* %70, align 1, !alias.scope !192, !noalias !189
  br label %71

71:                                               ; preds = %91, %26
  %72 = getelementptr inbounds i8, i8* %12, i64 %5
  %73 = getelementptr inbounds i16, i16* %11, i64 32
  %74 = add nuw nsw i32 %10, 1
  %75 = icmp eq i32 %74, 32
  %76 = add i64 %9, 1
  br i1 %75, label %104, label %8

77:                                               ; preds = %8, %91
  %78 = phi i64 [ %102, %91 ], [ 0, %8 ]
  %79 = getelementptr inbounds i16, i16* %11, i64 %78
  %80 = load i16, i16* %79, align 2
  %81 = sext i16 %80 to i32
  %82 = mul nsw i32 %81, %3
  %83 = icmp slt i32 %82, 0
  br i1 %83, label %84, label %88

84:                                               ; preds = %77
  %85 = sub i32 32, %82
  %86 = ashr i32 %85, 6
  %87 = sub nsw i32 0, %86
  br label %91

88:                                               ; preds = %77
  %89 = add nuw nsw i32 %82, 32
  %90 = ashr i32 %89, 6
  br label %91

91:                                               ; preds = %88, %84
  %92 = phi i32 [ %87, %84 ], [ %90, %88 ]
  %93 = getelementptr inbounds i8, i8* %12, i64 %78
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = add nsw i32 %92, %95
  %97 = icmp sgt i32 %96, 0
  %98 = select i1 %97, i32 %96, i32 0
  %99 = icmp slt i32 %98, 255
  %100 = select i1 %99, i32 %98, i32 255
  %101 = trunc i32 %100 to i8
  store i8 %101, i8* %93, align 1
  %102 = add nuw nsw i64 %78, 1
  %103 = icmp eq i64 %102, 16
  br i1 %103, label %71, label %77, !llvm.loop !194

104:                                              ; preds = %71
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_predict_lbd_32x8_c(i16* nocapture readonly, i8* nocapture, i32, i32) #2 {
  %5 = sext i32 %2 to i64
  %6 = insertelement <8 x i32> undef, i32 %3, i32 0
  %7 = shufflevector <8 x i32> %6, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %8

8:                                                ; preds = %117, %4
  %9 = phi i64 [ %122, %117 ], [ 0, %4 ]
  %10 = phi i32 [ %120, %117 ], [ 0, %4 ]
  %11 = phi i16* [ %119, %117 ], [ %0, %4 ]
  %12 = phi i8* [ %118, %117 ], [ %1, %4 ]
  %13 = mul i64 %9, %5
  %14 = shl nuw nsw i64 %9, 5
  %15 = add i64 %14, 32
  %16 = getelementptr i16, i16* %0, i64 %15
  %17 = bitcast i16* %16 to i8*
  %18 = getelementptr i16, i16* %0, i64 %14
  %19 = bitcast i16* %18 to i8*
  %20 = add i64 %13, 32
  %21 = getelementptr i8, i8* %1, i64 %20
  %22 = getelementptr i8, i8* %1, i64 %13
  %23 = icmp ult i8* %22, %17
  %24 = icmp ugt i8* %21, %19
  %25 = and i1 %23, %24
  br i1 %25, label %123, label %26

26:                                               ; preds = %8
  %27 = bitcast i16* %11 to <8 x i16>*
  %28 = load <8 x i16>, <8 x i16>* %27, align 2, !alias.scope !195
  %29 = sext <8 x i16> %28 to <8 x i32>
  %30 = mul nsw <8 x i32> %7, %29
  %31 = icmp sgt <8 x i32> %30, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %32 = add nuw nsw <8 x i32> %30, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %33 = ashr <8 x i32> %32, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %34 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %30
  %35 = ashr <8 x i32> %34, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %36 = sub nsw <8 x i32> zeroinitializer, %35
  %37 = select <8 x i1> %31, <8 x i32> %33, <8 x i32> %36
  %38 = bitcast i8* %12 to <8 x i8>*
  %39 = load <8 x i8>, <8 x i8>* %38, align 1, !alias.scope !198, !noalias !195
  %40 = zext <8 x i8> %39 to <8 x i32>
  %41 = add nsw <8 x i32> %37, %40
  %42 = icmp sgt <8 x i32> %41, zeroinitializer
  %43 = select <8 x i1> %42, <8 x i32> %41, <8 x i32> zeroinitializer
  %44 = icmp slt <8 x i32> %43, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %45 = select <8 x i1> %44, <8 x i32> %43, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %46 = trunc <8 x i32> %45 to <8 x i8>
  %47 = bitcast i8* %12 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !198, !noalias !195
  %48 = getelementptr inbounds i16, i16* %11, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !195
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = mul nsw <8 x i32> %7, %51
  %53 = icmp sgt <8 x i32> %52, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %54 = add nuw nsw <8 x i32> %52, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %55 = ashr <8 x i32> %54, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %56 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %52
  %57 = ashr <8 x i32> %56, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %58 = sub nsw <8 x i32> zeroinitializer, %57
  %59 = select <8 x i1> %53, <8 x i32> %55, <8 x i32> %58
  %60 = getelementptr inbounds i8, i8* %12, i64 8
  %61 = bitcast i8* %60 to <8 x i8>*
  %62 = load <8 x i8>, <8 x i8>* %61, align 1, !alias.scope !198, !noalias !195
  %63 = zext <8 x i8> %62 to <8 x i32>
  %64 = add nsw <8 x i32> %59, %63
  %65 = icmp sgt <8 x i32> %64, zeroinitializer
  %66 = select <8 x i1> %65, <8 x i32> %64, <8 x i32> zeroinitializer
  %67 = icmp slt <8 x i32> %66, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %68 = select <8 x i1> %67, <8 x i32> %66, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %69 = trunc <8 x i32> %68 to <8 x i8>
  %70 = bitcast i8* %60 to <8 x i8>*
  store <8 x i8> %69, <8 x i8>* %70, align 1, !alias.scope !198, !noalias !195
  %71 = getelementptr inbounds i16, i16* %11, i64 16
  %72 = bitcast i16* %71 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2, !alias.scope !195
  %74 = sext <8 x i16> %73 to <8 x i32>
  %75 = mul nsw <8 x i32> %7, %74
  %76 = icmp sgt <8 x i32> %75, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %77 = add nuw nsw <8 x i32> %75, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %78 = ashr <8 x i32> %77, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %79 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %75
  %80 = ashr <8 x i32> %79, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %81 = sub nsw <8 x i32> zeroinitializer, %80
  %82 = select <8 x i1> %76, <8 x i32> %78, <8 x i32> %81
  %83 = getelementptr inbounds i8, i8* %12, i64 16
  %84 = bitcast i8* %83 to <8 x i8>*
  %85 = load <8 x i8>, <8 x i8>* %84, align 1, !alias.scope !198, !noalias !195
  %86 = zext <8 x i8> %85 to <8 x i32>
  %87 = add nsw <8 x i32> %82, %86
  %88 = icmp sgt <8 x i32> %87, zeroinitializer
  %89 = select <8 x i1> %88, <8 x i32> %87, <8 x i32> zeroinitializer
  %90 = icmp slt <8 x i32> %89, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %91 = select <8 x i1> %90, <8 x i32> %89, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %92 = trunc <8 x i32> %91 to <8 x i8>
  %93 = bitcast i8* %83 to <8 x i8>*
  store <8 x i8> %92, <8 x i8>* %93, align 1, !alias.scope !198, !noalias !195
  %94 = getelementptr inbounds i16, i16* %11, i64 24
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !195
  %97 = sext <8 x i16> %96 to <8 x i32>
  %98 = mul nsw <8 x i32> %7, %97
  %99 = icmp sgt <8 x i32> %98, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %100 = add nuw nsw <8 x i32> %98, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %101 = ashr <8 x i32> %100, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %102 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %98
  %103 = ashr <8 x i32> %102, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %104 = sub nsw <8 x i32> zeroinitializer, %103
  %105 = select <8 x i1> %99, <8 x i32> %101, <8 x i32> %104
  %106 = getelementptr inbounds i8, i8* %12, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  %108 = load <8 x i8>, <8 x i8>* %107, align 1, !alias.scope !198, !noalias !195
  %109 = zext <8 x i8> %108 to <8 x i32>
  %110 = add nsw <8 x i32> %105, %109
  %111 = icmp sgt <8 x i32> %110, zeroinitializer
  %112 = select <8 x i1> %111, <8 x i32> %110, <8 x i32> zeroinitializer
  %113 = icmp slt <8 x i32> %112, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %114 = select <8 x i1> %113, <8 x i32> %112, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %115 = trunc <8 x i32> %114 to <8 x i8>
  %116 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %115, <8 x i8>* %116, align 1, !alias.scope !198, !noalias !195
  br label %117

117:                                              ; preds = %137, %26
  %118 = getelementptr inbounds i8, i8* %12, i64 %5
  %119 = getelementptr inbounds i16, i16* %11, i64 32
  %120 = add nuw nsw i32 %10, 1
  %121 = icmp eq i32 %120, 8
  %122 = add i64 %9, 1
  br i1 %121, label %150, label %8

123:                                              ; preds = %8, %137
  %124 = phi i64 [ %148, %137 ], [ 0, %8 ]
  %125 = getelementptr inbounds i16, i16* %11, i64 %124
  %126 = load i16, i16* %125, align 2
  %127 = sext i16 %126 to i32
  %128 = mul nsw i32 %127, %3
  %129 = icmp slt i32 %128, 0
  br i1 %129, label %130, label %134

130:                                              ; preds = %123
  %131 = sub i32 32, %128
  %132 = ashr i32 %131, 6
  %133 = sub nsw i32 0, %132
  br label %137

134:                                              ; preds = %123
  %135 = add nuw nsw i32 %128, 32
  %136 = ashr i32 %135, 6
  br label %137

137:                                              ; preds = %134, %130
  %138 = phi i32 [ %133, %130 ], [ %136, %134 ]
  %139 = getelementptr inbounds i8, i8* %12, i64 %124
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = add nsw i32 %138, %141
  %143 = icmp sgt i32 %142, 0
  %144 = select i1 %143, i32 %142, i32 0
  %145 = icmp slt i32 %144, 255
  %146 = select i1 %145, i32 %144, i32 255
  %147 = trunc i32 %146 to i8
  store i8 %147, i8* %139, align 1
  %148 = add nuw nsw i64 %124, 1
  %149 = icmp eq i64 %148, 32
  br i1 %149, label %117, label %123, !llvm.loop !200

150:                                              ; preds = %117
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_predict_lbd_32x16_c(i16* nocapture readonly, i8* nocapture, i32, i32) #2 {
  %5 = sext i32 %2 to i64
  %6 = insertelement <8 x i32> undef, i32 %3, i32 0
  %7 = shufflevector <8 x i32> %6, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %8

8:                                                ; preds = %117, %4
  %9 = phi i64 [ %122, %117 ], [ 0, %4 ]
  %10 = phi i32 [ %120, %117 ], [ 0, %4 ]
  %11 = phi i16* [ %119, %117 ], [ %0, %4 ]
  %12 = phi i8* [ %118, %117 ], [ %1, %4 ]
  %13 = mul i64 %9, %5
  %14 = shl nuw nsw i64 %9, 5
  %15 = add i64 %14, 32
  %16 = getelementptr i16, i16* %0, i64 %15
  %17 = bitcast i16* %16 to i8*
  %18 = getelementptr i16, i16* %0, i64 %14
  %19 = bitcast i16* %18 to i8*
  %20 = add i64 %13, 32
  %21 = getelementptr i8, i8* %1, i64 %20
  %22 = getelementptr i8, i8* %1, i64 %13
  %23 = icmp ult i8* %22, %17
  %24 = icmp ugt i8* %21, %19
  %25 = and i1 %23, %24
  br i1 %25, label %123, label %26

26:                                               ; preds = %8
  %27 = bitcast i16* %11 to <8 x i16>*
  %28 = load <8 x i16>, <8 x i16>* %27, align 2, !alias.scope !201
  %29 = sext <8 x i16> %28 to <8 x i32>
  %30 = mul nsw <8 x i32> %7, %29
  %31 = icmp sgt <8 x i32> %30, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %32 = add nuw nsw <8 x i32> %30, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %33 = ashr <8 x i32> %32, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %34 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %30
  %35 = ashr <8 x i32> %34, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %36 = sub nsw <8 x i32> zeroinitializer, %35
  %37 = select <8 x i1> %31, <8 x i32> %33, <8 x i32> %36
  %38 = bitcast i8* %12 to <8 x i8>*
  %39 = load <8 x i8>, <8 x i8>* %38, align 1, !alias.scope !204, !noalias !201
  %40 = zext <8 x i8> %39 to <8 x i32>
  %41 = add nsw <8 x i32> %37, %40
  %42 = icmp sgt <8 x i32> %41, zeroinitializer
  %43 = select <8 x i1> %42, <8 x i32> %41, <8 x i32> zeroinitializer
  %44 = icmp slt <8 x i32> %43, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %45 = select <8 x i1> %44, <8 x i32> %43, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %46 = trunc <8 x i32> %45 to <8 x i8>
  %47 = bitcast i8* %12 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !204, !noalias !201
  %48 = getelementptr inbounds i16, i16* %11, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !201
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = mul nsw <8 x i32> %7, %51
  %53 = icmp sgt <8 x i32> %52, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %54 = add nuw nsw <8 x i32> %52, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %55 = ashr <8 x i32> %54, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %56 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %52
  %57 = ashr <8 x i32> %56, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %58 = sub nsw <8 x i32> zeroinitializer, %57
  %59 = select <8 x i1> %53, <8 x i32> %55, <8 x i32> %58
  %60 = getelementptr inbounds i8, i8* %12, i64 8
  %61 = bitcast i8* %60 to <8 x i8>*
  %62 = load <8 x i8>, <8 x i8>* %61, align 1, !alias.scope !204, !noalias !201
  %63 = zext <8 x i8> %62 to <8 x i32>
  %64 = add nsw <8 x i32> %59, %63
  %65 = icmp sgt <8 x i32> %64, zeroinitializer
  %66 = select <8 x i1> %65, <8 x i32> %64, <8 x i32> zeroinitializer
  %67 = icmp slt <8 x i32> %66, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %68 = select <8 x i1> %67, <8 x i32> %66, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %69 = trunc <8 x i32> %68 to <8 x i8>
  %70 = bitcast i8* %60 to <8 x i8>*
  store <8 x i8> %69, <8 x i8>* %70, align 1, !alias.scope !204, !noalias !201
  %71 = getelementptr inbounds i16, i16* %11, i64 16
  %72 = bitcast i16* %71 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2, !alias.scope !201
  %74 = sext <8 x i16> %73 to <8 x i32>
  %75 = mul nsw <8 x i32> %7, %74
  %76 = icmp sgt <8 x i32> %75, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %77 = add nuw nsw <8 x i32> %75, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %78 = ashr <8 x i32> %77, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %79 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %75
  %80 = ashr <8 x i32> %79, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %81 = sub nsw <8 x i32> zeroinitializer, %80
  %82 = select <8 x i1> %76, <8 x i32> %78, <8 x i32> %81
  %83 = getelementptr inbounds i8, i8* %12, i64 16
  %84 = bitcast i8* %83 to <8 x i8>*
  %85 = load <8 x i8>, <8 x i8>* %84, align 1, !alias.scope !204, !noalias !201
  %86 = zext <8 x i8> %85 to <8 x i32>
  %87 = add nsw <8 x i32> %82, %86
  %88 = icmp sgt <8 x i32> %87, zeroinitializer
  %89 = select <8 x i1> %88, <8 x i32> %87, <8 x i32> zeroinitializer
  %90 = icmp slt <8 x i32> %89, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %91 = select <8 x i1> %90, <8 x i32> %89, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %92 = trunc <8 x i32> %91 to <8 x i8>
  %93 = bitcast i8* %83 to <8 x i8>*
  store <8 x i8> %92, <8 x i8>* %93, align 1, !alias.scope !204, !noalias !201
  %94 = getelementptr inbounds i16, i16* %11, i64 24
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !201
  %97 = sext <8 x i16> %96 to <8 x i32>
  %98 = mul nsw <8 x i32> %7, %97
  %99 = icmp sgt <8 x i32> %98, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %100 = add nuw nsw <8 x i32> %98, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %101 = ashr <8 x i32> %100, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %102 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %98
  %103 = ashr <8 x i32> %102, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %104 = sub nsw <8 x i32> zeroinitializer, %103
  %105 = select <8 x i1> %99, <8 x i32> %101, <8 x i32> %104
  %106 = getelementptr inbounds i8, i8* %12, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  %108 = load <8 x i8>, <8 x i8>* %107, align 1, !alias.scope !204, !noalias !201
  %109 = zext <8 x i8> %108 to <8 x i32>
  %110 = add nsw <8 x i32> %105, %109
  %111 = icmp sgt <8 x i32> %110, zeroinitializer
  %112 = select <8 x i1> %111, <8 x i32> %110, <8 x i32> zeroinitializer
  %113 = icmp slt <8 x i32> %112, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %114 = select <8 x i1> %113, <8 x i32> %112, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %115 = trunc <8 x i32> %114 to <8 x i8>
  %116 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %115, <8 x i8>* %116, align 1, !alias.scope !204, !noalias !201
  br label %117

117:                                              ; preds = %137, %26
  %118 = getelementptr inbounds i8, i8* %12, i64 %5
  %119 = getelementptr inbounds i16, i16* %11, i64 32
  %120 = add nuw nsw i32 %10, 1
  %121 = icmp eq i32 %120, 16
  %122 = add i64 %9, 1
  br i1 %121, label %150, label %8

123:                                              ; preds = %8, %137
  %124 = phi i64 [ %148, %137 ], [ 0, %8 ]
  %125 = getelementptr inbounds i16, i16* %11, i64 %124
  %126 = load i16, i16* %125, align 2
  %127 = sext i16 %126 to i32
  %128 = mul nsw i32 %127, %3
  %129 = icmp slt i32 %128, 0
  br i1 %129, label %130, label %134

130:                                              ; preds = %123
  %131 = sub i32 32, %128
  %132 = ashr i32 %131, 6
  %133 = sub nsw i32 0, %132
  br label %137

134:                                              ; preds = %123
  %135 = add nuw nsw i32 %128, 32
  %136 = ashr i32 %135, 6
  br label %137

137:                                              ; preds = %134, %130
  %138 = phi i32 [ %133, %130 ], [ %136, %134 ]
  %139 = getelementptr inbounds i8, i8* %12, i64 %124
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = add nsw i32 %138, %141
  %143 = icmp sgt i32 %142, 0
  %144 = select i1 %143, i32 %142, i32 0
  %145 = icmp slt i32 %144, 255
  %146 = select i1 %145, i32 %144, i32 255
  %147 = trunc i32 %146 to i8
  store i8 %147, i8* %139, align 1
  %148 = add nuw nsw i64 %124, 1
  %149 = icmp eq i64 %148, 32
  br i1 %149, label %117, label %123, !llvm.loop !206

150:                                              ; preds = %117
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_predict_lbd_32x32_c(i16* nocapture readonly, i8* nocapture, i32, i32) #2 {
  %5 = sext i32 %2 to i64
  %6 = insertelement <8 x i32> undef, i32 %3, i32 0
  %7 = shufflevector <8 x i32> %6, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %8

8:                                                ; preds = %117, %4
  %9 = phi i64 [ %122, %117 ], [ 0, %4 ]
  %10 = phi i32 [ %120, %117 ], [ 0, %4 ]
  %11 = phi i16* [ %119, %117 ], [ %0, %4 ]
  %12 = phi i8* [ %118, %117 ], [ %1, %4 ]
  %13 = mul i64 %9, %5
  %14 = shl nuw nsw i64 %9, 5
  %15 = add i64 %14, 32
  %16 = getelementptr i16, i16* %0, i64 %15
  %17 = bitcast i16* %16 to i8*
  %18 = getelementptr i16, i16* %0, i64 %14
  %19 = bitcast i16* %18 to i8*
  %20 = add i64 %13, 32
  %21 = getelementptr i8, i8* %1, i64 %20
  %22 = getelementptr i8, i8* %1, i64 %13
  %23 = icmp ult i8* %22, %17
  %24 = icmp ugt i8* %21, %19
  %25 = and i1 %23, %24
  br i1 %25, label %123, label %26

26:                                               ; preds = %8
  %27 = bitcast i16* %11 to <8 x i16>*
  %28 = load <8 x i16>, <8 x i16>* %27, align 2, !alias.scope !207
  %29 = sext <8 x i16> %28 to <8 x i32>
  %30 = mul nsw <8 x i32> %7, %29
  %31 = icmp sgt <8 x i32> %30, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %32 = add nuw nsw <8 x i32> %30, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %33 = ashr <8 x i32> %32, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %34 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %30
  %35 = ashr <8 x i32> %34, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %36 = sub nsw <8 x i32> zeroinitializer, %35
  %37 = select <8 x i1> %31, <8 x i32> %33, <8 x i32> %36
  %38 = bitcast i8* %12 to <8 x i8>*
  %39 = load <8 x i8>, <8 x i8>* %38, align 1, !alias.scope !210, !noalias !207
  %40 = zext <8 x i8> %39 to <8 x i32>
  %41 = add nsw <8 x i32> %37, %40
  %42 = icmp sgt <8 x i32> %41, zeroinitializer
  %43 = select <8 x i1> %42, <8 x i32> %41, <8 x i32> zeroinitializer
  %44 = icmp slt <8 x i32> %43, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %45 = select <8 x i1> %44, <8 x i32> %43, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %46 = trunc <8 x i32> %45 to <8 x i8>
  %47 = bitcast i8* %12 to <8 x i8>*
  store <8 x i8> %46, <8 x i8>* %47, align 1, !alias.scope !210, !noalias !207
  %48 = getelementptr inbounds i16, i16* %11, i64 8
  %49 = bitcast i16* %48 to <8 x i16>*
  %50 = load <8 x i16>, <8 x i16>* %49, align 2, !alias.scope !207
  %51 = sext <8 x i16> %50 to <8 x i32>
  %52 = mul nsw <8 x i32> %7, %51
  %53 = icmp sgt <8 x i32> %52, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %54 = add nuw nsw <8 x i32> %52, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %55 = ashr <8 x i32> %54, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %56 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %52
  %57 = ashr <8 x i32> %56, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %58 = sub nsw <8 x i32> zeroinitializer, %57
  %59 = select <8 x i1> %53, <8 x i32> %55, <8 x i32> %58
  %60 = getelementptr inbounds i8, i8* %12, i64 8
  %61 = bitcast i8* %60 to <8 x i8>*
  %62 = load <8 x i8>, <8 x i8>* %61, align 1, !alias.scope !210, !noalias !207
  %63 = zext <8 x i8> %62 to <8 x i32>
  %64 = add nsw <8 x i32> %59, %63
  %65 = icmp sgt <8 x i32> %64, zeroinitializer
  %66 = select <8 x i1> %65, <8 x i32> %64, <8 x i32> zeroinitializer
  %67 = icmp slt <8 x i32> %66, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %68 = select <8 x i1> %67, <8 x i32> %66, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %69 = trunc <8 x i32> %68 to <8 x i8>
  %70 = bitcast i8* %60 to <8 x i8>*
  store <8 x i8> %69, <8 x i8>* %70, align 1, !alias.scope !210, !noalias !207
  %71 = getelementptr inbounds i16, i16* %11, i64 16
  %72 = bitcast i16* %71 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2, !alias.scope !207
  %74 = sext <8 x i16> %73 to <8 x i32>
  %75 = mul nsw <8 x i32> %7, %74
  %76 = icmp sgt <8 x i32> %75, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %77 = add nuw nsw <8 x i32> %75, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %78 = ashr <8 x i32> %77, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %79 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %75
  %80 = ashr <8 x i32> %79, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %81 = sub nsw <8 x i32> zeroinitializer, %80
  %82 = select <8 x i1> %76, <8 x i32> %78, <8 x i32> %81
  %83 = getelementptr inbounds i8, i8* %12, i64 16
  %84 = bitcast i8* %83 to <8 x i8>*
  %85 = load <8 x i8>, <8 x i8>* %84, align 1, !alias.scope !210, !noalias !207
  %86 = zext <8 x i8> %85 to <8 x i32>
  %87 = add nsw <8 x i32> %82, %86
  %88 = icmp sgt <8 x i32> %87, zeroinitializer
  %89 = select <8 x i1> %88, <8 x i32> %87, <8 x i32> zeroinitializer
  %90 = icmp slt <8 x i32> %89, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %91 = select <8 x i1> %90, <8 x i32> %89, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %92 = trunc <8 x i32> %91 to <8 x i8>
  %93 = bitcast i8* %83 to <8 x i8>*
  store <8 x i8> %92, <8 x i8>* %93, align 1, !alias.scope !210, !noalias !207
  %94 = getelementptr inbounds i16, i16* %11, i64 24
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !207
  %97 = sext <8 x i16> %96 to <8 x i32>
  %98 = mul nsw <8 x i32> %7, %97
  %99 = icmp sgt <8 x i32> %98, <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>
  %100 = add nuw nsw <8 x i32> %98, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %101 = ashr <8 x i32> %100, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %102 = sub <8 x i32> <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, %98
  %103 = ashr <8 x i32> %102, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %104 = sub nsw <8 x i32> zeroinitializer, %103
  %105 = select <8 x i1> %99, <8 x i32> %101, <8 x i32> %104
  %106 = getelementptr inbounds i8, i8* %12, i64 24
  %107 = bitcast i8* %106 to <8 x i8>*
  %108 = load <8 x i8>, <8 x i8>* %107, align 1, !alias.scope !210, !noalias !207
  %109 = zext <8 x i8> %108 to <8 x i32>
  %110 = add nsw <8 x i32> %105, %109
  %111 = icmp sgt <8 x i32> %110, zeroinitializer
  %112 = select <8 x i1> %111, <8 x i32> %110, <8 x i32> zeroinitializer
  %113 = icmp slt <8 x i32> %112, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %114 = select <8 x i1> %113, <8 x i32> %112, <8 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %115 = trunc <8 x i32> %114 to <8 x i8>
  %116 = bitcast i8* %106 to <8 x i8>*
  store <8 x i8> %115, <8 x i8>* %116, align 1, !alias.scope !210, !noalias !207
  br label %117

117:                                              ; preds = %137, %26
  %118 = getelementptr inbounds i8, i8* %12, i64 %5
  %119 = getelementptr inbounds i16, i16* %11, i64 32
  %120 = add nuw nsw i32 %10, 1
  %121 = icmp eq i32 %120, 32
  %122 = add i64 %9, 1
  br i1 %121, label %150, label %8

123:                                              ; preds = %8, %137
  %124 = phi i64 [ %148, %137 ], [ 0, %8 ]
  %125 = getelementptr inbounds i16, i16* %11, i64 %124
  %126 = load i16, i16* %125, align 2
  %127 = sext i16 %126 to i32
  %128 = mul nsw i32 %127, %3
  %129 = icmp slt i32 %128, 0
  br i1 %129, label %130, label %134

130:                                              ; preds = %123
  %131 = sub i32 32, %128
  %132 = ashr i32 %131, 6
  %133 = sub nsw i32 0, %132
  br label %137

134:                                              ; preds = %123
  %135 = add nuw nsw i32 %128, 32
  %136 = ashr i32 %135, 6
  br label %137

137:                                              ; preds = %134, %130
  %138 = phi i32 [ %133, %130 ], [ %136, %134 ]
  %139 = getelementptr inbounds i8, i8* %12, i64 %124
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = add nsw i32 %138, %141
  %143 = icmp sgt i32 %142, 0
  %144 = select i1 %143, i32 %142, i32 0
  %145 = icmp slt i32 %144, 255
  %146 = select i1 %145, i32 %144, i32 255
  %147 = trunc i32 %146 to i8
  store i8 %147, i8* %139, align 1
  %148 = add nuw nsw i64 %124, 1
  %149 = icmp eq i64 %148, 32
  br i1 %149, label %117, label %123, !llvm.loop !212

150:                                              ; preds = %117
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void (i16*, i8*, i32, i32)* @cfl_get_predict_lbd_fn_c(i8 zeroext) local_unnamed_addr #3 {
  %2 = urem i8 %0, 19
  %3 = zext i8 %2 to i64
  %4 = getelementptr inbounds [19 x void (i16*, i8*, i32, i32)*], [19 x void (i16*, i8*, i32, i32)*]* @cfl_get_predict_lbd_fn_c.pred, i64 0, i64 %3
  %5 = load void (i16*, i8*, i32, i32)*, void (i16*, i8*, i32, i32)** %4, align 8
  ret void (i16*, i8*, i32, i32)* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cfl_predict_block(%struct.macroblockd*, i8*, i32, i8 zeroext, i32) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 6
  %7 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %6, align 8
  %8 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %7, align 8
  %9 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 7
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %233

12:                                               ; preds = %5
  %13 = zext i8 %3 to i64
  %14 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_wide, i64 0, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_high, i64 0, i64 %13
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 6
  %19 = load i32, i32* %18, align 4
  %20 = sub i32 %15, %19
  %21 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 5
  %22 = load i32, i32* %21, align 4
  %23 = sub i32 %17, %22
  %24 = icmp sgt i32 %20, 0
  br i1 %24, label %25, label %122

25:                                               ; preds = %12
  %26 = icmp sgt i32 %22, 0
  br i1 %26, label %27, label %42

27:                                               ; preds = %25
  %28 = sext i32 %19 to i64
  %29 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 0, i64 %28
  %30 = zext i32 %20 to i64
  %31 = and i64 %30, 4294967280
  %32 = add nsw i64 %31, -16
  %33 = lshr exact i64 %32, 4
  %34 = add nuw nsw i64 %33, 1
  %35 = icmp ult i32 %20, 16
  %36 = and i64 %30, 4294967280
  %37 = and i64 %34, 7
  %38 = icmp ult i64 %32, 112
  %39 = sub nsw i64 %34, %37
  %40 = icmp eq i64 %37, 0
  %41 = icmp eq i64 %36, %30
  br label %43

42:                                               ; preds = %113, %25
  store i32 %15, i32* %18, align 4
  br label %122

43:                                               ; preds = %113, %27
  %44 = phi i32 [ 0, %27 ], [ %115, %113 ]
  %45 = phi i16* [ %29, %27 ], [ %114, %113 ]
  %46 = getelementptr inbounds i16, i16* %45, i64 -1
  %47 = load i16, i16* %46, align 2
  br i1 %35, label %48, label %50

48:                                               ; preds = %112, %43
  %49 = phi i64 [ 0, %43 ], [ %36, %112 ]
  br label %117

50:                                               ; preds = %43
  %51 = insertelement <8 x i16> undef, i16 %47, i32 0
  %52 = shufflevector <8 x i16> %51, <8 x i16> undef, <8 x i32> zeroinitializer
  %53 = insertelement <8 x i16> undef, i16 %47, i32 0
  %54 = shufflevector <8 x i16> %53, <8 x i16> undef, <8 x i32> zeroinitializer
  br i1 %38, label %100, label %55

55:                                               ; preds = %50, %55
  %56 = phi i64 [ %97, %55 ], [ 0, %50 ]
  %57 = phi i64 [ %98, %55 ], [ %39, %50 ]
  %58 = getelementptr inbounds i16, i16* %45, i64 %56
  %59 = bitcast i16* %58 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %59, align 2
  %60 = getelementptr inbounds i16, i16* %58, i64 8
  %61 = bitcast i16* %60 to <8 x i16>*
  store <8 x i16> %54, <8 x i16>* %61, align 2
  %62 = or i64 %56, 16
  %63 = getelementptr inbounds i16, i16* %45, i64 %62
  %64 = bitcast i16* %63 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %64, align 2
  %65 = getelementptr inbounds i16, i16* %63, i64 8
  %66 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %54, <8 x i16>* %66, align 2
  %67 = or i64 %56, 32
  %68 = getelementptr inbounds i16, i16* %45, i64 %67
  %69 = bitcast i16* %68 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %69, align 2
  %70 = getelementptr inbounds i16, i16* %68, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %54, <8 x i16>* %71, align 2
  %72 = or i64 %56, 48
  %73 = getelementptr inbounds i16, i16* %45, i64 %72
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %74, align 2
  %75 = getelementptr inbounds i16, i16* %73, i64 8
  %76 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %54, <8 x i16>* %76, align 2
  %77 = or i64 %56, 64
  %78 = getelementptr inbounds i16, i16* %45, i64 %77
  %79 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %79, align 2
  %80 = getelementptr inbounds i16, i16* %78, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %54, <8 x i16>* %81, align 2
  %82 = or i64 %56, 80
  %83 = getelementptr inbounds i16, i16* %45, i64 %82
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %84, align 2
  %85 = getelementptr inbounds i16, i16* %83, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %54, <8 x i16>* %86, align 2
  %87 = or i64 %56, 96
  %88 = getelementptr inbounds i16, i16* %45, i64 %87
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %89, align 2
  %90 = getelementptr inbounds i16, i16* %88, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %54, <8 x i16>* %91, align 2
  %92 = or i64 %56, 112
  %93 = getelementptr inbounds i16, i16* %45, i64 %92
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %94, align 2
  %95 = getelementptr inbounds i16, i16* %93, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %54, <8 x i16>* %96, align 2
  %97 = add i64 %56, 128
  %98 = add i64 %57, -8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %55, !llvm.loop !213

100:                                              ; preds = %55, %50
  %101 = phi i64 [ 0, %50 ], [ %97, %55 ]
  br i1 %40, label %112, label %102

102:                                              ; preds = %100, %102
  %103 = phi i64 [ %109, %102 ], [ %101, %100 ]
  %104 = phi i64 [ %110, %102 ], [ %37, %100 ]
  %105 = getelementptr inbounds i16, i16* %45, i64 %103
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %106, align 2
  %107 = getelementptr inbounds i16, i16* %105, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %54, <8 x i16>* %108, align 2
  %109 = add i64 %103, 16
  %110 = add i64 %104, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %102, !llvm.loop !214

112:                                              ; preds = %102, %100
  br i1 %41, label %113, label %48

113:                                              ; preds = %117, %112
  %114 = getelementptr inbounds i16, i16* %45, i64 32
  %115 = add nuw nsw i32 %44, 1
  %116 = icmp eq i32 %115, %22
  br i1 %116, label %42, label %43

117:                                              ; preds = %48, %117
  %118 = phi i64 [ %120, %117 ], [ %49, %48 ]
  %119 = getelementptr inbounds i16, i16* %45, i64 %118
  store i16 %47, i16* %119, align 2
  %120 = add nuw nsw i64 %118, 1
  %121 = icmp eq i64 %120, %30
  br i1 %121, label %113, label %117, !llvm.loop !216

122:                                              ; preds = %42, %12
  %123 = icmp sgt i32 %23, 0
  br i1 %123, label %124, label %228

124:                                              ; preds = %122
  %125 = shl nsw i32 %22, 5
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 0, i64 %126
  %128 = zext i32 %15 to i64
  %129 = and i64 %128, 4294967288
  %130 = add nsw i64 %129, -8
  %131 = lshr exact i64 %130, 3
  %132 = add nuw nsw i64 %131, 1
  %133 = lshr i64 8225, %13
  %134 = and i64 %133, 1
  %135 = icmp eq i64 %134, 0
  %136 = and i64 %128, 4294967288
  %137 = and i64 %132, 7
  %138 = icmp ult i64 %130, 56
  %139 = sub nsw i64 %132, %137
  %140 = icmp eq i64 %137, 0
  %141 = icmp eq i64 %136, %128
  br label %143

142:                                              ; preds = %217
  store i32 %17, i32* %21, align 4
  br label %228

143:                                              ; preds = %217, %124
  %144 = phi i32 [ 0, %124 ], [ %219, %217 ]
  %145 = phi i16* [ %127, %124 ], [ %218, %217 ]
  %146 = getelementptr inbounds i16, i16* %145, i64 -32
  br i1 %135, label %147, label %215

147:                                              ; preds = %143
  br i1 %138, label %201, label %148

148:                                              ; preds = %147, %148
  %149 = phi i64 [ %198, %148 ], [ 0, %147 ]
  %150 = phi i64 [ %199, %148 ], [ %139, %147 ]
  %151 = getelementptr inbounds i16, i16* %146, i64 %149
  %152 = bitcast i16* %151 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2
  %154 = getelementptr inbounds i16, i16* %145, i64 %149
  %155 = bitcast i16* %154 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %155, align 2
  %156 = or i64 %149, 8
  %157 = getelementptr inbounds i16, i16* %146, i64 %156
  %158 = bitcast i16* %157 to <8 x i16>*
  %159 = load <8 x i16>, <8 x i16>* %158, align 2
  %160 = getelementptr inbounds i16, i16* %145, i64 %156
  %161 = bitcast i16* %160 to <8 x i16>*
  store <8 x i16> %159, <8 x i16>* %161, align 2
  %162 = or i64 %149, 16
  %163 = getelementptr inbounds i16, i16* %146, i64 %162
  %164 = bitcast i16* %163 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2
  %166 = getelementptr inbounds i16, i16* %145, i64 %162
  %167 = bitcast i16* %166 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %167, align 2
  %168 = or i64 %149, 24
  %169 = getelementptr inbounds i16, i16* %146, i64 %168
  %170 = bitcast i16* %169 to <8 x i16>*
  %171 = load <8 x i16>, <8 x i16>* %170, align 2
  %172 = getelementptr inbounds i16, i16* %145, i64 %168
  %173 = bitcast i16* %172 to <8 x i16>*
  store <8 x i16> %171, <8 x i16>* %173, align 2
  %174 = or i64 %149, 32
  %175 = getelementptr inbounds i16, i16* %145, i64 %149
  %176 = bitcast i16* %175 to <8 x i16>*
  %177 = load <8 x i16>, <8 x i16>* %176, align 2
  %178 = getelementptr inbounds i16, i16* %145, i64 %174
  %179 = bitcast i16* %178 to <8 x i16>*
  store <8 x i16> %177, <8 x i16>* %179, align 2
  %180 = or i64 %149, 40
  %181 = getelementptr inbounds i16, i16* %146, i64 %180
  %182 = bitcast i16* %181 to <8 x i16>*
  %183 = load <8 x i16>, <8 x i16>* %182, align 2
  %184 = getelementptr inbounds i16, i16* %145, i64 %180
  %185 = bitcast i16* %184 to <8 x i16>*
  store <8 x i16> %183, <8 x i16>* %185, align 2
  %186 = or i64 %149, 48
  %187 = getelementptr inbounds i16, i16* %146, i64 %186
  %188 = bitcast i16* %187 to <8 x i16>*
  %189 = load <8 x i16>, <8 x i16>* %188, align 2
  %190 = getelementptr inbounds i16, i16* %145, i64 %186
  %191 = bitcast i16* %190 to <8 x i16>*
  store <8 x i16> %189, <8 x i16>* %191, align 2
  %192 = or i64 %149, 56
  %193 = getelementptr inbounds i16, i16* %146, i64 %192
  %194 = bitcast i16* %193 to <8 x i16>*
  %195 = load <8 x i16>, <8 x i16>* %194, align 2
  %196 = getelementptr inbounds i16, i16* %145, i64 %192
  %197 = bitcast i16* %196 to <8 x i16>*
  store <8 x i16> %195, <8 x i16>* %197, align 2
  %198 = add i64 %149, 64
  %199 = add i64 %150, -8
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %201, label %148, !llvm.loop !218

201:                                              ; preds = %148, %147
  %202 = phi i64 [ 0, %147 ], [ %198, %148 ]
  br i1 %140, label %214, label %203

203:                                              ; preds = %201, %203
  %204 = phi i64 [ %211, %203 ], [ %202, %201 ]
  %205 = phi i64 [ %212, %203 ], [ %137, %201 ]
  %206 = getelementptr inbounds i16, i16* %146, i64 %204
  %207 = bitcast i16* %206 to <8 x i16>*
  %208 = load <8 x i16>, <8 x i16>* %207, align 2
  %209 = getelementptr inbounds i16, i16* %145, i64 %204
  %210 = bitcast i16* %209 to <8 x i16>*
  store <8 x i16> %208, <8 x i16>* %210, align 2
  %211 = add i64 %204, 8
  %212 = add i64 %205, -1
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %203, !llvm.loop !219

214:                                              ; preds = %203, %201
  br i1 %141, label %217, label %215

215:                                              ; preds = %143, %214
  %216 = phi i64 [ 0, %143 ], [ %136, %214 ]
  br label %221

217:                                              ; preds = %221, %214
  %218 = getelementptr inbounds i16, i16* %145, i64 32
  %219 = add nuw nsw i32 %144, 1
  %220 = icmp eq i32 %219, %23
  br i1 %220, label %142, label %143

221:                                              ; preds = %215, %221
  %222 = phi i64 [ %226, %221 ], [ %216, %215 ]
  %223 = getelementptr inbounds i16, i16* %146, i64 %222
  %224 = load i16, i16* %223, align 2
  %225 = getelementptr inbounds i16, i16* %145, i64 %222
  store i16 %224, i16* %225, align 2
  %226 = add nuw nsw i64 %222, 1
  %227 = icmp eq i64 %226, %128
  br i1 %227, label %217, label %221, !llvm.loop !220

228:                                              ; preds = %122, %142
  %229 = load void (i16*, i16*)* (i8)*, void (i16*, i16*)* (i8)** @cfl_get_subtract_average_fn, align 8
  %230 = tail call void (i16*, i16*)* %229(i8 zeroext %3) #4
  %231 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 0, i64 0
  %232 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 1, i64 0
  tail call void %230(i16* %231, i16* %232) #4
  store i32 1, i32* %9, align 4
  br label %233

233:                                              ; preds = %5, %228
  %234 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %8, i64 0, i32 20
  %235 = load i8, i8* %234, align 4
  %236 = trunc i32 %4 to i8
  %237 = icmp eq i8 %236, 1
  %238 = sext i8 %235 to i32
  %239 = add nsw i32 %238, 1
  %240 = mul nsw i32 %239, 11
  %241 = ashr i32 %240, 5
  %242 = mul nsw i32 %241, -3
  %243 = add nsw i32 %242, %239
  %244 = select i1 %237, i32 %241, i32 %243
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %257, label %246

246:                                              ; preds = %233
  %247 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %8, i64 0, i32 21
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %248 to i32
  %250 = lshr i32 %249, 4
  %251 = and i32 %249, 15
  %252 = select i1 %237, i32 %250, i32 %251
  %253 = icmp eq i32 %244, 2
  %254 = add nuw nsw i32 %252, 1
  %255 = xor i32 %252, -1
  %256 = select i1 %253, i32 %254, i32 %255
  br label %257

257:                                              ; preds = %233, %246
  %258 = phi i32 [ %256, %246 ], [ 0, %233 ]
  %259 = load void (i16*, i8*, i32, i32)* (i8)*, void (i16*, i8*, i32, i32)* (i8)** @cfl_get_predict_lbd_fn, align 8
  %260 = tail call void (i16*, i8*, i32, i32)* %259(i8 zeroext %3) #4
  %261 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 1, i64 0
  tail call void %260(i16* %261, i8* %1, i32 %2, i32 %258) #4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_420_4x4_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = shl i32 %1, 1
  %5 = sext i32 %4 to i64
  %6 = sext i32 %1 to i64
  %7 = load i8, i8* %0, align 1
  %8 = zext i8 %7 to i16
  %9 = getelementptr inbounds i8, i8* %0, i64 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i16
  %12 = add nuw nsw i16 %11, %8
  %13 = getelementptr inbounds i8, i8* %0, i64 %6
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i16
  %16 = add nuw nsw i16 %12, %15
  %17 = add nsw i64 %6, 1
  %18 = getelementptr inbounds i8, i8* %0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i16
  %21 = add nuw nsw i16 %16, %20
  %22 = shl nuw nsw i16 %21, 1
  store i16 %22, i16* %2, align 2
  %23 = add nsw i64 %6, 2
  %24 = getelementptr inbounds i8, i8* %0, i64 2
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i16
  %27 = getelementptr inbounds i8, i8* %0, i64 3
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i16
  %30 = add nuw nsw i16 %29, %26
  %31 = getelementptr inbounds i8, i8* %0, i64 %23
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i16
  %34 = add nuw nsw i16 %30, %33
  %35 = add nsw i64 %6, 3
  %36 = getelementptr inbounds i8, i8* %0, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i16
  %39 = add nuw nsw i16 %34, %38
  %40 = shl nuw nsw i16 %39, 1
  %41 = getelementptr inbounds i16, i16* %2, i64 1
  store i16 %40, i16* %41, align 2
  %42 = getelementptr inbounds i8, i8* %0, i64 %5
  %43 = getelementptr inbounds i16, i16* %2, i64 32
  %44 = load i8, i8* %42, align 1
  %45 = zext i8 %44 to i16
  %46 = getelementptr inbounds i8, i8* %42, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i16
  %49 = add nuw nsw i16 %48, %45
  %50 = getelementptr inbounds i8, i8* %42, i64 %6
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i16
  %53 = add nuw nsw i16 %49, %52
  %54 = getelementptr inbounds i8, i8* %42, i64 %17
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i16
  %57 = add nuw nsw i16 %53, %56
  %58 = shl nuw nsw i16 %57, 1
  store i16 %58, i16* %43, align 2
  %59 = getelementptr inbounds i8, i8* %42, i64 2
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i16
  %62 = getelementptr inbounds i8, i8* %42, i64 3
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i16
  %65 = add nuw nsw i16 %64, %61
  %66 = getelementptr inbounds i8, i8* %42, i64 %23
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i16
  %69 = add nuw nsw i16 %65, %68
  %70 = getelementptr inbounds i8, i8* %42, i64 %35
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i16
  %73 = add nuw nsw i16 %69, %72
  %74 = shl nuw nsw i16 %73, 1
  %75 = getelementptr inbounds i16, i16* %2, i64 33
  store i16 %74, i16* %75, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_420_8x8_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = shl i32 %1, 1
  %5 = sext i32 %4 to i64
  %6 = sext i32 %1 to i64
  %7 = add nsw i64 %6, 1
  %8 = add nsw i64 %6, 2
  %9 = add nsw i64 %6, 3
  %10 = add nsw i64 %6, 4
  %11 = add nsw i64 %6, 5
  %12 = add nsw i64 %6, 6
  %13 = add nsw i64 %6, 7
  %14 = load i8, i8* %0, align 1
  %15 = zext i8 %14 to i16
  %16 = getelementptr inbounds i8, i8* %0, i64 1
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i16
  %19 = add nuw nsw i16 %18, %15
  %20 = getelementptr inbounds i8, i8* %0, i64 %6
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i16
  %23 = add nuw nsw i16 %19, %22
  %24 = getelementptr inbounds i8, i8* %0, i64 %7
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i16
  %27 = add nuw nsw i16 %23, %26
  %28 = shl nuw nsw i16 %27, 1
  store i16 %28, i16* %2, align 2
  %29 = getelementptr inbounds i8, i8* %0, i64 2
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i16
  %32 = getelementptr inbounds i8, i8* %0, i64 3
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i16
  %35 = add nuw nsw i16 %34, %31
  %36 = getelementptr inbounds i8, i8* %0, i64 %8
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i16
  %39 = add nuw nsw i16 %35, %38
  %40 = getelementptr inbounds i8, i8* %0, i64 %9
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i16
  %43 = add nuw nsw i16 %39, %42
  %44 = shl nuw nsw i16 %43, 1
  %45 = getelementptr inbounds i16, i16* %2, i64 1
  store i16 %44, i16* %45, align 2
  %46 = getelementptr inbounds i8, i8* %0, i64 4
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i16
  %49 = getelementptr inbounds i8, i8* %0, i64 5
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i16
  %52 = add nuw nsw i16 %51, %48
  %53 = getelementptr inbounds i8, i8* %0, i64 %10
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i16
  %56 = add nuw nsw i16 %52, %55
  %57 = getelementptr inbounds i8, i8* %0, i64 %11
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i16
  %60 = add nuw nsw i16 %56, %59
  %61 = shl nuw nsw i16 %60, 1
  %62 = getelementptr inbounds i16, i16* %2, i64 2
  store i16 %61, i16* %62, align 2
  %63 = getelementptr inbounds i8, i8* %0, i64 6
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i16
  %66 = getelementptr inbounds i8, i8* %0, i64 7
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i16
  %69 = add nuw nsw i16 %68, %65
  %70 = getelementptr inbounds i8, i8* %0, i64 %12
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i16
  %73 = add nuw nsw i16 %69, %72
  %74 = getelementptr inbounds i8, i8* %0, i64 %13
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i16
  %77 = add nuw nsw i16 %73, %76
  %78 = shl nuw nsw i16 %77, 1
  %79 = getelementptr inbounds i16, i16* %2, i64 3
  store i16 %78, i16* %79, align 2
  %80 = getelementptr inbounds i8, i8* %0, i64 %5
  %81 = getelementptr inbounds i16, i16* %2, i64 32
  %82 = load i8, i8* %80, align 1
  %83 = zext i8 %82 to i16
  %84 = getelementptr inbounds i8, i8* %80, i64 1
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i16
  %87 = add nuw nsw i16 %86, %83
  %88 = getelementptr inbounds i8, i8* %80, i64 %6
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i16
  %91 = add nuw nsw i16 %87, %90
  %92 = getelementptr inbounds i8, i8* %80, i64 %7
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i16
  %95 = add nuw nsw i16 %91, %94
  %96 = shl nuw nsw i16 %95, 1
  store i16 %96, i16* %81, align 2
  %97 = getelementptr inbounds i8, i8* %80, i64 2
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i16
  %100 = getelementptr inbounds i8, i8* %80, i64 3
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i16
  %103 = add nuw nsw i16 %102, %99
  %104 = getelementptr inbounds i8, i8* %80, i64 %8
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i16
  %107 = add nuw nsw i16 %103, %106
  %108 = getelementptr inbounds i8, i8* %80, i64 %9
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i16
  %111 = add nuw nsw i16 %107, %110
  %112 = shl nuw nsw i16 %111, 1
  %113 = getelementptr inbounds i16, i16* %2, i64 33
  store i16 %112, i16* %113, align 2
  %114 = getelementptr inbounds i8, i8* %80, i64 4
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i16
  %117 = getelementptr inbounds i8, i8* %80, i64 5
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i16
  %120 = add nuw nsw i16 %119, %116
  %121 = getelementptr inbounds i8, i8* %80, i64 %10
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i16
  %124 = add nuw nsw i16 %120, %123
  %125 = getelementptr inbounds i8, i8* %80, i64 %11
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i16
  %128 = add nuw nsw i16 %124, %127
  %129 = shl nuw nsw i16 %128, 1
  %130 = getelementptr inbounds i16, i16* %2, i64 34
  store i16 %129, i16* %130, align 2
  %131 = getelementptr inbounds i8, i8* %80, i64 6
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i16
  %134 = getelementptr inbounds i8, i8* %80, i64 7
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i16
  %137 = add nuw nsw i16 %136, %133
  %138 = getelementptr inbounds i8, i8* %80, i64 %12
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i16
  %141 = add nuw nsw i16 %137, %140
  %142 = getelementptr inbounds i8, i8* %80, i64 %13
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i16
  %145 = add nuw nsw i16 %141, %144
  %146 = shl nuw nsw i16 %145, 1
  %147 = getelementptr inbounds i16, i16* %2, i64 35
  store i16 %146, i16* %147, align 2
  %148 = getelementptr inbounds i8, i8* %80, i64 %5
  %149 = getelementptr inbounds i16, i16* %2, i64 64
  %150 = load i8, i8* %148, align 1
  %151 = zext i8 %150 to i16
  %152 = getelementptr inbounds i8, i8* %148, i64 1
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i16
  %155 = add nuw nsw i16 %154, %151
  %156 = getelementptr inbounds i8, i8* %148, i64 %6
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i16
  %159 = add nuw nsw i16 %155, %158
  %160 = getelementptr inbounds i8, i8* %148, i64 %7
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i16
  %163 = add nuw nsw i16 %159, %162
  %164 = shl nuw nsw i16 %163, 1
  store i16 %164, i16* %149, align 2
  %165 = getelementptr inbounds i8, i8* %148, i64 2
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i16
  %168 = getelementptr inbounds i8, i8* %148, i64 3
  %169 = load i8, i8* %168, align 1
  %170 = zext i8 %169 to i16
  %171 = add nuw nsw i16 %170, %167
  %172 = getelementptr inbounds i8, i8* %148, i64 %8
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i16
  %175 = add nuw nsw i16 %171, %174
  %176 = getelementptr inbounds i8, i8* %148, i64 %9
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i16
  %179 = add nuw nsw i16 %175, %178
  %180 = shl nuw nsw i16 %179, 1
  %181 = getelementptr inbounds i16, i16* %2, i64 65
  store i16 %180, i16* %181, align 2
  %182 = getelementptr inbounds i8, i8* %148, i64 4
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i16
  %185 = getelementptr inbounds i8, i8* %148, i64 5
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i16
  %188 = add nuw nsw i16 %187, %184
  %189 = getelementptr inbounds i8, i8* %148, i64 %10
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i16
  %192 = add nuw nsw i16 %188, %191
  %193 = getelementptr inbounds i8, i8* %148, i64 %11
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i16
  %196 = add nuw nsw i16 %192, %195
  %197 = shl nuw nsw i16 %196, 1
  %198 = getelementptr inbounds i16, i16* %2, i64 66
  store i16 %197, i16* %198, align 2
  %199 = getelementptr inbounds i8, i8* %148, i64 6
  %200 = load i8, i8* %199, align 1
  %201 = zext i8 %200 to i16
  %202 = getelementptr inbounds i8, i8* %148, i64 7
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i16
  %205 = add nuw nsw i16 %204, %201
  %206 = getelementptr inbounds i8, i8* %148, i64 %12
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i16
  %209 = add nuw nsw i16 %205, %208
  %210 = getelementptr inbounds i8, i8* %148, i64 %13
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i16
  %213 = add nuw nsw i16 %209, %212
  %214 = shl nuw nsw i16 %213, 1
  %215 = getelementptr inbounds i16, i16* %2, i64 67
  store i16 %214, i16* %215, align 2
  %216 = getelementptr inbounds i8, i8* %148, i64 %5
  %217 = getelementptr inbounds i16, i16* %2, i64 96
  %218 = load i8, i8* %216, align 1
  %219 = zext i8 %218 to i16
  %220 = getelementptr inbounds i8, i8* %216, i64 1
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i16
  %223 = add nuw nsw i16 %222, %219
  %224 = getelementptr inbounds i8, i8* %216, i64 %6
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i16
  %227 = add nuw nsw i16 %223, %226
  %228 = getelementptr inbounds i8, i8* %216, i64 %7
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i16
  %231 = add nuw nsw i16 %227, %230
  %232 = shl nuw nsw i16 %231, 1
  store i16 %232, i16* %217, align 2
  %233 = getelementptr inbounds i8, i8* %216, i64 2
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i16
  %236 = getelementptr inbounds i8, i8* %216, i64 3
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i16
  %239 = add nuw nsw i16 %238, %235
  %240 = getelementptr inbounds i8, i8* %216, i64 %8
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i16
  %243 = add nuw nsw i16 %239, %242
  %244 = getelementptr inbounds i8, i8* %216, i64 %9
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i16
  %247 = add nuw nsw i16 %243, %246
  %248 = shl nuw nsw i16 %247, 1
  %249 = getelementptr inbounds i16, i16* %2, i64 97
  store i16 %248, i16* %249, align 2
  %250 = getelementptr inbounds i8, i8* %216, i64 4
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i16
  %253 = getelementptr inbounds i8, i8* %216, i64 5
  %254 = load i8, i8* %253, align 1
  %255 = zext i8 %254 to i16
  %256 = add nuw nsw i16 %255, %252
  %257 = getelementptr inbounds i8, i8* %216, i64 %10
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i16
  %260 = add nuw nsw i16 %256, %259
  %261 = getelementptr inbounds i8, i8* %216, i64 %11
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i16
  %264 = add nuw nsw i16 %260, %263
  %265 = shl nuw nsw i16 %264, 1
  %266 = getelementptr inbounds i16, i16* %2, i64 98
  store i16 %265, i16* %266, align 2
  %267 = getelementptr inbounds i8, i8* %216, i64 6
  %268 = load i8, i8* %267, align 1
  %269 = zext i8 %268 to i16
  %270 = getelementptr inbounds i8, i8* %216, i64 7
  %271 = load i8, i8* %270, align 1
  %272 = zext i8 %271 to i16
  %273 = add nuw nsw i16 %272, %269
  %274 = getelementptr inbounds i8, i8* %216, i64 %12
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i16
  %277 = add nuw nsw i16 %273, %276
  %278 = getelementptr inbounds i8, i8* %216, i64 %13
  %279 = load i8, i8* %278, align 1
  %280 = zext i8 %279 to i16
  %281 = add nuw nsw i16 %277, %280
  %282 = shl nuw nsw i16 %281, 1
  %283 = getelementptr inbounds i16, i16* %2, i64 99
  store i16 %282, i16* %283, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_420_16x16_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = shl i32 %1, 1
  %5 = sext i32 %4 to i64
  %6 = sext i32 %1 to i64
  %7 = add nsw i64 %6, 1
  %8 = add nsw i64 %6, 2
  %9 = add nsw i64 %6, 3
  %10 = add nsw i64 %6, 4
  %11 = add nsw i64 %6, 5
  %12 = add nsw i64 %6, 6
  %13 = add nsw i64 %6, 7
  %14 = add nsw i64 %6, 8
  %15 = add nsw i64 %6, 9
  %16 = add nsw i64 %6, 10
  %17 = add nsw i64 %6, 11
  %18 = add nsw i64 %6, 12
  %19 = add nsw i64 %6, 13
  %20 = add nsw i64 %6, 14
  %21 = add nsw i64 %6, 15
  br label %22

22:                                               ; preds = %22, %3
  %23 = phi i8* [ %0, %3 ], [ %160, %22 ]
  %24 = phi i32 [ 0, %3 ], [ %162, %22 ]
  %25 = phi i16* [ %2, %3 ], [ %161, %22 ]
  %26 = load i8, i8* %23, align 1
  %27 = zext i8 %26 to i16
  %28 = getelementptr inbounds i8, i8* %23, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  %31 = add nuw nsw i16 %30, %27
  %32 = getelementptr inbounds i8, i8* %23, i64 %6
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i16
  %35 = add nuw nsw i16 %31, %34
  %36 = getelementptr inbounds i8, i8* %23, i64 %7
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i16
  %39 = add nuw nsw i16 %35, %38
  %40 = shl nuw nsw i16 %39, 1
  store i16 %40, i16* %25, align 2
  %41 = getelementptr inbounds i8, i8* %23, i64 2
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i16
  %44 = getelementptr inbounds i8, i8* %23, i64 3
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i16
  %47 = add nuw nsw i16 %46, %43
  %48 = getelementptr inbounds i8, i8* %23, i64 %8
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i16
  %51 = add nuw nsw i16 %47, %50
  %52 = getelementptr inbounds i8, i8* %23, i64 %9
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i16
  %55 = add nuw nsw i16 %51, %54
  %56 = shl nuw nsw i16 %55, 1
  %57 = getelementptr inbounds i16, i16* %25, i64 1
  store i16 %56, i16* %57, align 2
  %58 = getelementptr inbounds i8, i8* %23, i64 4
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  %61 = getelementptr inbounds i8, i8* %23, i64 5
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  %64 = add nuw nsw i16 %63, %60
  %65 = getelementptr inbounds i8, i8* %23, i64 %10
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i16
  %68 = add nuw nsw i16 %64, %67
  %69 = getelementptr inbounds i8, i8* %23, i64 %11
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i16
  %72 = add nuw nsw i16 %68, %71
  %73 = shl nuw nsw i16 %72, 1
  %74 = getelementptr inbounds i16, i16* %25, i64 2
  store i16 %73, i16* %74, align 2
  %75 = getelementptr inbounds i8, i8* %23, i64 6
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i16
  %78 = getelementptr inbounds i8, i8* %23, i64 7
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i16
  %81 = add nuw nsw i16 %80, %77
  %82 = getelementptr inbounds i8, i8* %23, i64 %12
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i16
  %85 = add nuw nsw i16 %81, %84
  %86 = getelementptr inbounds i8, i8* %23, i64 %13
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i16
  %89 = add nuw nsw i16 %85, %88
  %90 = shl nuw nsw i16 %89, 1
  %91 = getelementptr inbounds i16, i16* %25, i64 3
  store i16 %90, i16* %91, align 2
  %92 = getelementptr inbounds i8, i8* %23, i64 8
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i16
  %95 = getelementptr inbounds i8, i8* %23, i64 9
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i16
  %98 = add nuw nsw i16 %97, %94
  %99 = getelementptr inbounds i8, i8* %23, i64 %14
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i16
  %102 = add nuw nsw i16 %98, %101
  %103 = getelementptr inbounds i8, i8* %23, i64 %15
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i16
  %106 = add nuw nsw i16 %102, %105
  %107 = shl nuw nsw i16 %106, 1
  %108 = getelementptr inbounds i16, i16* %25, i64 4
  store i16 %107, i16* %108, align 2
  %109 = getelementptr inbounds i8, i8* %23, i64 10
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i16
  %112 = getelementptr inbounds i8, i8* %23, i64 11
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i16
  %115 = add nuw nsw i16 %114, %111
  %116 = getelementptr inbounds i8, i8* %23, i64 %16
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i16
  %119 = add nuw nsw i16 %115, %118
  %120 = getelementptr inbounds i8, i8* %23, i64 %17
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i16
  %123 = add nuw nsw i16 %119, %122
  %124 = shl nuw nsw i16 %123, 1
  %125 = getelementptr inbounds i16, i16* %25, i64 5
  store i16 %124, i16* %125, align 2
  %126 = getelementptr inbounds i8, i8* %23, i64 12
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i16
  %129 = getelementptr inbounds i8, i8* %23, i64 13
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i16
  %132 = add nuw nsw i16 %131, %128
  %133 = getelementptr inbounds i8, i8* %23, i64 %18
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i16
  %136 = add nuw nsw i16 %132, %135
  %137 = getelementptr inbounds i8, i8* %23, i64 %19
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i16
  %140 = add nuw nsw i16 %136, %139
  %141 = shl nuw nsw i16 %140, 1
  %142 = getelementptr inbounds i16, i16* %25, i64 6
  store i16 %141, i16* %142, align 2
  %143 = getelementptr inbounds i8, i8* %23, i64 14
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i16
  %146 = getelementptr inbounds i8, i8* %23, i64 15
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i16
  %149 = add nuw nsw i16 %148, %145
  %150 = getelementptr inbounds i8, i8* %23, i64 %20
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i16
  %153 = add nuw nsw i16 %149, %152
  %154 = getelementptr inbounds i8, i8* %23, i64 %21
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i16
  %157 = add nuw nsw i16 %153, %156
  %158 = shl nuw nsw i16 %157, 1
  %159 = getelementptr inbounds i16, i16* %25, i64 7
  store i16 %158, i16* %159, align 2
  %160 = getelementptr inbounds i8, i8* %23, i64 %5
  %161 = getelementptr inbounds i16, i16* %25, i64 32
  %162 = add nuw nsw i32 %24, 2
  %163 = icmp ult i32 %162, 16
  br i1 %163, label %22, label %164

164:                                              ; preds = %22
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_420_32x32_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = shl i32 %1, 1
  %5 = sext i32 %4 to i64
  %6 = sext i32 %1 to i64
  %7 = add nsw i64 %6, 32
  %8 = add nsw i64 %6, 16
  br label %9

9:                                                ; preds = %74, %3
  %10 = phi i64 [ %79, %74 ], [ 0, %3 ]
  %11 = phi i8* [ %75, %74 ], [ %0, %3 ]
  %12 = phi i32 [ %77, %74 ], [ 0, %3 ]
  %13 = phi i16* [ %76, %74 ], [ %2, %3 ]
  %14 = shl nuw nsw i64 %10, 5
  %15 = getelementptr i16, i16* %2, i64 %14
  %16 = bitcast i16* %15 to i8*
  %17 = or i64 %14, 16
  %18 = getelementptr i16, i16* %2, i64 %17
  %19 = bitcast i16* %18 to i8*
  %20 = mul i64 %10, %5
  %21 = add i64 %20, 32
  %22 = getelementptr i8, i8* %0, i64 %21
  %23 = getelementptr i8, i8* %0, i64 %20
  %24 = add i64 %7, %20
  %25 = getelementptr i8, i8* %0, i64 %24
  %26 = add i64 %20, %6
  %27 = getelementptr i8, i8* %0, i64 %26
  %28 = icmp ugt i8* %25, %16
  %29 = icmp ult i8* %27, %19
  %30 = and i1 %28, %29
  %31 = icmp ugt i8* %22, %16
  %32 = icmp ult i8* %23, %19
  %33 = and i1 %31, %32
  %34 = or i1 %30, %33
  br i1 %34, label %80, label %35

35:                                               ; preds = %9
  %36 = bitcast i8* %11 to <16 x i8>*
  %37 = load <16 x i8>, <16 x i8>* %36, align 1
  %38 = shufflevector <16 x i8> %37, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %39 = shufflevector <16 x i8> %37, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %40 = zext <8 x i8> %38 to <8 x i16>
  %41 = zext <8 x i8> %39 to <8 x i16>
  %42 = add nuw nsw <8 x i16> %41, %40
  %43 = getelementptr inbounds i8, i8* %11, i64 %6
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = shufflevector <16 x i8> %45, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %47 = shufflevector <16 x i8> %45, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %48 = zext <8 x i8> %46 to <8 x i16>
  %49 = add nuw nsw <8 x i16> %42, %48
  %50 = zext <8 x i8> %47 to <8 x i16>
  %51 = add nuw nsw <8 x i16> %49, %50
  %52 = shl nuw nsw <8 x i16> %51, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %53 = bitcast i16* %13 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %53, align 2, !alias.scope !221, !noalias !224
  %54 = getelementptr inbounds i8, i8* %11, i64 16
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = shufflevector <16 x i8> %56, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %58 = shufflevector <16 x i8> %56, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %59 = zext <8 x i8> %57 to <8 x i16>
  %60 = zext <8 x i8> %58 to <8 x i16>
  %61 = add nuw nsw <8 x i16> %60, %59
  %62 = getelementptr inbounds i8, i8* %11, i64 %8
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 1
  %65 = shufflevector <16 x i8> %64, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %66 = shufflevector <16 x i8> %64, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %67 = zext <8 x i8> %65 to <8 x i16>
  %68 = add nuw nsw <8 x i16> %61, %67
  %69 = zext <8 x i8> %66 to <8 x i16>
  %70 = add nuw nsw <8 x i16> %68, %69
  %71 = shl nuw nsw <8 x i16> %70, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %72 = getelementptr inbounds i16, i16* %13, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %73, align 2, !alias.scope !221, !noalias !224
  br label %74

74:                                               ; preds = %80, %35
  %75 = getelementptr inbounds i8, i8* %11, i64 %5
  %76 = getelementptr inbounds i16, i16* %13, i64 32
  %77 = add nuw nsw i32 %12, 2
  %78 = icmp ult i32 %77, 32
  %79 = add i64 %10, 1
  br i1 %78, label %9, label %105

80:                                               ; preds = %9, %80
  %81 = phi i64 [ %103, %80 ], [ 0, %9 ]
  %82 = add nsw i64 %81, %6
  %83 = getelementptr inbounds i8, i8* %11, i64 %81
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i16
  %86 = or i64 %81, 1
  %87 = getelementptr inbounds i8, i8* %11, i64 %86
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i16
  %90 = add nuw nsw i16 %89, %85
  %91 = getelementptr inbounds i8, i8* %11, i64 %82
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i16
  %94 = add nuw nsw i16 %90, %93
  %95 = add nsw i64 %82, 1
  %96 = getelementptr inbounds i8, i8* %11, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i16
  %99 = add nuw nsw i16 %94, %98
  %100 = shl nuw nsw i16 %99, 1
  %101 = lshr exact i64 %81, 1
  %102 = getelementptr inbounds i16, i16* %13, i64 %101
  store i16 %100, i16* %102, align 2
  %103 = add nuw nsw i64 %81, 2
  %104 = icmp ult i64 %103, 32
  br i1 %104, label %80, label %74, !llvm.loop !227

105:                                              ; preds = %74
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_420_4x8_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = shl i32 %1, 1
  %5 = sext i32 %4 to i64
  %6 = sext i32 %1 to i64
  %7 = load i8, i8* %0, align 1
  %8 = zext i8 %7 to i16
  %9 = getelementptr inbounds i8, i8* %0, i64 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i16
  %12 = add nuw nsw i16 %11, %8
  %13 = getelementptr inbounds i8, i8* %0, i64 %6
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i16
  %16 = add nuw nsw i16 %12, %15
  %17 = add nsw i64 %6, 1
  %18 = getelementptr inbounds i8, i8* %0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i16
  %21 = add nuw nsw i16 %16, %20
  %22 = shl nuw nsw i16 %21, 1
  store i16 %22, i16* %2, align 2
  %23 = add nsw i64 %6, 2
  %24 = getelementptr inbounds i8, i8* %0, i64 2
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i16
  %27 = getelementptr inbounds i8, i8* %0, i64 3
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i16
  %30 = add nuw nsw i16 %29, %26
  %31 = getelementptr inbounds i8, i8* %0, i64 %23
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i16
  %34 = add nuw nsw i16 %30, %33
  %35 = add nsw i64 %6, 3
  %36 = getelementptr inbounds i8, i8* %0, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i16
  %39 = add nuw nsw i16 %34, %38
  %40 = shl nuw nsw i16 %39, 1
  %41 = getelementptr inbounds i16, i16* %2, i64 1
  store i16 %40, i16* %41, align 2
  %42 = getelementptr inbounds i8, i8* %0, i64 %5
  %43 = getelementptr inbounds i16, i16* %2, i64 32
  %44 = load i8, i8* %42, align 1
  %45 = zext i8 %44 to i16
  %46 = getelementptr inbounds i8, i8* %42, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i16
  %49 = add nuw nsw i16 %48, %45
  %50 = getelementptr inbounds i8, i8* %42, i64 %6
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i16
  %53 = add nuw nsw i16 %49, %52
  %54 = getelementptr inbounds i8, i8* %42, i64 %17
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i16
  %57 = add nuw nsw i16 %53, %56
  %58 = shl nuw nsw i16 %57, 1
  store i16 %58, i16* %43, align 2
  %59 = getelementptr inbounds i8, i8* %42, i64 2
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i16
  %62 = getelementptr inbounds i8, i8* %42, i64 3
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i16
  %65 = add nuw nsw i16 %64, %61
  %66 = getelementptr inbounds i8, i8* %42, i64 %23
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i16
  %69 = add nuw nsw i16 %65, %68
  %70 = getelementptr inbounds i8, i8* %42, i64 %35
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i16
  %73 = add nuw nsw i16 %69, %72
  %74 = shl nuw nsw i16 %73, 1
  %75 = getelementptr inbounds i16, i16* %2, i64 33
  store i16 %74, i16* %75, align 2
  %76 = getelementptr inbounds i8, i8* %42, i64 %5
  %77 = getelementptr inbounds i16, i16* %2, i64 64
  %78 = load i8, i8* %76, align 1
  %79 = zext i8 %78 to i16
  %80 = getelementptr inbounds i8, i8* %76, i64 1
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i16
  %83 = add nuw nsw i16 %82, %79
  %84 = getelementptr inbounds i8, i8* %76, i64 %6
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i16
  %87 = add nuw nsw i16 %83, %86
  %88 = getelementptr inbounds i8, i8* %76, i64 %17
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i16
  %91 = add nuw nsw i16 %87, %90
  %92 = shl nuw nsw i16 %91, 1
  store i16 %92, i16* %77, align 2
  %93 = getelementptr inbounds i8, i8* %76, i64 2
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i16
  %96 = getelementptr inbounds i8, i8* %76, i64 3
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i16
  %99 = add nuw nsw i16 %98, %95
  %100 = getelementptr inbounds i8, i8* %76, i64 %23
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i16
  %103 = add nuw nsw i16 %99, %102
  %104 = getelementptr inbounds i8, i8* %76, i64 %35
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i16
  %107 = add nuw nsw i16 %103, %106
  %108 = shl nuw nsw i16 %107, 1
  %109 = getelementptr inbounds i16, i16* %2, i64 65
  store i16 %108, i16* %109, align 2
  %110 = getelementptr inbounds i8, i8* %76, i64 %5
  %111 = getelementptr inbounds i16, i16* %2, i64 96
  %112 = load i8, i8* %110, align 1
  %113 = zext i8 %112 to i16
  %114 = getelementptr inbounds i8, i8* %110, i64 1
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i16
  %117 = add nuw nsw i16 %116, %113
  %118 = getelementptr inbounds i8, i8* %110, i64 %6
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i16
  %121 = add nuw nsw i16 %117, %120
  %122 = getelementptr inbounds i8, i8* %110, i64 %17
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i16
  %125 = add nuw nsw i16 %121, %124
  %126 = shl nuw nsw i16 %125, 1
  store i16 %126, i16* %111, align 2
  %127 = getelementptr inbounds i8, i8* %110, i64 2
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i16
  %130 = getelementptr inbounds i8, i8* %110, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i16
  %133 = add nuw nsw i16 %132, %129
  %134 = getelementptr inbounds i8, i8* %110, i64 %23
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i16
  %137 = add nuw nsw i16 %133, %136
  %138 = getelementptr inbounds i8, i8* %110, i64 %35
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i16
  %141 = add nuw nsw i16 %137, %140
  %142 = shl nuw nsw i16 %141, 1
  %143 = getelementptr inbounds i16, i16* %2, i64 97
  store i16 %142, i16* %143, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_420_8x4_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = shl i32 %1, 1
  %5 = sext i32 %4 to i64
  %6 = sext i32 %1 to i64
  %7 = load i8, i8* %0, align 1
  %8 = zext i8 %7 to i16
  %9 = getelementptr inbounds i8, i8* %0, i64 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i16
  %12 = add nuw nsw i16 %11, %8
  %13 = getelementptr inbounds i8, i8* %0, i64 %6
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i16
  %16 = add nuw nsw i16 %12, %15
  %17 = add nsw i64 %6, 1
  %18 = getelementptr inbounds i8, i8* %0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i16
  %21 = add nuw nsw i16 %16, %20
  %22 = shl nuw nsw i16 %21, 1
  store i16 %22, i16* %2, align 2
  %23 = add nsw i64 %6, 2
  %24 = getelementptr inbounds i8, i8* %0, i64 2
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i16
  %27 = getelementptr inbounds i8, i8* %0, i64 3
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i16
  %30 = add nuw nsw i16 %29, %26
  %31 = getelementptr inbounds i8, i8* %0, i64 %23
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i16
  %34 = add nuw nsw i16 %30, %33
  %35 = add nsw i64 %6, 3
  %36 = getelementptr inbounds i8, i8* %0, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i16
  %39 = add nuw nsw i16 %34, %38
  %40 = shl nuw nsw i16 %39, 1
  %41 = getelementptr inbounds i16, i16* %2, i64 1
  store i16 %40, i16* %41, align 2
  %42 = add nsw i64 %6, 4
  %43 = getelementptr inbounds i8, i8* %0, i64 4
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i16
  %46 = getelementptr inbounds i8, i8* %0, i64 5
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i16
  %49 = add nuw nsw i16 %48, %45
  %50 = getelementptr inbounds i8, i8* %0, i64 %42
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i16
  %53 = add nuw nsw i16 %49, %52
  %54 = add nsw i64 %6, 5
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i16
  %58 = add nuw nsw i16 %53, %57
  %59 = shl nuw nsw i16 %58, 1
  %60 = getelementptr inbounds i16, i16* %2, i64 2
  store i16 %59, i16* %60, align 2
  %61 = add nsw i64 %6, 6
  %62 = getelementptr inbounds i8, i8* %0, i64 6
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i16
  %65 = getelementptr inbounds i8, i8* %0, i64 7
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i16
  %68 = add nuw nsw i16 %67, %64
  %69 = getelementptr inbounds i8, i8* %0, i64 %61
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i16
  %72 = add nuw nsw i16 %68, %71
  %73 = add nsw i64 %6, 7
  %74 = getelementptr inbounds i8, i8* %0, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i16
  %77 = add nuw nsw i16 %72, %76
  %78 = shl nuw nsw i16 %77, 1
  %79 = getelementptr inbounds i16, i16* %2, i64 3
  store i16 %78, i16* %79, align 2
  %80 = getelementptr inbounds i8, i8* %0, i64 %5
  %81 = getelementptr inbounds i16, i16* %2, i64 32
  %82 = load i8, i8* %80, align 1
  %83 = zext i8 %82 to i16
  %84 = getelementptr inbounds i8, i8* %80, i64 1
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i16
  %87 = add nuw nsw i16 %86, %83
  %88 = getelementptr inbounds i8, i8* %80, i64 %6
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i16
  %91 = add nuw nsw i16 %87, %90
  %92 = getelementptr inbounds i8, i8* %80, i64 %17
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i16
  %95 = add nuw nsw i16 %91, %94
  %96 = shl nuw nsw i16 %95, 1
  store i16 %96, i16* %81, align 2
  %97 = getelementptr inbounds i8, i8* %80, i64 2
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i16
  %100 = getelementptr inbounds i8, i8* %80, i64 3
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i16
  %103 = add nuw nsw i16 %102, %99
  %104 = getelementptr inbounds i8, i8* %80, i64 %23
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i16
  %107 = add nuw nsw i16 %103, %106
  %108 = getelementptr inbounds i8, i8* %80, i64 %35
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i16
  %111 = add nuw nsw i16 %107, %110
  %112 = shl nuw nsw i16 %111, 1
  %113 = getelementptr inbounds i16, i16* %2, i64 33
  store i16 %112, i16* %113, align 2
  %114 = getelementptr inbounds i8, i8* %80, i64 4
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i16
  %117 = getelementptr inbounds i8, i8* %80, i64 5
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i16
  %120 = add nuw nsw i16 %119, %116
  %121 = getelementptr inbounds i8, i8* %80, i64 %42
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i16
  %124 = add nuw nsw i16 %120, %123
  %125 = getelementptr inbounds i8, i8* %80, i64 %54
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i16
  %128 = add nuw nsw i16 %124, %127
  %129 = shl nuw nsw i16 %128, 1
  %130 = getelementptr inbounds i16, i16* %2, i64 34
  store i16 %129, i16* %130, align 2
  %131 = getelementptr inbounds i8, i8* %80, i64 6
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i16
  %134 = getelementptr inbounds i8, i8* %80, i64 7
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i16
  %137 = add nuw nsw i16 %136, %133
  %138 = getelementptr inbounds i8, i8* %80, i64 %61
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i16
  %141 = add nuw nsw i16 %137, %140
  %142 = getelementptr inbounds i8, i8* %80, i64 %73
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i16
  %145 = add nuw nsw i16 %141, %144
  %146 = shl nuw nsw i16 %145, 1
  %147 = getelementptr inbounds i16, i16* %2, i64 35
  store i16 %146, i16* %147, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_420_8x16_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = shl i32 %1, 1
  %5 = sext i32 %4 to i64
  %6 = sext i32 %1 to i64
  %7 = add nsw i64 %6, 1
  %8 = add nsw i64 %6, 2
  %9 = add nsw i64 %6, 3
  %10 = add nsw i64 %6, 4
  %11 = add nsw i64 %6, 5
  %12 = add nsw i64 %6, 6
  %13 = add nsw i64 %6, 7
  br label %14

14:                                               ; preds = %14, %3
  %15 = phi i8* [ %0, %3 ], [ %84, %14 ]
  %16 = phi i32 [ 0, %3 ], [ %86, %14 ]
  %17 = phi i16* [ %2, %3 ], [ %85, %14 ]
  %18 = load i8, i8* %15, align 1
  %19 = zext i8 %18 to i16
  %20 = getelementptr inbounds i8, i8* %15, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i16
  %23 = add nuw nsw i16 %22, %19
  %24 = getelementptr inbounds i8, i8* %15, i64 %6
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i16
  %27 = add nuw nsw i16 %23, %26
  %28 = getelementptr inbounds i8, i8* %15, i64 %7
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  %31 = add nuw nsw i16 %27, %30
  %32 = shl nuw nsw i16 %31, 1
  store i16 %32, i16* %17, align 2
  %33 = getelementptr inbounds i8, i8* %15, i64 2
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i16
  %36 = getelementptr inbounds i8, i8* %15, i64 3
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i16
  %39 = add nuw nsw i16 %38, %35
  %40 = getelementptr inbounds i8, i8* %15, i64 %8
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i16
  %43 = add nuw nsw i16 %39, %42
  %44 = getelementptr inbounds i8, i8* %15, i64 %9
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i16
  %47 = add nuw nsw i16 %43, %46
  %48 = shl nuw nsw i16 %47, 1
  %49 = getelementptr inbounds i16, i16* %17, i64 1
  store i16 %48, i16* %49, align 2
  %50 = getelementptr inbounds i8, i8* %15, i64 4
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i16
  %53 = getelementptr inbounds i8, i8* %15, i64 5
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i16
  %56 = add nuw nsw i16 %55, %52
  %57 = getelementptr inbounds i8, i8* %15, i64 %10
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i16
  %60 = add nuw nsw i16 %56, %59
  %61 = getelementptr inbounds i8, i8* %15, i64 %11
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  %64 = add nuw nsw i16 %60, %63
  %65 = shl nuw nsw i16 %64, 1
  %66 = getelementptr inbounds i16, i16* %17, i64 2
  store i16 %65, i16* %66, align 2
  %67 = getelementptr inbounds i8, i8* %15, i64 6
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i16
  %70 = getelementptr inbounds i8, i8* %15, i64 7
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i16
  %73 = add nuw nsw i16 %72, %69
  %74 = getelementptr inbounds i8, i8* %15, i64 %12
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i16
  %77 = add nuw nsw i16 %73, %76
  %78 = getelementptr inbounds i8, i8* %15, i64 %13
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i16
  %81 = add nuw nsw i16 %77, %80
  %82 = shl nuw nsw i16 %81, 1
  %83 = getelementptr inbounds i16, i16* %17, i64 3
  store i16 %82, i16* %83, align 2
  %84 = getelementptr inbounds i8, i8* %15, i64 %5
  %85 = getelementptr inbounds i16, i16* %17, i64 32
  %86 = add nuw nsw i32 %16, 2
  %87 = icmp ult i32 %86, 16
  br i1 %87, label %14, label %88

88:                                               ; preds = %14
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_420_16x8_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = shl i32 %1, 1
  %5 = sext i32 %4 to i64
  %6 = sext i32 %1 to i64
  %7 = add nsw i64 %6, 1
  %8 = add nsw i64 %6, 2
  %9 = add nsw i64 %6, 3
  %10 = add nsw i64 %6, 4
  %11 = add nsw i64 %6, 5
  %12 = add nsw i64 %6, 6
  %13 = add nsw i64 %6, 7
  %14 = add nsw i64 %6, 8
  %15 = add nsw i64 %6, 9
  %16 = add nsw i64 %6, 10
  %17 = add nsw i64 %6, 11
  %18 = add nsw i64 %6, 12
  %19 = add nsw i64 %6, 13
  %20 = add nsw i64 %6, 14
  %21 = add nsw i64 %6, 15
  br label %22

22:                                               ; preds = %22, %3
  %23 = phi i8* [ %0, %3 ], [ %160, %22 ]
  %24 = phi i32 [ 0, %3 ], [ %162, %22 ]
  %25 = phi i16* [ %2, %3 ], [ %161, %22 ]
  %26 = load i8, i8* %23, align 1
  %27 = zext i8 %26 to i16
  %28 = getelementptr inbounds i8, i8* %23, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  %31 = add nuw nsw i16 %30, %27
  %32 = getelementptr inbounds i8, i8* %23, i64 %6
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i16
  %35 = add nuw nsw i16 %31, %34
  %36 = getelementptr inbounds i8, i8* %23, i64 %7
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i16
  %39 = add nuw nsw i16 %35, %38
  %40 = shl nuw nsw i16 %39, 1
  store i16 %40, i16* %25, align 2
  %41 = getelementptr inbounds i8, i8* %23, i64 2
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i16
  %44 = getelementptr inbounds i8, i8* %23, i64 3
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i16
  %47 = add nuw nsw i16 %46, %43
  %48 = getelementptr inbounds i8, i8* %23, i64 %8
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i16
  %51 = add nuw nsw i16 %47, %50
  %52 = getelementptr inbounds i8, i8* %23, i64 %9
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i16
  %55 = add nuw nsw i16 %51, %54
  %56 = shl nuw nsw i16 %55, 1
  %57 = getelementptr inbounds i16, i16* %25, i64 1
  store i16 %56, i16* %57, align 2
  %58 = getelementptr inbounds i8, i8* %23, i64 4
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  %61 = getelementptr inbounds i8, i8* %23, i64 5
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  %64 = add nuw nsw i16 %63, %60
  %65 = getelementptr inbounds i8, i8* %23, i64 %10
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i16
  %68 = add nuw nsw i16 %64, %67
  %69 = getelementptr inbounds i8, i8* %23, i64 %11
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i16
  %72 = add nuw nsw i16 %68, %71
  %73 = shl nuw nsw i16 %72, 1
  %74 = getelementptr inbounds i16, i16* %25, i64 2
  store i16 %73, i16* %74, align 2
  %75 = getelementptr inbounds i8, i8* %23, i64 6
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i16
  %78 = getelementptr inbounds i8, i8* %23, i64 7
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i16
  %81 = add nuw nsw i16 %80, %77
  %82 = getelementptr inbounds i8, i8* %23, i64 %12
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i16
  %85 = add nuw nsw i16 %81, %84
  %86 = getelementptr inbounds i8, i8* %23, i64 %13
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i16
  %89 = add nuw nsw i16 %85, %88
  %90 = shl nuw nsw i16 %89, 1
  %91 = getelementptr inbounds i16, i16* %25, i64 3
  store i16 %90, i16* %91, align 2
  %92 = getelementptr inbounds i8, i8* %23, i64 8
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i16
  %95 = getelementptr inbounds i8, i8* %23, i64 9
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i16
  %98 = add nuw nsw i16 %97, %94
  %99 = getelementptr inbounds i8, i8* %23, i64 %14
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i16
  %102 = add nuw nsw i16 %98, %101
  %103 = getelementptr inbounds i8, i8* %23, i64 %15
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i16
  %106 = add nuw nsw i16 %102, %105
  %107 = shl nuw nsw i16 %106, 1
  %108 = getelementptr inbounds i16, i16* %25, i64 4
  store i16 %107, i16* %108, align 2
  %109 = getelementptr inbounds i8, i8* %23, i64 10
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i16
  %112 = getelementptr inbounds i8, i8* %23, i64 11
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i16
  %115 = add nuw nsw i16 %114, %111
  %116 = getelementptr inbounds i8, i8* %23, i64 %16
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i16
  %119 = add nuw nsw i16 %115, %118
  %120 = getelementptr inbounds i8, i8* %23, i64 %17
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i16
  %123 = add nuw nsw i16 %119, %122
  %124 = shl nuw nsw i16 %123, 1
  %125 = getelementptr inbounds i16, i16* %25, i64 5
  store i16 %124, i16* %125, align 2
  %126 = getelementptr inbounds i8, i8* %23, i64 12
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i16
  %129 = getelementptr inbounds i8, i8* %23, i64 13
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i16
  %132 = add nuw nsw i16 %131, %128
  %133 = getelementptr inbounds i8, i8* %23, i64 %18
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i16
  %136 = add nuw nsw i16 %132, %135
  %137 = getelementptr inbounds i8, i8* %23, i64 %19
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i16
  %140 = add nuw nsw i16 %136, %139
  %141 = shl nuw nsw i16 %140, 1
  %142 = getelementptr inbounds i16, i16* %25, i64 6
  store i16 %141, i16* %142, align 2
  %143 = getelementptr inbounds i8, i8* %23, i64 14
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i16
  %146 = getelementptr inbounds i8, i8* %23, i64 15
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i16
  %149 = add nuw nsw i16 %148, %145
  %150 = getelementptr inbounds i8, i8* %23, i64 %20
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i16
  %153 = add nuw nsw i16 %149, %152
  %154 = getelementptr inbounds i8, i8* %23, i64 %21
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i16
  %157 = add nuw nsw i16 %153, %156
  %158 = shl nuw nsw i16 %157, 1
  %159 = getelementptr inbounds i16, i16* %25, i64 7
  store i16 %158, i16* %159, align 2
  %160 = getelementptr inbounds i8, i8* %23, i64 %5
  %161 = getelementptr inbounds i16, i16* %25, i64 32
  %162 = add nuw nsw i32 %24, 2
  %163 = icmp ult i32 %162, 8
  br i1 %163, label %22, label %164

164:                                              ; preds = %22
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_420_16x32_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = shl i32 %1, 1
  %5 = sext i32 %4 to i64
  %6 = sext i32 %1 to i64
  %7 = add nsw i64 %6, 1
  %8 = add nsw i64 %6, 2
  %9 = add nsw i64 %6, 3
  %10 = add nsw i64 %6, 4
  %11 = add nsw i64 %6, 5
  %12 = add nsw i64 %6, 6
  %13 = add nsw i64 %6, 7
  %14 = add nsw i64 %6, 8
  %15 = add nsw i64 %6, 9
  %16 = add nsw i64 %6, 10
  %17 = add nsw i64 %6, 11
  %18 = add nsw i64 %6, 12
  %19 = add nsw i64 %6, 13
  %20 = add nsw i64 %6, 14
  %21 = add nsw i64 %6, 15
  br label %22

22:                                               ; preds = %22, %3
  %23 = phi i8* [ %0, %3 ], [ %160, %22 ]
  %24 = phi i32 [ 0, %3 ], [ %162, %22 ]
  %25 = phi i16* [ %2, %3 ], [ %161, %22 ]
  %26 = load i8, i8* %23, align 1
  %27 = zext i8 %26 to i16
  %28 = getelementptr inbounds i8, i8* %23, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  %31 = add nuw nsw i16 %30, %27
  %32 = getelementptr inbounds i8, i8* %23, i64 %6
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i16
  %35 = add nuw nsw i16 %31, %34
  %36 = getelementptr inbounds i8, i8* %23, i64 %7
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i16
  %39 = add nuw nsw i16 %35, %38
  %40 = shl nuw nsw i16 %39, 1
  store i16 %40, i16* %25, align 2
  %41 = getelementptr inbounds i8, i8* %23, i64 2
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i16
  %44 = getelementptr inbounds i8, i8* %23, i64 3
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i16
  %47 = add nuw nsw i16 %46, %43
  %48 = getelementptr inbounds i8, i8* %23, i64 %8
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i16
  %51 = add nuw nsw i16 %47, %50
  %52 = getelementptr inbounds i8, i8* %23, i64 %9
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i16
  %55 = add nuw nsw i16 %51, %54
  %56 = shl nuw nsw i16 %55, 1
  %57 = getelementptr inbounds i16, i16* %25, i64 1
  store i16 %56, i16* %57, align 2
  %58 = getelementptr inbounds i8, i8* %23, i64 4
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  %61 = getelementptr inbounds i8, i8* %23, i64 5
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  %64 = add nuw nsw i16 %63, %60
  %65 = getelementptr inbounds i8, i8* %23, i64 %10
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i16
  %68 = add nuw nsw i16 %64, %67
  %69 = getelementptr inbounds i8, i8* %23, i64 %11
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i16
  %72 = add nuw nsw i16 %68, %71
  %73 = shl nuw nsw i16 %72, 1
  %74 = getelementptr inbounds i16, i16* %25, i64 2
  store i16 %73, i16* %74, align 2
  %75 = getelementptr inbounds i8, i8* %23, i64 6
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i16
  %78 = getelementptr inbounds i8, i8* %23, i64 7
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i16
  %81 = add nuw nsw i16 %80, %77
  %82 = getelementptr inbounds i8, i8* %23, i64 %12
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i16
  %85 = add nuw nsw i16 %81, %84
  %86 = getelementptr inbounds i8, i8* %23, i64 %13
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i16
  %89 = add nuw nsw i16 %85, %88
  %90 = shl nuw nsw i16 %89, 1
  %91 = getelementptr inbounds i16, i16* %25, i64 3
  store i16 %90, i16* %91, align 2
  %92 = getelementptr inbounds i8, i8* %23, i64 8
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i16
  %95 = getelementptr inbounds i8, i8* %23, i64 9
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i16
  %98 = add nuw nsw i16 %97, %94
  %99 = getelementptr inbounds i8, i8* %23, i64 %14
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i16
  %102 = add nuw nsw i16 %98, %101
  %103 = getelementptr inbounds i8, i8* %23, i64 %15
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i16
  %106 = add nuw nsw i16 %102, %105
  %107 = shl nuw nsw i16 %106, 1
  %108 = getelementptr inbounds i16, i16* %25, i64 4
  store i16 %107, i16* %108, align 2
  %109 = getelementptr inbounds i8, i8* %23, i64 10
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i16
  %112 = getelementptr inbounds i8, i8* %23, i64 11
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i16
  %115 = add nuw nsw i16 %114, %111
  %116 = getelementptr inbounds i8, i8* %23, i64 %16
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i16
  %119 = add nuw nsw i16 %115, %118
  %120 = getelementptr inbounds i8, i8* %23, i64 %17
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i16
  %123 = add nuw nsw i16 %119, %122
  %124 = shl nuw nsw i16 %123, 1
  %125 = getelementptr inbounds i16, i16* %25, i64 5
  store i16 %124, i16* %125, align 2
  %126 = getelementptr inbounds i8, i8* %23, i64 12
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i16
  %129 = getelementptr inbounds i8, i8* %23, i64 13
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i16
  %132 = add nuw nsw i16 %131, %128
  %133 = getelementptr inbounds i8, i8* %23, i64 %18
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i16
  %136 = add nuw nsw i16 %132, %135
  %137 = getelementptr inbounds i8, i8* %23, i64 %19
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i16
  %140 = add nuw nsw i16 %136, %139
  %141 = shl nuw nsw i16 %140, 1
  %142 = getelementptr inbounds i16, i16* %25, i64 6
  store i16 %141, i16* %142, align 2
  %143 = getelementptr inbounds i8, i8* %23, i64 14
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i16
  %146 = getelementptr inbounds i8, i8* %23, i64 15
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i16
  %149 = add nuw nsw i16 %148, %145
  %150 = getelementptr inbounds i8, i8* %23, i64 %20
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i16
  %153 = add nuw nsw i16 %149, %152
  %154 = getelementptr inbounds i8, i8* %23, i64 %21
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i16
  %157 = add nuw nsw i16 %153, %156
  %158 = shl nuw nsw i16 %157, 1
  %159 = getelementptr inbounds i16, i16* %25, i64 7
  store i16 %158, i16* %159, align 2
  %160 = getelementptr inbounds i8, i8* %23, i64 %5
  %161 = getelementptr inbounds i16, i16* %25, i64 32
  %162 = add nuw nsw i32 %24, 2
  %163 = icmp ult i32 %162, 32
  br i1 %163, label %22, label %164

164:                                              ; preds = %22
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_420_32x16_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = shl i32 %1, 1
  %5 = sext i32 %4 to i64
  %6 = sext i32 %1 to i64
  %7 = add nsw i64 %6, 32
  %8 = add nsw i64 %6, 16
  br label %9

9:                                                ; preds = %74, %3
  %10 = phi i64 [ %79, %74 ], [ 0, %3 ]
  %11 = phi i8* [ %75, %74 ], [ %0, %3 ]
  %12 = phi i32 [ %77, %74 ], [ 0, %3 ]
  %13 = phi i16* [ %76, %74 ], [ %2, %3 ]
  %14 = shl nuw nsw i64 %10, 5
  %15 = getelementptr i16, i16* %2, i64 %14
  %16 = bitcast i16* %15 to i8*
  %17 = or i64 %14, 16
  %18 = getelementptr i16, i16* %2, i64 %17
  %19 = bitcast i16* %18 to i8*
  %20 = mul i64 %10, %5
  %21 = add i64 %20, 32
  %22 = getelementptr i8, i8* %0, i64 %21
  %23 = getelementptr i8, i8* %0, i64 %20
  %24 = add i64 %7, %20
  %25 = getelementptr i8, i8* %0, i64 %24
  %26 = add i64 %20, %6
  %27 = getelementptr i8, i8* %0, i64 %26
  %28 = icmp ugt i8* %25, %16
  %29 = icmp ult i8* %27, %19
  %30 = and i1 %28, %29
  %31 = icmp ugt i8* %22, %16
  %32 = icmp ult i8* %23, %19
  %33 = and i1 %31, %32
  %34 = or i1 %30, %33
  br i1 %34, label %80, label %35

35:                                               ; preds = %9
  %36 = bitcast i8* %11 to <16 x i8>*
  %37 = load <16 x i8>, <16 x i8>* %36, align 1
  %38 = shufflevector <16 x i8> %37, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %39 = shufflevector <16 x i8> %37, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %40 = zext <8 x i8> %38 to <8 x i16>
  %41 = zext <8 x i8> %39 to <8 x i16>
  %42 = add nuw nsw <8 x i16> %41, %40
  %43 = getelementptr inbounds i8, i8* %11, i64 %6
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1
  %46 = shufflevector <16 x i8> %45, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %47 = shufflevector <16 x i8> %45, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %48 = zext <8 x i8> %46 to <8 x i16>
  %49 = add nuw nsw <8 x i16> %42, %48
  %50 = zext <8 x i8> %47 to <8 x i16>
  %51 = add nuw nsw <8 x i16> %49, %50
  %52 = shl nuw nsw <8 x i16> %51, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %53 = bitcast i16* %13 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %53, align 2, !alias.scope !228, !noalias !231
  %54 = getelementptr inbounds i8, i8* %11, i64 16
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = shufflevector <16 x i8> %56, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %58 = shufflevector <16 x i8> %56, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %59 = zext <8 x i8> %57 to <8 x i16>
  %60 = zext <8 x i8> %58 to <8 x i16>
  %61 = add nuw nsw <8 x i16> %60, %59
  %62 = getelementptr inbounds i8, i8* %11, i64 %8
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 1
  %65 = shufflevector <16 x i8> %64, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %66 = shufflevector <16 x i8> %64, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %67 = zext <8 x i8> %65 to <8 x i16>
  %68 = add nuw nsw <8 x i16> %61, %67
  %69 = zext <8 x i8> %66 to <8 x i16>
  %70 = add nuw nsw <8 x i16> %68, %69
  %71 = shl nuw nsw <8 x i16> %70, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %72 = getelementptr inbounds i16, i16* %13, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %73, align 2, !alias.scope !228, !noalias !231
  br label %74

74:                                               ; preds = %80, %35
  %75 = getelementptr inbounds i8, i8* %11, i64 %5
  %76 = getelementptr inbounds i16, i16* %13, i64 32
  %77 = add nuw nsw i32 %12, 2
  %78 = icmp ult i32 %77, 16
  %79 = add i64 %10, 1
  br i1 %78, label %9, label %105

80:                                               ; preds = %9, %80
  %81 = phi i64 [ %103, %80 ], [ 0, %9 ]
  %82 = add nsw i64 %81, %6
  %83 = getelementptr inbounds i8, i8* %11, i64 %81
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i16
  %86 = or i64 %81, 1
  %87 = getelementptr inbounds i8, i8* %11, i64 %86
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i16
  %90 = add nuw nsw i16 %89, %85
  %91 = getelementptr inbounds i8, i8* %11, i64 %82
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i16
  %94 = add nuw nsw i16 %90, %93
  %95 = add nsw i64 %82, 1
  %96 = getelementptr inbounds i8, i8* %11, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i16
  %99 = add nuw nsw i16 %94, %98
  %100 = shl nuw nsw i16 %99, 1
  %101 = lshr exact i64 %81, 1
  %102 = getelementptr inbounds i16, i16* %13, i64 %101
  store i16 %100, i16* %102, align 2
  %103 = add nuw nsw i64 %81, 2
  %104 = icmp ult i64 %103, 32
  br i1 %104, label %80, label %74, !llvm.loop !234

105:                                              ; preds = %74
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_420_4x16_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = shl i32 %1, 1
  %5 = sext i32 %4 to i64
  %6 = sext i32 %1 to i64
  %7 = add nsw i64 %6, 1
  %8 = add nsw i64 %6, 2
  %9 = add nsw i64 %6, 3
  %10 = load i8, i8* %0, align 1
  %11 = zext i8 %10 to i16
  %12 = getelementptr inbounds i8, i8* %0, i64 1
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i16
  %15 = add nuw nsw i16 %14, %11
  %16 = getelementptr inbounds i8, i8* %0, i64 %6
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i16
  %19 = add nuw nsw i16 %15, %18
  %20 = getelementptr inbounds i8, i8* %0, i64 %7
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i16
  %23 = add nuw nsw i16 %19, %22
  %24 = shl nuw nsw i16 %23, 1
  store i16 %24, i16* %2, align 2
  %25 = getelementptr inbounds i8, i8* %0, i64 2
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i16
  %28 = getelementptr inbounds i8, i8* %0, i64 3
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  %31 = add nuw nsw i16 %30, %27
  %32 = getelementptr inbounds i8, i8* %0, i64 %8
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i16
  %35 = add nuw nsw i16 %31, %34
  %36 = getelementptr inbounds i8, i8* %0, i64 %9
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i16
  %39 = add nuw nsw i16 %35, %38
  %40 = shl nuw nsw i16 %39, 1
  %41 = getelementptr inbounds i16, i16* %2, i64 1
  store i16 %40, i16* %41, align 2
  %42 = getelementptr inbounds i8, i8* %0, i64 %5
  %43 = getelementptr inbounds i16, i16* %2, i64 32
  %44 = load i8, i8* %42, align 1
  %45 = zext i8 %44 to i16
  %46 = getelementptr inbounds i8, i8* %42, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i16
  %49 = add nuw nsw i16 %48, %45
  %50 = getelementptr inbounds i8, i8* %42, i64 %6
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i16
  %53 = add nuw nsw i16 %49, %52
  %54 = getelementptr inbounds i8, i8* %42, i64 %7
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i16
  %57 = add nuw nsw i16 %53, %56
  %58 = shl nuw nsw i16 %57, 1
  store i16 %58, i16* %43, align 2
  %59 = getelementptr inbounds i8, i8* %42, i64 2
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i16
  %62 = getelementptr inbounds i8, i8* %42, i64 3
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i16
  %65 = add nuw nsw i16 %64, %61
  %66 = getelementptr inbounds i8, i8* %42, i64 %8
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i16
  %69 = add nuw nsw i16 %65, %68
  %70 = getelementptr inbounds i8, i8* %42, i64 %9
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i16
  %73 = add nuw nsw i16 %69, %72
  %74 = shl nuw nsw i16 %73, 1
  %75 = getelementptr inbounds i16, i16* %2, i64 33
  store i16 %74, i16* %75, align 2
  %76 = getelementptr inbounds i8, i8* %42, i64 %5
  %77 = getelementptr inbounds i16, i16* %2, i64 64
  %78 = load i8, i8* %76, align 1
  %79 = zext i8 %78 to i16
  %80 = getelementptr inbounds i8, i8* %76, i64 1
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i16
  %83 = add nuw nsw i16 %82, %79
  %84 = getelementptr inbounds i8, i8* %76, i64 %6
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i16
  %87 = add nuw nsw i16 %83, %86
  %88 = getelementptr inbounds i8, i8* %76, i64 %7
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i16
  %91 = add nuw nsw i16 %87, %90
  %92 = shl nuw nsw i16 %91, 1
  store i16 %92, i16* %77, align 2
  %93 = getelementptr inbounds i8, i8* %76, i64 2
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i16
  %96 = getelementptr inbounds i8, i8* %76, i64 3
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i16
  %99 = add nuw nsw i16 %98, %95
  %100 = getelementptr inbounds i8, i8* %76, i64 %8
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i16
  %103 = add nuw nsw i16 %99, %102
  %104 = getelementptr inbounds i8, i8* %76, i64 %9
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i16
  %107 = add nuw nsw i16 %103, %106
  %108 = shl nuw nsw i16 %107, 1
  %109 = getelementptr inbounds i16, i16* %2, i64 65
  store i16 %108, i16* %109, align 2
  %110 = getelementptr inbounds i8, i8* %76, i64 %5
  %111 = getelementptr inbounds i16, i16* %2, i64 96
  %112 = load i8, i8* %110, align 1
  %113 = zext i8 %112 to i16
  %114 = getelementptr inbounds i8, i8* %110, i64 1
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i16
  %117 = add nuw nsw i16 %116, %113
  %118 = getelementptr inbounds i8, i8* %110, i64 %6
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i16
  %121 = add nuw nsw i16 %117, %120
  %122 = getelementptr inbounds i8, i8* %110, i64 %7
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i16
  %125 = add nuw nsw i16 %121, %124
  %126 = shl nuw nsw i16 %125, 1
  store i16 %126, i16* %111, align 2
  %127 = getelementptr inbounds i8, i8* %110, i64 2
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i16
  %130 = getelementptr inbounds i8, i8* %110, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i16
  %133 = add nuw nsw i16 %132, %129
  %134 = getelementptr inbounds i8, i8* %110, i64 %8
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i16
  %137 = add nuw nsw i16 %133, %136
  %138 = getelementptr inbounds i8, i8* %110, i64 %9
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i16
  %141 = add nuw nsw i16 %137, %140
  %142 = shl nuw nsw i16 %141, 1
  %143 = getelementptr inbounds i16, i16* %2, i64 97
  store i16 %142, i16* %143, align 2
  %144 = getelementptr inbounds i8, i8* %110, i64 %5
  %145 = getelementptr inbounds i16, i16* %2, i64 128
  %146 = load i8, i8* %144, align 1
  %147 = zext i8 %146 to i16
  %148 = getelementptr inbounds i8, i8* %144, i64 1
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i16
  %151 = add nuw nsw i16 %150, %147
  %152 = getelementptr inbounds i8, i8* %144, i64 %6
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i16
  %155 = add nuw nsw i16 %151, %154
  %156 = getelementptr inbounds i8, i8* %144, i64 %7
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i16
  %159 = add nuw nsw i16 %155, %158
  %160 = shl nuw nsw i16 %159, 1
  store i16 %160, i16* %145, align 2
  %161 = getelementptr inbounds i8, i8* %144, i64 2
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i16
  %164 = getelementptr inbounds i8, i8* %144, i64 3
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i16
  %167 = add nuw nsw i16 %166, %163
  %168 = getelementptr inbounds i8, i8* %144, i64 %8
  %169 = load i8, i8* %168, align 1
  %170 = zext i8 %169 to i16
  %171 = add nuw nsw i16 %167, %170
  %172 = getelementptr inbounds i8, i8* %144, i64 %9
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i16
  %175 = add nuw nsw i16 %171, %174
  %176 = shl nuw nsw i16 %175, 1
  %177 = getelementptr inbounds i16, i16* %2, i64 129
  store i16 %176, i16* %177, align 2
  %178 = getelementptr inbounds i8, i8* %144, i64 %5
  %179 = getelementptr inbounds i16, i16* %2, i64 160
  %180 = load i8, i8* %178, align 1
  %181 = zext i8 %180 to i16
  %182 = getelementptr inbounds i8, i8* %178, i64 1
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i16
  %185 = add nuw nsw i16 %184, %181
  %186 = getelementptr inbounds i8, i8* %178, i64 %6
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i16
  %189 = add nuw nsw i16 %185, %188
  %190 = getelementptr inbounds i8, i8* %178, i64 %7
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i16
  %193 = add nuw nsw i16 %189, %192
  %194 = shl nuw nsw i16 %193, 1
  store i16 %194, i16* %179, align 2
  %195 = getelementptr inbounds i8, i8* %178, i64 2
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i16
  %198 = getelementptr inbounds i8, i8* %178, i64 3
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i16
  %201 = add nuw nsw i16 %200, %197
  %202 = getelementptr inbounds i8, i8* %178, i64 %8
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i16
  %205 = add nuw nsw i16 %201, %204
  %206 = getelementptr inbounds i8, i8* %178, i64 %9
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i16
  %209 = add nuw nsw i16 %205, %208
  %210 = shl nuw nsw i16 %209, 1
  %211 = getelementptr inbounds i16, i16* %2, i64 161
  store i16 %210, i16* %211, align 2
  %212 = getelementptr inbounds i8, i8* %178, i64 %5
  %213 = getelementptr inbounds i16, i16* %2, i64 192
  %214 = load i8, i8* %212, align 1
  %215 = zext i8 %214 to i16
  %216 = getelementptr inbounds i8, i8* %212, i64 1
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i16
  %219 = add nuw nsw i16 %218, %215
  %220 = getelementptr inbounds i8, i8* %212, i64 %6
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i16
  %223 = add nuw nsw i16 %219, %222
  %224 = getelementptr inbounds i8, i8* %212, i64 %7
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i16
  %227 = add nuw nsw i16 %223, %226
  %228 = shl nuw nsw i16 %227, 1
  store i16 %228, i16* %213, align 2
  %229 = getelementptr inbounds i8, i8* %212, i64 2
  %230 = load i8, i8* %229, align 1
  %231 = zext i8 %230 to i16
  %232 = getelementptr inbounds i8, i8* %212, i64 3
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i16
  %235 = add nuw nsw i16 %234, %231
  %236 = getelementptr inbounds i8, i8* %212, i64 %8
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i16
  %239 = add nuw nsw i16 %235, %238
  %240 = getelementptr inbounds i8, i8* %212, i64 %9
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i16
  %243 = add nuw nsw i16 %239, %242
  %244 = shl nuw nsw i16 %243, 1
  %245 = getelementptr inbounds i16, i16* %2, i64 193
  store i16 %244, i16* %245, align 2
  %246 = getelementptr inbounds i8, i8* %212, i64 %5
  %247 = getelementptr inbounds i16, i16* %2, i64 224
  %248 = load i8, i8* %246, align 1
  %249 = zext i8 %248 to i16
  %250 = getelementptr inbounds i8, i8* %246, i64 1
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i16
  %253 = add nuw nsw i16 %252, %249
  %254 = getelementptr inbounds i8, i8* %246, i64 %6
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i16
  %257 = add nuw nsw i16 %253, %256
  %258 = getelementptr inbounds i8, i8* %246, i64 %7
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %259 to i16
  %261 = add nuw nsw i16 %257, %260
  %262 = shl nuw nsw i16 %261, 1
  store i16 %262, i16* %247, align 2
  %263 = getelementptr inbounds i8, i8* %246, i64 2
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i16
  %266 = getelementptr inbounds i8, i8* %246, i64 3
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i16
  %269 = add nuw nsw i16 %268, %265
  %270 = getelementptr inbounds i8, i8* %246, i64 %8
  %271 = load i8, i8* %270, align 1
  %272 = zext i8 %271 to i16
  %273 = add nuw nsw i16 %269, %272
  %274 = getelementptr inbounds i8, i8* %246, i64 %9
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i16
  %277 = add nuw nsw i16 %273, %276
  %278 = shl nuw nsw i16 %277, 1
  %279 = getelementptr inbounds i16, i16* %2, i64 225
  store i16 %278, i16* %279, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_420_16x4_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  %5 = add nsw i64 %4, 1
  %6 = add nsw i64 %4, 2
  %7 = add nsw i64 %4, 3
  %8 = add nsw i64 %4, 4
  %9 = add nsw i64 %4, 5
  %10 = add nsw i64 %4, 6
  %11 = add nsw i64 %4, 7
  %12 = add nsw i64 %4, 8
  %13 = add nsw i64 %4, 9
  %14 = add nsw i64 %4, 10
  %15 = add nsw i64 %4, 11
  %16 = add nsw i64 %4, 12
  %17 = add nsw i64 %4, 13
  %18 = add nsw i64 %4, 14
  %19 = add nsw i64 %4, 15
  %20 = shl i32 %1, 1
  %21 = sext i32 %20 to i64
  %22 = load i8, i8* %0, align 1
  %23 = zext i8 %22 to i16
  %24 = getelementptr inbounds i8, i8* %0, i64 1
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i16
  %27 = add nuw nsw i16 %26, %23
  %28 = getelementptr inbounds i8, i8* %0, i64 %4
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  %31 = add nuw nsw i16 %27, %30
  %32 = getelementptr inbounds i8, i8* %0, i64 %5
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i16
  %35 = add nuw nsw i16 %31, %34
  %36 = shl nuw nsw i16 %35, 1
  store i16 %36, i16* %2, align 2
  %37 = getelementptr inbounds i8, i8* %0, i64 2
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  %40 = getelementptr inbounds i8, i8* %0, i64 3
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i16
  %43 = add nuw nsw i16 %42, %39
  %44 = getelementptr inbounds i8, i8* %0, i64 %6
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i16
  %47 = add nuw nsw i16 %43, %46
  %48 = getelementptr inbounds i8, i8* %0, i64 %7
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i16
  %51 = add nuw nsw i16 %47, %50
  %52 = shl nuw nsw i16 %51, 1
  %53 = getelementptr inbounds i16, i16* %2, i64 1
  store i16 %52, i16* %53, align 2
  %54 = getelementptr inbounds i8, i8* %0, i64 4
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i16
  %57 = getelementptr inbounds i8, i8* %0, i64 5
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i16
  %60 = add nuw nsw i16 %59, %56
  %61 = getelementptr inbounds i8, i8* %0, i64 %8
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  %64 = add nuw nsw i16 %60, %63
  %65 = getelementptr inbounds i8, i8* %0, i64 %9
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i16
  %68 = add nuw nsw i16 %64, %67
  %69 = shl nuw nsw i16 %68, 1
  %70 = getelementptr inbounds i16, i16* %2, i64 2
  store i16 %69, i16* %70, align 2
  %71 = getelementptr inbounds i8, i8* %0, i64 6
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i16
  %74 = getelementptr inbounds i8, i8* %0, i64 7
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i16
  %77 = add nuw nsw i16 %76, %73
  %78 = getelementptr inbounds i8, i8* %0, i64 %10
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i16
  %81 = add nuw nsw i16 %77, %80
  %82 = getelementptr inbounds i8, i8* %0, i64 %11
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i16
  %85 = add nuw nsw i16 %81, %84
  %86 = shl nuw nsw i16 %85, 1
  %87 = getelementptr inbounds i16, i16* %2, i64 3
  store i16 %86, i16* %87, align 2
  %88 = getelementptr inbounds i8, i8* %0, i64 8
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i16
  %91 = getelementptr inbounds i8, i8* %0, i64 9
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i16
  %94 = add nuw nsw i16 %93, %90
  %95 = getelementptr inbounds i8, i8* %0, i64 %12
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i16
  %98 = add nuw nsw i16 %94, %97
  %99 = getelementptr inbounds i8, i8* %0, i64 %13
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i16
  %102 = add nuw nsw i16 %98, %101
  %103 = shl nuw nsw i16 %102, 1
  %104 = getelementptr inbounds i16, i16* %2, i64 4
  store i16 %103, i16* %104, align 2
  %105 = getelementptr inbounds i8, i8* %0, i64 10
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i16
  %108 = getelementptr inbounds i8, i8* %0, i64 11
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i16
  %111 = add nuw nsw i16 %110, %107
  %112 = getelementptr inbounds i8, i8* %0, i64 %14
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i16
  %115 = add nuw nsw i16 %111, %114
  %116 = getelementptr inbounds i8, i8* %0, i64 %15
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i16
  %119 = add nuw nsw i16 %115, %118
  %120 = shl nuw nsw i16 %119, 1
  %121 = getelementptr inbounds i16, i16* %2, i64 5
  store i16 %120, i16* %121, align 2
  %122 = getelementptr inbounds i8, i8* %0, i64 12
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i16
  %125 = getelementptr inbounds i8, i8* %0, i64 13
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i16
  %128 = add nuw nsw i16 %127, %124
  %129 = getelementptr inbounds i8, i8* %0, i64 %16
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i16
  %132 = add nuw nsw i16 %128, %131
  %133 = getelementptr inbounds i8, i8* %0, i64 %17
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i16
  %136 = add nuw nsw i16 %132, %135
  %137 = shl nuw nsw i16 %136, 1
  %138 = getelementptr inbounds i16, i16* %2, i64 6
  store i16 %137, i16* %138, align 2
  %139 = getelementptr inbounds i8, i8* %0, i64 14
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i16
  %142 = getelementptr inbounds i8, i8* %0, i64 15
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i16
  %145 = add nuw nsw i16 %144, %141
  %146 = getelementptr inbounds i8, i8* %0, i64 %18
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i16
  %149 = add nuw nsw i16 %145, %148
  %150 = getelementptr inbounds i8, i8* %0, i64 %19
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i16
  %153 = add nuw nsw i16 %149, %152
  %154 = shl nuw nsw i16 %153, 1
  %155 = getelementptr inbounds i16, i16* %2, i64 7
  store i16 %154, i16* %155, align 2
  %156 = getelementptr inbounds i8, i8* %0, i64 %21
  %157 = getelementptr inbounds i16, i16* %2, i64 32
  %158 = load i8, i8* %156, align 1
  %159 = zext i8 %158 to i16
  %160 = getelementptr inbounds i8, i8* %156, i64 1
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i16
  %163 = add nuw nsw i16 %162, %159
  %164 = getelementptr inbounds i8, i8* %156, i64 %4
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i16
  %167 = add nuw nsw i16 %163, %166
  %168 = getelementptr inbounds i8, i8* %156, i64 %5
  %169 = load i8, i8* %168, align 1
  %170 = zext i8 %169 to i16
  %171 = add nuw nsw i16 %167, %170
  %172 = shl nuw nsw i16 %171, 1
  store i16 %172, i16* %157, align 2
  %173 = getelementptr inbounds i8, i8* %156, i64 2
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i16
  %176 = getelementptr inbounds i8, i8* %156, i64 3
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i16
  %179 = add nuw nsw i16 %178, %175
  %180 = getelementptr inbounds i8, i8* %156, i64 %6
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i16
  %183 = add nuw nsw i16 %179, %182
  %184 = getelementptr inbounds i8, i8* %156, i64 %7
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i16
  %187 = add nuw nsw i16 %183, %186
  %188 = shl nuw nsw i16 %187, 1
  %189 = getelementptr inbounds i16, i16* %2, i64 33
  store i16 %188, i16* %189, align 2
  %190 = getelementptr inbounds i8, i8* %156, i64 4
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i16
  %193 = getelementptr inbounds i8, i8* %156, i64 5
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i16
  %196 = add nuw nsw i16 %195, %192
  %197 = getelementptr inbounds i8, i8* %156, i64 %8
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i16
  %200 = add nuw nsw i16 %196, %199
  %201 = getelementptr inbounds i8, i8* %156, i64 %9
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i16
  %204 = add nuw nsw i16 %200, %203
  %205 = shl nuw nsw i16 %204, 1
  %206 = getelementptr inbounds i16, i16* %2, i64 34
  store i16 %205, i16* %206, align 2
  %207 = getelementptr inbounds i8, i8* %156, i64 6
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i16
  %210 = getelementptr inbounds i8, i8* %156, i64 7
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i16
  %213 = add nuw nsw i16 %212, %209
  %214 = getelementptr inbounds i8, i8* %156, i64 %10
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i16
  %217 = add nuw nsw i16 %213, %216
  %218 = getelementptr inbounds i8, i8* %156, i64 %11
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i16
  %221 = add nuw nsw i16 %217, %220
  %222 = shl nuw nsw i16 %221, 1
  %223 = getelementptr inbounds i16, i16* %2, i64 35
  store i16 %222, i16* %223, align 2
  %224 = getelementptr inbounds i8, i8* %156, i64 8
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i16
  %227 = getelementptr inbounds i8, i8* %156, i64 9
  %228 = load i8, i8* %227, align 1
  %229 = zext i8 %228 to i16
  %230 = add nuw nsw i16 %229, %226
  %231 = getelementptr inbounds i8, i8* %156, i64 %12
  %232 = load i8, i8* %231, align 1
  %233 = zext i8 %232 to i16
  %234 = add nuw nsw i16 %230, %233
  %235 = getelementptr inbounds i8, i8* %156, i64 %13
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i16
  %238 = add nuw nsw i16 %234, %237
  %239 = shl nuw nsw i16 %238, 1
  %240 = getelementptr inbounds i16, i16* %2, i64 36
  store i16 %239, i16* %240, align 2
  %241 = getelementptr inbounds i8, i8* %156, i64 10
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i16
  %244 = getelementptr inbounds i8, i8* %156, i64 11
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i16
  %247 = add nuw nsw i16 %246, %243
  %248 = getelementptr inbounds i8, i8* %156, i64 %14
  %249 = load i8, i8* %248, align 1
  %250 = zext i8 %249 to i16
  %251 = add nuw nsw i16 %247, %250
  %252 = getelementptr inbounds i8, i8* %156, i64 %15
  %253 = load i8, i8* %252, align 1
  %254 = zext i8 %253 to i16
  %255 = add nuw nsw i16 %251, %254
  %256 = shl nuw nsw i16 %255, 1
  %257 = getelementptr inbounds i16, i16* %2, i64 37
  store i16 %256, i16* %257, align 2
  %258 = getelementptr inbounds i8, i8* %156, i64 12
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %259 to i16
  %261 = getelementptr inbounds i8, i8* %156, i64 13
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i16
  %264 = add nuw nsw i16 %263, %260
  %265 = getelementptr inbounds i8, i8* %156, i64 %16
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i16
  %268 = add nuw nsw i16 %264, %267
  %269 = getelementptr inbounds i8, i8* %156, i64 %17
  %270 = load i8, i8* %269, align 1
  %271 = zext i8 %270 to i16
  %272 = add nuw nsw i16 %268, %271
  %273 = shl nuw nsw i16 %272, 1
  %274 = getelementptr inbounds i16, i16* %2, i64 38
  store i16 %273, i16* %274, align 2
  %275 = getelementptr inbounds i8, i8* %156, i64 14
  %276 = load i8, i8* %275, align 1
  %277 = zext i8 %276 to i16
  %278 = getelementptr inbounds i8, i8* %156, i64 15
  %279 = load i8, i8* %278, align 1
  %280 = zext i8 %279 to i16
  %281 = add nuw nsw i16 %280, %277
  %282 = getelementptr inbounds i8, i8* %156, i64 %18
  %283 = load i8, i8* %282, align 1
  %284 = zext i8 %283 to i16
  %285 = add nuw nsw i16 %281, %284
  %286 = getelementptr inbounds i8, i8* %156, i64 %19
  %287 = load i8, i8* %286, align 1
  %288 = zext i8 %287 to i16
  %289 = add nuw nsw i16 %285, %288
  %290 = shl nuw nsw i16 %289, 1
  %291 = getelementptr inbounds i16, i16* %2, i64 39
  store i16 %290, i16* %291, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_420_8x32_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = shl i32 %1, 1
  %5 = sext i32 %4 to i64
  %6 = sext i32 %1 to i64
  %7 = add nsw i64 %6, 1
  %8 = add nsw i64 %6, 2
  %9 = add nsw i64 %6, 3
  %10 = add nsw i64 %6, 4
  %11 = add nsw i64 %6, 5
  %12 = add nsw i64 %6, 6
  %13 = add nsw i64 %6, 7
  br label %14

14:                                               ; preds = %14, %3
  %15 = phi i8* [ %0, %3 ], [ %84, %14 ]
  %16 = phi i32 [ 0, %3 ], [ %86, %14 ]
  %17 = phi i16* [ %2, %3 ], [ %85, %14 ]
  %18 = load i8, i8* %15, align 1
  %19 = zext i8 %18 to i16
  %20 = getelementptr inbounds i8, i8* %15, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i16
  %23 = add nuw nsw i16 %22, %19
  %24 = getelementptr inbounds i8, i8* %15, i64 %6
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i16
  %27 = add nuw nsw i16 %23, %26
  %28 = getelementptr inbounds i8, i8* %15, i64 %7
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  %31 = add nuw nsw i16 %27, %30
  %32 = shl nuw nsw i16 %31, 1
  store i16 %32, i16* %17, align 2
  %33 = getelementptr inbounds i8, i8* %15, i64 2
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i16
  %36 = getelementptr inbounds i8, i8* %15, i64 3
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i16
  %39 = add nuw nsw i16 %38, %35
  %40 = getelementptr inbounds i8, i8* %15, i64 %8
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i16
  %43 = add nuw nsw i16 %39, %42
  %44 = getelementptr inbounds i8, i8* %15, i64 %9
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i16
  %47 = add nuw nsw i16 %43, %46
  %48 = shl nuw nsw i16 %47, 1
  %49 = getelementptr inbounds i16, i16* %17, i64 1
  store i16 %48, i16* %49, align 2
  %50 = getelementptr inbounds i8, i8* %15, i64 4
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i16
  %53 = getelementptr inbounds i8, i8* %15, i64 5
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i16
  %56 = add nuw nsw i16 %55, %52
  %57 = getelementptr inbounds i8, i8* %15, i64 %10
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i16
  %60 = add nuw nsw i16 %56, %59
  %61 = getelementptr inbounds i8, i8* %15, i64 %11
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  %64 = add nuw nsw i16 %60, %63
  %65 = shl nuw nsw i16 %64, 1
  %66 = getelementptr inbounds i16, i16* %17, i64 2
  store i16 %65, i16* %66, align 2
  %67 = getelementptr inbounds i8, i8* %15, i64 6
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i16
  %70 = getelementptr inbounds i8, i8* %15, i64 7
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i16
  %73 = add nuw nsw i16 %72, %69
  %74 = getelementptr inbounds i8, i8* %15, i64 %12
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i16
  %77 = add nuw nsw i16 %73, %76
  %78 = getelementptr inbounds i8, i8* %15, i64 %13
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i16
  %81 = add nuw nsw i16 %77, %80
  %82 = shl nuw nsw i16 %81, 1
  %83 = getelementptr inbounds i16, i16* %17, i64 3
  store i16 %82, i16* %83, align 2
  %84 = getelementptr inbounds i8, i8* %15, i64 %5
  %85 = getelementptr inbounds i16, i16* %17, i64 32
  %86 = add nuw nsw i32 %16, 2
  %87 = icmp ult i32 %86, 32
  br i1 %87, label %14, label %88

88:                                               ; preds = %14
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_420_32x8_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = bitcast i16* %2 to i8*
  %5 = shl i32 %1, 1
  %6 = sext i32 %5 to i64
  %7 = sext i32 %1 to i64
  %8 = getelementptr i16, i16* %2, i64 16
  %9 = bitcast i16* %8 to i8*
  %10 = getelementptr i8, i8* %0, i64 %7
  %11 = add nsw i64 %7, 32
  %12 = getelementptr i8, i8* %0, i64 %11
  %13 = getelementptr i8, i8* %0, i64 32
  %14 = icmp ugt i8* %12, %4
  %15 = icmp ult i8* %10, %9
  %16 = and i1 %14, %15
  %17 = icmp ugt i8* %13, %4
  %18 = icmp ugt i8* %9, %0
  %19 = and i1 %17, %18
  %20 = or i1 %16, %19
  br i1 %20, label %120, label %21

21:                                               ; preds = %3
  %22 = bitcast i8* %0 to <16 x i8>*
  %23 = load <16 x i8>, <16 x i8>* %22, align 1
  %24 = shufflevector <16 x i8> %23, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %25 = shufflevector <16 x i8> %23, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %26 = zext <8 x i8> %24 to <8 x i16>
  %27 = zext <8 x i8> %25 to <8 x i16>
  %28 = add nuw nsw <8 x i16> %27, %26
  %29 = getelementptr inbounds i8, i8* %0, i64 %7
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = shufflevector <16 x i8> %31, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %33 = shufflevector <16 x i8> %31, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %34 = zext <8 x i8> %32 to <8 x i16>
  %35 = add nuw nsw <8 x i16> %28, %34
  %36 = zext <8 x i8> %33 to <8 x i16>
  %37 = add nuw nsw <8 x i16> %35, %36
  %38 = shl nuw nsw <8 x i16> %37, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %39 = bitcast i16* %2 to <8 x i16>*
  store <8 x i16> %38, <8 x i16>* %39, align 2, !alias.scope !235, !noalias !238
  %40 = add nsw i64 %7, 16
  %41 = getelementptr inbounds i8, i8* %0, i64 16
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = shufflevector <16 x i8> %43, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %45 = shufflevector <16 x i8> %43, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %46 = zext <8 x i8> %44 to <8 x i16>
  %47 = zext <8 x i8> %45 to <8 x i16>
  %48 = add nuw nsw <8 x i16> %47, %46
  %49 = getelementptr inbounds i8, i8* %0, i64 %40
  %50 = bitcast i8* %49 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 1
  %52 = shufflevector <16 x i8> %51, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %53 = shufflevector <16 x i8> %51, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %54 = zext <8 x i8> %52 to <8 x i16>
  %55 = add nuw nsw <8 x i16> %48, %54
  %56 = zext <8 x i8> %53 to <8 x i16>
  %57 = add nuw nsw <8 x i16> %55, %56
  %58 = shl nuw nsw <8 x i16> %57, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %59 = getelementptr inbounds i16, i16* %2, i64 8
  %60 = bitcast i16* %59 to <8 x i16>*
  store <8 x i16> %58, <8 x i16>* %60, align 2, !alias.scope !235, !noalias !238
  br label %61

61:                                               ; preds = %120, %21
  %62 = getelementptr inbounds i8, i8* %0, i64 %6
  %63 = getelementptr inbounds i16, i16* %2, i64 32
  %64 = bitcast i16* %63 to i8*
  %65 = getelementptr i16, i16* %2, i64 48
  %66 = bitcast i16* %65 to i8*
  %67 = add nsw i64 %7, %6
  %68 = getelementptr i8, i8* %0, i64 %67
  %69 = add nsw i64 %67, 32
  %70 = getelementptr i8, i8* %0, i64 %69
  %71 = add nsw i64 %6, 32
  %72 = getelementptr i8, i8* %0, i64 %71
  %73 = icmp ugt i8* %70, %64
  %74 = icmp ult i8* %68, %66
  %75 = and i1 %73, %74
  %76 = icmp ugt i8* %72, %64
  %77 = icmp ult i8* %62, %66
  %78 = and i1 %76, %77
  %79 = or i1 %75, %78
  br i1 %79, label %145, label %80

80:                                               ; preds = %61
  %81 = bitcast i8* %62 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 1
  %83 = shufflevector <16 x i8> %82, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %84 = shufflevector <16 x i8> %82, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %85 = zext <8 x i8> %83 to <8 x i16>
  %86 = zext <8 x i8> %84 to <8 x i16>
  %87 = add nuw nsw <8 x i16> %86, %85
  %88 = getelementptr inbounds i8, i8* %62, i64 %7
  %89 = bitcast i8* %88 to <16 x i8>*
  %90 = load <16 x i8>, <16 x i8>* %89, align 1
  %91 = shufflevector <16 x i8> %90, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %92 = shufflevector <16 x i8> %90, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %93 = zext <8 x i8> %91 to <8 x i16>
  %94 = add nuw nsw <8 x i16> %87, %93
  %95 = zext <8 x i8> %92 to <8 x i16>
  %96 = add nuw nsw <8 x i16> %94, %95
  %97 = shl nuw nsw <8 x i16> %96, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %98 = bitcast i16* %63 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %98, align 2, !alias.scope !241, !noalias !244
  %99 = add nsw i64 %7, 16
  %100 = getelementptr inbounds i8, i8* %62, i64 16
  %101 = bitcast i8* %100 to <16 x i8>*
  %102 = load <16 x i8>, <16 x i8>* %101, align 1
  %103 = shufflevector <16 x i8> %102, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %104 = shufflevector <16 x i8> %102, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %105 = zext <8 x i8> %103 to <8 x i16>
  %106 = zext <8 x i8> %104 to <8 x i16>
  %107 = add nuw nsw <8 x i16> %106, %105
  %108 = getelementptr inbounds i8, i8* %62, i64 %99
  %109 = bitcast i8* %108 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 1
  %111 = shufflevector <16 x i8> %110, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %112 = shufflevector <16 x i8> %110, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %113 = zext <8 x i8> %111 to <8 x i16>
  %114 = add nuw nsw <8 x i16> %107, %113
  %115 = zext <8 x i8> %112 to <8 x i16>
  %116 = add nuw nsw <8 x i16> %114, %115
  %117 = shl nuw nsw <8 x i16> %116, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %118 = getelementptr inbounds i16, i16* %2, i64 40
  %119 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %119, align 2, !alias.scope !241, !noalias !244
  br label %170

120:                                              ; preds = %3, %120
  %121 = phi i64 [ %143, %120 ], [ 0, %3 ]
  %122 = add nsw i64 %121, %7
  %123 = getelementptr inbounds i8, i8* %0, i64 %121
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i16
  %126 = or i64 %121, 1
  %127 = getelementptr inbounds i8, i8* %0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i16
  %130 = add nuw nsw i16 %129, %125
  %131 = getelementptr inbounds i8, i8* %0, i64 %122
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i16
  %134 = add nuw nsw i16 %130, %133
  %135 = add nsw i64 %122, 1
  %136 = getelementptr inbounds i8, i8* %0, i64 %135
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i16
  %139 = add nuw nsw i16 %134, %138
  %140 = shl nuw nsw i16 %139, 1
  %141 = lshr exact i64 %121, 1
  %142 = getelementptr inbounds i16, i16* %2, i64 %141
  store i16 %140, i16* %142, align 2
  %143 = add nuw nsw i64 %121, 2
  %144 = icmp ult i64 %143, 32
  br i1 %144, label %120, label %61, !llvm.loop !247

145:                                              ; preds = %61, %145
  %146 = phi i64 [ %168, %145 ], [ 0, %61 ]
  %147 = add nsw i64 %146, %7
  %148 = getelementptr inbounds i8, i8* %62, i64 %146
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i16
  %151 = or i64 %146, 1
  %152 = getelementptr inbounds i8, i8* %62, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i16
  %155 = add nuw nsw i16 %154, %150
  %156 = getelementptr inbounds i8, i8* %62, i64 %147
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i16
  %159 = add nuw nsw i16 %155, %158
  %160 = add nsw i64 %147, 1
  %161 = getelementptr inbounds i8, i8* %62, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i16
  %164 = add nuw nsw i16 %159, %163
  %165 = shl nuw nsw i16 %164, 1
  %166 = lshr exact i64 %146, 1
  %167 = getelementptr inbounds i16, i16* %63, i64 %166
  store i16 %165, i16* %167, align 2
  %168 = add nuw nsw i64 %146, 2
  %169 = icmp ult i64 %168, 32
  br i1 %169, label %145, label %170, !llvm.loop !248

170:                                              ; preds = %145, %80
  %171 = getelementptr inbounds i8, i8* %62, i64 %6
  %172 = getelementptr inbounds i16, i16* %2, i64 64
  %173 = bitcast i16* %172 to i8*
  %174 = getelementptr i16, i16* %2, i64 80
  %175 = bitcast i16* %174 to i8*
  %176 = shl nsw i64 %6, 1
  %177 = add nsw i64 %176, %7
  %178 = getelementptr i8, i8* %0, i64 %177
  %179 = add nsw i64 %177, 32
  %180 = getelementptr i8, i8* %0, i64 %179
  %181 = add nsw i64 %176, 32
  %182 = getelementptr i8, i8* %0, i64 %181
  %183 = icmp ugt i8* %180, %173
  %184 = icmp ult i8* %178, %175
  %185 = and i1 %183, %184
  %186 = icmp ugt i8* %182, %173
  %187 = icmp ult i8* %171, %175
  %188 = and i1 %186, %187
  %189 = or i1 %185, %188
  br i1 %189, label %230, label %190

190:                                              ; preds = %170
  %191 = bitcast i8* %171 to <16 x i8>*
  %192 = load <16 x i8>, <16 x i8>* %191, align 1
  %193 = shufflevector <16 x i8> %192, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %194 = shufflevector <16 x i8> %192, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %195 = zext <8 x i8> %193 to <8 x i16>
  %196 = zext <8 x i8> %194 to <8 x i16>
  %197 = add nuw nsw <8 x i16> %196, %195
  %198 = getelementptr inbounds i8, i8* %171, i64 %7
  %199 = bitcast i8* %198 to <16 x i8>*
  %200 = load <16 x i8>, <16 x i8>* %199, align 1
  %201 = shufflevector <16 x i8> %200, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %202 = shufflevector <16 x i8> %200, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %203 = zext <8 x i8> %201 to <8 x i16>
  %204 = add nuw nsw <8 x i16> %197, %203
  %205 = zext <8 x i8> %202 to <8 x i16>
  %206 = add nuw nsw <8 x i16> %204, %205
  %207 = shl nuw nsw <8 x i16> %206, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %208 = bitcast i16* %172 to <8 x i16>*
  store <8 x i16> %207, <8 x i16>* %208, align 2, !alias.scope !249, !noalias !252
  %209 = add nsw i64 %7, 16
  %210 = getelementptr inbounds i8, i8* %171, i64 16
  %211 = bitcast i8* %210 to <16 x i8>*
  %212 = load <16 x i8>, <16 x i8>* %211, align 1
  %213 = shufflevector <16 x i8> %212, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %214 = shufflevector <16 x i8> %212, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %215 = zext <8 x i8> %213 to <8 x i16>
  %216 = zext <8 x i8> %214 to <8 x i16>
  %217 = add nuw nsw <8 x i16> %216, %215
  %218 = getelementptr inbounds i8, i8* %171, i64 %209
  %219 = bitcast i8* %218 to <16 x i8>*
  %220 = load <16 x i8>, <16 x i8>* %219, align 1
  %221 = shufflevector <16 x i8> %220, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %222 = shufflevector <16 x i8> %220, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %223 = zext <8 x i8> %221 to <8 x i16>
  %224 = add nuw nsw <8 x i16> %217, %223
  %225 = zext <8 x i8> %222 to <8 x i16>
  %226 = add nuw nsw <8 x i16> %224, %225
  %227 = shl nuw nsw <8 x i16> %226, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %228 = getelementptr inbounds i16, i16* %2, i64 72
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %227, <8 x i16>* %229, align 2, !alias.scope !249, !noalias !252
  br label %255

230:                                              ; preds = %170, %230
  %231 = phi i64 [ %253, %230 ], [ 0, %170 ]
  %232 = add nsw i64 %231, %7
  %233 = getelementptr inbounds i8, i8* %171, i64 %231
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i16
  %236 = or i64 %231, 1
  %237 = getelementptr inbounds i8, i8* %171, i64 %236
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i16
  %240 = add nuw nsw i16 %239, %235
  %241 = getelementptr inbounds i8, i8* %171, i64 %232
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i16
  %244 = add nuw nsw i16 %240, %243
  %245 = add nsw i64 %232, 1
  %246 = getelementptr inbounds i8, i8* %171, i64 %245
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i16
  %249 = add nuw nsw i16 %244, %248
  %250 = shl nuw nsw i16 %249, 1
  %251 = lshr exact i64 %231, 1
  %252 = getelementptr inbounds i16, i16* %172, i64 %251
  store i16 %250, i16* %252, align 2
  %253 = add nuw nsw i64 %231, 2
  %254 = icmp ult i64 %253, 32
  br i1 %254, label %230, label %255, !llvm.loop !255

255:                                              ; preds = %230, %190
  %256 = getelementptr inbounds i8, i8* %171, i64 %6
  %257 = getelementptr inbounds i16, i16* %2, i64 96
  %258 = bitcast i16* %257 to i8*
  %259 = getelementptr i16, i16* %2, i64 112
  %260 = bitcast i16* %259 to i8*
  %261 = mul nsw i64 %6, 3
  %262 = add nsw i64 %261, %7
  %263 = getelementptr i8, i8* %0, i64 %262
  %264 = add nsw i64 %262, 32
  %265 = getelementptr i8, i8* %0, i64 %264
  %266 = add nsw i64 %261, 32
  %267 = getelementptr i8, i8* %0, i64 %266
  %268 = icmp ugt i8* %265, %258
  %269 = icmp ult i8* %263, %260
  %270 = and i1 %268, %269
  %271 = icmp ugt i8* %267, %258
  %272 = icmp ult i8* %256, %260
  %273 = and i1 %271, %272
  %274 = or i1 %270, %273
  br i1 %274, label %315, label %275

275:                                              ; preds = %255
  %276 = bitcast i8* %256 to <16 x i8>*
  %277 = load <16 x i8>, <16 x i8>* %276, align 1
  %278 = shufflevector <16 x i8> %277, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %279 = shufflevector <16 x i8> %277, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %280 = zext <8 x i8> %278 to <8 x i16>
  %281 = zext <8 x i8> %279 to <8 x i16>
  %282 = add nuw nsw <8 x i16> %281, %280
  %283 = getelementptr inbounds i8, i8* %256, i64 %7
  %284 = bitcast i8* %283 to <16 x i8>*
  %285 = load <16 x i8>, <16 x i8>* %284, align 1
  %286 = shufflevector <16 x i8> %285, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %287 = shufflevector <16 x i8> %285, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %288 = zext <8 x i8> %286 to <8 x i16>
  %289 = add nuw nsw <8 x i16> %282, %288
  %290 = zext <8 x i8> %287 to <8 x i16>
  %291 = add nuw nsw <8 x i16> %289, %290
  %292 = shl nuw nsw <8 x i16> %291, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %293 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %293, align 2, !alias.scope !256, !noalias !259
  %294 = add nsw i64 %7, 16
  %295 = getelementptr inbounds i8, i8* %256, i64 16
  %296 = bitcast i8* %295 to <16 x i8>*
  %297 = load <16 x i8>, <16 x i8>* %296, align 1
  %298 = shufflevector <16 x i8> %297, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %299 = shufflevector <16 x i8> %297, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %300 = zext <8 x i8> %298 to <8 x i16>
  %301 = zext <8 x i8> %299 to <8 x i16>
  %302 = add nuw nsw <8 x i16> %301, %300
  %303 = getelementptr inbounds i8, i8* %256, i64 %294
  %304 = bitcast i8* %303 to <16 x i8>*
  %305 = load <16 x i8>, <16 x i8>* %304, align 1
  %306 = shufflevector <16 x i8> %305, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %307 = shufflevector <16 x i8> %305, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %308 = zext <8 x i8> %306 to <8 x i16>
  %309 = add nuw nsw <8 x i16> %302, %308
  %310 = zext <8 x i8> %307 to <8 x i16>
  %311 = add nuw nsw <8 x i16> %309, %310
  %312 = shl nuw nsw <8 x i16> %311, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>
  %313 = getelementptr inbounds i16, i16* %2, i64 104
  %314 = bitcast i16* %313 to <8 x i16>*
  store <8 x i16> %312, <8 x i16>* %314, align 2, !alias.scope !256, !noalias !259
  br label %340

315:                                              ; preds = %255, %315
  %316 = phi i64 [ %338, %315 ], [ 0, %255 ]
  %317 = add nsw i64 %316, %7
  %318 = getelementptr inbounds i8, i8* %256, i64 %316
  %319 = load i8, i8* %318, align 1
  %320 = zext i8 %319 to i16
  %321 = or i64 %316, 1
  %322 = getelementptr inbounds i8, i8* %256, i64 %321
  %323 = load i8, i8* %322, align 1
  %324 = zext i8 %323 to i16
  %325 = add nuw nsw i16 %324, %320
  %326 = getelementptr inbounds i8, i8* %256, i64 %317
  %327 = load i8, i8* %326, align 1
  %328 = zext i8 %327 to i16
  %329 = add nuw nsw i16 %325, %328
  %330 = add nsw i64 %317, 1
  %331 = getelementptr inbounds i8, i8* %256, i64 %330
  %332 = load i8, i8* %331, align 1
  %333 = zext i8 %332 to i16
  %334 = add nuw nsw i16 %329, %333
  %335 = shl nuw nsw i16 %334, 1
  %336 = lshr exact i64 %316, 1
  %337 = getelementptr inbounds i16, i16* %257, i64 %336
  store i16 %335, i16* %337, align 2
  %338 = add nuw nsw i64 %316, 2
  %339 = icmp ult i64 %338, 32
  br i1 %339, label %315, label %340, !llvm.loop !262

340:                                              ; preds = %315, %275
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void (i8*, i32, i16*)* @cfl_get_luma_subsampling_420_lbd_c(i8 zeroext) local_unnamed_addr #3 {
  %2 = zext i8 %0 to i64
  %3 = getelementptr inbounds [19 x void (i8*, i32, i16*)*], [19 x void (i8*, i32, i16*)*]* @cfl_get_luma_subsampling_420_lbd_c.subfn_420, i64 0, i64 %2
  %4 = load void (i8*, i32, i16*)*, void (i8*, i32, i16*)** %3, align 8
  ret void (i8*, i32, i16*)* %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_422_4x4_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  %5 = load i8, i8* %0, align 1
  %6 = zext i8 %5 to i16
  %7 = getelementptr inbounds i8, i8* %0, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i16
  %10 = add nuw nsw i16 %9, %6
  %11 = shl nuw nsw i16 %10, 2
  store i16 %11, i16* %2, align 2
  %12 = getelementptr inbounds i8, i8* %0, i64 2
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i16
  %15 = getelementptr inbounds i8, i8* %0, i64 3
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i16
  %18 = add nuw nsw i16 %17, %14
  %19 = shl nuw nsw i16 %18, 2
  %20 = getelementptr inbounds i16, i16* %2, i64 1
  store i16 %19, i16* %20, align 2
  %21 = getelementptr inbounds i8, i8* %0, i64 %4
  %22 = getelementptr inbounds i16, i16* %2, i64 32
  %23 = load i8, i8* %21, align 1
  %24 = zext i8 %23 to i16
  %25 = getelementptr inbounds i8, i8* %21, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i16
  %28 = add nuw nsw i16 %27, %24
  %29 = shl nuw nsw i16 %28, 2
  store i16 %29, i16* %22, align 2
  %30 = getelementptr inbounds i8, i8* %21, i64 2
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i16
  %33 = getelementptr inbounds i8, i8* %21, i64 3
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i16
  %36 = add nuw nsw i16 %35, %32
  %37 = shl nuw nsw i16 %36, 2
  %38 = getelementptr inbounds i16, i16* %2, i64 33
  store i16 %37, i16* %38, align 2
  %39 = getelementptr inbounds i8, i8* %21, i64 %4
  %40 = getelementptr inbounds i16, i16* %2, i64 64
  %41 = load i8, i8* %39, align 1
  %42 = zext i8 %41 to i16
  %43 = getelementptr inbounds i8, i8* %39, i64 1
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i16
  %46 = add nuw nsw i16 %45, %42
  %47 = shl nuw nsw i16 %46, 2
  store i16 %47, i16* %40, align 2
  %48 = getelementptr inbounds i8, i8* %39, i64 2
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i16
  %51 = getelementptr inbounds i8, i8* %39, i64 3
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i16
  %54 = add nuw nsw i16 %53, %50
  %55 = shl nuw nsw i16 %54, 2
  %56 = getelementptr inbounds i16, i16* %2, i64 65
  store i16 %55, i16* %56, align 2
  %57 = getelementptr inbounds i8, i8* %39, i64 %4
  %58 = getelementptr inbounds i16, i16* %2, i64 96
  %59 = load i8, i8* %57, align 1
  %60 = zext i8 %59 to i16
  %61 = getelementptr inbounds i8, i8* %57, i64 1
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  %64 = add nuw nsw i16 %63, %60
  %65 = shl nuw nsw i16 %64, 2
  store i16 %65, i16* %58, align 2
  %66 = getelementptr inbounds i8, i8* %57, i64 2
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i16
  %69 = getelementptr inbounds i8, i8* %57, i64 3
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i16
  %72 = add nuw nsw i16 %71, %68
  %73 = shl nuw nsw i16 %72, 2
  %74 = getelementptr inbounds i16, i16* %2, i64 97
  store i16 %73, i16* %74, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_422_8x8_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  %5 = load i8, i8* %0, align 1
  %6 = zext i8 %5 to i16
  %7 = getelementptr inbounds i8, i8* %0, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i16
  %10 = add nuw nsw i16 %9, %6
  %11 = shl nuw nsw i16 %10, 2
  store i16 %11, i16* %2, align 2
  %12 = getelementptr inbounds i8, i8* %0, i64 2
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i16
  %15 = getelementptr inbounds i8, i8* %0, i64 3
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i16
  %18 = add nuw nsw i16 %17, %14
  %19 = shl nuw nsw i16 %18, 2
  %20 = getelementptr inbounds i16, i16* %2, i64 1
  store i16 %19, i16* %20, align 2
  %21 = getelementptr inbounds i8, i8* %0, i64 4
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i16
  %24 = getelementptr inbounds i8, i8* %0, i64 5
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i16
  %27 = add nuw nsw i16 %26, %23
  %28 = shl nuw nsw i16 %27, 2
  %29 = getelementptr inbounds i16, i16* %2, i64 2
  store i16 %28, i16* %29, align 2
  %30 = getelementptr inbounds i8, i8* %0, i64 6
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i16
  %33 = getelementptr inbounds i8, i8* %0, i64 7
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i16
  %36 = add nuw nsw i16 %35, %32
  %37 = shl nuw nsw i16 %36, 2
  %38 = getelementptr inbounds i16, i16* %2, i64 3
  store i16 %37, i16* %38, align 2
  %39 = getelementptr inbounds i8, i8* %0, i64 %4
  %40 = getelementptr inbounds i16, i16* %2, i64 32
  %41 = load i8, i8* %39, align 1
  %42 = zext i8 %41 to i16
  %43 = getelementptr inbounds i8, i8* %39, i64 1
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i16
  %46 = add nuw nsw i16 %45, %42
  %47 = shl nuw nsw i16 %46, 2
  store i16 %47, i16* %40, align 2
  %48 = getelementptr inbounds i8, i8* %39, i64 2
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i16
  %51 = getelementptr inbounds i8, i8* %39, i64 3
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i16
  %54 = add nuw nsw i16 %53, %50
  %55 = shl nuw nsw i16 %54, 2
  %56 = getelementptr inbounds i16, i16* %2, i64 33
  store i16 %55, i16* %56, align 2
  %57 = getelementptr inbounds i8, i8* %39, i64 4
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i16
  %60 = getelementptr inbounds i8, i8* %39, i64 5
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i16
  %63 = add nuw nsw i16 %62, %59
  %64 = shl nuw nsw i16 %63, 2
  %65 = getelementptr inbounds i16, i16* %2, i64 34
  store i16 %64, i16* %65, align 2
  %66 = getelementptr inbounds i8, i8* %39, i64 6
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i16
  %69 = getelementptr inbounds i8, i8* %39, i64 7
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i16
  %72 = add nuw nsw i16 %71, %68
  %73 = shl nuw nsw i16 %72, 2
  %74 = getelementptr inbounds i16, i16* %2, i64 35
  store i16 %73, i16* %74, align 2
  %75 = getelementptr inbounds i8, i8* %39, i64 %4
  %76 = getelementptr inbounds i16, i16* %2, i64 64
  %77 = load i8, i8* %75, align 1
  %78 = zext i8 %77 to i16
  %79 = getelementptr inbounds i8, i8* %75, i64 1
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i16
  %82 = add nuw nsw i16 %81, %78
  %83 = shl nuw nsw i16 %82, 2
  store i16 %83, i16* %76, align 2
  %84 = getelementptr inbounds i8, i8* %75, i64 2
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i16
  %87 = getelementptr inbounds i8, i8* %75, i64 3
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i16
  %90 = add nuw nsw i16 %89, %86
  %91 = shl nuw nsw i16 %90, 2
  %92 = getelementptr inbounds i16, i16* %2, i64 65
  store i16 %91, i16* %92, align 2
  %93 = getelementptr inbounds i8, i8* %75, i64 4
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i16
  %96 = getelementptr inbounds i8, i8* %75, i64 5
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i16
  %99 = add nuw nsw i16 %98, %95
  %100 = shl nuw nsw i16 %99, 2
  %101 = getelementptr inbounds i16, i16* %2, i64 66
  store i16 %100, i16* %101, align 2
  %102 = getelementptr inbounds i8, i8* %75, i64 6
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i16
  %105 = getelementptr inbounds i8, i8* %75, i64 7
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i16
  %108 = add nuw nsw i16 %107, %104
  %109 = shl nuw nsw i16 %108, 2
  %110 = getelementptr inbounds i16, i16* %2, i64 67
  store i16 %109, i16* %110, align 2
  %111 = getelementptr inbounds i8, i8* %75, i64 %4
  %112 = getelementptr inbounds i16, i16* %2, i64 96
  %113 = load i8, i8* %111, align 1
  %114 = zext i8 %113 to i16
  %115 = getelementptr inbounds i8, i8* %111, i64 1
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i16
  %118 = add nuw nsw i16 %117, %114
  %119 = shl nuw nsw i16 %118, 2
  store i16 %119, i16* %112, align 2
  %120 = getelementptr inbounds i8, i8* %111, i64 2
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i16
  %123 = getelementptr inbounds i8, i8* %111, i64 3
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i16
  %126 = add nuw nsw i16 %125, %122
  %127 = shl nuw nsw i16 %126, 2
  %128 = getelementptr inbounds i16, i16* %2, i64 97
  store i16 %127, i16* %128, align 2
  %129 = getelementptr inbounds i8, i8* %111, i64 4
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i16
  %132 = getelementptr inbounds i8, i8* %111, i64 5
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i16
  %135 = add nuw nsw i16 %134, %131
  %136 = shl nuw nsw i16 %135, 2
  %137 = getelementptr inbounds i16, i16* %2, i64 98
  store i16 %136, i16* %137, align 2
  %138 = getelementptr inbounds i8, i8* %111, i64 6
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i16
  %141 = getelementptr inbounds i8, i8* %111, i64 7
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i16
  %144 = add nuw nsw i16 %143, %140
  %145 = shl nuw nsw i16 %144, 2
  %146 = getelementptr inbounds i16, i16* %2, i64 99
  store i16 %145, i16* %146, align 2
  %147 = getelementptr inbounds i8, i8* %111, i64 %4
  %148 = getelementptr inbounds i16, i16* %2, i64 128
  %149 = load i8, i8* %147, align 1
  %150 = zext i8 %149 to i16
  %151 = getelementptr inbounds i8, i8* %147, i64 1
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i16
  %154 = add nuw nsw i16 %153, %150
  %155 = shl nuw nsw i16 %154, 2
  store i16 %155, i16* %148, align 2
  %156 = getelementptr inbounds i8, i8* %147, i64 2
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i16
  %159 = getelementptr inbounds i8, i8* %147, i64 3
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i16
  %162 = add nuw nsw i16 %161, %158
  %163 = shl nuw nsw i16 %162, 2
  %164 = getelementptr inbounds i16, i16* %2, i64 129
  store i16 %163, i16* %164, align 2
  %165 = getelementptr inbounds i8, i8* %147, i64 4
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i16
  %168 = getelementptr inbounds i8, i8* %147, i64 5
  %169 = load i8, i8* %168, align 1
  %170 = zext i8 %169 to i16
  %171 = add nuw nsw i16 %170, %167
  %172 = shl nuw nsw i16 %171, 2
  %173 = getelementptr inbounds i16, i16* %2, i64 130
  store i16 %172, i16* %173, align 2
  %174 = getelementptr inbounds i8, i8* %147, i64 6
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i16
  %177 = getelementptr inbounds i8, i8* %147, i64 7
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i16
  %180 = add nuw nsw i16 %179, %176
  %181 = shl nuw nsw i16 %180, 2
  %182 = getelementptr inbounds i16, i16* %2, i64 131
  store i16 %181, i16* %182, align 2
  %183 = getelementptr inbounds i8, i8* %147, i64 %4
  %184 = getelementptr inbounds i16, i16* %2, i64 160
  %185 = load i8, i8* %183, align 1
  %186 = zext i8 %185 to i16
  %187 = getelementptr inbounds i8, i8* %183, i64 1
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i16
  %190 = add nuw nsw i16 %189, %186
  %191 = shl nuw nsw i16 %190, 2
  store i16 %191, i16* %184, align 2
  %192 = getelementptr inbounds i8, i8* %183, i64 2
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i16
  %195 = getelementptr inbounds i8, i8* %183, i64 3
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i16
  %198 = add nuw nsw i16 %197, %194
  %199 = shl nuw nsw i16 %198, 2
  %200 = getelementptr inbounds i16, i16* %2, i64 161
  store i16 %199, i16* %200, align 2
  %201 = getelementptr inbounds i8, i8* %183, i64 4
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i16
  %204 = getelementptr inbounds i8, i8* %183, i64 5
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i16
  %207 = add nuw nsw i16 %206, %203
  %208 = shl nuw nsw i16 %207, 2
  %209 = getelementptr inbounds i16, i16* %2, i64 162
  store i16 %208, i16* %209, align 2
  %210 = getelementptr inbounds i8, i8* %183, i64 6
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i16
  %213 = getelementptr inbounds i8, i8* %183, i64 7
  %214 = load i8, i8* %213, align 1
  %215 = zext i8 %214 to i16
  %216 = add nuw nsw i16 %215, %212
  %217 = shl nuw nsw i16 %216, 2
  %218 = getelementptr inbounds i16, i16* %2, i64 163
  store i16 %217, i16* %218, align 2
  %219 = getelementptr inbounds i8, i8* %183, i64 %4
  %220 = getelementptr inbounds i16, i16* %2, i64 192
  %221 = load i8, i8* %219, align 1
  %222 = zext i8 %221 to i16
  %223 = getelementptr inbounds i8, i8* %219, i64 1
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i16
  %226 = add nuw nsw i16 %225, %222
  %227 = shl nuw nsw i16 %226, 2
  store i16 %227, i16* %220, align 2
  %228 = getelementptr inbounds i8, i8* %219, i64 2
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i16
  %231 = getelementptr inbounds i8, i8* %219, i64 3
  %232 = load i8, i8* %231, align 1
  %233 = zext i8 %232 to i16
  %234 = add nuw nsw i16 %233, %230
  %235 = shl nuw nsw i16 %234, 2
  %236 = getelementptr inbounds i16, i16* %2, i64 193
  store i16 %235, i16* %236, align 2
  %237 = getelementptr inbounds i8, i8* %219, i64 4
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i16
  %240 = getelementptr inbounds i8, i8* %219, i64 5
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i16
  %243 = add nuw nsw i16 %242, %239
  %244 = shl nuw nsw i16 %243, 2
  %245 = getelementptr inbounds i16, i16* %2, i64 194
  store i16 %244, i16* %245, align 2
  %246 = getelementptr inbounds i8, i8* %219, i64 6
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i16
  %249 = getelementptr inbounds i8, i8* %219, i64 7
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i16
  %252 = add nuw nsw i16 %251, %248
  %253 = shl nuw nsw i16 %252, 2
  %254 = getelementptr inbounds i16, i16* %2, i64 195
  store i16 %253, i16* %254, align 2
  %255 = getelementptr inbounds i8, i8* %219, i64 %4
  %256 = getelementptr inbounds i16, i16* %2, i64 224
  %257 = load i8, i8* %255, align 1
  %258 = zext i8 %257 to i16
  %259 = getelementptr inbounds i8, i8* %255, i64 1
  %260 = load i8, i8* %259, align 1
  %261 = zext i8 %260 to i16
  %262 = add nuw nsw i16 %261, %258
  %263 = shl nuw nsw i16 %262, 2
  store i16 %263, i16* %256, align 2
  %264 = getelementptr inbounds i8, i8* %255, i64 2
  %265 = load i8, i8* %264, align 1
  %266 = zext i8 %265 to i16
  %267 = getelementptr inbounds i8, i8* %255, i64 3
  %268 = load i8, i8* %267, align 1
  %269 = zext i8 %268 to i16
  %270 = add nuw nsw i16 %269, %266
  %271 = shl nuw nsw i16 %270, 2
  %272 = getelementptr inbounds i16, i16* %2, i64 225
  store i16 %271, i16* %272, align 2
  %273 = getelementptr inbounds i8, i8* %255, i64 4
  %274 = load i8, i8* %273, align 1
  %275 = zext i8 %274 to i16
  %276 = getelementptr inbounds i8, i8* %255, i64 5
  %277 = load i8, i8* %276, align 1
  %278 = zext i8 %277 to i16
  %279 = add nuw nsw i16 %278, %275
  %280 = shl nuw nsw i16 %279, 2
  %281 = getelementptr inbounds i16, i16* %2, i64 226
  store i16 %280, i16* %281, align 2
  %282 = getelementptr inbounds i8, i8* %255, i64 6
  %283 = load i8, i8* %282, align 1
  %284 = zext i8 %283 to i16
  %285 = getelementptr inbounds i8, i8* %255, i64 7
  %286 = load i8, i8* %285, align 1
  %287 = zext i8 %286 to i16
  %288 = add nuw nsw i16 %287, %284
  %289 = shl nuw nsw i16 %288, 2
  %290 = getelementptr inbounds i16, i16* %2, i64 227
  store i16 %289, i16* %290, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_422_16x16_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ 0, %3 ], [ %81, %5 ]
  %7 = phi i8* [ %0, %3 ], [ %79, %5 ]
  %8 = phi i16* [ %2, %3 ], [ %80, %5 ]
  %9 = load i8, i8* %7, align 1
  %10 = zext i8 %9 to i16
  %11 = getelementptr inbounds i8, i8* %7, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i16
  %14 = add nuw nsw i16 %13, %10
  %15 = shl nuw nsw i16 %14, 2
  store i16 %15, i16* %8, align 2
  %16 = getelementptr inbounds i8, i8* %7, i64 2
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i16
  %19 = getelementptr inbounds i8, i8* %7, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i16
  %22 = add nuw nsw i16 %21, %18
  %23 = shl nuw nsw i16 %22, 2
  %24 = getelementptr inbounds i16, i16* %8, i64 1
  store i16 %23, i16* %24, align 2
  %25 = getelementptr inbounds i8, i8* %7, i64 4
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i16
  %28 = getelementptr inbounds i8, i8* %7, i64 5
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  %31 = add nuw nsw i16 %30, %27
  %32 = shl nuw nsw i16 %31, 2
  %33 = getelementptr inbounds i16, i16* %8, i64 2
  store i16 %32, i16* %33, align 2
  %34 = getelementptr inbounds i8, i8* %7, i64 6
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i16
  %37 = getelementptr inbounds i8, i8* %7, i64 7
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  %40 = add nuw nsw i16 %39, %36
  %41 = shl nuw nsw i16 %40, 2
  %42 = getelementptr inbounds i16, i16* %8, i64 3
  store i16 %41, i16* %42, align 2
  %43 = getelementptr inbounds i8, i8* %7, i64 8
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i16
  %46 = getelementptr inbounds i8, i8* %7, i64 9
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i16
  %49 = add nuw nsw i16 %48, %45
  %50 = shl nuw nsw i16 %49, 2
  %51 = getelementptr inbounds i16, i16* %8, i64 4
  store i16 %50, i16* %51, align 2
  %52 = getelementptr inbounds i8, i8* %7, i64 10
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i16
  %55 = getelementptr inbounds i8, i8* %7, i64 11
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i16
  %58 = add nuw nsw i16 %57, %54
  %59 = shl nuw nsw i16 %58, 2
  %60 = getelementptr inbounds i16, i16* %8, i64 5
  store i16 %59, i16* %60, align 2
  %61 = getelementptr inbounds i8, i8* %7, i64 12
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  %64 = getelementptr inbounds i8, i8* %7, i64 13
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i16
  %67 = add nuw nsw i16 %66, %63
  %68 = shl nuw nsw i16 %67, 2
  %69 = getelementptr inbounds i16, i16* %8, i64 6
  store i16 %68, i16* %69, align 2
  %70 = getelementptr inbounds i8, i8* %7, i64 14
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i16
  %73 = getelementptr inbounds i8, i8* %7, i64 15
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i16
  %76 = add nuw nsw i16 %75, %72
  %77 = shl nuw nsw i16 %76, 2
  %78 = getelementptr inbounds i16, i16* %8, i64 7
  store i16 %77, i16* %78, align 2
  %79 = getelementptr inbounds i8, i8* %7, i64 %4
  %80 = getelementptr inbounds i16, i16* %8, i64 32
  %81 = add nuw nsw i32 %6, 1
  %82 = icmp eq i32 %81, 16
  br i1 %82, label %83, label %5

83:                                               ; preds = %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_422_32x32_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ 0, %3 ], [ %153, %5 ]
  %7 = phi i8* [ %0, %3 ], [ %151, %5 ]
  %8 = phi i16* [ %2, %3 ], [ %152, %5 ]
  %9 = load i8, i8* %7, align 1
  %10 = zext i8 %9 to i16
  %11 = getelementptr inbounds i8, i8* %7, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i16
  %14 = add nuw nsw i16 %13, %10
  %15 = shl nuw nsw i16 %14, 2
  store i16 %15, i16* %8, align 2
  %16 = getelementptr inbounds i8, i8* %7, i64 2
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i16
  %19 = getelementptr inbounds i8, i8* %7, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i16
  %22 = add nuw nsw i16 %21, %18
  %23 = shl nuw nsw i16 %22, 2
  %24 = getelementptr inbounds i16, i16* %8, i64 1
  store i16 %23, i16* %24, align 2
  %25 = getelementptr inbounds i8, i8* %7, i64 4
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i16
  %28 = getelementptr inbounds i8, i8* %7, i64 5
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  %31 = add nuw nsw i16 %30, %27
  %32 = shl nuw nsw i16 %31, 2
  %33 = getelementptr inbounds i16, i16* %8, i64 2
  store i16 %32, i16* %33, align 2
  %34 = getelementptr inbounds i8, i8* %7, i64 6
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i16
  %37 = getelementptr inbounds i8, i8* %7, i64 7
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  %40 = add nuw nsw i16 %39, %36
  %41 = shl nuw nsw i16 %40, 2
  %42 = getelementptr inbounds i16, i16* %8, i64 3
  store i16 %41, i16* %42, align 2
  %43 = getelementptr inbounds i8, i8* %7, i64 8
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i16
  %46 = getelementptr inbounds i8, i8* %7, i64 9
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i16
  %49 = add nuw nsw i16 %48, %45
  %50 = shl nuw nsw i16 %49, 2
  %51 = getelementptr inbounds i16, i16* %8, i64 4
  store i16 %50, i16* %51, align 2
  %52 = getelementptr inbounds i8, i8* %7, i64 10
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i16
  %55 = getelementptr inbounds i8, i8* %7, i64 11
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i16
  %58 = add nuw nsw i16 %57, %54
  %59 = shl nuw nsw i16 %58, 2
  %60 = getelementptr inbounds i16, i16* %8, i64 5
  store i16 %59, i16* %60, align 2
  %61 = getelementptr inbounds i8, i8* %7, i64 12
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  %64 = getelementptr inbounds i8, i8* %7, i64 13
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i16
  %67 = add nuw nsw i16 %66, %63
  %68 = shl nuw nsw i16 %67, 2
  %69 = getelementptr inbounds i16, i16* %8, i64 6
  store i16 %68, i16* %69, align 2
  %70 = getelementptr inbounds i8, i8* %7, i64 14
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i16
  %73 = getelementptr inbounds i8, i8* %7, i64 15
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i16
  %76 = add nuw nsw i16 %75, %72
  %77 = shl nuw nsw i16 %76, 2
  %78 = getelementptr inbounds i16, i16* %8, i64 7
  store i16 %77, i16* %78, align 2
  %79 = getelementptr inbounds i8, i8* %7, i64 16
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i16
  %82 = getelementptr inbounds i8, i8* %7, i64 17
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i16
  %85 = add nuw nsw i16 %84, %81
  %86 = shl nuw nsw i16 %85, 2
  %87 = getelementptr inbounds i16, i16* %8, i64 8
  store i16 %86, i16* %87, align 2
  %88 = getelementptr inbounds i8, i8* %7, i64 18
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i16
  %91 = getelementptr inbounds i8, i8* %7, i64 19
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i16
  %94 = add nuw nsw i16 %93, %90
  %95 = shl nuw nsw i16 %94, 2
  %96 = getelementptr inbounds i16, i16* %8, i64 9
  store i16 %95, i16* %96, align 2
  %97 = getelementptr inbounds i8, i8* %7, i64 20
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i16
  %100 = getelementptr inbounds i8, i8* %7, i64 21
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i16
  %103 = add nuw nsw i16 %102, %99
  %104 = shl nuw nsw i16 %103, 2
  %105 = getelementptr inbounds i16, i16* %8, i64 10
  store i16 %104, i16* %105, align 2
  %106 = getelementptr inbounds i8, i8* %7, i64 22
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i16
  %109 = getelementptr inbounds i8, i8* %7, i64 23
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i16
  %112 = add nuw nsw i16 %111, %108
  %113 = shl nuw nsw i16 %112, 2
  %114 = getelementptr inbounds i16, i16* %8, i64 11
  store i16 %113, i16* %114, align 2
  %115 = getelementptr inbounds i8, i8* %7, i64 24
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i16
  %118 = getelementptr inbounds i8, i8* %7, i64 25
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i16
  %121 = add nuw nsw i16 %120, %117
  %122 = shl nuw nsw i16 %121, 2
  %123 = getelementptr inbounds i16, i16* %8, i64 12
  store i16 %122, i16* %123, align 2
  %124 = getelementptr inbounds i8, i8* %7, i64 26
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i16
  %127 = getelementptr inbounds i8, i8* %7, i64 27
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i16
  %130 = add nuw nsw i16 %129, %126
  %131 = shl nuw nsw i16 %130, 2
  %132 = getelementptr inbounds i16, i16* %8, i64 13
  store i16 %131, i16* %132, align 2
  %133 = getelementptr inbounds i8, i8* %7, i64 28
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i16
  %136 = getelementptr inbounds i8, i8* %7, i64 29
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i16
  %139 = add nuw nsw i16 %138, %135
  %140 = shl nuw nsw i16 %139, 2
  %141 = getelementptr inbounds i16, i16* %8, i64 14
  store i16 %140, i16* %141, align 2
  %142 = getelementptr inbounds i8, i8* %7, i64 30
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i16
  %145 = getelementptr inbounds i8, i8* %7, i64 31
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i16
  %148 = add nuw nsw i16 %147, %144
  %149 = shl nuw nsw i16 %148, 2
  %150 = getelementptr inbounds i16, i16* %8, i64 15
  store i16 %149, i16* %150, align 2
  %151 = getelementptr inbounds i8, i8* %7, i64 %4
  %152 = getelementptr inbounds i16, i16* %8, i64 32
  %153 = add nuw nsw i32 %6, 1
  %154 = icmp eq i32 %153, 32
  br i1 %154, label %155, label %5

155:                                              ; preds = %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_422_4x8_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  %5 = load i8, i8* %0, align 1
  %6 = zext i8 %5 to i16
  %7 = getelementptr inbounds i8, i8* %0, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i16
  %10 = add nuw nsw i16 %9, %6
  %11 = shl nuw nsw i16 %10, 2
  store i16 %11, i16* %2, align 2
  %12 = getelementptr inbounds i8, i8* %0, i64 2
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i16
  %15 = getelementptr inbounds i8, i8* %0, i64 3
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i16
  %18 = add nuw nsw i16 %17, %14
  %19 = shl nuw nsw i16 %18, 2
  %20 = getelementptr inbounds i16, i16* %2, i64 1
  store i16 %19, i16* %20, align 2
  %21 = getelementptr inbounds i8, i8* %0, i64 %4
  %22 = getelementptr inbounds i16, i16* %2, i64 32
  %23 = load i8, i8* %21, align 1
  %24 = zext i8 %23 to i16
  %25 = getelementptr inbounds i8, i8* %21, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i16
  %28 = add nuw nsw i16 %27, %24
  %29 = shl nuw nsw i16 %28, 2
  store i16 %29, i16* %22, align 2
  %30 = getelementptr inbounds i8, i8* %21, i64 2
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i16
  %33 = getelementptr inbounds i8, i8* %21, i64 3
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i16
  %36 = add nuw nsw i16 %35, %32
  %37 = shl nuw nsw i16 %36, 2
  %38 = getelementptr inbounds i16, i16* %2, i64 33
  store i16 %37, i16* %38, align 2
  %39 = getelementptr inbounds i8, i8* %21, i64 %4
  %40 = getelementptr inbounds i16, i16* %2, i64 64
  %41 = load i8, i8* %39, align 1
  %42 = zext i8 %41 to i16
  %43 = getelementptr inbounds i8, i8* %39, i64 1
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i16
  %46 = add nuw nsw i16 %45, %42
  %47 = shl nuw nsw i16 %46, 2
  store i16 %47, i16* %40, align 2
  %48 = getelementptr inbounds i8, i8* %39, i64 2
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i16
  %51 = getelementptr inbounds i8, i8* %39, i64 3
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i16
  %54 = add nuw nsw i16 %53, %50
  %55 = shl nuw nsw i16 %54, 2
  %56 = getelementptr inbounds i16, i16* %2, i64 65
  store i16 %55, i16* %56, align 2
  %57 = getelementptr inbounds i8, i8* %39, i64 %4
  %58 = getelementptr inbounds i16, i16* %2, i64 96
  %59 = load i8, i8* %57, align 1
  %60 = zext i8 %59 to i16
  %61 = getelementptr inbounds i8, i8* %57, i64 1
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  %64 = add nuw nsw i16 %63, %60
  %65 = shl nuw nsw i16 %64, 2
  store i16 %65, i16* %58, align 2
  %66 = getelementptr inbounds i8, i8* %57, i64 2
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i16
  %69 = getelementptr inbounds i8, i8* %57, i64 3
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i16
  %72 = add nuw nsw i16 %71, %68
  %73 = shl nuw nsw i16 %72, 2
  %74 = getelementptr inbounds i16, i16* %2, i64 97
  store i16 %73, i16* %74, align 2
  %75 = getelementptr inbounds i8, i8* %57, i64 %4
  %76 = getelementptr inbounds i16, i16* %2, i64 128
  %77 = load i8, i8* %75, align 1
  %78 = zext i8 %77 to i16
  %79 = getelementptr inbounds i8, i8* %75, i64 1
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i16
  %82 = add nuw nsw i16 %81, %78
  %83 = shl nuw nsw i16 %82, 2
  store i16 %83, i16* %76, align 2
  %84 = getelementptr inbounds i8, i8* %75, i64 2
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i16
  %87 = getelementptr inbounds i8, i8* %75, i64 3
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i16
  %90 = add nuw nsw i16 %89, %86
  %91 = shl nuw nsw i16 %90, 2
  %92 = getelementptr inbounds i16, i16* %2, i64 129
  store i16 %91, i16* %92, align 2
  %93 = getelementptr inbounds i8, i8* %75, i64 %4
  %94 = getelementptr inbounds i16, i16* %2, i64 160
  %95 = load i8, i8* %93, align 1
  %96 = zext i8 %95 to i16
  %97 = getelementptr inbounds i8, i8* %93, i64 1
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i16
  %100 = add nuw nsw i16 %99, %96
  %101 = shl nuw nsw i16 %100, 2
  store i16 %101, i16* %94, align 2
  %102 = getelementptr inbounds i8, i8* %93, i64 2
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i16
  %105 = getelementptr inbounds i8, i8* %93, i64 3
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i16
  %108 = add nuw nsw i16 %107, %104
  %109 = shl nuw nsw i16 %108, 2
  %110 = getelementptr inbounds i16, i16* %2, i64 161
  store i16 %109, i16* %110, align 2
  %111 = getelementptr inbounds i8, i8* %93, i64 %4
  %112 = getelementptr inbounds i16, i16* %2, i64 192
  %113 = load i8, i8* %111, align 1
  %114 = zext i8 %113 to i16
  %115 = getelementptr inbounds i8, i8* %111, i64 1
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i16
  %118 = add nuw nsw i16 %117, %114
  %119 = shl nuw nsw i16 %118, 2
  store i16 %119, i16* %112, align 2
  %120 = getelementptr inbounds i8, i8* %111, i64 2
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i16
  %123 = getelementptr inbounds i8, i8* %111, i64 3
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i16
  %126 = add nuw nsw i16 %125, %122
  %127 = shl nuw nsw i16 %126, 2
  %128 = getelementptr inbounds i16, i16* %2, i64 193
  store i16 %127, i16* %128, align 2
  %129 = getelementptr inbounds i8, i8* %111, i64 %4
  %130 = getelementptr inbounds i16, i16* %2, i64 224
  %131 = load i8, i8* %129, align 1
  %132 = zext i8 %131 to i16
  %133 = getelementptr inbounds i8, i8* %129, i64 1
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i16
  %136 = add nuw nsw i16 %135, %132
  %137 = shl nuw nsw i16 %136, 2
  store i16 %137, i16* %130, align 2
  %138 = getelementptr inbounds i8, i8* %129, i64 2
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i16
  %141 = getelementptr inbounds i8, i8* %129, i64 3
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i16
  %144 = add nuw nsw i16 %143, %140
  %145 = shl nuw nsw i16 %144, 2
  %146 = getelementptr inbounds i16, i16* %2, i64 225
  store i16 %145, i16* %146, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_422_8x4_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  %5 = load i8, i8* %0, align 1
  %6 = zext i8 %5 to i16
  %7 = getelementptr inbounds i8, i8* %0, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i16
  %10 = add nuw nsw i16 %9, %6
  %11 = shl nuw nsw i16 %10, 2
  store i16 %11, i16* %2, align 2
  %12 = getelementptr inbounds i8, i8* %0, i64 2
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i16
  %15 = getelementptr inbounds i8, i8* %0, i64 3
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i16
  %18 = add nuw nsw i16 %17, %14
  %19 = shl nuw nsw i16 %18, 2
  %20 = getelementptr inbounds i16, i16* %2, i64 1
  store i16 %19, i16* %20, align 2
  %21 = getelementptr inbounds i8, i8* %0, i64 4
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i16
  %24 = getelementptr inbounds i8, i8* %0, i64 5
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i16
  %27 = add nuw nsw i16 %26, %23
  %28 = shl nuw nsw i16 %27, 2
  %29 = getelementptr inbounds i16, i16* %2, i64 2
  store i16 %28, i16* %29, align 2
  %30 = getelementptr inbounds i8, i8* %0, i64 6
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i16
  %33 = getelementptr inbounds i8, i8* %0, i64 7
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i16
  %36 = add nuw nsw i16 %35, %32
  %37 = shl nuw nsw i16 %36, 2
  %38 = getelementptr inbounds i16, i16* %2, i64 3
  store i16 %37, i16* %38, align 2
  %39 = getelementptr inbounds i8, i8* %0, i64 %4
  %40 = getelementptr inbounds i16, i16* %2, i64 32
  %41 = load i8, i8* %39, align 1
  %42 = zext i8 %41 to i16
  %43 = getelementptr inbounds i8, i8* %39, i64 1
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i16
  %46 = add nuw nsw i16 %45, %42
  %47 = shl nuw nsw i16 %46, 2
  store i16 %47, i16* %40, align 2
  %48 = getelementptr inbounds i8, i8* %39, i64 2
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i16
  %51 = getelementptr inbounds i8, i8* %39, i64 3
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i16
  %54 = add nuw nsw i16 %53, %50
  %55 = shl nuw nsw i16 %54, 2
  %56 = getelementptr inbounds i16, i16* %2, i64 33
  store i16 %55, i16* %56, align 2
  %57 = getelementptr inbounds i8, i8* %39, i64 4
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i16
  %60 = getelementptr inbounds i8, i8* %39, i64 5
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i16
  %63 = add nuw nsw i16 %62, %59
  %64 = shl nuw nsw i16 %63, 2
  %65 = getelementptr inbounds i16, i16* %2, i64 34
  store i16 %64, i16* %65, align 2
  %66 = getelementptr inbounds i8, i8* %39, i64 6
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i16
  %69 = getelementptr inbounds i8, i8* %39, i64 7
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i16
  %72 = add nuw nsw i16 %71, %68
  %73 = shl nuw nsw i16 %72, 2
  %74 = getelementptr inbounds i16, i16* %2, i64 35
  store i16 %73, i16* %74, align 2
  %75 = getelementptr inbounds i8, i8* %39, i64 %4
  %76 = getelementptr inbounds i16, i16* %2, i64 64
  %77 = load i8, i8* %75, align 1
  %78 = zext i8 %77 to i16
  %79 = getelementptr inbounds i8, i8* %75, i64 1
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i16
  %82 = add nuw nsw i16 %81, %78
  %83 = shl nuw nsw i16 %82, 2
  store i16 %83, i16* %76, align 2
  %84 = getelementptr inbounds i8, i8* %75, i64 2
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i16
  %87 = getelementptr inbounds i8, i8* %75, i64 3
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i16
  %90 = add nuw nsw i16 %89, %86
  %91 = shl nuw nsw i16 %90, 2
  %92 = getelementptr inbounds i16, i16* %2, i64 65
  store i16 %91, i16* %92, align 2
  %93 = getelementptr inbounds i8, i8* %75, i64 4
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i16
  %96 = getelementptr inbounds i8, i8* %75, i64 5
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i16
  %99 = add nuw nsw i16 %98, %95
  %100 = shl nuw nsw i16 %99, 2
  %101 = getelementptr inbounds i16, i16* %2, i64 66
  store i16 %100, i16* %101, align 2
  %102 = getelementptr inbounds i8, i8* %75, i64 6
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i16
  %105 = getelementptr inbounds i8, i8* %75, i64 7
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i16
  %108 = add nuw nsw i16 %107, %104
  %109 = shl nuw nsw i16 %108, 2
  %110 = getelementptr inbounds i16, i16* %2, i64 67
  store i16 %109, i16* %110, align 2
  %111 = getelementptr inbounds i8, i8* %75, i64 %4
  %112 = getelementptr inbounds i16, i16* %2, i64 96
  %113 = load i8, i8* %111, align 1
  %114 = zext i8 %113 to i16
  %115 = getelementptr inbounds i8, i8* %111, i64 1
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i16
  %118 = add nuw nsw i16 %117, %114
  %119 = shl nuw nsw i16 %118, 2
  store i16 %119, i16* %112, align 2
  %120 = getelementptr inbounds i8, i8* %111, i64 2
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i16
  %123 = getelementptr inbounds i8, i8* %111, i64 3
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i16
  %126 = add nuw nsw i16 %125, %122
  %127 = shl nuw nsw i16 %126, 2
  %128 = getelementptr inbounds i16, i16* %2, i64 97
  store i16 %127, i16* %128, align 2
  %129 = getelementptr inbounds i8, i8* %111, i64 4
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i16
  %132 = getelementptr inbounds i8, i8* %111, i64 5
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i16
  %135 = add nuw nsw i16 %134, %131
  %136 = shl nuw nsw i16 %135, 2
  %137 = getelementptr inbounds i16, i16* %2, i64 98
  store i16 %136, i16* %137, align 2
  %138 = getelementptr inbounds i8, i8* %111, i64 6
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i16
  %141 = getelementptr inbounds i8, i8* %111, i64 7
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i16
  %144 = add nuw nsw i16 %143, %140
  %145 = shl nuw nsw i16 %144, 2
  %146 = getelementptr inbounds i16, i16* %2, i64 99
  store i16 %145, i16* %146, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_422_8x16_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ 0, %3 ], [ %45, %5 ]
  %7 = phi i8* [ %0, %3 ], [ %43, %5 ]
  %8 = phi i16* [ %2, %3 ], [ %44, %5 ]
  %9 = load i8, i8* %7, align 1
  %10 = zext i8 %9 to i16
  %11 = getelementptr inbounds i8, i8* %7, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i16
  %14 = add nuw nsw i16 %13, %10
  %15 = shl nuw nsw i16 %14, 2
  store i16 %15, i16* %8, align 2
  %16 = getelementptr inbounds i8, i8* %7, i64 2
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i16
  %19 = getelementptr inbounds i8, i8* %7, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i16
  %22 = add nuw nsw i16 %21, %18
  %23 = shl nuw nsw i16 %22, 2
  %24 = getelementptr inbounds i16, i16* %8, i64 1
  store i16 %23, i16* %24, align 2
  %25 = getelementptr inbounds i8, i8* %7, i64 4
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i16
  %28 = getelementptr inbounds i8, i8* %7, i64 5
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  %31 = add nuw nsw i16 %30, %27
  %32 = shl nuw nsw i16 %31, 2
  %33 = getelementptr inbounds i16, i16* %8, i64 2
  store i16 %32, i16* %33, align 2
  %34 = getelementptr inbounds i8, i8* %7, i64 6
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i16
  %37 = getelementptr inbounds i8, i8* %7, i64 7
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  %40 = add nuw nsw i16 %39, %36
  %41 = shl nuw nsw i16 %40, 2
  %42 = getelementptr inbounds i16, i16* %8, i64 3
  store i16 %41, i16* %42, align 2
  %43 = getelementptr inbounds i8, i8* %7, i64 %4
  %44 = getelementptr inbounds i16, i16* %8, i64 32
  %45 = add nuw nsw i32 %6, 1
  %46 = icmp eq i32 %45, 16
  br i1 %46, label %47, label %5

47:                                               ; preds = %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_422_16x8_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ 0, %3 ], [ %81, %5 ]
  %7 = phi i8* [ %0, %3 ], [ %79, %5 ]
  %8 = phi i16* [ %2, %3 ], [ %80, %5 ]
  %9 = load i8, i8* %7, align 1
  %10 = zext i8 %9 to i16
  %11 = getelementptr inbounds i8, i8* %7, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i16
  %14 = add nuw nsw i16 %13, %10
  %15 = shl nuw nsw i16 %14, 2
  store i16 %15, i16* %8, align 2
  %16 = getelementptr inbounds i8, i8* %7, i64 2
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i16
  %19 = getelementptr inbounds i8, i8* %7, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i16
  %22 = add nuw nsw i16 %21, %18
  %23 = shl nuw nsw i16 %22, 2
  %24 = getelementptr inbounds i16, i16* %8, i64 1
  store i16 %23, i16* %24, align 2
  %25 = getelementptr inbounds i8, i8* %7, i64 4
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i16
  %28 = getelementptr inbounds i8, i8* %7, i64 5
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  %31 = add nuw nsw i16 %30, %27
  %32 = shl nuw nsw i16 %31, 2
  %33 = getelementptr inbounds i16, i16* %8, i64 2
  store i16 %32, i16* %33, align 2
  %34 = getelementptr inbounds i8, i8* %7, i64 6
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i16
  %37 = getelementptr inbounds i8, i8* %7, i64 7
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  %40 = add nuw nsw i16 %39, %36
  %41 = shl nuw nsw i16 %40, 2
  %42 = getelementptr inbounds i16, i16* %8, i64 3
  store i16 %41, i16* %42, align 2
  %43 = getelementptr inbounds i8, i8* %7, i64 8
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i16
  %46 = getelementptr inbounds i8, i8* %7, i64 9
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i16
  %49 = add nuw nsw i16 %48, %45
  %50 = shl nuw nsw i16 %49, 2
  %51 = getelementptr inbounds i16, i16* %8, i64 4
  store i16 %50, i16* %51, align 2
  %52 = getelementptr inbounds i8, i8* %7, i64 10
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i16
  %55 = getelementptr inbounds i8, i8* %7, i64 11
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i16
  %58 = add nuw nsw i16 %57, %54
  %59 = shl nuw nsw i16 %58, 2
  %60 = getelementptr inbounds i16, i16* %8, i64 5
  store i16 %59, i16* %60, align 2
  %61 = getelementptr inbounds i8, i8* %7, i64 12
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  %64 = getelementptr inbounds i8, i8* %7, i64 13
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i16
  %67 = add nuw nsw i16 %66, %63
  %68 = shl nuw nsw i16 %67, 2
  %69 = getelementptr inbounds i16, i16* %8, i64 6
  store i16 %68, i16* %69, align 2
  %70 = getelementptr inbounds i8, i8* %7, i64 14
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i16
  %73 = getelementptr inbounds i8, i8* %7, i64 15
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i16
  %76 = add nuw nsw i16 %75, %72
  %77 = shl nuw nsw i16 %76, 2
  %78 = getelementptr inbounds i16, i16* %8, i64 7
  store i16 %77, i16* %78, align 2
  %79 = getelementptr inbounds i8, i8* %7, i64 %4
  %80 = getelementptr inbounds i16, i16* %8, i64 32
  %81 = add nuw nsw i32 %6, 1
  %82 = icmp eq i32 %81, 8
  br i1 %82, label %83, label %5

83:                                               ; preds = %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_422_16x32_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ 0, %3 ], [ %81, %5 ]
  %7 = phi i8* [ %0, %3 ], [ %79, %5 ]
  %8 = phi i16* [ %2, %3 ], [ %80, %5 ]
  %9 = load i8, i8* %7, align 1
  %10 = zext i8 %9 to i16
  %11 = getelementptr inbounds i8, i8* %7, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i16
  %14 = add nuw nsw i16 %13, %10
  %15 = shl nuw nsw i16 %14, 2
  store i16 %15, i16* %8, align 2
  %16 = getelementptr inbounds i8, i8* %7, i64 2
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i16
  %19 = getelementptr inbounds i8, i8* %7, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i16
  %22 = add nuw nsw i16 %21, %18
  %23 = shl nuw nsw i16 %22, 2
  %24 = getelementptr inbounds i16, i16* %8, i64 1
  store i16 %23, i16* %24, align 2
  %25 = getelementptr inbounds i8, i8* %7, i64 4
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i16
  %28 = getelementptr inbounds i8, i8* %7, i64 5
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  %31 = add nuw nsw i16 %30, %27
  %32 = shl nuw nsw i16 %31, 2
  %33 = getelementptr inbounds i16, i16* %8, i64 2
  store i16 %32, i16* %33, align 2
  %34 = getelementptr inbounds i8, i8* %7, i64 6
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i16
  %37 = getelementptr inbounds i8, i8* %7, i64 7
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  %40 = add nuw nsw i16 %39, %36
  %41 = shl nuw nsw i16 %40, 2
  %42 = getelementptr inbounds i16, i16* %8, i64 3
  store i16 %41, i16* %42, align 2
  %43 = getelementptr inbounds i8, i8* %7, i64 8
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i16
  %46 = getelementptr inbounds i8, i8* %7, i64 9
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i16
  %49 = add nuw nsw i16 %48, %45
  %50 = shl nuw nsw i16 %49, 2
  %51 = getelementptr inbounds i16, i16* %8, i64 4
  store i16 %50, i16* %51, align 2
  %52 = getelementptr inbounds i8, i8* %7, i64 10
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i16
  %55 = getelementptr inbounds i8, i8* %7, i64 11
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i16
  %58 = add nuw nsw i16 %57, %54
  %59 = shl nuw nsw i16 %58, 2
  %60 = getelementptr inbounds i16, i16* %8, i64 5
  store i16 %59, i16* %60, align 2
  %61 = getelementptr inbounds i8, i8* %7, i64 12
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  %64 = getelementptr inbounds i8, i8* %7, i64 13
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i16
  %67 = add nuw nsw i16 %66, %63
  %68 = shl nuw nsw i16 %67, 2
  %69 = getelementptr inbounds i16, i16* %8, i64 6
  store i16 %68, i16* %69, align 2
  %70 = getelementptr inbounds i8, i8* %7, i64 14
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i16
  %73 = getelementptr inbounds i8, i8* %7, i64 15
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i16
  %76 = add nuw nsw i16 %75, %72
  %77 = shl nuw nsw i16 %76, 2
  %78 = getelementptr inbounds i16, i16* %8, i64 7
  store i16 %77, i16* %78, align 2
  %79 = getelementptr inbounds i8, i8* %7, i64 %4
  %80 = getelementptr inbounds i16, i16* %8, i64 32
  %81 = add nuw nsw i32 %6, 1
  %82 = icmp eq i32 %81, 32
  br i1 %82, label %83, label %5

83:                                               ; preds = %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_422_32x16_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ 0, %3 ], [ %153, %5 ]
  %7 = phi i8* [ %0, %3 ], [ %151, %5 ]
  %8 = phi i16* [ %2, %3 ], [ %152, %5 ]
  %9 = load i8, i8* %7, align 1
  %10 = zext i8 %9 to i16
  %11 = getelementptr inbounds i8, i8* %7, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i16
  %14 = add nuw nsw i16 %13, %10
  %15 = shl nuw nsw i16 %14, 2
  store i16 %15, i16* %8, align 2
  %16 = getelementptr inbounds i8, i8* %7, i64 2
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i16
  %19 = getelementptr inbounds i8, i8* %7, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i16
  %22 = add nuw nsw i16 %21, %18
  %23 = shl nuw nsw i16 %22, 2
  %24 = getelementptr inbounds i16, i16* %8, i64 1
  store i16 %23, i16* %24, align 2
  %25 = getelementptr inbounds i8, i8* %7, i64 4
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i16
  %28 = getelementptr inbounds i8, i8* %7, i64 5
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  %31 = add nuw nsw i16 %30, %27
  %32 = shl nuw nsw i16 %31, 2
  %33 = getelementptr inbounds i16, i16* %8, i64 2
  store i16 %32, i16* %33, align 2
  %34 = getelementptr inbounds i8, i8* %7, i64 6
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i16
  %37 = getelementptr inbounds i8, i8* %7, i64 7
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  %40 = add nuw nsw i16 %39, %36
  %41 = shl nuw nsw i16 %40, 2
  %42 = getelementptr inbounds i16, i16* %8, i64 3
  store i16 %41, i16* %42, align 2
  %43 = getelementptr inbounds i8, i8* %7, i64 8
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i16
  %46 = getelementptr inbounds i8, i8* %7, i64 9
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i16
  %49 = add nuw nsw i16 %48, %45
  %50 = shl nuw nsw i16 %49, 2
  %51 = getelementptr inbounds i16, i16* %8, i64 4
  store i16 %50, i16* %51, align 2
  %52 = getelementptr inbounds i8, i8* %7, i64 10
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i16
  %55 = getelementptr inbounds i8, i8* %7, i64 11
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i16
  %58 = add nuw nsw i16 %57, %54
  %59 = shl nuw nsw i16 %58, 2
  %60 = getelementptr inbounds i16, i16* %8, i64 5
  store i16 %59, i16* %60, align 2
  %61 = getelementptr inbounds i8, i8* %7, i64 12
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  %64 = getelementptr inbounds i8, i8* %7, i64 13
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i16
  %67 = add nuw nsw i16 %66, %63
  %68 = shl nuw nsw i16 %67, 2
  %69 = getelementptr inbounds i16, i16* %8, i64 6
  store i16 %68, i16* %69, align 2
  %70 = getelementptr inbounds i8, i8* %7, i64 14
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i16
  %73 = getelementptr inbounds i8, i8* %7, i64 15
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i16
  %76 = add nuw nsw i16 %75, %72
  %77 = shl nuw nsw i16 %76, 2
  %78 = getelementptr inbounds i16, i16* %8, i64 7
  store i16 %77, i16* %78, align 2
  %79 = getelementptr inbounds i8, i8* %7, i64 16
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i16
  %82 = getelementptr inbounds i8, i8* %7, i64 17
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i16
  %85 = add nuw nsw i16 %84, %81
  %86 = shl nuw nsw i16 %85, 2
  %87 = getelementptr inbounds i16, i16* %8, i64 8
  store i16 %86, i16* %87, align 2
  %88 = getelementptr inbounds i8, i8* %7, i64 18
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i16
  %91 = getelementptr inbounds i8, i8* %7, i64 19
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i16
  %94 = add nuw nsw i16 %93, %90
  %95 = shl nuw nsw i16 %94, 2
  %96 = getelementptr inbounds i16, i16* %8, i64 9
  store i16 %95, i16* %96, align 2
  %97 = getelementptr inbounds i8, i8* %7, i64 20
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i16
  %100 = getelementptr inbounds i8, i8* %7, i64 21
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i16
  %103 = add nuw nsw i16 %102, %99
  %104 = shl nuw nsw i16 %103, 2
  %105 = getelementptr inbounds i16, i16* %8, i64 10
  store i16 %104, i16* %105, align 2
  %106 = getelementptr inbounds i8, i8* %7, i64 22
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i16
  %109 = getelementptr inbounds i8, i8* %7, i64 23
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i16
  %112 = add nuw nsw i16 %111, %108
  %113 = shl nuw nsw i16 %112, 2
  %114 = getelementptr inbounds i16, i16* %8, i64 11
  store i16 %113, i16* %114, align 2
  %115 = getelementptr inbounds i8, i8* %7, i64 24
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i16
  %118 = getelementptr inbounds i8, i8* %7, i64 25
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i16
  %121 = add nuw nsw i16 %120, %117
  %122 = shl nuw nsw i16 %121, 2
  %123 = getelementptr inbounds i16, i16* %8, i64 12
  store i16 %122, i16* %123, align 2
  %124 = getelementptr inbounds i8, i8* %7, i64 26
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i16
  %127 = getelementptr inbounds i8, i8* %7, i64 27
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i16
  %130 = add nuw nsw i16 %129, %126
  %131 = shl nuw nsw i16 %130, 2
  %132 = getelementptr inbounds i16, i16* %8, i64 13
  store i16 %131, i16* %132, align 2
  %133 = getelementptr inbounds i8, i8* %7, i64 28
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i16
  %136 = getelementptr inbounds i8, i8* %7, i64 29
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i16
  %139 = add nuw nsw i16 %138, %135
  %140 = shl nuw nsw i16 %139, 2
  %141 = getelementptr inbounds i16, i16* %8, i64 14
  store i16 %140, i16* %141, align 2
  %142 = getelementptr inbounds i8, i8* %7, i64 30
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i16
  %145 = getelementptr inbounds i8, i8* %7, i64 31
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i16
  %148 = add nuw nsw i16 %147, %144
  %149 = shl nuw nsw i16 %148, 2
  %150 = getelementptr inbounds i16, i16* %8, i64 15
  store i16 %149, i16* %150, align 2
  %151 = getelementptr inbounds i8, i8* %7, i64 %4
  %152 = getelementptr inbounds i16, i16* %8, i64 32
  %153 = add nuw nsw i32 %6, 1
  %154 = icmp eq i32 %153, 16
  br i1 %154, label %155, label %5

155:                                              ; preds = %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_422_4x16_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ 0, %3 ], [ %45, %5 ]
  %7 = phi i8* [ %0, %3 ], [ %43, %5 ]
  %8 = phi i16* [ %2, %3 ], [ %44, %5 ]
  %9 = load i8, i8* %7, align 1
  %10 = zext i8 %9 to i16
  %11 = getelementptr inbounds i8, i8* %7, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i16
  %14 = add nuw nsw i16 %13, %10
  %15 = shl nuw nsw i16 %14, 2
  store i16 %15, i16* %8, align 2
  %16 = getelementptr inbounds i8, i8* %7, i64 2
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i16
  %19 = getelementptr inbounds i8, i8* %7, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i16
  %22 = add nuw nsw i16 %21, %18
  %23 = shl nuw nsw i16 %22, 2
  %24 = getelementptr inbounds i16, i16* %8, i64 1
  store i16 %23, i16* %24, align 2
  %25 = getelementptr inbounds i8, i8* %7, i64 %4
  %26 = getelementptr inbounds i16, i16* %8, i64 32
  %27 = load i8, i8* %25, align 1
  %28 = zext i8 %27 to i16
  %29 = getelementptr inbounds i8, i8* %25, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i16
  %32 = add nuw nsw i16 %31, %28
  %33 = shl nuw nsw i16 %32, 2
  store i16 %33, i16* %26, align 2
  %34 = getelementptr inbounds i8, i8* %25, i64 2
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i16
  %37 = getelementptr inbounds i8, i8* %25, i64 3
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  %40 = add nuw nsw i16 %39, %36
  %41 = shl nuw nsw i16 %40, 2
  %42 = getelementptr inbounds i16, i16* %8, i64 33
  store i16 %41, i16* %42, align 2
  %43 = getelementptr inbounds i8, i8* %25, i64 %4
  %44 = getelementptr inbounds i16, i16* %8, i64 64
  %45 = add nuw nsw i32 %6, 2
  %46 = icmp eq i32 %45, 16
  br i1 %46, label %47, label %5

47:                                               ; preds = %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_422_16x4_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ 0, %3 ], [ %81, %5 ]
  %7 = phi i8* [ %0, %3 ], [ %79, %5 ]
  %8 = phi i16* [ %2, %3 ], [ %80, %5 ]
  %9 = load i8, i8* %7, align 1
  %10 = zext i8 %9 to i16
  %11 = getelementptr inbounds i8, i8* %7, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i16
  %14 = add nuw nsw i16 %13, %10
  %15 = shl nuw nsw i16 %14, 2
  store i16 %15, i16* %8, align 2
  %16 = getelementptr inbounds i8, i8* %7, i64 2
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i16
  %19 = getelementptr inbounds i8, i8* %7, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i16
  %22 = add nuw nsw i16 %21, %18
  %23 = shl nuw nsw i16 %22, 2
  %24 = getelementptr inbounds i16, i16* %8, i64 1
  store i16 %23, i16* %24, align 2
  %25 = getelementptr inbounds i8, i8* %7, i64 4
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i16
  %28 = getelementptr inbounds i8, i8* %7, i64 5
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  %31 = add nuw nsw i16 %30, %27
  %32 = shl nuw nsw i16 %31, 2
  %33 = getelementptr inbounds i16, i16* %8, i64 2
  store i16 %32, i16* %33, align 2
  %34 = getelementptr inbounds i8, i8* %7, i64 6
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i16
  %37 = getelementptr inbounds i8, i8* %7, i64 7
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  %40 = add nuw nsw i16 %39, %36
  %41 = shl nuw nsw i16 %40, 2
  %42 = getelementptr inbounds i16, i16* %8, i64 3
  store i16 %41, i16* %42, align 2
  %43 = getelementptr inbounds i8, i8* %7, i64 8
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i16
  %46 = getelementptr inbounds i8, i8* %7, i64 9
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i16
  %49 = add nuw nsw i16 %48, %45
  %50 = shl nuw nsw i16 %49, 2
  %51 = getelementptr inbounds i16, i16* %8, i64 4
  store i16 %50, i16* %51, align 2
  %52 = getelementptr inbounds i8, i8* %7, i64 10
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i16
  %55 = getelementptr inbounds i8, i8* %7, i64 11
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i16
  %58 = add nuw nsw i16 %57, %54
  %59 = shl nuw nsw i16 %58, 2
  %60 = getelementptr inbounds i16, i16* %8, i64 5
  store i16 %59, i16* %60, align 2
  %61 = getelementptr inbounds i8, i8* %7, i64 12
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  %64 = getelementptr inbounds i8, i8* %7, i64 13
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i16
  %67 = add nuw nsw i16 %66, %63
  %68 = shl nuw nsw i16 %67, 2
  %69 = getelementptr inbounds i16, i16* %8, i64 6
  store i16 %68, i16* %69, align 2
  %70 = getelementptr inbounds i8, i8* %7, i64 14
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i16
  %73 = getelementptr inbounds i8, i8* %7, i64 15
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i16
  %76 = add nuw nsw i16 %75, %72
  %77 = shl nuw nsw i16 %76, 2
  %78 = getelementptr inbounds i16, i16* %8, i64 7
  store i16 %77, i16* %78, align 2
  %79 = getelementptr inbounds i8, i8* %7, i64 %4
  %80 = getelementptr inbounds i16, i16* %8, i64 32
  %81 = add nuw nsw i32 %6, 1
  %82 = icmp eq i32 %81, 4
  br i1 %82, label %83, label %5

83:                                               ; preds = %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_422_8x32_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ 0, %3 ], [ %45, %5 ]
  %7 = phi i8* [ %0, %3 ], [ %43, %5 ]
  %8 = phi i16* [ %2, %3 ], [ %44, %5 ]
  %9 = load i8, i8* %7, align 1
  %10 = zext i8 %9 to i16
  %11 = getelementptr inbounds i8, i8* %7, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i16
  %14 = add nuw nsw i16 %13, %10
  %15 = shl nuw nsw i16 %14, 2
  store i16 %15, i16* %8, align 2
  %16 = getelementptr inbounds i8, i8* %7, i64 2
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i16
  %19 = getelementptr inbounds i8, i8* %7, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i16
  %22 = add nuw nsw i16 %21, %18
  %23 = shl nuw nsw i16 %22, 2
  %24 = getelementptr inbounds i16, i16* %8, i64 1
  store i16 %23, i16* %24, align 2
  %25 = getelementptr inbounds i8, i8* %7, i64 4
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i16
  %28 = getelementptr inbounds i8, i8* %7, i64 5
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  %31 = add nuw nsw i16 %30, %27
  %32 = shl nuw nsw i16 %31, 2
  %33 = getelementptr inbounds i16, i16* %8, i64 2
  store i16 %32, i16* %33, align 2
  %34 = getelementptr inbounds i8, i8* %7, i64 6
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i16
  %37 = getelementptr inbounds i8, i8* %7, i64 7
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  %40 = add nuw nsw i16 %39, %36
  %41 = shl nuw nsw i16 %40, 2
  %42 = getelementptr inbounds i16, i16* %8, i64 3
  store i16 %41, i16* %42, align 2
  %43 = getelementptr inbounds i8, i8* %7, i64 %4
  %44 = getelementptr inbounds i16, i16* %8, i64 32
  %45 = add nuw nsw i32 %6, 1
  %46 = icmp eq i32 %45, 32
  br i1 %46, label %47, label %5

47:                                               ; preds = %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_422_32x8_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ 0, %3 ], [ %153, %5 ]
  %7 = phi i8* [ %0, %3 ], [ %151, %5 ]
  %8 = phi i16* [ %2, %3 ], [ %152, %5 ]
  %9 = load i8, i8* %7, align 1
  %10 = zext i8 %9 to i16
  %11 = getelementptr inbounds i8, i8* %7, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i16
  %14 = add nuw nsw i16 %13, %10
  %15 = shl nuw nsw i16 %14, 2
  store i16 %15, i16* %8, align 2
  %16 = getelementptr inbounds i8, i8* %7, i64 2
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i16
  %19 = getelementptr inbounds i8, i8* %7, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i16
  %22 = add nuw nsw i16 %21, %18
  %23 = shl nuw nsw i16 %22, 2
  %24 = getelementptr inbounds i16, i16* %8, i64 1
  store i16 %23, i16* %24, align 2
  %25 = getelementptr inbounds i8, i8* %7, i64 4
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i16
  %28 = getelementptr inbounds i8, i8* %7, i64 5
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  %31 = add nuw nsw i16 %30, %27
  %32 = shl nuw nsw i16 %31, 2
  %33 = getelementptr inbounds i16, i16* %8, i64 2
  store i16 %32, i16* %33, align 2
  %34 = getelementptr inbounds i8, i8* %7, i64 6
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i16
  %37 = getelementptr inbounds i8, i8* %7, i64 7
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  %40 = add nuw nsw i16 %39, %36
  %41 = shl nuw nsw i16 %40, 2
  %42 = getelementptr inbounds i16, i16* %8, i64 3
  store i16 %41, i16* %42, align 2
  %43 = getelementptr inbounds i8, i8* %7, i64 8
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i16
  %46 = getelementptr inbounds i8, i8* %7, i64 9
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i16
  %49 = add nuw nsw i16 %48, %45
  %50 = shl nuw nsw i16 %49, 2
  %51 = getelementptr inbounds i16, i16* %8, i64 4
  store i16 %50, i16* %51, align 2
  %52 = getelementptr inbounds i8, i8* %7, i64 10
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i16
  %55 = getelementptr inbounds i8, i8* %7, i64 11
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i16
  %58 = add nuw nsw i16 %57, %54
  %59 = shl nuw nsw i16 %58, 2
  %60 = getelementptr inbounds i16, i16* %8, i64 5
  store i16 %59, i16* %60, align 2
  %61 = getelementptr inbounds i8, i8* %7, i64 12
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  %64 = getelementptr inbounds i8, i8* %7, i64 13
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i16
  %67 = add nuw nsw i16 %66, %63
  %68 = shl nuw nsw i16 %67, 2
  %69 = getelementptr inbounds i16, i16* %8, i64 6
  store i16 %68, i16* %69, align 2
  %70 = getelementptr inbounds i8, i8* %7, i64 14
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i16
  %73 = getelementptr inbounds i8, i8* %7, i64 15
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i16
  %76 = add nuw nsw i16 %75, %72
  %77 = shl nuw nsw i16 %76, 2
  %78 = getelementptr inbounds i16, i16* %8, i64 7
  store i16 %77, i16* %78, align 2
  %79 = getelementptr inbounds i8, i8* %7, i64 16
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i16
  %82 = getelementptr inbounds i8, i8* %7, i64 17
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i16
  %85 = add nuw nsw i16 %84, %81
  %86 = shl nuw nsw i16 %85, 2
  %87 = getelementptr inbounds i16, i16* %8, i64 8
  store i16 %86, i16* %87, align 2
  %88 = getelementptr inbounds i8, i8* %7, i64 18
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i16
  %91 = getelementptr inbounds i8, i8* %7, i64 19
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i16
  %94 = add nuw nsw i16 %93, %90
  %95 = shl nuw nsw i16 %94, 2
  %96 = getelementptr inbounds i16, i16* %8, i64 9
  store i16 %95, i16* %96, align 2
  %97 = getelementptr inbounds i8, i8* %7, i64 20
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i16
  %100 = getelementptr inbounds i8, i8* %7, i64 21
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i16
  %103 = add nuw nsw i16 %102, %99
  %104 = shl nuw nsw i16 %103, 2
  %105 = getelementptr inbounds i16, i16* %8, i64 10
  store i16 %104, i16* %105, align 2
  %106 = getelementptr inbounds i8, i8* %7, i64 22
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i16
  %109 = getelementptr inbounds i8, i8* %7, i64 23
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i16
  %112 = add nuw nsw i16 %111, %108
  %113 = shl nuw nsw i16 %112, 2
  %114 = getelementptr inbounds i16, i16* %8, i64 11
  store i16 %113, i16* %114, align 2
  %115 = getelementptr inbounds i8, i8* %7, i64 24
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i16
  %118 = getelementptr inbounds i8, i8* %7, i64 25
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i16
  %121 = add nuw nsw i16 %120, %117
  %122 = shl nuw nsw i16 %121, 2
  %123 = getelementptr inbounds i16, i16* %8, i64 12
  store i16 %122, i16* %123, align 2
  %124 = getelementptr inbounds i8, i8* %7, i64 26
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i16
  %127 = getelementptr inbounds i8, i8* %7, i64 27
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i16
  %130 = add nuw nsw i16 %129, %126
  %131 = shl nuw nsw i16 %130, 2
  %132 = getelementptr inbounds i16, i16* %8, i64 13
  store i16 %131, i16* %132, align 2
  %133 = getelementptr inbounds i8, i8* %7, i64 28
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i16
  %136 = getelementptr inbounds i8, i8* %7, i64 29
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i16
  %139 = add nuw nsw i16 %138, %135
  %140 = shl nuw nsw i16 %139, 2
  %141 = getelementptr inbounds i16, i16* %8, i64 14
  store i16 %140, i16* %141, align 2
  %142 = getelementptr inbounds i8, i8* %7, i64 30
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i16
  %145 = getelementptr inbounds i8, i8* %7, i64 31
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i16
  %148 = add nuw nsw i16 %147, %144
  %149 = shl nuw nsw i16 %148, 2
  %150 = getelementptr inbounds i16, i16* %8, i64 15
  store i16 %149, i16* %150, align 2
  %151 = getelementptr inbounds i8, i8* %7, i64 %4
  %152 = getelementptr inbounds i16, i16* %8, i64 32
  %153 = add nuw nsw i32 %6, 1
  %154 = icmp eq i32 %153, 8
  br i1 %154, label %155, label %5

155:                                              ; preds = %5
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void (i8*, i32, i16*)* @cfl_get_luma_subsampling_422_lbd_c(i8 zeroext) local_unnamed_addr #3 {
  %2 = zext i8 %0 to i64
  %3 = getelementptr inbounds [19 x void (i8*, i32, i16*)*], [19 x void (i8*, i32, i16*)*]* @cfl_get_luma_subsampling_422_lbd_c.subfn_422, i64 0, i64 %2
  %4 = load void (i8*, i32, i16*)*, void (i8*, i32, i16*)** %3, align 8
  ret void (i8*, i32, i16*)* %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_444_4x4_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  %5 = load i8, i8* %0, align 1
  %6 = zext i8 %5 to i16
  %7 = shl nuw nsw i16 %6, 3
  store i16 %7, i16* %2, align 2
  %8 = getelementptr inbounds i8, i8* %0, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i16
  %11 = shl nuw nsw i16 %10, 3
  %12 = getelementptr inbounds i16, i16* %2, i64 1
  store i16 %11, i16* %12, align 2
  %13 = getelementptr inbounds i8, i8* %0, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i16
  %16 = shl nuw nsw i16 %15, 3
  %17 = getelementptr inbounds i16, i16* %2, i64 2
  store i16 %16, i16* %17, align 2
  %18 = getelementptr inbounds i8, i8* %0, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i16
  %21 = shl nuw nsw i16 %20, 3
  %22 = getelementptr inbounds i16, i16* %2, i64 3
  store i16 %21, i16* %22, align 2
  %23 = getelementptr inbounds i8, i8* %0, i64 %4
  %24 = getelementptr inbounds i16, i16* %2, i64 32
  %25 = load i8, i8* %23, align 1
  %26 = zext i8 %25 to i16
  %27 = shl nuw nsw i16 %26, 3
  store i16 %27, i16* %24, align 2
  %28 = getelementptr inbounds i8, i8* %23, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  %31 = shl nuw nsw i16 %30, 3
  %32 = getelementptr inbounds i16, i16* %2, i64 33
  store i16 %31, i16* %32, align 2
  %33 = getelementptr inbounds i8, i8* %23, i64 2
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i16
  %36 = shl nuw nsw i16 %35, 3
  %37 = getelementptr inbounds i16, i16* %2, i64 34
  store i16 %36, i16* %37, align 2
  %38 = getelementptr inbounds i8, i8* %23, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i16
  %41 = shl nuw nsw i16 %40, 3
  %42 = getelementptr inbounds i16, i16* %2, i64 35
  store i16 %41, i16* %42, align 2
  %43 = getelementptr inbounds i8, i8* %23, i64 %4
  %44 = getelementptr inbounds i16, i16* %2, i64 64
  %45 = load i8, i8* %43, align 1
  %46 = zext i8 %45 to i16
  %47 = shl nuw nsw i16 %46, 3
  store i16 %47, i16* %44, align 2
  %48 = getelementptr inbounds i8, i8* %43, i64 1
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i16
  %51 = shl nuw nsw i16 %50, 3
  %52 = getelementptr inbounds i16, i16* %2, i64 65
  store i16 %51, i16* %52, align 2
  %53 = getelementptr inbounds i8, i8* %43, i64 2
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i16
  %56 = shl nuw nsw i16 %55, 3
  %57 = getelementptr inbounds i16, i16* %2, i64 66
  store i16 %56, i16* %57, align 2
  %58 = getelementptr inbounds i8, i8* %43, i64 3
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  %61 = shl nuw nsw i16 %60, 3
  %62 = getelementptr inbounds i16, i16* %2, i64 67
  store i16 %61, i16* %62, align 2
  %63 = getelementptr inbounds i8, i8* %43, i64 %4
  %64 = getelementptr inbounds i16, i16* %2, i64 96
  %65 = load i8, i8* %63, align 1
  %66 = zext i8 %65 to i16
  %67 = shl nuw nsw i16 %66, 3
  store i16 %67, i16* %64, align 2
  %68 = getelementptr inbounds i8, i8* %63, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i16
  %71 = shl nuw nsw i16 %70, 3
  %72 = getelementptr inbounds i16, i16* %2, i64 97
  store i16 %71, i16* %72, align 2
  %73 = getelementptr inbounds i8, i8* %63, i64 2
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i16
  %76 = shl nuw nsw i16 %75, 3
  %77 = getelementptr inbounds i16, i16* %2, i64 98
  store i16 %76, i16* %77, align 2
  %78 = getelementptr inbounds i8, i8* %63, i64 3
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i16
  %81 = shl nuw nsw i16 %80, 3
  %82 = getelementptr inbounds i16, i16* %2, i64 99
  store i16 %81, i16* %82, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_444_8x8_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ 0, %3 ], [ %49, %5 ]
  %7 = phi i8* [ %0, %3 ], [ %47, %5 ]
  %8 = phi i16* [ %2, %3 ], [ %48, %5 ]
  %9 = load i8, i8* %7, align 1
  %10 = zext i8 %9 to i16
  %11 = shl nuw nsw i16 %10, 3
  store i16 %11, i16* %8, align 2
  %12 = getelementptr inbounds i8, i8* %7, i64 1
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i16
  %15 = shl nuw nsw i16 %14, 3
  %16 = getelementptr inbounds i16, i16* %8, i64 1
  store i16 %15, i16* %16, align 2
  %17 = getelementptr inbounds i8, i8* %7, i64 2
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i16
  %20 = shl nuw nsw i16 %19, 3
  %21 = getelementptr inbounds i16, i16* %8, i64 2
  store i16 %20, i16* %21, align 2
  %22 = getelementptr inbounds i8, i8* %7, i64 3
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i16
  %25 = shl nuw nsw i16 %24, 3
  %26 = getelementptr inbounds i16, i16* %8, i64 3
  store i16 %25, i16* %26, align 2
  %27 = getelementptr inbounds i8, i8* %7, i64 4
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i16
  %30 = shl nuw nsw i16 %29, 3
  %31 = getelementptr inbounds i16, i16* %8, i64 4
  store i16 %30, i16* %31, align 2
  %32 = getelementptr inbounds i8, i8* %7, i64 5
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i16
  %35 = shl nuw nsw i16 %34, 3
  %36 = getelementptr inbounds i16, i16* %8, i64 5
  store i16 %35, i16* %36, align 2
  %37 = getelementptr inbounds i8, i8* %7, i64 6
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  %40 = shl nuw nsw i16 %39, 3
  %41 = getelementptr inbounds i16, i16* %8, i64 6
  store i16 %40, i16* %41, align 2
  %42 = getelementptr inbounds i8, i8* %7, i64 7
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i16
  %45 = shl nuw nsw i16 %44, 3
  %46 = getelementptr inbounds i16, i16* %8, i64 7
  store i16 %45, i16* %46, align 2
  %47 = getelementptr inbounds i8, i8* %7, i64 %4
  %48 = getelementptr inbounds i16, i16* %8, i64 32
  %49 = add nuw nsw i32 %6, 1
  %50 = icmp eq i32 %49, 8
  br i1 %50, label %51, label %5

51:                                               ; preds = %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_444_16x16_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ 0, %3 ], [ %89, %5 ]
  %7 = phi i8* [ %0, %3 ], [ %87, %5 ]
  %8 = phi i16* [ %2, %3 ], [ %88, %5 ]
  %9 = load i8, i8* %7, align 1
  %10 = zext i8 %9 to i16
  %11 = shl nuw nsw i16 %10, 3
  store i16 %11, i16* %8, align 2
  %12 = getelementptr inbounds i8, i8* %7, i64 1
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i16
  %15 = shl nuw nsw i16 %14, 3
  %16 = getelementptr inbounds i16, i16* %8, i64 1
  store i16 %15, i16* %16, align 2
  %17 = getelementptr inbounds i8, i8* %7, i64 2
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i16
  %20 = shl nuw nsw i16 %19, 3
  %21 = getelementptr inbounds i16, i16* %8, i64 2
  store i16 %20, i16* %21, align 2
  %22 = getelementptr inbounds i8, i8* %7, i64 3
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i16
  %25 = shl nuw nsw i16 %24, 3
  %26 = getelementptr inbounds i16, i16* %8, i64 3
  store i16 %25, i16* %26, align 2
  %27 = getelementptr inbounds i8, i8* %7, i64 4
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i16
  %30 = shl nuw nsw i16 %29, 3
  %31 = getelementptr inbounds i16, i16* %8, i64 4
  store i16 %30, i16* %31, align 2
  %32 = getelementptr inbounds i8, i8* %7, i64 5
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i16
  %35 = shl nuw nsw i16 %34, 3
  %36 = getelementptr inbounds i16, i16* %8, i64 5
  store i16 %35, i16* %36, align 2
  %37 = getelementptr inbounds i8, i8* %7, i64 6
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  %40 = shl nuw nsw i16 %39, 3
  %41 = getelementptr inbounds i16, i16* %8, i64 6
  store i16 %40, i16* %41, align 2
  %42 = getelementptr inbounds i8, i8* %7, i64 7
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i16
  %45 = shl nuw nsw i16 %44, 3
  %46 = getelementptr inbounds i16, i16* %8, i64 7
  store i16 %45, i16* %46, align 2
  %47 = getelementptr inbounds i8, i8* %7, i64 8
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  %50 = shl nuw nsw i16 %49, 3
  %51 = getelementptr inbounds i16, i16* %8, i64 8
  store i16 %50, i16* %51, align 2
  %52 = getelementptr inbounds i8, i8* %7, i64 9
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i16
  %55 = shl nuw nsw i16 %54, 3
  %56 = getelementptr inbounds i16, i16* %8, i64 9
  store i16 %55, i16* %56, align 2
  %57 = getelementptr inbounds i8, i8* %7, i64 10
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i16
  %60 = shl nuw nsw i16 %59, 3
  %61 = getelementptr inbounds i16, i16* %8, i64 10
  store i16 %60, i16* %61, align 2
  %62 = getelementptr inbounds i8, i8* %7, i64 11
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i16
  %65 = shl nuw nsw i16 %64, 3
  %66 = getelementptr inbounds i16, i16* %8, i64 11
  store i16 %65, i16* %66, align 2
  %67 = getelementptr inbounds i8, i8* %7, i64 12
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i16
  %70 = shl nuw nsw i16 %69, 3
  %71 = getelementptr inbounds i16, i16* %8, i64 12
  store i16 %70, i16* %71, align 2
  %72 = getelementptr inbounds i8, i8* %7, i64 13
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i16
  %75 = shl nuw nsw i16 %74, 3
  %76 = getelementptr inbounds i16, i16* %8, i64 13
  store i16 %75, i16* %76, align 2
  %77 = getelementptr inbounds i8, i8* %7, i64 14
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i16
  %80 = shl nuw nsw i16 %79, 3
  %81 = getelementptr inbounds i16, i16* %8, i64 14
  store i16 %80, i16* %81, align 2
  %82 = getelementptr inbounds i8, i8* %7, i64 15
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i16
  %85 = shl nuw nsw i16 %84, 3
  %86 = getelementptr inbounds i16, i16* %8, i64 15
  store i16 %85, i16* %86, align 2
  %87 = getelementptr inbounds i8, i8* %7, i64 %4
  %88 = getelementptr inbounds i16, i16* %8, i64 32
  %89 = add nuw nsw i32 %6, 1
  %90 = icmp eq i32 %89, 16
  br i1 %90, label %91, label %5

91:                                               ; preds = %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_444_32x32_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  br label %5

5:                                                ; preds = %50, %3
  %6 = phi i64 [ %55, %50 ], [ 0, %3 ]
  %7 = phi i32 [ %53, %50 ], [ 0, %3 ]
  %8 = phi i8* [ %51, %50 ], [ %0, %3 ]
  %9 = phi i16* [ %52, %50 ], [ %2, %3 ]
  %10 = shl nuw nsw i64 %6, 5
  %11 = mul i64 %6, %4
  %12 = add i64 %11, 32
  %13 = getelementptr i8, i8* %0, i64 %12
  %14 = getelementptr i8, i8* %0, i64 %11
  %15 = add i64 %10, 32
  %16 = getelementptr i16, i16* %2, i64 %15
  %17 = bitcast i16* %16 to i8*
  %18 = getelementptr i16, i16* %2, i64 %10
  %19 = bitcast i16* %18 to i8*
  %20 = icmp ugt i8* %13, %19
  %21 = icmp ult i8* %14, %17
  %22 = and i1 %20, %21
  br i1 %22, label %56, label %23

23:                                               ; preds = %5
  %24 = bitcast i8* %8 to <8 x i8>*
  %25 = load <8 x i8>, <8 x i8>* %24, align 1, !alias.scope !263
  %26 = zext <8 x i8> %25 to <8 x i16>
  %27 = shl nuw nsw <8 x i16> %26, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %28 = bitcast i16* %9 to <8 x i16>*
  store <8 x i16> %27, <8 x i16>* %28, align 2, !alias.scope !266, !noalias !263
  %29 = getelementptr inbounds i8, i8* %8, i64 8
  %30 = bitcast i8* %29 to <8 x i8>*
  %31 = load <8 x i8>, <8 x i8>* %30, align 1, !alias.scope !263
  %32 = zext <8 x i8> %31 to <8 x i16>
  %33 = shl nuw nsw <8 x i16> %32, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %34 = getelementptr inbounds i16, i16* %9, i64 8
  %35 = bitcast i16* %34 to <8 x i16>*
  store <8 x i16> %33, <8 x i16>* %35, align 2, !alias.scope !266, !noalias !263
  %36 = getelementptr inbounds i8, i8* %8, i64 16
  %37 = bitcast i8* %36 to <8 x i8>*
  %38 = load <8 x i8>, <8 x i8>* %37, align 1, !alias.scope !263
  %39 = zext <8 x i8> %38 to <8 x i16>
  %40 = shl nuw nsw <8 x i16> %39, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %41 = getelementptr inbounds i16, i16* %9, i64 16
  %42 = bitcast i16* %41 to <8 x i16>*
  store <8 x i16> %40, <8 x i16>* %42, align 2, !alias.scope !266, !noalias !263
  %43 = getelementptr inbounds i8, i8* %8, i64 24
  %44 = bitcast i8* %43 to <8 x i8>*
  %45 = load <8 x i8>, <8 x i8>* %44, align 1, !alias.scope !263
  %46 = zext <8 x i8> %45 to <8 x i16>
  %47 = shl nuw nsw <8 x i16> %46, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %48 = getelementptr inbounds i16, i16* %9, i64 24
  %49 = bitcast i16* %48 to <8 x i16>*
  store <8 x i16> %47, <8 x i16>* %49, align 2, !alias.scope !266, !noalias !263
  br label %50

50:                                               ; preds = %56, %23
  %51 = getelementptr inbounds i8, i8* %8, i64 %4
  %52 = getelementptr inbounds i16, i16* %9, i64 32
  %53 = add nuw nsw i32 %7, 1
  %54 = icmp eq i32 %53, 32
  %55 = add i64 %6, 1
  br i1 %54, label %83, label %5

56:                                               ; preds = %5, %56
  %57 = phi i64 [ %81, %56 ], [ 0, %5 ]
  %58 = getelementptr inbounds i8, i8* %8, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  %61 = shl nuw nsw i16 %60, 3
  %62 = getelementptr inbounds i16, i16* %9, i64 %57
  store i16 %61, i16* %62, align 2
  %63 = or i64 %57, 1
  %64 = getelementptr inbounds i8, i8* %8, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i16
  %67 = shl nuw nsw i16 %66, 3
  %68 = getelementptr inbounds i16, i16* %9, i64 %63
  store i16 %67, i16* %68, align 2
  %69 = or i64 %57, 2
  %70 = getelementptr inbounds i8, i8* %8, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i16
  %73 = shl nuw nsw i16 %72, 3
  %74 = getelementptr inbounds i16, i16* %9, i64 %69
  store i16 %73, i16* %74, align 2
  %75 = or i64 %57, 3
  %76 = getelementptr inbounds i8, i8* %8, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i16
  %79 = shl nuw nsw i16 %78, 3
  %80 = getelementptr inbounds i16, i16* %9, i64 %75
  store i16 %79, i16* %80, align 2
  %81 = add nuw nsw i64 %57, 4
  %82 = icmp eq i64 %81, 32
  br i1 %82, label %50, label %56, !llvm.loop !268

83:                                               ; preds = %50
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_444_4x8_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  %5 = load i8, i8* %0, align 1
  %6 = zext i8 %5 to i16
  %7 = shl nuw nsw i16 %6, 3
  store i16 %7, i16* %2, align 2
  %8 = getelementptr inbounds i8, i8* %0, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i16
  %11 = shl nuw nsw i16 %10, 3
  %12 = getelementptr inbounds i16, i16* %2, i64 1
  store i16 %11, i16* %12, align 2
  %13 = getelementptr inbounds i8, i8* %0, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i16
  %16 = shl nuw nsw i16 %15, 3
  %17 = getelementptr inbounds i16, i16* %2, i64 2
  store i16 %16, i16* %17, align 2
  %18 = getelementptr inbounds i8, i8* %0, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i16
  %21 = shl nuw nsw i16 %20, 3
  %22 = getelementptr inbounds i16, i16* %2, i64 3
  store i16 %21, i16* %22, align 2
  %23 = getelementptr inbounds i8, i8* %0, i64 %4
  %24 = getelementptr inbounds i16, i16* %2, i64 32
  %25 = load i8, i8* %23, align 1
  %26 = zext i8 %25 to i16
  %27 = shl nuw nsw i16 %26, 3
  store i16 %27, i16* %24, align 2
  %28 = getelementptr inbounds i8, i8* %23, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  %31 = shl nuw nsw i16 %30, 3
  %32 = getelementptr inbounds i16, i16* %2, i64 33
  store i16 %31, i16* %32, align 2
  %33 = getelementptr inbounds i8, i8* %23, i64 2
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i16
  %36 = shl nuw nsw i16 %35, 3
  %37 = getelementptr inbounds i16, i16* %2, i64 34
  store i16 %36, i16* %37, align 2
  %38 = getelementptr inbounds i8, i8* %23, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i16
  %41 = shl nuw nsw i16 %40, 3
  %42 = getelementptr inbounds i16, i16* %2, i64 35
  store i16 %41, i16* %42, align 2
  %43 = getelementptr inbounds i8, i8* %23, i64 %4
  %44 = getelementptr inbounds i16, i16* %2, i64 64
  %45 = load i8, i8* %43, align 1
  %46 = zext i8 %45 to i16
  %47 = shl nuw nsw i16 %46, 3
  store i16 %47, i16* %44, align 2
  %48 = getelementptr inbounds i8, i8* %43, i64 1
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i16
  %51 = shl nuw nsw i16 %50, 3
  %52 = getelementptr inbounds i16, i16* %2, i64 65
  store i16 %51, i16* %52, align 2
  %53 = getelementptr inbounds i8, i8* %43, i64 2
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i16
  %56 = shl nuw nsw i16 %55, 3
  %57 = getelementptr inbounds i16, i16* %2, i64 66
  store i16 %56, i16* %57, align 2
  %58 = getelementptr inbounds i8, i8* %43, i64 3
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  %61 = shl nuw nsw i16 %60, 3
  %62 = getelementptr inbounds i16, i16* %2, i64 67
  store i16 %61, i16* %62, align 2
  %63 = getelementptr inbounds i8, i8* %43, i64 %4
  %64 = getelementptr inbounds i16, i16* %2, i64 96
  %65 = load i8, i8* %63, align 1
  %66 = zext i8 %65 to i16
  %67 = shl nuw nsw i16 %66, 3
  store i16 %67, i16* %64, align 2
  %68 = getelementptr inbounds i8, i8* %63, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i16
  %71 = shl nuw nsw i16 %70, 3
  %72 = getelementptr inbounds i16, i16* %2, i64 97
  store i16 %71, i16* %72, align 2
  %73 = getelementptr inbounds i8, i8* %63, i64 2
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i16
  %76 = shl nuw nsw i16 %75, 3
  %77 = getelementptr inbounds i16, i16* %2, i64 98
  store i16 %76, i16* %77, align 2
  %78 = getelementptr inbounds i8, i8* %63, i64 3
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i16
  %81 = shl nuw nsw i16 %80, 3
  %82 = getelementptr inbounds i16, i16* %2, i64 99
  store i16 %81, i16* %82, align 2
  %83 = getelementptr inbounds i8, i8* %63, i64 %4
  %84 = getelementptr inbounds i16, i16* %2, i64 128
  %85 = load i8, i8* %83, align 1
  %86 = zext i8 %85 to i16
  %87 = shl nuw nsw i16 %86, 3
  store i16 %87, i16* %84, align 2
  %88 = getelementptr inbounds i8, i8* %83, i64 1
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i16
  %91 = shl nuw nsw i16 %90, 3
  %92 = getelementptr inbounds i16, i16* %2, i64 129
  store i16 %91, i16* %92, align 2
  %93 = getelementptr inbounds i8, i8* %83, i64 2
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i16
  %96 = shl nuw nsw i16 %95, 3
  %97 = getelementptr inbounds i16, i16* %2, i64 130
  store i16 %96, i16* %97, align 2
  %98 = getelementptr inbounds i8, i8* %83, i64 3
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i16
  %101 = shl nuw nsw i16 %100, 3
  %102 = getelementptr inbounds i16, i16* %2, i64 131
  store i16 %101, i16* %102, align 2
  %103 = getelementptr inbounds i8, i8* %83, i64 %4
  %104 = getelementptr inbounds i16, i16* %2, i64 160
  %105 = load i8, i8* %103, align 1
  %106 = zext i8 %105 to i16
  %107 = shl nuw nsw i16 %106, 3
  store i16 %107, i16* %104, align 2
  %108 = getelementptr inbounds i8, i8* %103, i64 1
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i16
  %111 = shl nuw nsw i16 %110, 3
  %112 = getelementptr inbounds i16, i16* %2, i64 161
  store i16 %111, i16* %112, align 2
  %113 = getelementptr inbounds i8, i8* %103, i64 2
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i16
  %116 = shl nuw nsw i16 %115, 3
  %117 = getelementptr inbounds i16, i16* %2, i64 162
  store i16 %116, i16* %117, align 2
  %118 = getelementptr inbounds i8, i8* %103, i64 3
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i16
  %121 = shl nuw nsw i16 %120, 3
  %122 = getelementptr inbounds i16, i16* %2, i64 163
  store i16 %121, i16* %122, align 2
  %123 = getelementptr inbounds i8, i8* %103, i64 %4
  %124 = getelementptr inbounds i16, i16* %2, i64 192
  %125 = load i8, i8* %123, align 1
  %126 = zext i8 %125 to i16
  %127 = shl nuw nsw i16 %126, 3
  store i16 %127, i16* %124, align 2
  %128 = getelementptr inbounds i8, i8* %123, i64 1
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i16
  %131 = shl nuw nsw i16 %130, 3
  %132 = getelementptr inbounds i16, i16* %2, i64 193
  store i16 %131, i16* %132, align 2
  %133 = getelementptr inbounds i8, i8* %123, i64 2
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i16
  %136 = shl nuw nsw i16 %135, 3
  %137 = getelementptr inbounds i16, i16* %2, i64 194
  store i16 %136, i16* %137, align 2
  %138 = getelementptr inbounds i8, i8* %123, i64 3
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i16
  %141 = shl nuw nsw i16 %140, 3
  %142 = getelementptr inbounds i16, i16* %2, i64 195
  store i16 %141, i16* %142, align 2
  %143 = getelementptr inbounds i8, i8* %123, i64 %4
  %144 = getelementptr inbounds i16, i16* %2, i64 224
  %145 = load i8, i8* %143, align 1
  %146 = zext i8 %145 to i16
  %147 = shl nuw nsw i16 %146, 3
  store i16 %147, i16* %144, align 2
  %148 = getelementptr inbounds i8, i8* %143, i64 1
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i16
  %151 = shl nuw nsw i16 %150, 3
  %152 = getelementptr inbounds i16, i16* %2, i64 225
  store i16 %151, i16* %152, align 2
  %153 = getelementptr inbounds i8, i8* %143, i64 2
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i16
  %156 = shl nuw nsw i16 %155, 3
  %157 = getelementptr inbounds i16, i16* %2, i64 226
  store i16 %156, i16* %157, align 2
  %158 = getelementptr inbounds i8, i8* %143, i64 3
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i16
  %161 = shl nuw nsw i16 %160, 3
  %162 = getelementptr inbounds i16, i16* %2, i64 227
  store i16 %161, i16* %162, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_444_8x4_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  %5 = load i8, i8* %0, align 1
  %6 = zext i8 %5 to i16
  %7 = shl nuw nsw i16 %6, 3
  store i16 %7, i16* %2, align 2
  %8 = getelementptr inbounds i8, i8* %0, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i16
  %11 = shl nuw nsw i16 %10, 3
  %12 = getelementptr inbounds i16, i16* %2, i64 1
  store i16 %11, i16* %12, align 2
  %13 = getelementptr inbounds i8, i8* %0, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i16
  %16 = shl nuw nsw i16 %15, 3
  %17 = getelementptr inbounds i16, i16* %2, i64 2
  store i16 %16, i16* %17, align 2
  %18 = getelementptr inbounds i8, i8* %0, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i16
  %21 = shl nuw nsw i16 %20, 3
  %22 = getelementptr inbounds i16, i16* %2, i64 3
  store i16 %21, i16* %22, align 2
  %23 = getelementptr inbounds i8, i8* %0, i64 4
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i16
  %26 = shl nuw nsw i16 %25, 3
  %27 = getelementptr inbounds i16, i16* %2, i64 4
  store i16 %26, i16* %27, align 2
  %28 = getelementptr inbounds i8, i8* %0, i64 5
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  %31 = shl nuw nsw i16 %30, 3
  %32 = getelementptr inbounds i16, i16* %2, i64 5
  store i16 %31, i16* %32, align 2
  %33 = getelementptr inbounds i8, i8* %0, i64 6
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i16
  %36 = shl nuw nsw i16 %35, 3
  %37 = getelementptr inbounds i16, i16* %2, i64 6
  store i16 %36, i16* %37, align 2
  %38 = getelementptr inbounds i8, i8* %0, i64 7
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i16
  %41 = shl nuw nsw i16 %40, 3
  %42 = getelementptr inbounds i16, i16* %2, i64 7
  store i16 %41, i16* %42, align 2
  %43 = getelementptr inbounds i8, i8* %0, i64 %4
  %44 = getelementptr inbounds i16, i16* %2, i64 32
  %45 = load i8, i8* %43, align 1
  %46 = zext i8 %45 to i16
  %47 = shl nuw nsw i16 %46, 3
  store i16 %47, i16* %44, align 2
  %48 = getelementptr inbounds i8, i8* %43, i64 1
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i16
  %51 = shl nuw nsw i16 %50, 3
  %52 = getelementptr inbounds i16, i16* %2, i64 33
  store i16 %51, i16* %52, align 2
  %53 = getelementptr inbounds i8, i8* %43, i64 2
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i16
  %56 = shl nuw nsw i16 %55, 3
  %57 = getelementptr inbounds i16, i16* %2, i64 34
  store i16 %56, i16* %57, align 2
  %58 = getelementptr inbounds i8, i8* %43, i64 3
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  %61 = shl nuw nsw i16 %60, 3
  %62 = getelementptr inbounds i16, i16* %2, i64 35
  store i16 %61, i16* %62, align 2
  %63 = getelementptr inbounds i8, i8* %43, i64 4
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i16
  %66 = shl nuw nsw i16 %65, 3
  %67 = getelementptr inbounds i16, i16* %2, i64 36
  store i16 %66, i16* %67, align 2
  %68 = getelementptr inbounds i8, i8* %43, i64 5
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i16
  %71 = shl nuw nsw i16 %70, 3
  %72 = getelementptr inbounds i16, i16* %2, i64 37
  store i16 %71, i16* %72, align 2
  %73 = getelementptr inbounds i8, i8* %43, i64 6
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i16
  %76 = shl nuw nsw i16 %75, 3
  %77 = getelementptr inbounds i16, i16* %2, i64 38
  store i16 %76, i16* %77, align 2
  %78 = getelementptr inbounds i8, i8* %43, i64 7
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i16
  %81 = shl nuw nsw i16 %80, 3
  %82 = getelementptr inbounds i16, i16* %2, i64 39
  store i16 %81, i16* %82, align 2
  %83 = getelementptr inbounds i8, i8* %43, i64 %4
  %84 = getelementptr inbounds i16, i16* %2, i64 64
  %85 = load i8, i8* %83, align 1
  %86 = zext i8 %85 to i16
  %87 = shl nuw nsw i16 %86, 3
  store i16 %87, i16* %84, align 2
  %88 = getelementptr inbounds i8, i8* %83, i64 1
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i16
  %91 = shl nuw nsw i16 %90, 3
  %92 = getelementptr inbounds i16, i16* %2, i64 65
  store i16 %91, i16* %92, align 2
  %93 = getelementptr inbounds i8, i8* %83, i64 2
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i16
  %96 = shl nuw nsw i16 %95, 3
  %97 = getelementptr inbounds i16, i16* %2, i64 66
  store i16 %96, i16* %97, align 2
  %98 = getelementptr inbounds i8, i8* %83, i64 3
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i16
  %101 = shl nuw nsw i16 %100, 3
  %102 = getelementptr inbounds i16, i16* %2, i64 67
  store i16 %101, i16* %102, align 2
  %103 = getelementptr inbounds i8, i8* %83, i64 4
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i16
  %106 = shl nuw nsw i16 %105, 3
  %107 = getelementptr inbounds i16, i16* %2, i64 68
  store i16 %106, i16* %107, align 2
  %108 = getelementptr inbounds i8, i8* %83, i64 5
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i16
  %111 = shl nuw nsw i16 %110, 3
  %112 = getelementptr inbounds i16, i16* %2, i64 69
  store i16 %111, i16* %112, align 2
  %113 = getelementptr inbounds i8, i8* %83, i64 6
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i16
  %116 = shl nuw nsw i16 %115, 3
  %117 = getelementptr inbounds i16, i16* %2, i64 70
  store i16 %116, i16* %117, align 2
  %118 = getelementptr inbounds i8, i8* %83, i64 7
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i16
  %121 = shl nuw nsw i16 %120, 3
  %122 = getelementptr inbounds i16, i16* %2, i64 71
  store i16 %121, i16* %122, align 2
  %123 = getelementptr inbounds i8, i8* %83, i64 %4
  %124 = getelementptr inbounds i16, i16* %2, i64 96
  %125 = load i8, i8* %123, align 1
  %126 = zext i8 %125 to i16
  %127 = shl nuw nsw i16 %126, 3
  store i16 %127, i16* %124, align 2
  %128 = getelementptr inbounds i8, i8* %123, i64 1
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i16
  %131 = shl nuw nsw i16 %130, 3
  %132 = getelementptr inbounds i16, i16* %2, i64 97
  store i16 %131, i16* %132, align 2
  %133 = getelementptr inbounds i8, i8* %123, i64 2
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i16
  %136 = shl nuw nsw i16 %135, 3
  %137 = getelementptr inbounds i16, i16* %2, i64 98
  store i16 %136, i16* %137, align 2
  %138 = getelementptr inbounds i8, i8* %123, i64 3
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i16
  %141 = shl nuw nsw i16 %140, 3
  %142 = getelementptr inbounds i16, i16* %2, i64 99
  store i16 %141, i16* %142, align 2
  %143 = getelementptr inbounds i8, i8* %123, i64 4
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i16
  %146 = shl nuw nsw i16 %145, 3
  %147 = getelementptr inbounds i16, i16* %2, i64 100
  store i16 %146, i16* %147, align 2
  %148 = getelementptr inbounds i8, i8* %123, i64 5
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i16
  %151 = shl nuw nsw i16 %150, 3
  %152 = getelementptr inbounds i16, i16* %2, i64 101
  store i16 %151, i16* %152, align 2
  %153 = getelementptr inbounds i8, i8* %123, i64 6
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i16
  %156 = shl nuw nsw i16 %155, 3
  %157 = getelementptr inbounds i16, i16* %2, i64 102
  store i16 %156, i16* %157, align 2
  %158 = getelementptr inbounds i8, i8* %123, i64 7
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i16
  %161 = shl nuw nsw i16 %160, 3
  %162 = getelementptr inbounds i16, i16* %2, i64 103
  store i16 %161, i16* %162, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_444_8x16_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ 0, %3 ], [ %49, %5 ]
  %7 = phi i8* [ %0, %3 ], [ %47, %5 ]
  %8 = phi i16* [ %2, %3 ], [ %48, %5 ]
  %9 = load i8, i8* %7, align 1
  %10 = zext i8 %9 to i16
  %11 = shl nuw nsw i16 %10, 3
  store i16 %11, i16* %8, align 2
  %12 = getelementptr inbounds i8, i8* %7, i64 1
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i16
  %15 = shl nuw nsw i16 %14, 3
  %16 = getelementptr inbounds i16, i16* %8, i64 1
  store i16 %15, i16* %16, align 2
  %17 = getelementptr inbounds i8, i8* %7, i64 2
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i16
  %20 = shl nuw nsw i16 %19, 3
  %21 = getelementptr inbounds i16, i16* %8, i64 2
  store i16 %20, i16* %21, align 2
  %22 = getelementptr inbounds i8, i8* %7, i64 3
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i16
  %25 = shl nuw nsw i16 %24, 3
  %26 = getelementptr inbounds i16, i16* %8, i64 3
  store i16 %25, i16* %26, align 2
  %27 = getelementptr inbounds i8, i8* %7, i64 4
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i16
  %30 = shl nuw nsw i16 %29, 3
  %31 = getelementptr inbounds i16, i16* %8, i64 4
  store i16 %30, i16* %31, align 2
  %32 = getelementptr inbounds i8, i8* %7, i64 5
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i16
  %35 = shl nuw nsw i16 %34, 3
  %36 = getelementptr inbounds i16, i16* %8, i64 5
  store i16 %35, i16* %36, align 2
  %37 = getelementptr inbounds i8, i8* %7, i64 6
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  %40 = shl nuw nsw i16 %39, 3
  %41 = getelementptr inbounds i16, i16* %8, i64 6
  store i16 %40, i16* %41, align 2
  %42 = getelementptr inbounds i8, i8* %7, i64 7
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i16
  %45 = shl nuw nsw i16 %44, 3
  %46 = getelementptr inbounds i16, i16* %8, i64 7
  store i16 %45, i16* %46, align 2
  %47 = getelementptr inbounds i8, i8* %7, i64 %4
  %48 = getelementptr inbounds i16, i16* %8, i64 32
  %49 = add nuw nsw i32 %6, 1
  %50 = icmp eq i32 %49, 16
  br i1 %50, label %51, label %5

51:                                               ; preds = %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_444_16x8_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ 0, %3 ], [ %89, %5 ]
  %7 = phi i8* [ %0, %3 ], [ %87, %5 ]
  %8 = phi i16* [ %2, %3 ], [ %88, %5 ]
  %9 = load i8, i8* %7, align 1
  %10 = zext i8 %9 to i16
  %11 = shl nuw nsw i16 %10, 3
  store i16 %11, i16* %8, align 2
  %12 = getelementptr inbounds i8, i8* %7, i64 1
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i16
  %15 = shl nuw nsw i16 %14, 3
  %16 = getelementptr inbounds i16, i16* %8, i64 1
  store i16 %15, i16* %16, align 2
  %17 = getelementptr inbounds i8, i8* %7, i64 2
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i16
  %20 = shl nuw nsw i16 %19, 3
  %21 = getelementptr inbounds i16, i16* %8, i64 2
  store i16 %20, i16* %21, align 2
  %22 = getelementptr inbounds i8, i8* %7, i64 3
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i16
  %25 = shl nuw nsw i16 %24, 3
  %26 = getelementptr inbounds i16, i16* %8, i64 3
  store i16 %25, i16* %26, align 2
  %27 = getelementptr inbounds i8, i8* %7, i64 4
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i16
  %30 = shl nuw nsw i16 %29, 3
  %31 = getelementptr inbounds i16, i16* %8, i64 4
  store i16 %30, i16* %31, align 2
  %32 = getelementptr inbounds i8, i8* %7, i64 5
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i16
  %35 = shl nuw nsw i16 %34, 3
  %36 = getelementptr inbounds i16, i16* %8, i64 5
  store i16 %35, i16* %36, align 2
  %37 = getelementptr inbounds i8, i8* %7, i64 6
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  %40 = shl nuw nsw i16 %39, 3
  %41 = getelementptr inbounds i16, i16* %8, i64 6
  store i16 %40, i16* %41, align 2
  %42 = getelementptr inbounds i8, i8* %7, i64 7
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i16
  %45 = shl nuw nsw i16 %44, 3
  %46 = getelementptr inbounds i16, i16* %8, i64 7
  store i16 %45, i16* %46, align 2
  %47 = getelementptr inbounds i8, i8* %7, i64 8
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  %50 = shl nuw nsw i16 %49, 3
  %51 = getelementptr inbounds i16, i16* %8, i64 8
  store i16 %50, i16* %51, align 2
  %52 = getelementptr inbounds i8, i8* %7, i64 9
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i16
  %55 = shl nuw nsw i16 %54, 3
  %56 = getelementptr inbounds i16, i16* %8, i64 9
  store i16 %55, i16* %56, align 2
  %57 = getelementptr inbounds i8, i8* %7, i64 10
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i16
  %60 = shl nuw nsw i16 %59, 3
  %61 = getelementptr inbounds i16, i16* %8, i64 10
  store i16 %60, i16* %61, align 2
  %62 = getelementptr inbounds i8, i8* %7, i64 11
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i16
  %65 = shl nuw nsw i16 %64, 3
  %66 = getelementptr inbounds i16, i16* %8, i64 11
  store i16 %65, i16* %66, align 2
  %67 = getelementptr inbounds i8, i8* %7, i64 12
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i16
  %70 = shl nuw nsw i16 %69, 3
  %71 = getelementptr inbounds i16, i16* %8, i64 12
  store i16 %70, i16* %71, align 2
  %72 = getelementptr inbounds i8, i8* %7, i64 13
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i16
  %75 = shl nuw nsw i16 %74, 3
  %76 = getelementptr inbounds i16, i16* %8, i64 13
  store i16 %75, i16* %76, align 2
  %77 = getelementptr inbounds i8, i8* %7, i64 14
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i16
  %80 = shl nuw nsw i16 %79, 3
  %81 = getelementptr inbounds i16, i16* %8, i64 14
  store i16 %80, i16* %81, align 2
  %82 = getelementptr inbounds i8, i8* %7, i64 15
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i16
  %85 = shl nuw nsw i16 %84, 3
  %86 = getelementptr inbounds i16, i16* %8, i64 15
  store i16 %85, i16* %86, align 2
  %87 = getelementptr inbounds i8, i8* %7, i64 %4
  %88 = getelementptr inbounds i16, i16* %8, i64 32
  %89 = add nuw nsw i32 %6, 1
  %90 = icmp eq i32 %89, 8
  br i1 %90, label %91, label %5

91:                                               ; preds = %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_444_16x32_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ 0, %3 ], [ %89, %5 ]
  %7 = phi i8* [ %0, %3 ], [ %87, %5 ]
  %8 = phi i16* [ %2, %3 ], [ %88, %5 ]
  %9 = load i8, i8* %7, align 1
  %10 = zext i8 %9 to i16
  %11 = shl nuw nsw i16 %10, 3
  store i16 %11, i16* %8, align 2
  %12 = getelementptr inbounds i8, i8* %7, i64 1
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i16
  %15 = shl nuw nsw i16 %14, 3
  %16 = getelementptr inbounds i16, i16* %8, i64 1
  store i16 %15, i16* %16, align 2
  %17 = getelementptr inbounds i8, i8* %7, i64 2
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i16
  %20 = shl nuw nsw i16 %19, 3
  %21 = getelementptr inbounds i16, i16* %8, i64 2
  store i16 %20, i16* %21, align 2
  %22 = getelementptr inbounds i8, i8* %7, i64 3
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i16
  %25 = shl nuw nsw i16 %24, 3
  %26 = getelementptr inbounds i16, i16* %8, i64 3
  store i16 %25, i16* %26, align 2
  %27 = getelementptr inbounds i8, i8* %7, i64 4
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i16
  %30 = shl nuw nsw i16 %29, 3
  %31 = getelementptr inbounds i16, i16* %8, i64 4
  store i16 %30, i16* %31, align 2
  %32 = getelementptr inbounds i8, i8* %7, i64 5
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i16
  %35 = shl nuw nsw i16 %34, 3
  %36 = getelementptr inbounds i16, i16* %8, i64 5
  store i16 %35, i16* %36, align 2
  %37 = getelementptr inbounds i8, i8* %7, i64 6
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  %40 = shl nuw nsw i16 %39, 3
  %41 = getelementptr inbounds i16, i16* %8, i64 6
  store i16 %40, i16* %41, align 2
  %42 = getelementptr inbounds i8, i8* %7, i64 7
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i16
  %45 = shl nuw nsw i16 %44, 3
  %46 = getelementptr inbounds i16, i16* %8, i64 7
  store i16 %45, i16* %46, align 2
  %47 = getelementptr inbounds i8, i8* %7, i64 8
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  %50 = shl nuw nsw i16 %49, 3
  %51 = getelementptr inbounds i16, i16* %8, i64 8
  store i16 %50, i16* %51, align 2
  %52 = getelementptr inbounds i8, i8* %7, i64 9
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i16
  %55 = shl nuw nsw i16 %54, 3
  %56 = getelementptr inbounds i16, i16* %8, i64 9
  store i16 %55, i16* %56, align 2
  %57 = getelementptr inbounds i8, i8* %7, i64 10
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i16
  %60 = shl nuw nsw i16 %59, 3
  %61 = getelementptr inbounds i16, i16* %8, i64 10
  store i16 %60, i16* %61, align 2
  %62 = getelementptr inbounds i8, i8* %7, i64 11
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i16
  %65 = shl nuw nsw i16 %64, 3
  %66 = getelementptr inbounds i16, i16* %8, i64 11
  store i16 %65, i16* %66, align 2
  %67 = getelementptr inbounds i8, i8* %7, i64 12
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i16
  %70 = shl nuw nsw i16 %69, 3
  %71 = getelementptr inbounds i16, i16* %8, i64 12
  store i16 %70, i16* %71, align 2
  %72 = getelementptr inbounds i8, i8* %7, i64 13
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i16
  %75 = shl nuw nsw i16 %74, 3
  %76 = getelementptr inbounds i16, i16* %8, i64 13
  store i16 %75, i16* %76, align 2
  %77 = getelementptr inbounds i8, i8* %7, i64 14
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i16
  %80 = shl nuw nsw i16 %79, 3
  %81 = getelementptr inbounds i16, i16* %8, i64 14
  store i16 %80, i16* %81, align 2
  %82 = getelementptr inbounds i8, i8* %7, i64 15
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i16
  %85 = shl nuw nsw i16 %84, 3
  %86 = getelementptr inbounds i16, i16* %8, i64 15
  store i16 %85, i16* %86, align 2
  %87 = getelementptr inbounds i8, i8* %7, i64 %4
  %88 = getelementptr inbounds i16, i16* %8, i64 32
  %89 = add nuw nsw i32 %6, 1
  %90 = icmp eq i32 %89, 32
  br i1 %90, label %91, label %5

91:                                               ; preds = %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_444_32x16_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  %5 = bitcast i16* %2 to i8*
  %6 = getelementptr i16, i16* %2, i64 32
  %7 = bitcast i16* %6 to i8*
  %8 = getelementptr i8, i8* %0, i64 32
  %9 = icmp ugt i8* %8, %5
  %10 = icmp ugt i8* %7, %0
  %11 = and i1 %9, %10
  br i1 %11, label %77, label %12

12:                                               ; preds = %3
  %13 = bitcast i8* %0 to <8 x i8>*
  %14 = load <8 x i8>, <8 x i8>* %13, align 1, !alias.scope !269
  %15 = zext <8 x i8> %14 to <8 x i16>
  %16 = shl nuw nsw <8 x i16> %15, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %17 = bitcast i16* %2 to <8 x i16>*
  store <8 x i16> %16, <8 x i16>* %17, align 2, !alias.scope !272, !noalias !269
  %18 = getelementptr inbounds i8, i8* %0, i64 8
  %19 = bitcast i8* %18 to <8 x i8>*
  %20 = load <8 x i8>, <8 x i8>* %19, align 1, !alias.scope !269
  %21 = zext <8 x i8> %20 to <8 x i16>
  %22 = shl nuw nsw <8 x i16> %21, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %23 = getelementptr inbounds i16, i16* %2, i64 8
  %24 = bitcast i16* %23 to <8 x i16>*
  store <8 x i16> %22, <8 x i16>* %24, align 2, !alias.scope !272, !noalias !269
  %25 = getelementptr inbounds i8, i8* %0, i64 16
  %26 = bitcast i8* %25 to <8 x i8>*
  %27 = load <8 x i8>, <8 x i8>* %26, align 1, !alias.scope !269
  %28 = zext <8 x i8> %27 to <8 x i16>
  %29 = shl nuw nsw <8 x i16> %28, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %30 = getelementptr inbounds i16, i16* %2, i64 16
  %31 = bitcast i16* %30 to <8 x i16>*
  store <8 x i16> %29, <8 x i16>* %31, align 2, !alias.scope !272, !noalias !269
  %32 = getelementptr inbounds i8, i8* %0, i64 24
  %33 = bitcast i8* %32 to <8 x i8>*
  %34 = load <8 x i8>, <8 x i8>* %33, align 1, !alias.scope !269
  %35 = zext <8 x i8> %34 to <8 x i16>
  %36 = shl nuw nsw <8 x i16> %35, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %37 = getelementptr inbounds i16, i16* %2, i64 24
  %38 = bitcast i16* %37 to <8 x i16>*
  store <8 x i16> %36, <8 x i16>* %38, align 2, !alias.scope !272, !noalias !269
  br label %39

39:                                               ; preds = %77, %12
  %40 = getelementptr inbounds i8, i8* %0, i64 %4
  %41 = getelementptr inbounds i16, i16* %2, i64 32
  %42 = bitcast i16* %41 to i8*
  %43 = getelementptr i16, i16* %2, i64 64
  %44 = bitcast i16* %43 to i8*
  %45 = add nsw i64 %4, 32
  %46 = getelementptr i8, i8* %0, i64 %45
  %47 = icmp ugt i8* %46, %42
  %48 = icmp ult i8* %40, %44
  %49 = and i1 %47, %48
  br i1 %49, label %104, label %50

50:                                               ; preds = %39
  %51 = bitcast i8* %40 to <8 x i8>*
  %52 = load <8 x i8>, <8 x i8>* %51, align 1, !alias.scope !274
  %53 = zext <8 x i8> %52 to <8 x i16>
  %54 = shl nuw nsw <8 x i16> %53, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %55 = bitcast i16* %41 to <8 x i16>*
  store <8 x i16> %54, <8 x i16>* %55, align 2, !alias.scope !277, !noalias !274
  %56 = getelementptr inbounds i8, i8* %40, i64 8
  %57 = bitcast i8* %56 to <8 x i8>*
  %58 = load <8 x i8>, <8 x i8>* %57, align 1, !alias.scope !274
  %59 = zext <8 x i8> %58 to <8 x i16>
  %60 = shl nuw nsw <8 x i16> %59, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %61 = getelementptr inbounds i16, i16* %2, i64 40
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %60, <8 x i16>* %62, align 2, !alias.scope !277, !noalias !274
  %63 = getelementptr inbounds i8, i8* %40, i64 16
  %64 = bitcast i8* %63 to <8 x i8>*
  %65 = load <8 x i8>, <8 x i8>* %64, align 1, !alias.scope !274
  %66 = zext <8 x i8> %65 to <8 x i16>
  %67 = shl nuw nsw <8 x i16> %66, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %68 = getelementptr inbounds i16, i16* %2, i64 48
  %69 = bitcast i16* %68 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %69, align 2, !alias.scope !277, !noalias !274
  %70 = getelementptr inbounds i8, i8* %40, i64 24
  %71 = bitcast i8* %70 to <8 x i8>*
  %72 = load <8 x i8>, <8 x i8>* %71, align 1, !alias.scope !274
  %73 = zext <8 x i8> %72 to <8 x i16>
  %74 = shl nuw nsw <8 x i16> %73, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %75 = getelementptr inbounds i16, i16* %2, i64 56
  %76 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %76, align 2, !alias.scope !277, !noalias !274
  br label %131

77:                                               ; preds = %3, %77
  %78 = phi i64 [ %102, %77 ], [ 0, %3 ]
  %79 = getelementptr inbounds i8, i8* %0, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i16
  %82 = shl nuw nsw i16 %81, 3
  %83 = getelementptr inbounds i16, i16* %2, i64 %78
  store i16 %82, i16* %83, align 2
  %84 = or i64 %78, 1
  %85 = getelementptr inbounds i8, i8* %0, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i16
  %88 = shl nuw nsw i16 %87, 3
  %89 = getelementptr inbounds i16, i16* %2, i64 %84
  store i16 %88, i16* %89, align 2
  %90 = or i64 %78, 2
  %91 = getelementptr inbounds i8, i8* %0, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i16
  %94 = shl nuw nsw i16 %93, 3
  %95 = getelementptr inbounds i16, i16* %2, i64 %90
  store i16 %94, i16* %95, align 2
  %96 = or i64 %78, 3
  %97 = getelementptr inbounds i8, i8* %0, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i16
  %100 = shl nuw nsw i16 %99, 3
  %101 = getelementptr inbounds i16, i16* %2, i64 %96
  store i16 %100, i16* %101, align 2
  %102 = add nuw nsw i64 %78, 4
  %103 = icmp eq i64 %102, 32
  br i1 %103, label %39, label %77, !llvm.loop !279

104:                                              ; preds = %39, %104
  %105 = phi i64 [ %129, %104 ], [ 0, %39 ]
  %106 = getelementptr inbounds i8, i8* %40, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i16
  %109 = shl nuw nsw i16 %108, 3
  %110 = getelementptr inbounds i16, i16* %41, i64 %105
  store i16 %109, i16* %110, align 2
  %111 = or i64 %105, 1
  %112 = getelementptr inbounds i8, i8* %40, i64 %111
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i16
  %115 = shl nuw nsw i16 %114, 3
  %116 = getelementptr inbounds i16, i16* %41, i64 %111
  store i16 %115, i16* %116, align 2
  %117 = or i64 %105, 2
  %118 = getelementptr inbounds i8, i8* %40, i64 %117
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i16
  %121 = shl nuw nsw i16 %120, 3
  %122 = getelementptr inbounds i16, i16* %41, i64 %117
  store i16 %121, i16* %122, align 2
  %123 = or i64 %105, 3
  %124 = getelementptr inbounds i8, i8* %40, i64 %123
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i16
  %127 = shl nuw nsw i16 %126, 3
  %128 = getelementptr inbounds i16, i16* %41, i64 %123
  store i16 %127, i16* %128, align 2
  %129 = add nuw nsw i64 %105, 4
  %130 = icmp eq i64 %129, 32
  br i1 %130, label %131, label %104, !llvm.loop !280

131:                                              ; preds = %104, %50
  %132 = getelementptr inbounds i8, i8* %40, i64 %4
  %133 = getelementptr inbounds i16, i16* %2, i64 64
  %134 = bitcast i16* %133 to i8*
  %135 = getelementptr i16, i16* %2, i64 96
  %136 = bitcast i16* %135 to i8*
  %137 = shl nsw i64 %4, 1
  %138 = add nsw i64 %137, 32
  %139 = getelementptr i8, i8* %0, i64 %138
  %140 = icmp ugt i8* %139, %134
  %141 = icmp ult i8* %132, %136
  %142 = and i1 %140, %141
  br i1 %142, label %170, label %143

143:                                              ; preds = %131
  %144 = bitcast i8* %132 to <8 x i8>*
  %145 = load <8 x i8>, <8 x i8>* %144, align 1, !alias.scope !281
  %146 = zext <8 x i8> %145 to <8 x i16>
  %147 = shl nuw nsw <8 x i16> %146, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %148 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %147, <8 x i16>* %148, align 2, !alias.scope !284, !noalias !281
  %149 = getelementptr inbounds i8, i8* %132, i64 8
  %150 = bitcast i8* %149 to <8 x i8>*
  %151 = load <8 x i8>, <8 x i8>* %150, align 1, !alias.scope !281
  %152 = zext <8 x i8> %151 to <8 x i16>
  %153 = shl nuw nsw <8 x i16> %152, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %154 = getelementptr inbounds i16, i16* %2, i64 72
  %155 = bitcast i16* %154 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %155, align 2, !alias.scope !284, !noalias !281
  %156 = getelementptr inbounds i8, i8* %132, i64 16
  %157 = bitcast i8* %156 to <8 x i8>*
  %158 = load <8 x i8>, <8 x i8>* %157, align 1, !alias.scope !281
  %159 = zext <8 x i8> %158 to <8 x i16>
  %160 = shl nuw nsw <8 x i16> %159, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %161 = getelementptr inbounds i16, i16* %2, i64 80
  %162 = bitcast i16* %161 to <8 x i16>*
  store <8 x i16> %160, <8 x i16>* %162, align 2, !alias.scope !284, !noalias !281
  %163 = getelementptr inbounds i8, i8* %132, i64 24
  %164 = bitcast i8* %163 to <8 x i8>*
  %165 = load <8 x i8>, <8 x i8>* %164, align 1, !alias.scope !281
  %166 = zext <8 x i8> %165 to <8 x i16>
  %167 = shl nuw nsw <8 x i16> %166, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %168 = getelementptr inbounds i16, i16* %2, i64 88
  %169 = bitcast i16* %168 to <8 x i16>*
  store <8 x i16> %167, <8 x i16>* %169, align 2, !alias.scope !284, !noalias !281
  br label %197

170:                                              ; preds = %131, %170
  %171 = phi i64 [ %195, %170 ], [ 0, %131 ]
  %172 = getelementptr inbounds i8, i8* %132, i64 %171
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i16
  %175 = shl nuw nsw i16 %174, 3
  %176 = getelementptr inbounds i16, i16* %133, i64 %171
  store i16 %175, i16* %176, align 2
  %177 = or i64 %171, 1
  %178 = getelementptr inbounds i8, i8* %132, i64 %177
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i16
  %181 = shl nuw nsw i16 %180, 3
  %182 = getelementptr inbounds i16, i16* %133, i64 %177
  store i16 %181, i16* %182, align 2
  %183 = or i64 %171, 2
  %184 = getelementptr inbounds i8, i8* %132, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i16
  %187 = shl nuw nsw i16 %186, 3
  %188 = getelementptr inbounds i16, i16* %133, i64 %183
  store i16 %187, i16* %188, align 2
  %189 = or i64 %171, 3
  %190 = getelementptr inbounds i8, i8* %132, i64 %189
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i16
  %193 = shl nuw nsw i16 %192, 3
  %194 = getelementptr inbounds i16, i16* %133, i64 %189
  store i16 %193, i16* %194, align 2
  %195 = add nuw nsw i64 %171, 4
  %196 = icmp eq i64 %195, 32
  br i1 %196, label %197, label %170, !llvm.loop !286

197:                                              ; preds = %170, %143
  %198 = getelementptr inbounds i8, i8* %132, i64 %4
  %199 = getelementptr inbounds i16, i16* %2, i64 96
  %200 = bitcast i16* %199 to i8*
  %201 = getelementptr i16, i16* %2, i64 128
  %202 = bitcast i16* %201 to i8*
  %203 = mul nsw i64 %4, 3
  %204 = add nsw i64 %203, 32
  %205 = getelementptr i8, i8* %0, i64 %204
  %206 = icmp ugt i8* %205, %200
  %207 = icmp ult i8* %198, %202
  %208 = and i1 %206, %207
  br i1 %208, label %236, label %209

209:                                              ; preds = %197
  %210 = bitcast i8* %198 to <8 x i8>*
  %211 = load <8 x i8>, <8 x i8>* %210, align 1, !alias.scope !287
  %212 = zext <8 x i8> %211 to <8 x i16>
  %213 = shl nuw nsw <8 x i16> %212, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %214 = bitcast i16* %199 to <8 x i16>*
  store <8 x i16> %213, <8 x i16>* %214, align 2, !alias.scope !290, !noalias !287
  %215 = getelementptr inbounds i8, i8* %198, i64 8
  %216 = bitcast i8* %215 to <8 x i8>*
  %217 = load <8 x i8>, <8 x i8>* %216, align 1, !alias.scope !287
  %218 = zext <8 x i8> %217 to <8 x i16>
  %219 = shl nuw nsw <8 x i16> %218, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %220 = getelementptr inbounds i16, i16* %2, i64 104
  %221 = bitcast i16* %220 to <8 x i16>*
  store <8 x i16> %219, <8 x i16>* %221, align 2, !alias.scope !290, !noalias !287
  %222 = getelementptr inbounds i8, i8* %198, i64 16
  %223 = bitcast i8* %222 to <8 x i8>*
  %224 = load <8 x i8>, <8 x i8>* %223, align 1, !alias.scope !287
  %225 = zext <8 x i8> %224 to <8 x i16>
  %226 = shl nuw nsw <8 x i16> %225, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %227 = getelementptr inbounds i16, i16* %2, i64 112
  %228 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %228, align 2, !alias.scope !290, !noalias !287
  %229 = getelementptr inbounds i8, i8* %198, i64 24
  %230 = bitcast i8* %229 to <8 x i8>*
  %231 = load <8 x i8>, <8 x i8>* %230, align 1, !alias.scope !287
  %232 = zext <8 x i8> %231 to <8 x i16>
  %233 = shl nuw nsw <8 x i16> %232, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %234 = getelementptr inbounds i16, i16* %2, i64 120
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %235, align 2, !alias.scope !290, !noalias !287
  br label %263

236:                                              ; preds = %197, %236
  %237 = phi i64 [ %261, %236 ], [ 0, %197 ]
  %238 = getelementptr inbounds i8, i8* %198, i64 %237
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i16
  %241 = shl nuw nsw i16 %240, 3
  %242 = getelementptr inbounds i16, i16* %199, i64 %237
  store i16 %241, i16* %242, align 2
  %243 = or i64 %237, 1
  %244 = getelementptr inbounds i8, i8* %198, i64 %243
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i16
  %247 = shl nuw nsw i16 %246, 3
  %248 = getelementptr inbounds i16, i16* %199, i64 %243
  store i16 %247, i16* %248, align 2
  %249 = or i64 %237, 2
  %250 = getelementptr inbounds i8, i8* %198, i64 %249
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i16
  %253 = shl nuw nsw i16 %252, 3
  %254 = getelementptr inbounds i16, i16* %199, i64 %249
  store i16 %253, i16* %254, align 2
  %255 = or i64 %237, 3
  %256 = getelementptr inbounds i8, i8* %198, i64 %255
  %257 = load i8, i8* %256, align 1
  %258 = zext i8 %257 to i16
  %259 = shl nuw nsw i16 %258, 3
  %260 = getelementptr inbounds i16, i16* %199, i64 %255
  store i16 %259, i16* %260, align 2
  %261 = add nuw nsw i64 %237, 4
  %262 = icmp eq i64 %261, 32
  br i1 %262, label %263, label %236, !llvm.loop !292

263:                                              ; preds = %236, %209
  %264 = getelementptr inbounds i8, i8* %198, i64 %4
  %265 = getelementptr inbounds i16, i16* %2, i64 128
  %266 = bitcast i16* %265 to i8*
  %267 = getelementptr i16, i16* %2, i64 160
  %268 = bitcast i16* %267 to i8*
  %269 = shl nsw i64 %4, 2
  %270 = add nsw i64 %269, 32
  %271 = getelementptr i8, i8* %0, i64 %270
  %272 = icmp ugt i8* %271, %266
  %273 = icmp ult i8* %264, %268
  %274 = and i1 %272, %273
  br i1 %274, label %302, label %275

275:                                              ; preds = %263
  %276 = bitcast i8* %264 to <8 x i8>*
  %277 = load <8 x i8>, <8 x i8>* %276, align 1, !alias.scope !293
  %278 = zext <8 x i8> %277 to <8 x i16>
  %279 = shl nuw nsw <8 x i16> %278, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %280 = bitcast i16* %265 to <8 x i16>*
  store <8 x i16> %279, <8 x i16>* %280, align 2, !alias.scope !296, !noalias !293
  %281 = getelementptr inbounds i8, i8* %264, i64 8
  %282 = bitcast i8* %281 to <8 x i8>*
  %283 = load <8 x i8>, <8 x i8>* %282, align 1, !alias.scope !293
  %284 = zext <8 x i8> %283 to <8 x i16>
  %285 = shl nuw nsw <8 x i16> %284, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %286 = getelementptr inbounds i16, i16* %2, i64 136
  %287 = bitcast i16* %286 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %287, align 2, !alias.scope !296, !noalias !293
  %288 = getelementptr inbounds i8, i8* %264, i64 16
  %289 = bitcast i8* %288 to <8 x i8>*
  %290 = load <8 x i8>, <8 x i8>* %289, align 1, !alias.scope !293
  %291 = zext <8 x i8> %290 to <8 x i16>
  %292 = shl nuw nsw <8 x i16> %291, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %293 = getelementptr inbounds i16, i16* %2, i64 144
  %294 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %294, align 2, !alias.scope !296, !noalias !293
  %295 = getelementptr inbounds i8, i8* %264, i64 24
  %296 = bitcast i8* %295 to <8 x i8>*
  %297 = load <8 x i8>, <8 x i8>* %296, align 1, !alias.scope !293
  %298 = zext <8 x i8> %297 to <8 x i16>
  %299 = shl nuw nsw <8 x i16> %298, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %300 = getelementptr inbounds i16, i16* %2, i64 152
  %301 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %299, <8 x i16>* %301, align 2, !alias.scope !296, !noalias !293
  br label %329

302:                                              ; preds = %263, %302
  %303 = phi i64 [ %327, %302 ], [ 0, %263 ]
  %304 = getelementptr inbounds i8, i8* %264, i64 %303
  %305 = load i8, i8* %304, align 1
  %306 = zext i8 %305 to i16
  %307 = shl nuw nsw i16 %306, 3
  %308 = getelementptr inbounds i16, i16* %265, i64 %303
  store i16 %307, i16* %308, align 2
  %309 = or i64 %303, 1
  %310 = getelementptr inbounds i8, i8* %264, i64 %309
  %311 = load i8, i8* %310, align 1
  %312 = zext i8 %311 to i16
  %313 = shl nuw nsw i16 %312, 3
  %314 = getelementptr inbounds i16, i16* %265, i64 %309
  store i16 %313, i16* %314, align 2
  %315 = or i64 %303, 2
  %316 = getelementptr inbounds i8, i8* %264, i64 %315
  %317 = load i8, i8* %316, align 1
  %318 = zext i8 %317 to i16
  %319 = shl nuw nsw i16 %318, 3
  %320 = getelementptr inbounds i16, i16* %265, i64 %315
  store i16 %319, i16* %320, align 2
  %321 = or i64 %303, 3
  %322 = getelementptr inbounds i8, i8* %264, i64 %321
  %323 = load i8, i8* %322, align 1
  %324 = zext i8 %323 to i16
  %325 = shl nuw nsw i16 %324, 3
  %326 = getelementptr inbounds i16, i16* %265, i64 %321
  store i16 %325, i16* %326, align 2
  %327 = add nuw nsw i64 %303, 4
  %328 = icmp eq i64 %327, 32
  br i1 %328, label %329, label %302, !llvm.loop !298

329:                                              ; preds = %302, %275
  %330 = getelementptr inbounds i8, i8* %264, i64 %4
  %331 = getelementptr inbounds i16, i16* %2, i64 160
  %332 = bitcast i16* %331 to i8*
  %333 = getelementptr i16, i16* %2, i64 192
  %334 = bitcast i16* %333 to i8*
  %335 = mul nsw i64 %4, 5
  %336 = add nsw i64 %335, 32
  %337 = getelementptr i8, i8* %0, i64 %336
  %338 = icmp ugt i8* %337, %332
  %339 = icmp ult i8* %330, %334
  %340 = and i1 %338, %339
  br i1 %340, label %368, label %341

341:                                              ; preds = %329
  %342 = bitcast i8* %330 to <8 x i8>*
  %343 = load <8 x i8>, <8 x i8>* %342, align 1, !alias.scope !299
  %344 = zext <8 x i8> %343 to <8 x i16>
  %345 = shl nuw nsw <8 x i16> %344, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %346 = bitcast i16* %331 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %346, align 2, !alias.scope !302, !noalias !299
  %347 = getelementptr inbounds i8, i8* %330, i64 8
  %348 = bitcast i8* %347 to <8 x i8>*
  %349 = load <8 x i8>, <8 x i8>* %348, align 1, !alias.scope !299
  %350 = zext <8 x i8> %349 to <8 x i16>
  %351 = shl nuw nsw <8 x i16> %350, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %352 = getelementptr inbounds i16, i16* %2, i64 168
  %353 = bitcast i16* %352 to <8 x i16>*
  store <8 x i16> %351, <8 x i16>* %353, align 2, !alias.scope !302, !noalias !299
  %354 = getelementptr inbounds i8, i8* %330, i64 16
  %355 = bitcast i8* %354 to <8 x i8>*
  %356 = load <8 x i8>, <8 x i8>* %355, align 1, !alias.scope !299
  %357 = zext <8 x i8> %356 to <8 x i16>
  %358 = shl nuw nsw <8 x i16> %357, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %359 = getelementptr inbounds i16, i16* %2, i64 176
  %360 = bitcast i16* %359 to <8 x i16>*
  store <8 x i16> %358, <8 x i16>* %360, align 2, !alias.scope !302, !noalias !299
  %361 = getelementptr inbounds i8, i8* %330, i64 24
  %362 = bitcast i8* %361 to <8 x i8>*
  %363 = load <8 x i8>, <8 x i8>* %362, align 1, !alias.scope !299
  %364 = zext <8 x i8> %363 to <8 x i16>
  %365 = shl nuw nsw <8 x i16> %364, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %366 = getelementptr inbounds i16, i16* %2, i64 184
  %367 = bitcast i16* %366 to <8 x i16>*
  store <8 x i16> %365, <8 x i16>* %367, align 2, !alias.scope !302, !noalias !299
  br label %395

368:                                              ; preds = %329, %368
  %369 = phi i64 [ %393, %368 ], [ 0, %329 ]
  %370 = getelementptr inbounds i8, i8* %330, i64 %369
  %371 = load i8, i8* %370, align 1
  %372 = zext i8 %371 to i16
  %373 = shl nuw nsw i16 %372, 3
  %374 = getelementptr inbounds i16, i16* %331, i64 %369
  store i16 %373, i16* %374, align 2
  %375 = or i64 %369, 1
  %376 = getelementptr inbounds i8, i8* %330, i64 %375
  %377 = load i8, i8* %376, align 1
  %378 = zext i8 %377 to i16
  %379 = shl nuw nsw i16 %378, 3
  %380 = getelementptr inbounds i16, i16* %331, i64 %375
  store i16 %379, i16* %380, align 2
  %381 = or i64 %369, 2
  %382 = getelementptr inbounds i8, i8* %330, i64 %381
  %383 = load i8, i8* %382, align 1
  %384 = zext i8 %383 to i16
  %385 = shl nuw nsw i16 %384, 3
  %386 = getelementptr inbounds i16, i16* %331, i64 %381
  store i16 %385, i16* %386, align 2
  %387 = or i64 %369, 3
  %388 = getelementptr inbounds i8, i8* %330, i64 %387
  %389 = load i8, i8* %388, align 1
  %390 = zext i8 %389 to i16
  %391 = shl nuw nsw i16 %390, 3
  %392 = getelementptr inbounds i16, i16* %331, i64 %387
  store i16 %391, i16* %392, align 2
  %393 = add nuw nsw i64 %369, 4
  %394 = icmp eq i64 %393, 32
  br i1 %394, label %395, label %368, !llvm.loop !304

395:                                              ; preds = %368, %341
  %396 = getelementptr inbounds i8, i8* %330, i64 %4
  %397 = getelementptr inbounds i16, i16* %2, i64 192
  %398 = bitcast i16* %397 to i8*
  %399 = getelementptr i16, i16* %2, i64 224
  %400 = bitcast i16* %399 to i8*
  %401 = mul nsw i64 %4, 6
  %402 = add nsw i64 %401, 32
  %403 = getelementptr i8, i8* %0, i64 %402
  %404 = icmp ugt i8* %403, %398
  %405 = icmp ult i8* %396, %400
  %406 = and i1 %404, %405
  br i1 %406, label %434, label %407

407:                                              ; preds = %395
  %408 = bitcast i8* %396 to <8 x i8>*
  %409 = load <8 x i8>, <8 x i8>* %408, align 1, !alias.scope !305
  %410 = zext <8 x i8> %409 to <8 x i16>
  %411 = shl nuw nsw <8 x i16> %410, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %412 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %411, <8 x i16>* %412, align 2, !alias.scope !308, !noalias !305
  %413 = getelementptr inbounds i8, i8* %396, i64 8
  %414 = bitcast i8* %413 to <8 x i8>*
  %415 = load <8 x i8>, <8 x i8>* %414, align 1, !alias.scope !305
  %416 = zext <8 x i8> %415 to <8 x i16>
  %417 = shl nuw nsw <8 x i16> %416, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %418 = getelementptr inbounds i16, i16* %2, i64 200
  %419 = bitcast i16* %418 to <8 x i16>*
  store <8 x i16> %417, <8 x i16>* %419, align 2, !alias.scope !308, !noalias !305
  %420 = getelementptr inbounds i8, i8* %396, i64 16
  %421 = bitcast i8* %420 to <8 x i8>*
  %422 = load <8 x i8>, <8 x i8>* %421, align 1, !alias.scope !305
  %423 = zext <8 x i8> %422 to <8 x i16>
  %424 = shl nuw nsw <8 x i16> %423, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %425 = getelementptr inbounds i16, i16* %2, i64 208
  %426 = bitcast i16* %425 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %426, align 2, !alias.scope !308, !noalias !305
  %427 = getelementptr inbounds i8, i8* %396, i64 24
  %428 = bitcast i8* %427 to <8 x i8>*
  %429 = load <8 x i8>, <8 x i8>* %428, align 1, !alias.scope !305
  %430 = zext <8 x i8> %429 to <8 x i16>
  %431 = shl nuw nsw <8 x i16> %430, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %432 = getelementptr inbounds i16, i16* %2, i64 216
  %433 = bitcast i16* %432 to <8 x i16>*
  store <8 x i16> %431, <8 x i16>* %433, align 2, !alias.scope !308, !noalias !305
  br label %461

434:                                              ; preds = %395, %434
  %435 = phi i64 [ %459, %434 ], [ 0, %395 ]
  %436 = getelementptr inbounds i8, i8* %396, i64 %435
  %437 = load i8, i8* %436, align 1
  %438 = zext i8 %437 to i16
  %439 = shl nuw nsw i16 %438, 3
  %440 = getelementptr inbounds i16, i16* %397, i64 %435
  store i16 %439, i16* %440, align 2
  %441 = or i64 %435, 1
  %442 = getelementptr inbounds i8, i8* %396, i64 %441
  %443 = load i8, i8* %442, align 1
  %444 = zext i8 %443 to i16
  %445 = shl nuw nsw i16 %444, 3
  %446 = getelementptr inbounds i16, i16* %397, i64 %441
  store i16 %445, i16* %446, align 2
  %447 = or i64 %435, 2
  %448 = getelementptr inbounds i8, i8* %396, i64 %447
  %449 = load i8, i8* %448, align 1
  %450 = zext i8 %449 to i16
  %451 = shl nuw nsw i16 %450, 3
  %452 = getelementptr inbounds i16, i16* %397, i64 %447
  store i16 %451, i16* %452, align 2
  %453 = or i64 %435, 3
  %454 = getelementptr inbounds i8, i8* %396, i64 %453
  %455 = load i8, i8* %454, align 1
  %456 = zext i8 %455 to i16
  %457 = shl nuw nsw i16 %456, 3
  %458 = getelementptr inbounds i16, i16* %397, i64 %453
  store i16 %457, i16* %458, align 2
  %459 = add nuw nsw i64 %435, 4
  %460 = icmp eq i64 %459, 32
  br i1 %460, label %461, label %434, !llvm.loop !310

461:                                              ; preds = %434, %407
  %462 = getelementptr inbounds i8, i8* %396, i64 %4
  %463 = getelementptr inbounds i16, i16* %2, i64 224
  %464 = bitcast i16* %463 to i8*
  %465 = getelementptr i16, i16* %2, i64 256
  %466 = bitcast i16* %465 to i8*
  %467 = mul nsw i64 %4, 7
  %468 = add nsw i64 %467, 32
  %469 = getelementptr i8, i8* %0, i64 %468
  %470 = icmp ugt i8* %469, %464
  %471 = icmp ult i8* %462, %466
  %472 = and i1 %470, %471
  br i1 %472, label %500, label %473

473:                                              ; preds = %461
  %474 = bitcast i8* %462 to <8 x i8>*
  %475 = load <8 x i8>, <8 x i8>* %474, align 1, !alias.scope !311
  %476 = zext <8 x i8> %475 to <8 x i16>
  %477 = shl nuw nsw <8 x i16> %476, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %478 = bitcast i16* %463 to <8 x i16>*
  store <8 x i16> %477, <8 x i16>* %478, align 2, !alias.scope !314, !noalias !311
  %479 = getelementptr inbounds i8, i8* %462, i64 8
  %480 = bitcast i8* %479 to <8 x i8>*
  %481 = load <8 x i8>, <8 x i8>* %480, align 1, !alias.scope !311
  %482 = zext <8 x i8> %481 to <8 x i16>
  %483 = shl nuw nsw <8 x i16> %482, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %484 = getelementptr inbounds i16, i16* %2, i64 232
  %485 = bitcast i16* %484 to <8 x i16>*
  store <8 x i16> %483, <8 x i16>* %485, align 2, !alias.scope !314, !noalias !311
  %486 = getelementptr inbounds i8, i8* %462, i64 16
  %487 = bitcast i8* %486 to <8 x i8>*
  %488 = load <8 x i8>, <8 x i8>* %487, align 1, !alias.scope !311
  %489 = zext <8 x i8> %488 to <8 x i16>
  %490 = shl nuw nsw <8 x i16> %489, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %491 = getelementptr inbounds i16, i16* %2, i64 240
  %492 = bitcast i16* %491 to <8 x i16>*
  store <8 x i16> %490, <8 x i16>* %492, align 2, !alias.scope !314, !noalias !311
  %493 = getelementptr inbounds i8, i8* %462, i64 24
  %494 = bitcast i8* %493 to <8 x i8>*
  %495 = load <8 x i8>, <8 x i8>* %494, align 1, !alias.scope !311
  %496 = zext <8 x i8> %495 to <8 x i16>
  %497 = shl nuw nsw <8 x i16> %496, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %498 = getelementptr inbounds i16, i16* %2, i64 248
  %499 = bitcast i16* %498 to <8 x i16>*
  store <8 x i16> %497, <8 x i16>* %499, align 2, !alias.scope !314, !noalias !311
  br label %527

500:                                              ; preds = %461, %500
  %501 = phi i64 [ %525, %500 ], [ 0, %461 ]
  %502 = getelementptr inbounds i8, i8* %462, i64 %501
  %503 = load i8, i8* %502, align 1
  %504 = zext i8 %503 to i16
  %505 = shl nuw nsw i16 %504, 3
  %506 = getelementptr inbounds i16, i16* %463, i64 %501
  store i16 %505, i16* %506, align 2
  %507 = or i64 %501, 1
  %508 = getelementptr inbounds i8, i8* %462, i64 %507
  %509 = load i8, i8* %508, align 1
  %510 = zext i8 %509 to i16
  %511 = shl nuw nsw i16 %510, 3
  %512 = getelementptr inbounds i16, i16* %463, i64 %507
  store i16 %511, i16* %512, align 2
  %513 = or i64 %501, 2
  %514 = getelementptr inbounds i8, i8* %462, i64 %513
  %515 = load i8, i8* %514, align 1
  %516 = zext i8 %515 to i16
  %517 = shl nuw nsw i16 %516, 3
  %518 = getelementptr inbounds i16, i16* %463, i64 %513
  store i16 %517, i16* %518, align 2
  %519 = or i64 %501, 3
  %520 = getelementptr inbounds i8, i8* %462, i64 %519
  %521 = load i8, i8* %520, align 1
  %522 = zext i8 %521 to i16
  %523 = shl nuw nsw i16 %522, 3
  %524 = getelementptr inbounds i16, i16* %463, i64 %519
  store i16 %523, i16* %524, align 2
  %525 = add nuw nsw i64 %501, 4
  %526 = icmp eq i64 %525, 32
  br i1 %526, label %527, label %500, !llvm.loop !316

527:                                              ; preds = %500, %473
  %528 = getelementptr inbounds i8, i8* %462, i64 %4
  %529 = getelementptr inbounds i16, i16* %2, i64 256
  %530 = bitcast i16* %529 to i8*
  %531 = getelementptr i16, i16* %2, i64 288
  %532 = bitcast i16* %531 to i8*
  %533 = shl nsw i64 %4, 3
  %534 = add nsw i64 %533, 32
  %535 = getelementptr i8, i8* %0, i64 %534
  %536 = icmp ugt i8* %535, %530
  %537 = icmp ult i8* %528, %532
  %538 = and i1 %536, %537
  br i1 %538, label %566, label %539

539:                                              ; preds = %527
  %540 = bitcast i8* %528 to <8 x i8>*
  %541 = load <8 x i8>, <8 x i8>* %540, align 1, !alias.scope !317
  %542 = zext <8 x i8> %541 to <8 x i16>
  %543 = shl nuw nsw <8 x i16> %542, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %544 = bitcast i16* %529 to <8 x i16>*
  store <8 x i16> %543, <8 x i16>* %544, align 2, !alias.scope !320, !noalias !317
  %545 = getelementptr inbounds i8, i8* %528, i64 8
  %546 = bitcast i8* %545 to <8 x i8>*
  %547 = load <8 x i8>, <8 x i8>* %546, align 1, !alias.scope !317
  %548 = zext <8 x i8> %547 to <8 x i16>
  %549 = shl nuw nsw <8 x i16> %548, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %550 = getelementptr inbounds i16, i16* %2, i64 264
  %551 = bitcast i16* %550 to <8 x i16>*
  store <8 x i16> %549, <8 x i16>* %551, align 2, !alias.scope !320, !noalias !317
  %552 = getelementptr inbounds i8, i8* %528, i64 16
  %553 = bitcast i8* %552 to <8 x i8>*
  %554 = load <8 x i8>, <8 x i8>* %553, align 1, !alias.scope !317
  %555 = zext <8 x i8> %554 to <8 x i16>
  %556 = shl nuw nsw <8 x i16> %555, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %557 = getelementptr inbounds i16, i16* %2, i64 272
  %558 = bitcast i16* %557 to <8 x i16>*
  store <8 x i16> %556, <8 x i16>* %558, align 2, !alias.scope !320, !noalias !317
  %559 = getelementptr inbounds i8, i8* %528, i64 24
  %560 = bitcast i8* %559 to <8 x i8>*
  %561 = load <8 x i8>, <8 x i8>* %560, align 1, !alias.scope !317
  %562 = zext <8 x i8> %561 to <8 x i16>
  %563 = shl nuw nsw <8 x i16> %562, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %564 = getelementptr inbounds i16, i16* %2, i64 280
  %565 = bitcast i16* %564 to <8 x i16>*
  store <8 x i16> %563, <8 x i16>* %565, align 2, !alias.scope !320, !noalias !317
  br label %593

566:                                              ; preds = %527, %566
  %567 = phi i64 [ %591, %566 ], [ 0, %527 ]
  %568 = getelementptr inbounds i8, i8* %528, i64 %567
  %569 = load i8, i8* %568, align 1
  %570 = zext i8 %569 to i16
  %571 = shl nuw nsw i16 %570, 3
  %572 = getelementptr inbounds i16, i16* %529, i64 %567
  store i16 %571, i16* %572, align 2
  %573 = or i64 %567, 1
  %574 = getelementptr inbounds i8, i8* %528, i64 %573
  %575 = load i8, i8* %574, align 1
  %576 = zext i8 %575 to i16
  %577 = shl nuw nsw i16 %576, 3
  %578 = getelementptr inbounds i16, i16* %529, i64 %573
  store i16 %577, i16* %578, align 2
  %579 = or i64 %567, 2
  %580 = getelementptr inbounds i8, i8* %528, i64 %579
  %581 = load i8, i8* %580, align 1
  %582 = zext i8 %581 to i16
  %583 = shl nuw nsw i16 %582, 3
  %584 = getelementptr inbounds i16, i16* %529, i64 %579
  store i16 %583, i16* %584, align 2
  %585 = or i64 %567, 3
  %586 = getelementptr inbounds i8, i8* %528, i64 %585
  %587 = load i8, i8* %586, align 1
  %588 = zext i8 %587 to i16
  %589 = shl nuw nsw i16 %588, 3
  %590 = getelementptr inbounds i16, i16* %529, i64 %585
  store i16 %589, i16* %590, align 2
  %591 = add nuw nsw i64 %567, 4
  %592 = icmp eq i64 %591, 32
  br i1 %592, label %593, label %566, !llvm.loop !322

593:                                              ; preds = %566, %539
  %594 = getelementptr inbounds i8, i8* %528, i64 %4
  %595 = getelementptr inbounds i16, i16* %2, i64 288
  %596 = bitcast i16* %595 to i8*
  %597 = getelementptr i16, i16* %2, i64 320
  %598 = bitcast i16* %597 to i8*
  %599 = mul nsw i64 %4, 9
  %600 = add nsw i64 %599, 32
  %601 = getelementptr i8, i8* %0, i64 %600
  %602 = icmp ugt i8* %601, %596
  %603 = icmp ult i8* %594, %598
  %604 = and i1 %602, %603
  br i1 %604, label %632, label %605

605:                                              ; preds = %593
  %606 = bitcast i8* %594 to <8 x i8>*
  %607 = load <8 x i8>, <8 x i8>* %606, align 1, !alias.scope !323
  %608 = zext <8 x i8> %607 to <8 x i16>
  %609 = shl nuw nsw <8 x i16> %608, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %610 = bitcast i16* %595 to <8 x i16>*
  store <8 x i16> %609, <8 x i16>* %610, align 2, !alias.scope !326, !noalias !323
  %611 = getelementptr inbounds i8, i8* %594, i64 8
  %612 = bitcast i8* %611 to <8 x i8>*
  %613 = load <8 x i8>, <8 x i8>* %612, align 1, !alias.scope !323
  %614 = zext <8 x i8> %613 to <8 x i16>
  %615 = shl nuw nsw <8 x i16> %614, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %616 = getelementptr inbounds i16, i16* %2, i64 296
  %617 = bitcast i16* %616 to <8 x i16>*
  store <8 x i16> %615, <8 x i16>* %617, align 2, !alias.scope !326, !noalias !323
  %618 = getelementptr inbounds i8, i8* %594, i64 16
  %619 = bitcast i8* %618 to <8 x i8>*
  %620 = load <8 x i8>, <8 x i8>* %619, align 1, !alias.scope !323
  %621 = zext <8 x i8> %620 to <8 x i16>
  %622 = shl nuw nsw <8 x i16> %621, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %623 = getelementptr inbounds i16, i16* %2, i64 304
  %624 = bitcast i16* %623 to <8 x i16>*
  store <8 x i16> %622, <8 x i16>* %624, align 2, !alias.scope !326, !noalias !323
  %625 = getelementptr inbounds i8, i8* %594, i64 24
  %626 = bitcast i8* %625 to <8 x i8>*
  %627 = load <8 x i8>, <8 x i8>* %626, align 1, !alias.scope !323
  %628 = zext <8 x i8> %627 to <8 x i16>
  %629 = shl nuw nsw <8 x i16> %628, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %630 = getelementptr inbounds i16, i16* %2, i64 312
  %631 = bitcast i16* %630 to <8 x i16>*
  store <8 x i16> %629, <8 x i16>* %631, align 2, !alias.scope !326, !noalias !323
  br label %659

632:                                              ; preds = %593, %632
  %633 = phi i64 [ %657, %632 ], [ 0, %593 ]
  %634 = getelementptr inbounds i8, i8* %594, i64 %633
  %635 = load i8, i8* %634, align 1
  %636 = zext i8 %635 to i16
  %637 = shl nuw nsw i16 %636, 3
  %638 = getelementptr inbounds i16, i16* %595, i64 %633
  store i16 %637, i16* %638, align 2
  %639 = or i64 %633, 1
  %640 = getelementptr inbounds i8, i8* %594, i64 %639
  %641 = load i8, i8* %640, align 1
  %642 = zext i8 %641 to i16
  %643 = shl nuw nsw i16 %642, 3
  %644 = getelementptr inbounds i16, i16* %595, i64 %639
  store i16 %643, i16* %644, align 2
  %645 = or i64 %633, 2
  %646 = getelementptr inbounds i8, i8* %594, i64 %645
  %647 = load i8, i8* %646, align 1
  %648 = zext i8 %647 to i16
  %649 = shl nuw nsw i16 %648, 3
  %650 = getelementptr inbounds i16, i16* %595, i64 %645
  store i16 %649, i16* %650, align 2
  %651 = or i64 %633, 3
  %652 = getelementptr inbounds i8, i8* %594, i64 %651
  %653 = load i8, i8* %652, align 1
  %654 = zext i8 %653 to i16
  %655 = shl nuw nsw i16 %654, 3
  %656 = getelementptr inbounds i16, i16* %595, i64 %651
  store i16 %655, i16* %656, align 2
  %657 = add nuw nsw i64 %633, 4
  %658 = icmp eq i64 %657, 32
  br i1 %658, label %659, label %632, !llvm.loop !328

659:                                              ; preds = %632, %605
  %660 = getelementptr inbounds i8, i8* %594, i64 %4
  %661 = getelementptr inbounds i16, i16* %2, i64 320
  %662 = bitcast i16* %661 to i8*
  %663 = getelementptr i16, i16* %2, i64 352
  %664 = bitcast i16* %663 to i8*
  %665 = mul nsw i64 %4, 10
  %666 = add nsw i64 %665, 32
  %667 = getelementptr i8, i8* %0, i64 %666
  %668 = icmp ugt i8* %667, %662
  %669 = icmp ult i8* %660, %664
  %670 = and i1 %668, %669
  br i1 %670, label %698, label %671

671:                                              ; preds = %659
  %672 = bitcast i8* %660 to <8 x i8>*
  %673 = load <8 x i8>, <8 x i8>* %672, align 1, !alias.scope !329
  %674 = zext <8 x i8> %673 to <8 x i16>
  %675 = shl nuw nsw <8 x i16> %674, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %676 = bitcast i16* %661 to <8 x i16>*
  store <8 x i16> %675, <8 x i16>* %676, align 2, !alias.scope !332, !noalias !329
  %677 = getelementptr inbounds i8, i8* %660, i64 8
  %678 = bitcast i8* %677 to <8 x i8>*
  %679 = load <8 x i8>, <8 x i8>* %678, align 1, !alias.scope !329
  %680 = zext <8 x i8> %679 to <8 x i16>
  %681 = shl nuw nsw <8 x i16> %680, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %682 = getelementptr inbounds i16, i16* %2, i64 328
  %683 = bitcast i16* %682 to <8 x i16>*
  store <8 x i16> %681, <8 x i16>* %683, align 2, !alias.scope !332, !noalias !329
  %684 = getelementptr inbounds i8, i8* %660, i64 16
  %685 = bitcast i8* %684 to <8 x i8>*
  %686 = load <8 x i8>, <8 x i8>* %685, align 1, !alias.scope !329
  %687 = zext <8 x i8> %686 to <8 x i16>
  %688 = shl nuw nsw <8 x i16> %687, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %689 = getelementptr inbounds i16, i16* %2, i64 336
  %690 = bitcast i16* %689 to <8 x i16>*
  store <8 x i16> %688, <8 x i16>* %690, align 2, !alias.scope !332, !noalias !329
  %691 = getelementptr inbounds i8, i8* %660, i64 24
  %692 = bitcast i8* %691 to <8 x i8>*
  %693 = load <8 x i8>, <8 x i8>* %692, align 1, !alias.scope !329
  %694 = zext <8 x i8> %693 to <8 x i16>
  %695 = shl nuw nsw <8 x i16> %694, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %696 = getelementptr inbounds i16, i16* %2, i64 344
  %697 = bitcast i16* %696 to <8 x i16>*
  store <8 x i16> %695, <8 x i16>* %697, align 2, !alias.scope !332, !noalias !329
  br label %725

698:                                              ; preds = %659, %698
  %699 = phi i64 [ %723, %698 ], [ 0, %659 ]
  %700 = getelementptr inbounds i8, i8* %660, i64 %699
  %701 = load i8, i8* %700, align 1
  %702 = zext i8 %701 to i16
  %703 = shl nuw nsw i16 %702, 3
  %704 = getelementptr inbounds i16, i16* %661, i64 %699
  store i16 %703, i16* %704, align 2
  %705 = or i64 %699, 1
  %706 = getelementptr inbounds i8, i8* %660, i64 %705
  %707 = load i8, i8* %706, align 1
  %708 = zext i8 %707 to i16
  %709 = shl nuw nsw i16 %708, 3
  %710 = getelementptr inbounds i16, i16* %661, i64 %705
  store i16 %709, i16* %710, align 2
  %711 = or i64 %699, 2
  %712 = getelementptr inbounds i8, i8* %660, i64 %711
  %713 = load i8, i8* %712, align 1
  %714 = zext i8 %713 to i16
  %715 = shl nuw nsw i16 %714, 3
  %716 = getelementptr inbounds i16, i16* %661, i64 %711
  store i16 %715, i16* %716, align 2
  %717 = or i64 %699, 3
  %718 = getelementptr inbounds i8, i8* %660, i64 %717
  %719 = load i8, i8* %718, align 1
  %720 = zext i8 %719 to i16
  %721 = shl nuw nsw i16 %720, 3
  %722 = getelementptr inbounds i16, i16* %661, i64 %717
  store i16 %721, i16* %722, align 2
  %723 = add nuw nsw i64 %699, 4
  %724 = icmp eq i64 %723, 32
  br i1 %724, label %725, label %698, !llvm.loop !334

725:                                              ; preds = %698, %671
  %726 = getelementptr inbounds i8, i8* %660, i64 %4
  %727 = getelementptr inbounds i16, i16* %2, i64 352
  %728 = bitcast i16* %727 to i8*
  %729 = getelementptr i16, i16* %2, i64 384
  %730 = bitcast i16* %729 to i8*
  %731 = mul nsw i64 %4, 11
  %732 = add nsw i64 %731, 32
  %733 = getelementptr i8, i8* %0, i64 %732
  %734 = icmp ugt i8* %733, %728
  %735 = icmp ult i8* %726, %730
  %736 = and i1 %734, %735
  br i1 %736, label %764, label %737

737:                                              ; preds = %725
  %738 = bitcast i8* %726 to <8 x i8>*
  %739 = load <8 x i8>, <8 x i8>* %738, align 1, !alias.scope !335
  %740 = zext <8 x i8> %739 to <8 x i16>
  %741 = shl nuw nsw <8 x i16> %740, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %742 = bitcast i16* %727 to <8 x i16>*
  store <8 x i16> %741, <8 x i16>* %742, align 2, !alias.scope !338, !noalias !335
  %743 = getelementptr inbounds i8, i8* %726, i64 8
  %744 = bitcast i8* %743 to <8 x i8>*
  %745 = load <8 x i8>, <8 x i8>* %744, align 1, !alias.scope !335
  %746 = zext <8 x i8> %745 to <8 x i16>
  %747 = shl nuw nsw <8 x i16> %746, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %748 = getelementptr inbounds i16, i16* %2, i64 360
  %749 = bitcast i16* %748 to <8 x i16>*
  store <8 x i16> %747, <8 x i16>* %749, align 2, !alias.scope !338, !noalias !335
  %750 = getelementptr inbounds i8, i8* %726, i64 16
  %751 = bitcast i8* %750 to <8 x i8>*
  %752 = load <8 x i8>, <8 x i8>* %751, align 1, !alias.scope !335
  %753 = zext <8 x i8> %752 to <8 x i16>
  %754 = shl nuw nsw <8 x i16> %753, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %755 = getelementptr inbounds i16, i16* %2, i64 368
  %756 = bitcast i16* %755 to <8 x i16>*
  store <8 x i16> %754, <8 x i16>* %756, align 2, !alias.scope !338, !noalias !335
  %757 = getelementptr inbounds i8, i8* %726, i64 24
  %758 = bitcast i8* %757 to <8 x i8>*
  %759 = load <8 x i8>, <8 x i8>* %758, align 1, !alias.scope !335
  %760 = zext <8 x i8> %759 to <8 x i16>
  %761 = shl nuw nsw <8 x i16> %760, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %762 = getelementptr inbounds i16, i16* %2, i64 376
  %763 = bitcast i16* %762 to <8 x i16>*
  store <8 x i16> %761, <8 x i16>* %763, align 2, !alias.scope !338, !noalias !335
  br label %791

764:                                              ; preds = %725, %764
  %765 = phi i64 [ %789, %764 ], [ 0, %725 ]
  %766 = getelementptr inbounds i8, i8* %726, i64 %765
  %767 = load i8, i8* %766, align 1
  %768 = zext i8 %767 to i16
  %769 = shl nuw nsw i16 %768, 3
  %770 = getelementptr inbounds i16, i16* %727, i64 %765
  store i16 %769, i16* %770, align 2
  %771 = or i64 %765, 1
  %772 = getelementptr inbounds i8, i8* %726, i64 %771
  %773 = load i8, i8* %772, align 1
  %774 = zext i8 %773 to i16
  %775 = shl nuw nsw i16 %774, 3
  %776 = getelementptr inbounds i16, i16* %727, i64 %771
  store i16 %775, i16* %776, align 2
  %777 = or i64 %765, 2
  %778 = getelementptr inbounds i8, i8* %726, i64 %777
  %779 = load i8, i8* %778, align 1
  %780 = zext i8 %779 to i16
  %781 = shl nuw nsw i16 %780, 3
  %782 = getelementptr inbounds i16, i16* %727, i64 %777
  store i16 %781, i16* %782, align 2
  %783 = or i64 %765, 3
  %784 = getelementptr inbounds i8, i8* %726, i64 %783
  %785 = load i8, i8* %784, align 1
  %786 = zext i8 %785 to i16
  %787 = shl nuw nsw i16 %786, 3
  %788 = getelementptr inbounds i16, i16* %727, i64 %783
  store i16 %787, i16* %788, align 2
  %789 = add nuw nsw i64 %765, 4
  %790 = icmp eq i64 %789, 32
  br i1 %790, label %791, label %764, !llvm.loop !340

791:                                              ; preds = %764, %737
  %792 = getelementptr inbounds i8, i8* %726, i64 %4
  %793 = getelementptr inbounds i16, i16* %2, i64 384
  %794 = bitcast i16* %793 to i8*
  %795 = getelementptr i16, i16* %2, i64 416
  %796 = bitcast i16* %795 to i8*
  %797 = mul nsw i64 %4, 12
  %798 = add nsw i64 %797, 32
  %799 = getelementptr i8, i8* %0, i64 %798
  %800 = icmp ugt i8* %799, %794
  %801 = icmp ult i8* %792, %796
  %802 = and i1 %800, %801
  br i1 %802, label %830, label %803

803:                                              ; preds = %791
  %804 = bitcast i8* %792 to <8 x i8>*
  %805 = load <8 x i8>, <8 x i8>* %804, align 1, !alias.scope !341
  %806 = zext <8 x i8> %805 to <8 x i16>
  %807 = shl nuw nsw <8 x i16> %806, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %808 = bitcast i16* %793 to <8 x i16>*
  store <8 x i16> %807, <8 x i16>* %808, align 2, !alias.scope !344, !noalias !341
  %809 = getelementptr inbounds i8, i8* %792, i64 8
  %810 = bitcast i8* %809 to <8 x i8>*
  %811 = load <8 x i8>, <8 x i8>* %810, align 1, !alias.scope !341
  %812 = zext <8 x i8> %811 to <8 x i16>
  %813 = shl nuw nsw <8 x i16> %812, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %814 = getelementptr inbounds i16, i16* %2, i64 392
  %815 = bitcast i16* %814 to <8 x i16>*
  store <8 x i16> %813, <8 x i16>* %815, align 2, !alias.scope !344, !noalias !341
  %816 = getelementptr inbounds i8, i8* %792, i64 16
  %817 = bitcast i8* %816 to <8 x i8>*
  %818 = load <8 x i8>, <8 x i8>* %817, align 1, !alias.scope !341
  %819 = zext <8 x i8> %818 to <8 x i16>
  %820 = shl nuw nsw <8 x i16> %819, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %821 = getelementptr inbounds i16, i16* %2, i64 400
  %822 = bitcast i16* %821 to <8 x i16>*
  store <8 x i16> %820, <8 x i16>* %822, align 2, !alias.scope !344, !noalias !341
  %823 = getelementptr inbounds i8, i8* %792, i64 24
  %824 = bitcast i8* %823 to <8 x i8>*
  %825 = load <8 x i8>, <8 x i8>* %824, align 1, !alias.scope !341
  %826 = zext <8 x i8> %825 to <8 x i16>
  %827 = shl nuw nsw <8 x i16> %826, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %828 = getelementptr inbounds i16, i16* %2, i64 408
  %829 = bitcast i16* %828 to <8 x i16>*
  store <8 x i16> %827, <8 x i16>* %829, align 2, !alias.scope !344, !noalias !341
  br label %857

830:                                              ; preds = %791, %830
  %831 = phi i64 [ %855, %830 ], [ 0, %791 ]
  %832 = getelementptr inbounds i8, i8* %792, i64 %831
  %833 = load i8, i8* %832, align 1
  %834 = zext i8 %833 to i16
  %835 = shl nuw nsw i16 %834, 3
  %836 = getelementptr inbounds i16, i16* %793, i64 %831
  store i16 %835, i16* %836, align 2
  %837 = or i64 %831, 1
  %838 = getelementptr inbounds i8, i8* %792, i64 %837
  %839 = load i8, i8* %838, align 1
  %840 = zext i8 %839 to i16
  %841 = shl nuw nsw i16 %840, 3
  %842 = getelementptr inbounds i16, i16* %793, i64 %837
  store i16 %841, i16* %842, align 2
  %843 = or i64 %831, 2
  %844 = getelementptr inbounds i8, i8* %792, i64 %843
  %845 = load i8, i8* %844, align 1
  %846 = zext i8 %845 to i16
  %847 = shl nuw nsw i16 %846, 3
  %848 = getelementptr inbounds i16, i16* %793, i64 %843
  store i16 %847, i16* %848, align 2
  %849 = or i64 %831, 3
  %850 = getelementptr inbounds i8, i8* %792, i64 %849
  %851 = load i8, i8* %850, align 1
  %852 = zext i8 %851 to i16
  %853 = shl nuw nsw i16 %852, 3
  %854 = getelementptr inbounds i16, i16* %793, i64 %849
  store i16 %853, i16* %854, align 2
  %855 = add nuw nsw i64 %831, 4
  %856 = icmp eq i64 %855, 32
  br i1 %856, label %857, label %830, !llvm.loop !346

857:                                              ; preds = %830, %803
  %858 = getelementptr inbounds i8, i8* %792, i64 %4
  %859 = getelementptr inbounds i16, i16* %2, i64 416
  %860 = bitcast i16* %859 to i8*
  %861 = getelementptr i16, i16* %2, i64 448
  %862 = bitcast i16* %861 to i8*
  %863 = mul nsw i64 %4, 13
  %864 = add nsw i64 %863, 32
  %865 = getelementptr i8, i8* %0, i64 %864
  %866 = icmp ugt i8* %865, %860
  %867 = icmp ult i8* %858, %862
  %868 = and i1 %866, %867
  br i1 %868, label %896, label %869

869:                                              ; preds = %857
  %870 = bitcast i8* %858 to <8 x i8>*
  %871 = load <8 x i8>, <8 x i8>* %870, align 1, !alias.scope !347
  %872 = zext <8 x i8> %871 to <8 x i16>
  %873 = shl nuw nsw <8 x i16> %872, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %874 = bitcast i16* %859 to <8 x i16>*
  store <8 x i16> %873, <8 x i16>* %874, align 2, !alias.scope !350, !noalias !347
  %875 = getelementptr inbounds i8, i8* %858, i64 8
  %876 = bitcast i8* %875 to <8 x i8>*
  %877 = load <8 x i8>, <8 x i8>* %876, align 1, !alias.scope !347
  %878 = zext <8 x i8> %877 to <8 x i16>
  %879 = shl nuw nsw <8 x i16> %878, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %880 = getelementptr inbounds i16, i16* %2, i64 424
  %881 = bitcast i16* %880 to <8 x i16>*
  store <8 x i16> %879, <8 x i16>* %881, align 2, !alias.scope !350, !noalias !347
  %882 = getelementptr inbounds i8, i8* %858, i64 16
  %883 = bitcast i8* %882 to <8 x i8>*
  %884 = load <8 x i8>, <8 x i8>* %883, align 1, !alias.scope !347
  %885 = zext <8 x i8> %884 to <8 x i16>
  %886 = shl nuw nsw <8 x i16> %885, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %887 = getelementptr inbounds i16, i16* %2, i64 432
  %888 = bitcast i16* %887 to <8 x i16>*
  store <8 x i16> %886, <8 x i16>* %888, align 2, !alias.scope !350, !noalias !347
  %889 = getelementptr inbounds i8, i8* %858, i64 24
  %890 = bitcast i8* %889 to <8 x i8>*
  %891 = load <8 x i8>, <8 x i8>* %890, align 1, !alias.scope !347
  %892 = zext <8 x i8> %891 to <8 x i16>
  %893 = shl nuw nsw <8 x i16> %892, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %894 = getelementptr inbounds i16, i16* %2, i64 440
  %895 = bitcast i16* %894 to <8 x i16>*
  store <8 x i16> %893, <8 x i16>* %895, align 2, !alias.scope !350, !noalias !347
  br label %923

896:                                              ; preds = %857, %896
  %897 = phi i64 [ %921, %896 ], [ 0, %857 ]
  %898 = getelementptr inbounds i8, i8* %858, i64 %897
  %899 = load i8, i8* %898, align 1
  %900 = zext i8 %899 to i16
  %901 = shl nuw nsw i16 %900, 3
  %902 = getelementptr inbounds i16, i16* %859, i64 %897
  store i16 %901, i16* %902, align 2
  %903 = or i64 %897, 1
  %904 = getelementptr inbounds i8, i8* %858, i64 %903
  %905 = load i8, i8* %904, align 1
  %906 = zext i8 %905 to i16
  %907 = shl nuw nsw i16 %906, 3
  %908 = getelementptr inbounds i16, i16* %859, i64 %903
  store i16 %907, i16* %908, align 2
  %909 = or i64 %897, 2
  %910 = getelementptr inbounds i8, i8* %858, i64 %909
  %911 = load i8, i8* %910, align 1
  %912 = zext i8 %911 to i16
  %913 = shl nuw nsw i16 %912, 3
  %914 = getelementptr inbounds i16, i16* %859, i64 %909
  store i16 %913, i16* %914, align 2
  %915 = or i64 %897, 3
  %916 = getelementptr inbounds i8, i8* %858, i64 %915
  %917 = load i8, i8* %916, align 1
  %918 = zext i8 %917 to i16
  %919 = shl nuw nsw i16 %918, 3
  %920 = getelementptr inbounds i16, i16* %859, i64 %915
  store i16 %919, i16* %920, align 2
  %921 = add nuw nsw i64 %897, 4
  %922 = icmp eq i64 %921, 32
  br i1 %922, label %923, label %896, !llvm.loop !352

923:                                              ; preds = %896, %869
  %924 = getelementptr inbounds i8, i8* %858, i64 %4
  %925 = getelementptr inbounds i16, i16* %2, i64 448
  %926 = bitcast i16* %925 to i8*
  %927 = getelementptr i16, i16* %2, i64 480
  %928 = bitcast i16* %927 to i8*
  %929 = mul nsw i64 %4, 14
  %930 = add nsw i64 %929, 32
  %931 = getelementptr i8, i8* %0, i64 %930
  %932 = icmp ugt i8* %931, %926
  %933 = icmp ult i8* %924, %928
  %934 = and i1 %932, %933
  br i1 %934, label %962, label %935

935:                                              ; preds = %923
  %936 = bitcast i8* %924 to <8 x i8>*
  %937 = load <8 x i8>, <8 x i8>* %936, align 1, !alias.scope !353
  %938 = zext <8 x i8> %937 to <8 x i16>
  %939 = shl nuw nsw <8 x i16> %938, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %940 = bitcast i16* %925 to <8 x i16>*
  store <8 x i16> %939, <8 x i16>* %940, align 2, !alias.scope !356, !noalias !353
  %941 = getelementptr inbounds i8, i8* %924, i64 8
  %942 = bitcast i8* %941 to <8 x i8>*
  %943 = load <8 x i8>, <8 x i8>* %942, align 1, !alias.scope !353
  %944 = zext <8 x i8> %943 to <8 x i16>
  %945 = shl nuw nsw <8 x i16> %944, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %946 = getelementptr inbounds i16, i16* %2, i64 456
  %947 = bitcast i16* %946 to <8 x i16>*
  store <8 x i16> %945, <8 x i16>* %947, align 2, !alias.scope !356, !noalias !353
  %948 = getelementptr inbounds i8, i8* %924, i64 16
  %949 = bitcast i8* %948 to <8 x i8>*
  %950 = load <8 x i8>, <8 x i8>* %949, align 1, !alias.scope !353
  %951 = zext <8 x i8> %950 to <8 x i16>
  %952 = shl nuw nsw <8 x i16> %951, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %953 = getelementptr inbounds i16, i16* %2, i64 464
  %954 = bitcast i16* %953 to <8 x i16>*
  store <8 x i16> %952, <8 x i16>* %954, align 2, !alias.scope !356, !noalias !353
  %955 = getelementptr inbounds i8, i8* %924, i64 24
  %956 = bitcast i8* %955 to <8 x i8>*
  %957 = load <8 x i8>, <8 x i8>* %956, align 1, !alias.scope !353
  %958 = zext <8 x i8> %957 to <8 x i16>
  %959 = shl nuw nsw <8 x i16> %958, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %960 = getelementptr inbounds i16, i16* %2, i64 472
  %961 = bitcast i16* %960 to <8 x i16>*
  store <8 x i16> %959, <8 x i16>* %961, align 2, !alias.scope !356, !noalias !353
  br label %989

962:                                              ; preds = %923, %962
  %963 = phi i64 [ %987, %962 ], [ 0, %923 ]
  %964 = getelementptr inbounds i8, i8* %924, i64 %963
  %965 = load i8, i8* %964, align 1
  %966 = zext i8 %965 to i16
  %967 = shl nuw nsw i16 %966, 3
  %968 = getelementptr inbounds i16, i16* %925, i64 %963
  store i16 %967, i16* %968, align 2
  %969 = or i64 %963, 1
  %970 = getelementptr inbounds i8, i8* %924, i64 %969
  %971 = load i8, i8* %970, align 1
  %972 = zext i8 %971 to i16
  %973 = shl nuw nsw i16 %972, 3
  %974 = getelementptr inbounds i16, i16* %925, i64 %969
  store i16 %973, i16* %974, align 2
  %975 = or i64 %963, 2
  %976 = getelementptr inbounds i8, i8* %924, i64 %975
  %977 = load i8, i8* %976, align 1
  %978 = zext i8 %977 to i16
  %979 = shl nuw nsw i16 %978, 3
  %980 = getelementptr inbounds i16, i16* %925, i64 %975
  store i16 %979, i16* %980, align 2
  %981 = or i64 %963, 3
  %982 = getelementptr inbounds i8, i8* %924, i64 %981
  %983 = load i8, i8* %982, align 1
  %984 = zext i8 %983 to i16
  %985 = shl nuw nsw i16 %984, 3
  %986 = getelementptr inbounds i16, i16* %925, i64 %981
  store i16 %985, i16* %986, align 2
  %987 = add nuw nsw i64 %963, 4
  %988 = icmp eq i64 %987, 32
  br i1 %988, label %989, label %962, !llvm.loop !358

989:                                              ; preds = %962, %935
  %990 = getelementptr inbounds i8, i8* %924, i64 %4
  %991 = getelementptr inbounds i16, i16* %2, i64 480
  %992 = bitcast i16* %991 to i8*
  %993 = getelementptr i16, i16* %2, i64 512
  %994 = bitcast i16* %993 to i8*
  %995 = mul nsw i64 %4, 15
  %996 = add nsw i64 %995, 32
  %997 = getelementptr i8, i8* %0, i64 %996
  %998 = icmp ugt i8* %997, %992
  %999 = icmp ult i8* %990, %994
  %1000 = and i1 %998, %999
  br i1 %1000, label %1028, label %1001

1001:                                             ; preds = %989
  %1002 = bitcast i8* %990 to <8 x i8>*
  %1003 = load <8 x i8>, <8 x i8>* %1002, align 1, !alias.scope !359
  %1004 = zext <8 x i8> %1003 to <8 x i16>
  %1005 = shl nuw nsw <8 x i16> %1004, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %1006 = bitcast i16* %991 to <8 x i16>*
  store <8 x i16> %1005, <8 x i16>* %1006, align 2, !alias.scope !362, !noalias !359
  %1007 = getelementptr inbounds i8, i8* %990, i64 8
  %1008 = bitcast i8* %1007 to <8 x i8>*
  %1009 = load <8 x i8>, <8 x i8>* %1008, align 1, !alias.scope !359
  %1010 = zext <8 x i8> %1009 to <8 x i16>
  %1011 = shl nuw nsw <8 x i16> %1010, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %1012 = getelementptr inbounds i16, i16* %2, i64 488
  %1013 = bitcast i16* %1012 to <8 x i16>*
  store <8 x i16> %1011, <8 x i16>* %1013, align 2, !alias.scope !362, !noalias !359
  %1014 = getelementptr inbounds i8, i8* %990, i64 16
  %1015 = bitcast i8* %1014 to <8 x i8>*
  %1016 = load <8 x i8>, <8 x i8>* %1015, align 1, !alias.scope !359
  %1017 = zext <8 x i8> %1016 to <8 x i16>
  %1018 = shl nuw nsw <8 x i16> %1017, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %1019 = getelementptr inbounds i16, i16* %2, i64 496
  %1020 = bitcast i16* %1019 to <8 x i16>*
  store <8 x i16> %1018, <8 x i16>* %1020, align 2, !alias.scope !362, !noalias !359
  %1021 = getelementptr inbounds i8, i8* %990, i64 24
  %1022 = bitcast i8* %1021 to <8 x i8>*
  %1023 = load <8 x i8>, <8 x i8>* %1022, align 1, !alias.scope !359
  %1024 = zext <8 x i8> %1023 to <8 x i16>
  %1025 = shl nuw nsw <8 x i16> %1024, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %1026 = getelementptr inbounds i16, i16* %2, i64 504
  %1027 = bitcast i16* %1026 to <8 x i16>*
  store <8 x i16> %1025, <8 x i16>* %1027, align 2, !alias.scope !362, !noalias !359
  br label %1055

1028:                                             ; preds = %989, %1028
  %1029 = phi i64 [ %1053, %1028 ], [ 0, %989 ]
  %1030 = getelementptr inbounds i8, i8* %990, i64 %1029
  %1031 = load i8, i8* %1030, align 1
  %1032 = zext i8 %1031 to i16
  %1033 = shl nuw nsw i16 %1032, 3
  %1034 = getelementptr inbounds i16, i16* %991, i64 %1029
  store i16 %1033, i16* %1034, align 2
  %1035 = or i64 %1029, 1
  %1036 = getelementptr inbounds i8, i8* %990, i64 %1035
  %1037 = load i8, i8* %1036, align 1
  %1038 = zext i8 %1037 to i16
  %1039 = shl nuw nsw i16 %1038, 3
  %1040 = getelementptr inbounds i16, i16* %991, i64 %1035
  store i16 %1039, i16* %1040, align 2
  %1041 = or i64 %1029, 2
  %1042 = getelementptr inbounds i8, i8* %990, i64 %1041
  %1043 = load i8, i8* %1042, align 1
  %1044 = zext i8 %1043 to i16
  %1045 = shl nuw nsw i16 %1044, 3
  %1046 = getelementptr inbounds i16, i16* %991, i64 %1041
  store i16 %1045, i16* %1046, align 2
  %1047 = or i64 %1029, 3
  %1048 = getelementptr inbounds i8, i8* %990, i64 %1047
  %1049 = load i8, i8* %1048, align 1
  %1050 = zext i8 %1049 to i16
  %1051 = shl nuw nsw i16 %1050, 3
  %1052 = getelementptr inbounds i16, i16* %991, i64 %1047
  store i16 %1051, i16* %1052, align 2
  %1053 = add nuw nsw i64 %1029, 4
  %1054 = icmp eq i64 %1053, 32
  br i1 %1054, label %1055, label %1028, !llvm.loop !364

1055:                                             ; preds = %1028, %1001
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_444_4x16_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ 0, %3 ], [ %49, %5 ]
  %7 = phi i8* [ %0, %3 ], [ %47, %5 ]
  %8 = phi i16* [ %2, %3 ], [ %48, %5 ]
  %9 = load i8, i8* %7, align 1
  %10 = zext i8 %9 to i16
  %11 = shl nuw nsw i16 %10, 3
  store i16 %11, i16* %8, align 2
  %12 = getelementptr inbounds i8, i8* %7, i64 1
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i16
  %15 = shl nuw nsw i16 %14, 3
  %16 = getelementptr inbounds i16, i16* %8, i64 1
  store i16 %15, i16* %16, align 2
  %17 = getelementptr inbounds i8, i8* %7, i64 2
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i16
  %20 = shl nuw nsw i16 %19, 3
  %21 = getelementptr inbounds i16, i16* %8, i64 2
  store i16 %20, i16* %21, align 2
  %22 = getelementptr inbounds i8, i8* %7, i64 3
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i16
  %25 = shl nuw nsw i16 %24, 3
  %26 = getelementptr inbounds i16, i16* %8, i64 3
  store i16 %25, i16* %26, align 2
  %27 = getelementptr inbounds i8, i8* %7, i64 %4
  %28 = getelementptr inbounds i16, i16* %8, i64 32
  %29 = load i8, i8* %27, align 1
  %30 = zext i8 %29 to i16
  %31 = shl nuw nsw i16 %30, 3
  store i16 %31, i16* %28, align 2
  %32 = getelementptr inbounds i8, i8* %27, i64 1
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i16
  %35 = shl nuw nsw i16 %34, 3
  %36 = getelementptr inbounds i16, i16* %8, i64 33
  store i16 %35, i16* %36, align 2
  %37 = getelementptr inbounds i8, i8* %27, i64 2
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  %40 = shl nuw nsw i16 %39, 3
  %41 = getelementptr inbounds i16, i16* %8, i64 34
  store i16 %40, i16* %41, align 2
  %42 = getelementptr inbounds i8, i8* %27, i64 3
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i16
  %45 = shl nuw nsw i16 %44, 3
  %46 = getelementptr inbounds i16, i16* %8, i64 35
  store i16 %45, i16* %46, align 2
  %47 = getelementptr inbounds i8, i8* %27, i64 %4
  %48 = getelementptr inbounds i16, i16* %8, i64 64
  %49 = add nuw nsw i32 %6, 2
  %50 = icmp eq i32 %49, 16
  br i1 %50, label %51, label %5

51:                                               ; preds = %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_444_16x4_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ 0, %3 ], [ %89, %5 ]
  %7 = phi i8* [ %0, %3 ], [ %87, %5 ]
  %8 = phi i16* [ %2, %3 ], [ %88, %5 ]
  %9 = load i8, i8* %7, align 1
  %10 = zext i8 %9 to i16
  %11 = shl nuw nsw i16 %10, 3
  store i16 %11, i16* %8, align 2
  %12 = getelementptr inbounds i8, i8* %7, i64 1
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i16
  %15 = shl nuw nsw i16 %14, 3
  %16 = getelementptr inbounds i16, i16* %8, i64 1
  store i16 %15, i16* %16, align 2
  %17 = getelementptr inbounds i8, i8* %7, i64 2
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i16
  %20 = shl nuw nsw i16 %19, 3
  %21 = getelementptr inbounds i16, i16* %8, i64 2
  store i16 %20, i16* %21, align 2
  %22 = getelementptr inbounds i8, i8* %7, i64 3
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i16
  %25 = shl nuw nsw i16 %24, 3
  %26 = getelementptr inbounds i16, i16* %8, i64 3
  store i16 %25, i16* %26, align 2
  %27 = getelementptr inbounds i8, i8* %7, i64 4
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i16
  %30 = shl nuw nsw i16 %29, 3
  %31 = getelementptr inbounds i16, i16* %8, i64 4
  store i16 %30, i16* %31, align 2
  %32 = getelementptr inbounds i8, i8* %7, i64 5
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i16
  %35 = shl nuw nsw i16 %34, 3
  %36 = getelementptr inbounds i16, i16* %8, i64 5
  store i16 %35, i16* %36, align 2
  %37 = getelementptr inbounds i8, i8* %7, i64 6
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  %40 = shl nuw nsw i16 %39, 3
  %41 = getelementptr inbounds i16, i16* %8, i64 6
  store i16 %40, i16* %41, align 2
  %42 = getelementptr inbounds i8, i8* %7, i64 7
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i16
  %45 = shl nuw nsw i16 %44, 3
  %46 = getelementptr inbounds i16, i16* %8, i64 7
  store i16 %45, i16* %46, align 2
  %47 = getelementptr inbounds i8, i8* %7, i64 8
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  %50 = shl nuw nsw i16 %49, 3
  %51 = getelementptr inbounds i16, i16* %8, i64 8
  store i16 %50, i16* %51, align 2
  %52 = getelementptr inbounds i8, i8* %7, i64 9
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i16
  %55 = shl nuw nsw i16 %54, 3
  %56 = getelementptr inbounds i16, i16* %8, i64 9
  store i16 %55, i16* %56, align 2
  %57 = getelementptr inbounds i8, i8* %7, i64 10
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i16
  %60 = shl nuw nsw i16 %59, 3
  %61 = getelementptr inbounds i16, i16* %8, i64 10
  store i16 %60, i16* %61, align 2
  %62 = getelementptr inbounds i8, i8* %7, i64 11
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i16
  %65 = shl nuw nsw i16 %64, 3
  %66 = getelementptr inbounds i16, i16* %8, i64 11
  store i16 %65, i16* %66, align 2
  %67 = getelementptr inbounds i8, i8* %7, i64 12
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i16
  %70 = shl nuw nsw i16 %69, 3
  %71 = getelementptr inbounds i16, i16* %8, i64 12
  store i16 %70, i16* %71, align 2
  %72 = getelementptr inbounds i8, i8* %7, i64 13
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i16
  %75 = shl nuw nsw i16 %74, 3
  %76 = getelementptr inbounds i16, i16* %8, i64 13
  store i16 %75, i16* %76, align 2
  %77 = getelementptr inbounds i8, i8* %7, i64 14
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i16
  %80 = shl nuw nsw i16 %79, 3
  %81 = getelementptr inbounds i16, i16* %8, i64 14
  store i16 %80, i16* %81, align 2
  %82 = getelementptr inbounds i8, i8* %7, i64 15
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i16
  %85 = shl nuw nsw i16 %84, 3
  %86 = getelementptr inbounds i16, i16* %8, i64 15
  store i16 %85, i16* %86, align 2
  %87 = getelementptr inbounds i8, i8* %7, i64 %4
  %88 = getelementptr inbounds i16, i16* %8, i64 32
  %89 = add nuw nsw i32 %6, 1
  %90 = icmp eq i32 %89, 4
  br i1 %90, label %91, label %5

91:                                               ; preds = %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_444_8x32_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  br label %5

5:                                                ; preds = %5, %3
  %6 = phi i32 [ 0, %3 ], [ %49, %5 ]
  %7 = phi i8* [ %0, %3 ], [ %47, %5 ]
  %8 = phi i16* [ %2, %3 ], [ %48, %5 ]
  %9 = load i8, i8* %7, align 1
  %10 = zext i8 %9 to i16
  %11 = shl nuw nsw i16 %10, 3
  store i16 %11, i16* %8, align 2
  %12 = getelementptr inbounds i8, i8* %7, i64 1
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i16
  %15 = shl nuw nsw i16 %14, 3
  %16 = getelementptr inbounds i16, i16* %8, i64 1
  store i16 %15, i16* %16, align 2
  %17 = getelementptr inbounds i8, i8* %7, i64 2
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i16
  %20 = shl nuw nsw i16 %19, 3
  %21 = getelementptr inbounds i16, i16* %8, i64 2
  store i16 %20, i16* %21, align 2
  %22 = getelementptr inbounds i8, i8* %7, i64 3
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i16
  %25 = shl nuw nsw i16 %24, 3
  %26 = getelementptr inbounds i16, i16* %8, i64 3
  store i16 %25, i16* %26, align 2
  %27 = getelementptr inbounds i8, i8* %7, i64 4
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i16
  %30 = shl nuw nsw i16 %29, 3
  %31 = getelementptr inbounds i16, i16* %8, i64 4
  store i16 %30, i16* %31, align 2
  %32 = getelementptr inbounds i8, i8* %7, i64 5
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i16
  %35 = shl nuw nsw i16 %34, 3
  %36 = getelementptr inbounds i16, i16* %8, i64 5
  store i16 %35, i16* %36, align 2
  %37 = getelementptr inbounds i8, i8* %7, i64 6
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  %40 = shl nuw nsw i16 %39, 3
  %41 = getelementptr inbounds i16, i16* %8, i64 6
  store i16 %40, i16* %41, align 2
  %42 = getelementptr inbounds i8, i8* %7, i64 7
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i16
  %45 = shl nuw nsw i16 %44, 3
  %46 = getelementptr inbounds i16, i16* %8, i64 7
  store i16 %45, i16* %46, align 2
  %47 = getelementptr inbounds i8, i8* %7, i64 %4
  %48 = getelementptr inbounds i16, i16* %8, i64 32
  %49 = add nuw nsw i32 %6, 1
  %50 = icmp eq i32 %49, 32
  br i1 %50, label %51, label %5

51:                                               ; preds = %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cfl_subsample_lbd_444_32x8_c(i8* nocapture readonly, i32, i16* nocapture) #2 {
  %4 = sext i32 %1 to i64
  %5 = bitcast i16* %2 to i8*
  %6 = getelementptr i16, i16* %2, i64 32
  %7 = bitcast i16* %6 to i8*
  %8 = getelementptr i8, i8* %0, i64 32
  %9 = icmp ugt i8* %8, %5
  %10 = icmp ugt i8* %7, %0
  %11 = and i1 %9, %10
  br i1 %11, label %77, label %12

12:                                               ; preds = %3
  %13 = bitcast i8* %0 to <8 x i8>*
  %14 = load <8 x i8>, <8 x i8>* %13, align 1, !alias.scope !365
  %15 = zext <8 x i8> %14 to <8 x i16>
  %16 = shl nuw nsw <8 x i16> %15, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %17 = bitcast i16* %2 to <8 x i16>*
  store <8 x i16> %16, <8 x i16>* %17, align 2, !alias.scope !368, !noalias !365
  %18 = getelementptr inbounds i8, i8* %0, i64 8
  %19 = bitcast i8* %18 to <8 x i8>*
  %20 = load <8 x i8>, <8 x i8>* %19, align 1, !alias.scope !365
  %21 = zext <8 x i8> %20 to <8 x i16>
  %22 = shl nuw nsw <8 x i16> %21, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %23 = getelementptr inbounds i16, i16* %2, i64 8
  %24 = bitcast i16* %23 to <8 x i16>*
  store <8 x i16> %22, <8 x i16>* %24, align 2, !alias.scope !368, !noalias !365
  %25 = getelementptr inbounds i8, i8* %0, i64 16
  %26 = bitcast i8* %25 to <8 x i8>*
  %27 = load <8 x i8>, <8 x i8>* %26, align 1, !alias.scope !365
  %28 = zext <8 x i8> %27 to <8 x i16>
  %29 = shl nuw nsw <8 x i16> %28, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %30 = getelementptr inbounds i16, i16* %2, i64 16
  %31 = bitcast i16* %30 to <8 x i16>*
  store <8 x i16> %29, <8 x i16>* %31, align 2, !alias.scope !368, !noalias !365
  %32 = getelementptr inbounds i8, i8* %0, i64 24
  %33 = bitcast i8* %32 to <8 x i8>*
  %34 = load <8 x i8>, <8 x i8>* %33, align 1, !alias.scope !365
  %35 = zext <8 x i8> %34 to <8 x i16>
  %36 = shl nuw nsw <8 x i16> %35, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %37 = getelementptr inbounds i16, i16* %2, i64 24
  %38 = bitcast i16* %37 to <8 x i16>*
  store <8 x i16> %36, <8 x i16>* %38, align 2, !alias.scope !368, !noalias !365
  br label %39

39:                                               ; preds = %77, %12
  %40 = getelementptr inbounds i8, i8* %0, i64 %4
  %41 = getelementptr inbounds i16, i16* %2, i64 32
  %42 = bitcast i16* %41 to i8*
  %43 = getelementptr i16, i16* %2, i64 64
  %44 = bitcast i16* %43 to i8*
  %45 = add nsw i64 %4, 32
  %46 = getelementptr i8, i8* %0, i64 %45
  %47 = icmp ugt i8* %46, %42
  %48 = icmp ult i8* %40, %44
  %49 = and i1 %47, %48
  br i1 %49, label %104, label %50

50:                                               ; preds = %39
  %51 = bitcast i8* %40 to <8 x i8>*
  %52 = load <8 x i8>, <8 x i8>* %51, align 1, !alias.scope !370
  %53 = zext <8 x i8> %52 to <8 x i16>
  %54 = shl nuw nsw <8 x i16> %53, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %55 = bitcast i16* %41 to <8 x i16>*
  store <8 x i16> %54, <8 x i16>* %55, align 2, !alias.scope !373, !noalias !370
  %56 = getelementptr inbounds i8, i8* %40, i64 8
  %57 = bitcast i8* %56 to <8 x i8>*
  %58 = load <8 x i8>, <8 x i8>* %57, align 1, !alias.scope !370
  %59 = zext <8 x i8> %58 to <8 x i16>
  %60 = shl nuw nsw <8 x i16> %59, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %61 = getelementptr inbounds i16, i16* %2, i64 40
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %60, <8 x i16>* %62, align 2, !alias.scope !373, !noalias !370
  %63 = getelementptr inbounds i8, i8* %40, i64 16
  %64 = bitcast i8* %63 to <8 x i8>*
  %65 = load <8 x i8>, <8 x i8>* %64, align 1, !alias.scope !370
  %66 = zext <8 x i8> %65 to <8 x i16>
  %67 = shl nuw nsw <8 x i16> %66, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %68 = getelementptr inbounds i16, i16* %2, i64 48
  %69 = bitcast i16* %68 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %69, align 2, !alias.scope !373, !noalias !370
  %70 = getelementptr inbounds i8, i8* %40, i64 24
  %71 = bitcast i8* %70 to <8 x i8>*
  %72 = load <8 x i8>, <8 x i8>* %71, align 1, !alias.scope !370
  %73 = zext <8 x i8> %72 to <8 x i16>
  %74 = shl nuw nsw <8 x i16> %73, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %75 = getelementptr inbounds i16, i16* %2, i64 56
  %76 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %76, align 2, !alias.scope !373, !noalias !370
  br label %131

77:                                               ; preds = %3, %77
  %78 = phi i64 [ %102, %77 ], [ 0, %3 ]
  %79 = getelementptr inbounds i8, i8* %0, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i16
  %82 = shl nuw nsw i16 %81, 3
  %83 = getelementptr inbounds i16, i16* %2, i64 %78
  store i16 %82, i16* %83, align 2
  %84 = or i64 %78, 1
  %85 = getelementptr inbounds i8, i8* %0, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i16
  %88 = shl nuw nsw i16 %87, 3
  %89 = getelementptr inbounds i16, i16* %2, i64 %84
  store i16 %88, i16* %89, align 2
  %90 = or i64 %78, 2
  %91 = getelementptr inbounds i8, i8* %0, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i16
  %94 = shl nuw nsw i16 %93, 3
  %95 = getelementptr inbounds i16, i16* %2, i64 %90
  store i16 %94, i16* %95, align 2
  %96 = or i64 %78, 3
  %97 = getelementptr inbounds i8, i8* %0, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i16
  %100 = shl nuw nsw i16 %99, 3
  %101 = getelementptr inbounds i16, i16* %2, i64 %96
  store i16 %100, i16* %101, align 2
  %102 = add nuw nsw i64 %78, 4
  %103 = icmp eq i64 %102, 32
  br i1 %103, label %39, label %77, !llvm.loop !375

104:                                              ; preds = %39, %104
  %105 = phi i64 [ %129, %104 ], [ 0, %39 ]
  %106 = getelementptr inbounds i8, i8* %40, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i16
  %109 = shl nuw nsw i16 %108, 3
  %110 = getelementptr inbounds i16, i16* %41, i64 %105
  store i16 %109, i16* %110, align 2
  %111 = or i64 %105, 1
  %112 = getelementptr inbounds i8, i8* %40, i64 %111
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i16
  %115 = shl nuw nsw i16 %114, 3
  %116 = getelementptr inbounds i16, i16* %41, i64 %111
  store i16 %115, i16* %116, align 2
  %117 = or i64 %105, 2
  %118 = getelementptr inbounds i8, i8* %40, i64 %117
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i16
  %121 = shl nuw nsw i16 %120, 3
  %122 = getelementptr inbounds i16, i16* %41, i64 %117
  store i16 %121, i16* %122, align 2
  %123 = or i64 %105, 3
  %124 = getelementptr inbounds i8, i8* %40, i64 %123
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i16
  %127 = shl nuw nsw i16 %126, 3
  %128 = getelementptr inbounds i16, i16* %41, i64 %123
  store i16 %127, i16* %128, align 2
  %129 = add nuw nsw i64 %105, 4
  %130 = icmp eq i64 %129, 32
  br i1 %130, label %131, label %104, !llvm.loop !376

131:                                              ; preds = %104, %50
  %132 = getelementptr inbounds i8, i8* %40, i64 %4
  %133 = getelementptr inbounds i16, i16* %2, i64 64
  %134 = bitcast i16* %133 to i8*
  %135 = getelementptr i16, i16* %2, i64 96
  %136 = bitcast i16* %135 to i8*
  %137 = shl nsw i64 %4, 1
  %138 = add nsw i64 %137, 32
  %139 = getelementptr i8, i8* %0, i64 %138
  %140 = icmp ugt i8* %139, %134
  %141 = icmp ult i8* %132, %136
  %142 = and i1 %140, %141
  br i1 %142, label %170, label %143

143:                                              ; preds = %131
  %144 = bitcast i8* %132 to <8 x i8>*
  %145 = load <8 x i8>, <8 x i8>* %144, align 1, !alias.scope !377
  %146 = zext <8 x i8> %145 to <8 x i16>
  %147 = shl nuw nsw <8 x i16> %146, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %148 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %147, <8 x i16>* %148, align 2, !alias.scope !380, !noalias !377
  %149 = getelementptr inbounds i8, i8* %132, i64 8
  %150 = bitcast i8* %149 to <8 x i8>*
  %151 = load <8 x i8>, <8 x i8>* %150, align 1, !alias.scope !377
  %152 = zext <8 x i8> %151 to <8 x i16>
  %153 = shl nuw nsw <8 x i16> %152, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %154 = getelementptr inbounds i16, i16* %2, i64 72
  %155 = bitcast i16* %154 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %155, align 2, !alias.scope !380, !noalias !377
  %156 = getelementptr inbounds i8, i8* %132, i64 16
  %157 = bitcast i8* %156 to <8 x i8>*
  %158 = load <8 x i8>, <8 x i8>* %157, align 1, !alias.scope !377
  %159 = zext <8 x i8> %158 to <8 x i16>
  %160 = shl nuw nsw <8 x i16> %159, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %161 = getelementptr inbounds i16, i16* %2, i64 80
  %162 = bitcast i16* %161 to <8 x i16>*
  store <8 x i16> %160, <8 x i16>* %162, align 2, !alias.scope !380, !noalias !377
  %163 = getelementptr inbounds i8, i8* %132, i64 24
  %164 = bitcast i8* %163 to <8 x i8>*
  %165 = load <8 x i8>, <8 x i8>* %164, align 1, !alias.scope !377
  %166 = zext <8 x i8> %165 to <8 x i16>
  %167 = shl nuw nsw <8 x i16> %166, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %168 = getelementptr inbounds i16, i16* %2, i64 88
  %169 = bitcast i16* %168 to <8 x i16>*
  store <8 x i16> %167, <8 x i16>* %169, align 2, !alias.scope !380, !noalias !377
  br label %197

170:                                              ; preds = %131, %170
  %171 = phi i64 [ %195, %170 ], [ 0, %131 ]
  %172 = getelementptr inbounds i8, i8* %132, i64 %171
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i16
  %175 = shl nuw nsw i16 %174, 3
  %176 = getelementptr inbounds i16, i16* %133, i64 %171
  store i16 %175, i16* %176, align 2
  %177 = or i64 %171, 1
  %178 = getelementptr inbounds i8, i8* %132, i64 %177
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i16
  %181 = shl nuw nsw i16 %180, 3
  %182 = getelementptr inbounds i16, i16* %133, i64 %177
  store i16 %181, i16* %182, align 2
  %183 = or i64 %171, 2
  %184 = getelementptr inbounds i8, i8* %132, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i16
  %187 = shl nuw nsw i16 %186, 3
  %188 = getelementptr inbounds i16, i16* %133, i64 %183
  store i16 %187, i16* %188, align 2
  %189 = or i64 %171, 3
  %190 = getelementptr inbounds i8, i8* %132, i64 %189
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i16
  %193 = shl nuw nsw i16 %192, 3
  %194 = getelementptr inbounds i16, i16* %133, i64 %189
  store i16 %193, i16* %194, align 2
  %195 = add nuw nsw i64 %171, 4
  %196 = icmp eq i64 %195, 32
  br i1 %196, label %197, label %170, !llvm.loop !382

197:                                              ; preds = %170, %143
  %198 = getelementptr inbounds i8, i8* %132, i64 %4
  %199 = getelementptr inbounds i16, i16* %2, i64 96
  %200 = bitcast i16* %199 to i8*
  %201 = getelementptr i16, i16* %2, i64 128
  %202 = bitcast i16* %201 to i8*
  %203 = mul nsw i64 %4, 3
  %204 = add nsw i64 %203, 32
  %205 = getelementptr i8, i8* %0, i64 %204
  %206 = icmp ugt i8* %205, %200
  %207 = icmp ult i8* %198, %202
  %208 = and i1 %206, %207
  br i1 %208, label %236, label %209

209:                                              ; preds = %197
  %210 = bitcast i8* %198 to <8 x i8>*
  %211 = load <8 x i8>, <8 x i8>* %210, align 1, !alias.scope !383
  %212 = zext <8 x i8> %211 to <8 x i16>
  %213 = shl nuw nsw <8 x i16> %212, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %214 = bitcast i16* %199 to <8 x i16>*
  store <8 x i16> %213, <8 x i16>* %214, align 2, !alias.scope !386, !noalias !383
  %215 = getelementptr inbounds i8, i8* %198, i64 8
  %216 = bitcast i8* %215 to <8 x i8>*
  %217 = load <8 x i8>, <8 x i8>* %216, align 1, !alias.scope !383
  %218 = zext <8 x i8> %217 to <8 x i16>
  %219 = shl nuw nsw <8 x i16> %218, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %220 = getelementptr inbounds i16, i16* %2, i64 104
  %221 = bitcast i16* %220 to <8 x i16>*
  store <8 x i16> %219, <8 x i16>* %221, align 2, !alias.scope !386, !noalias !383
  %222 = getelementptr inbounds i8, i8* %198, i64 16
  %223 = bitcast i8* %222 to <8 x i8>*
  %224 = load <8 x i8>, <8 x i8>* %223, align 1, !alias.scope !383
  %225 = zext <8 x i8> %224 to <8 x i16>
  %226 = shl nuw nsw <8 x i16> %225, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %227 = getelementptr inbounds i16, i16* %2, i64 112
  %228 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %228, align 2, !alias.scope !386, !noalias !383
  %229 = getelementptr inbounds i8, i8* %198, i64 24
  %230 = bitcast i8* %229 to <8 x i8>*
  %231 = load <8 x i8>, <8 x i8>* %230, align 1, !alias.scope !383
  %232 = zext <8 x i8> %231 to <8 x i16>
  %233 = shl nuw nsw <8 x i16> %232, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %234 = getelementptr inbounds i16, i16* %2, i64 120
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %235, align 2, !alias.scope !386, !noalias !383
  br label %263

236:                                              ; preds = %197, %236
  %237 = phi i64 [ %261, %236 ], [ 0, %197 ]
  %238 = getelementptr inbounds i8, i8* %198, i64 %237
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i16
  %241 = shl nuw nsw i16 %240, 3
  %242 = getelementptr inbounds i16, i16* %199, i64 %237
  store i16 %241, i16* %242, align 2
  %243 = or i64 %237, 1
  %244 = getelementptr inbounds i8, i8* %198, i64 %243
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i16
  %247 = shl nuw nsw i16 %246, 3
  %248 = getelementptr inbounds i16, i16* %199, i64 %243
  store i16 %247, i16* %248, align 2
  %249 = or i64 %237, 2
  %250 = getelementptr inbounds i8, i8* %198, i64 %249
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i16
  %253 = shl nuw nsw i16 %252, 3
  %254 = getelementptr inbounds i16, i16* %199, i64 %249
  store i16 %253, i16* %254, align 2
  %255 = or i64 %237, 3
  %256 = getelementptr inbounds i8, i8* %198, i64 %255
  %257 = load i8, i8* %256, align 1
  %258 = zext i8 %257 to i16
  %259 = shl nuw nsw i16 %258, 3
  %260 = getelementptr inbounds i16, i16* %199, i64 %255
  store i16 %259, i16* %260, align 2
  %261 = add nuw nsw i64 %237, 4
  %262 = icmp eq i64 %261, 32
  br i1 %262, label %263, label %236, !llvm.loop !388

263:                                              ; preds = %236, %209
  %264 = getelementptr inbounds i8, i8* %198, i64 %4
  %265 = getelementptr inbounds i16, i16* %2, i64 128
  %266 = bitcast i16* %265 to i8*
  %267 = getelementptr i16, i16* %2, i64 160
  %268 = bitcast i16* %267 to i8*
  %269 = shl nsw i64 %4, 2
  %270 = add nsw i64 %269, 32
  %271 = getelementptr i8, i8* %0, i64 %270
  %272 = icmp ugt i8* %271, %266
  %273 = icmp ult i8* %264, %268
  %274 = and i1 %272, %273
  br i1 %274, label %302, label %275

275:                                              ; preds = %263
  %276 = bitcast i8* %264 to <8 x i8>*
  %277 = load <8 x i8>, <8 x i8>* %276, align 1, !alias.scope !389
  %278 = zext <8 x i8> %277 to <8 x i16>
  %279 = shl nuw nsw <8 x i16> %278, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %280 = bitcast i16* %265 to <8 x i16>*
  store <8 x i16> %279, <8 x i16>* %280, align 2, !alias.scope !392, !noalias !389
  %281 = getelementptr inbounds i8, i8* %264, i64 8
  %282 = bitcast i8* %281 to <8 x i8>*
  %283 = load <8 x i8>, <8 x i8>* %282, align 1, !alias.scope !389
  %284 = zext <8 x i8> %283 to <8 x i16>
  %285 = shl nuw nsw <8 x i16> %284, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %286 = getelementptr inbounds i16, i16* %2, i64 136
  %287 = bitcast i16* %286 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %287, align 2, !alias.scope !392, !noalias !389
  %288 = getelementptr inbounds i8, i8* %264, i64 16
  %289 = bitcast i8* %288 to <8 x i8>*
  %290 = load <8 x i8>, <8 x i8>* %289, align 1, !alias.scope !389
  %291 = zext <8 x i8> %290 to <8 x i16>
  %292 = shl nuw nsw <8 x i16> %291, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %293 = getelementptr inbounds i16, i16* %2, i64 144
  %294 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %294, align 2, !alias.scope !392, !noalias !389
  %295 = getelementptr inbounds i8, i8* %264, i64 24
  %296 = bitcast i8* %295 to <8 x i8>*
  %297 = load <8 x i8>, <8 x i8>* %296, align 1, !alias.scope !389
  %298 = zext <8 x i8> %297 to <8 x i16>
  %299 = shl nuw nsw <8 x i16> %298, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %300 = getelementptr inbounds i16, i16* %2, i64 152
  %301 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %299, <8 x i16>* %301, align 2, !alias.scope !392, !noalias !389
  br label %329

302:                                              ; preds = %263, %302
  %303 = phi i64 [ %327, %302 ], [ 0, %263 ]
  %304 = getelementptr inbounds i8, i8* %264, i64 %303
  %305 = load i8, i8* %304, align 1
  %306 = zext i8 %305 to i16
  %307 = shl nuw nsw i16 %306, 3
  %308 = getelementptr inbounds i16, i16* %265, i64 %303
  store i16 %307, i16* %308, align 2
  %309 = or i64 %303, 1
  %310 = getelementptr inbounds i8, i8* %264, i64 %309
  %311 = load i8, i8* %310, align 1
  %312 = zext i8 %311 to i16
  %313 = shl nuw nsw i16 %312, 3
  %314 = getelementptr inbounds i16, i16* %265, i64 %309
  store i16 %313, i16* %314, align 2
  %315 = or i64 %303, 2
  %316 = getelementptr inbounds i8, i8* %264, i64 %315
  %317 = load i8, i8* %316, align 1
  %318 = zext i8 %317 to i16
  %319 = shl nuw nsw i16 %318, 3
  %320 = getelementptr inbounds i16, i16* %265, i64 %315
  store i16 %319, i16* %320, align 2
  %321 = or i64 %303, 3
  %322 = getelementptr inbounds i8, i8* %264, i64 %321
  %323 = load i8, i8* %322, align 1
  %324 = zext i8 %323 to i16
  %325 = shl nuw nsw i16 %324, 3
  %326 = getelementptr inbounds i16, i16* %265, i64 %321
  store i16 %325, i16* %326, align 2
  %327 = add nuw nsw i64 %303, 4
  %328 = icmp eq i64 %327, 32
  br i1 %328, label %329, label %302, !llvm.loop !394

329:                                              ; preds = %302, %275
  %330 = getelementptr inbounds i8, i8* %264, i64 %4
  %331 = getelementptr inbounds i16, i16* %2, i64 160
  %332 = bitcast i16* %331 to i8*
  %333 = getelementptr i16, i16* %2, i64 192
  %334 = bitcast i16* %333 to i8*
  %335 = mul nsw i64 %4, 5
  %336 = add nsw i64 %335, 32
  %337 = getelementptr i8, i8* %0, i64 %336
  %338 = icmp ugt i8* %337, %332
  %339 = icmp ult i8* %330, %334
  %340 = and i1 %338, %339
  br i1 %340, label %368, label %341

341:                                              ; preds = %329
  %342 = bitcast i8* %330 to <8 x i8>*
  %343 = load <8 x i8>, <8 x i8>* %342, align 1, !alias.scope !395
  %344 = zext <8 x i8> %343 to <8 x i16>
  %345 = shl nuw nsw <8 x i16> %344, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %346 = bitcast i16* %331 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %346, align 2, !alias.scope !398, !noalias !395
  %347 = getelementptr inbounds i8, i8* %330, i64 8
  %348 = bitcast i8* %347 to <8 x i8>*
  %349 = load <8 x i8>, <8 x i8>* %348, align 1, !alias.scope !395
  %350 = zext <8 x i8> %349 to <8 x i16>
  %351 = shl nuw nsw <8 x i16> %350, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %352 = getelementptr inbounds i16, i16* %2, i64 168
  %353 = bitcast i16* %352 to <8 x i16>*
  store <8 x i16> %351, <8 x i16>* %353, align 2, !alias.scope !398, !noalias !395
  %354 = getelementptr inbounds i8, i8* %330, i64 16
  %355 = bitcast i8* %354 to <8 x i8>*
  %356 = load <8 x i8>, <8 x i8>* %355, align 1, !alias.scope !395
  %357 = zext <8 x i8> %356 to <8 x i16>
  %358 = shl nuw nsw <8 x i16> %357, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %359 = getelementptr inbounds i16, i16* %2, i64 176
  %360 = bitcast i16* %359 to <8 x i16>*
  store <8 x i16> %358, <8 x i16>* %360, align 2, !alias.scope !398, !noalias !395
  %361 = getelementptr inbounds i8, i8* %330, i64 24
  %362 = bitcast i8* %361 to <8 x i8>*
  %363 = load <8 x i8>, <8 x i8>* %362, align 1, !alias.scope !395
  %364 = zext <8 x i8> %363 to <8 x i16>
  %365 = shl nuw nsw <8 x i16> %364, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %366 = getelementptr inbounds i16, i16* %2, i64 184
  %367 = bitcast i16* %366 to <8 x i16>*
  store <8 x i16> %365, <8 x i16>* %367, align 2, !alias.scope !398, !noalias !395
  br label %395

368:                                              ; preds = %329, %368
  %369 = phi i64 [ %393, %368 ], [ 0, %329 ]
  %370 = getelementptr inbounds i8, i8* %330, i64 %369
  %371 = load i8, i8* %370, align 1
  %372 = zext i8 %371 to i16
  %373 = shl nuw nsw i16 %372, 3
  %374 = getelementptr inbounds i16, i16* %331, i64 %369
  store i16 %373, i16* %374, align 2
  %375 = or i64 %369, 1
  %376 = getelementptr inbounds i8, i8* %330, i64 %375
  %377 = load i8, i8* %376, align 1
  %378 = zext i8 %377 to i16
  %379 = shl nuw nsw i16 %378, 3
  %380 = getelementptr inbounds i16, i16* %331, i64 %375
  store i16 %379, i16* %380, align 2
  %381 = or i64 %369, 2
  %382 = getelementptr inbounds i8, i8* %330, i64 %381
  %383 = load i8, i8* %382, align 1
  %384 = zext i8 %383 to i16
  %385 = shl nuw nsw i16 %384, 3
  %386 = getelementptr inbounds i16, i16* %331, i64 %381
  store i16 %385, i16* %386, align 2
  %387 = or i64 %369, 3
  %388 = getelementptr inbounds i8, i8* %330, i64 %387
  %389 = load i8, i8* %388, align 1
  %390 = zext i8 %389 to i16
  %391 = shl nuw nsw i16 %390, 3
  %392 = getelementptr inbounds i16, i16* %331, i64 %387
  store i16 %391, i16* %392, align 2
  %393 = add nuw nsw i64 %369, 4
  %394 = icmp eq i64 %393, 32
  br i1 %394, label %395, label %368, !llvm.loop !400

395:                                              ; preds = %368, %341
  %396 = getelementptr inbounds i8, i8* %330, i64 %4
  %397 = getelementptr inbounds i16, i16* %2, i64 192
  %398 = bitcast i16* %397 to i8*
  %399 = getelementptr i16, i16* %2, i64 224
  %400 = bitcast i16* %399 to i8*
  %401 = mul nsw i64 %4, 6
  %402 = add nsw i64 %401, 32
  %403 = getelementptr i8, i8* %0, i64 %402
  %404 = icmp ugt i8* %403, %398
  %405 = icmp ult i8* %396, %400
  %406 = and i1 %404, %405
  br i1 %406, label %434, label %407

407:                                              ; preds = %395
  %408 = bitcast i8* %396 to <8 x i8>*
  %409 = load <8 x i8>, <8 x i8>* %408, align 1, !alias.scope !401
  %410 = zext <8 x i8> %409 to <8 x i16>
  %411 = shl nuw nsw <8 x i16> %410, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %412 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %411, <8 x i16>* %412, align 2, !alias.scope !404, !noalias !401
  %413 = getelementptr inbounds i8, i8* %396, i64 8
  %414 = bitcast i8* %413 to <8 x i8>*
  %415 = load <8 x i8>, <8 x i8>* %414, align 1, !alias.scope !401
  %416 = zext <8 x i8> %415 to <8 x i16>
  %417 = shl nuw nsw <8 x i16> %416, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %418 = getelementptr inbounds i16, i16* %2, i64 200
  %419 = bitcast i16* %418 to <8 x i16>*
  store <8 x i16> %417, <8 x i16>* %419, align 2, !alias.scope !404, !noalias !401
  %420 = getelementptr inbounds i8, i8* %396, i64 16
  %421 = bitcast i8* %420 to <8 x i8>*
  %422 = load <8 x i8>, <8 x i8>* %421, align 1, !alias.scope !401
  %423 = zext <8 x i8> %422 to <8 x i16>
  %424 = shl nuw nsw <8 x i16> %423, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %425 = getelementptr inbounds i16, i16* %2, i64 208
  %426 = bitcast i16* %425 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %426, align 2, !alias.scope !404, !noalias !401
  %427 = getelementptr inbounds i8, i8* %396, i64 24
  %428 = bitcast i8* %427 to <8 x i8>*
  %429 = load <8 x i8>, <8 x i8>* %428, align 1, !alias.scope !401
  %430 = zext <8 x i8> %429 to <8 x i16>
  %431 = shl nuw nsw <8 x i16> %430, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %432 = getelementptr inbounds i16, i16* %2, i64 216
  %433 = bitcast i16* %432 to <8 x i16>*
  store <8 x i16> %431, <8 x i16>* %433, align 2, !alias.scope !404, !noalias !401
  br label %461

434:                                              ; preds = %395, %434
  %435 = phi i64 [ %459, %434 ], [ 0, %395 ]
  %436 = getelementptr inbounds i8, i8* %396, i64 %435
  %437 = load i8, i8* %436, align 1
  %438 = zext i8 %437 to i16
  %439 = shl nuw nsw i16 %438, 3
  %440 = getelementptr inbounds i16, i16* %397, i64 %435
  store i16 %439, i16* %440, align 2
  %441 = or i64 %435, 1
  %442 = getelementptr inbounds i8, i8* %396, i64 %441
  %443 = load i8, i8* %442, align 1
  %444 = zext i8 %443 to i16
  %445 = shl nuw nsw i16 %444, 3
  %446 = getelementptr inbounds i16, i16* %397, i64 %441
  store i16 %445, i16* %446, align 2
  %447 = or i64 %435, 2
  %448 = getelementptr inbounds i8, i8* %396, i64 %447
  %449 = load i8, i8* %448, align 1
  %450 = zext i8 %449 to i16
  %451 = shl nuw nsw i16 %450, 3
  %452 = getelementptr inbounds i16, i16* %397, i64 %447
  store i16 %451, i16* %452, align 2
  %453 = or i64 %435, 3
  %454 = getelementptr inbounds i8, i8* %396, i64 %453
  %455 = load i8, i8* %454, align 1
  %456 = zext i8 %455 to i16
  %457 = shl nuw nsw i16 %456, 3
  %458 = getelementptr inbounds i16, i16* %397, i64 %453
  store i16 %457, i16* %458, align 2
  %459 = add nuw nsw i64 %435, 4
  %460 = icmp eq i64 %459, 32
  br i1 %460, label %461, label %434, !llvm.loop !406

461:                                              ; preds = %434, %407
  %462 = getelementptr inbounds i8, i8* %396, i64 %4
  %463 = getelementptr inbounds i16, i16* %2, i64 224
  %464 = bitcast i16* %463 to i8*
  %465 = getelementptr i16, i16* %2, i64 256
  %466 = bitcast i16* %465 to i8*
  %467 = mul nsw i64 %4, 7
  %468 = add nsw i64 %467, 32
  %469 = getelementptr i8, i8* %0, i64 %468
  %470 = icmp ugt i8* %469, %464
  %471 = icmp ult i8* %462, %466
  %472 = and i1 %470, %471
  br i1 %472, label %500, label %473

473:                                              ; preds = %461
  %474 = bitcast i8* %462 to <8 x i8>*
  %475 = load <8 x i8>, <8 x i8>* %474, align 1, !alias.scope !407
  %476 = zext <8 x i8> %475 to <8 x i16>
  %477 = shl nuw nsw <8 x i16> %476, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %478 = bitcast i16* %463 to <8 x i16>*
  store <8 x i16> %477, <8 x i16>* %478, align 2, !alias.scope !410, !noalias !407
  %479 = getelementptr inbounds i8, i8* %462, i64 8
  %480 = bitcast i8* %479 to <8 x i8>*
  %481 = load <8 x i8>, <8 x i8>* %480, align 1, !alias.scope !407
  %482 = zext <8 x i8> %481 to <8 x i16>
  %483 = shl nuw nsw <8 x i16> %482, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %484 = getelementptr inbounds i16, i16* %2, i64 232
  %485 = bitcast i16* %484 to <8 x i16>*
  store <8 x i16> %483, <8 x i16>* %485, align 2, !alias.scope !410, !noalias !407
  %486 = getelementptr inbounds i8, i8* %462, i64 16
  %487 = bitcast i8* %486 to <8 x i8>*
  %488 = load <8 x i8>, <8 x i8>* %487, align 1, !alias.scope !407
  %489 = zext <8 x i8> %488 to <8 x i16>
  %490 = shl nuw nsw <8 x i16> %489, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %491 = getelementptr inbounds i16, i16* %2, i64 240
  %492 = bitcast i16* %491 to <8 x i16>*
  store <8 x i16> %490, <8 x i16>* %492, align 2, !alias.scope !410, !noalias !407
  %493 = getelementptr inbounds i8, i8* %462, i64 24
  %494 = bitcast i8* %493 to <8 x i8>*
  %495 = load <8 x i8>, <8 x i8>* %494, align 1, !alias.scope !407
  %496 = zext <8 x i8> %495 to <8 x i16>
  %497 = shl nuw nsw <8 x i16> %496, <i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3>
  %498 = getelementptr inbounds i16, i16* %2, i64 248
  %499 = bitcast i16* %498 to <8 x i16>*
  store <8 x i16> %497, <8 x i16>* %499, align 2, !alias.scope !410, !noalias !407
  br label %527

500:                                              ; preds = %461, %500
  %501 = phi i64 [ %525, %500 ], [ 0, %461 ]
  %502 = getelementptr inbounds i8, i8* %462, i64 %501
  %503 = load i8, i8* %502, align 1
  %504 = zext i8 %503 to i16
  %505 = shl nuw nsw i16 %504, 3
  %506 = getelementptr inbounds i16, i16* %463, i64 %501
  store i16 %505, i16* %506, align 2
  %507 = or i64 %501, 1
  %508 = getelementptr inbounds i8, i8* %462, i64 %507
  %509 = load i8, i8* %508, align 1
  %510 = zext i8 %509 to i16
  %511 = shl nuw nsw i16 %510, 3
  %512 = getelementptr inbounds i16, i16* %463, i64 %507
  store i16 %511, i16* %512, align 2
  %513 = or i64 %501, 2
  %514 = getelementptr inbounds i8, i8* %462, i64 %513
  %515 = load i8, i8* %514, align 1
  %516 = zext i8 %515 to i16
  %517 = shl nuw nsw i16 %516, 3
  %518 = getelementptr inbounds i16, i16* %463, i64 %513
  store i16 %517, i16* %518, align 2
  %519 = or i64 %501, 3
  %520 = getelementptr inbounds i8, i8* %462, i64 %519
  %521 = load i8, i8* %520, align 1
  %522 = zext i8 %521 to i16
  %523 = shl nuw nsw i16 %522, 3
  %524 = getelementptr inbounds i16, i16* %463, i64 %519
  store i16 %523, i16* %524, align 2
  %525 = add nuw nsw i64 %501, 4
  %526 = icmp eq i64 %525, 32
  br i1 %526, label %527, label %500, !llvm.loop !412

527:                                              ; preds = %500, %473
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void (i8*, i32, i16*)* @cfl_get_luma_subsampling_444_lbd_c(i8 zeroext) local_unnamed_addr #3 {
  %2 = zext i8 %0 to i64
  %3 = getelementptr inbounds [19 x void (i8*, i32, i16*)*], [19 x void (i8*, i32, i16*)*]* @cfl_get_luma_subsampling_444_lbd_c.subfn_444, i64 0, i64 %2
  %4 = load void (i8*, i32, i16*)*, void (i8*, i32, i16*)** %3, align 8
  ret void (i8*, i32, i16*)* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cfl_store_tx(%struct.macroblockd*, i32, i32, i8 zeroext, i8 zeroext) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 0, i32 3, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 0, i32 3, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = mul nsw i32 %9, %1
  %11 = add nsw i32 %10, %2
  %12 = shl i32 %11, 2
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i8, i8* %7, i64 %13
  %15 = zext i8 %4 to i64
  %16 = lshr i64 131077, %15
  %17 = and i64 %16, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %5
  %20 = lshr i64 65539, %15
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %46, label %23

23:                                               ; preds = %19, %5
  %24 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0
  %25 = load i32, i32* %24, align 16
  %26 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %25, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 9
  %32 = load i32, i32* %31, align 4
  %33 = icmp ne i32 %32, 0
  %34 = zext i1 %33 to i32
  %35 = add nsw i32 %34, %1
  br label %36

36:                                               ; preds = %30, %23
  %37 = phi i32 [ %1, %23 ], [ %35, %30 ]
  %38 = and i32 %27, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 8
  %42 = load i32, i32* %41, align 4
  %43 = icmp ne i32 %42, 0
  %44 = zext i1 %43 to i32
  %45 = add nsw i32 %44, %2
  br label %46

46:                                               ; preds = %40, %36, %19
  %47 = phi i32 [ %1, %19 ], [ %37, %36 ], [ %37, %40 ]
  %48 = phi i32 [ %2, %19 ], [ %2, %36 ], [ %45, %40 ]
  %49 = zext i8 %3 to i64
  %50 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_wide, i64 0, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_high, i64 0, i64 %49
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 8
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 9
  %57 = load i32, i32* %56, align 4
  %58 = sub nsw i32 2, %57
  %59 = shl i32 %47, %58
  %60 = sub nsw i32 2, %55
  %61 = shl i32 %48, %60
  %62 = ashr i32 %53, %57
  %63 = ashr i32 %51, %55
  %64 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 7
  store i32 0, i32* %64, align 4
  %65 = or i32 %48, %47
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %46
  %68 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 6
  store i32 %63, i32* %68, align 4
  %69 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 5
  store i32 %62, i32* %69, align 4
  br label %81

70:                                               ; preds = %46
  %71 = add nsw i32 %61, %63
  %72 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 6
  %73 = load i32, i32* %72, align 4
  %74 = icmp sgt i32 %71, %73
  %75 = select i1 %74, i32 %71, i32 %73
  store i32 %75, i32* %72, align 4
  %76 = add nsw i32 %59, %62
  %77 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 5
  %78 = load i32, i32* %77, align 4
  %79 = icmp sgt i32 %76, %78
  %80 = select i1 %79, i32 %76, i32 %78
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %70, %67
  %82 = shl i32 %59, 5
  %83 = add nsw i32 %82, %61
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 0, i64 %84
  %86 = icmp eq i32 %55, 1
  br i1 %86, label %87, label %95

87:                                               ; preds = %81
  %88 = icmp eq i32 %57, 1
  br i1 %88, label %89, label %92

89:                                               ; preds = %87
  %90 = load void (i8*, i32, i16*)* (i8)*, void (i8*, i32, i16*)* (i8)** @cfl_get_luma_subsampling_420_lbd, align 8
  %91 = tail call void (i8*, i32, i16*)* %90(i8 zeroext %3) #4
  br label %98

92:                                               ; preds = %87
  %93 = load void (i8*, i32, i16*)* (i8)*, void (i8*, i32, i16*)* (i8)** @cfl_get_luma_subsampling_422_lbd, align 8
  %94 = tail call void (i8*, i32, i16*)* %93(i8 zeroext %3) #4
  br label %98

95:                                               ; preds = %81
  %96 = load void (i8*, i32, i16*)* (i8)*, void (i8*, i32, i16*)* (i8)** @cfl_get_luma_subsampling_444_lbd, align 8
  %97 = tail call void (i8*, i32, i16*)* %96(i8 zeroext %3) #4
  br label %98

98:                                               ; preds = %89, %92, %95
  %99 = phi void (i8*, i32, i16*)* [ %91, %89 ], [ %94, %92 ], [ %97, %95 ]
  tail call void %99(i8* %14, i32 %9, i16* %85) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cfl_store_block(%struct.macroblockd*, i8 zeroext, i8 zeroext) local_unnamed_addr #0 {
  %4 = zext i8 %1 to i64
  %5 = lshr i64 131077, %4
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  %9 = lshr i64 65539, %4
  %10 = and i64 %9, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %33, label %12

12:                                               ; preds = %8, %3
  %13 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 16
  %15 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %14, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 9
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %21, 0
  %23 = zext i1 %22 to i32
  br label %24

24:                                               ; preds = %19, %12
  %25 = phi i32 [ 0, %12 ], [ %23, %19 ]
  %26 = and i32 %16, 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 8
  %30 = load i32, i32* %29, align 4
  %31 = icmp ne i32 %30, 0
  %32 = zext i1 %31 to i32
  br label %33

33:                                               ; preds = %28, %24, %8
  %34 = phi i32 [ 0, %8 ], [ %25, %24 ], [ %25, %28 ]
  %35 = phi i32 [ 0, %8 ], [ 0, %24 ], [ %32, %28 ]
  %36 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %4
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 18
  %40 = load i32, i32* %39, align 8
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %42, label %48

42:                                               ; preds = %33
  %43 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = add nsw i32 %44, 3
  %46 = ashr i32 %40, %45
  %47 = add nsw i32 %46, %38
  br label %48

48:                                               ; preds = %33, %42
  %49 = phi i32 [ %47, %42 ], [ %38, %33 ]
  %50 = and i32 %49, -4
  %51 = zext i8 %2 to i64
  %52 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_wide_log2, i64 0, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = shl nsw i32 -1, %53
  %55 = xor i32 %54, -1
  %56 = add nsw i32 %50, %55
  %57 = and i32 %56, %54
  %58 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_high, i64 0, i64 %4
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 20
  %62 = load i32, i32* %61, align 16
  %63 = icmp slt i32 %62, 0
  br i1 %63, label %64, label %70

64:                                               ; preds = %48
  %65 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 0, i32 2
  %66 = load i32, i32* %65, align 8
  %67 = add nsw i32 %66, 3
  %68 = ashr i32 %62, %67
  %69 = add nsw i32 %68, %60
  br label %70

70:                                               ; preds = %48, %64
  %71 = phi i32 [ %69, %64 ], [ %60, %48 ]
  %72 = and i32 %71, -4
  %73 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_high_log2, i64 0, i64 %51
  %74 = load i32, i32* %73, align 4
  %75 = shl nsw i32 -1, %74
  %76 = xor i32 %75, -1
  %77 = add nsw i32 %72, %76
  %78 = and i32 %77, %75
  %79 = icmp eq i32 %57, %78
  br i1 %79, label %80, label %85

80:                                               ; preds = %70
  switch i32 %57, label %84 [
    i32 128, label %122
    i32 64, label %122
    i32 32, label %81
    i32 16, label %82
    i32 8, label %83
  ]

81:                                               ; preds = %80
  br label %122

82:                                               ; preds = %80
  br label %122

83:                                               ; preds = %80
  br label %122

84:                                               ; preds = %80
  br label %122

85:                                               ; preds = %70
  %86 = icmp slt i32 %57, %78
  br i1 %86, label %87, label %99

87:                                               ; preds = %85
  %88 = shl nsw i32 %57, 1
  %89 = icmp eq i32 %88, %78
  br i1 %89, label %90, label %96

90:                                               ; preds = %87
  %91 = add i32 %57, -4
  %92 = lshr i32 %91, 2
  %93 = shl i32 %91, 30
  %94 = or i32 %92, %93
  %95 = icmp ult i32 %94, 8
  br i1 %95, label %112, label %111

96:                                               ; preds = %87
  switch i32 %57, label %111 [
    i32 4, label %122
    i32 8, label %97
    i32 16, label %98
  ]

97:                                               ; preds = %96
  br label %122

98:                                               ; preds = %96
  br label %122

99:                                               ; preds = %85
  %100 = shl nsw i32 %78, 1
  %101 = icmp eq i32 %100, %57
  br i1 %101, label %102, label %108

102:                                              ; preds = %99
  %103 = add i32 %78, -4
  %104 = lshr i32 %103, 2
  %105 = shl i32 %103, 30
  %106 = or i32 %104, %105
  %107 = icmp ult i32 %106, 8
  br i1 %107, label %117, label %111

108:                                              ; preds = %99
  switch i32 %78, label %111 [
    i32 4, label %122
    i32 8, label %109
    i32 16, label %110
  ]

109:                                              ; preds = %108
  br label %122

110:                                              ; preds = %108
  br label %122

111:                                              ; preds = %102, %90, %108, %96
  br label %122

112:                                              ; preds = %90
  %113 = zext i32 %94 to i64
  %114 = shl nuw nsw i64 %113, 3
  %115 = lshr i64 792633534568204037, %114
  %116 = trunc i64 %115 to i8
  br label %122

117:                                              ; preds = %102
  %118 = zext i32 %106 to i64
  %119 = shl nuw nsw i64 %118, 3
  %120 = lshr i64 864691128622909446, %119
  %121 = trunc i64 %120 to i8
  br label %122

122:                                              ; preds = %117, %112, %80, %80, %81, %82, %83, %84, %96, %97, %98, %108, %109, %110, %111
  %123 = phi i8 [ 0, %111 ], [ 17, %98 ], [ 15, %97 ], [ 18, %110 ], [ 16, %109 ], [ 13, %96 ], [ 14, %108 ], [ 0, %84 ], [ 1, %83 ], [ 2, %82 ], [ 3, %81 ], [ 4, %80 ], [ 4, %80 ], [ %116, %112 ], [ %121, %117 ]
  %124 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 0, i32 3, i32 0
  %125 = load i8*, i8** %124, align 8
  %126 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 0, i32 3, i32 4
  %127 = load i32, i32* %126, align 8
  %128 = zext i8 %123 to i64
  %129 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_wide, i64 0, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_high, i64 0, i64 %128
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 8
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 9
  %136 = load i32, i32* %135, align 4
  %137 = sub nsw i32 2, %136
  %138 = shl i32 %34, %137
  %139 = sub nsw i32 2, %134
  %140 = shl i32 %35, %139
  %141 = ashr i32 %132, %136
  %142 = ashr i32 %130, %134
  %143 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 7
  store i32 0, i32* %143, align 4
  %144 = or i32 %35, %34
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %149

146:                                              ; preds = %122
  %147 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 6
  store i32 %142, i32* %147, align 4
  %148 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 5
  store i32 %141, i32* %148, align 4
  br label %160

149:                                              ; preds = %122
  %150 = add nsw i32 %140, %142
  %151 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 6
  %152 = load i32, i32* %151, align 4
  %153 = icmp sgt i32 %150, %152
  %154 = select i1 %153, i32 %150, i32 %152
  store i32 %154, i32* %151, align 4
  %155 = add nsw i32 %138, %141
  %156 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 5
  %157 = load i32, i32* %156, align 4
  %158 = icmp sgt i32 %155, %157
  %159 = select i1 %158, i32 %155, i32 %157
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %149, %146
  %161 = shl i32 %138, 5
  %162 = add nsw i32 %161, %140
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 51, i32 0, i64 %163
  %165 = icmp eq i32 %134, 1
  br i1 %165, label %166, label %174

166:                                              ; preds = %160
  %167 = icmp eq i32 %136, 1
  br i1 %167, label %168, label %171

168:                                              ; preds = %166
  %169 = load void (i8*, i32, i16*)* (i8)*, void (i8*, i32, i16*)* (i8)** @cfl_get_luma_subsampling_420_lbd, align 8
  %170 = tail call void (i8*, i32, i16*)* %169(i8 zeroext %123) #4
  br label %177

171:                                              ; preds = %166
  %172 = load void (i8*, i32, i16*)* (i8)*, void (i8*, i32, i16*)* (i8)** @cfl_get_luma_subsampling_422_lbd, align 8
  %173 = tail call void (i8*, i32, i16*)* %172(i8 zeroext %123) #4
  br label %177

174:                                              ; preds = %160
  %175 = load void (i8*, i32, i16*)* (i8)*, void (i8*, i32, i16*)* (i8)** @cfl_get_luma_subsampling_444_lbd, align 8
  %176 = tail call void (i8*, i32, i16*)* %175(i8 zeroext %123) #4
  br label %177

177:                                              ; preds = %168, %171, %174
  %178 = phi void (i8*, i32, i16*)* [ %170, %168 ], [ %173, %171 ], [ %176, %174 ]
  tail call void %178(i8* %125, i32 %127, i16* %164) #4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = !{!8}
!8 = distinct !{!8, !9}
!9 = distinct !{!9, !"LVerDomain"}
!10 = !{!11}
!11 = distinct !{!11, !9}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.isvectorized", i32 1}
!14 = distinct !{!14, !13}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !13}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !13}
!27 = !{!28}
!28 = distinct !{!28, !29}
!29 = distinct !{!29, !"LVerDomain"}
!30 = !{!31}
!31 = distinct !{!31, !29}
!32 = distinct !{!32, !13}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = distinct !{!38, !13}
!39 = !{!40}
!40 = distinct !{!40, !41}
!41 = distinct !{!41, !"LVerDomain"}
!42 = !{!43}
!43 = distinct !{!43, !41}
!44 = distinct !{!44, !13}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !13}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = !{!57}
!57 = distinct !{!57, !58}
!58 = distinct !{!58, !"LVerDomain"}
!59 = !{!60}
!60 = distinct !{!60, !58}
!61 = distinct !{!61, !13}
!62 = distinct !{!62, !13}
!63 = !{!64}
!64 = distinct !{!64, !65}
!65 = distinct !{!65, !"LVerDomain"}
!66 = !{!67}
!67 = distinct !{!67, !65}
!68 = distinct !{!68, !13}
!69 = !{!70}
!70 = distinct !{!70, !71}
!71 = distinct !{!71, !"LVerDomain"}
!72 = !{!73}
!73 = distinct !{!73, !71}
!74 = distinct !{!74, !13}
!75 = !{!76}
!76 = distinct !{!76, !77}
!77 = distinct !{!77, !"LVerDomain"}
!78 = !{!79}
!79 = distinct !{!79, !77}
!80 = distinct !{!80, !13}
!81 = !{!82}
!82 = distinct !{!82, !83}
!83 = distinct !{!83, !"LVerDomain"}
!84 = !{!85}
!85 = distinct !{!85, !83}
!86 = distinct !{!86, !13}
!87 = !{!88}
!88 = distinct !{!88, !89}
!89 = distinct !{!89, !"LVerDomain"}
!90 = !{!91}
!91 = distinct !{!91, !89}
!92 = distinct !{!92, !13}
!93 = !{!94}
!94 = distinct !{!94, !95}
!95 = distinct !{!95, !"LVerDomain"}
!96 = !{!97}
!97 = distinct !{!97, !95}
!98 = distinct !{!98, !13}
!99 = !{!100}
!100 = distinct !{!100, !101}
!101 = distinct !{!101, !"LVerDomain"}
!102 = !{!103}
!103 = distinct !{!103, !101}
!104 = distinct !{!104, !13}
!105 = !{!106}
!106 = distinct !{!106, !107}
!107 = distinct !{!107, !"LVerDomain"}
!108 = !{!109}
!109 = distinct !{!109, !107}
!110 = distinct !{!110, !13}
!111 = !{!112}
!112 = distinct !{!112, !113}
!113 = distinct !{!113, !"LVerDomain"}
!114 = !{!115}
!115 = distinct !{!115, !113}
!116 = distinct !{!116, !13}
!117 = !{!118}
!118 = distinct !{!118, !119}
!119 = distinct !{!119, !"LVerDomain"}
!120 = !{!121}
!121 = distinct !{!121, !119}
!122 = distinct !{!122, !13}
!123 = !{!124}
!124 = distinct !{!124, !125}
!125 = distinct !{!125, !"LVerDomain"}
!126 = !{!127}
!127 = distinct !{!127, !125}
!128 = distinct !{!128, !13}
!129 = !{!130}
!130 = distinct !{!130, !131}
!131 = distinct !{!131, !"LVerDomain"}
!132 = !{!133}
!133 = distinct !{!133, !131}
!134 = distinct !{!134, !13}
!135 = !{!136}
!136 = distinct !{!136, !137}
!137 = distinct !{!137, !"LVerDomain"}
!138 = !{!139}
!139 = distinct !{!139, !137}
!140 = distinct !{!140, !13}
!141 = !{!142}
!142 = distinct !{!142, !143}
!143 = distinct !{!143, !"LVerDomain"}
!144 = !{!145}
!145 = distinct !{!145, !143}
!146 = distinct !{!146, !13}
!147 = !{!148}
!148 = distinct !{!148, !149}
!149 = distinct !{!149, !"LVerDomain"}
!150 = !{!151}
!151 = distinct !{!151, !149}
!152 = distinct !{!152, !13}
!153 = !{!154}
!154 = distinct !{!154, !155}
!155 = distinct !{!155, !"LVerDomain"}
!156 = !{!157}
!157 = distinct !{!157, !155}
!158 = !{!159}
!159 = distinct !{!159, !160}
!160 = distinct !{!160, !"LVerDomain"}
!161 = !{!162}
!162 = distinct !{!162, !160}
!163 = distinct !{!163, !13}
!164 = distinct !{!164, !13}
!165 = !{!166}
!166 = distinct !{!166, !167}
!167 = distinct !{!167, !"LVerDomain"}
!168 = !{!169}
!169 = distinct !{!169, !167}
!170 = distinct !{!170, !13}
!171 = !{!172}
!172 = distinct !{!172, !173}
!173 = distinct !{!173, !"LVerDomain"}
!174 = !{!175}
!175 = distinct !{!175, !173}
!176 = distinct !{!176, !13}
!177 = !{!178}
!178 = distinct !{!178, !179}
!179 = distinct !{!179, !"LVerDomain"}
!180 = !{!181}
!181 = distinct !{!181, !179}
!182 = distinct !{!182, !13}
!183 = !{!184}
!184 = distinct !{!184, !185}
!185 = distinct !{!185, !"LVerDomain"}
!186 = !{!187}
!187 = distinct !{!187, !185}
!188 = distinct !{!188, !13}
!189 = !{!190}
!190 = distinct !{!190, !191}
!191 = distinct !{!191, !"LVerDomain"}
!192 = !{!193}
!193 = distinct !{!193, !191}
!194 = distinct !{!194, !13}
!195 = !{!196}
!196 = distinct !{!196, !197}
!197 = distinct !{!197, !"LVerDomain"}
!198 = !{!199}
!199 = distinct !{!199, !197}
!200 = distinct !{!200, !13}
!201 = !{!202}
!202 = distinct !{!202, !203}
!203 = distinct !{!203, !"LVerDomain"}
!204 = !{!205}
!205 = distinct !{!205, !203}
!206 = distinct !{!206, !13}
!207 = !{!208}
!208 = distinct !{!208, !209}
!209 = distinct !{!209, !"LVerDomain"}
!210 = !{!211}
!211 = distinct !{!211, !209}
!212 = distinct !{!212, !13}
!213 = distinct !{!213, !13}
!214 = distinct !{!214, !215}
!215 = !{!"llvm.loop.unroll.disable"}
!216 = distinct !{!216, !217, !13}
!217 = !{!"llvm.loop.unroll.runtime.disable"}
!218 = distinct !{!218, !13}
!219 = distinct !{!219, !215}
!220 = distinct !{!220, !217, !13}
!221 = !{!222}
!222 = distinct !{!222, !223}
!223 = distinct !{!223, !"LVerDomain"}
!224 = !{!225, !226}
!225 = distinct !{!225, !223}
!226 = distinct !{!226, !223}
!227 = distinct !{!227, !13}
!228 = !{!229}
!229 = distinct !{!229, !230}
!230 = distinct !{!230, !"LVerDomain"}
!231 = !{!232, !233}
!232 = distinct !{!232, !230}
!233 = distinct !{!233, !230}
!234 = distinct !{!234, !13}
!235 = !{!236}
!236 = distinct !{!236, !237}
!237 = distinct !{!237, !"LVerDomain"}
!238 = !{!239, !240}
!239 = distinct !{!239, !237}
!240 = distinct !{!240, !237}
!241 = !{!242}
!242 = distinct !{!242, !243}
!243 = distinct !{!243, !"LVerDomain"}
!244 = !{!245, !246}
!245 = distinct !{!245, !243}
!246 = distinct !{!246, !243}
!247 = distinct !{!247, !13}
!248 = distinct !{!248, !13}
!249 = !{!250}
!250 = distinct !{!250, !251}
!251 = distinct !{!251, !"LVerDomain"}
!252 = !{!253, !254}
!253 = distinct !{!253, !251}
!254 = distinct !{!254, !251}
!255 = distinct !{!255, !13}
!256 = !{!257}
!257 = distinct !{!257, !258}
!258 = distinct !{!258, !"LVerDomain"}
!259 = !{!260, !261}
!260 = distinct !{!260, !258}
!261 = distinct !{!261, !258}
!262 = distinct !{!262, !13}
!263 = !{!264}
!264 = distinct !{!264, !265}
!265 = distinct !{!265, !"LVerDomain"}
!266 = !{!267}
!267 = distinct !{!267, !265}
!268 = distinct !{!268, !13}
!269 = !{!270}
!270 = distinct !{!270, !271}
!271 = distinct !{!271, !"LVerDomain"}
!272 = !{!273}
!273 = distinct !{!273, !271}
!274 = !{!275}
!275 = distinct !{!275, !276}
!276 = distinct !{!276, !"LVerDomain"}
!277 = !{!278}
!278 = distinct !{!278, !276}
!279 = distinct !{!279, !13}
!280 = distinct !{!280, !13}
!281 = !{!282}
!282 = distinct !{!282, !283}
!283 = distinct !{!283, !"LVerDomain"}
!284 = !{!285}
!285 = distinct !{!285, !283}
!286 = distinct !{!286, !13}
!287 = !{!288}
!288 = distinct !{!288, !289}
!289 = distinct !{!289, !"LVerDomain"}
!290 = !{!291}
!291 = distinct !{!291, !289}
!292 = distinct !{!292, !13}
!293 = !{!294}
!294 = distinct !{!294, !295}
!295 = distinct !{!295, !"LVerDomain"}
!296 = !{!297}
!297 = distinct !{!297, !295}
!298 = distinct !{!298, !13}
!299 = !{!300}
!300 = distinct !{!300, !301}
!301 = distinct !{!301, !"LVerDomain"}
!302 = !{!303}
!303 = distinct !{!303, !301}
!304 = distinct !{!304, !13}
!305 = !{!306}
!306 = distinct !{!306, !307}
!307 = distinct !{!307, !"LVerDomain"}
!308 = !{!309}
!309 = distinct !{!309, !307}
!310 = distinct !{!310, !13}
!311 = !{!312}
!312 = distinct !{!312, !313}
!313 = distinct !{!313, !"LVerDomain"}
!314 = !{!315}
!315 = distinct !{!315, !313}
!316 = distinct !{!316, !13}
!317 = !{!318}
!318 = distinct !{!318, !319}
!319 = distinct !{!319, !"LVerDomain"}
!320 = !{!321}
!321 = distinct !{!321, !319}
!322 = distinct !{!322, !13}
!323 = !{!324}
!324 = distinct !{!324, !325}
!325 = distinct !{!325, !"LVerDomain"}
!326 = !{!327}
!327 = distinct !{!327, !325}
!328 = distinct !{!328, !13}
!329 = !{!330}
!330 = distinct !{!330, !331}
!331 = distinct !{!331, !"LVerDomain"}
!332 = !{!333}
!333 = distinct !{!333, !331}
!334 = distinct !{!334, !13}
!335 = !{!336}
!336 = distinct !{!336, !337}
!337 = distinct !{!337, !"LVerDomain"}
!338 = !{!339}
!339 = distinct !{!339, !337}
!340 = distinct !{!340, !13}
!341 = !{!342}
!342 = distinct !{!342, !343}
!343 = distinct !{!343, !"LVerDomain"}
!344 = !{!345}
!345 = distinct !{!345, !343}
!346 = distinct !{!346, !13}
!347 = !{!348}
!348 = distinct !{!348, !349}
!349 = distinct !{!349, !"LVerDomain"}
!350 = !{!351}
!351 = distinct !{!351, !349}
!352 = distinct !{!352, !13}
!353 = !{!354}
!354 = distinct !{!354, !355}
!355 = distinct !{!355, !"LVerDomain"}
!356 = !{!357}
!357 = distinct !{!357, !355}
!358 = distinct !{!358, !13}
!359 = !{!360}
!360 = distinct !{!360, !361}
!361 = distinct !{!361, !"LVerDomain"}
!362 = !{!363}
!363 = distinct !{!363, !361}
!364 = distinct !{!364, !13}
!365 = !{!366}
!366 = distinct !{!366, !367}
!367 = distinct !{!367, !"LVerDomain"}
!368 = !{!369}
!369 = distinct !{!369, !367}
!370 = !{!371}
!371 = distinct !{!371, !372}
!372 = distinct !{!372, !"LVerDomain"}
!373 = !{!374}
!374 = distinct !{!374, !372}
!375 = distinct !{!375, !13}
!376 = distinct !{!376, !13}
!377 = !{!378}
!378 = distinct !{!378, !379}
!379 = distinct !{!379, !"LVerDomain"}
!380 = !{!381}
!381 = distinct !{!381, !379}
!382 = distinct !{!382, !13}
!383 = !{!384}
!384 = distinct !{!384, !385}
!385 = distinct !{!385, !"LVerDomain"}
!386 = !{!387}
!387 = distinct !{!387, !385}
!388 = distinct !{!388, !13}
!389 = !{!390}
!390 = distinct !{!390, !391}
!391 = distinct !{!391, !"LVerDomain"}
!392 = !{!393}
!393 = distinct !{!393, !391}
!394 = distinct !{!394, !13}
!395 = !{!396}
!396 = distinct !{!396, !397}
!397 = distinct !{!397, !"LVerDomain"}
!398 = !{!399}
!399 = distinct !{!399, !397}
!400 = distinct !{!400, !13}
!401 = !{!402}
!402 = distinct !{!402, !403}
!403 = distinct !{!403, !"LVerDomain"}
!404 = !{!405}
!405 = distinct !{!405, !403}
!406 = distinct !{!406, !13}
!407 = !{!408}
!408 = distinct !{!408, !409}
!409 = distinct !{!409, !"LVerDomain"}
!410 = !{!411}
!411 = distinct !{!411, !409}
!412 = distinct !{!412, !13}
