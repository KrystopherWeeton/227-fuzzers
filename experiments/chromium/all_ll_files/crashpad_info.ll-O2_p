; ModuleID = '../../third_party/crashpad/crashpad/client/crashpad_info.cc'
source_filename = "../../third_party/crashpad/crashpad/client/crashpad_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.crashpad::CrashpadInfo" = type { i32, i32, i32, i32, i32, i8, i8, i8, i8, %"class.crashpad::TSimpleAddressRangeBag"*, %"class.crashpad::TSimpleStringDictionary"*, %"struct.crashpad::internal::UserDataMinidumpStreamListEntry"*, %"class.crashpad::AnnotationList"* }
%"class.crashpad::TSimpleAddressRangeBag" = type { [64 x %"struct.crashpad::TSimpleAddressRangeBag<64>::Entry"] }
%"struct.crashpad::TSimpleAddressRangeBag<64>::Entry" = type { i64, i64 }
%"class.crashpad::TSimpleStringDictionary" = type { [64 x %"struct.crashpad::TSimpleStringDictionary<256, 256, 64>::Entry"] }
%"struct.crashpad::TSimpleStringDictionary<256, 256, 64>::Entry" = type { [256 x i8], [256 x i8] }
%"struct.crashpad::internal::UserDataMinidumpStreamListEntry" = type { i64, i64, i64, i32 }
%"class.crashpad::AnnotationList" = type { %"class.crashpad::Annotation"*, %"class.crashpad::Annotation", %"class.crashpad::Annotation" }
%"class.crashpad::Annotation" = type <{ %"struct.std::__1::atomic", i8*, i8*, i32, i16, [2 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.crashpad::Annotation"* }

@_ZN8crashpad15g_crashpad_infoE = hidden global %"struct.crashpad::CrashpadInfo" { i32 1129341284, i32 56, i32 1, i32 0, i32 0, i8 0, i8 0, i8 0, i8 0, %"class.crashpad::TSimpleAddressRangeBag"* null, %"class.crashpad::TSimpleStringDictionary"* null, %"struct.crashpad::internal::UserDataMinidumpStreamListEntry"* null, %"class.crashpad::AnnotationList"* null }, align 8
@_ZZN8crashpad12CrashpadInfo15GetCrashpadInfoEvE23pointer_to_note_section = internal unnamed_addr global i32* null, align 8
@_ZGVZN8crashpad12CrashpadInfo15GetCrashpadInfoEvE23pointer_to_note_section = internal global i64 0, align 8
@CRASHPAD_NOTE_REFERENCE = external local_unnamed_addr global i32*, align 8
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer
@llvm.used = appending global [1 x i8*] [i8* bitcast (%"struct.crashpad::CrashpadInfo"* @_ZN8crashpad15g_crashpad_infoE to i8*)], section "llvm.metadata"

@_ZN8crashpad12CrashpadInfoC1Ev = hidden unnamed_addr alias void (%"struct.crashpad::CrashpadInfo"*), void (%"struct.crashpad::CrashpadInfo"*)* @_ZN8crashpad12CrashpadInfoC2Ev

; Function Attrs: nofree nounwind ssp uwtable
define hidden nonnull %"struct.crashpad::CrashpadInfo"* @_ZN8crashpad12CrashpadInfo15GetCrashpadInfoEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN8crashpad12CrashpadInfo15GetCrashpadInfoEvE23pointer_to_note_section to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %8, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN8crashpad12CrashpadInfo15GetCrashpadInfoEvE23pointer_to_note_section) #6
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = load i64, i64* bitcast (i32** @CRASHPAD_NOTE_REFERENCE to i64*), align 8
  store i64 %7, i64* bitcast (i32** @_ZZN8crashpad12CrashpadInfo15GetCrashpadInfoEvE23pointer_to_note_section to i64*), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN8crashpad12CrashpadInfo15GetCrashpadInfoEvE23pointer_to_note_section) #6
  br label %8

8:                                                ; preds = %3, %6, %0
  ret %"struct.crashpad::CrashpadInfo"* @_ZN8crashpad15g_crashpad_infoE
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8crashpad12CrashpadInfoC2Ev(%"struct.crashpad::CrashpadInfo"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.crashpad::CrashpadInfo", %"struct.crashpad::CrashpadInfo"* %0, i64 0, i32 0
  store i32 1129341284, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.crashpad::CrashpadInfo", %"struct.crashpad::CrashpadInfo"* %0, i64 0, i32 1
  store i32 56, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.crashpad::CrashpadInfo", %"struct.crashpad::CrashpadInfo"* %0, i64 0, i32 2
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.crashpad::CrashpadInfo", %"struct.crashpad::CrashpadInfo"* %0, i64 0, i32 3
  %6 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 44, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad12CrashpadInfo25AddUserDataMinidumpStreamEjPKvm(%"struct.crashpad::CrashpadInfo"* nocapture, i32, i8*, i64) local_unnamed_addr #3 align 2 {
  %5 = tail call i8* @_Znwm(i64 32) #7
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 32, i1 false)
  %6 = getelementptr inbounds %"struct.crashpad::CrashpadInfo", %"struct.crashpad::CrashpadInfo"* %0, i64 0, i32 11
  %7 = bitcast %"struct.crashpad::internal::UserDataMinidumpStreamListEntry"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast i8* %5 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 24
  %11 = bitcast i8* %10 to i32*
  store i32 %1, i32* %11, align 8
  %12 = ptrtoint i8* %2 to i64
  %13 = getelementptr inbounds i8, i8* %5, i64 8
  %14 = bitcast i8* %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %5, i64 16
  %16 = bitcast i8* %15 to i64*
  store i64 %3, i64* %16, align 8
  %17 = bitcast %"struct.crashpad::internal::UserDataMinidumpStreamListEntry"** %6 to i8**
  store i8* %5, i8** %17, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
