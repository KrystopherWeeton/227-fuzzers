; ModuleID = '../../third_party/boringssl/src/crypto/bytestring/cbs.c'
source_filename = "../../third_party/boringssl/src/crypto/bytestring/cbs.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.cbs_st = type { i8*, i64 }
%union.anon = type { i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }

@.str = private unnamed_addr constant [3 x i8] c"2.\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @CBS_init(%struct.cbs_st* nocapture, i8*, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  store i64 %2, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_skip(%struct.cbs_st* nocapture, i64) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, %1
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 %1
  store i8* %9, i8** %7, align 8
  %10 = sub i64 %4, %1
  store i64 %10, i64* %3, align 8
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi i32 [ 1, %6 ], [ 0, %2 ]
  ret i32 %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @CBS_data(%struct.cbs_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @CBS_len(%struct.cbs_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_stow(%struct.cbs_st* nocapture readonly, i8** nocapture, i64* nocapture) local_unnamed_addr #1 {
  %4 = load i8*, i8** %1, align 8
  tail call void @OPENSSL_free(i8* %4) #11
  store i8* null, i8** %1, align 8
  store i64 0, i64* %2, align 8
  %5 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = tail call i8* @OPENSSL_memdup(i8* %10, i64 %6) #11
  store i8* %11, i8** %1, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %8
  %14 = load i64, i64* %5, align 8
  store i64 %14, i64* %2, align 8
  br label %15

15:                                               ; preds = %8, %3, %13
  %16 = phi i32 [ 1, %13 ], [ 1, %3 ], [ 0, %8 ]
  ret i32 %16
}

declare void @OPENSSL_free(i8*) local_unnamed_addr #4

declare i8* @OPENSSL_memdup(i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_strdup(%struct.cbs_st* nocapture readonly, i8** nocapture) local_unnamed_addr #1 {
  %3 = load i8*, i8** %1, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %2
  tail call void @OPENSSL_free(i8* nonnull %3) #11
  br label %6

6:                                                ; preds = %2, %5
  %7 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = tail call i8* @OPENSSL_strndup(i8* %8, i64 %10) #11
  store i8* %11, i8** %1, align 8
  %12 = icmp ne i8* %11, null
  %13 = zext i1 %12 to i32
  ret i32 %13
}

declare i8* @OPENSSL_strndup(i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @CBS_contains_zero_byte(%struct.cbs_st* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = tail call i8* @memchr(i8* %7, i32 0, i64 %3) #12
  %9 = icmp ne i8* %8, null
  %10 = zext i1 %9 to i32
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i32 [ %10, %5 ], [ 0, %1 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_mem_equal(%struct.cbs_st* nocapture readonly, i8*, i64) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %2
  br i1 %6, label %7, label %13

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @CRYPTO_memcmp(i8* %9, i8* %1, i64 %2) #11
  %11 = icmp eq i32 %10, 0
  %12 = zext i1 %11 to i32
  br label %13

13:                                               ; preds = %3, %7
  %14 = phi i32 [ %12, %7 ], [ 0, %3 ]
  ret i32 %14
}

declare i32 @CRYPTO_memcmp(i8*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_get_u8(%struct.cbs_st* nocapture, i8* nocapture) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 1
  store i8* %9, i8** %7, align 8
  %10 = add i64 %4, -1
  store i64 %10, i64* %3, align 8
  %11 = load i8, i8* %8, align 1
  store i8 %11, i8* %1, align 1
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi i32 [ 1, %6 ], [ 0, %2 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_get_u16(%struct.cbs_st* nocapture, i16* nocapture) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 2
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 2
  store i8* %9, i8** %7, align 8
  %10 = add i64 %4, -2
  store i64 %10, i64* %3, align 8
  %11 = load i8, i8* %8, align 1
  %12 = zext i8 %11 to i16
  %13 = shl nuw i16 %12, 8
  %14 = getelementptr inbounds i8, i8* %8, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i16
  %17 = or i16 %13, %16
  store i16 %17, i16* %1, align 2
  br label %18

18:                                               ; preds = %2, %6
  %19 = phi i32 [ 1, %6 ], [ 0, %2 ]
  ret i32 %19
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @CBS_get_u16le(%struct.cbs_st* nocapture, i16* nocapture) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 2
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 2
  store i8* %9, i8** %7, align 8
  %10 = add i64 %4, -2
  store i64 %10, i64* %3, align 8
  %11 = load i8, i8* %8, align 1
  %12 = zext i8 %11 to i16
  %13 = shl nuw i16 %12, 8
  %14 = getelementptr inbounds i8, i8* %8, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i16
  %17 = or i16 %13, %16
  %18 = tail call i16 @llvm.bswap.i16(i16 %17) #11
  store i16 %18, i16* %1, align 2
  br label %19

19:                                               ; preds = %2, %6
  %20 = phi i32 [ 1, %6 ], [ 0, %2 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_get_u24(%struct.cbs_st* nocapture, i32* nocapture) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 3
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 3
  store i8* %9, i8** %7, align 8
  %10 = add i64 %4, -3
  store i64 %10, i64* %3, align 8
  %11 = load i8, i8* %8, align 1
  %12 = zext i8 %11 to i32
  %13 = shl nuw nsw i32 %12, 8
  %14 = getelementptr inbounds i8, i8* %8, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = or i32 %13, %16
  %18 = shl nuw nsw i32 %17, 8
  %19 = getelementptr inbounds i8, i8* %8, i64 2
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = or i32 %18, %21
  store i32 %22, i32* %1, align 4
  br label %23

23:                                               ; preds = %2, %6
  %24 = phi i32 [ 1, %6 ], [ 0, %2 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_get_u32(%struct.cbs_st* nocapture, i32* nocapture) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  br i1 %5, label %28, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 4
  store i8* %9, i8** %7, align 8
  %10 = add i64 %4, -4
  store i64 %10, i64* %3, align 8
  %11 = load i8, i8* %8, align 1
  %12 = zext i8 %11 to i32
  %13 = shl nuw nsw i32 %12, 8
  %14 = getelementptr inbounds i8, i8* %8, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = or i32 %13, %16
  %18 = shl nuw nsw i32 %17, 8
  %19 = getelementptr inbounds i8, i8* %8, i64 2
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = or i32 %18, %21
  %23 = shl nuw i32 %22, 8
  %24 = getelementptr inbounds i8, i8* %8, i64 3
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = or i32 %23, %26
  store i32 %27, i32* %1, align 4
  br label %28

28:                                               ; preds = %2, %6
  %29 = phi i32 [ 1, %6 ], [ 0, %2 ]
  ret i32 %29
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @CBS_get_u32le(%struct.cbs_st* nocapture, i32* nocapture) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 4
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 4
  store i8* %9, i8** %7, align 8
  %10 = add i64 %4, -4
  store i64 %10, i64* %3, align 8
  %11 = load i8, i8* %8, align 1
  %12 = zext i8 %11 to i32
  %13 = shl nuw nsw i32 %12, 8
  %14 = getelementptr inbounds i8, i8* %8, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = or i32 %13, %16
  %18 = shl nuw nsw i32 %17, 8
  %19 = getelementptr inbounds i8, i8* %8, i64 2
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = or i32 %18, %21
  %23 = shl nuw i32 %22, 8
  %24 = getelementptr inbounds i8, i8* %8, i64 3
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = or i32 %23, %26
  %28 = tail call i32 @llvm.bswap.i32(i32 %27) #11
  store i32 %28, i32* %1, align 4
  br label %29

29:                                               ; preds = %2, %6
  %30 = phi i32 [ 1, %6 ], [ 0, %2 ]
  ret i32 %30
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @CBS_get_u64(%struct.cbs_st* nocapture, i64* nocapture) local_unnamed_addr #7 {
  %3 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 8
  br i1 %5, label %48, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  store i8* %9, i8** %7, align 8
  %10 = add i64 %4, -8
  store i64 %10, i64* %3, align 8
  %11 = load i8, i8* %8, align 1
  %12 = zext i8 %11 to i64
  %13 = shl nuw nsw i64 %12, 8
  %14 = getelementptr inbounds i8, i8* %8, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i64
  %17 = or i64 %13, %16
  %18 = shl nuw nsw i64 %17, 8
  %19 = getelementptr inbounds i8, i8* %8, i64 2
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i64
  %22 = or i64 %18, %21
  %23 = shl nuw nsw i64 %22, 8
  %24 = getelementptr inbounds i8, i8* %8, i64 3
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i64
  %27 = or i64 %23, %26
  %28 = shl i64 %27, 8
  %29 = getelementptr inbounds i8, i8* %8, i64 4
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = or i64 %28, %31
  %33 = shl i64 %32, 8
  %34 = getelementptr inbounds i8, i8* %8, i64 5
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i64
  %37 = or i64 %33, %36
  %38 = shl i64 %37, 8
  %39 = getelementptr inbounds i8, i8* %8, i64 6
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i64
  %42 = or i64 %38, %41
  %43 = shl i64 %42, 8
  %44 = getelementptr inbounds i8, i8* %8, i64 7
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i64
  %47 = or i64 %43, %46
  store i64 %47, i64* %1, align 8
  br label %48

48:                                               ; preds = %2, %6
  %49 = phi i32 [ 1, %6 ], [ 0, %2 ]
  ret i32 %49
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @CBS_get_u64le(%struct.cbs_st* nocapture, i64* nocapture) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 8
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  store i8* %9, i8** %7, align 8
  %10 = add i64 %4, -8
  store i64 %10, i64* %3, align 8
  %11 = load i8, i8* %8, align 1
  %12 = zext i8 %11 to i64
  %13 = shl nuw nsw i64 %12, 8
  %14 = getelementptr inbounds i8, i8* %8, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i64
  %17 = or i64 %13, %16
  %18 = shl nuw nsw i64 %17, 8
  %19 = getelementptr inbounds i8, i8* %8, i64 2
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i64
  %22 = or i64 %18, %21
  %23 = shl nuw nsw i64 %22, 8
  %24 = getelementptr inbounds i8, i8* %8, i64 3
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i64
  %27 = or i64 %23, %26
  %28 = shl i64 %27, 8
  %29 = getelementptr inbounds i8, i8* %8, i64 4
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = or i64 %28, %31
  %33 = shl i64 %32, 8
  %34 = getelementptr inbounds i8, i8* %8, i64 5
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i64
  %37 = or i64 %33, %36
  %38 = shl i64 %37, 8
  %39 = getelementptr inbounds i8, i8* %8, i64 6
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i64
  %42 = or i64 %38, %41
  %43 = shl i64 %42, 8
  %44 = getelementptr inbounds i8, i8* %8, i64 7
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i64
  %47 = or i64 %43, %46
  %48 = tail call i64 @llvm.bswap.i64(i64 %47) #11
  store i64 %48, i64* %1, align 8
  br label %49

49:                                               ; preds = %2, %6
  %50 = phi i32 [ 1, %6 ], [ 0, %2 ]
  ret i32 %50
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @CBS_get_last_u8(%struct.cbs_st* nocapture, i8* nocapture) local_unnamed_addr #7 {
  %3 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = add i64 %4, -1
  %10 = getelementptr inbounds i8, i8* %8, i64 %9
  %11 = load i8, i8* %10, align 1
  store i8 %11, i8* %1, align 1
  %12 = load i64, i64* %3, align 8
  %13 = add i64 %12, -1
  store i64 %13, i64* %3, align 8
  br label %14

14:                                               ; preds = %2, %6
  %15 = phi i32 [ 1, %6 ], [ 0, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_get_bytes(%struct.cbs_st* nocapture, %struct.cbs_st* nocapture, i64) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, %2
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %9 = bitcast %struct.cbs_st* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 %2
  store i8* %12, i8** %8, align 8
  %13 = sub i64 %5, %2
  store i64 %13, i64* %4, align 8
  %14 = bitcast %struct.cbs_st* %1 to i64*
  store i64 %10, i64* %14, align 8
  %15 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %1, i64 0, i32 1
  store i64 %2, i64* %15, align 8
  br label %16

16:                                               ; preds = %3, %7
  %17 = phi i32 [ 1, %7 ], [ 0, %3 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_copy_bytes(%struct.cbs_st* nocapture, i8* nocapture, i64) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, %2
  br i1 %6, label %14, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 %2
  store i8* %10, i8** %8, align 8
  %11 = sub i64 %5, %2
  store i64 %11, i64* %4, align 8
  %12 = icmp eq i64 %2, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %7
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %9, i64 %2, i1 false) #11
  br label %14

14:                                               ; preds = %3, %13, %7
  %15 = phi i32 [ 1, %7 ], [ 1, %13 ], [ 0, %3 ]
  ret i32 %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @CBS_get_u8_length_prefixed(%struct.cbs_st* nocapture, %struct.cbs_st* nocapture) local_unnamed_addr #7 {
  %3 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 1
  store i8* %9, i8** %7, align 8
  %10 = add i64 %4, -1
  store i64 %10, i64* %3, align 8
  %11 = load i8, i8* %8, align 1
  %12 = zext i8 %11 to i64
  %13 = icmp ult i64 %10, %12
  br i1 %13, label %20, label %14

14:                                               ; preds = %6
  %15 = ptrtoint i8* %9 to i64
  %16 = getelementptr inbounds i8, i8* %9, i64 %12
  store i8* %16, i8** %7, align 8
  %17 = sub i64 %10, %12
  store i64 %17, i64* %3, align 8
  %18 = bitcast %struct.cbs_st* %1 to i64*
  store i64 %15, i64* %18, align 8
  %19 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %1, i64 0, i32 1
  store i64 %12, i64* %19, align 8
  br label %20

20:                                               ; preds = %2, %6, %14
  %21 = phi i32 [ 0, %2 ], [ 1, %14 ], [ 0, %6 ]
  ret i32 %21
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nocapture, %struct.cbs_st* nocapture) local_unnamed_addr #7 {
  %3 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 2
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 2
  store i8* %9, i8** %7, align 8
  %10 = add i64 %4, -2
  store i64 %10, i64* %3, align 8
  %11 = load i8, i8* %8, align 1
  %12 = zext i8 %11 to i64
  %13 = shl nuw nsw i64 %12, 8
  %14 = getelementptr inbounds i8, i8* %8, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i64
  %17 = or i64 %13, %16
  %18 = icmp ult i64 %10, %17
  br i1 %18, label %25, label %19

19:                                               ; preds = %6
  %20 = ptrtoint i8* %9 to i64
  %21 = getelementptr inbounds i8, i8* %9, i64 %17
  store i8* %21, i8** %7, align 8
  %22 = sub i64 %10, %17
  store i64 %22, i64* %3, align 8
  %23 = bitcast %struct.cbs_st* %1 to i64*
  store i64 %20, i64* %23, align 8
  %24 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %1, i64 0, i32 1
  store i64 %17, i64* %24, align 8
  br label %25

25:                                               ; preds = %2, %6, %19
  %26 = phi i32 [ 0, %2 ], [ 1, %19 ], [ 0, %6 ]
  ret i32 %26
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @CBS_get_u24_length_prefixed(%struct.cbs_st* nocapture, %struct.cbs_st* nocapture) local_unnamed_addr #7 {
  %3 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 3
  br i1 %5, label %30, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 3
  store i8* %9, i8** %7, align 8
  %10 = add i64 %4, -3
  store i64 %10, i64* %3, align 8
  %11 = load i8, i8* %8, align 1
  %12 = zext i8 %11 to i64
  %13 = shl nuw nsw i64 %12, 8
  %14 = getelementptr inbounds i8, i8* %8, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i64
  %17 = or i64 %13, %16
  %18 = shl nuw nsw i64 %17, 8
  %19 = getelementptr inbounds i8, i8* %8, i64 2
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i64
  %22 = or i64 %18, %21
  %23 = icmp ult i64 %10, %22
  br i1 %23, label %30, label %24

24:                                               ; preds = %6
  %25 = ptrtoint i8* %9 to i64
  %26 = getelementptr inbounds i8, i8* %9, i64 %22
  store i8* %26, i8** %7, align 8
  %27 = sub i64 %10, %22
  store i64 %27, i64* %3, align 8
  %28 = bitcast %struct.cbs_st* %1 to i64*
  store i64 %25, i64* %28, align 8
  %29 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %1, i64 0, i32 1
  store i64 %22, i64* %29, align 8
  br label %30

30:                                               ; preds = %2, %6, %24
  %31 = phi i32 [ 0, %2 ], [ 1, %24 ], [ 0, %6 ]
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_get_any_asn1(%struct.cbs_st* nocapture, %struct.cbs_st*, i32*) local_unnamed_addr #1 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  store i64 -6148914691236517206, i64* %4, align 8
  %6 = call fastcc i32 @cbs_get_any_asn1_element(%struct.cbs_st* %0, %struct.cbs_st* %1, i32* %2, i64* nonnull %4, i32* null, i32 0) #11
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %18, label %8

8:                                                ; preds = %3
  %9 = load i64, i64* %4, align 8
  %10 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, %9
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %1, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %9
  store i8* %16, i8** %14, align 8
  %17 = sub i64 %11, %9
  store i64 %17, i64* %10, align 8
  br label %18

18:                                               ; preds = %13, %8, %3
  %19 = phi i32 [ 0, %3 ], [ 1, %13 ], [ 0, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_get_any_asn1_element(%struct.cbs_st* nocapture, %struct.cbs_st*, i32*, i64*) local_unnamed_addr #1 {
  %5 = tail call fastcc i32 @cbs_get_any_asn1_element(%struct.cbs_st* %0, %struct.cbs_st* %1, i32* %2, i64* %3, i32* null, i32 0)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @cbs_get_any_asn1_element(%struct.cbs_st* nocapture, %struct.cbs_st*, i32*, i64*, i32* nocapture, i32) unnamed_addr #1 {
  %7 = alloca %struct.cbs_st, align 8
  %8 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  %13 = icmp eq %struct.cbs_st* %1, null
  %14 = select i1 %13, %struct.cbs_st* %7, %struct.cbs_st* %1
  %15 = icmp ne i32 %5, 0
  %16 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  br i1 %15, label %17, label %18

17:                                               ; preds = %6
  store i32 0, i32* %4, align 4
  br label %18

18:                                               ; preds = %17, %6
  %19 = icmp eq i64 %11, 0
  br i1 %19, label %186, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds i8, i8* %9, i64 1
  %22 = add i64 %11, -1
  %23 = load i8, i8* %9, align 1
  %24 = zext i8 %23 to i32
  %25 = shl nuw i32 %24, 24
  %26 = and i32 %25, -536870912
  %27 = and i32 %24, 31
  %28 = icmp eq i32 %27, 31
  br i1 %28, label %29, label %53

29:                                               ; preds = %20, %43
  %30 = phi i8* [ %35, %43 ], [ %21, %20 ]
  %31 = phi i64 [ %36, %43 ], [ %22, %20 ]
  %32 = phi i64 [ %47, %43 ], [ 0, %20 ]
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %186, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds i8, i8* %30, i64 1
  %36 = add i64 %31, -1
  %37 = load i8, i8* %30, align 1
  %38 = icmp ugt i64 %32, 144115188075855871
  br i1 %38, label %186, label %39

39:                                               ; preds = %34
  %40 = icmp eq i64 %32, 0
  %41 = icmp eq i8 %37, -128
  %42 = and i1 %40, %41
  br i1 %42, label %186, label %43

43:                                               ; preds = %39
  %44 = shl i64 %32, 7
  %45 = and i8 %37, 127
  %46 = zext i8 %45 to i64
  %47 = or i64 %44, %46
  %48 = icmp slt i8 %37, 0
  br i1 %48, label %29, label %49

49:                                               ; preds = %43
  %50 = add i64 %47, -31
  %51 = icmp ugt i64 %50, 536870880
  %52 = trunc i64 %47 to i32
  br i1 %51, label %186, label %53

53:                                               ; preds = %49, %20
  %54 = phi i64 [ %36, %49 ], [ %22, %20 ]
  %55 = phi i8* [ %35, %49 ], [ %21, %20 ]
  %56 = phi i32 [ %52, %49 ], [ %27, %20 ]
  %57 = or i32 %56, %26
  %58 = icmp eq i32* %2, null
  br i1 %58, label %60, label %59

59:                                               ; preds = %53
  store i32 %57, i32* %2, align 4
  br label %60

60:                                               ; preds = %53, %59
  %61 = icmp eq i64 %54, 0
  br i1 %61, label %186, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds i8, i8* %55, i64 1
  %64 = add i64 %54, -1
  %65 = load i8, i8* %55, align 1
  %66 = load i64, i64* %10, align 8
  %67 = sub i64 %66, %64
  %68 = icmp sgt i8 %65, -1
  br i1 %68, label %69, label %74

69:                                               ; preds = %62
  %70 = zext i8 %65 to i64
  %71 = add i64 %67, %70
  %72 = icmp eq i64* %3, null
  br i1 %72, label %174, label %73

73:                                               ; preds = %69
  store i64 %67, i64* %3, align 8
  br label %174

74:                                               ; preds = %62
  %75 = and i8 %65, 127
  %76 = zext i8 %75 to i64
  br i1 %15, label %77, label %96

77:                                               ; preds = %74
  %78 = and i32 %57, 536870912
  %79 = icmp ne i32 %78, 0
  %80 = icmp eq i8 %75, 0
  %81 = and i1 %79, %80
  br i1 %81, label %82, label %96

82:                                               ; preds = %77
  %83 = icmp eq i64* %3, null
  br i1 %83, label %85, label %84

84:                                               ; preds = %82
  store i64 %67, i64* %3, align 8
  br label %85

85:                                               ; preds = %82, %84
  store i32 1, i32* %4, align 4
  %86 = load i64, i64* %10, align 8
  %87 = icmp ult i64 %86, %67
  br i1 %87, label %186, label %88

88:                                               ; preds = %85
  %89 = bitcast %struct.cbs_st* %0 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = inttoptr i64 %90 to i8*
  %92 = getelementptr inbounds i8, i8* %91, i64 %67
  store i8* %92, i8** %8, align 8
  %93 = sub i64 %86, %67
  store i64 %93, i64* %10, align 8
  %94 = bitcast %struct.cbs_st* %14 to i64*
  store i64 %90, i64* %94, align 8
  %95 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %14, i64 0, i32 1
  store i64 %67, i64* %95, align 8
  br label %186

96:                                               ; preds = %77, %74
  %97 = add nsw i8 %75, -1
  %98 = icmp ugt i8 %97, 3
  %99 = icmp ult i64 %64, %76
  %100 = or i1 %98, %99
  br i1 %100, label %186, label %101

101:                                              ; preds = %96
  %102 = add nsw i64 %76, -1
  %103 = and i64 %76, 3
  %104 = icmp ult i64 %102, 3
  br i1 %104, label %137, label %105

105:                                              ; preds = %101
  %106 = sub nsw i64 %76, %103
  br label %107

107:                                              ; preds = %107, %105
  %108 = phi i64 [ 0, %105 ], [ %134, %107 ]
  %109 = phi i64 [ 0, %105 ], [ %133, %107 ]
  %110 = phi i64 [ %106, %105 ], [ %135, %107 ]
  %111 = shl i64 %109, 8
  %112 = getelementptr inbounds i8, i8* %63, i64 %108
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i64
  %115 = or i64 %111, %114
  %116 = or i64 %108, 1
  %117 = shl i64 %115, 8
  %118 = getelementptr inbounds i8, i8* %63, i64 %116
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = or i64 %117, %120
  %122 = or i64 %108, 2
  %123 = shl i64 %121, 8
  %124 = getelementptr inbounds i8, i8* %63, i64 %122
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = or i64 %123, %126
  %128 = or i64 %108, 3
  %129 = shl i64 %127, 8
  %130 = getelementptr inbounds i8, i8* %63, i64 %128
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = or i64 %129, %132
  %134 = add nuw nsw i64 %108, 4
  %135 = add i64 %110, -4
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %107

137:                                              ; preds = %107, %101
  %138 = phi i64 [ undef, %101 ], [ %133, %107 ]
  %139 = phi i64 [ 0, %101 ], [ %134, %107 ]
  %140 = phi i64 [ 0, %101 ], [ %133, %107 ]
  %141 = icmp eq i64 %103, 0
  br i1 %141, label %154, label %142

142:                                              ; preds = %137, %142
  %143 = phi i64 [ %151, %142 ], [ %139, %137 ]
  %144 = phi i64 [ %150, %142 ], [ %140, %137 ]
  %145 = phi i64 [ %152, %142 ], [ %103, %137 ]
  %146 = shl i64 %144, 8
  %147 = getelementptr inbounds i8, i8* %63, i64 %143
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i64
  %150 = or i64 %146, %149
  %151 = add nuw nsw i64 %143, 1
  %152 = add i64 %145, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %142, !llvm.loop !2

154:                                              ; preds = %142, %137
  %155 = phi i64 [ %138, %137 ], [ %150, %142 ]
  %156 = icmp ult i64 %155, 128
  br i1 %156, label %157, label %159

157:                                              ; preds = %154
  br i1 %15, label %158, label %186

158:                                              ; preds = %157
  store i32 1, i32* %4, align 4
  br label %159

159:                                              ; preds = %158, %154
  %160 = shl nuw nsw i64 %76, 3
  %161 = add nsw i64 %160, -8
  %162 = lshr i64 %155, %161
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %159
  br i1 %15, label %165, label %186

165:                                              ; preds = %164
  store i32 1, i32* %4, align 4
  br label %166

166:                                              ; preds = %165, %159
  %167 = add i64 %67, %76
  %168 = xor i64 %155, -1
  %169 = icmp ugt i64 %167, %168
  br i1 %169, label %186, label %170

170:                                              ; preds = %166
  %171 = add i64 %155, %167
  %172 = icmp eq i64* %3, null
  br i1 %172, label %174, label %173

173:                                              ; preds = %170
  store i64 %167, i64* %3, align 8
  br label %174

174:                                              ; preds = %170, %173, %69, %73
  %175 = phi i64 [ %71, %73 ], [ %71, %69 ], [ %171, %170 ], [ %171, %173 ]
  %176 = load i64, i64* %10, align 8
  %177 = icmp ult i64 %176, %175
  br i1 %177, label %186, label %178

178:                                              ; preds = %174
  %179 = bitcast %struct.cbs_st* %0 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = inttoptr i64 %180 to i8*
  %182 = getelementptr inbounds i8, i8* %181, i64 %175
  store i8* %182, i8** %8, align 8
  %183 = sub i64 %176, %175
  store i64 %183, i64* %10, align 8
  %184 = bitcast %struct.cbs_st* %14 to i64*
  store i64 %180, i64* %184, align 8
  %185 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %14, i64 0, i32 1
  store i64 %175, i64* %185, align 8
  br label %186

186:                                              ; preds = %39, %34, %29, %88, %85, %166, %164, %157, %96, %60, %18, %49, %174, %178
  %187 = phi i32 [ 1, %178 ], [ 0, %174 ], [ 0, %49 ], [ 0, %18 ], [ 0, %60 ], [ 0, %85 ], [ 1, %88 ], [ 0, %166 ], [ 0, %164 ], [ 0, %157 ], [ 0, %96 ], [ 0, %29 ], [ 0, %34 ], [ 0, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  ret i32 %187
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_get_any_ber_asn1_element(%struct.cbs_st* nocapture, %struct.cbs_st*, i32*, i64*, i32*) local_unnamed_addr #1 {
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #11
  store i32 -1431655766, i32* %6, align 4
  %8 = icmp eq i32* %4, null
  %9 = select i1 %8, i32* %6, i32* %4
  %10 = call fastcc i32 @cbs_get_any_asn1_element(%struct.cbs_st* %0, %struct.cbs_st* %1, i32* %2, i64* %3, i32* %9, i32 1)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #11
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_get_asn1(%struct.cbs_st* nocapture, %struct.cbs_st*, i32) local_unnamed_addr #1 {
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.cbs_st, align 8
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  store i64 -6148914691236517206, i64* %4, align 8
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #11
  store i32 -1431655766, i32* %5, align 4
  %9 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = icmp eq %struct.cbs_st* %1, null
  %11 = select i1 %10, %struct.cbs_st* %6, %struct.cbs_st* %1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #11
  %12 = call fastcc i32 @cbs_get_any_asn1_element(%struct.cbs_st* %0, %struct.cbs_st* %11, i32* nonnull %5, i64* nonnull %4, i32* null, i32 0) #11
  %13 = icmp ne i32 %12, 0
  %14 = load i32, i32* %5, align 4
  %15 = icmp eq i32 %14, %2
  %16 = and i1 %13, %15
  br i1 %16, label %17, label %27

17:                                               ; preds = %3
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %11, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp ult i64 %20, %18
  br i1 %21, label %27, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %11, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 %18
  store i8* %25, i8** %23, align 8
  %26 = sub i64 %20, %18
  store i64 %26, i64* %19, align 8
  br label %27

27:                                               ; preds = %3, %17, %22
  %28 = phi i32 [ 0, %3 ], [ 1, %22 ], [ 0, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_get_asn1_element(%struct.cbs_st* nocapture, %struct.cbs_st*, i32) local_unnamed_addr #1 {
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.cbs_st, align 8
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  store i64 -6148914691236517206, i64* %4, align 8
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #11
  store i32 -1431655766, i32* %5, align 4
  %9 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = icmp eq %struct.cbs_st* %1, null
  %11 = select i1 %10, %struct.cbs_st* %6, %struct.cbs_st* %1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #11
  %12 = call fastcc i32 @cbs_get_any_asn1_element(%struct.cbs_st* %0, %struct.cbs_st* %11, i32* nonnull %5, i64* nonnull %4, i32* null, i32 0) #11
  %13 = icmp ne i32 %12, 0
  %14 = load i32, i32* %5, align 4
  %15 = icmp eq i32 %14, %2
  %16 = and i1 %13, %15
  %17 = zext i1 %16 to i32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_peek_asn1_tag(%struct.cbs_st* nocapture readonly, i32) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %44, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = shl nuw i32 %10, 24
  %12 = and i32 %11, -536870912
  %13 = and i32 %10, 31
  %14 = icmp eq i32 %13, 31
  br i1 %14, label %15, label %39

15:                                               ; preds = %6, %29
  %16 = phi i8* [ %20, %29 ], [ %8, %6 ]
  %17 = phi i64 [ %19, %29 ], [ %4, %6 ]
  %18 = phi i64 [ %33, %29 ], [ 0, %6 ]
  %19 = add i64 %17, -1
  %20 = getelementptr inbounds i8, i8* %16, i64 1
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %44, label %22

22:                                               ; preds = %15
  %23 = load i8, i8* %20, align 1
  %24 = icmp ugt i64 %18, 144115188075855871
  br i1 %24, label %44, label %25

25:                                               ; preds = %22
  %26 = icmp eq i64 %18, 0
  %27 = icmp eq i8 %23, -128
  %28 = and i1 %26, %27
  br i1 %28, label %44, label %29

29:                                               ; preds = %25
  %30 = shl i64 %18, 7
  %31 = and i8 %23, 127
  %32 = zext i8 %31 to i64
  %33 = or i64 %30, %32
  %34 = icmp slt i8 %23, 0
  br i1 %34, label %15, label %35

35:                                               ; preds = %29
  %36 = add i64 %33, -31
  %37 = icmp ugt i64 %36, 536870880
  %38 = trunc i64 %33 to i32
  br i1 %37, label %44, label %39

39:                                               ; preds = %35, %6
  %40 = phi i32 [ %38, %35 ], [ %13, %6 ]
  %41 = or i32 %40, %12
  %42 = icmp eq i32 %41, %1
  %43 = zext i1 %42 to i32
  br label %44

44:                                               ; preds = %25, %22, %15, %35, %39, %2
  %45 = phi i32 [ 0, %2 ], [ %43, %39 ], [ 0, %35 ], [ 0, %15 ], [ 0, %22 ], [ 0, %25 ]
  ret i32 %45
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_get_asn1_uint64(%struct.cbs_st* nocapture, i64* nocapture) local_unnamed_addr #1 {
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.cbs_st, align 8
  %6 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %5, i64 0, i32 0
  %8 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %5, i64 0, i32 1
  %9 = bitcast i64* %3 to i8*
  %10 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  store i64 -6148914691236517206, i64* %3, align 8
  %11 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #11
  store i32 -1431655766, i32* %4, align 4
  %12 = call fastcc i32 @cbs_get_any_asn1_element(%struct.cbs_st* %0, %struct.cbs_st* nonnull %5, i32* nonnull %4, i64* nonnull %3, i32* null, i32 0) #11
  %13 = icmp ne i32 %12, 0
  %14 = load i32, i32* %4, align 4
  %15 = icmp eq i32 %14, 2
  %16 = and i1 %13, %15
  br i1 %16, label %17, label %61

17:                                               ; preds = %2
  %18 = load i64, i64* %3, align 8
  %19 = load i64, i64* %8, align 8
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = load i8*, i8** %7, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %18
  store i8* %23, i8** %7, align 8
  %24 = sub i64 %19, %18
  store i64 %24, i64* %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %62, label %27

26:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %62

27:                                               ; preds = %21
  %28 = load i8, i8* %23, align 1
  %29 = icmp eq i64 %24, 1
  br i1 %29, label %46, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds i8, i8* %23, i64 1
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %28, 0
  %34 = icmp sgt i8 %32, -1
  %35 = and i1 %33, %34
  br i1 %35, label %62, label %36

36:                                               ; preds = %30
  %37 = icmp ne i8 %28, -1
  %38 = zext i1 %37 to i32
  %39 = lshr i8 %32, 7
  %40 = xor i8 %39, 1
  %41 = zext i8 %40 to i32
  %42 = or i32 %41, %38
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i8 %28, 0
  %45 = or i1 %44, %43
  br i1 %45, label %62, label %48

46:                                               ; preds = %27
  %47 = icmp slt i8 %28, 0
  br i1 %47, label %62, label %48

48:                                               ; preds = %46, %36
  store i64 0, i64* %1, align 8
  br label %49

49:                                               ; preds = %53, %48
  %50 = phi i64 [ %58, %53 ], [ 0, %48 ]
  %51 = phi i64 [ %59, %53 ], [ 0, %48 ]
  %52 = icmp ugt i64 %50, 72057594037927935
  br i1 %52, label %62, label %53

53:                                               ; preds = %49
  %54 = shl i64 %50, 8
  store i64 %54, i64* %1, align 8
  %55 = getelementptr inbounds i8, i8* %23, i64 %51
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i64
  %58 = or i64 %54, %57
  store i64 %58, i64* %1, align 8
  %59 = add nuw i64 %51, 1
  %60 = icmp eq i64 %59, %24
  br i1 %60, label %62, label %49

61:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %62

62:                                               ; preds = %49, %53, %26, %61, %21, %30, %36, %46
  %63 = phi i32 [ 0, %46 ], [ 0, %26 ], [ 0, %36 ], [ 0, %30 ], [ 0, %21 ], [ 0, %61 ], [ 1, %53 ], [ 0, %49 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret i32 %63
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @CBS_is_unsigned_asn1_integer(%struct.cbs_st* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %28, label %7

7:                                                ; preds = %1
  %8 = load i8, i8* %3, align 1
  %9 = icmp eq i64 %5, 1
  br i1 %9, label %24, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds i8, i8* %3, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %8, 0
  %14 = icmp sgt i8 %12, -1
  %15 = and i1 %13, %14
  br i1 %15, label %28, label %16

16:                                               ; preds = %10
  %17 = icmp ne i8 %8, -1
  %18 = zext i1 %17 to i32
  %19 = lshr i8 %12, 7
  %20 = xor i8 %19, 1
  %21 = zext i8 %20 to i32
  %22 = or i32 %21, %18
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %7, %16
  %25 = lshr i8 %8, 7
  %26 = xor i8 %25, 1
  %27 = zext i8 %26 to i32
  br label %28

28:                                               ; preds = %1, %10, %16, %24
  %29 = phi i32 [ 0, %16 ], [ %27, %24 ], [ 0, %10 ], [ 0, %1 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_get_asn1_int64(%struct.cbs_st* nocapture, i64* nocapture) local_unnamed_addr #1 {
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca %union.anon, align 8
  %7 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %5, i64 0, i32 0
  %9 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %5, i64 0, i32 1
  %10 = bitcast i64* %3 to i8*
  %11 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  store i64 -6148914691236517206, i64* %3, align 8
  %12 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #11
  store i32 -1431655766, i32* %4, align 4
  %13 = call fastcc i32 @cbs_get_any_asn1_element(%struct.cbs_st* %0, %struct.cbs_st* nonnull %5, i32* nonnull %4, i64* nonnull %3, i32* null, i32 0) #11
  %14 = icmp ne i32 %13, 0
  %15 = load i32, i32* %4, align 4
  %16 = icmp eq i32 %15, 2
  %17 = and i1 %14, %16
  br i1 %17, label %18, label %136

18:                                               ; preds = %2
  %19 = load i64, i64* %3, align 8
  %20 = load i64, i64* %9, align 8
  %21 = icmp ult i64 %20, %19
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = load i8*, i8** %8, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 %19
  store i8* %24, i8** %8, align 8
  %25 = sub i64 %20, %19
  store i64 %25, i64* %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %137, label %28

27:                                               ; preds = %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  br label %137

28:                                               ; preds = %22
  %29 = load i8, i8* %24, align 1
  %30 = icmp eq i64 %25, 1
  br i1 %30, label %47, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds i8, i8* %24, i64 1
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %29, 0
  %35 = icmp sgt i8 %33, -1
  %36 = and i1 %34, %35
  br i1 %36, label %137, label %37

37:                                               ; preds = %31
  %38 = icmp ne i8 %29, -1
  %39 = zext i1 %38 to i32
  %40 = lshr i8 %33, 7
  %41 = xor i8 %40, 1
  %42 = zext i8 %41 to i32
  %43 = or i32 %42, %39
  %44 = icmp eq i32 %43, 0
  %45 = icmp ugt i64 %25, 8
  %46 = or i1 %45, %44
  br i1 %46, label %137, label %47

47:                                               ; preds = %28, %37
  %48 = bitcast %union.anon* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #11
  %49 = getelementptr inbounds %union.anon, %union.anon* %6, i64 0, i32 0
  %50 = bitcast %union.anon* %6 to [8 x i8]*
  %51 = ashr i8 %29, 7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 %51, i64 8, i1 false)
  %52 = icmp ult i64 %25, 32
  br i1 %52, label %53, label %55

53:                                               ; preds = %123, %47
  %54 = phi i64 [ 0, %47 ], [ %56, %123 ]
  br label %127

55:                                               ; preds = %47
  %56 = and i64 %25, -32
  %57 = add i64 %56, -32
  %58 = lshr exact i64 %57, 5
  %59 = add nuw nsw i64 %58, 1
  %60 = and i64 %59, 1
  %61 = icmp eq i64 %57, 0
  br i1 %61, label %103, label %62

62:                                               ; preds = %55
  %63 = sub nuw nsw i64 %59, %60
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i64 [ 0, %62 ], [ %100, %64 ]
  %66 = phi i64 [ %63, %62 ], [ %101, %64 ]
  %67 = xor i64 %65, -1
  %68 = add i64 %25, %67
  %69 = getelementptr inbounds i8, i8* %24, i64 %68
  %70 = getelementptr inbounds i8, i8* %69, i64 -15
  %71 = bitcast i8* %70 to <16 x i8>*
  %72 = load <16 x i8>, <16 x i8>* %71, align 1
  %73 = shufflevector <16 x i8> %72, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %74 = getelementptr inbounds i8, i8* %69, i64 -16
  %75 = getelementptr inbounds i8, i8* %74, i64 -15
  %76 = bitcast i8* %75 to <16 x i8>*
  %77 = load <16 x i8>, <16 x i8>* %76, align 1
  %78 = shufflevector <16 x i8> %77, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %79 = getelementptr inbounds [8 x i8], [8 x i8]* %50, i64 0, i64 %65
  %80 = bitcast i8* %79 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %80, align 8
  %81 = getelementptr inbounds i8, i8* %79, i64 16
  %82 = bitcast i8* %81 to <16 x i8>*
  store <16 x i8> %78, <16 x i8>* %82, align 8
  %83 = or i64 %65, 32
  %84 = sub nuw nsw i64 -33, %65
  %85 = add i64 %25, %84
  %86 = getelementptr inbounds i8, i8* %24, i64 %85
  %87 = getelementptr inbounds i8, i8* %86, i64 -15
  %88 = bitcast i8* %87 to <16 x i8>*
  %89 = load <16 x i8>, <16 x i8>* %88, align 1
  %90 = shufflevector <16 x i8> %89, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i8, i8* %86, i64 -16
  %92 = getelementptr inbounds i8, i8* %91, i64 -15
  %93 = bitcast i8* %92 to <16 x i8>*
  %94 = load <16 x i8>, <16 x i8>* %93, align 1
  %95 = shufflevector <16 x i8> %94, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %96 = getelementptr inbounds [8 x i8], [8 x i8]* %50, i64 0, i64 %83
  %97 = bitcast i8* %96 to <16 x i8>*
  store <16 x i8> %90, <16 x i8>* %97, align 8
  %98 = getelementptr inbounds i8, i8* %96, i64 16
  %99 = bitcast i8* %98 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %99, align 8
  %100 = add i64 %65, 64
  %101 = add i64 %66, -2
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %103, label %64, !llvm.loop !4

103:                                              ; preds = %64, %55
  %104 = phi i64 [ 0, %55 ], [ %100, %64 ]
  %105 = icmp eq i64 %60, 0
  br i1 %105, label %123, label %106

106:                                              ; preds = %103
  %107 = xor i64 %104, -1
  %108 = add i64 %25, %107
  %109 = getelementptr inbounds i8, i8* %24, i64 %108
  %110 = getelementptr inbounds i8, i8* %109, i64 -15
  %111 = bitcast i8* %110 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 1
  %113 = shufflevector <16 x i8> %112, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %114 = getelementptr inbounds i8, i8* %109, i64 -16
  %115 = getelementptr inbounds i8, i8* %114, i64 -15
  %116 = bitcast i8* %115 to <16 x i8>*
  %117 = load <16 x i8>, <16 x i8>* %116, align 1
  %118 = shufflevector <16 x i8> %117, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %119 = getelementptr inbounds [8 x i8], [8 x i8]* %50, i64 0, i64 %104
  %120 = bitcast i8* %119 to <16 x i8>*
  store <16 x i8> %113, <16 x i8>* %120, align 8
  %121 = getelementptr inbounds i8, i8* %119, i64 16
  %122 = bitcast i8* %121 to <16 x i8>*
  store <16 x i8> %118, <16 x i8>* %122, align 8
  br label %123

123:                                              ; preds = %103, %106
  %124 = icmp eq i64 %25, %56
  br i1 %124, label %125, label %53

125:                                              ; preds = %127, %123
  %126 = load i64, i64* %49, align 8
  store i64 %126, i64* %1, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  br label %137

127:                                              ; preds = %53, %127
  %128 = phi i64 [ %134, %127 ], [ %54, %53 ]
  %129 = xor i64 %128, -1
  %130 = add i64 %25, %129
  %131 = getelementptr inbounds i8, i8* %24, i64 %130
  %132 = load i8, i8* %131, align 1
  %133 = getelementptr inbounds [8 x i8], [8 x i8]* %50, i64 0, i64 %128
  store i8 %132, i8* %133, align 1
  %134 = add nuw i64 %128, 1
  %135 = icmp eq i64 %134, %25
  br i1 %135, label %125, label %127, !llvm.loop !6

136:                                              ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  br label %137

137:                                              ; preds = %27, %136, %22, %31, %125, %37
  %138 = phi i32 [ 0, %37 ], [ 0, %27 ], [ 1, %125 ], [ 0, %31 ], [ 0, %22 ], [ 0, %136 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret i32 %138
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_is_valid_asn1_integer(%struct.cbs_st* nocapture readonly, i32*) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %29, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds i8, i8* %4, i64 1
  %10 = load i8, i8* %4, align 1
  %11 = icmp eq i32* %1, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = lshr i8 %10, 7
  %14 = zext i8 %13 to i32
  store i32 %14, i32* %1, align 4
  br label %15

15:                                               ; preds = %8, %12
  %16 = icmp eq i64 %6, 1
  br i1 %16, label %29, label %17

17:                                               ; preds = %15
  %18 = load i8, i8* %9, align 1
  %19 = icmp eq i8 %10, 0
  %20 = icmp sgt i8 %18, -1
  %21 = and i1 %19, %20
  br i1 %21, label %29, label %22

22:                                               ; preds = %17
  %23 = icmp ne i8 %10, -1
  %24 = zext i1 %23 to i32
  %25 = lshr i8 %18, 7
  %26 = xor i8 %25, 1
  %27 = zext i8 %26 to i32
  %28 = or i32 %27, %24
  br label %29

29:                                               ; preds = %15, %2, %22, %17
  %30 = phi i32 [ 0, %17 ], [ %28, %22 ], [ 0, %2 ], [ 1, %15 ]
  ret i32 %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_get_asn1_bool(%struct.cbs_st* nocapture, i32* nocapture) local_unnamed_addr #1 {
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.cbs_st, align 8
  %6 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %5, i64 0, i32 0
  %8 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %5, i64 0, i32 1
  %9 = bitcast i64* %3 to i8*
  %10 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  store i64 -6148914691236517206, i64* %3, align 8
  %11 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #11
  store i32 -1431655766, i32* %4, align 4
  %12 = call fastcc i32 @cbs_get_any_asn1_element(%struct.cbs_st* %0, %struct.cbs_st* nonnull %5, i32* nonnull %4, i64* nonnull %3, i32* null, i32 0) #11
  %13 = icmp ne i32 %12, 0
  %14 = load i32, i32* %4, align 4
  %15 = icmp eq i32 %14, 1
  %16 = and i1 %13, %15
  br i1 %16, label %17, label %21

17:                                               ; preds = %2
  %18 = load i64, i64* %3, align 8
  %19 = load i64, i64* %8, align 8
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %21, label %22

21:                                               ; preds = %17, %2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %33

22:                                               ; preds = %17
  %23 = load i8*, i8** %7, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 %18
  store i8* %24, i8** %7, align 8
  %25 = sub i64 %19, %18
  store i64 %25, i64* %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %26 = icmp eq i64 %25, 1
  br i1 %26, label %27, label %33

27:                                               ; preds = %22
  %28 = load i8*, i8** %7, align 8
  %29 = load i8, i8* %28, align 1
  switch i8 %29, label %33 [
    i8 0, label %30
    i8 -1, label %30
  ]

30:                                               ; preds = %27, %27
  %31 = icmp ne i8 %29, 0
  %32 = zext i1 %31 to i32
  store i32 %32, i32* %1, align 4
  br label %33

33:                                               ; preds = %21, %22, %30, %27
  %34 = phi i32 [ 0, %22 ], [ 1, %30 ], [ 0, %27 ], [ 0, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_get_optional_asn1(%struct.cbs_st* nocapture, %struct.cbs_st*, i32*, i32) local_unnamed_addr #1 {
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.cbs_st, align 8
  %8 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %70, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw i32 %15, 24
  %17 = and i32 %16, -536870912
  %18 = and i32 %15, 31
  %19 = icmp eq i32 %18, 31
  br i1 %19, label %20, label %44

20:                                               ; preds = %11, %34
  %21 = phi i8* [ %25, %34 ], [ %13, %11 ]
  %22 = phi i64 [ %24, %34 ], [ %9, %11 ]
  %23 = phi i64 [ %38, %34 ], [ 0, %11 ]
  %24 = add i64 %22, -1
  %25 = getelementptr inbounds i8, i8* %21, i64 1
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %70, label %27

27:                                               ; preds = %20
  %28 = load i8, i8* %25, align 1
  %29 = icmp ugt i64 %23, 144115188075855871
  br i1 %29, label %70, label %30

30:                                               ; preds = %27
  %31 = icmp eq i64 %23, 0
  %32 = icmp eq i8 %28, -128
  %33 = and i1 %31, %32
  br i1 %33, label %70, label %34

34:                                               ; preds = %30
  %35 = shl i64 %23, 7
  %36 = and i8 %28, 127
  %37 = zext i8 %36 to i64
  %38 = or i64 %35, %37
  %39 = icmp slt i8 %28, 0
  br i1 %39, label %20, label %40

40:                                               ; preds = %34
  %41 = add i64 %38, -31
  %42 = icmp ugt i64 %41, 536870880
  %43 = trunc i64 %38 to i32
  br i1 %42, label %70, label %44

44:                                               ; preds = %11, %40
  %45 = phi i32 [ %43, %40 ], [ %18, %11 ]
  %46 = or i32 %45, %17
  %47 = icmp eq i32 %46, %3
  br i1 %47, label %48, label %70

48:                                               ; preds = %44
  %49 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #11
  store i64 -6148914691236517206, i64* %5, align 8
  %50 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #11
  store i32 -1431655766, i32* %6, align 4
  %51 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #11
  %52 = icmp eq %struct.cbs_st* %1, null
  %53 = select i1 %52, %struct.cbs_st* %7, %struct.cbs_st* %1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 16, i1 false) #11
  %54 = call fastcc i32 @cbs_get_any_asn1_element(%struct.cbs_st* %0, %struct.cbs_st* %53, i32* nonnull %6, i64* nonnull %5, i32* null, i32 0) #11
  %55 = icmp ne i32 %54, 0
  %56 = load i32, i32* %6, align 4
  %57 = icmp eq i32 %56, %3
  %58 = and i1 %55, %57
  br i1 %58, label %59, label %74

59:                                               ; preds = %48
  %60 = load i64, i64* %5, align 8
  %61 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %53, i64 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = icmp ult i64 %62, %60
  br i1 %63, label %69, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %53, i64 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 %60
  store i8* %67, i8** %65, align 8
  %68 = sub i64 %62, %60
  store i64 %68, i64* %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  br label %70

69:                                               ; preds = %59
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  br label %75

70:                                               ; preds = %30, %27, %20, %64, %44, %40, %4
  %71 = phi i32 [ 0, %44 ], [ 0, %4 ], [ 0, %40 ], [ 1, %64 ], [ 0, %20 ], [ 0, %27 ], [ 0, %30 ]
  %72 = icmp eq i32* %2, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  store i32 %71, i32* %2, align 4
  br label %75

74:                                               ; preds = %48
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #11
  br label %75

75:                                               ; preds = %69, %74, %73, %70
  %76 = phi i32 [ 0, %69 ], [ 1, %70 ], [ 1, %73 ], [ 0, %74 ]
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_get_optional_asn1_octet_string(%struct.cbs_st* nocapture, %struct.cbs_st*, i32*, i32) local_unnamed_addr #1 {
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.cbs_st, align 8
  %8 = alloca %struct.cbs_st, align 8
  %9 = alloca i32, align 4
  %10 = bitcast %struct.cbs_st* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %8, i64 0, i32 1
  %12 = bitcast i32* %9 to i8*
  %13 = bitcast %struct.cbs_st* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #11
  store i32 -1431655766, i32* %9, align 4
  %14 = call i32 @CBS_get_optional_asn1(%struct.cbs_st* %0, %struct.cbs_st* nonnull %8, i32* nonnull %9, i32 %3)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %51, label %16

16:                                               ; preds = %4
  %17 = load i32, i32* %9, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %45, label %19

19:                                               ; preds = %16
  %20 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  store i64 -6148914691236517206, i64* %5, align 8
  %21 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #11
  store i32 -1431655766, i32* %6, align 4
  %22 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #11
  %23 = icmp eq %struct.cbs_st* %1, null
  %24 = select i1 %23, %struct.cbs_st* %7, %struct.cbs_st* %1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false) #11
  %25 = call fastcc i32 @cbs_get_any_asn1_element(%struct.cbs_st* nonnull %8, %struct.cbs_st* %24, i32* nonnull %6, i64* nonnull %5, i32* null, i32 0) #11
  %26 = icmp ne i32 %25, 0
  %27 = load i32, i32* %6, align 4
  %28 = icmp eq i32 %27, 4
  %29 = and i1 %26, %28
  br i1 %29, label %30, label %40

30:                                               ; preds = %19
  %31 = load i64, i64* %5, align 8
  %32 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %24, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %40, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %24, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  br label %40

40:                                               ; preds = %19, %30, %35
  %41 = phi i1 [ false, %19 ], [ true, %35 ], [ false, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  %42 = load i64, i64* %11, align 8
  %43 = icmp eq i64 %42, 0
  %44 = and i1 %41, %43
  br i1 %44, label %47, label %51

45:                                               ; preds = %16
  %46 = bitcast %struct.cbs_st* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false)
  br label %47

47:                                               ; preds = %40, %45
  %48 = icmp eq i32* %2, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = load i32, i32* %9, align 4
  store i32 %50, i32* %2, align 4
  br label %51

51:                                               ; preds = %40, %49, %47, %4
  %52 = phi i32 [ 0, %4 ], [ 0, %40 ], [ 1, %47 ], [ 1, %49 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  ret i32 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_get_optional_asn1_uint64(%struct.cbs_st* nocapture, i64* nocapture, i32, i64) local_unnamed_addr #1 {
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca i32, align 4
  %7 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %5, i64 0, i32 1
  %9 = bitcast i32* %6 to i8*
  %10 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #11
  store i32 -1431655766, i32* %6, align 4
  %11 = call i32 @CBS_get_optional_asn1(%struct.cbs_st* %0, %struct.cbs_st* nonnull %5, i32* nonnull %6, i32 %2)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %4
  %14 = load i32, i32* %6, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %13
  %17 = call i32 @CBS_get_asn1_uint64(%struct.cbs_st* nonnull %5, i64* %1)
  %18 = icmp ne i32 %17, 0
  %19 = load i64, i64* %8, align 8
  %20 = icmp eq i64 %19, 0
  %21 = and i1 %18, %20
  br i1 %21, label %23, label %24

22:                                               ; preds = %13
  store i64 %3, i64* %1, align 8
  br label %23

23:                                               ; preds = %16, %22
  br label %24

24:                                               ; preds = %16, %4, %23
  %25 = phi i32 [ 1, %23 ], [ 0, %4 ], [ 0, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_get_optional_asn1_bool(%struct.cbs_st* nocapture, i32* nocapture, i32, i32) local_unnamed_addr #1 {
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.cbs_st, align 8
  %8 = alloca %struct.cbs_st, align 8
  %9 = alloca i32, align 4
  %10 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %7, i64 0, i32 1
  %12 = bitcast %struct.cbs_st* %8 to i8*
  %13 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  %14 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %8, i64 0, i32 0
  %15 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %8, i64 0, i32 1
  %16 = bitcast i32* %9 to i8*
  %17 = bitcast %struct.cbs_st* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #11
  store i32 -1431655766, i32* %9, align 4
  %18 = call i32 @CBS_get_optional_asn1(%struct.cbs_st* %0, %struct.cbs_st* nonnull %7, i32* nonnull %9, i32 %2)
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %56, label %20

20:                                               ; preds = %4
  %21 = load i32, i32* %9, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %55, label %23

23:                                               ; preds = %20
  %24 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  store i64 -6148914691236517206, i64* %5, align 8
  %25 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #11
  store i32 -1431655766, i32* %6, align 4
  %26 = call fastcc i32 @cbs_get_any_asn1_element(%struct.cbs_st* nonnull %7, %struct.cbs_st* nonnull %8, i32* nonnull %6, i64* nonnull %5, i32* null, i32 0) #11
  %27 = icmp ne i32 %26, 0
  %28 = load i32, i32* %6, align 4
  %29 = icmp eq i32 %28, 1
  %30 = and i1 %27, %29
  br i1 %30, label %33, label %31

31:                                               ; preds = %23
  %32 = load i64, i64* %15, align 8
  br label %41

33:                                               ; preds = %23
  %34 = load i64, i64* %5, align 8
  %35 = load i64, i64* %15, align 8
  %36 = icmp ult i64 %35, %34
  br i1 %36, label %41, label %37

37:                                               ; preds = %33
  %38 = load i8*, i8** %14, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 %34
  store i8* %39, i8** %14, align 8
  %40 = sub i64 %35, %34
  store i64 %40, i64* %15, align 8
  br label %41

41:                                               ; preds = %31, %33, %37
  %42 = phi i64 [ %32, %31 ], [ %40, %37 ], [ %35, %33 ]
  %43 = phi i1 [ false, %31 ], [ true, %37 ], [ false, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  %44 = icmp eq i64 %42, 1
  %45 = and i1 %43, %44
  %46 = load i64, i64* %11, align 8
  %47 = icmp eq i64 %46, 0
  %48 = and i1 %45, %47
  br i1 %48, label %49, label %56

49:                                               ; preds = %41
  %50 = load i8*, i8** %14, align 8
  %51 = load i8, i8* %50, align 1
  switch i8 %51, label %56 [
    i8 0, label %53
    i8 -1, label %52
  ]

52:                                               ; preds = %49
  br label %53

53:                                               ; preds = %49, %52
  %54 = phi i32 [ 1, %52 ], [ 0, %49 ]
  store i32 %54, i32* %1, align 4
  br label %56

55:                                               ; preds = %20
  store i32 %3, i32* %1, align 4
  br label %56

56:                                               ; preds = %41, %55, %53, %49, %4
  %57 = phi i32 [ 0, %4 ], [ 0, %49 ], [ 0, %41 ], [ 1, %53 ], [ 1, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_is_valid_asn1_bitstring(%struct.cbs_st* nocapture readonly) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %26, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %3, i64 1
  %9 = load i8, i8* %3, align 1
  %10 = icmp ugt i8 %9, 7
  br i1 %10, label %26, label %11

11:                                               ; preds = %7
  %12 = icmp eq i8 %9, 0
  br i1 %12, label %26, label %13

13:                                               ; preds = %11
  %14 = icmp eq i64 %5, 1
  br i1 %14, label %26, label %15

15:                                               ; preds = %13
  %16 = add i64 %5, -2
  %17 = getelementptr inbounds i8, i8* %8, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = zext i8 %9 to i32
  %21 = shl nsw i32 -1, %20
  %22 = xor i32 %21, -1
  %23 = and i32 %19, %22
  %24 = icmp eq i32 %23, 0
  %25 = zext i1 %24 to i32
  br label %26

26:                                               ; preds = %13, %1, %15, %11, %7
  %27 = phi i32 [ 0, %7 ], [ 1, %11 ], [ %25, %15 ], [ 0, %1 ], [ 0, %13 ]
  ret i32 %27
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @CBS_asn1_bitstring_has_bit(%struct.cbs_st* nocapture readonly, i32) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %41, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds i8, i8* %4, i64 1
  %10 = load i8, i8* %4, align 1
  %11 = icmp ugt i8 %10, 7
  br i1 %11, label %41, label %12

12:                                               ; preds = %8
  %13 = icmp eq i8 %10, 0
  br i1 %13, label %26, label %14

14:                                               ; preds = %12
  %15 = icmp eq i64 %6, 1
  br i1 %15, label %41, label %16

16:                                               ; preds = %14
  %17 = add i64 %6, -2
  %18 = getelementptr inbounds i8, i8* %9, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = zext i8 %10 to i32
  %22 = shl nsw i32 -1, %21
  %23 = xor i32 %22, -1
  %24 = and i32 %20, %23
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %41

26:                                               ; preds = %16, %12
  %27 = lshr i32 %1, 3
  %28 = add nuw nsw i32 %27, 1
  %29 = zext i32 %28 to i64
  %30 = icmp ugt i64 %6, %29
  br i1 %30, label %31, label %41

31:                                               ; preds = %26
  %32 = and i32 %1, 7
  %33 = xor i32 %32, 7
  %34 = getelementptr inbounds i8, i8* %4, i64 %29
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = shl i32 1, %33
  %38 = and i32 %37, %36
  %39 = icmp ne i32 %38, 0
  %40 = zext i1 %39 to i32
  br label %41

41:                                               ; preds = %16, %14, %2, %8, %26, %31
  %42 = phi i32 [ 0, %16 ], [ 0, %26 ], [ %40, %31 ], [ 0, %8 ], [ 0, %2 ], [ 0, %14 ]
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @CBS_asn1_oid_to_text(%struct.cbs_st* nocapture readonly) local_unnamed_addr #1 {
  %2 = alloca [24 x i8], align 16
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = call i32 @CBB_init(%struct.cbb_st* nonnull %3, i64 32) #11
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %107, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %0, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %14

14:                                               ; preds = %28, %9
  %15 = phi i8* [ %11, %9 ], [ %20, %28 ]
  %16 = phi i64 [ %13, %9 ], [ %21, %28 ]
  %17 = phi i64 [ 0, %9 ], [ %32, %28 ]
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %107, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds i8, i8* %15, i64 1
  %21 = add i64 %16, -1
  %22 = load i8, i8* %15, align 1
  %23 = icmp ugt i64 %17, 144115188075855871
  br i1 %23, label %107, label %24

24:                                               ; preds = %19
  %25 = icmp eq i64 %17, 0
  %26 = icmp eq i8 %22, -128
  %27 = and i1 %25, %26
  br i1 %27, label %107, label %28

28:                                               ; preds = %24
  %29 = shl i64 %17, 7
  %30 = and i8 %22, 127
  %31 = zext i8 %30 to i64
  %32 = or i64 %29, %31
  %33 = icmp slt i8 %22, 0
  br i1 %33, label %14, label %34

34:                                               ; preds = %28
  %35 = icmp ugt i64 %32, 79
  br i1 %35, label %36, label %46

36:                                               ; preds = %34
  %37 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #11
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %107, label %39

39:                                               ; preds = %36
  %40 = add i64 %32, -80
  %41 = getelementptr inbounds [24 x i8], [24 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %41, i8 -86, i64 24, i1 false) #11
  %42 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %41, i64 24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 %40) #11
  %43 = call i64 @strlen(i8* nonnull %41) #12
  %44 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %3, i8* nonnull %41, i64 %43) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #11
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %107, label %65

46:                                               ; preds = %34
  %47 = trunc i64 %32 to i8
  %48 = udiv i8 %47, 40
  %49 = urem i8 %47, 40
  %50 = zext i8 %48 to i64
  %51 = getelementptr inbounds [24 x i8], [24 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %51, i8 -86, i64 24, i1 false) #11
  %52 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %51, i64 24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 %50) #11
  %53 = call i64 @strlen(i8* nonnull %51) #12
  %54 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %3, i8* nonnull %51, i64 %53) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #11
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %107, label %56

56:                                               ; preds = %46
  %57 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %3, i8 zeroext 46) #11
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %107, label %59

59:                                               ; preds = %56
  %60 = zext i8 %49 to i64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %51, i8 -86, i64 24, i1 false) #11
  %61 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %51, i64 24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 %60) #11
  %62 = call i64 @strlen(i8* nonnull %51) #12
  %63 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %3, i8* nonnull %51, i64 %62) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #11
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %107, label %65

65:                                               ; preds = %39, %59
  %66 = getelementptr inbounds [24 x i8], [24 x i8]* %2, i64 0, i64 0
  br label %67

67:                                               ; preds = %94, %65
  %68 = phi i64 [ %21, %65 ], [ %78, %94 ]
  %69 = phi i8* [ %20, %65 ], [ %77, %94 ]
  %70 = icmp eq i64 %68, 0
  br i1 %70, label %99, label %71

71:                                               ; preds = %67, %85
  %72 = phi i8* [ %77, %85 ], [ %69, %67 ]
  %73 = phi i64 [ %78, %85 ], [ %68, %67 ]
  %74 = phi i64 [ %89, %85 ], [ 0, %67 ]
  %75 = icmp eq i64 %73, 0
  br i1 %75, label %107, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds i8, i8* %72, i64 1
  %78 = add i64 %73, -1
  %79 = load i8, i8* %72, align 1
  %80 = icmp ugt i64 %74, 144115188075855871
  br i1 %80, label %107, label %81

81:                                               ; preds = %76
  %82 = icmp eq i64 %74, 0
  %83 = icmp eq i8 %79, -128
  %84 = and i1 %82, %83
  br i1 %84, label %107, label %85

85:                                               ; preds = %81
  %86 = shl i64 %74, 7
  %87 = and i8 %79, 127
  %88 = zext i8 %87 to i64
  %89 = or i64 %86, %88
  %90 = icmp slt i8 %79, 0
  br i1 %90, label %71, label %91

91:                                               ; preds = %85
  %92 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %3, i8 zeroext 46) #11
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %107, label %94

94:                                               ; preds = %91
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %66, i8 -86, i64 24, i1 false) #11
  %95 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %66, i64 24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 %89) #11
  %96 = call i64 @strlen(i8* nonnull %66) #12
  %97 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %3, i8* nonnull %66, i64 %96) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #11
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %107, label %67

99:                                               ; preds = %67
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  store i64 -6148914691236517206, i64* %5, align 8
  %100 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %3, i8 zeroext 0) #11
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %107, label %102

102:                                              ; preds = %99
  %103 = call i32 @CBB_finish(%struct.cbb_st* nonnull %3, i8** nonnull %4, i64* nonnull %5) #11
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %102
  %106 = load i8*, i8** %4, align 8
  br label %108

107:                                              ; preds = %14, %24, %19, %94, %91, %71, %81, %76, %39, %36, %102, %99, %59, %56, %46, %1
  call void @CBB_cleanup(%struct.cbb_st* nonnull %3) #11
  br label %108

108:                                              ; preds = %107, %105
  %109 = phi i8* [ null, %107 ], [ %106, %105 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret i8* %109
}

declare i32 @CBB_init(%struct.cbb_st*, i64) local_unnamed_addr #4

declare i32 @CBB_add_bytes(%struct.cbb_st*, i8*, i64) local_unnamed_addr #4

declare i32 @CBB_add_u8(%struct.cbb_st*, i8 zeroext) local_unnamed_addr #4

declare i32 @CBB_finish(%struct.cbb_st*, i8**, i64*) local_unnamed_addr #4

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #9

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #9

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.bswap.i64(i64) #9

declare i32 @BIO_snprintf(i8*, i64, i8*, ...) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.isvectorized", i32 1}
!6 = distinct !{!6, !7, !5}
!7 = !{!"llvm.loop.unroll.runtime.disable"}
