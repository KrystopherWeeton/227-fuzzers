; ModuleID = '../../third_party/boringssl/src/crypto/asn1/tasn_fre.c'
source_filename = "../../third_party/boringssl/src/crypto/asn1/tasn_fre.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ASN1_VALUE_st = type opaque
%struct.ASN1_ITEM_st = type { i8, i64, %struct.ASN1_TEMPLATE_st*, i64, i8*, i64, i8* }
%struct.ASN1_TEMPLATE_st = type { i64, i64, i64, i8*, %struct.ASN1_ITEM_st* }
%struct.ASN1_AUX_st = type { i8*, i32, i32, i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)*, i32 }
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }

; Function Attrs: nounwind ssp uwtable
define hidden void @ASN1_item_free(%struct.ASN1_VALUE_st*, %struct.ASN1_ITEM_st*) local_unnamed_addr #0 {
  %3 = alloca %struct.ASN1_VALUE_st*, align 8
  store %struct.ASN1_VALUE_st* %0, %struct.ASN1_VALUE_st** %3, align 8
  call void @asn1_item_combine_free(%struct.ASN1_VALUE_st** nonnull %3, %struct.ASN1_ITEM_st* %1, i32 0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @asn1_item_combine_free(%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 4
  %5 = bitcast i8** %4 to %struct.ASN1_AUX_st**
  %6 = load %struct.ASN1_AUX_st*, %struct.ASN1_AUX_st** %5, align 8
  %7 = icmp eq %struct.ASN1_VALUE_st** %0, null
  br i1 %7, label %102, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 0
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %0, align 8
  %14 = icmp eq %struct.ASN1_VALUE_st* %13, null
  br i1 %14, label %102, label %15

15:                                               ; preds = %12, %8
  %16 = icmp eq %struct.ASN1_AUX_st* %6, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.ASN1_AUX_st, %struct.ASN1_AUX_st* %6, i64 0, i32 3
  %19 = load i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)*, i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)** %18, align 8
  %20 = icmp eq i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %17, %15
  br label %22

22:                                               ; preds = %17, %21
  %23 = phi i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)* [ null, %21 ], [ %19, %17 ]
  %24 = sext i8 %10 to i32
  switch i32 %24, label %102 [
    i32 0, label %25
    i32 5, label %31
    i32 2, label %32
    i32 4, label %58
    i32 1, label %66
  ]

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 2
  %27 = load %struct.ASN1_TEMPLATE_st*, %struct.ASN1_TEMPLATE_st** %26, align 8
  %28 = icmp eq %struct.ASN1_TEMPLATE_st* %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  tail call void @ASN1_template_free(%struct.ASN1_VALUE_st** nonnull %0, %struct.ASN1_TEMPLATE_st* nonnull %27)
  br label %102

30:                                               ; preds = %25
  tail call void @ASN1_primitive_free(%struct.ASN1_VALUE_st** nonnull %0, %struct.ASN1_ITEM_st* %1)
  br label %102

31:                                               ; preds = %22
  tail call void @ASN1_primitive_free(%struct.ASN1_VALUE_st** nonnull %0, %struct.ASN1_ITEM_st* %1)
  br label %102

32:                                               ; preds = %22
  %33 = icmp ne i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)* %23, null
  br i1 %33, label %34, label %37

34:                                               ; preds = %32
  %35 = tail call i32 %23(i32 2, %struct.ASN1_VALUE_st** nonnull %0, %struct.ASN1_ITEM_st* %1, i8* null) #3
  %36 = icmp eq i32 %35, 2
  br i1 %36, label %102, label %37

37:                                               ; preds = %34, %32
  %38 = tail call i32 @asn1_get_choice_selector(%struct.ASN1_VALUE_st** nonnull %0, %struct.ASN1_ITEM_st* %1) #3
  %39 = icmp sgt i32 %38, -1
  br i1 %39, label %40, label %50

40:                                               ; preds = %37
  %41 = sext i32 %38 to i64
  %42 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 3
  %43 = load i64, i64* %42, align 8
  %44 = icmp sgt i64 %43, %41
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 2
  %47 = load %struct.ASN1_TEMPLATE_st*, %struct.ASN1_TEMPLATE_st** %46, align 8
  %48 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %47, i64 %41
  %49 = tail call %struct.ASN1_VALUE_st** @asn1_get_field_ptr(%struct.ASN1_VALUE_st** nonnull %0, %struct.ASN1_TEMPLATE_st* %48) #3
  tail call void @ASN1_template_free(%struct.ASN1_VALUE_st** %49, %struct.ASN1_TEMPLATE_st* %48)
  br label %50

50:                                               ; preds = %45, %40, %37
  br i1 %33, label %51, label %53

51:                                               ; preds = %50
  %52 = tail call i32 %23(i32 3, %struct.ASN1_VALUE_st** nonnull %0, %struct.ASN1_ITEM_st* %1, i8* null) #3
  br label %53

53:                                               ; preds = %51, %50
  %54 = icmp eq i32 %2, 0
  br i1 %54, label %55, label %102

55:                                               ; preds = %53
  %56 = bitcast %struct.ASN1_VALUE_st** %0 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @OPENSSL_free(i8* %57) #3
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %0, align 8
  br label %102

58:                                               ; preds = %22
  %59 = icmp eq %struct.ASN1_AUX_st* %6, null
  br i1 %59, label %102, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.ASN1_AUX_st, %struct.ASN1_AUX_st* %6, i64 0, i32 3
  %62 = bitcast i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)** %61 to void (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)**
  %63 = load void (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)*, void (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)** %62, align 8
  %64 = icmp eq void (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)* %63, null
  br i1 %64, label %102, label %65

65:                                               ; preds = %60
  tail call void %63(%struct.ASN1_VALUE_st** nonnull %0, %struct.ASN1_ITEM_st* %1) #3
  br label %102

66:                                               ; preds = %22
  %67 = tail call i32 @asn1_refcount_dec_and_test_zero(%struct.ASN1_VALUE_st** nonnull %0, %struct.ASN1_ITEM_st* %1) #3
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %102, label %69

69:                                               ; preds = %66
  %70 = icmp ne i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)* %23, null
  br i1 %70, label %71, label %74

71:                                               ; preds = %69
  %72 = tail call i32 %23(i32 2, %struct.ASN1_VALUE_st** nonnull %0, %struct.ASN1_ITEM_st* %1, i8* null) #3
  %73 = icmp eq i32 %72, 2
  br i1 %73, label %102, label %74

74:                                               ; preds = %71, %69
  tail call void @asn1_enc_free(%struct.ASN1_VALUE_st** nonnull %0, %struct.ASN1_ITEM_st* %1) #3
  %75 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 3
  %76 = load i64, i64* %75, align 8
  %77 = icmp sgt i64 %76, 0
  br i1 %77, label %78, label %94

78:                                               ; preds = %74
  %79 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 2
  %80 = load %struct.ASN1_TEMPLATE_st*, %struct.ASN1_TEMPLATE_st** %79, align 8
  %81 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %80, i64 %76
  br label %82

82:                                               ; preds = %78, %90
  %83 = phi i64 [ 0, %78 ], [ %91, %90 ]
  %84 = phi %struct.ASN1_TEMPLATE_st* [ %81, %78 ], [ %85, %90 ]
  %85 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %84, i64 -1
  %86 = tail call %struct.ASN1_TEMPLATE_st* @asn1_do_adb(%struct.ASN1_VALUE_st** nonnull %0, %struct.ASN1_TEMPLATE_st* %85, i32 0) #3
  %87 = icmp eq %struct.ASN1_TEMPLATE_st* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %82
  %89 = tail call %struct.ASN1_VALUE_st** @asn1_get_field_ptr(%struct.ASN1_VALUE_st** nonnull %0, %struct.ASN1_TEMPLATE_st* nonnull %86) #3
  tail call void @ASN1_template_free(%struct.ASN1_VALUE_st** %89, %struct.ASN1_TEMPLATE_st* nonnull %86)
  br label %90

90:                                               ; preds = %82, %88
  %91 = add nuw nsw i64 %83, 1
  %92 = load i64, i64* %75, align 8
  %93 = icmp sgt i64 %92, %91
  br i1 %93, label %82, label %94

94:                                               ; preds = %90, %74
  br i1 %70, label %95, label %97

95:                                               ; preds = %94
  %96 = tail call i32 %23(i32 3, %struct.ASN1_VALUE_st** nonnull %0, %struct.ASN1_ITEM_st* %1, i8* null) #3
  br label %97

97:                                               ; preds = %95, %94
  %98 = icmp eq i32 %2, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %97
  %100 = bitcast %struct.ASN1_VALUE_st** %0 to i8**
  %101 = load i8*, i8** %100, align 8
  tail call void @OPENSSL_free(i8* %101) #3
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %0, align 8
  br label %102

102:                                              ; preds = %31, %22, %30, %29, %55, %65, %99, %97, %58, %60, %53, %71, %66, %34, %12, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ASN1_item_ex_free(%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*) local_unnamed_addr #0 {
  tail call void @asn1_item_combine_free(%struct.ASN1_VALUE_st** %0, %struct.ASN1_ITEM_st* %1, i32 0)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @ASN1_template_free(%struct.ASN1_VALUE_st**, %struct.ASN1_TEMPLATE_st* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca %struct.ASN1_VALUE_st*, align 8
  %4 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 6
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = bitcast %struct.ASN1_VALUE_st** %0 to %struct.stack_st**
  %10 = load %struct.stack_st*, %struct.stack_st** %9, align 8
  %11 = call i64 @sk_num(%struct.stack_st* %10) #3
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %8
  %14 = bitcast %struct.ASN1_VALUE_st** %3 to i8*
  %15 = bitcast %struct.ASN1_VALUE_st** %3 to i8**
  %16 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %1, i64 0, i32 4
  br label %17

17:                                               ; preds = %13, %17
  %18 = phi i64 [ 0, %13 ], [ %21, %17 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #3
  store %struct.ASN1_VALUE_st* inttoptr (i64 -6148914691236517206 to %struct.ASN1_VALUE_st*), %struct.ASN1_VALUE_st** %3, align 8
  %19 = call i8* @sk_value(%struct.stack_st* %10, i64 %18) #3
  store i8* %19, i8** %15, align 8
  %20 = load %struct.ASN1_ITEM_st*, %struct.ASN1_ITEM_st** %16, align 8
  call void @asn1_item_combine_free(%struct.ASN1_VALUE_st** nonnull %3, %struct.ASN1_ITEM_st* %20, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #3
  %21 = add nuw i64 %18, 1
  %22 = call i64 @sk_num(%struct.stack_st* %10) #3
  %23 = icmp ult i64 %21, %22
  br i1 %23, label %17, label %24

24:                                               ; preds = %17, %8
  call void @sk_free(%struct.stack_st* %10) #3
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %0, align 8
  br label %30

25:                                               ; preds = %2
  %26 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %1, i64 0, i32 4
  %27 = load %struct.ASN1_ITEM_st*, %struct.ASN1_ITEM_st** %26, align 8
  %28 = trunc i64 %5 to i32
  %29 = and i32 %28, 1024
  tail call void @asn1_item_combine_free(%struct.ASN1_VALUE_st** %0, %struct.ASN1_ITEM_st* %27, i32 %29)
  br label %30

30:                                               ; preds = %25, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ASN1_primitive_free(%struct.ASN1_VALUE_st** nocapture, %struct.ASN1_ITEM_st* readonly) local_unnamed_addr #0 {
  %3 = icmp ne %struct.ASN1_ITEM_st* %1, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = bitcast %struct.ASN1_VALUE_st** %0 to %struct.asn1_type_st**
  %6 = load %struct.asn1_type_st*, %struct.asn1_type_st** %5, align 8
  %7 = getelementptr inbounds %struct.asn1_type_st, %struct.asn1_type_st* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.asn1_type_st, %struct.asn1_type_st* %6, i64 0, i32 1
  %10 = bitcast %union.anon* %9 to %struct.ASN1_VALUE_st**
  %11 = icmp eq i32 %8, 1
  br i1 %11, label %43, label %12

12:                                               ; preds = %4
  %13 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %10, align 8
  %14 = icmp eq %struct.ASN1_VALUE_st* %13, null
  br i1 %14, label %55, label %30

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 0
  %17 = load i8, i8* %16, align 8
  %18 = icmp eq i8 %17, 5
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %0, align 8
  %21 = icmp eq %struct.ASN1_VALUE_st* %20, null
  br i1 %21, label %55, label %49

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = trunc i64 %24 to i32
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %37, label %27

27:                                               ; preds = %22
  %28 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %0, align 8
  %29 = icmp eq %struct.ASN1_VALUE_st* %28, null
  br i1 %29, label %55, label %30

30:                                               ; preds = %12, %27
  %31 = phi i32 [ %25, %27 ], [ %8, %12 ]
  %32 = phi %struct.ASN1_VALUE_st** [ %0, %27 ], [ %10, %12 ]
  switch i32 %31, label %49 [
    i32 6, label %33
    i32 1, label %36
    i32 5, label %53
    i32 -4, label %46
  ]

33:                                               ; preds = %30
  %34 = bitcast %struct.ASN1_VALUE_st** %32 to %struct.asn1_object_st**
  %35 = load %struct.asn1_object_st*, %struct.asn1_object_st** %34, align 8
  tail call void @ASN1_OBJECT_free(%struct.asn1_object_st* %35) #3
  br label %53

36:                                               ; preds = %30
  br i1 %3, label %37, label %43

37:                                               ; preds = %22, %36
  %38 = phi %struct.ASN1_VALUE_st** [ %32, %36 ], [ %0, %22 ]
  %39 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %1, i64 0, i32 5
  %40 = load i64, i64* %39, align 8
  %41 = trunc i64 %40 to i32
  %42 = bitcast %struct.ASN1_VALUE_st** %38 to i32*
  store i32 %41, i32* %42, align 4
  br label %55

43:                                               ; preds = %4, %36
  %44 = phi %struct.ASN1_VALUE_st** [ %32, %36 ], [ %10, %4 ]
  %45 = bitcast %struct.ASN1_VALUE_st** %44 to i32*
  store i32 -1, i32* %45, align 4
  br label %55

46:                                               ; preds = %30
  tail call void @ASN1_primitive_free(%struct.ASN1_VALUE_st** %32, %struct.ASN1_ITEM_st* null)
  %47 = bitcast %struct.ASN1_VALUE_st** %32 to i8**
  %48 = load i8*, i8** %47, align 8
  tail call void @OPENSSL_free(i8* %48) #3
  br label %53

49:                                               ; preds = %19, %30
  %50 = phi %struct.ASN1_VALUE_st** [ %32, %30 ], [ %0, %19 ]
  %51 = bitcast %struct.ASN1_VALUE_st** %50 to %struct.asn1_string_st**
  %52 = load %struct.asn1_string_st*, %struct.asn1_string_st** %51, align 8
  tail call void @ASN1_STRING_free(%struct.asn1_string_st* %52) #3
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %50, align 8
  br label %53

53:                                               ; preds = %49, %46, %30, %33
  %54 = phi %struct.ASN1_VALUE_st** [ %50, %49 ], [ %32, %46 ], [ %32, %30 ], [ %32, %33 ]
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %54, align 8
  br label %55

55:                                               ; preds = %37, %43, %27, %19, %12, %53
  ret void
}

declare i32 @asn1_get_choice_selector(%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*) local_unnamed_addr #2

declare %struct.ASN1_VALUE_st** @asn1_get_field_ptr(%struct.ASN1_VALUE_st**, %struct.ASN1_TEMPLATE_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

declare i32 @asn1_refcount_dec_and_test_zero(%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*) local_unnamed_addr #2

declare void @asn1_enc_free(%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*) local_unnamed_addr #2

declare %struct.ASN1_TEMPLATE_st* @asn1_do_adb(%struct.ASN1_VALUE_st**, %struct.ASN1_TEMPLATE_st*, i32) local_unnamed_addr #2

declare void @ASN1_OBJECT_free(%struct.asn1_object_st*) local_unnamed_addr #2

declare void @ASN1_STRING_free(%struct.asn1_string_st*) local_unnamed_addr #2

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

declare void @sk_free(%struct.stack_st*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
