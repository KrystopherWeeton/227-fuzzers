; ModuleID = '../../ui/compositor/closure_animation_observer.cc'
source_filename = "../../ui/compositor/closure_animation_observer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::ClosureAnimationObserver" = type { %"class.ui::ImplicitAnimationObserver", %"class.base::OnceCallback" }
%"class.ui::ImplicitAnimationObserver" = type { %"class.ui::LayerAnimationObserver", i8, %"class.std::__1::map", i8, %"class.base::WeakPtrFactory" }
%"class.ui::LayerAnimationObserver" = type { i32 (...)**, %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree.4" }
%"class.std::__1::__tree.4" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.19 }
%class.scoped_refptr.19 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.20", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.20" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.ui::LayerAnimationSequence" = type opaque

$_ZN2ui22LayerAnimationObserver26OnLayerAnimationWillRepeatEPNS_22LayerAnimationSequenceE = comdat any

$_ZN2ui22LayerAnimationObserver28OnAnimatorAttachedToTimelineEv = comdat any

$_ZN2ui22LayerAnimationObserver30OnAnimatorDetachedFromTimelineEv = comdat any

$_ZN2ui25ImplicitAnimationObserver29OnImplicitAnimationsScheduledEv = comdat any

@_ZTVN2ui24ClosureAnimationObserverE = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::LayerAnimationObserver"*, %"class.ui::LayerAnimationSequence"*)* @_ZN2ui22LayerAnimationObserver23OnLayerAnimationStartedEPNS_22LayerAnimationSequenceE to i8*), i8* bitcast (void (%"class.ui::ImplicitAnimationObserver"*, %"class.ui::LayerAnimationSequence"*)* @_ZN2ui25ImplicitAnimationObserver21OnLayerAnimationEndedEPNS_22LayerAnimationSequenceE to i8*), i8* bitcast (void (%"class.ui::LayerAnimationObserver"*, %"class.ui::LayerAnimationSequence"*)* @_ZN2ui22LayerAnimationObserver26OnLayerAnimationWillRepeatEPNS_22LayerAnimationSequenceE to i8*), i8* bitcast (void (%"class.ui::ImplicitAnimationObserver"*, %"class.ui::LayerAnimationSequence"*)* @_ZN2ui25ImplicitAnimationObserver23OnLayerAnimationAbortedEPNS_22LayerAnimationSequenceE to i8*), i8* bitcast (void (%"class.ui::ImplicitAnimationObserver"*, %"class.ui::LayerAnimationSequence"*)* @_ZN2ui25ImplicitAnimationObserver25OnLayerAnimationScheduledEPNS_22LayerAnimationSequenceE to i8*), i8* bitcast (void (%"class.ui::ClosureAnimationObserver"*)* @_ZN2ui24ClosureAnimationObserverD2Ev to i8*), i8* bitcast (void (%"class.ui::ClosureAnimationObserver"*)* @_ZN2ui24ClosureAnimationObserverD0Ev to i8*), i8* bitcast (i1 (%"class.ui::LayerAnimationObserver"*)* @_ZNK2ui22LayerAnimationObserver41RequiresNotificationWhenAnimatorDestroyedEv to i8*), i8* bitcast (void (%"class.ui::ImplicitAnimationObserver"*, %"class.ui::LayerAnimationSequence"*)* @_ZN2ui25ImplicitAnimationObserver20OnAttachedToSequenceEPNS_22LayerAnimationSequenceE to i8*), i8* bitcast (void (%"class.ui::ImplicitAnimationObserver"*, %"class.ui::LayerAnimationSequence"*)* @_ZN2ui25ImplicitAnimationObserver22OnDetachedFromSequenceEPNS_22LayerAnimationSequenceE to i8*), i8* bitcast (void (%"class.ui::LayerAnimationObserver"*)* @_ZN2ui22LayerAnimationObserver28OnAnimatorAttachedToTimelineEv to i8*), i8* bitcast (void (%"class.ui::LayerAnimationObserver"*)* @_ZN2ui22LayerAnimationObserver30OnAnimatorDetachedFromTimelineEv to i8*), i8* bitcast (void (%"class.ui::ImplicitAnimationObserver"*)* @_ZN2ui25ImplicitAnimationObserver29OnImplicitAnimationsScheduledEv to i8*), i8* bitcast (void (%"class.ui::ClosureAnimationObserver"*)* @_ZN2ui24ClosureAnimationObserver29OnImplicitAnimationsCompletedEv to i8*)] }, align 8

@_ZN2ui24ClosureAnimationObserverC1EN4base12OnceCallbackIFvvEEE = hidden unnamed_addr alias void (%"class.ui::ClosureAnimationObserver"*, %"class.base::OnceCallback"*), void (%"class.ui::ClosureAnimationObserver"*, %"class.base::OnceCallback"*)* @_ZN2ui24ClosureAnimationObserverC2EN4base12OnceCallbackIFvvEEE
@_ZN2ui24ClosureAnimationObserverD1Ev = hidden unnamed_addr alias void (%"class.ui::ClosureAnimationObserver"*), void (%"class.ui::ClosureAnimationObserver"*)* @_ZN2ui24ClosureAnimationObserverD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui24ClosureAnimationObserverC2EN4base12OnceCallbackIFvvEEE(%"class.ui::ClosureAnimationObserver"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::ClosureAnimationObserver", %"class.ui::ClosureAnimationObserver"* %0, i64 0, i32 0
  tail call void @_ZN2ui25ImplicitAnimationObserverC2Ev(%"class.ui::ImplicitAnimationObserver"* %3) #5
  %4 = getelementptr inbounds %"class.ui::ClosureAnimationObserver", %"class.ui::ClosureAnimationObserver"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN2ui24ClosureAnimationObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.ui::ClosureAnimationObserver", %"class.ui::ClosureAnimationObserver"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  ret void
}

declare void @_ZN2ui25ImplicitAnimationObserverC2Ev(%"class.ui::ImplicitAnimationObserver"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui24ClosureAnimationObserverD2Ev(%"class.ui::ClosureAnimationObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::ClosureAnimationObserver", %"class.ui::ClosureAnimationObserver"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN2ui24ClosureAnimationObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::ClosureAnimationObserver", %"class.ui::ClosureAnimationObserver"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #5
  %4 = getelementptr inbounds %"class.ui::ClosureAnimationObserver", %"class.ui::ClosureAnimationObserver"* %0, i64 0, i32 0
  tail call void @_ZN2ui25ImplicitAnimationObserverD2Ev(%"class.ui::ImplicitAnimationObserver"* %4) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui25ImplicitAnimationObserverD2Ev(%"class.ui::ImplicitAnimationObserver"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui24ClosureAnimationObserverD0Ev(%"class.ui::ClosureAnimationObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::ClosureAnimationObserver", %"class.ui::ClosureAnimationObserver"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN2ui24ClosureAnimationObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::ClosureAnimationObserver", %"class.ui::ClosureAnimationObserver"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #5
  %4 = getelementptr inbounds %"class.ui::ClosureAnimationObserver", %"class.ui::ClosureAnimationObserver"* %0, i64 0, i32 0
  tail call void @_ZN2ui25ImplicitAnimationObserverD2Ev(%"class.ui::ImplicitAnimationObserver"* %4) #5
  %5 = bitcast %"class.ui::ClosureAnimationObserver"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui24ClosureAnimationObserver29OnImplicitAnimationsCompletedEv(%"class.ui::ClosureAnimationObserver"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.ui::ClosureAnimationObserver", %"class.ui::ClosureAnimationObserver"* %0, i64 0, i32 1
  %4 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #5
  %5 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %7, i64* %8, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %10 = inttoptr i64 %7 to %"class.base::internal::BindStateBase"*
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %10, i64 0, i32 1
  %12 = bitcast void ()** %11 to void (%"class.base::internal::BindStateBase"*)**
  %13 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %12, align 8
  tail call void %13(%"class.base::internal::BindStateBase"* %10) #5
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #5
  %14 = icmp eq %"class.ui::ClosureAnimationObserver"* %0, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.ui::ClosureAnimationObserver"* %0 to void (%"class.ui::ClosureAnimationObserver"*)***
  %17 = load void (%"class.ui::ClosureAnimationObserver"*)**, void (%"class.ui::ClosureAnimationObserver"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.ui::ClosureAnimationObserver"*)*, void (%"class.ui::ClosureAnimationObserver"*)** %17, i64 6
  %19 = load void (%"class.ui::ClosureAnimationObserver"*)*, void (%"class.ui::ClosureAnimationObserver"*)** %18, align 8
  call void %19(%"class.ui::ClosureAnimationObserver"* nonnull %0) #5
  br label %20

20:                                               ; preds = %15, %1
  ret void
}

declare void @_ZN2ui22LayerAnimationObserver23OnLayerAnimationStartedEPNS_22LayerAnimationSequenceE(%"class.ui::LayerAnimationObserver"*, %"class.ui::LayerAnimationSequence"*) unnamed_addr #1

declare void @_ZN2ui25ImplicitAnimationObserver21OnLayerAnimationEndedEPNS_22LayerAnimationSequenceE(%"class.ui::ImplicitAnimationObserver"*, %"class.ui::LayerAnimationSequence"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui22LayerAnimationObserver26OnLayerAnimationWillRepeatEPNS_22LayerAnimationSequenceE(%"class.ui::LayerAnimationObserver"*, %"class.ui::LayerAnimationSequence"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2ui25ImplicitAnimationObserver23OnLayerAnimationAbortedEPNS_22LayerAnimationSequenceE(%"class.ui::ImplicitAnimationObserver"*, %"class.ui::LayerAnimationSequence"*) unnamed_addr #1

declare void @_ZN2ui25ImplicitAnimationObserver25OnLayerAnimationScheduledEPNS_22LayerAnimationSequenceE(%"class.ui::ImplicitAnimationObserver"*, %"class.ui::LayerAnimationSequence"*) unnamed_addr #1

declare zeroext i1 @_ZNK2ui22LayerAnimationObserver41RequiresNotificationWhenAnimatorDestroyedEv(%"class.ui::LayerAnimationObserver"*) unnamed_addr #1

declare void @_ZN2ui25ImplicitAnimationObserver20OnAttachedToSequenceEPNS_22LayerAnimationSequenceE(%"class.ui::ImplicitAnimationObserver"*, %"class.ui::LayerAnimationSequence"*) unnamed_addr #1

declare void @_ZN2ui25ImplicitAnimationObserver22OnDetachedFromSequenceEPNS_22LayerAnimationSequenceE(%"class.ui::ImplicitAnimationObserver"*, %"class.ui::LayerAnimationSequence"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui22LayerAnimationObserver28OnAnimatorAttachedToTimelineEv(%"class.ui::LayerAnimationObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui22LayerAnimationObserver30OnAnimatorDetachedFromTimelineEv(%"class.ui::LayerAnimationObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui25ImplicitAnimationObserver29OnImplicitAnimationsScheduledEv(%"class.ui::ImplicitAnimationObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
