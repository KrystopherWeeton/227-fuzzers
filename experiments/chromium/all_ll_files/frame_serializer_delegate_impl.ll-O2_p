; ModuleID = '../../third_party/blink/renderer/core/frame/frame_serializer_delegate_impl.cc'
source_filename = "../../third_party/blink/renderer/core/frame/frame_serializer_delegate_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr.291 }
%class.scoped_refptr.291 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.292" }
%"class.base::RefCounted.292" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.1018", i32, [4 x i8], %"class.std::__1::unique_ptr.1156", %"class.std::__1::unique_ptr.1156", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.1167", %"class.std::__1::unique_ptr.1173", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.1185", %"class.std::__1::unique_ptr.1191", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.70", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1018" = type { %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.1021", %"class.std::__1::unique_ptr.1027", %"class.std::__1::unique_ptr.1033", %"class.std::__1::unique_ptr.1039", %"class.std::__1::unique_ptr.1045", %"class.std::__1::unique_ptr.1051", %"class.std::__1::unique_ptr.1062", %"class.std::__1::unique_ptr.1069", %"class.std::__1::unique_ptr.1069", %"class.std::__1::unique_ptr.1076", %"class.std::__1::unique_ptr.1083", %"class.std::__1::unique_ptr.1090", %"class.std::__1::unique_ptr.1090", %"class.std::__1::unique_ptr.1097", %"class.std::__1::unique_ptr.1104", %"class.std::__1::unique_ptr.1111", %"class.std::__1::unique_ptr.1136", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.1027" = type { %"class.std::__1::__compressed_pair.1028" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.1029" }
%"struct.std::__1::__compressed_pair_elem.1029" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.1033" = type { %"class.std::__1::__compressed_pair.1034" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.1035" }
%"struct.std::__1::__compressed_pair_elem.1035" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.1039" = type { %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.1051" = type { %"class.std::__1::__compressed_pair.1052" }
%"class.std::__1::__compressed_pair.1052" = type { %"struct.std::__1::__compressed_pair_elem.1053" }
%"struct.std::__1::__compressed_pair_elem.1053" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.1054" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.1054" = type { %"struct.std::__1::__atomic_base.1055" }
%"struct.std::__1::__atomic_base.1055" = type { %"struct.std::__1::__atomic_base.1056" }
%"struct.std::__1::__atomic_base.1056" = type { %"struct.std::__1::__cxx_atomic_impl.1057" }
%"struct.std::__1::__cxx_atomic_impl.1057" = type { %"struct.std::__1::__cxx_atomic_base_impl.1058" }
%"struct.std::__1::__cxx_atomic_base_impl.1058" = type { i64 }
%"class.std::__1::unique_ptr.1062" = type { %"class.std::__1::__compressed_pair.1063" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.1064" }
%"struct.std::__1::__compressed_pair_elem.1064" = type { %"class.blink::Worklist.1065"* }
%"class.blink::Worklist.1065" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.1054" }
%"class.std::__1::unique_ptr.1069" = type { %"class.std::__1::__compressed_pair.1070" }
%"class.std::__1::__compressed_pair.1070" = type { %"struct.std::__1::__compressed_pair_elem.1071" }
%"struct.std::__1::__compressed_pair_elem.1071" = type { %"class.blink::Worklist.1072"* }
%"class.blink::Worklist.1072" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.1054" }
%"class.std::__1::unique_ptr.1076" = type { %"class.std::__1::__compressed_pair.1077" }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.1078" }
%"struct.std::__1::__compressed_pair_elem.1078" = type { %"class.blink::Worklist.1079"* }
%"class.blink::Worklist.1079" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1054" }
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.blink::Worklist.1086"* }
%"class.blink::Worklist.1086" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.1054" }
%"class.std::__1::unique_ptr.1090" = type { %"class.std::__1::__compressed_pair.1091" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.1092" }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"class.blink::Worklist.1093"* }
%"class.blink::Worklist.1093" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1054" }
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"class.blink::Worklist.1100"* }
%"class.blink::Worklist.1100" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.1054" }
%"class.std::__1::unique_ptr.1104" = type { %"class.std::__1::__compressed_pair.1105" }
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.1106" }
%"struct.std::__1::__compressed_pair_elem.1106" = type { %"class.blink::Worklist.1107"* }
%"class.blink::Worklist.1107" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1054" }
%"class.std::__1::unique_ptr.1111" = type { %"class.std::__1::__compressed_pair.1112" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.1113" }
%"struct.std::__1::__compressed_pair_elem.1113" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.1114", %"class.std::__1::__compressed_pair.1122", %"class.std::__1::__compressed_pair.1127", %"class.std::__1::__compressed_pair.1129", [4 x i8] }>
%"class.std::__1::unique_ptr.1114" = type { %"class.std::__1::__compressed_pair.1115" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.1116", %"struct.std::__1::__compressed_pair_elem.1117" }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.1117" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1118" }
%"class.std::__1::__compressed_pair.1118" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { i64 }
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.1123" }
%"struct.std::__1::__compressed_pair_elem.1123" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::__compressed_pair.1129" = type { %"struct.std::__1::__compressed_pair_elem.1130" }
%"struct.std::__1::__compressed_pair_elem.1130" = type { float }
%"class.std::__1::unique_ptr.1136" = type { %"class.std::__1::__compressed_pair.1137" }
%"class.std::__1::__compressed_pair.1137" = type { %"struct.std::__1::__compressed_pair_elem.1138" }
%"struct.std::__1::__compressed_pair_elem.1138" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.1139", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1139" = type { %"class.std::__1::__compressed_pair.1140" }
%"class.std::__1::__compressed_pair.1140" = type { %"struct.std::__1::__compressed_pair_elem.1141" }
%"struct.std::__1::__compressed_pair_elem.1141" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.1148" }
%"class.WTF::Vector.1148" = type { %"class.WTF::VectorBuffer.1149" }
%"class.WTF::VectorBuffer.1149" = type { %"class.WTF::VectorBufferBase.1150" }
%"class.WTF::VectorBufferBase.1150" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.1156" = type { %"class.std::__1::__compressed_pair.1157" }
%"class.std::__1::__compressed_pair.1157" = type { %"struct.std::__1::__compressed_pair_elem.1158" }
%"struct.std::__1::__compressed_pair_elem.1158" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1164" }
%"class.WTF::VectorBuffer.1164" = type { %"class.WTF::VectorBufferBase.1165" }
%"class.WTF::VectorBufferBase.1165" = type { %"struct.std::__1::pair.1166"*, i32, i32 }
%"struct.std::__1::pair.1166" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.1167" = type { %"class.std::__1::__compressed_pair.1168" }
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.1169" }
%"struct.std::__1::__compressed_pair_elem.1169" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.1173" = type { %"class.std::__1::__compressed_pair.1174" }
%"class.std::__1::__compressed_pair.1174" = type { %"struct.std::__1::__compressed_pair_elem.1175" }
%"struct.std::__1::__compressed_pair_elem.1175" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.1179" }
%"class.std::__1::unique_ptr.1179" = type { %"class.std::__1::__compressed_pair.1180" }
%"class.std::__1::__compressed_pair.1180" = type { %"struct.std::__1::__compressed_pair_elem.1181" }
%"struct.std::__1::__compressed_pair_elem.1181" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.1065"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.1072"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.1079"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.1086"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.1093"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.2539", i64 }
%"class.std::__1::vector.2539" = type { %"class.std::__1::__vector_base.2540" }
%"class.std::__1::__vector_base.2540" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.2541" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.2541" = type { %"struct.std::__1::__compressed_pair_elem.2542" }
%"struct.std::__1::__compressed_pair_elem.2542" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.1185" = type { %"class.std::__1::__compressed_pair.1186" }
%"class.std::__1::__compressed_pair.1186" = type { %"struct.std::__1::__compressed_pair_elem.1187" }
%"struct.std::__1::__compressed_pair_elem.1187" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.1191" = type { %"class.std::__1::__compressed_pair.1192" }
%"class.std::__1::__compressed_pair.1192" = type { %"struct.std::__1::__compressed_pair_elem.1193" }
%"struct.std::__1::__compressed_pair_elem.1193" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.1197 }
%class.scoped_refptr.1197 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl.72" }
%"struct.std::__1::__cxx_atomic_impl.72" = type { %"struct.std::__1::__cxx_atomic_base_impl.73" }
%"struct.std::__1::__cxx_atomic_base_impl.73" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.28" }
%"struct.std::__1::atomic.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::FrameSerializerDelegateImpl" = type <{ %"class.blink::FrameSerializer::Delegate", %"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*, %"class.blink::HeapHashSet.2894"*, i8, [7 x i8] }>
%"class.blink::FrameSerializer::Delegate" = type { i32 (...)** }
%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate" = type { i32 (...)** }
%"class.blink::HeapHashSet.2894" = type { %"class.WTF::HashSet.2897" }
%"class.WTF::HashSet.2897" = type { %"class.WTF::HashTable.2898" }
%"class.WTF::HashTable.2898" = type <{ %"class.blink::WeakMember.2900"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2900" = type { %"class.blink::MemberBase.3159" }
%"class.blink::MemberBase.3159" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.293" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.283", %"class.blink::Member.283" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.283", %"class.blink::Member.285", %"class.blink::Member.283", %"class.blink::Member.283", %"class.blink::Member.287" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.285" = type { %"class.blink::MemberBase.286" }
%"class.blink::MemberBase.286" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.687", %"class.blink::Member.689", %"class.blink::Member.285", %"class.blink::Member.691", %"class.blink::Member.691", %"class.blink::Member.713", %"class.blink::Member.715", %"class.blink::Member.717", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.722", %"class.blink::HeapVector.724" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.687" = type { %"class.blink::MemberBase.688" }
%"class.blink::MemberBase.688" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.689" = type { %"class.blink::MemberBase.690" }
%"class.blink::MemberBase.690" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.785", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.793", %"class.WTF::Vector.793", i8, i32, %"class.blink::Member.798", %"class.blink::Member.865", %"class.blink::Member.1923", %"class.blink::Member.1925", %"class.blink::Member.1927", %"class.blink::Member.1929", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1937", %"class.blink::Member.1939", %"class.blink::Member.730", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1941", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.706", %"class.blink::Member.281", %"class.blink::Member.1898", %"class.blink::Member.281", %"class.blink::Member.281", %"class.blink::Member.281", %"class.blink::UserActionElementSet", %"class.blink::Member.1972", double, double, i64, i64, %"class.blink::HeapHashSet.1974", %"class.blink::HeapHashSet.1981", i16, i8, %"class.blink::Member.1988", %"class.blink::Member.1990", %"class.blink::Member.2318", %"class.blink::Member.2320", %"class.blink::TextLinkColors", %"class.blink::Member.2322", i8, [7 x i8], %"class.blink::HeapHashMap.2324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.281", %"class.WTF::Vector.2331", %"class.blink::Member.2336", %"class.blink::Member.2340", i8, %"class.blink::Member.281", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.2342", %"class.blink::HeapVector.2344", %"class.std::__1::unique_ptr.2352", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2358", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.2371", %"class.WTF::Vector.2373", i8, i8, %"class.std::__1::unique_ptr.2378", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.706", %"class.blink::HeapVector.2384", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.2392", i8, i32, %"class.blink::Member.2394", %"class.blink::Member.2396", %"class.blink::Member.2398", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.2400", %"class.WTF::HashMap.2402", %"class.blink::Member.2407", %"class.blink::Member.2409", %"class.blink::Member.2411", %"class.blink::Member.2413", %"class.blink::Member.689", %"class.blink::Member.689", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.2415", i8, i32, %"class.blink::Member.2422", %"class.blink::Member.2424", i32, %"class.blink::Member.2426", %"class.blink::Member.2428", %"class.blink::Member.2430", %"class.std::__1::unique_ptr.2432", i64, %"class.std::__1::unique_ptr.2438", i32, i32, %"class.blink::Member.2449", %"class.blink::Member.2451", %"class.blink::Member.2453", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.2455", %"class.WTF::Vector.1909", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.2461", %"class.blink::Member.2468", %"class.std::__1::unique_ptr.2470", %"class.blink::Member.2476", i8, i8, %"class.WTF::String", %"class.blink::Member.2478", i8, [7 x i8], %"class.blink::HeapHashMap.2480", %"class.blink::HeapObserverSet.2487", %"class.blink::Member.2495", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.2497", i32, i8, i8, %"class.blink::WeakMember.2499", %"class.blink::Member.2500" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.785" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.786" }
%"class.blink::HeapHashMap.786" = type { %"class.WTF::HashMap.789" }
%"class.WTF::HashMap.789" = type { %"class.WTF::HashTable.790" }
%"class.WTF::HashTable.790" = type <{ %"struct.WTF::KeyValuePair.792"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.792" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.793" = type { %"class.WTF::VectorBuffer.794" }
%"class.WTF::VectorBuffer.794" = type { %"class.WTF::VectorBufferBase.795" }
%"class.WTF::VectorBufferBase.795" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.57 }
%class.scoped_refptr.57 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.58", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.58" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.28" }
%"class.blink::Member.798" = type { %"class.blink::MemberBase.799" }
%"class.blink::MemberBase.799" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.957", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.965", %"class.blink::Member.689", %"class.blink::Member.967", i8, %"class.blink::Member.969", %"class.blink::Member.971", %"class.blink::Member.973", %"class.blink::Member.973", %"class.blink::Member.973", %"class.blink::Member.973", %"class.blink::Member.973", %"class.blink::Member.973", %"class.blink::Member.975", %"class.blink::Member.977", %"class.blink::Member.979", %"class.blink::Member.981", %"class.blink::Member.983", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.924", %"class.blink::Member.985", %class.scoped_refptr.987, %"class.blink::HeapHashSet.1251", %"class.blink::Member.1258", %"class.blink::HeapHashMap.1271", %"class.std::__1::unique_ptr.1278", %"class.blink::Member.1284", %"class.blink::Member.1902", %"class.blink::Member.1904", %"class.blink::Member.1906", %"class.WTF::Vector.1909", %"class.util::TokenType", %"class.WTF::HashSet.1914", %"class.WTF::Deque.1918" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member", %"class.blink::Member.18", %"class.blink::Member.20", %"class.blink::Member.22", i8, %"class.WTF::Vector.24" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.13" }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::HeapVector.15"* }
%"class.blink::HeapVector.15" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.16"* }
%"class.WTF::Vector.16" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1", %"class.blink::Member.3", %"class.blink::Member.5", i8, i32, i8, i32, %"class.blink::Member.208", %"class.blink::Member.18", %"class.blink::FrameLifecycle", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.210", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.218", i8, %"class.base::UnguessableToken", %"class.absl::optional.220", %"class.absl::optional.225", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.2779", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2793", %"class.blink::Member.2797", %"class.blink::Member.2799", %"class.blink::Member.2803", %"class.blink::Member.2805", %"class.blink::Member.2807", %"class.blink::Member.2809", %"class.blink::Member.2811", %"class.blink::HeapObserverSet.2813", %"class.blink::Member.2821", %"class.blink::Member.2823", %"class.blink::Member.2825", %"class.blink::Member.2827", %"class.blink::Member.2829", %"class.blink::Member.2831", %"class.blink::Member.2833", %"class.blink::Member.2835", %"class.blink::Member.2837", %"class.blink::Member.2839", %"class.blink::Member.2841", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.2866", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.2873", %"class.blink::Member.1", %"class.blink::Member.1", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2881", %"class.std::__1::unique_ptr.2887", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.2779" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2780" }
%"class.blink::HeapHashMap.2780" = type { %"class.WTF::HashMap.2783" }
%"class.WTF::HashMap.2783" = type { %"class.WTF::HashTable.2784" }
%"class.WTF::HashTable.2784" = type <{ %"struct.WTF::KeyValuePair.2786"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2786" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2787" }
%"class.std::__1::unique_ptr.2787" = type { %"class.std::__1::__compressed_pair.2788" }
%"class.std::__1::__compressed_pair.2788" = type { %"struct.std::__1::__compressed_pair_elem.2789" }
%"struct.std::__1::__compressed_pair_elem.2789" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2793" = type { %"class.blink::MemberBase.2794" }
%"class.blink::MemberBase.2794" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.1", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.2797" = type { %"class.blink::MemberBase.2798" }
%"class.blink::MemberBase.2798" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2799" = type { %"class.blink::MemberBase.2800" }
%"class.blink::MemberBase.2800" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember.2499", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::Member.2803" = type { %"class.blink::MemberBase.2804" }
%"class.blink::MemberBase.2804" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2805" = type { %"class.blink::MemberBase.2806" }
%"class.blink::MemberBase.2806" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2807" = type { %"class.blink::MemberBase.2808" }
%"class.blink::MemberBase.2808" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.2809" = type { %"class.blink::MemberBase.2810" }
%"class.blink::MemberBase.2810" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2811" = type { %"class.blink::MemberBase.2812" }
%"class.blink::MemberBase.2812" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.2813" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2814" }
%"class.blink::HeapHashSet.2814" = type { %"class.WTF::HashSet.2817" }
%"class.WTF::HashSet.2817" = type { %"class.WTF::HashTable.2818" }
%"class.WTF::HashTable.2818" = type <{ %"class.blink::WeakMember.2820"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2820" = type opaque
%"class.blink::Member.2821" = type { %"class.blink::MemberBase.2822" }
%"class.blink::MemberBase.2822" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.2823" = type { %"class.blink::MemberBase.2824" }
%"class.blink::MemberBase.2824" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.2825" = type { %"class.blink::MemberBase.2826" }
%"class.blink::MemberBase.2826" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.2827" = type { %"class.blink::MemberBase.2828" }
%"class.blink::MemberBase.2828" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.2829" = type { %"class.blink::MemberBase.2830" }
%"class.blink::MemberBase.2830" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.2831" = type { %"class.blink::MemberBase.2832" }
%"class.blink::MemberBase.2832" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.2833" = type { %"class.blink::MemberBase.2834" }
%"class.blink::MemberBase.2834" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.2835" = type { %"class.blink::MemberBase.2836" }
%"class.blink::MemberBase.2836" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.2837" = type { %"class.blink::MemberBase.2838" }
%"class.blink::MemberBase.2838" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.2839" = type { %"class.blink::MemberBase.2840" }
%"class.blink::MemberBase.2840" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.2841" = type { %"class.blink::MemberBase.2842" }
%"class.blink::MemberBase.2842" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2843" }
%"class.WTF::Deque.2843" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2846" }
%"class.WTF::VectorBuffer.2846" = type { %"class.WTF::VectorBufferBase.2847" }
%"class.WTF::VectorBufferBase.2847" = type { %"class.std::__1::unique_ptr.2848"*, i32, i32 }
%"class.std::__1::unique_ptr.2848" = type { %"class.std::__1::__compressed_pair.2849" }
%"class.std::__1::__compressed_pair.2849" = type { %"struct.std::__1::__compressed_pair_elem.2850" }
%"struct.std::__1::__compressed_pair_elem.2850" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2854", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2854" = type { %"class.std::__1::__bitset.2855" }
%"class.std::__1::__bitset.2855" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2856" }
%"class.absl::optional.2856" = type { %"class.absl::optional_internal::optional_data.2857" }
%"class.absl::optional_internal::optional_data.2857" = type { %"class.absl::optional_internal::optional_data_base.2858" }
%"class.absl::optional_internal::optional_data_base.2858" = type { %"class.absl::optional_internal::optional_data_dtor_base.2859" }
%"class.absl::optional_internal::optional_data_dtor_base.2859" = type { i8, %union.anon.2860 }
%union.anon.2860 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.2861", i64, %"class.absl::optional.155", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.2861" = type { %"class.absl::optional_internal::optional_data.2862" }
%"class.absl::optional_internal::optional_data.2862" = type { %"class.absl::optional_internal::optional_data_base.2863" }
%"class.absl::optional_internal::optional_data_base.2863" = type { %"class.absl::optional_internal::optional_data_dtor_base.2864" }
%"class.absl::optional_internal::optional_data_dtor_base.2864" = type { i8, %union.anon.2865 }
%union.anon.2865 = type { %"class.blink::WebSecurityOrigin" }
%"class.absl::optional.155" = type { %"class.absl::optional_internal::optional_data.156" }
%"class.absl::optional_internal::optional_data.156" = type { %"class.absl::optional_internal::optional_data_base.157" }
%"class.absl::optional_internal::optional_data_base.157" = type { %"class.absl::optional_internal::optional_data_dtor_base.158" }
%"class.absl::optional_internal::optional_data_dtor_base.158" = type { i8, %union.anon.159 }
%union.anon.159 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.mojo::StructPtr.2866" = type { %"class.std::__1::unique_ptr.2867" }
%"class.std::__1::unique_ptr.2867" = type { %"class.std::__1::__compressed_pair.2868" }
%"class.std::__1::__compressed_pair.2868" = type { %"struct.std::__1::__compressed_pair_elem.2869" }
%"struct.std::__1::__compressed_pair_elem.2869" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.2873" = type { %"class.WTF::HashSet.2876" }
%"class.WTF::HashSet.2876" = type { %"class.WTF::HashTable.2877" }
%"class.WTF::HashTable.2877" = type <{ %"class.blink::WeakMember.2879"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2879" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2880" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.2880" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.110 }
%class.scoped_refptr.110 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.51", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.51" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.52" }
%"struct.std::__1::atomic.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl.55" }
%"struct.std::__1::__cxx_atomic_impl.55" = type { %"struct.std::__1::__cxx_atomic_base_impl.56" }
%"struct.std::__1::__cxx_atomic_base_impl.56" = type { i8 }
%"class.std::__1::unique_ptr.2881" = type { %"class.std::__1::__compressed_pair.2882" }
%"class.std::__1::__compressed_pair.2882" = type { %"struct.std::__1::__compressed_pair_elem.2883" }
%"struct.std::__1::__compressed_pair_elem.2883" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2887" = type { %"class.std::__1::__compressed_pair.2888" }
%"class.std::__1::__compressed_pair.2888" = type { %"struct.std::__1::__compressed_pair_elem.2889" }
%"struct.std::__1::__compressed_pair_elem.2889" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.208" = type { %"class.blink::MemberBase.209" }
%"class.blink::MemberBase.209" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.210" = type { %"class.blink::MemberBase.211" }
%"class.blink::MemberBase.211" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.238", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.252", %"class.blink::FrameLoader", %"class.blink::Member.279", %"class.blink::Member.281", %"class.blink::Member.311", %"class.blink::Member.313", %"class.blink::Member.315", %"class.blink::Member.317", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.319", %class.scoped_refptr.539, %"class.blink::Member.540", %"class.blink::Member.542", %"class.blink::Member.544", %"class.blink::Member.546", %"class.blink::Member.548", %"class.blink::Member.552", %"class.blink::Member.554", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.558", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.564", %"class.std::__1::unique_ptr.565", %"class.absl::optional.225", i32, [4 x i8], %"class.std::__1::unique_ptr.571", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.579", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.584", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.589", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.592", %"class.blink::Member.594", %"class.blink::Member.596", %"class.blink::Member.598", %"class.mojo::StructPtr", %"class.blink::Member.608", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.610", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.236" }
%"class.WTF::HashTable.236" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.241", %"class.base::WeakPtrFactory.246" }
%"class.WTF::HashMap.241" = type { %"class.WTF::HashTable.242" }
%"class.WTF::HashTable.242" = type <{ %"struct.WTF::KeyValuePair.245"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.245" = type opaque
%"class.base::WeakPtrFactory.246" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.50 }
%class.scoped_refptr.50 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.250" }
%"class.blink::Member.250" = type { %"class.blink::MemberBase.251" }
%"class.blink::MemberBase.251" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1288" }
%"class.blink::WeakMember.1288" = type { %"class.blink::MemberBase.1289" }
%"class.blink::MemberBase.1289" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.808" }
%"class.blink::HeapHashSet.808" = type { %"class.WTF::HashSet.811" }
%"class.WTF::HashSet.811" = type { %"class.WTF::HashTable.812" }
%"class.WTF::HashTable.812" = type <{ %"class.blink::WeakMember.814"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.814" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.153", %"class.base::RepeatingCallback.3064", i64, %"class.std::__1::map.3065", i8*, i64, %"class.base::WeakPtrFactory.3074" }
%"class.base::RepeatingCallback.153" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.3064" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3065" = type { %"class.std::__1::__tree.3066" }
%"class.std::__1::__tree.3066" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3067", %"class.std::__1::__compressed_pair.3071" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.3067" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.3071" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.base::WeakPtrFactory.3074" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.252" = type { %"class.WTF::HashSet.255" }
%"class.WTF::HashSet.255" = type { %"class.WTF::HashTable.256" }
%"class.WTF::HashTable.256" = type <{ %"class.blink::WeakMember.258"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.258" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.210", %"class.blink::Member.259", %"class.blink::Member.261", %"class.std::__1::unique_ptr.263", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.275" }
%"class.blink::Member.259" = type { %"class.blink::MemberBase.260" }
%"class.blink::MemberBase.260" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.261" = type { %"class.blink::MemberBase.262" }
%"class.blink::MemberBase.262" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.275" = type { %"class.WTF::HashTable.276" }
%"class.WTF::HashTable.276" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.279" = type { %"class.blink::MemberBase.280" }
%"class.blink::MemberBase.280" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2548", %"class.blink::Member.210", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2553", i8, i32, %"class.blink::Color", %"class.absl::optional.2555", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2560", %"class.blink::Member.2562", %"class.blink::Member.2562", %"class.std::__1::unique_ptr.2565", i32, [4 x i8], %"class.WTF::HashSet.2568", %"class.blink::Member.2575", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2577", %"class.blink::HeapHashSet.2584", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2592", i8, %"class.blink::Member.2598", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2610", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2624", i8, %"class.std::__1::unique_ptr.2630", %"class.std::__1::unique_ptr.2711", %"class.WTF::Vector.2717", i32, %class.scoped_refptr.2722, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2723", %"class.blink::Member.2725", %"class.blink::Member.2727", %"class.blink::HeapHashSet.2729", %"class.blink::HeapHashSet.2736", %"class.std::__1::unique_ptr.2743", %"class.std::__1::unique_ptr.2750", %"class.WTF::Vector.793" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2548" = type { %"class.WTF::HashTable.2549" }
%"class.WTF::HashTable.2549" = type <{ %class.scoped_refptr.2552*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2552 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2553" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2554", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1962, %"class.base::WeakPtrFactory.1963" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.1962 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.34" }>
%"class.base::RefCountedThreadSafe.34" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.1963" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.2554" = type { %"class.blink::MemberBase.280" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.2555" = type { %"class.absl::optional_internal::optional_data.2556" }
%"class.absl::optional_internal::optional_data.2556" = type { %"class.absl::optional_internal::optional_data_base.2557" }
%"class.absl::optional_internal::optional_data_base.2557" = type { %"class.absl::optional_internal::optional_data_dtor_base.2558" }
%"class.absl::optional_internal::optional_data_dtor_base.2558" = type { i8, %union.anon.2559 }
%union.anon.2559 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2560" = type { %"class.blink::MemberBase.2561" }
%"class.blink::MemberBase.2561" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2562" = type { %"class.blink::MemberBase.2563" }
%"class.blink::MemberBase.2563" = type { %"class.blink::HeapHashSet.2564"* }
%"class.blink::HeapHashSet.2564" = type opaque
%"class.std::__1::unique_ptr.2565" = type { %"class.std::__1::__compressed_pair.2566" }
%"class.std::__1::__compressed_pair.2566" = type { %"struct.std::__1::__compressed_pair_elem.2567" }
%"struct.std::__1::__compressed_pair_elem.2567" = type { %"class.WTF::HashSet.2568"* }
%"class.WTF::HashSet.2568" = type { %"class.WTF::HashTable.2569" }
%"class.WTF::HashTable.2569" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.1292, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr.1292 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1722", %"class.std::__1::unique_ptr.1724" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.1357", %"class.blink::DataRef.1438", %"class.blink::DataRef.1442", %"class.blink::DataRef.1638", %"class.blink::DataRef.1705", %"class.blink::DataRef.1709", %"class.blink::DataRef.1713", %"class.blink::DataRef.1717", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.1293 }
%class.scoped_refptr.1293 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.1294", %"class.blink::DataRef.1296", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.1294" = type { %"class.base::RefCounted.1295" }
%"class.base::RefCounted.1295" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1296" = type { %class.scoped_refptr.1297 }
%class.scoped_refptr.1297 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.1298", %"class.blink::Font" }
%"class.WTF::RefCounted.1298" = type { %"class.base::RefCounted.1299" }
%"class.base::RefCounted.1299" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.1326 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.1301, %class.scoped_refptr.1309, %class.scoped_refptr.1319, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.1325 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1300 }
%class.scoped_refptr.1300 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.2537", [4 x i8] }>
%"class.WTF::RefCounted.2537" = type { %"class.base::RefCounted.2538" }
%"class.base::RefCounted.2538" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1301 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.1307", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.1302" }
%"class.WTF::Vector.1302" = type { %"class.WTF::VectorBuffer.1303" }
%"class.WTF::VectorBuffer.1303" = type { %"class.WTF::VectorBufferBase.1304" }
%"class.WTF::VectorBufferBase.1304" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.1307" = type { %"class.base::RefCounted.1308" }
%"class.base::RefCounted.1308" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1309 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.1310", %"class.WTF::RefCounted.1317", [4 x i8] }>
%"class.blink::FontSettings.1310" = type { %"class.WTF::Vector.1311" }
%"class.WTF::Vector.1311" = type { %"class.WTF::VectorBuffer.1312" }
%"class.WTF::VectorBuffer.1312" = type { %"class.WTF::VectorBufferBase.1313" }
%"class.WTF::VectorBufferBase.1313" = type { %"class.blink::FontTagValuePair.1314"*, i32, i32 }
%"class.blink::FontTagValuePair.1314" = type { i32, float }
%"class.WTF::RefCounted.1317" = type { %"class.base::RefCounted.1318" }
%"class.base::RefCounted.1318" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1319 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.1320", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.1322, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.1320" = type { %"class.base::RefCounted.1321" }
%"class.base::RefCounted.1321" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.1322 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1323", [4 x i8] }>
%"class.WTF::RefCounted.1323" = type { %"class.base::RefCounted.1324" }
%"class.base::RefCounted.1324" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.1325 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.1326 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.1327", %"class.WTF::Vector.1329", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent.1353", i32, i16, i8, %"class.base::WeakPtr.1355" }
%"class.WTF::RefCounted.1327" = type { %"class.base::RefCounted.1328" }
%"class.base::RefCounted.1328" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1329" = type { %"class.WTF::VectorBuffer.1330" }
%"class.WTF::VectorBuffer.1330" = type { %"class.WTF::VectorBufferBase.1331", [8 x i8] }
%"class.WTF::VectorBufferBase.1331" = type { %class.scoped_refptr.1332*, i32, i32 }
%class.scoped_refptr.1332 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1333", [4 x i8] }>
%"class.WTF::RefCounted.1333" = type { %"class.base::RefCounted.1334" }
%"class.base::RefCounted.1334" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.1343", %class.scoped_refptr.1350, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1333" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.1337", %"class.absl::optional.1337", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.1337" = type { %"class.absl::optional_internal::optional_data.1338" }
%"class.absl::optional_internal::optional_data.1338" = type { %"class.absl::optional_internal::optional_data_base.1339" }
%"class.absl::optional_internal::optional_data_base.1339" = type { %"class.absl::optional_internal::optional_data_dtor_base.1340" }
%"class.absl::optional_internal::optional_data_dtor_base.1340" = type { i8, %union.anon.1341 }
%union.anon.1341 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.1342, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.28" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.28" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.52" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.1342 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.1343" = type { %"class.std::__1::__compressed_pair.1344" }
%"class.std::__1::__compressed_pair.1344" = type { %"struct.std::__1::__compressed_pair_elem.1345" }
%"struct.std::__1::__compressed_pair_elem.1345" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.1346, %class.scoped_refptr.1346 }
%class.scoped_refptr.1346 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.1350 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1351", [4 x i8] }>
%"class.WTF::RefCounted.1351" = type { %"class.base::RefCounted.1352" }
%"class.base::RefCounted.1352" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent.1353" = type { %"class.blink::PersistentBase.1354" }
%"class.blink::PersistentBase.1354" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr.1355" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::Length" = type <{ %union.anon.1356, i8, i8, i8, i8 }>
%union.anon.1356 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.1357" = type { %class.scoped_refptr.1358 }
%class.scoped_refptr.1358 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.1359", [4 x i8], %"class.blink::DataRef.1361", %"class.blink::DataRef.1403", %"class.WTF::Vector.1407", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.1411, %class.scoped_refptr.1420, %"class.blink::Persistent.1428", %"class.blink::Persistent.1430", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.1359" = type { %"class.base::RefCounted.1360" }
%"class.base::RefCounted.1360" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1361" = type { %class.scoped_refptr.1362 }
%class.scoped_refptr.1362 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.1363", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.1365, %class.scoped_refptr.1373, %"class.blink::Persistent.1390", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.1363" = type { %"class.base::RefCounted.1364" }
%"class.base::RefCounted.1364" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1365 = type { %"class.base::RefCountedData.1366"* }
%"class.base::RefCountedData.1366" = type { %"class.base::RefCountedThreadSafe.1367", %"class.WTF::Vector.1368" }
%"class.base::RefCountedThreadSafe.1367" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1368" = type { %"class.WTF::VectorBuffer.1369" }
%"class.WTF::VectorBuffer.1369" = type { %"class.WTF::VectorBufferBase.1370" }
%"class.WTF::VectorBufferBase.1370" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.1373 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.1374", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.1374" = type { %"class.base::RefCounted.1375" }
%"class.base::RefCounted.1375" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.1376", %"class.blink::Persistent" }
%"class.WTF::HashMap.1376" = type { %"class.WTF::HashTable.1377" }
%"class.WTF::HashTable.1377" = type <{ %"struct.WTF::KeyValuePair.1380"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1380" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3145 }
%class.scoped_refptr.3145 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.3146", %"class.WTF::Vector.924", %"class.WTF::Vector.3148", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.3146" = type { %"class.base::RefCounted.3147" }
%"class.base::RefCounted.3147" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3148" = type { %"class.WTF::VectorBuffer.3149" }
%"class.WTF::VectorBuffer.3149" = type { %"class.WTF::VectorBufferBase.3150" }
%"class.WTF::VectorBufferBase.3150" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.3151 }
%union.anon.3151 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.1381" }
%"class.blink::PersistentBase.1381" = type { %"class.blink::HeapHashMap.1382"*, %"class.blink::PersistentNodePtr.1389" }
%"class.blink::HeapHashMap.1382" = type { %"class.WTF::HashMap.1385" }
%"class.WTF::HashMap.1385" = type { %"class.WTF::HashTable.1386" }
%"class.WTF::HashTable.1386" = type <{ %"struct.WTF::KeyValuePair.1388"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1388" = type opaque
%"class.blink::PersistentNodePtr.1389" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.1390" = type { %"class.blink::PersistentBase.1391" }
%"class.blink::PersistentBase.1391" = type { %"class.blink::HeapVector.1392"*, %"class.blink::PersistentNodePtr.1389" }
%"class.blink::HeapVector.1392" = type { %"class.WTF::Vector.1395" }
%"class.WTF::Vector.1395" = type { %"class.WTF::VectorBuffer.1396" }
%"class.WTF::VectorBuffer.1396" = type { %"class.WTF::VectorBufferBase.1397" }
%"class.WTF::VectorBufferBase.1397" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.1398", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.1403" = type { %class.scoped_refptr.1404 }
%class.scoped_refptr.1404 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.1405", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.1405" = type { %"class.base::RefCounted.1406" }
%"class.base::RefCounted.1406" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1407" = type { %"class.WTF::VectorBuffer.1408" }
%"class.WTF::VectorBuffer.1408" = type { %"class.WTF::VectorBufferBase.308" }
%"class.WTF::VectorBufferBase.308" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.1411 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.1412", %"class.WTF::Vector.1414" }
%"class.WTF::RefCounted.1412" = type { %"class.base::RefCounted.1413" }
%"class.base::RefCounted.1413" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1414" = type { %"class.WTF::VectorBuffer.1415" }
%"class.WTF::VectorBuffer.1415" = type { %"class.WTF::VectorBufferBase.1416" }
%"class.WTF::VectorBufferBase.1416" = type { %"struct.std::__1::pair.1417"*, i32, i32 }
%"struct.std::__1::pair.1417" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1420 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.1421", [4 x i8], %"class.WTF::Vector.1423" }
%"class.WTF::RefCounted.1421" = type { %"class.base::RefCounted.1422" }
%"class.base::RefCounted.1422" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1423" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.1425", [28 x i8] }>
%"class.WTF::VectorBufferBase.1425" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.1428" = type { %"class.blink::PersistentBase.1429" }
%"class.blink::PersistentBase.1429" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.1389" }
%"class.blink::Persistent.1430" = type { %"class.blink::PersistentBase.1431" }
%"class.blink::PersistentBase.1431" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.1389" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.1434", %"class.blink::Member.1436" }
%"class.blink::Member.1434" = type { %"class.blink::MemberBase.1435" }
%"class.blink::MemberBase.1435" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.1436" = type { %"class.blink::MemberBase.1437" }
%"class.blink::MemberBase.1437" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.1438" = type { %class.scoped_refptr.1439 }
%class.scoped_refptr.1439 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.1440", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.1440" = type { %"class.base::RefCounted.1441" }
%"class.base::RefCounted.1441" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.1442" = type { %class.scoped_refptr.1443 }
%class.scoped_refptr.1443 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.1444", [4 x i8], %"class.blink::DataRef.1446", %"class.blink::DataRef.1512", %"class.blink::TransformOperations", %class.scoped_refptr.1420, %"class.blink::Persistent.1632", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.1444" = type { %"class.base::RefCounted.1445" }
%"class.base::RefCounted.1445" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1446" = type { %class.scoped_refptr.1447 }
%class.scoped_refptr.1447 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.1448", [4 x i8], %"class.blink::DataRef.1450", %"class.blink::Persistent.1488", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.1448" = type { %"class.base::RefCounted.1449" }
%"class.base::RefCounted.1449" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1450" = type { %class.scoped_refptr.1451 }
%class.scoped_refptr.1451 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.1452", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.1470, %class.scoped_refptr.1473, %class.scoped_refptr.1476, %class.scoped_refptr.1479, %class.scoped_refptr.1480, %class.scoped_refptr.1481, %"class.blink::Persistent.1488", %"class.blink::Persistent.1503", %"class.absl::optional.1507", %"class.absl::optional.1507", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.1452" = type { %"class.base::RefCounted.1453" }
%"class.base::RefCounted.1453" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.1454", %"class.std::__1::unique_ptr.1459" }
%"class.WTF::Vector.1454" = type { %"class.WTF::VectorBuffer.1455" }
%"class.WTF::VectorBuffer.1455" = type { %"class.WTF::VectorBufferBase.1456" }
%"class.WTF::VectorBufferBase.1456" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1459" = type { %"class.std::__1::__compressed_pair.1460" }
%"class.std::__1::__compressed_pair.1460" = type { %"struct.std::__1::__compressed_pair_elem.1461" }
%"struct.std::__1::__compressed_pair_elem.1461" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.1462", %"class.WTF::Vector.1454", i32, i32 }
%"class.WTF::Vector.1462" = type { %"class.WTF::VectorBuffer.1463" }
%"class.WTF::VectorBuffer.1463" = type { %"class.WTF::VectorBufferBase.1464" }
%"class.WTF::VectorBufferBase.1464" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.1470 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1471", [4 x i8] }>
%"class.WTF::RefCounted.1471" = type { %"class.base::RefCounted.1472" }
%"class.base::RefCounted.1472" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1473 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.1474", [4 x i8] }>
%"class.WTF::RefCounted.1474" = type { %"class.base::RefCounted.1475" }
%"class.base::RefCounted.1475" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1476 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1477" }>
%"class.WTF::RefCounted.1477" = type { %"class.base::RefCounted.1478" }
%"class.base::RefCounted.1478" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1479 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1480 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1481 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1482", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1482" = type { %"class.base::RefCounted.1483" }
%"class.base::RefCounted.1483" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1484" }
%"class.blink::DataRef.1484" = type { %class.scoped_refptr.1485 }
%class.scoped_refptr.1485 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.1428", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1486" }
%"class.WTF::RefCounted.1486" = type { %"class.base::RefCounted.1487" }
%"class.base::RefCounted.1487" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1503" = type { %"class.blink::PersistentBase.1504" }
%"class.blink::PersistentBase.1504" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.1389" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.1473, %"class.blink::Member.1398", i32, [4 x i8] }>
%"class.absl::optional.1507" = type { %"class.absl::optional_internal::optional_data.1508" }
%"class.absl::optional_internal::optional_data.1508" = type { %"class.absl::optional_internal::optional_data_base.1509" }
%"class.absl::optional_internal::optional_data_base.1509" = type { %"class.absl::optional_internal::optional_data_dtor_base.1510" }
%"class.absl::optional_internal::optional_data_dtor_base.1510" = type { i8, [3 x i8], %union.anon.1511 }
%union.anon.1511 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.1488" = type { %"class.blink::PersistentBase.1489" }
%"class.blink::PersistentBase.1489" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.1389" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1492" }
%"class.blink::HeapVector.1492" = type { %"class.WTF::Vector.1495" }
%"class.WTF::Vector.1495" = type { %"class.WTF::VectorBuffer.1496" }
%"class.WTF::VectorBuffer.1496" = type { %"class.WTF::VectorBufferBase.1497" }
%"class.WTF::VectorBufferBase.1497" = type { %"class.blink::Member.1498"*, i32, i32 }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1512" = type { %class.scoped_refptr.1513 }
%class.scoped_refptr.1513 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1514", %"class.blink::DataRef.1516", %"class.blink::DataRef.1520", %"class.blink::DataRef.1529", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1548", %"class.std::__1::unique_ptr.1559", %"class.std::__1::unique_ptr.1598", %"class.std::__1::unique_ptr.1609", %"class.std::__1::unique_ptr.1620", %"class.WTF::Vector.924", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1514" = type { %"class.base::RefCounted.1515" }
%"class.base::RefCounted.1515" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1516" = type { %class.scoped_refptr.1517 }
%class.scoped_refptr.1517 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1518", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1518" = type { %"class.base::RefCounted.1519" }
%"class.base::RefCounted.1519" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1520" = type { %class.scoped_refptr.1521 }
%class.scoped_refptr.1521 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1522", [4 x i8], %"class.WTF::Vector.1524", i8, [7 x i8] }>
%"class.WTF::RefCounted.1522" = type { %"class.base::RefCounted.1523" }
%"class.base::RefCounted.1523" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1524" = type { %"class.WTF::VectorBuffer.1525" }
%"class.WTF::VectorBuffer.1525" = type { %"class.WTF::VectorBufferBase.1526" }
%"class.WTF::VectorBufferBase.1526" = type { i32*, i32, i32 }
%"class.blink::DataRef.1529" = type { %class.scoped_refptr.1530 }
%class.scoped_refptr.1530 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1531", [4 x i8], %"class.WTF::HashMap.1533", %"class.WTF::HashMap.1533", %"class.WTF::HashMap.1533", %"class.WTF::HashMap.1533", %"class.WTF::HashMap.1533", %"class.WTF::HashMap.1533", %"class.WTF::HashMap.1538", %"class.WTF::HashMap.1538", %"class.WTF::HashMap.1538", %"class.WTF::HashMap.1538", %"class.WTF::HashMap.1543", %"class.WTF::Vector.1454", %"class.WTF::Vector.1454", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1531" = type { %"class.base::RefCounted.1532" }
%"class.base::RefCounted.1532" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1533" = type { %"class.WTF::HashTable.1534" }
%"class.WTF::HashTable.1534" = type <{ %"struct.WTF::KeyValuePair.1537"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1537" = type { %"class.WTF::String", %"class.WTF::Vector.3135" }
%"class.WTF::Vector.3135" = type { %"class.WTF::VectorBuffer.3136" }
%"class.WTF::VectorBuffer.3136" = type { %"class.WTF::VectorBufferBase.3137" }
%"class.WTF::VectorBufferBase.3137" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1538" = type { %"class.WTF::HashTable.1539" }
%"class.WTF::HashTable.1539" = type <{ %"struct.WTF::KeyValuePair.1542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1542" = type { i64, %"class.WTF::Vector.924" }
%"class.WTF::HashMap.1543" = type { %"class.WTF::HashTable.1544" }
%"class.WTF::HashTable.1544" = type <{ %"struct.WTF::KeyValuePair.1547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1547" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1548" = type { %"class.std::__1::__compressed_pair.1549" }
%"class.std::__1::__compressed_pair.1549" = type { %"struct.std::__1::__compressed_pair_elem.1550" }
%"struct.std::__1::__compressed_pair_elem.1550" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1551" }
%"class.WTF::HashMap.1551" = type { %"class.WTF::HashTable.1552" }
%"class.WTF::HashTable.1552" = type <{ %"struct.WTF::KeyValuePair.1555"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1555" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.3140", %"class.absl::optional.3140", %"class.absl::optional.3140" }
%"class.absl::optional.3140" = type { %"class.absl::optional_internal::optional_data.3141" }
%"class.absl::optional_internal::optional_data.3141" = type { %"class.absl::optional_internal::optional_data_base.3142" }
%"class.absl::optional_internal::optional_data_base.3142" = type { %"class.absl::optional_internal::optional_data_dtor_base.3143" }
%"class.absl::optional_internal::optional_data_dtor_base.3143" = type { i8, %union.anon.3144 }
%union.anon.3144 = type { i32 }
%"class.std::__1::unique_ptr.1559" = type { %"class.std::__1::__compressed_pair.1560" }
%"class.std::__1::__compressed_pair.1560" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"struct.std::__1::__compressed_pair_elem.1561" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1407", %"class.WTF::Vector.1575", %"class.WTF::Vector.1562", %"class.WTF::Vector.1580", %"class.WTF::Vector.1585", %"class.WTF::Vector.1590" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1562", %"class.WTF::Vector.1562", %"class.WTF::Vector.1567" }
%"class.WTF::Vector.1567" = type { %"class.WTF::VectorBuffer.1568" }
%"class.WTF::VectorBuffer.1568" = type { %"class.WTF::VectorBufferBase.1569" }
%"class.WTF::VectorBufferBase.1569" = type { %class.scoped_refptr.1570*, i32, i32 }
%class.scoped_refptr.1570 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1571", i32 }
%"class.WTF::ThreadSafeRefCounted.1571" = type { %"class.base::RefCountedThreadSafe.1572" }
%"class.base::RefCountedThreadSafe.1572" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1575" = type { %"class.WTF::VectorBuffer.1576" }
%"class.WTF::VectorBuffer.1576" = type { %"class.WTF::VectorBufferBase.1577" }
%"class.WTF::VectorBufferBase.1577" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1562" = type { %"class.WTF::VectorBuffer.1563" }
%"class.WTF::VectorBuffer.1563" = type { %"class.WTF::VectorBufferBase.1564" }
%"class.WTF::VectorBufferBase.1564" = type { double*, i32, i32 }
%"class.WTF::Vector.1580" = type { %"class.WTF::VectorBuffer.1581" }
%"class.WTF::VectorBuffer.1581" = type { %"class.WTF::VectorBufferBase.1582" }
%"class.WTF::VectorBufferBase.1582" = type { i32*, i32, i32 }
%"class.WTF::Vector.1585" = type { %"class.WTF::VectorBuffer.1586" }
%"class.WTF::VectorBuffer.1586" = type { %"class.WTF::VectorBufferBase.1587" }
%"class.WTF::VectorBufferBase.1587" = type { i32*, i32, i32 }
%"class.WTF::Vector.1590" = type { %"class.WTF::VectorBuffer.1591" }
%"class.WTF::VectorBuffer.1591" = type { %"class.WTF::VectorBufferBase.1592" }
%"class.WTF::VectorBufferBase.1592" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1598" = type { %"class.std::__1::__compressed_pair.1599" }
%"class.std::__1::__compressed_pair.1599" = type { %"struct.std::__1::__compressed_pair_elem.1600" }
%"struct.std::__1::__compressed_pair_elem.1600" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1601" }
%"class.WTF::Vector.1601" = type { %"class.WTF::VectorBuffer.1602" }
%"class.WTF::VectorBuffer.1602" = type { %"class.WTF::VectorBufferBase.1603" }
%"class.WTF::VectorBufferBase.1603" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1609" = type { %"class.std::__1::__compressed_pair.1610" }
%"class.std::__1::__compressed_pair.1610" = type { %"struct.std::__1::__compressed_pair_elem.1611" }
%"struct.std::__1::__compressed_pair_elem.1611" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1612" }
%"class.WTF::Vector.1612" = type { %"class.WTF::VectorBuffer.1613" }
%"class.WTF::VectorBuffer.1613" = type { %"class.WTF::VectorBufferBase.1614" }
%"class.WTF::VectorBufferBase.1614" = type { %"class.blink::Persistent.1428"*, i32, i32 }
%"class.std::__1::unique_ptr.1620" = type { %"class.std::__1::__compressed_pair.1621" }
%"class.std::__1::__compressed_pair.1621" = type { %"struct.std::__1::__compressed_pair_elem.1622" }
%"struct.std::__1::__compressed_pair_elem.1622" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.1428", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1626" }
%"class.WTF::Vector.1626" = type { %"class.WTF::VectorBuffer.1627" }
%"class.WTF::VectorBuffer.1627" = type { %"class.WTF::VectorBufferBase.1628" }
%"class.WTF::VectorBufferBase.1628" = type { %class.scoped_refptr.1629*, i32, i32 }
%class.scoped_refptr.1629 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1477", [4 x i8] }>
%"class.blink::Persistent.1632" = type { %"class.blink::PersistentBase.1633" }
%"class.blink::PersistentBase.1633" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.1389" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1636" }
%"class.blink::Member.1636" = type { %"class.blink::MemberBase.1637" }
%"class.blink::MemberBase.1637" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1638" = type { %class.scoped_refptr.1639 }
%class.scoped_refptr.1639 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1640", [4 x i8], %"class.blink::DataRef.1642", %"class.blink::DataRef.1646", %"class.blink::DataRef.1667", %"class.blink::DataRef.1685", %"class.blink::DataRef.1697", %"class.blink::DataRef.1701", %class.scoped_refptr.1671, i32, [4 x i8] }>
%"class.WTF::RefCounted.1640" = type { %"class.base::RefCounted.1641" }
%"class.base::RefCounted.1641" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1642" = type { %class.scoped_refptr.1643 }
%class.scoped_refptr.1643 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1644", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1644" = type { %"class.base::RefCounted.1645" }
%"class.base::RefCounted.1645" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1646" = type { %class.scoped_refptr.1647 }
%class.scoped_refptr.1647 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1648", %class.scoped_refptr.1650, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1648" = type { %"class.base::RefCounted.1649" }
%"class.base::RefCounted.1649" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1650 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1651", %"class.std::__1::unique_ptr.1657", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1474" }>
%"class.std::__1::unique_ptr.1651" = type { %"class.std::__1::__compressed_pair.1652" }
%"class.std::__1::__compressed_pair.1652" = type { %"struct.std::__1::__compressed_pair_elem.1653" }
%"struct.std::__1::__compressed_pair_elem.1653" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1657" = type { %"class.std::__1::__compressed_pair.1658" }
%"class.std::__1::__compressed_pair.1658" = type { %"struct.std::__1::__compressed_pair_elem.1659" }
%"struct.std::__1::__compressed_pair_elem.1659" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1660, i32, %"struct.std::__1::atomic.52", %"struct.std::__1::atomic.52", i8, i8 }>
%class.sk_sp.1660 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1661, %class.SkTDArray.1662, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.28" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1661 = type { i8*, i32, i32 }
%class.SkTDArray.1662 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1663 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.28", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1663 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.70", [3 x i8] }
%"class.blink::DataRef.1667" = type { %class.scoped_refptr.1668 }
%class.scoped_refptr.1668 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1669", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1669" = type { %"class.base::RefCounted.1670" }
%"class.base::RefCounted.1670" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1671, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1685" = type { %class.scoped_refptr.1686 }
%class.scoped_refptr.1686 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1687", [4 x i8], %class.scoped_refptr.1689, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1687" = type { %"class.base::RefCounted.1688" }
%"class.base::RefCounted.1688" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1689 = type { %"class.base::RefCountedData.1690"* }
%"class.base::RefCountedData.1690" = type { %"class.base::RefCountedThreadSafe.1691", %"class.WTF::Vector.1692" }
%"class.base::RefCountedThreadSafe.1691" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1692" = type { %"class.WTF::VectorBuffer.1693" }
%"class.WTF::VectorBuffer.1693" = type { %"class.WTF::VectorBufferBase.1694" }
%"class.WTF::VectorBufferBase.1694" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1697" = type { %class.scoped_refptr.1698 }
%class.scoped_refptr.1698 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1699", %class.scoped_refptr.1671, %class.scoped_refptr.1671, %class.scoped_refptr.1671 }
%"class.WTF::RefCounted.1699" = type { %"class.base::RefCounted.1700" }
%"class.base::RefCounted.1700" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1701" = type { %class.scoped_refptr.1702 }
%class.scoped_refptr.1702 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1703", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1703" = type { %"class.base::RefCounted.1704" }
%"class.base::RefCounted.1704" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1671 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1672", %"class.blink::Persistent.1674", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1672" = type { %"class.base::RefCounted.1673" }
%"class.base::RefCounted.1673" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1674" = type { %"class.blink::PersistentBase.1675" }
%"class.blink::PersistentBase.1675" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.1389" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.281", %"class.blink::HeapHashMap.1678" }
%"class.blink::HeapHashMap.1678" = type { %"class.WTF::HashMap.1681" }
%"class.WTF::HashMap.1681" = type { %"class.WTF::HashTable.1682" }
%"class.WTF::HashTable.1682" = type <{ %"struct.WTF::KeyValuePair.1684"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1684" = type opaque
%"class.blink::DataRef.1705" = type { %class.scoped_refptr.1706 }
%class.scoped_refptr.1706 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1707", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1707" = type { %"class.base::RefCounted.1708" }
%"class.base::RefCounted.1708" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1709" = type { %class.scoped_refptr.1710 }
%class.scoped_refptr.1710 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1711", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1711" = type { %"class.base::RefCounted.1712" }
%"class.base::RefCounted.1712" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1713" = type { %class.scoped_refptr.1714 }
%class.scoped_refptr.1714 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1715", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1715" = type { %"class.base::RefCounted.1716" }
%"class.base::RefCounted.1716" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1717" = type { %class.scoped_refptr.1718 }
%class.scoped_refptr.1718 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1719", %class.scoped_refptr.1721 }
%"class.WTF::RefCounted.1719" = type { %"class.base::RefCounted.1720" }
%"class.base::RefCounted.1720" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1721 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.2535", %"class.blink::StyleVariables", %class.scoped_refptr.1721 }
%"class.WTF::RefCounted.2535" = type { %"class.base::RefCounted.2536" }
%"class.base::RefCounted.2536" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1722" = type { %"class.base::RefCounted.1723" }
%"class.base::RefCounted.1723" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1724" = type { %"class.std::__1::__compressed_pair.1725" }
%"class.std::__1::__compressed_pair.1725" = type { %"struct.std::__1::__compressed_pair_elem.1726" }
%"struct.std::__1::__compressed_pair_elem.1726" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1727" }
%"class.std::__1::unique_ptr.1727" = type { %"class.std::__1::__compressed_pair.1728" }
%"class.std::__1::__compressed_pair.1728" = type { %"struct.std::__1::__compressed_pair_elem.1729" }
%"struct.std::__1::__compressed_pair_elem.1729" = type { %"class.WTF::Vector.1730"* }
%"class.WTF::Vector.1730" = type { %"class.WTF::VectorBuffer.3155" }
%"class.WTF::VectorBuffer.3155" = type { %"class.WTF::VectorBufferBase.3156", [32 x i8] }
%"class.WTF::VectorBufferBase.3156" = type { %class.scoped_refptr.1292*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1737" }
%"class.blink::MemberBase.1737" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1738" }
%"class.std::__1::unique_ptr.1738" = type { %"class.std::__1::__compressed_pair.1739" }
%"class.std::__1::__compressed_pair.1739" = type { %"struct.std::__1::__compressed_pair_elem.1740" }
%"struct.std::__1::__compressed_pair_elem.1740" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1741", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1747", %"class.std::__1::unique_ptr.1871", i8, %"class.absl::optional.1877", %class.scoped_refptr.1853, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1882" }
%"class.std::__1::unique_ptr.1741" = type { %"class.std::__1::__compressed_pair.1742" }
%"class.std::__1::__compressed_pair.1742" = type { %"struct.std::__1::__compressed_pair_elem.1743" }
%"struct.std::__1::__compressed_pair_elem.1743" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1747" = type { %"class.std::__1::__compressed_pair.1748" }
%"class.std::__1::__compressed_pair.1748" = type { %"struct.std::__1::__compressed_pair_elem.1749" }
%"struct.std::__1::__compressed_pair_elem.1749" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1750, %class.scoped_refptr.1750, %class.scoped_refptr.1750, %class.scoped_refptr.1750, %class.scoped_refptr.1750, %class.scoped_refptr.1750, %class.scoped_refptr.1785, %class.scoped_refptr.1801, %class.scoped_refptr.1802, %class.scoped_refptr.1802, %class.scoped_refptr.1802, %class.scoped_refptr.1802, %class.scoped_refptr.1802, %class.scoped_refptr.1802, %class.scoped_refptr.1843, %class.scoped_refptr.1844, %class.scoped_refptr.1844, %class.scoped_refptr.1844, %class.scoped_refptr.1844, %class.scoped_refptr.1844, %class.scoped_refptr.1844, %class.scoped_refptr.1844, %class.scoped_refptr.1844, %class.scoped_refptr.1867 }
%class.scoped_refptr.1750 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1767" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1751", i8, i8, %class.scoped_refptr.1753, i32, i32 }
%"class.WTF::RefCounted.1751" = type { %"class.base::RefCounted.1752" }
%"class.base::RefCounted.1752" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1753 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1760, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1761", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1754" }
%"class.std::__1::unique_ptr.1754" = type { %"class.std::__1::__compressed_pair.1755" }
%"class.std::__1::__compressed_pair.1755" = type { %"struct.std::__1::__compressed_pair_elem.1756" }
%"struct.std::__1::__compressed_pair_elem.1756" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.1760 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1786", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1786" = type { %"class.WTF::RefCounted.1787", i8, i8, %class.scoped_refptr.1760, i32, i32 }
%"class.WTF::RefCounted.1787" = type { %"class.base::RefCounted.1788" }
%"class.base::RefCounted.1788" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1789" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1789" = type { %"class.absl::optional_internal::optional_data.1790" }
%"class.absl::optional_internal::optional_data.1790" = type { %"class.absl::optional_internal::optional_data_base.1791" }
%"class.absl::optional_internal::optional_data_base.1791" = type { %"class.absl::optional_internal::optional_data_dtor_base.1792" }
%"class.absl::optional_internal::optional_data_dtor_base.1792" = type { i8, %union.anon.1793 }
%union.anon.1793 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1794", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1794" = type { %"class.std::__1::__vector_base.1795" }
%"class.std::__1::__vector_base.1795" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1796" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.1796" = type { %"struct.std::__1::__compressed_pair_elem.1797" }
%"struct.std::__1::__compressed_pair_elem.1797" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1761" = type { %"class.std::__1::__compressed_pair.1762" }
%"class.std::__1::__compressed_pair.1762" = type { %"struct.std::__1::__compressed_pair_elem.1763" }
%"struct.std::__1::__compressed_pair_elem.1763" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1767" = type { %"class.std::__1::__compressed_pair.1768" }
%"class.std::__1::__compressed_pair.1768" = type { %"struct.std::__1::__compressed_pair_elem.1769" }
%"struct.std::__1::__compressed_pair_elem.1769" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1770", %"class.std::__1::unique_ptr.1776", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1770" = type { %"class.std::__1::__compressed_pair.1771" }
%"class.std::__1::__compressed_pair.1771" = type { %"struct.std::__1::__compressed_pair_elem.1772" }
%"struct.std::__1::__compressed_pair_elem.1772" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1776" = type { %"class.std::__1::__compressed_pair.1777" }
%"class.std::__1::__compressed_pair.1777" = type { %"struct.std::__1::__compressed_pair_elem.1778" }
%"struct.std::__1::__compressed_pair_elem.1778" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1785 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1801 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1802 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1803" }
%"class.blink::PaintPropertyNode.1803" = type { %"class.WTF::RefCounted.1804", i8, i8, %class.scoped_refptr.1806, i32, i32 }
%"class.WTF::RefCounted.1804" = type { %"class.base::RefCounted.1805" }
%"class.base::RefCounted.1805" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1806 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1753, %class.scoped_refptr.1807, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1829", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1807 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1845" }
%"class.blink::PaintPropertyNode.1845" = type { %"class.WTF::RefCounted.1846", i8, i8, %class.scoped_refptr.1807, i32, i32 }
%"class.WTF::RefCounted.1846" = type { %"class.base::RefCounted.1847" }
%"class.base::RefCounted.1847" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1808" }
%"class.std::__1::vector.1808" = type { %"class.std::__1::__vector_base.1809" }
%"class.std::__1::__vector_base.1809" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1824" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1810, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1817", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1810 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1811, i32, %"class.absl::optional.1812", i8, i32 }
%class.sk_sp.1811 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1812" = type { %"class.absl::optional_internal::optional_data.1813" }
%"class.absl::optional_internal::optional_data.1813" = type { %"class.absl::optional_internal::optional_data_base.1814" }
%"class.absl::optional_internal::optional_data_base.1814" = type { %"class.absl::optional_internal::optional_data_dtor_base.1815" }
%"class.absl::optional_internal::optional_data_dtor_base.1815" = type { i8, %union.anon.1816 }
%union.anon.1816 = type { %struct.SkRect }
%"class.std::__1::vector.1817" = type { %"class.std::__1::__vector_base.1818" }
%"class.std::__1::__vector_base.1818" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1819" }
%"class.std::__1::__compressed_pair.1819" = type { %"struct.std::__1::__compressed_pair_elem.1820" }
%"struct.std::__1::__compressed_pair_elem.1820" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1824" = type { %"struct.std::__1::__compressed_pair_elem.1825" }
%"struct.std::__1::__compressed_pair_elem.1825" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1829" = type { %"class.std::__1::__compressed_pair.1830" }
%"class.std::__1::__compressed_pair.1830" = type { %"struct.std::__1::__compressed_pair_elem.1831" }
%"struct.std::__1::__compressed_pair_elem.1831" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.1835" }
%"class.base::internal::flat_tree.1835" = type { %"class.std::__1::vector.1836" }
%"class.std::__1::vector.1836" = type { %"class.std::__1::__vector_base.1837" }
%"class.std::__1::__vector_base.1837" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1838" }
%"class.std::__1::__compressed_pair.1838" = type { %"struct.std::__1::__compressed_pair_elem.1839" }
%"struct.std::__1::__compressed_pair_elem.1839" = type { i32* }
%class.scoped_refptr.1843 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1844 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1856" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1753, %"class.absl::optional.1848", %class.scoped_refptr.1853, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1848" = type { %"class.absl::optional_internal::optional_data.1849" }
%"class.absl::optional_internal::optional_data.1849" = type { %"class.absl::optional_internal::optional_data_base.1850" }
%"class.absl::optional_internal::optional_data_base.1850" = type { %"class.absl::optional_internal::optional_data_dtor_base.1851" }
%"class.absl::optional_internal::optional_data_dtor_base.1851" = type { i8, [3 x i8], %union.anon.1852 }
%union.anon.1852 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1856" = type { %"class.std::__1::__compressed_pair.1857" }
%"class.std::__1::__compressed_pair.1857" = type { %"struct.std::__1::__compressed_pair_elem.1858" }
%"struct.std::__1::__compressed_pair_elem.1858" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1859", i32, [4 x i8] }>
%"class.WTF::Vector.1859" = type { %"class.WTF::VectorBuffer.1860" }
%"class.WTF::VectorBuffer.1860" = type { %"class.WTF::VectorBufferBase.1861" }
%"class.WTF::VectorBufferBase.1861" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1867 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1871" = type { %"class.std::__1::__compressed_pair.1872" }
%"class.std::__1::__compressed_pair.1872" = type { %"struct.std::__1::__compressed_pair_elem.1873" }
%"struct.std::__1::__compressed_pair_elem.1873" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1753, %class.scoped_refptr.1807, %class.scoped_refptr.1806 }
%"class.absl::optional.1877" = type { %"class.absl::optional_internal::optional_data.1878" }
%"class.absl::optional_internal::optional_data.1878" = type { %"class.absl::optional_internal::optional_data_base.1879" }
%"class.absl::optional_internal::optional_data_base.1879" = type { %"class.absl::optional_internal::optional_data_dtor_base.1880" }
%"class.absl::optional_internal::optional_data_dtor_base.1880" = type { i8, %union.anon.1881 }
%union.anon.1881 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1853 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1854", [4 x i8] }
%"class.WTF::RefCounted.1854" = type { %"class.base::RefCounted.1855" }
%"class.base::RefCounted.1855" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1882" = type { %"class.std::__1::__compressed_pair.1883" }
%"class.std::__1::__compressed_pair.1883" = type { %"struct.std::__1::__compressed_pair_elem.1884" }
%"struct.std::__1::__compressed_pair_elem.1884" = type { %"class.blink::FragmentData"* }
%"class.blink::Member.2575" = type { %"class.blink::MemberBase.2576" }
%"class.blink::MemberBase.2576" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2577" = type { %"class.WTF::HashSet.2580" }
%"class.WTF::HashSet.2580" = type { %"class.WTF::HashTable.2581" }
%"class.WTF::HashTable.2581" = type <{ %"class.blink::Member.2583"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2583" = type opaque
%"class.blink::HeapHashSet.2584" = type { %"class.WTF::HashSet.2587" }
%"class.WTF::HashSet.2587" = type { %"class.WTF::HashTable.2588" }
%"class.WTF::HashTable.2588" = type <{ %"class.blink::Member.2590"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2590" = type { %"class.blink::MemberBase.2591" }
%"class.blink::MemberBase.2591" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2763", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2774", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.281" }
%"class.blink::Member.2763" = type { %"class.blink::MemberBase.2764" }
%"class.blink::MemberBase.2764" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2765", %"class.blink::Member.2766", %"class.blink::Member.2768", %"class.blink::Member.2770", %"class.blink::Member.2772", %"class.WTF::Vector.793", i16, %class.scoped_refptr.1962 }
%"class.blink::ThreadState::PrefinalizerRegistration.2765" = type { i8 }
%"class.blink::Member.2766" = type { %"class.blink::MemberBase.2767" }
%"class.blink::MemberBase.2767" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2768" = type { %"class.blink::MemberBase.2769" }
%"class.blink::MemberBase.2769" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2770" = type { %"class.blink::MemberBase.2771" }
%"class.blink::MemberBase.2771" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2772" = type { %"class.blink::MemberBase.2773" }
%"class.blink::MemberBase.2773" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2774" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2775", { i64, i64 } }
%"class.blink::WeakMember.2775" = type { %"class.blink::MemberBase.2591" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.2592" = type { %"class.std::__1::__compressed_pair.2593" }
%"class.std::__1::__compressed_pair.2593" = type { %"struct.std::__1::__compressed_pair_elem.2594" }
%"struct.std::__1::__compressed_pair_elem.2594" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2598" = type { %"class.blink::MemberBase.2599" }
%"class.blink::MemberBase.2599" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2602", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2602" = type { %"class.WTF::HashTable.2603" }
%"class.WTF::HashTable.2603" = type <{ %"struct.WTF::KeyValuePair.2605"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2605" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2606", i32, i32 }
%"class.WTF::Vector.2606" = type { %"class.WTF::VectorBuffer.2607" }
%"class.WTF::VectorBuffer.2607" = type { %"class.WTF::VectorBufferBase.2608" }
%"class.WTF::VectorBufferBase.2608" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2610" = type { %"class.WTF::LinkedHashSet.2613" }
%"class.WTF::LinkedHashSet.2613" = type { %"class.WTF::HashMap.2614", %"class.WTF::VectorBackedLinkedList.2618" }
%"class.WTF::HashMap.2614" = type { %"class.WTF::HashTable.2615" }
%"class.WTF::HashTable.2615" = type <{ %"struct.WTF::KeyValuePair.2617"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2617" = type opaque
%"class.WTF::VectorBackedLinkedList.2618" = type { %"class.WTF::Vector.2619", i32, i32 }
%"class.WTF::Vector.2619" = type { %"class.WTF::VectorBuffer.2620" }
%"class.WTF::VectorBuffer.2620" = type { %"class.WTF::VectorBufferBase.2621" }
%"class.WTF::VectorBufferBase.2621" = type { %"class.WTF::VectorBackedLinkedListNode.2622"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2622" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2624" = type { %"class.std::__1::__compressed_pair.2625" }
%"class.std::__1::__compressed_pair.2625" = type { %"struct.std::__1::__compressed_pair_elem.2626" }
%"struct.std::__1::__compressed_pair_elem.2626" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2630" = type { %"class.std::__1::__compressed_pair.2631" }
%"class.std::__1::__compressed_pair.2631" = type { %"struct.std::__1::__compressed_pair_elem.2632" }
%"struct.std::__1::__compressed_pair_elem.2632" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2633, %class.scoped_refptr.2633, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2688", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2693", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2633 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2634", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2641" }
%"class.WTF::RefCounted.2634" = type { %"class.base::RefCounted.2635" }
%"class.base::RefCounted.2635" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2636", i32, [4 x i8] }>
%"class.WTF::Vector.2636" = type { %"class.WTF::VectorBuffer.2637" }
%"class.WTF::VectorBuffer.2637" = type { %"class.WTF::VectorBufferBase.2638" }
%"class.WTF::VectorBufferBase.2638" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2641" = type { %"class.WTF::VectorBuffer.2642" }
%"class.WTF::VectorBuffer.2642" = type { %"class.WTF::VectorBufferBase.2643" }
%"class.WTF::VectorBufferBase.2643" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2644", %"class.std::__1::unique_ptr.2660", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2644" = type { %"class.std::__1::__compressed_pair.2645" }
%"class.std::__1::__compressed_pair.2645" = type { %"struct.std::__1::__compressed_pair_elem.2646" }
%"struct.std::__1::__compressed_pair_elem.2646" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2647", %"class.WTF::Vector.2652", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2647" = type { %"class.WTF::VectorBuffer.2648" }
%"class.WTF::VectorBuffer.2648" = type { %"class.WTF::VectorBufferBase.2649" }
%"class.WTF::VectorBufferBase.2649" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2652" = type { %"class.WTF::VectorBuffer.2653" }
%"class.WTF::VectorBuffer.2653" = type { %"class.WTF::VectorBufferBase.2654" }
%"class.WTF::VectorBufferBase.2654" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.2660" = type { %"class.std::__1::__compressed_pair.2661" }
%"class.std::__1::__compressed_pair.2661" = type { %"struct.std::__1::__compressed_pair_elem.2662" }
%"struct.std::__1::__compressed_pair_elem.2662" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2663", %"class.absl::optional.2663" }
%"class.absl::optional.2663" = type { %"class.absl::optional_internal::optional_data.2664" }
%"class.absl::optional_internal::optional_data.2664" = type { %"class.absl::optional_internal::optional_data_base.2665" }
%"class.absl::optional_internal::optional_data_base.2665" = type { %"class.absl::optional_internal::optional_data_dtor_base.2666" }
%"class.absl::optional_internal::optional_data_dtor_base.2666" = type { i8, [3 x i8], %union.anon.2667 }
%union.anon.2667 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2641"*, %"class.absl::optional.2673", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2673" = type { %"class.absl::optional_internal::optional_data.2674" }
%"class.absl::optional_internal::optional_data.2674" = type { %"class.absl::optional_internal::optional_data_base.2675" }
%"class.absl::optional_internal::optional_data_base.2675" = type { %"class.absl::optional_internal::optional_data_dtor_base.2676" }
%"class.absl::optional_internal::optional_data_dtor_base.2676" = type { i8, %union.anon.2677 }
%union.anon.2677 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2678", %"class.WTF::Vector.2683" }
%"class.WTF::Vector.2678" = type { %"class.WTF::VectorBuffer.2679" }
%"class.WTF::VectorBuffer.2679" = type { %"class.WTF::VectorBufferBase.2680", [128 x i8] }
%"class.WTF::VectorBufferBase.2680" = type { i32*, i32, i32 }
%"class.WTF::Vector.2683" = type { %"class.WTF::VectorBuffer.2684" }
%"class.WTF::VectorBuffer.2684" = type { %"class.WTF::VectorBufferBase.2685", [128 x i8] }
%"class.WTF::VectorBufferBase.2685" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2688" = type { %"class.WTF::VectorBuffer.2689" }
%"class.WTF::VectorBuffer.2689" = type { %"class.WTF::VectorBufferBase.2690" }
%"class.WTF::VectorBufferBase.2690" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2693" = type { %"class.WTF::HashTable.2694" }
%"class.WTF::HashTable.2694" = type <{ %"struct.WTF::KeyValuePair.2697"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2697" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2698", %"class.WTF::Vector.2703" }
%"class.WTF::HashMap.2698" = type { %"class.WTF::HashTable.2699" }
%"class.WTF::HashTable.2699" = type <{ %"struct.WTF::KeyValuePair.2702"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2702" = type opaque
%"class.WTF::Vector.2703" = type { %"class.WTF::VectorBuffer.2704" }
%"class.WTF::VectorBuffer.2704" = type { %"class.WTF::VectorBufferBase.2705" }
%"class.WTF::VectorBufferBase.2705" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2711" = type { %"class.std::__1::__compressed_pair.2712" }
%"class.std::__1::__compressed_pair.2712" = type { %"struct.std::__1::__compressed_pair_elem.2713" }
%"struct.std::__1::__compressed_pair_elem.2713" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2717" = type { %"class.WTF::VectorBuffer.2718" }
%"class.WTF::VectorBuffer.2718" = type { %"class.WTF::VectorBufferBase.2719" }
%"class.WTF::VectorBufferBase.2719" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2722 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2723" = type { %"class.blink::MemberBase.2724" }
%"class.blink::MemberBase.2724" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2725" = type { %"class.blink::MemberBase.2726" }
%"class.blink::MemberBase.2726" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2727" = type { %"class.blink::MemberBase.2728" }
%"class.blink::MemberBase.2728" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2729" = type { %"class.WTF::HashSet.2732" }
%"class.WTF::HashSet.2732" = type { %"class.WTF::HashTable.2733" }
%"class.WTF::HashTable.2733" = type <{ %"class.blink::WeakMember.2735"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2735" = type opaque
%"class.blink::HeapHashSet.2736" = type { %"class.WTF::HashSet.2739" }
%"class.WTF::HashSet.2739" = type { %"class.WTF::HashTable.2740" }
%"class.WTF::HashTable.2740" = type <{ %"class.blink::WeakMember.2742"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2742" = type opaque
%"class.std::__1::unique_ptr.2743" = type { %"class.std::__1::__compressed_pair.2744" }
%"class.std::__1::__compressed_pair.2744" = type { %"struct.std::__1::__compressed_pair_elem.2745" }
%"struct.std::__1::__compressed_pair_elem.2745" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2746" }
%"class.base::time_internal::TimeBase.2746" = type { i64 }
%"class.std::__1::unique_ptr.2750" = type { %"class.std::__1::__compressed_pair.2751" }
%"class.std::__1::__compressed_pair.2751" = type { %"struct.std::__1::__compressed_pair_elem.2752" }
%"struct.std::__1::__compressed_pair_elem.2752" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2753", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2753" = type { %"class.absl::optional_internal::optional_data.2754" }
%"class.absl::optional_internal::optional_data.2754" = type { %"class.absl::optional_internal::optional_data_base.2755" }
%"class.absl::optional_internal::optional_data_base.2755" = type { %"class.absl::optional_internal::optional_data_dtor_base.2756" }
%"class.absl::optional_internal::optional_data_dtor_base.2756" = type { i8, %union.anon.2757 }
%union.anon.2757 = type { %"class.base::Time" }
%"class.blink::Member.311" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.313" = type { %"class.blink::MemberBase.314" }
%"class.blink::MemberBase.314" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.315" = type { %"class.blink::MemberBase.316" }
%"class.blink::MemberBase.316" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.317" = type { %"class.blink::MemberBase.318" }
%"class.blink::MemberBase.318" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.319" = type { %"class.blink::MemberBase.320" }
%"class.blink::MemberBase.320" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.330", %"class.blink::HeapListHashSet.341", %"class.blink::HeapListHashSet.352", %"class.blink::HeapListHashSet.363", %"class.blink::HeapListHashSet.374", %"class.blink::HeapListHashSet.385", %"class.blink::HeapListHashSet.396", %"class.blink::HeapListHashSet.407", %"class.blink::HeapListHashSet.418", %"class.blink::HeapListHashSet.429", %"class.blink::HeapListHashSet.440", %"class.blink::HeapListHashSet.451", %"class.blink::HeapListHashSet.462", %"class.blink::HeapListHashSet.473", %"class.blink::HeapListHashSet.484", %"class.blink::HeapListHashSet.495", %"class.blink::HeapListHashSet.506", %"class.blink::HeapListHashSet.517", %"class.blink::HeapListHashSet.528" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.326", %"class.blink::Member.328", %"class.blink::Member.328", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.326" = type <{ %"class.blink::Member.328"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.542", %"class.blink::Member.328", %"class.blink::Member.328" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.330" = type { %"class.WTF::ListHashSet.base.340", [7 x i8] }
%"class.WTF::ListHashSet.base.340" = type <{ %"class.WTF::HashTable.335", %"class.blink::Member.337", %"class.blink::Member.337", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.335" = type <{ %"class.blink::Member.337"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.337" = type { %"class.blink::MemberBase.338" }
%"class.blink::MemberBase.338" = type { %"class.blink::HeapListHashSetNode.339"* }
%"class.blink::HeapListHashSetNode.339" = type { %"class.blink::Member.683", %"class.blink::Member.337", %"class.blink::Member.337" }
%"class.blink::Member.683" = type { %"class.blink::MemberBase.684" }
%"class.blink::MemberBase.684" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.341" = type { %"class.WTF::ListHashSet.base.351", [7 x i8] }
%"class.WTF::ListHashSet.base.351" = type <{ %"class.WTF::HashTable.346", %"class.blink::Member.348", %"class.blink::Member.348", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.346" = type <{ %"class.blink::Member.348"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::HeapListHashSetNode.350"* }
%"class.blink::HeapListHashSetNode.350" = type { %"class.blink::Member.679", %"class.blink::Member.348", %"class.blink::Member.348" }
%"class.blink::Member.679" = type { %"class.blink::MemberBase.680" }
%"class.blink::MemberBase.680" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.352" = type { %"class.WTF::ListHashSet.base.362", [7 x i8] }
%"class.WTF::ListHashSet.base.362" = type <{ %"class.WTF::HashTable.357", %"class.blink::Member.359", %"class.blink::Member.359", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.357" = type <{ %"class.blink::Member.359"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.359" = type { %"class.blink::MemberBase.360" }
%"class.blink::MemberBase.360" = type { %"class.blink::HeapListHashSetNode.361"* }
%"class.blink::HeapListHashSetNode.361" = type { %"class.blink::Member.675", %"class.blink::Member.359", %"class.blink::Member.359" }
%"class.blink::Member.675" = type { %"class.blink::MemberBase.676" }
%"class.blink::MemberBase.676" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.363" = type { %"class.WTF::ListHashSet.base.373", [7 x i8] }
%"class.WTF::ListHashSet.base.373" = type <{ %"class.WTF::HashTable.368", %"class.blink::Member.370", %"class.blink::Member.370", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.368" = type <{ %"class.blink::Member.370"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::HeapListHashSetNode.372"* }
%"class.blink::HeapListHashSetNode.372" = type { %"class.blink::Member.671", %"class.blink::Member.370", %"class.blink::Member.370" }
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.374" = type { %"class.WTF::ListHashSet.base.384", [7 x i8] }
%"class.WTF::ListHashSet.base.384" = type <{ %"class.WTF::HashTable.379", %"class.blink::Member.381", %"class.blink::Member.381", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.379" = type <{ %"class.blink::Member.381"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::HeapListHashSetNode.383"* }
%"class.blink::HeapListHashSetNode.383" = type { %"class.blink::Member.667", %"class.blink::Member.381", %"class.blink::Member.381" }
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.385" = type { %"class.WTF::ListHashSet.base.395", [7 x i8] }
%"class.WTF::ListHashSet.base.395" = type <{ %"class.WTF::HashTable.390", %"class.blink::Member.392", %"class.blink::Member.392", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.390" = type <{ %"class.blink::Member.392"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::HeapListHashSetNode.394"* }
%"class.blink::HeapListHashSetNode.394" = type { %"class.blink::Member.663", %"class.blink::Member.392", %"class.blink::Member.392" }
%"class.blink::Member.663" = type { %"class.blink::MemberBase.664" }
%"class.blink::MemberBase.664" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.396" = type { %"class.WTF::ListHashSet.base.406", [7 x i8] }
%"class.WTF::ListHashSet.base.406" = type <{ %"class.WTF::HashTable.401", %"class.blink::Member.403", %"class.blink::Member.403", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.401" = type <{ %"class.blink::Member.403"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.403" = type { %"class.blink::MemberBase.404" }
%"class.blink::MemberBase.404" = type { %"class.blink::HeapListHashSetNode.405"* }
%"class.blink::HeapListHashSetNode.405" = type { %"class.blink::Member.659", %"class.blink::Member.403", %"class.blink::Member.403" }
%"class.blink::Member.659" = type { %"class.blink::MemberBase.660" }
%"class.blink::MemberBase.660" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.407" = type { %"class.WTF::ListHashSet.base.417", [7 x i8] }
%"class.WTF::ListHashSet.base.417" = type <{ %"class.WTF::HashTable.412", %"class.blink::Member.414", %"class.blink::Member.414", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.412" = type <{ %"class.blink::Member.414"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::HeapListHashSetNode.416"* }
%"class.blink::HeapListHashSetNode.416" = type { %"class.blink::Member.655", %"class.blink::Member.414", %"class.blink::Member.414" }
%"class.blink::Member.655" = type { %"class.blink::MemberBase.656" }
%"class.blink::MemberBase.656" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.418" = type { %"class.WTF::ListHashSet.base.428", [7 x i8] }
%"class.WTF::ListHashSet.base.428" = type <{ %"class.WTF::HashTable.423", %"class.blink::Member.425", %"class.blink::Member.425", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.423" = type <{ %"class.blink::Member.425"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::HeapListHashSetNode.427"* }
%"class.blink::HeapListHashSetNode.427" = type { %"class.blink::Member.651", %"class.blink::Member.425", %"class.blink::Member.425" }
%"class.blink::Member.651" = type { %"class.blink::MemberBase.652" }
%"class.blink::MemberBase.652" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.429" = type { %"class.WTF::ListHashSet.base.439", [7 x i8] }
%"class.WTF::ListHashSet.base.439" = type <{ %"class.WTF::HashTable.434", %"class.blink::Member.436", %"class.blink::Member.436", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.434" = type <{ %"class.blink::Member.436"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::HeapListHashSetNode.438"* }
%"class.blink::HeapListHashSetNode.438" = type { %"class.blink::Member.546", %"class.blink::Member.436", %"class.blink::Member.436" }
%"class.blink::HeapListHashSet.440" = type { %"class.WTF::ListHashSet.base.450", [7 x i8] }
%"class.WTF::ListHashSet.base.450" = type <{ %"class.WTF::HashTable.445", %"class.blink::Member.447", %"class.blink::Member.447", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.445" = type <{ %"class.blink::Member.447"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::HeapListHashSetNode.449"* }
%"class.blink::HeapListHashSetNode.449" = type { %"class.blink::Member.645", %"class.blink::Member.447", %"class.blink::Member.447" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.451" = type { %"class.WTF::ListHashSet.base.461", [7 x i8] }
%"class.WTF::ListHashSet.base.461" = type <{ %"class.WTF::HashTable.456", %"class.blink::Member.458", %"class.blink::Member.458", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.456" = type <{ %"class.blink::Member.458"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.458" = type { %"class.blink::MemberBase.459" }
%"class.blink::MemberBase.459" = type { %"class.blink::HeapListHashSetNode.460"* }
%"class.blink::HeapListHashSetNode.460" = type { %"class.blink::Member.641", %"class.blink::Member.458", %"class.blink::Member.458" }
%"class.blink::Member.641" = type { %"class.blink::MemberBase.642" }
%"class.blink::MemberBase.642" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.462" = type { %"class.WTF::ListHashSet.base.472", [7 x i8] }
%"class.WTF::ListHashSet.base.472" = type <{ %"class.WTF::HashTable.467", %"class.blink::Member.469", %"class.blink::Member.469", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.467" = type <{ %"class.blink::Member.469"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::HeapListHashSetNode.471"* }
%"class.blink::HeapListHashSetNode.471" = type { %"class.blink::Member.637", %"class.blink::Member.469", %"class.blink::Member.469" }
%"class.blink::Member.637" = type { %"class.blink::MemberBase.638" }
%"class.blink::MemberBase.638" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.473" = type { %"class.WTF::ListHashSet.base.483", [7 x i8] }
%"class.WTF::ListHashSet.base.483" = type <{ %"class.WTF::HashTable.478", %"class.blink::Member.480", %"class.blink::Member.480", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.478" = type <{ %"class.blink::Member.480"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::HeapListHashSetNode.482"* }
%"class.blink::HeapListHashSetNode.482" = type { %"class.blink::Member.633", %"class.blink::Member.480", %"class.blink::Member.480" }
%"class.blink::Member.633" = type { %"class.blink::MemberBase.634" }
%"class.blink::MemberBase.634" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.484" = type { %"class.WTF::ListHashSet.base.494", [7 x i8] }
%"class.WTF::ListHashSet.base.494" = type <{ %"class.WTF::HashTable.489", %"class.blink::Member.491", %"class.blink::Member.491", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.489" = type <{ %"class.blink::Member.491"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.491" = type { %"class.blink::MemberBase.492" }
%"class.blink::MemberBase.492" = type { %"class.blink::HeapListHashSetNode.493"* }
%"class.blink::HeapListHashSetNode.493" = type { %"class.blink::Member.629", %"class.blink::Member.491", %"class.blink::Member.491" }
%"class.blink::Member.629" = type { %"class.blink::MemberBase.630" }
%"class.blink::MemberBase.630" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.495" = type { %"class.WTF::ListHashSet.base.505", [7 x i8] }
%"class.WTF::ListHashSet.base.505" = type <{ %"class.WTF::HashTable.500", %"class.blink::Member.502", %"class.blink::Member.502", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.500" = type <{ %"class.blink::Member.502"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::HeapListHashSetNode.504"* }
%"class.blink::HeapListHashSetNode.504" = type { %"class.blink::Member.625", %"class.blink::Member.502", %"class.blink::Member.502" }
%"class.blink::Member.625" = type { %"class.blink::MemberBase.626" }
%"class.blink::MemberBase.626" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.506" = type { %"class.WTF::ListHashSet.base.516", [7 x i8] }
%"class.WTF::ListHashSet.base.516" = type <{ %"class.WTF::HashTable.511", %"class.blink::Member.513", %"class.blink::Member.513", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.511" = type <{ %"class.blink::Member.513"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::HeapListHashSetNode.515"* }
%"class.blink::HeapListHashSetNode.515" = type { %"class.blink::Member.621", %"class.blink::Member.513", %"class.blink::Member.513" }
%"class.blink::Member.621" = type { %"class.blink::MemberBase.622" }
%"class.blink::MemberBase.622" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.517" = type { %"class.WTF::ListHashSet.base.527", [7 x i8] }
%"class.WTF::ListHashSet.base.527" = type <{ %"class.WTF::HashTable.522", %"class.blink::Member.524", %"class.blink::Member.524", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.522" = type <{ %"class.blink::Member.524"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.524" = type { %"class.blink::MemberBase.525" }
%"class.blink::MemberBase.525" = type { %"class.blink::HeapListHashSetNode.526"* }
%"class.blink::HeapListHashSetNode.526" = type { %"class.blink::Member.548", %"class.blink::Member.524", %"class.blink::Member.524" }
%"class.blink::HeapListHashSet.528" = type { %"class.WTF::ListHashSet.base.538", [7 x i8] }
%"class.WTF::ListHashSet.base.538" = type <{ %"class.WTF::HashTable.533", %"class.blink::Member.535", %"class.blink::Member.535", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.533" = type <{ %"class.blink::Member.535"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.535" = type { %"class.blink::MemberBase.536" }
%"class.blink::MemberBase.536" = type { %"class.blink::HeapListHashSetNode.537"* }
%"class.blink::HeapListHashSetNode.537" = type { %"class.blink::Member.540", %"class.blink::Member.535", %"class.blink::Member.535" }
%class.scoped_refptr.539 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.540" = type { %"class.blink::MemberBase.541" }
%"class.blink::MemberBase.541" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.542" = type { %"class.blink::MemberBase.543" }
%"class.blink::MemberBase.543" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.544" = type { %"class.blink::MemberBase.545" }
%"class.blink::MemberBase.545" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.546" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.548" = type { %"class.blink::MemberBase.549" }
%"class.blink::MemberBase.549" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.552" = type { %"class.blink::MemberBase.553" }
%"class.blink::MemberBase.553" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.554" = type { %"class.blink::MemberBase.555" }
%"class.blink::MemberBase.555" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.556" }
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3077" }
%"class.mojo::Remote.3077" = type { %"class.mojo::internal::InterfacePtrState.3078" }
%"class.mojo::internal::InterfacePtrState.3078" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3079" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.27, %"class.std::__1::unique_ptr.150", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.33, i32 }>
%class.scoped_refptr.27 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.33, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.112", %"class.absl::optional.117", %"class.absl::optional.74", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.141", i8, [7 x i8], %class.scoped_refptr.33, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.33, %"class.std::__1::unique_ptr.59", %"class.absl::optional", %"struct.std::__1::atomic.70", i8, i8, i8, i8, i32, i32, %"class.absl::optional.74", %"class.std::__1::unique_ptr.79", i8, i64, %class.scoped_refptr.108, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.111" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.33, i8, %"class.mojo::ScopedHandleBase.62", %class.scoped_refptr.63, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.64" }
%"class.mojo::ScopedHandleBase.62" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.63 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.64" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.68 }
%union.anon.68 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.69", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.69" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.82", i8, i64, %class.scoped_refptr.83, %class.scoped_refptr.104 }
%"class.base::RepeatingCallback.82" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.83 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.93", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.84 }
%class.scoped_refptr.84 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.93" = type { %"class.std::__1::__tree.94" }
%"class.std::__1::__tree.94" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.95", %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%class.scoped_refptr.104 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.108 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.109 }
%class.scoped_refptr.109 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2776", [4 x i8], %"class.base::RepeatingCallback.153", %class.scoped_refptr.33, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2776" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.111" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.112" = type { %"class.absl::optional_internal::optional_data.113" }
%"class.absl::optional_internal::optional_data.113" = type { %"class.absl::optional_internal::optional_data_base.114" }
%"class.absl::optional_internal::optional_data_base.114" = type { %"class.absl::optional_internal::optional_data_dtor_base.115" }
%"class.absl::optional_internal::optional_data_dtor_base.115" = type { i8, %union.anon.116 }
%union.anon.116 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.117" = type { %"class.absl::optional_internal::optional_data.118" }
%"class.absl::optional_internal::optional_data.118" = type { %"class.absl::optional_internal::optional_data_base.119" }
%"class.absl::optional_internal::optional_data_base.119" = type { %"class.absl::optional_internal::optional_data_dtor_base.120" }
%"class.absl::optional_internal::optional_data_dtor_base.120" = type { i8, [7 x i8], %union.anon.121 }
%union.anon.121 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.74" = type { %"class.absl::optional_internal::optional_data.75" }
%"class.absl::optional_internal::optional_data.75" = type { %"class.absl::optional_internal::optional_data_base.76" }
%"class.absl::optional_internal::optional_data_base.76" = type { %"class.absl::optional_internal::optional_data_dtor_base.77" }
%"class.absl::optional_internal::optional_data_dtor_base.77" = type { i8, %union.anon.78 }
%union.anon.78 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.126 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.126 = type { %"class.std::__1::map.129" }
%"class.std::__1::map.129" = type { %"class.std::__1::__tree.130" }
%"class.std::__1::__tree.130" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.140"*, i64 }
%"class.std::__1::unique_ptr.140" = type opaque
%"class.std::__1::map.141" = type { %"class.std::__1::__tree.142" }
%"class.std::__1::__tree.142" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.143", %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.153", %"class.base::OnceCallback.154", %"class.absl::optional.155", %"class.absl::optional.160", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.167", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.175", %"class.std::__1::map.186", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.195", i8, %class.scoped_refptr.33, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.196" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.154" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.160" = type { %"class.absl::optional_internal::optional_data.161" }
%"class.absl::optional_internal::optional_data.161" = type { %"class.absl::optional_internal::optional_data_base.162" }
%"class.absl::optional_internal::optional_data_base.162" = type { %"class.absl::optional_internal::optional_data_dtor_base.163" }
%"class.absl::optional_internal::optional_data_dtor_base.163" = type { i8, %union.anon.164 }
%union.anon.164 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.33, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.165" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::WeakPtrFactory.165" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.166 }
%class.scoped_refptr.166 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.170", %class.scoped_refptr.171 }
%"class.base::RepeatingCallback.170" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.171 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.175" = type { %"class.std::__1::__tree.176" }
%"class.std::__1::__tree.176" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.177", %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.186" = type { %"class.std::__1::__tree.187" }
%"class.std::__1::__tree.187" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.188", %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.base::OnceCallback.195" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.196" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.33 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.3079" = type { %"class.std::__1::__compressed_pair.3080" }
%"class.std::__1::__compressed_pair.3080" = type { %"struct.std::__1::__compressed_pair_elem.3081" }
%"struct.std::__1::__compressed_pair_elem.3081" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.564" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.565" = type { %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.571" = type { %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.577" }
%"class.blink::Member.577" = type { %"class.blink::MemberBase.578" }
%"class.blink::MemberBase.578" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3087" }
%"class.mojo::AssociatedRemote.3087" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3088" }
%"class.mojo::internal::AssociatedInterfacePtrState.3088" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3089" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.150", i32 }>
%"class.std::__1::unique_ptr.3089" = type { %"class.std::__1::__compressed_pair.3090" }
%"class.std::__1::__compressed_pair.3090" = type { %"struct.std::__1::__compressed_pair_elem.3091" }
%"struct.std::__1::__compressed_pair_elem.3091" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.579" = type { %"class.blink::Member.580" }
%"class.blink::Member.580" = type { %"class.blink::MemberBase.581" }
%"class.blink::MemberBase.581" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3097" }
%"class.mojo::AssociatedRemote.3097" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3098" }
%"class.mojo::internal::AssociatedInterfacePtrState.3098" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3099" }
%"class.std::__1::unique_ptr.3099" = type { %"class.std::__1::__compressed_pair.3100" }
%"class.std::__1::__compressed_pair.3100" = type { %"struct.std::__1::__compressed_pair_elem.3101" }
%"struct.std::__1::__compressed_pair_elem.3101" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.582" }
%"class.blink::Member.582" = type { %"class.blink::MemberBase.583" }
%"class.blink::MemberBase.583" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3107", %"class.blink::Member.210", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3107" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3108" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.150" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3108" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.584" = type { %"class.blink::Member.585" }
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3111", %"class.blink::Member.210", %"class.mojo::AssociatedReceiver.3112" }
%"class.blink::ThreadState::PrefinalizerRegistration.3111" = type { i8 }
%"class.mojo::AssociatedReceiver.3112" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3113" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3113" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.587" }
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3116", %"class.blink::Member.210", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3116" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.27, %"class.std::__1::unique_ptr.150", %"class.base::WeakPtrFactory.3117" }
%"class.base::WeakPtrFactory.3117" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.589" = type { %"class.blink::Member.590" }
%"class.blink::Member.590" = type { %"class.blink::MemberBase.591" }
%"class.blink::MemberBase.591" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3120", %"class.blink::Member.210", %"class.mojo::AssociatedReceiver.3121" }
%"class.blink::ThreadState::PrefinalizerRegistration.3120" = type { i8 }
%"class.mojo::AssociatedReceiver.3121" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3122" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3122" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.592" = type { %"class.blink::MemberBase.593" }
%"class.blink::MemberBase.593" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.594" = type { %"class.blink::MemberBase.595" }
%"class.blink::MemberBase.595" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.598" = type { %"class.blink::MemberBase.599" }
%"class.blink::MemberBase.599" = type { %"class.blink::HeapHashMap.600"* }
%"class.blink::HeapHashMap.600" = type opaque
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.601" }
%"class.std::__1::unique_ptr.601" = type { %"class.std::__1::__compressed_pair.602" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"struct.std::__1::__compressed_pair_elem.603" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr.604" }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.604" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.608" = type { %"class.blink::MemberBase.609" }
%"class.blink::MemberBase.609" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.610" = type { %"class.absl::optional_internal::optional_data.611" }
%"class.absl::optional_internal::optional_data.611" = type { %"class.absl::optional_internal::optional_data_base.612" }
%"class.absl::optional_internal::optional_data_base.612" = type { %"class.absl::optional_internal::optional_data_dtor_base.613" }
%"class.absl::optional_internal::optional_data_dtor_base.613" = type { i8, %union.anon.614 }
%union.anon.614 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.212"*, %"struct.std::__1::pair.212"*, %"class.std::__1::__compressed_pair.213" }
%"struct.std::__1::pair.212" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::pair.212"* }
%"class.blink::Member.218" = type { %"class.blink::MemberBase.219" }
%"class.blink::MemberBase.219" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.220" = type { %"class.absl::optional_internal::optional_data.221" }
%"class.absl::optional_internal::optional_data.221" = type { %"class.absl::optional_internal::optional_data_base.222" }
%"class.absl::optional_internal::optional_data_base.222" = type { %"class.absl::optional_internal::optional_data_dtor_base.223" }
%"class.absl::optional_internal::optional_data_dtor_base.223" = type { i8, %union.anon.224 }
%union.anon.224 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.225" = type { %"class.absl::optional_internal::optional_data.226" }
%"class.absl::optional_internal::optional_data.226" = type { %"class.absl::optional_internal::optional_data_base.227" }
%"class.absl::optional_internal::optional_data_base.227" = type { %"class.absl::optional_internal::optional_data_dtor_base.228" }
%"class.absl::optional_internal::optional_data_dtor_base.228" = type { i8, %union.anon.229 }
%union.anon.229 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.22" = type { %"class.blink::MemberBase.23" }
%"class.blink::MemberBase.23" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.24" = type { %"class.WTF::VectorBuffer.25" }
%"class.WTF::VectorBuffer.25" = type { %"class.WTF::VectorBufferBase.26" }
%"class.WTF::VectorBufferBase.26" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.200" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.800", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.871", i32, i8, [3 x i8], %"class.blink::HeapVector.873", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.881", %"class.blink::Member.883", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.892", %"class.blink::Member.953", %"class.blink::Member.955", i8 }>
%"class.blink::Supplementable.800" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.801" }
%"class.blink::HeapHashMap.801" = type { %"class.WTF::HashMap.804" }
%"class.WTF::HashMap.804" = type { %"class.WTF::HashTable.805" }
%"class.WTF::HashTable.805" = type <{ %"struct.WTF::KeyValuePair.807"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.807" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.815" }
%"class.blink::Supplementable.815" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.816" }
%"class.blink::HeapHashMap.816" = type { %"class.WTF::HashMap.819" }
%"class.WTF::HashMap.819" = type { %"class.WTF::HashTable.820" }
%"class.WTF::HashTable.820" = type <{ %"struct.WTF::KeyValuePair.822"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.822" = type { i8*, %"class.blink::Member.3052" }
%"class.blink::Member.3052" = type { %"class.blink::MemberBase.3053" }
%"class.blink::MemberBase.3053" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3054" }
%"class.blink::Member.3054" = type { %"class.blink::MemberBase.3055" }
%"class.blink::MemberBase.3055" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.823, %"class.std::__1::unique_ptr.832", %"class.std::__1::unique_ptr.832", %"class.std::__1::unique_ptr.859", %"class.std::__1::unique_ptr.859", %"class.blink::Member.865", i32, [4 x i8], %"class.WTF::HashSet.867", i32, i32 }
%class.scoped_refptr.823 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.824", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.826", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.831 }
%"class.WTF::RefCounted.824" = type { %"class.base::RefCounted.825" }
%"class.base::RefCounted.825" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.826" = type { %"class.absl::optional_internal::optional_data.827" }
%"class.absl::optional_internal::optional_data.827" = type { %"class.absl::optional_internal::optional_data_base.828" }
%"class.absl::optional_internal::optional_data_base.828" = type { %"class.absl::optional_internal::optional_data_dtor_base.829" }
%"class.absl::optional_internal::optional_data_dtor_base.829" = type { i8, %union.anon.830 }
%union.anon.830 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.831 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.832" = type { %"class.std::__1::__compressed_pair.833" }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.834" }
%"struct.std::__1::__compressed_pair_elem.834" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.835", %"class.std::__1::map.846", %"class.std::__1::map.855"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.826" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map.835" = type { %"class.std::__1::__tree.836" }
%"class.std::__1::__tree.836" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.841" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.841" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.846" = type { %"class.std::__1::__tree.847" }
%"class.std::__1::__tree.847" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.848", %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.855" = type opaque
%"class.std::__1::unique_ptr.859" = type { %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.867" = type { %"class.WTF::HashTable.868" }
%"class.WTF::HashTable.868" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.871" = type { %"class.blink::MemberBase.872" }
%"class.blink::MemberBase.872" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.873" = type { %"class.WTF::Vector.876" }
%"class.WTF::Vector.876" = type { %"class.WTF::VectorBuffer.877" }
%"class.WTF::VectorBuffer.877" = type { %"class.WTF::VectorBufferBase.878" }
%"class.WTF::VectorBufferBase.878" = type { %"class.blink::Member.879"*, i32, i32 }
%"class.blink::Member.879" = type opaque
%"class.blink::Member.881" = type { %"class.blink::MemberBase.882" }
%"class.blink::MemberBase.882" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.883" = type { %"class.blink::MemberBase.884" }
%"class.blink::MemberBase.884" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.885", i32, i32 }
%"class.blink::HeapHashMap.885" = type { %"class.WTF::HashMap.888" }
%"class.WTF::HashMap.888" = type { %"class.WTF::HashTable.889" }
%"class.WTF::HashTable.889" = type <{ %"struct.WTF::KeyValuePair.891"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.891" = type opaque
%"class.std::__1::unique_ptr.892" = type { %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.895", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.895" = type { %"class.std::__1::unique_ptr.896" }
%"class.std::__1::unique_ptr.896" = type { %"class.std::__1::__compressed_pair.897" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.898" }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.899" }
%"class.WTF::Vector.899" = type { %"class.WTF::VectorBuffer.900" }
%"class.WTF::VectorBuffer.900" = type { %"class.WTF::VectorBufferBase.901" }
%"class.WTF::VectorBufferBase.901" = type { %"class.mojo::StructPtr.902"*, i32, i32 }
%"class.mojo::StructPtr.902" = type { %"class.std::__1::unique_ptr.903" }
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.906", %"class.WTF::HashMap.913", %"class.WTF::HashMap.918", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.923", i8, %"class.WTF::Vector.924", i32, %"class.mojo::StructPtr.929", %"class.WTF::Vector.924" }
%"class.mojo::StructPtr.906" = type { %"class.std::__1::unique_ptr.907" }
%"class.std::__1::unique_ptr.907" = type { %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.909" }
%"struct.std::__1::__compressed_pair_elem.909" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.913" = type { %"class.WTF::HashTable.914" }
%"class.WTF::HashTable.914" = type <{ %"struct.WTF::KeyValuePair.917"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.917" = type opaque
%"class.WTF::HashMap.918" = type { %"class.WTF::HashTable.919" }
%"class.WTF::HashTable.919" = type <{ %"struct.WTF::KeyValuePair.922"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.922" = type opaque
%"class.mojo::InlinedStructPtr.923" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.929" = type { %"class.std::__1::unique_ptr.930" }
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.924", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.944" }
%"class.std::__1::unique_ptr.944" = type { %"class.std::__1::__compressed_pair.945" }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.946" }
%"struct.std::__1::__compressed_pair_elem.946" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.953" = type { %"class.blink::MemberBase.954" }
%"class.blink::MemberBase.954" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.955" = type { %"class.blink::MemberBase.956" }
%"class.blink::MemberBase.956" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Supplementable.957" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.958" }
%"class.blink::HeapHashMap.958" = type { %"class.WTF::HashMap.961" }
%"class.WTF::HashMap.961" = type { %"class.WTF::HashTable.962" }
%"class.WTF::HashTable.962" = type <{ %"struct.WTF::KeyValuePair.964"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.964" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.965" = type { %"class.blink::MemberBase.966" }
%"class.blink::MemberBase.966" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.969" = type { %"class.blink::MemberBase.970" }
%"class.blink::MemberBase.970" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.971" = type { %"class.blink::MemberBase.972" }
%"class.blink::MemberBase.972" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.973" = type { %"class.blink::MemberBase.974" }
%"class.blink::MemberBase.974" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.977" = type { %"class.blink::MemberBase.978" }
%"class.blink::MemberBase.978" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.979" = type { %"class.blink::MemberBase.980" }
%"class.blink::MemberBase.980" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.981" = type { %"class.blink::MemberBase.982" }
%"class.blink::MemberBase.982" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.983" = type { %"class.blink::MemberBase.984" }
%"class.blink::MemberBase.984" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.WTF::Vector.924" = type { %"class.WTF::VectorBuffer.925" }
%"class.WTF::VectorBuffer.925" = type { %"class.WTF::VectorBufferBase.926" }
%"class.WTF::VectorBufferBase.926" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.985" = type { %"class.blink::MemberBase.986" }
%"class.blink::MemberBase.986" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.987 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.989", i64, %"class.WTF::Vector.993", %"class.WTF::Vector.998", %"class.WTF::Vector.1206", %"class.WTF::Vector.1224", %class.scoped_refptr.823, %"class.WTF::HashMap.1230", %"class.WTF::Vector.1235", %"class.WTF::Vector.993", %"class.WTF::Vector.1241", %"class.WTF::HashMap.1246", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.988" }
%"class.base::RefCountedThreadSafe.988" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.989" = type { %"class.std::__1::__compressed_pair.990" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { i8* }
%"class.WTF::Vector.998" = type { %"class.WTF::VectorBuffer.999" }
%"class.WTF::VectorBuffer.999" = type { %"class.WTF::VectorBufferBase.1000", [8 x i8] }
%"class.WTF::VectorBufferBase.1000" = type { %class.scoped_refptr.1001*, i32, i32 }
%class.scoped_refptr.1001 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8, [6 x i8] }>
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1002", i8, %class.scoped_refptr.1004, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.1198" }
%"class.WTF::ThreadSafeRefCounted.1002" = type { %"class.base::RefCountedThreadSafe.1003" }
%"class.base::RefCountedThreadSafe.1003" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.1004 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1005", i64, %"class.WTF::Vector.1007", %"class.WTF::Vector.1012" }
%"class.WTF::RefCounted.1005" = type { %"class.base::RefCounted.1006" }
%"class.base::RefCounted.1006" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1007" = type { %"class.WTF::VectorBuffer.1008" }
%"class.WTF::VectorBuffer.1008" = type { %"class.WTF::VectorBufferBase.1009" }
%"class.WTF::VectorBufferBase.1009" = type { i8*, i32, i32 }
%"class.WTF::Vector.1012" = type { %"class.WTF::VectorBuffer.1013" }
%"class.WTF::VectorBuffer.1013" = type { %"class.WTF::VectorBufferBase.1014" }
%"class.WTF::VectorBufferBase.1014" = type { %"class.std::__1::unique_ptr.1015"*, i32, i32 }
%"class.std::__1::unique_ptr.1015" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.1198" = type { %"class.std::__1::__compressed_pair.1199" }
%"class.std::__1::__compressed_pair.1199" = type { %"struct.std::__1::__compressed_pair_elem.1200" }
%"struct.std::__1::__compressed_pair_elem.1200" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::ImageOrientation" = type { i8 }
%"class.WTF::Vector.1206" = type { %"class.WTF::VectorBuffer.1207" }
%"class.WTF::VectorBuffer.1207" = type { %"class.WTF::VectorBufferBase.1208" }
%"class.WTF::VectorBufferBase.1208" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1210", %"class.std::__1::unique_ptr.1216" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1209 }
%class.scoped_refptr.1209 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1210" = type { %"class.std::__1::__compressed_pair.1211" }
%"class.std::__1::__compressed_pair.1211" = type { %"struct.std::__1::__compressed_pair_elem.1212" }
%"struct.std::__1::__compressed_pair_elem.1212" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1216" = type { %"class.std::__1::__compressed_pair.1217" }
%"class.std::__1::__compressed_pair.1217" = type { %"struct.std::__1::__compressed_pair_elem.1218" }
%"struct.std::__1::__compressed_pair_elem.1218" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1224" = type { %"class.WTF::VectorBuffer.1225" }
%"class.WTF::VectorBuffer.1225" = type { %"class.WTF::VectorBufferBase.1226" }
%"class.WTF::VectorBufferBase.1226" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1227", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1227" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1230" = type { %"class.WTF::HashTable.1231" }
%"class.WTF::HashTable.1231" = type <{ %"struct.WTF::KeyValuePair.1234"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1234" = type opaque
%"class.WTF::Vector.1235" = type { %"class.WTF::VectorBuffer.1236" }
%"class.WTF::VectorBuffer.1236" = type { %"class.WTF::VectorBufferBase.1237" }
%"class.WTF::VectorBufferBase.1237" = type { %"class.mojo::ScopedHandleBase.1238"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1238" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.993" = type { %"class.WTF::VectorBuffer.994" }
%"class.WTF::VectorBuffer.994" = type { %"class.WTF::VectorBufferBase.995", [16 x i8] }
%"class.WTF::VectorBufferBase.995" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1241" = type { %"class.WTF::VectorBuffer.1242" }
%"class.WTF::VectorBuffer.1242" = type { %"class.WTF::VectorBufferBase.1243" }
%"class.WTF::VectorBufferBase.1243" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.1246" = type { %"class.WTF::HashTable.1247" }
%"class.WTF::HashTable.1247" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { i8**, %"class.std::__1::unique_ptr.3056" }
%"class.std::__1::unique_ptr.3056" = type { %"class.std::__1::__compressed_pair.3057" }
%"class.std::__1::__compressed_pair.3057" = type { %"struct.std::__1::__compressed_pair_elem.3058" }
%"struct.std::__1::__compressed_pair_elem.3058" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::WeakMember.1257"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1257" = type opaque
%"class.blink::Member.1258" = type { %"class.blink::MemberBase.1259" }
%"class.blink::MemberBase.1259" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1265", %"class.blink::Member.1265", %"class.blink::Member.1267", %"class.blink::Member.1269", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1260" }
%"class.absl::optional.1260" = type { %"class.absl::optional_internal::optional_data.1261" }
%"class.absl::optional_internal::optional_data.1261" = type { %"class.absl::optional_internal::optional_data_base.1262" }
%"class.absl::optional_internal::optional_data_base.1262" = type { %"class.absl::optional_internal::optional_data_dtor_base.1263" }
%"class.absl::optional_internal::optional_data_dtor_base.1263" = type { i8, %union.anon.1264 }
%union.anon.1264 = type { i64 }
%"class.blink::Member.1265" = type { %"class.blink::MemberBase.1266" }
%"class.blink::MemberBase.1266" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1267" = type { %"class.blink::MemberBase.1268" }
%"class.blink::MemberBase.1268" = type { %"class.blink::Event"* }
%"class.blink::Member.1269" = type { %"class.blink::MemberBase.1270" }
%"class.blink::MemberBase.1270" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.1271" = type { %"class.WTF::HashMap.1274" }
%"class.WTF::HashMap.1274" = type { %"class.WTF::HashTable.1275" }
%"class.WTF::HashTable.1275" = type <{ %"struct.WTF::KeyValuePair.1277"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1277" = type opaque
%"class.std::__1::unique_ptr.1278" = type { %"class.std::__1::__compressed_pair.1279" }
%"class.std::__1::__compressed_pair.1279" = type { %"struct.std::__1::__compressed_pair_elem.1280" }
%"struct.std::__1::__compressed_pair_elem.1280" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.1284" = type { %"class.blink::MemberBase.1285" }
%"class.blink::MemberBase.1285" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.210", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1898", %"class.blink::Member.1900", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.1290", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1891", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.1290" = type { %"class.blink::MemberBase.1291" }
%"class.blink::MemberBase.1291" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1891" = type { %"class.WTF::HashMap.1894" }
%"class.WTF::HashMap.1894" = type { %"class.WTF::HashTable.1895" }
%"class.WTF::HashTable.1895" = type <{ %"struct.WTF::KeyValuePair.1897"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1897" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.283", i32, i32 }
%"class.blink::Member.1900" = type { %"class.blink::MemberBase.1901" }
%"class.blink::MemberBase.1901" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1902" = type { %"class.blink::MemberBase.1903" }
%"class.blink::MemberBase.1903" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.798", %"class.blink::Member.2531", %"class.blink::Member.2533" }
%"class.blink::Member.2531" = type { %"class.blink::MemberBase.2532" }
%"class.blink::MemberBase.2532" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.2533" = type { %"class.blink::MemberBase.2534" }
%"class.blink::MemberBase.2534" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1904" = type { %"class.blink::MemberBase.1905" }
%"class.blink::MemberBase.1905" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.798", %"class.blink::HeapMojoRemote.2526" }
%"class.blink::HeapMojoRemote.2526" = type { %"class.blink::Member.2527" }
%"class.blink::Member.2527" = type { %"class.blink::MemberBase.2528" }
%"class.blink::MemberBase.2528" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1906" = type { %"class.blink::MemberBase.1907" }
%"class.blink::MemberBase.1907" = type { %"class.blink::HeapHashMap.1908"* }
%"class.blink::HeapHashMap.1908" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.1914" = type { %"class.WTF::HashTable.1915" }
%"class.WTF::HashTable.1915" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1918" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1921" }
%"class.WTF::VectorBuffer.1921" = type { %"class.WTF::VectorBufferBase.1922" }
%"class.WTF::VectorBufferBase.1922" = type { i64*, i32, i32 }
%"class.blink::Member.865" = type { %"class.blink::MemberBase.866" }
%"class.blink::MemberBase.866" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.800", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.871", i32, i8, [3 x i8], %"class.blink::HeapVector.873", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.881", %"class.blink::Member.883", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.892", %"class.blink::Member.953", %"class.blink::Member.955", i8, [7 x i8] }>
%"class.blink::Member.1923" = type { %"class.blink::MemberBase.1924" }
%"class.blink::MemberBase.1924" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1925" = type { %"class.blink::MemberBase.1926" }
%"class.blink::MemberBase.1926" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1927" = type { %"class.blink::MemberBase.1928" }
%"class.blink::MemberBase.1928" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1929" = type { %"class.blink::MemberBase.1930" }
%"class.blink::MemberBase.1930" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1931" = type { %"class.std::__1::__compressed_pair.1932" }
%"class.std::__1::__compressed_pair.1932" = type { %"struct.std::__1::__compressed_pair_elem.1933" }
%"struct.std::__1::__compressed_pair_elem.1933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.266" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.blink::KURL"* }
%"class.blink::Member.1937" = type { %"class.blink::MemberBase.1938" }
%"class.blink::MemberBase.1938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1939" = type { %"class.blink::MemberBase.1940" }
%"class.blink::MemberBase.1940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.730" = type { %"class.blink::MemberBase.731" }
%"class.blink::MemberBase.731" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.732", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.734, %"class.WTF::Vector.753", %"class.WTF::Vector.753", %"class.blink::Member.283", %"class.blink::Member.758", %"class.blink::HeapHashSet.762", %"class.blink::Member.689", %"class.WTF::HashSet.769", %"class.WTF::TextPosition", %"class.blink::Member.773", %"class.blink::HeapVector.775", %"class.blink::Member.782" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.732" = type { %"class.blink::MemberBase.733" }
%"class.blink::MemberBase.733" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.734 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.735", %"class.WTF::Vector.737" }
%"class.WTF::RefCounted.735" = type { %"class.base::RefCounted.736" }
%"class.base::RefCounted.736" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.737" = type { %"class.WTF::VectorBuffer.738" }
%"class.WTF::VectorBuffer.738" = type { %"class.WTF::VectorBufferBase.739" }
%"class.WTF::VectorBufferBase.739" = type { %"class.std::__1::unique_ptr.740"*, i32, i32 }
%"class.std::__1::unique_ptr.740" = type { %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.743", %"class.WTF::String" }
%"class.WTF::Vector.743" = type { %"class.WTF::VectorBuffer.744" }
%"class.WTF::VectorBuffer.744" = type { %"class.WTF::VectorBufferBase.745" }
%"class.WTF::VectorBufferBase.745" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.753" = type { %"class.WTF::VectorBuffer.754" }
%"class.WTF::VectorBuffer.754" = type { %"class.WTF::VectorBufferBase.755" }
%"class.WTF::VectorBufferBase.755" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.758" = type { %"class.blink::MemberBase.759" }
%"class.blink::MemberBase.759" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.760" }
%"class.blink::Member.760" = type { %"class.blink::MemberBase.761" }
%"class.blink::MemberBase.761" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.762" = type { %"class.WTF::HashSet.765" }
%"class.WTF::HashSet.765" = type { %"class.WTF::HashTable.766" }
%"class.WTF::HashTable.766" = type <{ %"class.blink::WeakMember.768"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.768" = type { %"class.blink::MemberBase.286" }
%"class.WTF::HashSet.769" = type { %"class.WTF::HashTable.770" }
%"class.WTF::HashTable.770" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.773" = type { %"class.blink::MemberBase.774" }
%"class.blink::MemberBase.774" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.734, %"class.blink::Member.730", %"class.blink::Member.758" }
%"class.blink::HeapVector.775" = type { %"class.WTF::Vector.778" }
%"class.WTF::Vector.778" = type { %"class.WTF::VectorBuffer.779" }
%"class.WTF::VectorBuffer.779" = type { %"class.WTF::VectorBufferBase.780" }
%"class.WTF::VectorBufferBase.780" = type { %"class.blink::Member.758"*, i32, i32 }
%"class.blink::Member.782" = type { %"class.blink::MemberBase.783" }
%"class.blink::MemberBase.783" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.230 }
%class.scoped_refptr.230 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1941" = type { %"class.WTF::VectorBuffer.1942" }
%"class.WTF::VectorBuffer.1942" = type { %"class.WTF::VectorBufferBase.1943" }
%"class.WTF::VectorBufferBase.1943" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1944 }
%class.scoped_refptr.1944 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1945", i32, i32, %"class.blink::Persistent.1947" }
%"class.WTF::RefCounted.1945" = type { %"class.base::RefCounted.1946" }
%"class.base::RefCounted.1946" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1947" = type { %"class.blink::PersistentBase.1948" }
%"class.blink::PersistentBase.1948" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.1389" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1951" }
%"class.blink::HeapHashMap.1951" = type { %"class.WTF::HashMap.1954" }
%"class.WTF::HashMap.1954" = type { %"class.WTF::HashTable.1955" }
%"class.WTF::HashTable.1955" = type <{ %"struct.WTF::KeyValuePair.1957"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1957" = type { %"class.blink::WeakMember.1958", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1958" = type { %"class.blink::MemberBase.1959" }
%"class.blink::MemberBase.1959" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.1898" = type { %"class.blink::MemberBase.1899" }
%"class.blink::MemberBase.1899" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.689", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.283", %"class.blink::Member.283", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1965" }
%"class.blink::HeapHashMap.1965" = type { %"class.WTF::HashMap.1968" }
%"class.WTF::HashMap.1968" = type { %"class.WTF::HashTable.1969" }
%"class.WTF::HashTable.1969" = type <{ %"struct.WTF::KeyValuePair.1971"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1971" = type opaque
%"class.blink::Member.1972" = type { %"class.blink::MemberBase.1973" }
%"class.blink::MemberBase.1973" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1974" = type { %"class.WTF::HashSet.1977" }
%"class.WTF::HashSet.1977" = type { %"class.WTF::HashTable.1978" }
%"class.WTF::HashTable.1978" = type <{ %"class.blink::WeakMember.1980"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1980" = type opaque
%"class.blink::HeapHashSet.1981" = type { %"class.WTF::HashSet.1984" }
%"class.WTF::HashSet.1984" = type { %"class.WTF::HashTable.1985" }
%"class.WTF::HashTable.1985" = type <{ %"class.blink::WeakMember.1987"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1987" = type opaque
%"class.blink::Member.1988" = type { %"class.blink::MemberBase.1989" }
%"class.blink::MemberBase.1989" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1990" = type { %"class.blink::MemberBase.1991" }
%"class.blink::MemberBase.1991" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.689", i32, i32, i32, %"class.blink::Member.730", %"class.blink::Member.1994", %"class.blink::Member.2025", %"class.blink::HeapHashMap.2027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.2034", %"class.blink::HeapHashSet.2034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.2040", %"class.blink::Member.2052", %"class.blink::Member.2081", %"class.blink::Member.2083", %"class.blink::Member.2089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.2251", %"class.blink::Member.2257", %"class.blink::HeapHashMap.2259", %"class.blink::HeapHashMap.2266", %"class.std::__1::unique_ptr.2273", i32, %"class.blink::HeapVector.2279", %"class.blink::HeapVector.2279", %"class.blink::HeapVector.2006", %"class.blink::HeapHashSet.2287", %"class.blink::HeapHashMap.2294", %"class.blink::Member.2301", %"class.blink::HeapHashMap.2303", %class.scoped_refptr.2310, %class.scoped_refptr.1373, %"class.blink::Member.2215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.2311", %"class.blink::Member.281" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1994" = type { %"class.blink::MemberBase.1995" }
%"class.blink::MemberBase.1995" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.285", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1998", %"class.blink::HeapVector.2006", i8 }>
%"class.blink::HeapVector.1998" = type { %"class.WTF::Vector.2001" }
%"class.WTF::Vector.2001" = type { %"class.WTF::VectorBuffer.2002" }
%"class.WTF::VectorBuffer.2002" = type { %"class.WTF::VectorBufferBase.2003" }
%"class.WTF::VectorBufferBase.2003" = type { %"class.blink::Member.2004"*, i32, i32 }
%"class.blink::Member.2004" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet.2014" }
%"class.blink::HeapListHashSet.2014" = type { %"class.WTF::ListHashSet.base.2024", [7 x i8] }
%"class.WTF::ListHashSet.base.2024" = type <{ %"class.WTF::HashTable.2019", %"class.blink::Member.2021", %"class.blink::Member.2021", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2019" = type <{ %"class.blink::Member.2021"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2021" = type { %"class.blink::MemberBase.2022" }
%"class.blink::MemberBase.2022" = type { %"class.blink::HeapListHashSetNode.2023"* }
%"class.blink::HeapListHashSetNode.2023" = type { %"class.blink::Member.283", %"class.blink::Member.2021", %"class.blink::Member.2021" }
%"class.blink::Member.2025" = type { %"class.blink::MemberBase.2026" }
%"class.blink::MemberBase.2026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.2027" = type { %"class.WTF::HashMap.2030" }
%"class.WTF::HashMap.2030" = type { %"class.WTF::HashTable.2031" }
%"class.WTF::HashTable.2031" = type <{ %"struct.WTF::KeyValuePair.2033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2033" = type opaque
%"class.blink::HeapHashSet.2034" = type { %"class.WTF::HashSet.2037" }
%"class.WTF::HashSet.2037" = type { %"class.WTF::HashTable.2038" }
%"class.WTF::HashTable.2038" = type <{ %"class.blink::Member.285"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2040" = type { %"class.blink::MemberBase.2041" }
%"class.blink::MemberBase.2041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.2042", %"class.blink::Member.2044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.2042" = type { %"class.blink::MemberBase.2043" }
%"class.blink::MemberBase.2043" = type { %"class.blink::SVGResource"* }
%"class.blink::Member.2044" = type { %"class.blink::MemberBase.2045" }
%"class.blink::MemberBase.2045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.2048", %"class.blink::Member.2050" }
%"class.blink::Member.2048" = type { %"class.blink::MemberBase.2049" }
%"class.blink::MemberBase.2049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.2050" = type { %"class.blink::MemberBase.2051" }
%"class.blink::MemberBase.2051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.2515", %"class.blink::Member.2044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.1810] }
%"class.blink::HeapVector.2515" = type { %"class.WTF::Vector.2518" }
%"class.WTF::Vector.2518" = type { %"class.WTF::VectorBuffer.2519" }
%"class.WTF::VectorBuffer.2519" = type { %"class.WTF::VectorBufferBase.2520" }
%"class.WTF::VectorBufferBase.2520" = type { %"class.blink::Member.2050"*, i32, i32 }
%"class.blink::Member.2052" = type { %"class.blink::MemberBase.2053" }
%"class.blink::MemberBase.2053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.689", %class.scoped_refptr.1292, %"class.blink::SelectorFilter", %"class.blink::Member.2025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.2056" }
%"class.blink::HeapHashMap.2056" = type { %"class.WTF::HashMap.2059" }
%"class.WTF::HashMap.2059" = type { %"class.WTF::HashTable.2060" }
%"class.WTF::HashTable.2060" = type <{ %"struct.WTF::KeyValuePair.2062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.2063", %"class.std::__1::unique_ptr.2075" }
%"class.blink::HeapVector.2063" = type { %"class.WTF::Vector.2066" }
%"class.WTF::Vector.2066" = type { %"class.WTF::VectorBuffer.2067" }
%"class.WTF::VectorBuffer.2067" = type { %"class.WTF::VectorBufferBase.2068" }
%"class.WTF::VectorBufferBase.2068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.281", %"class.WTF::Vector.2069" }
%"class.WTF::Vector.2069" = type { %"class.WTF::VectorBuffer.2070" }
%"class.WTF::VectorBuffer.2070" = type { %"class.WTF::VectorBufferBase.2071", [16 x i8] }
%"class.WTF::VectorBufferBase.2071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.2075" = type { %"class.std::__1::__compressed_pair.2076" }
%"class.std::__1::__compressed_pair.2076" = type { %"struct.std::__1::__compressed_pair_elem.2077" }
%"struct.std::__1::__compressed_pair_elem.2077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.2081" = type { %"class.blink::MemberBase.2082" }
%"class.blink::MemberBase.2082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.2083" = type { %"class.blink::MemberBase.2084" }
%"class.blink::MemberBase.2084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.2087", i8, [7 x i8] }>
%"class.blink::Member.2087" = type { %"class.blink::MemberBase.2088" }
%"class.blink::MemberBase.2088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.2089" = type { %"class.blink::MemberBase.2090" }
%"class.blink::MemberBase.2090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.2111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.2093", %"class.WTF::HashMap.2093", %"class.WTF::HashMap.2093", %"class.WTF::HashMap.2098", %class.scoped_refptr.2103, %class.scoped_refptr.2110, %class.scoped_refptr.2109, %"class.WTF::Vector.753", %"class.WTF::Vector.753", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.2093" = type { %"class.WTF::HashTable.2094" }
%"class.WTF::HashTable.2094" = type <{ %"struct.WTF::KeyValuePair.2097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3123 }
%class.scoped_refptr.3123 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.2104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.2106", %"union.blink::InvalidationSet::Backing.2107", %"union.blink::InvalidationSet::Backing.2108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.2104" = type { %"class.base::RefCounted.2105" }
%"class.base::RefCounted.2105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.2106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.2107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.2108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.2098" = type { %"class.WTF::HashTable.2099" }
%"class.WTF::HashTable.2099" = type <{ %"struct.WTF::KeyValuePair.2102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2102" = type opaque
%class.scoped_refptr.2103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.2109, %class.scoped_refptr.2109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.2104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.2106", %"union.blink::InvalidationSet::Backing.2107", %"union.blink::InvalidationSet::Backing.2108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.2110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.2109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.2111" = type { %"class.blink::MemberBase.2112" }
%"class.blink::MemberBase.2112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.2115", %"class.blink::HeapHashMap.2115", %"class.blink::HeapHashMap.2115", %"class.blink::HeapHashMap.2115", %"class.blink::HeapVector.2122", %"class.blink::HeapVector.2122", %"class.blink::HeapVector.2122", %"class.blink::HeapVector.2122", %"class.blink::HeapVector.2122", %"class.blink::HeapVector.2122", %"class.blink::HeapVector.2122", %"class.blink::HeapVector.2122", %"class.blink::HeapVector.2122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.2158", %"class.blink::HeapVector.2166", %"class.blink::HeapVector.2174", %"class.blink::HeapVector.2191", %"class.blink::HeapVector.2199", %"class.blink::HeapVector.2207", %"class.blink::HeapVector.2220", %"class.WTF::Vector.2227", i32, %"class.blink::Member.2233" }
%"class.blink::HeapHashMap.2115" = type { %"class.WTF::HashMap.2118" }
%"class.WTF::HashMap.2118" = type { %"class.WTF::HashTable.2119" }
%"class.WTF::HashTable.2119" = type <{ %"struct.WTF::KeyValuePair.2121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2121" = type { %"class.WTF::AtomicString", %"class.blink::Member.3133" }
%"class.blink::Member.3133" = type { %"class.blink::MemberBase.3134" }
%"class.blink::MemberBase.3134" = type { %"class.blink::HeapVector.2122"* }
%"class.blink::HeapVector.2122" = type { %"class.WTF::Vector.2125" }
%"class.WTF::Vector.2125" = type { %"class.WTF::VectorBuffer.2126" }
%"class.WTF::VectorBuffer.2126" = type { %"class.WTF::VectorBufferBase.2127" }
%"class.WTF::VectorBufferBase.2127" = type { %"class.blink::Member.2128"*, i32, i32 }
%"class.blink::Member.2128" = type { %"class.blink::MemberBase.2129" }
%"class.blink::MemberBase.2129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.2132", i64, [4 x i32] }
%"class.blink::Member.2132" = type { %"class.blink::MemberBase.2133" }
%"class.blink::MemberBase.2133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.299", %"class.blink::Member.2153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.299" = type { %"class.blink::MemberBase.300" }
%"class.blink::MemberBase.300" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.2153" = type { %"class.blink::MemberBase.2154" }
%"class.blink::MemberBase.2154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.2158" = type { %"class.WTF::Vector.2161" }
%"class.WTF::Vector.2161" = type { %"class.WTF::VectorBuffer.2162" }
%"class.WTF::VectorBuffer.2162" = type { %"class.WTF::VectorBufferBase.2163" }
%"class.WTF::VectorBufferBase.2163" = type { %"class.blink::Member.2164"*, i32, i32 }
%"class.blink::Member.2164" = type { %"class.blink::MemberBase.3129" }
%"class.blink::MemberBase.3129" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.299", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.2166" = type { %"class.WTF::Vector.2169" }
%"class.WTF::Vector.2169" = type { %"class.WTF::VectorBuffer.2170" }
%"class.WTF::VectorBuffer.2170" = type { %"class.WTF::VectorBufferBase.2171" }
%"class.WTF::VectorBufferBase.2171" = type { %"class.blink::Member.2172"*, i32, i32 }
%"class.blink::Member.2172" = type { %"class.blink::MemberBase.3130" }
%"class.blink::MemberBase.3130" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.299" }
%"class.blink::HeapVector.2174" = type { %"class.WTF::Vector.2177" }
%"class.WTF::Vector.2177" = type { %"class.WTF::VectorBuffer.2178" }
%"class.WTF::VectorBuffer.2178" = type { %"class.WTF::VectorBufferBase.2179" }
%"class.WTF::VectorBufferBase.2179" = type { %"class.blink::Member.2180"*, i32, i32 }
%"class.blink::Member.2180" = type { %"class.blink::MemberBase.2181" }
%"class.blink::MemberBase.2181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.2182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.2182" = type { %"class.WTF::Vector.2185" }
%"class.WTF::Vector.2185" = type { %"class.WTF::VectorBuffer.2186" }
%"class.WTF::VectorBuffer.2186" = type { %"class.WTF::VectorBufferBase.2187" }
%"class.WTF::VectorBufferBase.2187" = type { %"class.blink::Member.2188"*, i32, i32 }
%"class.blink::Member.2188" = type opaque
%"class.blink::HeapVector.2191" = type { %"class.WTF::Vector.2194" }
%"class.WTF::Vector.2194" = type { %"class.WTF::VectorBuffer.2195" }
%"class.WTF::VectorBuffer.2195" = type { %"class.WTF::VectorBufferBase.2196" }
%"class.WTF::VectorBufferBase.2196" = type { %"class.blink::Member.2197"*, i32, i32 }
%"class.blink::Member.2197" = type { %"class.blink::MemberBase.3131" }
%"class.blink::MemberBase.3131" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.299" }
%"class.blink::HeapVector.2199" = type { %"class.WTF::Vector.2202" }
%"class.WTF::Vector.2202" = type { %"class.WTF::VectorBuffer.2203" }
%"class.WTF::VectorBuffer.2203" = type { %"class.WTF::VectorBufferBase.2204" }
%"class.WTF::VectorBufferBase.2204" = type { %"class.blink::Member.2205"*, i32, i32 }
%"class.blink::Member.2205" = type { %"class.blink::MemberBase.3132" }
%"class.blink::MemberBase.3132" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.2215", %"class.blink::Member.2215", %"class.blink::Member.2215", %"class.blink::Member.2215", %"class.blink::Member.2215", %"class.blink::Member.2215", %"class.blink::Member.2215", %"class.blink::Member.2215", %"class.blink::Member.2215", %"class.blink::Member.2215", i32, [4 x i8] }>
%"class.blink::HeapVector.2207" = type { %"class.WTF::Vector.2210" }
%"class.WTF::Vector.2210" = type { %"class.WTF::VectorBuffer.2211" }
%"class.WTF::VectorBuffer.2211" = type { %"class.WTF::VectorBufferBase.2212" }
%"class.WTF::VectorBufferBase.2212" = type { %"class.blink::Member.2213"*, i32, i32 }
%"class.blink::Member.2213" = type { %"class.blink::MemberBase.2214" }
%"class.blink::MemberBase.2214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.2215", %"class.blink::Member.2215", %"class.blink::Member.2215", %"class.blink::Member.2215", %"class.blink::Member.2215" }
%"class.blink::HeapVector.2220" = type { %"class.WTF::Vector.2223" }
%"class.WTF::Vector.2223" = type { %"class.WTF::VectorBuffer.2224" }
%"class.WTF::VectorBuffer.2224" = type { %"class.WTF::VectorBufferBase.2225" }
%"class.WTF::VectorBufferBase.2225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.2132", i32, i32 }
%"class.WTF::Vector.2227" = type { %"class.WTF::VectorBuffer.2228" }
%"class.WTF::VectorBuffer.2228" = type { %"class.WTF::VectorBufferBase.2229" }
%"class.WTF::VectorBufferBase.2229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.2230, i8, [7 x i8] }>
%class.scoped_refptr.2230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.2233" = type { %"class.blink::MemberBase.2234" }
%"class.blink::MemberBase.2234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.2237", %"class.blink::HeapHashMap.2237", %"class.blink::HeapHashMap.2237", %"class.blink::HeapHashMap.2237" }
%"class.blink::HeapHashMap.2237" = type { %"class.WTF::HashMap.2240" }
%"class.WTF::HashMap.2240" = type { %"class.WTF::HashTable.2241" }
%"class.WTF::HashTable.2241" = type <{ %"struct.WTF::KeyValuePair.2243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.2244" }
%"class.blink::HeapHashMap.2244" = type { %"class.WTF::HashMap.2247" }
%"class.WTF::HashMap.2247" = type { %"class.WTF::HashTable.2248" }
%"class.WTF::HashTable.2248" = type <{ %"struct.WTF::KeyValuePair.2250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2250" = type { %"class.blink::Member.687", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3124", %"class.WTF::Vector.3124" }
%"class.WTF::Vector.3124" = type { %"class.WTF::VectorBuffer.3125" }
%"class.WTF::VectorBuffer.3125" = type { %"class.WTF::VectorBufferBase.3126" }
%"class.WTF::VectorBufferBase.3126" = type { %class.scoped_refptr.3123*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.283", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.2251" = type { %"class.WTF::HashSet.2254" }
%"class.WTF::HashSet.2254" = type { %"class.WTF::HashTable.2255" }
%"class.WTF::HashTable.2255" = type <{ %"class.blink::Member.281"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2257" = type { %"class.blink::MemberBase.2258" }
%"class.blink::MemberBase.2258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.2259" = type { %"class.WTF::HashMap.2262" }
%"class.WTF::HashMap.2262" = type { %"class.WTF::HashTable.2263" }
%"class.WTF::HashTable.2263" = type <{ %"struct.WTF::KeyValuePair.2265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2265" = type opaque
%"class.blink::HeapHashMap.2266" = type { %"class.WTF::HashMap.2269" }
%"class.WTF::HashMap.2269" = type { %"class.WTF::HashTable.2270" }
%"class.WTF::HashTable.2270" = type <{ %"struct.WTF::KeyValuePair.2272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2272" = type opaque
%"class.std::__1::unique_ptr.2273" = type { %"class.std::__1::__compressed_pair.2274" }
%"class.std::__1::__compressed_pair.2274" = type { %"struct.std::__1::__compressed_pair_elem.2275" }
%"struct.std::__1::__compressed_pair_elem.2275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.2279" = type { %"class.WTF::Vector.2282" }
%"class.WTF::Vector.2282" = type { %"class.WTF::VectorBuffer.2283" }
%"class.WTF::VectorBuffer.2283" = type { %"class.WTF::VectorBufferBase.2284" }
%"class.WTF::VectorBufferBase.2284" = type { %"struct.std::__1::pair.2285"*, i32, i32 }
%"struct.std::__1::pair.2285" = type opaque
%"class.blink::HeapVector.2006" = type { %"class.WTF::Vector.2009" }
%"class.WTF::Vector.2009" = type { %"class.WTF::VectorBuffer.2010" }
%"class.WTF::VectorBuffer.2010" = type { %"class.WTF::VectorBufferBase.2011" }
%"class.WTF::VectorBufferBase.2011" = type { %"struct.std::__1::pair.2012"*, i32, i32 }
%"struct.std::__1::pair.2012" = type opaque
%"class.blink::HeapHashSet.2287" = type { %"class.WTF::HashSet.2290" }
%"class.WTF::HashSet.2290" = type { %"class.WTF::HashTable.2291" }
%"class.WTF::HashTable.2291" = type <{ %"class.blink::WeakMember.2293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2293" = type { %"class.blink::MemberBase.731" }
%"class.blink::HeapHashMap.2294" = type { %"class.WTF::HashMap.2297" }
%"class.WTF::HashMap.2297" = type { %"class.WTF::HashTable.2298" }
%"class.WTF::HashTable.2298" = type <{ %"struct.WTF::KeyValuePair.2300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2300" = type { %"class.WTF::AtomicString", %"class.blink::Member.2180" }
%"class.blink::Member.2301" = type { %"class.blink::MemberBase.2302" }
%"class.blink::MemberBase.2302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.2303" = type { %"class.WTF::HashMap.2306" }
%"class.WTF::HashMap.2306" = type { %"class.WTF::HashTable.2307" }
%"class.WTF::HashTable.2307" = type <{ %"struct.WTF::KeyValuePair.2309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2309" = type opaque
%class.scoped_refptr.2310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.2215" = type { %"class.blink::MemberBase.2216" }
%"class.blink::MemberBase.2216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.2311" = type { %"class.WTF::HashSet.2314" }
%"class.WTF::HashSet.2314" = type { %"class.WTF::HashTable.2315" }
%"class.WTF::HashTable.2315" = type <{ %"class.blink::Member.2317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2317" = type opaque
%"class.blink::Member.2318" = type { %"class.blink::MemberBase.2319" }
%"class.blink::MemberBase.2319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.285", %"class.blink::HeapVector.724" }
%"class.blink::Member.2320" = type { %"class.blink::MemberBase.2321" }
%"class.blink::MemberBase.2321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.2322" = type { %"class.blink::MemberBase.2323" }
%"class.blink::MemberBase.2323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.2324" = type { %"class.WTF::HashMap.2327" }
%"class.WTF::HashMap.2327" = type { %"class.WTF::HashTable.2328" }
%"class.WTF::HashTable.2328" = type <{ %"struct.WTF::KeyValuePair.2330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2330" = type opaque
%"class.WTF::Vector.2331" = type { %"class.WTF::VectorBuffer.2332" }
%"class.WTF::VectorBuffer.2332" = type { %"class.WTF::VectorBufferBase.2333" }
%"class.WTF::VectorBufferBase.2333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.2336" = type { %"class.blink::MemberBase.2337" }
%"class.blink::MemberBase.2337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.2340" = type { %"class.blink::MemberBase.2341" }
%"class.blink::MemberBase.2341" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.281" = type { %"class.blink::MemberBase.282" }
%"class.blink::MemberBase.282" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.2342" = type { %"class.blink::MemberBase.2343" }
%"class.blink::MemberBase.2343" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.2344" = type { %"class.WTF::Vector.2347" }
%"class.WTF::Vector.2347" = type { %"class.WTF::VectorBuffer.2348" }
%"class.WTF::VectorBuffer.2348" = type { %"class.WTF::VectorBufferBase.2349" }
%"class.WTF::VectorBufferBase.2349" = type { %"class.blink::Member.2350"*, i32, i32 }
%"class.blink::Member.2350" = type opaque
%"class.std::__1::unique_ptr.2352" = type { %"class.std::__1::__compressed_pair.2353" }
%"class.std::__1::__compressed_pair.2353" = type { %"struct.std::__1::__compressed_pair_elem.2354" }
%"struct.std::__1::__compressed_pair_elem.2354" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.2358" = type { %"class.WTF::HashSet.2361" }
%"class.WTF::HashSet.2361" = type { %"class.WTF::HashTable.2362" }
%"class.WTF::HashTable.2362" = type <{ %"class.blink::WeakMember.2364"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2364" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.2365", i32, [4 x i8] }>
%"class.WTF::Vector.2365" = type { %"class.WTF::VectorBuffer.2366" }
%"class.WTF::VectorBuffer.2366" = type { %"class.WTF::VectorBufferBase.2367" }
%"class.WTF::VectorBufferBase.2367" = type { %"struct.std::__1::pair.2368"*, i32, i32 }
%"struct.std::__1::pair.2368" = type opaque
%"class.blink::Member.2371" = type { %"class.blink::MemberBase.2372" }
%"class.blink::MemberBase.2372" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.2373" = type { %"class.WTF::VectorBuffer.2374" }
%"class.WTF::VectorBuffer.2374" = type { %"class.WTF::VectorBufferBase.2375" }
%"class.WTF::VectorBufferBase.2375" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2378" = type { %"class.std::__1::__compressed_pair.2379" }
%"class.std::__1::__compressed_pair.2379" = type { %"struct.std::__1::__compressed_pair_elem.2380" }
%"struct.std::__1::__compressed_pair_elem.2380" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.706" = type { %"class.WTF::Vector.709" }
%"class.WTF::Vector.709" = type { %"class.WTF::VectorBuffer.710" }
%"class.WTF::VectorBuffer.710" = type { %"class.WTF::VectorBufferBase.711" }
%"class.WTF::VectorBufferBase.711" = type { %"class.blink::Member.281"*, i32, i32 }
%"class.blink::HeapVector.2384" = type { %"class.WTF::Vector.2387" }
%"class.WTF::Vector.2387" = type { %"class.WTF::VectorBuffer.2388" }
%"class.WTF::VectorBuffer.2388" = type { %"class.WTF::VectorBufferBase.2389" }
%"class.WTF::VectorBufferBase.2389" = type { %"class.blink::Member.2390"*, i32, i32 }
%"class.blink::Member.2390" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.689" }
%"class.blink::Member.2392" = type { %"class.blink::MemberBase.2393" }
%"class.blink::MemberBase.2393" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.2394" = type { %"class.blink::MemberBase.2395" }
%"class.blink::MemberBase.2395" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.2396" = type { %"class.blink::MemberBase.2397" }
%"class.blink::MemberBase.2397" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.2398" = type { %"class.blink::MemberBase.2399" }
%"class.blink::MemberBase.2399" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.2400" = type { %"class.blink::MemberBase.2401" }
%"class.blink::MemberBase.2401" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.2402" = type { %"class.WTF::HashTable.2403" }
%"class.WTF::HashTable.2403" = type <{ %"struct.WTF::KeyValuePair.2406"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2406" = type opaque
%"class.blink::Member.2407" = type { %"class.blink::MemberBase.2408" }
%"class.blink::MemberBase.2408" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.2409" = type { %"class.blink::MemberBase.2410" }
%"class.blink::MemberBase.2410" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.2411" = type { %"class.blink::MemberBase.2412" }
%"class.blink::MemberBase.2412" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.2413" = type { %"class.blink::MemberBase.2414" }
%"class.blink::MemberBase.2414" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1964", { i64, i64 } }
%"class.blink::WeakMember.1964" = type { %"class.blink::MemberBase.690" }
%"class.blink::HeapHashSet.2415" = type { %"class.WTF::HashSet.2418" }
%"class.WTF::HashSet.2418" = type { %"class.WTF::HashTable.2419" }
%"class.WTF::HashTable.2419" = type <{ %"class.blink::Member.2421"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2421" = type opaque
%"class.blink::Member.2422" = type { %"class.blink::MemberBase.2423" }
%"class.blink::MemberBase.2423" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.2424" = type { %"class.blink::MemberBase.2425" }
%"class.blink::MemberBase.2425" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.2426" = type { %"class.blink::MemberBase.2427" }
%"class.blink::MemberBase.2427" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.2428" = type { %"class.blink::MemberBase.2429" }
%"class.blink::MemberBase.2429" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.2430" = type { %"class.blink::MemberBase.2431" }
%"class.blink::MemberBase.2431" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.2432" = type { %"class.std::__1::__compressed_pair.2433" }
%"class.std::__1::__compressed_pair.2433" = type { %"struct.std::__1::__compressed_pair_elem.2434" }
%"struct.std::__1::__compressed_pair_elem.2434" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2438" = type { %"class.std::__1::__compressed_pair.2439" }
%"class.std::__1::__compressed_pair.2439" = type { %"struct.std::__1::__compressed_pair_elem.2440" }
%"struct.std::__1::__compressed_pair_elem.2440" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.769", %"class.WTF::HashSet.769", %"class.WTF::HashSet.769", %"class.WTF::HashSet.769", %"class.WTF::HashSet.769", %"class.WTF::HashSet.769", i32, [4 x i8], %"class.WTF::HashMap.2441", %"class.WTF::HashMap.2441", %"class.WTF::HashMap.2441", %"class.WTF::HashMap.2441", %"class.WTF::HashMap.2441", %"class.WTF::HashMap.2441", %"class.WTF::HashMap.2441", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.2441" = type { %"class.WTF::HashTable.2442" }
%"class.WTF::HashTable.2442" = type <{ %"struct.WTF::KeyValuePair.2445"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2445" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.2449" = type { %"class.blink::MemberBase.2450" }
%"class.blink::MemberBase.2450" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.2451" = type { %"class.blink::MemberBase.2452" }
%"class.blink::MemberBase.2452" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.2453" = type { %"class.blink::MemberBase.2454" }
%"class.blink::MemberBase.2454" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.2455" = type { %"class.blink::MemberBase.2456" }
%"class.blink::MemberBase.2456" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type <{ %"class.blink::Member.2459", %"class.blink::Member.2459", i32, i8, [3 x i8] }>
%"class.blink::Member.2459" = type { %"class.blink::MemberBase.2460" }
%"class.blink::MemberBase.2460" = type { %"class.blink::IntersectionObserver"* }
%"class.blink::IntersectionObserver" = type opaque
%"class.WTF::Vector.1909" = type { %"class.WTF::VectorBuffer.1910" }
%"class.WTF::VectorBuffer.1910" = type { %"class.WTF::VectorBufferBase.1911" }
%"class.WTF::VectorBufferBase.1911" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.2461" = type { %"class.WTF::HashMap.2464" }
%"class.WTF::HashMap.2464" = type { %"class.WTF::HashTable.2465" }
%"class.WTF::HashTable.2465" = type <{ %"struct.WTF::KeyValuePair.2467"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2467" = type opaque
%"class.blink::Member.2468" = type { %"class.blink::MemberBase.2469" }
%"class.blink::MemberBase.2469" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.2470" = type { %"class.std::__1::__compressed_pair.2471" }
%"class.std::__1::__compressed_pair.2471" = type { %"struct.std::__1::__compressed_pair_elem.2472" }
%"struct.std::__1::__compressed_pair_elem.2472" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.2476" = type { %"class.blink::MemberBase.2477" }
%"class.blink::MemberBase.2477" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.2478" = type { %"class.blink::MemberBase.2479" }
%"class.blink::MemberBase.2479" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.2480" = type { %"class.WTF::HashMap.2483" }
%"class.WTF::HashMap.2483" = type { %"class.WTF::HashTable.2484" }
%"class.WTF::HashTable.2484" = type <{ %"struct.WTF::KeyValuePair.2486"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2486" = type opaque
%"class.blink::HeapObserverSet.2487" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2488" }
%"class.blink::HeapHashSet.2488" = type { %"class.WTF::HashSet.2491" }
%"class.WTF::HashSet.2491" = type { %"class.WTF::HashTable.2492" }
%"class.WTF::HashTable.2492" = type <{ %"class.blink::WeakMember.2494"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2494" = type opaque
%"class.blink::Member.2495" = type { %"class.blink::MemberBase.2496" }
%"class.blink::MemberBase.2496" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.2497" = type { %"class.blink::MemberBase.2498" }
%"class.blink::MemberBase.2498" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.689", %"class.blink::HeapHashSet.2504", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.2511", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.2504" = type { %"class.WTF::HashSet.2507" }
%"class.WTF::HashSet.2507" = type { %"class.WTF::HashTable.2508" }
%"class.WTF::HashTable.2508" = type <{ %"class.blink::Member.2510"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2510" = type opaque
%"class.blink::HeapTaskRunnerTimer.2511" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2512", { i64, i64 } }
%"class.blink::WeakMember.2512" = type { %"class.blink::MemberBase.2498" }
%"class.blink::WeakMember.2499" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::Node"* }
%"class.blink::Member.2500" = type { %"class.blink::MemberBase.2501" }
%"class.blink::MemberBase.2501" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.691" = type { %"class.blink::MemberBase.692" }
%"class.blink::MemberBase.692" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.695" }
%"class.blink::HeapHashMap.695" = type { %"class.WTF::HashMap.698" }
%"class.WTF::HashMap.698" = type { %"class.WTF::HashTable.699" }
%"class.WTF::HashTable.699" = type <{ %"struct.WTF::KeyValuePair.701"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.701" = type { %"class.WTF::AtomicString", %"class.blink::Member.702" }
%"class.blink::Member.702" = type { %"class.blink::MemberBase.703" }
%"class.blink::MemberBase.703" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.281", i32, %"class.blink::HeapVector.706" }
%"class.blink::Member.713" = type { %"class.blink::MemberBase.714" }
%"class.blink::MemberBase.714" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.715" = type { %"class.blink::MemberBase.716" }
%"class.blink::MemberBase.716" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.717" = type { %"class.blink::MemberBase.718" }
%"class.blink::MemberBase.718" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.719" }
%"class.blink::Member.719" = type { %"class.blink::MemberBase.720" }
%"class.blink::MemberBase.720" = type { %"class.blink::HeapHashMap.721"* }
%"class.blink::HeapHashMap.721" = type opaque
%"class.blink::Member.722" = type { %"class.blink::MemberBase.723" }
%"class.blink::MemberBase.723" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.724" = type { %"class.WTF::Vector.727" }
%"class.WTF::Vector.727" = type { %"class.WTF::VectorBuffer.728" }
%"class.WTF::VectorBuffer.728" = type { %"class.WTF::VectorBufferBase.729" }
%"class.WTF::VectorBufferBase.729" = type { %"class.blink::Member.730"*, i32, i32 }
%"class.blink::Member.287" = type { %"class.blink::MemberBase.288" }
%"class.blink::MemberBase.288" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.283" = type { %"class.blink::MemberBase.284" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.293" = type { %"class.blink::MemberBase.294" }
%"class.blink::MemberBase.294" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.297", %"class.blink::Member.299", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.297" = type { %"class.WTF::SingleThreadedBitField.298" }
%"class.WTF::SingleThreadedBitField.298" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.303 }
%class.scoped_refptr.303 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.304", %"class.WTF::AtomicString", %"class.WTF::Vector.306" }
%"class.WTF::RefCounted.304" = type { %"class.base::RefCounted.305" }
%"class.base::RefCounted.305" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.306" = type { %"class.WTF::VectorBuffer.307" }
%"class.WTF::VectorBuffer.307" = type { %"class.WTF::VectorBufferBase.308", [32 x i8] }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.2893", i8* }
%"class.WTF::StringAppend.2893" = type { i8*, %"class.WTF::String" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::StringTypeAdapter.3342" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::HTMLLinkElement" = type <{ %"class.blink::HTMLElement", %"class.blink::LinkLoaderClient", %"class.blink::Member.2901", %"class.blink::Member.2907", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.blink::Member.2909", %"class.WTF::Vector.2911", %"class.blink::Member.2916", %"class.blink::LinkRelAttribute", %"class.blink::Member.2909", %"class.WTF::HashSet.2918", %"class.blink::Member.2909", %"class.WTF::HashSet.2918", i8, [7 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::LinkLoaderClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2901" = type { %"class.blink::MemberBase.2902" }
%"class.blink::MemberBase.2902" = type { %"class.blink::LinkResource"* }
%"class.blink::LinkResource" = type { i32 (...)**, %"class.blink::Member.2905" }
%"class.blink::Member.2905" = type { %"class.blink::MemberBase.2906" }
%"class.blink::MemberBase.2906" = type { %"class.blink::HTMLLinkElement"* }
%"class.blink::Member.2907" = type { %"class.blink::MemberBase.2908" }
%"class.blink::MemberBase.2908" = type { %"class.blink::LinkLoader"* }
%"class.blink::LinkLoader" = type opaque
%"class.WTF::Vector.2911" = type { %"class.WTF::VectorBuffer.2912" }
%"class.WTF::VectorBuffer.2912" = type { %"class.WTF::VectorBufferBase.2913" }
%"class.WTF::VectorBufferBase.2913" = type { %"class.gfx::Size"*, i32, i32 }
%"class.blink::Member.2916" = type { %"class.blink::MemberBase.2917" }
%"class.blink::MemberBase.2917" = type { %"class.blink::RelList"* }
%"class.blink::RelList" = type { %"class.blink::DOMTokenList.base", [7 x i8] }
%"class.blink::DOMTokenList.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SpaceSplitString", %"class.blink::Member.281", %"class.blink::QualifiedName", i8 }>
%"class.blink::LinkRelAttribute" = type <{ i32, i16, [2 x i8] }>
%"class.blink::Member.2909" = type { %"class.blink::MemberBase.2910" }
%"class.blink::MemberBase.2910" = type { %"class.blink::DOMTokenList"* }
%"class.blink::DOMTokenList" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SpaceSplitString", %"class.blink::Member.281", %"class.blink::QualifiedName", i8, [7 x i8] }>
%"class.WTF::HashSet.2918" = type { %"class.WTF::HashTable.2919" }
%"class.WTF::HashTable.2919" = type <{ %"class.blink::KURL"*, i32, i32, i32, [4 x i8] }>
%"class.blink::LinkStyle" = type <{ %"class.blink::LinkResource", %"class.blink::ResourceClient.base", [7 x i8], %"class.blink::Member.730", i32, i32, i8, %"class.blink::StyleEngineContext", i8, i8, i8, i8, [2 x i8] }>
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.3160", [7 x i8], %"class.blink::Member.3161", i8 }>
%"class.blink::ThreadState::PrefinalizerRegistration.3160" = type { i8 }
%"class.blink::Member.3161" = type { %"class.blink::MemberBase.3162" }
%"class.blink::MemberBase.3162" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.3165", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.3185", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.3281", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.3298", %"class.blink::ResourceResponse", %class.scoped_refptr.1004, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.3165" = type { %"class.absl::optional_internal::optional_data.3166" }
%"class.absl::optional_internal::optional_data.3166" = type { %"class.absl::optional_internal::optional_data_base.3167" }
%"class.absl::optional_internal::optional_data_base.3167" = type { %"class.absl::optional_internal::optional_data_dtor_base.3168" }
%"class.absl::optional_internal::optional_data_dtor_base.3168" = type { i8, %union.anon.3169 }
%union.anon.3169 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.3170", i8, %"class.absl::optional.3175", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.3170" = type { %"class.absl::optional_internal::optional_data.3171" }
%"class.absl::optional_internal::optional_data.3171" = type { %"class.absl::optional_internal::optional_data_base.3172" }
%"class.absl::optional_internal::optional_data_base.3172" = type { %"class.absl::optional_internal::optional_data_dtor_base.3173" }
%"class.absl::optional_internal::optional_data_dtor_base.3173" = type { i8, [7 x i8], %union.anon.3174 }
%union.anon.3174 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.3175" = type { %"class.absl::optional_internal::optional_data.3176" }
%"class.absl::optional_internal::optional_data.3176" = type { %"class.absl::optional_internal::optional_data_base.3177" }
%"class.absl::optional_internal::optional_data_base.3177" = type { %"class.absl::optional_internal::optional_data_dtor_base.3178" }
%"class.absl::optional_internal::optional_data_dtor_base.3178" = type { i8, %union.anon.3179 }
%union.anon.3179 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.3180", %"class.WTF::Vector.924" }
%"class.WTF::Vector.3180" = type { %"class.WTF::VectorBuffer.3181" }
%"class.WTF::VectorBuffer.3181" = type { %"class.WTF::VectorBufferBase.3182" }
%"class.WTF::VectorBufferBase.3182" = type { i32*, i32, i32 }
%"class.WTF::Vector.3185" = type { %"class.WTF::VectorBuffer.3186" }
%"class.WTF::VectorBuffer.3186" = type { %"class.WTF::VectorBufferBase.3187" }
%"class.WTF::VectorBufferBase.3187" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet.3273" }
%"class.WTF::HashCountedSet.3273" = type { %"class.WTF::HashMap.3274" }
%"class.WTF::HashMap.3274" = type { %"class.WTF::HashTable.3275" }
%"class.WTF::HashTable.3275" = type <{ %"struct.WTF::KeyValuePair.3277"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3277" = type <{ %"class.blink::WeakMember.3278", i32, [4 x i8] }>
%"class.blink::WeakMember.3278" = type { %"class.blink::MemberBase.3279" }
%"class.blink::MemberBase.3279" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.3160", [7 x i8], %"class.blink::Member.3161", i8, [7 x i8] }>
%"class.blink::HeapHashSet.3281" = type { %"class.WTF::HashSet.3284" }
%"class.WTF::HashSet.3284" = type { %"class.WTF::HashTable.3285" }
%"class.WTF::HashTable.3285" = type <{ %"class.blink::WeakMember.3287"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3287" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.3288", %"class.WTF::String", %"class.WTF::HashSet.3289", i8, i8, %class.scoped_refptr.1944, %class.scoped_refptr.3294, %class.scoped_refptr.3296 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::StrongAlias.3288" = type { i8 }
%"class.WTF::HashSet.3289" = type { %"class.WTF::HashTable.3290" }
%"class.WTF::HashTable.3290" = type <{ %"struct.std::__1::pair.3293"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.3293" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.3294 = type { %"class.base::RefCountedData.3295"* }
%"class.base::RefCountedData.3295" = type opaque
%class.scoped_refptr.3296 = type { %"class.base::RefCountedData.3297"* }
%"class.base::RefCountedData.3297" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.831, %class.scoped_refptr.831, %class.scoped_refptr.831, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.3193, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.3210", %"class.absl::optional.3215", %"class.absl::optional.3225", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.225", %"class.absl::optional.3225", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.3225", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.225", %"class.absl::optional.3230", i8, %class.scoped_refptr.3236 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.3188" }
%"class.WTF::HashMap.3188" = type { %"class.WTF::HashTable.3189" }
%"class.WTF::HashTable.3189" = type <{ %"struct.WTF::KeyValuePair.3192"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3192" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.3193 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.3194", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.3208, i8, %"class.url::Origin" }
%"class.base::RefCounted.3194" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.3195" }
%"class.std::__1::vector.3195" = type { %"class.std::__1::__vector_base.3196" }
%"class.std::__1::__vector_base.3196" = type { %"class.std::__1::unique_ptr.3197"*, %"class.std::__1::unique_ptr.3197"*, %"class.std::__1::__compressed_pair.3203" }
%"class.std::__1::unique_ptr.3197" = type { %"class.std::__1::__compressed_pair.3198" }
%"class.std::__1::__compressed_pair.3198" = type { %"struct.std::__1::__compressed_pair_elem.3199" }
%"struct.std::__1::__compressed_pair_elem.3199" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.3203" = type { %"struct.std::__1::__compressed_pair_elem.3204" }
%"struct.std::__1::__compressed_pair_elem.3204" = type { %"class.std::__1::unique_ptr.3197"* }
%class.scoped_refptr.3208 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.3209", [4 x i8] }>
%"class.base::RefCountedThreadSafe.3209" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.3210" = type { %"class.absl::optional_internal::optional_data.3211" }
%"class.absl::optional_internal::optional_data.3211" = type { %"class.absl::optional_internal::optional_data_base.3212" }
%"class.absl::optional_internal::optional_data_base.3212" = type { %"class.absl::optional_internal::optional_data_dtor_base.3213" }
%"class.absl::optional_internal::optional_data_dtor_base.3213" = type { i8, %union.anon.3214 }
%union.anon.3214 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.3215" = type { %"class.absl::optional_internal::optional_data.3216" }
%"class.absl::optional_internal::optional_data.3216" = type { %"class.absl::optional_internal::optional_data_base.3217" }
%"class.absl::optional_internal::optional_data_base.3217" = type { %"class.absl::optional_internal::optional_data_dtor_base.3218" }
%"class.absl::optional_internal::optional_data_dtor_base.3218" = type { i8, %union.anon.3219 }
%union.anon.3219 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.3220", %"class.WTF::Vector.924", %"class.WTF::String" }
%"class.WTF::Vector.3220" = type { %"class.WTF::VectorBuffer.3221" }
%"class.WTF::VectorBuffer.3221" = type { %"class.WTF::VectorBufferBase.3222" }
%"class.WTF::VectorBufferBase.3222" = type { %class.scoped_refptr.831*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.155", %"class.absl::optional.155" }
%"class.absl::optional.3225" = type { %"class.absl::optional_internal::optional_data.3226" }
%"class.absl::optional_internal::optional_data.3226" = type { %"class.absl::optional_internal::optional_data_base.3227" }
%"class.absl::optional_internal::optional_data_base.3227" = type { %"class.absl::optional_internal::optional_data_dtor_base.3228" }
%"class.absl::optional_internal::optional_data_dtor_base.3228" = type { i8, %union.anon.3229 }
%union.anon.3229 = type { %"class.WTF::String" }
%"class.absl::optional.3230" = type { %"class.absl::optional_internal::optional_data.3231" }
%"class.absl::optional_internal::optional_data.3231" = type { %"class.absl::optional_internal::optional_data_base.3232" }
%"class.absl::optional_internal::optional_data_base.3232" = type { %"class.absl::optional_internal::optional_data_dtor_base.3233" }
%"class.absl::optional_internal::optional_data_dtor_base.3233" = type { i8, %union.anon.3234 }
%union.anon.3234 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.3235" }
%"class.mojo::PendingRemote.3235" = type { %"struct.mojo::internal::PendingRemoteState" }
%class.scoped_refptr.3236 = type { %"class.base::RefCountedData.3237"* }
%"class.base::RefCountedData.3237" = type { %"class.base::RefCountedThreadSafe.3238", %"class.base::internal::flat_tree.3239" }
%"class.base::RefCountedThreadSafe.3238" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.3239" = type { %"class.std::__1::vector.3240" }
%"class.std::__1::vector.3240" = type { %"class.std::__1::__vector_base.3241" }
%"class.std::__1::__vector_base.3241" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3242" }
%"class.std::__1::__compressed_pair.3242" = type { %"struct.std::__1::__compressed_pair_elem.3243" }
%"struct.std::__1::__compressed_pair_elem.3243" = type { i32* }
%"class.blink::Member.3298" = type { %"class.blink::MemberBase.3299" }
%"class.blink::MemberBase.3299" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.3247", %class.scoped_refptr.3257, %class.scoped_refptr.3258, %"struct.blink::CacheControlHeader", %"class.absl::optional.155", %"class.absl::optional.2753", %"class.absl::optional.2753", %"class.absl::optional.2753", i64, %"class.blink::KURL", %"class.WTF::Vector.3259", %"class.WTF::String", %"class.WTF::Vector.924", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.225", %"class.WTF::Vector.924", %"class.blink::KURL", %"class.absl::optional.3264" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.3247" = type { %"class.absl::optional_internal::optional_data.3248" }
%"class.absl::optional_internal::optional_data.3248" = type { %"class.absl::optional_internal::optional_data_base.3249" }
%"class.absl::optional_internal::optional_data_base.3249" = type { %"class.absl::optional_internal::optional_data_dtor_base.3250" }
%"class.absl::optional_internal::optional_data_dtor_base.3250" = type { i8, %union.anon.3251 }
%union.anon.3251 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.924", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1407", %"class.WTF::Vector.3252" }
%"class.WTF::Vector.3252" = type { %"class.WTF::VectorBuffer.3253" }
%"class.WTF::VectorBuffer.3253" = type { %"class.WTF::VectorBufferBase.3254" }
%"class.WTF::VectorBufferBase.3254" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.3257 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.3258 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.WTF::Vector.3259" = type { %"class.WTF::VectorBuffer.3260" }
%"class.WTF::VectorBuffer.3260" = type { %"class.WTF::VectorBufferBase.3261" }
%"class.WTF::VectorBufferBase.3261" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.3264" = type { %"class.absl::optional_internal::optional_data.3265" }
%"class.absl::optional_internal::optional_data.3265" = type { %"class.absl::optional_internal::optional_data_base.3266" }
%"class.absl::optional_internal::optional_data_base.3266" = type { %"class.absl::optional_internal::optional_data_dtor_base.3267" }
%"class.absl::optional_internal::optional_data_dtor_base.3267" = type { i8, %union.anon.3268 }
%union.anon.3268 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.3300" }
%"class.std::__1::__tree.3300" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3301", %"class.std::__1::__compressed_pair.3305" }
%"class.std::__1::__compressed_pair.3301" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.3305" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.blink::StyleEngineContext" = type { i8 }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.299", %"class.WTF::Vector.3309" }
%"class.WTF::Vector.3309" = type { %"class.WTF::VectorBuffer.3310" }
%"class.WTF::VectorBuffer.3310" = type { %"class.WTF::VectorBufferBase.3035", [64 x i8] }
%"class.WTF::VectorBufferBase.3035" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.2922", %"class.blink::Member.2924", %"class.blink::Member.2926", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.2922" = type { %"class.blink::MemberBase.2923" }
%"class.blink::MemberBase.2923" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.2924" = type { %"class.blink::MemberBase.2925" }
%"class.blink::MemberBase.2925" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.2926" = type { %"class.blink::MemberBase.2927" }
%"class.blink::MemberBase.2927" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.2971, %"class.WTF::Vector.2972", %"class.std::__1::unique_ptr.2977", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.2998, %"class.blink::Persistent.2999" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.2971 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.2972" = type { %"class.WTF::VectorBuffer.2973" }
%"class.WTF::VectorBuffer.2973" = type { %"class.WTF::VectorBufferBase.2974", [8 x i8] }
%"class.WTF::VectorBufferBase.2974" = type { %class.scoped_refptr.2971*, i32, i32 }
%"class.std::__1::unique_ptr.2977" = type { %"class.std::__1::__compressed_pair.2978" }
%"class.std::__1::__compressed_pair.2978" = type { %"struct.std::__1::__compressed_pair_elem.2979" }
%"struct.std::__1::__compressed_pair_elem.2979" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.2980", %"class.absl::optional.2985", %"class.absl::optional.2990" }
%"class.absl::optional.2980" = type { %"class.absl::optional_internal::optional_data.2981" }
%"class.absl::optional_internal::optional_data.2981" = type { %"class.absl::optional_internal::optional_data_base.2982" }
%"class.absl::optional_internal::optional_data_base.2982" = type { %"class.absl::optional_internal::optional_data_dtor_base.2983" }
%"class.absl::optional_internal::optional_data_dtor_base.2983" = type { i8, %union.anon.2984 }
%union.anon.2984 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.2985" = type { %"class.absl::optional_internal::optional_data.2986" }
%"class.absl::optional_internal::optional_data.2986" = type { %"class.absl::optional_internal::optional_data_base.2987" }
%"class.absl::optional_internal::optional_data_base.2987" = type { %"class.absl::optional_internal::optional_data_dtor_base.2988" }
%"class.absl::optional_internal::optional_data_dtor_base.2988" = type { i8, [3 x i8], %union.anon.2989 }
%union.anon.2989 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.2990" = type { %"class.absl::optional_internal::optional_data.2991" }
%"class.absl::optional_internal::optional_data.2991" = type { %"class.absl::optional_internal::optional_data_base.2992" }
%"class.absl::optional_internal::optional_data_base.2992" = type { %"class.absl::optional_internal::optional_data_dtor_base.2993" }
%"class.absl::optional_internal::optional_data_dtor_base.2993" = type { i8, %union.anon.2994 }
%union.anon.2994 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.2998 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type opaque
%"class.blink::Persistent.2999" = type { %"class.blink::PersistentBase.3000" }
%"class.blink::PersistentBase.3000" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.1389" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.3003", %"struct.blink::PhysicalRect", %"class.blink::Member.3013" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type opaque
%"class.std::__1::unique_ptr.3003" = type { %"class.std::__1::__compressed_pair.3004" }
%"class.std::__1::__compressed_pair.3004" = type { %"struct.std::__1::__compressed_pair_elem.3005" }
%"struct.std::__1::__compressed_pair_elem.3005" = type { %"class.WTF::HashSet.3006"* }
%"class.WTF::HashSet.3006" = type { %"class.WTF::HashTable.3007" }
%"class.WTF::HashTable.3007" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3013" = type { %"class.blink::MemberBase.3014" }
%"class.blink::MemberBase.3014" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.WTF::Vector.3033" = type { %"class.WTF::VectorBuffer.3034" }
%"class.WTF::VectorBuffer.3034" = type { %"class.WTF::VectorBufferBase.3035" }
%"class.blink::HTMLImageElement" = type { %"class.blink::HTMLElement", %"class.blink::ImageElementBase", %"class.blink::ActiveScriptWrappable.3038", %"class.blink::FormAssociated", %"class.blink::Member.2934", %"class.blink::Member.3039", %"class.blink::Member.2924", %"class.WTF::AtomicString", float, %"class.blink::Member.3041", i8, i8, i32, %"class.std::__1::unique_ptr.3043" }
%"class.blink::ImageElementBase" = type { %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", i32, i32 }
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%"class.blink::ActiveScriptWrappable.3038" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2934" = type { %"class.blink::MemberBase.2935" }
%"class.blink::MemberBase.2935" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type { %"class.blink::ImageLoader" }
%"class.blink::ImageLoader" = type { %"class.blink::ImageResourceObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2938", %"class.blink::Member.281", %"class.blink::Member.2939", %"class.blink::Member.2939", %"class.WTF::String", i32, %"class.WTF::AtomicString", %"class.base::WeakPtr.2951", %"class.std::__1::unique_ptr.2952", %"class.std::__1::unique_ptr.2952", %"class.blink::TaskHandle", %"class.blink::TaskHandle", i8, i32, %"class.blink::HeapVector.2961" }
%"class.blink::ThreadState::PrefinalizerRegistration.2938" = type { i8 }
%"class.blink::Member.2939" = type { %"class.blink::MemberBase.2940" }
%"class.blink::MemberBase.2940" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.2943", float, i8, %class.scoped_refptr.2945, %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet" }
%"class.blink::Member.2943" = type { %"class.blink::MemberBase.2944" }
%"class.blink::MemberBase.2944" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.2945 = type { %"class.blink::Image"* }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.2946" }
%"class.WTF::HashMap.2946" = type { %"class.WTF::HashTable.2947" }
%"class.WTF::HashTable.2947" = type <{ %"struct.WTF::KeyValuePair.2950"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2950" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.base::WeakPtr.2951" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.2952" = type { %"class.std::__1::__compressed_pair.2953" }
%"class.std::__1::__compressed_pair.2953" = type { %"struct.std::__1::__compressed_pair_elem.2954" }
%"struct.std::__1::__compressed_pair_elem.2954" = type { %"class.blink::IncrementLoadEventDelayCount"* }
%"class.blink::IncrementLoadEventDelayCount" = type { %"class.blink::WeakPersistent.2955" }
%"class.blink::WeakPersistent.2955" = type { %"class.blink::PersistentBase.2956" }
%"class.blink::PersistentBase.2956" = type { %"class.blink::Document"*, %"class.blink::PersistentNodePtr.2957" }
%"class.blink::PersistentNodePtr.2957" = type { %"class.blink::PersistentNode"* }
%"class.blink::HeapVector.2961" = type { %"class.WTF::Vector.2964" }
%"class.WTF::Vector.2964" = type { %"class.WTF::VectorBuffer.2965" }
%"class.WTF::VectorBuffer.2965" = type { %"class.WTF::VectorBufferBase.2966" }
%"class.WTF::VectorBufferBase.2966" = type { %"class.blink::Member.2967"*, i32, i32 }
%"class.blink::Member.2967" = type opaque
%"class.blink::Member.3039" = type { %"class.blink::MemberBase.3040" }
%"class.blink::MemberBase.3040" = type { %"class.blink::HTMLImageElement::ViewportChangeListener"* }
%"class.blink::HTMLImageElement::ViewportChangeListener" = type opaque
%"class.blink::Member.3041" = type { %"class.blink::MemberBase.3042" }
%"class.blink::MemberBase.3042" = type { %"class.blink::HTMLSourceElement"* }
%"class.blink::HTMLSourceElement" = type opaque
%"class.std::__1::unique_ptr.3043" = type { %"class.std::__1::__compressed_pair.3044" }
%"class.std::__1::__compressed_pair.3044" = type { %"struct.std::__1::__compressed_pair_elem.3045" }
%"struct.std::__1::__compressed_pair_elem.3045" = type { %"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics"* }
%"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics" = type { i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.3314", %"class.blink::Member.3316", %"class.blink::Member.3318", %"class.blink::Member.3337", %"class.blink::Member.3339" }
%"class.blink::Member.3314" = type { %"class.blink::MemberBase.3315" }
%"class.blink::MemberBase.3315" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.1292 }
%"class.blink::Member.3316" = type { %"class.blink::MemberBase.3317" }
%"class.blink::MemberBase.3317" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.3318" = type { %"class.blink::MemberBase.3319" }
%"class.blink::MemberBase.3319" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.3322", %"class.blink::HeapHashSet.3331" }
%"class.blink::HeapVector.3322" = type { %"class.WTF::Vector.3325" }
%"class.WTF::Vector.3325" = type { %"class.WTF::VectorBuffer.3326" }
%"class.WTF::VectorBuffer.3326" = type { %"class.WTF::VectorBufferBase.3327" }
%"class.WTF::VectorBufferBase.3327" = type { %"class.blink::Member.3328"*, i32, i32 }
%"class.blink::Member.3328" = type { %"class.blink::MemberBase.3329" }
%"class.blink::MemberBase.3329" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.3331" = type { %"class.WTF::HashSet.3334" }
%"class.WTF::HashSet.3334" = type { %"class.WTF::HashTable.3335" }
%"class.WTF::HashTable.3335" = type <{ %"class.blink::Member.3328"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3337" = type { %"class.blink::MemberBase.3338" }
%"class.blink::MemberBase.3338" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3339" = type { %"class.blink::MemberBase.3340" }
%"class.blink::MemberBase.3340" = type { %"class.blink::HeapHashSet.3341"* }
%"class.blink::HeapHashSet.3341" = type opaque
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.2318", %"class.blink::Member.3050", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.3050" = type { %"class.blink::MemberBase.3051" }
%"class.blink::MemberBase.3051" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringTypeAdapter.3343" = type { %"class.WTF::StringTypeAdapter.3344" }
%"class.WTF::StringTypeAdapter.3344" = type { %"class.WTF::StringView" }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking" = type { i8 }

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZN5blink15FrameSerializer8DelegateD2Ev = comdat any

$_ZN5blink27FrameSerializerDelegateImplD0Ev = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_7ElementEE4CallIJRKNS_17HTMLQualifiedNameEPNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_7ElementEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS3_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_7ElementEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_7ElementEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_7ElementEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_7ElementEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_7ElementEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_7ElementEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_7ElementEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_7ElementEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE5clearEv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_7ElementEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_7ElementEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [8 x i8] c"<frame-\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"@mhtml.blink>\00", align 1
@_ZTVN5blink27FrameSerializerDelegateImplE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FrameSerializer::Delegate"*)* @_ZN5blink15FrameSerializer8DelegateD2Ev to i8*), i8* bitcast (void (%"class.blink::FrameSerializerDelegateImpl"*)* @_ZN5blink27FrameSerializerDelegateImplD0Ev to i8*), i8* bitcast (i1 (%"class.blink::FrameSerializerDelegateImpl"*, %"class.blink::Element"*)* @_ZN5blink27FrameSerializerDelegateImpl19ShouldIgnoreElementERKNS_7ElementE to i8*), i8* bitcast (i1 (%"class.blink::FrameSerializerDelegateImpl"*, %"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZN5blink27FrameSerializerDelegateImpl21ShouldIgnoreAttributeERKNS_7ElementERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::FrameSerializerDelegateImpl"*, %"class.blink::Element"*, %"class.WTF::String"*)* @_ZN5blink27FrameSerializerDelegateImpl11RewriteLinkERKNS_7ElementERN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::FrameSerializerDelegateImpl"*, %"class.blink::KURL"*)* @_ZN5blink27FrameSerializerDelegateImpl25ShouldSkipResourceWithURLERKNS_4KURLE to i8*), i8* bitcast (void (%"class.WTF::Vector.3033"*, %"class.blink::FrameSerializerDelegateImpl"*, %"class.blink::Element"*)* @_ZN5blink27FrameSerializerDelegateImpl19GetCustomAttributesERKNS_7ElementE to i8*), i8* bitcast ({ %"class.blink::Node"*, %"class.blink::Element"* } (%"class.blink::FrameSerializerDelegateImpl"*, %"class.blink::Element"*)* @_ZNK5blink27FrameSerializerDelegateImpl19GetAuxiliaryDOMTreeERKNS_7ElementE to i8*), i8* bitcast (i1 (%"class.blink::FrameSerializerDelegateImpl"*)* @_ZN5blink27FrameSerializerDelegateImpl26ShouldCollectProblemMetricEv to i8*)] }, align 8
@_ZN5blink10html_names11kHiddenAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16input_type_names7kHiddenE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names12kContentAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kHttpEquivAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.2 = private unnamed_addr constant [24 x i8] c"Content-Security-Policy\00", align 1
@_ZN5blink10html_names11kSrcsetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kSizesAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kPingAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink12_GLOBAL__N_124kShadowModeAttributeNameE = internal constant [11 x i8] c"shadowmode\00", align 1
@_ZN5blink12_GLOBAL__N_134kShadowDelegatesFocusAttributeNameE = internal constant [21 x i8] c"shadowdelegatesfocus\00", align 16
@_ZN5blink10html_names11kSrcdocAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kIntegrityAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kWidthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kHeightAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.3 = private unnamed_addr constant [5 x i8] c"open\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"closed\00", align 1
@_ZN5blink10html_names12kTemplateTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF12g_empty_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.5 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.6 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.7 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZN5blink10html_names8kLinkTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kIFrameTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kHeadTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kInputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kMetaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kImgTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names5kATagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kFrameTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.9 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.11 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv = private unnamed_addr constant [64 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Attribute]\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.14 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.15 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.16 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.18 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_7ElementEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_7ElementEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_7ElementEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_7ElementEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.19 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1

@_ZN5blink27FrameSerializerDelegateImplC1ERNS_18WebFrameSerializer28MHTMLPartsGenerationDelegateERNS_11HeapHashSetINS_10WeakMemberIKNS_7ElementEEEN3WTF10MemberHashIS7_EENS9_10HashTraitsIS8_EEEE = hidden unnamed_addr alias void (%"class.blink::FrameSerializerDelegateImpl"*, %"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*, %"class.blink::HeapHashSet.2894"*), void (%"class.blink::FrameSerializerDelegateImpl"*, %"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*, %"class.blink::HeapHashSet.2894"*)* @_ZN5blink27FrameSerializerDelegateImplC2ERNS_18WebFrameSerializer28MHTMLPartsGenerationDelegateERNS_11HeapHashSetINS_10WeakMemberIKNS_7ElementEEEN3WTF10MemberHashIS7_EENS9_10HashTraitsIS8_EEEE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink27FrameSerializerDelegateImpl12GetContentIDEPNS_5FrameE(%"class.blink::Frame"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::StringAppend", align 8
  %4 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %5, align 8
  %6 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN5blink5Frame12ToTraceValueEv(%"class.blink::Frame"* %0) #10
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %14 = select i1 %10, i8* %12, i8* %13
  %15 = icmp eq i8* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %1
  %17 = tail call i64 @strlen(i8* nonnull %14) #11
  br label %18

18:                                               ; preds = %1, %16
  %19 = phi i64 [ %17, %16 ], [ 0, %1 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %14, i64 %19) #10
  %20 = bitcast %"class.WTF::StringAppend"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %98, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %40

30:                                               ; preds = %23
  %31 = zext i32 %29 to i33
  %32 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #10
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !2

37:                                               ; preds = %30
  call void @llvm.trap() #10
  unreachable

38:                                               ; preds = %30
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %28, align 4
  br label %40

40:                                               ; preds = %38, %23
  %41 = phi i32 [ %39, %38 ], [ %29, %23 ]
  %42 = load atomic i32, i32* %24 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %55

45:                                               ; preds = %40
  %46 = zext i32 %41 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #10
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %45
  call void @llvm.trap() #10
  unreachable

53:                                               ; preds = %45
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %28, align 4
  br label %55

55:                                               ; preds = %53, %40
  %56 = phi i32 [ %54, %53 ], [ %41, %40 ]
  %57 = load atomic i32, i32* %24 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %55
  %61 = add i32 %56, -1
  store i32 %61, i32* %28, align 4
  br label %62

62:                                               ; preds = %60, %55
  %63 = phi i32 [ %61, %60 ], [ %56, %55 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #10
  br label %66

66:                                               ; preds = %62, %65
  %67 = load atomic i32, i32* %24 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %81

70:                                               ; preds = %66
  %71 = load i32, i32* %28, align 4
  %72 = zext i32 %71 to i33
  %73 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #10
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !2

78:                                               ; preds = %70
  call void @llvm.trap() #10
  unreachable

79:                                               ; preds = %70
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %28, align 4
  br label %81

81:                                               ; preds = %66, %79
  %82 = bitcast %"class.WTF::StringAppend"* %3 to i64*
  store i64 ptrtoint ([8 x i8]* @.str to i64), i64* %82, align 8
  %83 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %83, align 8
  %84 = load atomic i32, i32* %24 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %102

87:                                               ; preds = %81
  %88 = load i32, i32* %28, align 4
  %89 = zext i32 %88 to i33
  %90 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %89, i33 1) #10
  %91 = extractvalue { i33, i1 } %90, 1
  %92 = extractvalue { i33, i1 } %90, 0
  %93 = icmp slt i33 %92, 0
  %94 = or i1 %91, %93
  br i1 %94, label %95, label %96, !prof !2

95:                                               ; preds = %87
  call void @llvm.trap() #10
  unreachable

96:                                               ; preds = %87
  %97 = trunc i33 %92 to i32
  store i32 %97, i32* %28, align 4
  br label %102

98:                                               ; preds = %18
  %99 = bitcast %"class.WTF::StringAppend"* %3 to i64*
  store i64 ptrtoint ([8 x i8]* @.str to i64), i64* %99, align 8
  %100 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %100, align 8
  %101 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i8** %101, align 8
  br label %114

102:                                              ; preds = %96, %81
  %103 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i8** %103, align 8
  %104 = load atomic i32, i32* %24 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = load i32, i32* %28, align 4
  br i1 %106, label %108, label %110

108:                                              ; preds = %102
  %109 = add i32 %107, -1
  store i32 %109, i32* %28, align 4
  br label %110

110:                                              ; preds = %108, %102
  %111 = phi i32 [ %109, %108 ], [ %107, %102 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #10
  br label %114

114:                                              ; preds = %98, %110, %113
  %115 = phi %"class.WTF::StringImpl"** [ %100, %98 ], [ %83, %110 ], [ %83, %113 ]
  %116 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %3)
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #10
  br label %132

132:                                              ; preds = %114, %128, %131
  br i1 %22, label %146, label %133

133:                                              ; preds = %132
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  br i1 %137, label %140, label %142

140:                                              ; preds = %133
  %141 = add i32 %139, -1
  store i32 %141, i32* %138, align 4
  br label %142

142:                                              ; preds = %140, %133
  %143 = phi i32 [ %141, %140 ], [ %139, %133 ]
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #10
  br label %146

146:                                              ; preds = %132, %142, %145
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %162, label %149

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  br i1 %153, label %156, label %158

156:                                              ; preds = %149
  %157 = add i32 %155, -1
  store i32 %157, i32* %154, align 4
  br label %158

158:                                              ; preds = %156, %149
  %159 = phi i32 [ %157, %156 ], [ %155, %149 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #10
  br label %162

162:                                              ; preds = %146, %158, %161
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  ret %"class.WTF::StringImpl"* %116
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZN5blink5Frame12ToTraceValueEv(%"class.blink::Frame"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.3342", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.3342", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.3342"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #10
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3342"* nonnull %3, i8* %8) #10
  %9 = bitcast %"class.WTF::StringTypeAdapter.3342"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #10
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3342"* nonnull %2, i8* %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #10
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #10
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #10
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #10
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #10
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #10
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #10
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #10
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #10
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink27FrameSerializerDelegateImplC2ERNS_18WebFrameSerializer28MHTMLPartsGenerationDelegateERNS_11HeapHashSetINS_10WeakMemberIKNS_7ElementEEEN3WTF10MemberHashIS7_EENS9_10HashTraitsIS8_EEEE(%"class.blink::FrameSerializerDelegateImpl"* nocapture, %"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"* dereferenceable(8), %"class.blink::HeapHashSet.2894"* dereferenceable(24)) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.blink::FrameSerializerDelegateImpl", %"class.blink::FrameSerializerDelegateImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink27FrameSerializerDelegateImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::FrameSerializerDelegateImpl", %"class.blink::FrameSerializerDelegateImpl"* %0, i64 0, i32 1
  store %"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"* %1, %"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::FrameSerializerDelegateImpl", %"class.blink::FrameSerializerDelegateImpl"* %0, i64 0, i32 2
  store %"class.blink::HeapHashSet.2894"* %2, %"class.blink::HeapHashSet.2894"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::FrameSerializerDelegateImpl", %"class.blink::FrameSerializerDelegateImpl"* %0, i64 0, i32 3
  store i8 0, i8* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink27FrameSerializerDelegateImpl19ShouldIgnoreElementERKNS_7ElementE(%"class.blink::FrameSerializerDelegateImpl"* nocapture, %"class.blink::Element"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN5blink27FrameSerializerDelegateImpl25ShouldIgnoreHiddenElementERKNS_7ElementE(%"class.blink::FrameSerializerDelegateImpl"* undef, %"class.blink::Element"* dereferenceable(104) %1)
  br i1 %3, label %53, label %4

4:                                                ; preds = %2
  %5 = tail call zeroext i1 @_ZN5blink27FrameSerializerDelegateImpl23ShouldIgnoreMetaElementERKNS_7ElementE(%"class.blink::FrameSerializerDelegateImpl"* undef, %"class.blink::Element"* dereferenceable(104) %1)
  br i1 %5, label %53, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::FrameSerializerDelegateImpl", %"class.blink::FrameSerializerDelegateImpl"* %0, i64 0, i32 1
  %8 = load %"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*, %"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"** %7, align 8
  %9 = bitcast %"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"* %8 to i1 (%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*)***
  %10 = load i1 (%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*)**, i1 (%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*)*, i1 (%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*)** %10, i64 2
  %12 = load i1 (%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*)*, i1 (%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"* %8) #10
  br i1 %13, label %14, label %16

14:                                               ; preds = %6
  %15 = tail call zeroext i1 @_ZN5blink27FrameSerializerDelegateImpl31ShouldIgnorePopupOverlayElementERKNS_7ElementE(%"class.blink::FrameSerializerDelegateImpl"* %0, %"class.blink::Element"* dereferenceable(104) %1)
  br i1 %15, label %53, label %16

16:                                               ; preds = %14, %6
  %17 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kLinkTagE, align 8
  %18 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %19 = icmp eq %"class.blink::Element"* %1, null
  br i1 %19, label %52, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 48
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %52

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %17, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 1, i32 2
  %29 = bitcast %"class.blink::Member.283"* %28 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %32, %34
  %36 = bitcast %"class.blink::Element"* %1 to %"class.blink::HTMLLinkElement"*
  br i1 %35, label %37, label %52

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 2
  %39 = bitcast %"class.blink::Element"* %38 to %"class.blink::LinkRelAttribute"*
  %40 = getelementptr inbounds %"class.blink::LinkRelAttribute", %"class.blink::LinkRelAttribute"* %39, i64 0, i32 1
  %41 = load i16, i16* %40, align 4
  %42 = and i16 %41, 1
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %37
  %45 = tail call %"class.blink::LinkStyle"* @_ZNK5blink15HTMLLinkElement12GetLinkStyleEv(%"class.blink::HTMLLinkElement"* nonnull %36) #10
  %46 = icmp eq %"class.blink::LinkStyle"* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %44
  %48 = tail call %"class.blink::LinkStyle"* @_ZNK5blink15HTMLLinkElement12GetLinkStyleEv(%"class.blink::HTMLLinkElement"* nonnull %36) #10
  %49 = getelementptr inbounds %"class.blink::LinkStyle", %"class.blink::LinkStyle"* %48, i64 0, i32 3, i32 0, i32 0
  %50 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %49, align 8
  %51 = icmp eq %"class.blink::CSSStyleSheet"* %50, null
  br i1 %51, label %53, label %52

52:                                               ; preds = %37, %25, %16, %20, %47
  br label %53

53:                                               ; preds = %44, %52, %47, %14, %4, %2
  %54 = phi i1 [ true, %2 ], [ true, %4 ], [ true, %14 ], [ false, %52 ], [ true, %47 ], [ true, %44 ]
  ret i1 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink27FrameSerializerDelegateImpl25ShouldIgnoreHiddenElementERKNS_7ElementE(%"class.blink::FrameSerializerDelegateImpl"* nocapture readnone, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kIFrameTagE, align 8
  %4 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %5 = icmp eq %"class.blink::Element"* %1, null
  br i1 %5, label %48, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 48
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %48

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1, i32 2
  %15 = bitcast %"class.blink::Member.283"* %14 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %13, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %18, %20
  br i1 %21, label %22, label %48

22:                                               ; preds = %11
  %23 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %4) #10
  %24 = icmp eq %"class.blink::ContainerNode"* %23, null
  br i1 %24, label %48, label %25

25:                                               ; preds = %22
  %26 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHeadTagE, align 8
  %27 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %26, i64 0, i32 0, i32 0, i32 0
  br label %28

28:                                               ; preds = %45, %25
  %29 = phi %"class.blink::ContainerNode"* [ %23, %25 ], [ %46, %45 ]
  %30 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %29, i64 0, i32 0
  %31 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %29, i64 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 48
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %45

35:                                               ; preds = %28
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 1, i32 2
  %38 = bitcast %"class.blink::Member.283"* %37 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %41, %43
  br i1 %44, label %136, label %45

45:                                               ; preds = %35, %28
  %46 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %30) #10
  %47 = icmp eq %"class.blink::ContainerNode"* %46, null
  br i1 %47, label %48, label %28

48:                                               ; preds = %45, %22, %2, %6, %11
  %49 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHiddenAttrE, align 8
  %50 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 3, i32 0, i32 0
  %51 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %50, align 8
  %52 = icmp eq %"class.blink::ElementData"* %51, null
  br i1 %52, label %104, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %51, i64 0, i32 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %65, label %58

58:                                               ; preds = %53
  %59 = bitcast %"class.blink::ElementData"* %51 to %"class.blink::UniqueElementData"*
  %60 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %51, i64 1, i32 1
  %61 = bitcast %"class.blink::Member.299"* %60 to %"class.blink::Attribute"**
  %62 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %59, i64 0, i32 2, i32 0, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  br label %70

65:                                               ; preds = %53
  %66 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %51, i64 1
  %67 = bitcast %"class.blink::ElementData"* %66 to %"class.blink::Attribute"*
  %68 = lshr i32 %55, 1
  %69 = and i32 %68, 268435455
  br label %70

70:                                               ; preds = %65, %58
  %71 = phi %"class.blink::Attribute"* [ %67, %65 ], [ %62, %58 ]
  %72 = phi i32 [ %69, %65 ], [ %64, %58 ]
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %71, i64 %73
  %75 = icmp eq i32 %72, 0
  br i1 %75, label %104, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %49, i64 0, i32 0, i32 0
  %78 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %78, i64 0, i32 3, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %78, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %81

81:                                               ; preds = %97, %76
  %82 = phi %"class.blink::Attribute"* [ %71, %76 ], [ %98, %97 ]
  %83 = phi i32 [ 0, %76 ], [ %99, %97 ]
  %84 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %82, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %84, align 8
  %86 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %85, %78
  br i1 %86, label %101, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %85, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %89, %90
  br i1 %91, label %92, label %97

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %85, i64 0, i32 4, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %94, %95
  br i1 %96, label %101, label %97

97:                                               ; preds = %92, %87
  %98 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %82, i64 1
  %99 = add i32 %83, 1
  %100 = icmp eq %"class.blink::Attribute"* %98, %74
  br i1 %100, label %104, label %81

101:                                              ; preds = %81, %92
  %102 = icmp ne i32 %83, -1
  %103 = or i1 %5, %102
  br i1 %103, label %136, label %105

104:                                              ; preds = %97, %70, %48
  br i1 %5, label %136, label %105

105:                                              ; preds = %101, %104
  %106 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %107 = load i32, i32* %106, align 8
  %108 = and i32 %107, 48
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %136

110:                                              ; preds = %105
  %111 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %112 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %111, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1, i32 2
  %115 = bitcast %"class.blink::Member.283"* %114 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %116 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %116, i64 0, i32 3, i32 0, i32 0, i32 0
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %113, i64 0, i32 3, i32 0, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %121 = icmp ne %"class.WTF::StringImpl"* %118, %120
  %122 = or i1 %5, %121
  br i1 %122, label %136, label %123

123:                                              ; preds = %110
  %124 = bitcast %"class.blink::Element"* %1 to %"class.blink::HTMLFormControlElement"*
  %125 = bitcast %"class.blink::Element"* %1 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %126 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %125, align 8
  %127 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %126, i64 171
  %128 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %127, align 8
  %129 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %128(%"class.blink::HTMLFormControlElement"* %124) #10
  %130 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kHiddenE, align 8
  %131 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %129, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %130, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %132, %134
  br label %136

136:                                              ; preds = %35, %110, %101, %104, %105, %123
  %137 = phi i1 [ %102, %101 ], [ %135, %123 ], [ false, %110 ], [ false, %105 ], [ false, %104 ], [ true, %35 ]
  ret i1 %137
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink27FrameSerializerDelegateImpl23ShouldIgnoreMetaElementERKNS_7ElementE(%"class.blink::FrameSerializerDelegateImpl"* nocapture readnone, %"class.blink::Element"* readonly dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMetaTagE, align 8
  %6 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %7 = icmp eq %"class.blink::Element"* %1, null
  br i1 %7, label %154, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 48
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %154

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %5, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 1, i32 2
  %17 = bitcast %"class.blink::Member.283"* %16 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %20, %22
  br i1 %23, label %24, label %154

24:                                               ; preds = %13
  %25 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kContentAttrE, align 8
  %26 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %154, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.299"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %154, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %25, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %73, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %74, %73 ]
  %59 = phi i32 [ 0, %52 ], [ %75, %73 ]
  %60 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %60, align 8
  %62 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %61, %54
  br i1 %62, label %77, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %61, i64 0, i32 3, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %65, %66
  br i1 %67, label %68, label %73

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %61, i64 0, i32 4, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %70, %71
  br i1 %72, label %77, label %73

73:                                               ; preds = %68, %63
  %74 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %75 = add i32 %59, 1
  %76 = icmp eq %"class.blink::Attribute"* %74, %50
  br i1 %76, label %154, label %57

77:                                               ; preds = %57, %68
  %78 = icmp eq i32 %59, -1
  br i1 %78, label %154, label %79

79:                                               ; preds = %77
  %80 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kHttpEquivAttrE, align 8
  br i1 %33, label %88, label %81

81:                                               ; preds = %79
  %82 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %83 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %84 = bitcast %"class.blink::Member.299"* %83 to %"class.blink::Attribute"**
  %85 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %82, i64 0, i32 2, i32 0, i32 0, i32 2
  %87 = load i32, i32* %86, align 4
  br label %93

88:                                               ; preds = %79
  %89 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %90 = bitcast %"class.blink::ElementData"* %89 to %"class.blink::Attribute"*
  %91 = lshr i32 %31, 1
  %92 = and i32 %91, 268435455
  br label %93

93:                                               ; preds = %88, %81
  %94 = phi %"class.blink::Attribute"* [ %90, %88 ], [ %85, %81 ]
  %95 = phi i32 [ %92, %88 ], [ %87, %81 ]
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %94, i64 %96
  %98 = icmp eq i32 %95, 0
  br i1 %98, label %126, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %80, i64 0, i32 0, i32 0
  %101 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 3, i32 0, i32 0, i32 0
  %103 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %104

104:                                              ; preds = %119, %99
  %105 = phi %"class.blink::Attribute"* [ %94, %99 ], [ %120, %119 ]
  %106 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %106, align 8
  %108 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %107, %101
  br i1 %108, label %122, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %107, i64 0, i32 3, i32 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %111, %112
  br i1 %113, label %114, label %119

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %107, i64 0, i32 4, i32 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %116, %117
  br i1 %118, label %122, label %119

119:                                              ; preds = %114, %109
  %120 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %105, i64 1
  %121 = icmp eq %"class.blink::Attribute"* %120, %97
  br i1 %121, label %126, label %104

122:                                              ; preds = %114, %104
  %123 = icmp eq %"class.blink::Attribute"* %105, null
  br i1 %123, label %126, label %124

124:                                              ; preds = %122
  %125 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %105, i64 0, i32 1
  br label %128

126:                                              ; preds = %119, %122, %93
  %127 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %128

128:                                              ; preds = %124, %126
  %129 = phi %"class.WTF::AtomicString"* [ %127, %126 ], [ %125, %124 ]
  %130 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %130) #10
  %131 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %129, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %134, label %138

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %135, align 8
  %136 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %137 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %136, i64* %137, align 8
  br label %145

138:                                              ; preds = %128
  %139 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %132, %"class.WTF::StringImpl"** %139, align 8
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 1
  %143 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %144 = bitcast i8** %143 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %142, %"class.WTF::StringImpl"** %144, align 8
  br label %145

145:                                              ; preds = %138, %134
  %146 = phi i32 [ %141, %138 ], [ 0, %134 ]
  %147 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %146, i32* %147, align 8
  %148 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %148) #10
  %149 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %150 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i8** %151, align 8
  %152 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 23, i32* %152, align 8
  %153 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %148) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %130) #10
  br label %154

154:                                              ; preds = %73, %77, %46, %24, %2, %8, %13, %145
  %155 = phi i1 [ %153, %145 ], [ false, %13 ], [ false, %77 ], [ false, %8 ], [ false, %2 ], [ false, %24 ], [ false, %46 ], [ false, %73 ]
  ret i1 %155
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink27FrameSerializerDelegateImpl31ShouldIgnorePopupOverlayElementERKNS_7ElementE(%"class.blink::FrameSerializerDelegateImpl"* nocapture, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %4 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %3) #10
  %5 = icmp eq %"class.blink::LayoutBox"* %4, null
  br i1 %5, label %111, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %10, i64 0, i32 12, i32 0, i32 0
  %12 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %11, align 8
  %13 = tail call i32 @_ZNK5blink14LocalDOMWindow10innerWidthEv(%"class.blink::LocalDOMWindow"* %12) #10
  %14 = sdiv i32 %13, 2
  %15 = tail call i32 @_ZNK5blink14LocalDOMWindow11innerHeightEv(%"class.blink::LocalDOMWindow"* %12) #10
  %16 = sdiv i32 %15, 2
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %19) #10
  %21 = icmp eq %"class.blink::Page"* %20, null
  br i1 %21, label %44, label %22

22:                                               ; preds = %6
  %23 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %20, i64 0, i32 7, i32 0, i32 0
  %24 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %26 = bitcast %"class.blink::Frame"** %25 to %"class.blink::LocalFrame"**
  %27 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %26, align 8
  %28 = sitofp i32 %14 to float
  %29 = bitcast %"class.blink::ChromeClient"* %24 to float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)***
  %30 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)**, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*** %29, align 8
  %31 = getelementptr inbounds float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %30, i64 3
  %32 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %31, align 8
  %33 = tail call float %32(%"class.blink::ChromeClient"* %24, %"class.blink::LocalFrame"* %27, float %28) #10
  %34 = fptosi float %33 to i32
  %35 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %23, align 8
  %36 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %26, align 8
  %37 = sitofp i32 %16 to float
  %38 = bitcast %"class.blink::ChromeClient"* %35 to float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)***
  %39 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)**, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*** %38, align 8
  %40 = getelementptr inbounds float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %39, i64 3
  %41 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %40, align 8
  %42 = tail call float %41(%"class.blink::ChromeClient"* %35, %"class.blink::LocalFrame"* %36, float %37) #10
  %43 = fptosi float %42 to i32
  br label %44

44:                                               ; preds = %6, %22
  %45 = phi i32 [ %34, %22 ], [ %14, %6 ]
  %46 = phi i32 [ %43, %22 ], [ %16, %6 ]
  %47 = icmp sgt i32 %45, 33554431
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = icmp slt i32 %45, -33554432
  %50 = shl i32 %45, 6
  %51 = select i1 %49, i32 -2147483648, i32 %50
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi i32 [ 2147483647, %44 ], [ %51, %48 ]
  %54 = icmp sgt i32 %46, 33554431
  br i1 %54, label %59, label %55

55:                                               ; preds = %52
  %56 = icmp slt i32 %46, -33554432
  %57 = shl i32 %46, 6
  %58 = select i1 %56, i32 -2147483648, i32 %57
  br label %59

59:                                               ; preds = %55, %52
  %60 = phi i32 [ 2147483647, %52 ], [ %58, %55 ]
  %61 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %4, i64 0, i32 2
  %62 = bitcast %"class.blink::LayoutRect"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %4, i64 0, i32 2, i32 1
  %65 = bitcast %"class.blink::LayoutSize"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = trunc i64 %63 to i32
  %68 = lshr i64 %63, 32
  %69 = trunc i64 %68 to i32
  %70 = icmp slt i32 %53, %67
  br i1 %70, label %111, label %71

71:                                               ; preds = %59
  %72 = trunc i64 %66 to i32
  %73 = icmp slt i32 %72, 0
  %74 = select i1 %73, i32 -2147483648, i32 2147483647
  %75 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %67, i32 %72) #10
  %76 = extractvalue { i32, i1 } %75, 1
  %77 = extractvalue { i32, i1 } %75, 0
  %78 = select i1 %76, i32 %74, i32 %77, !prof !2
  %79 = icmp sle i32 %78, %53
  %80 = icmp slt i32 %60, %69
  %81 = or i1 %80, %79
  br i1 %81, label %111, label %82

82:                                               ; preds = %71
  %83 = lshr i64 %66, 32
  %84 = trunc i64 %83 to i32
  %85 = icmp slt i32 %84, 0
  %86 = select i1 %85, i32 -2147483648, i32 2147483647
  %87 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %69, i32 %84) #10
  %88 = extractvalue { i32, i1 } %87, 1
  %89 = extractvalue { i32, i1 } %87, 0
  %90 = select i1 %88, i32 %86, i32 %89, !prof !2
  %91 = icmp sgt i32 %90, %60
  br i1 %91, label %92, label %111

92:                                               ; preds = %82
  %93 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %4, i64 0, i32 0, i32 0, i32 5, i32 0
  %94 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %94, i64 0, i32 0, i32 3, i32 0, i32 0
  %96 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %96, i64 0, i32 3, i32 0, i32 0
  %98 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %98, i64 0, i32 39
  %100 = load i32, i32* %99, align 4
  %101 = and i32 %100, 65536
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %111

103:                                              ; preds = %92
  %104 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %94, i64 0, i32 0, i32 5, i32 0, i32 0
  %105 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %105, i64 0, i32 10
  %107 = load i32, i32* %106, align 4
  %108 = icmp slt i32 %107, 50
  br i1 %108, label %111, label %109

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.blink::FrameSerializerDelegateImpl", %"class.blink::FrameSerializerDelegateImpl"* %0, i64 0, i32 3
  store i8 1, i8* %110, align 8
  br label %111

111:                                              ; preds = %71, %92, %59, %109, %82, %103, %2
  %112 = phi i1 [ false, %2 ], [ true, %109 ], [ false, %82 ], [ false, %103 ], [ false, %71 ], [ false, %59 ], [ false, %92 ]
  ret i1 %112
}

declare %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"*) local_unnamed_addr #2

declare i32 @_ZNK5blink14LocalDOMWindow10innerWidthEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #2

declare i32 @_ZNK5blink14LocalDOMWindow11innerHeightEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #2

declare %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink27FrameSerializerDelegateImpl21ShouldIgnoreAttributeERKNS_7ElementERKNS_9AttributeE(%"class.blink::FrameSerializerDelegateImpl"* nocapture readonly, %"class.blink::Element"* dereferenceable(104), %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %10 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %11 = icmp eq %"class.blink::Element"* %1, null
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  br i1 %11, label %228, label %13

13:                                               ; preds = %3
  %14 = load i32, i32* %12, align 8
  %15 = and i32 %14, 48
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %205

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %9, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 2
  %21 = bitcast %"class.blink::Member.283"* %20 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %24, %26
  br i1 %27, label %28, label %46

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %2, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kSrcsetAttrE, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %35, %37
  br i1 %38, label %307, label %39

39:                                               ; preds = %28
  %40 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kSizesAttrE, align 8
  %41 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %40, i64 0, i32 0, i32 0
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %35, %44
  br i1 %45, label %307, label %46

46:                                               ; preds = %17, %39
  %47 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kATagE, align 8
  %48 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 2
  %51 = bitcast %"class.blink::Member.283"* %50 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %52 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %54, %56
  br i1 %57, label %58, label %69

58:                                               ; preds = %46
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %2, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kPingAttrE, align 8
  %62 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %63, i64 0, i32 3, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %65, %67
  br i1 %68, label %307, label %69

69:                                               ; preds = %46, %58
  %70 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE, align 8
  %71 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 2
  %74 = bitcast %"class.blink::Member.283"* %73 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %75 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 3, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %72, i64 0, i32 3, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %77, %79
  br i1 %80, label %81, label %205

81:                                               ; preds = %69
  %82 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %2, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %82, align 8
  %84 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #10
  %85 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 3, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %88, label %92

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %89, align 8
  %90 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %91 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %90, i64* %91, align 8
  br label %100

92:                                               ; preds = %81
  %93 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %86, %"class.WTF::StringImpl"** %93, align 8
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 1
  %97 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %98 = bitcast i8** %97 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %96, %"class.WTF::StringImpl"** %98, align 8
  %99 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %100

100:                                              ; preds = %92, %88
  %101 = phi i64 [ %99, %92 ], [ %90, %88 ]
  %102 = phi i32 [ %95, %92 ], [ 0, %88 ]
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %102, i32* %103, align 8
  %104 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #10
  %105 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %101, i64* %105, align 8
  %106 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN5blink12_GLOBAL__N_124kShadowModeAttributeNameE, i64 0, i64 0), i8** %106, align 8
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 10, i32* %107, align 8
  %108 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #10
  br i1 %108, label %136, label %109

109:                                              ; preds = %100
  %110 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %82, align 8
  %111 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #10
  %112 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 3, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %115, label %119

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %116, align 8
  %117 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %118 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %117, i64* %118, align 8
  br label %127

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %113, %"class.WTF::StringImpl"** %120, align 8
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 1
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %125 = bitcast i8** %124 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %123, %"class.WTF::StringImpl"** %125, align 8
  %126 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %127

127:                                              ; preds = %119, %115
  %128 = phi i64 [ %126, %119 ], [ %117, %115 ]
  %129 = phi i32 [ %122, %119 ], [ 0, %115 ]
  %130 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %129, i32* %130, align 8
  %131 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131) #10
  %132 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %128, i64* %132, align 8
  %133 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @_ZN5blink12_GLOBAL__N_134kShadowDelegatesFocusAttributeNameE, i64 0, i64 0), i8** %133, align 8
  %134 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 20, i32* %134, align 8
  %135 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %131) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #10
  br i1 %135, label %136, label %205

136:                                              ; preds = %127, %100
  %137 = getelementptr inbounds %"class.blink::FrameSerializerDelegateImpl", %"class.blink::FrameSerializerDelegateImpl"* %0, i64 0, i32 2
  %138 = bitcast %"class.blink::HeapHashSet.2894"** %137 to %"class.WTF::HashSet.2897"**
  %139 = load %"class.WTF::HashSet.2897"*, %"class.WTF::HashSet.2897"** %138, align 8
  %140 = ptrtoint %"class.blink::Element"* %1 to i64
  %141 = getelementptr inbounds %"class.WTF::HashSet.2897", %"class.WTF::HashSet.2897"* %139, i64 0, i32 0, i32 0
  %142 = load %"class.blink::WeakMember.2900"*, %"class.blink::WeakMember.2900"** %141, align 8
  %143 = icmp eq %"class.blink::WeakMember.2900"* %142, null
  br i1 %143, label %307, label %144

144:                                              ; preds = %136
  %145 = getelementptr inbounds %"class.WTF::HashSet.2897", %"class.WTF::HashSet.2897"* %139, i64 0, i32 0, i32 1
  %146 = load i32, i32* %145, align 8
  %147 = add i32 %146, -1
  %148 = zext i32 %147 to i64
  %149 = shl i64 %140, 32
  %150 = xor i64 %149, -1
  %151 = add i64 %150, %140
  %152 = lshr i64 %151, 22
  %153 = xor i64 %152, %151
  %154 = shl i64 %153, 13
  %155 = xor i64 %154, -1
  %156 = add i64 %153, %155
  %157 = lshr i64 %156, 8
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, 9
  %160 = lshr i64 %159, 15
  %161 = xor i64 %160, %159
  %162 = shl i64 %161, 27
  %163 = xor i64 %162, -1
  %164 = add i64 %161, %163
  %165 = lshr i64 %164, 31
  %166 = xor i64 %165, %164
  %167 = trunc i64 %166 to i32
  %168 = and i32 %147, %167
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds %"class.blink::WeakMember.2900", %"class.blink::WeakMember.2900"* %142, i64 %169
  %171 = getelementptr inbounds %"class.blink::WeakMember.2900", %"class.blink::WeakMember.2900"* %170, i64 0, i32 0, i32 0
  %172 = load %"class.blink::Element"*, %"class.blink::Element"** %171, align 8
  %173 = icmp eq %"class.blink::Element"* %172, %1
  br i1 %173, label %202, label %174

174:                                              ; preds = %144
  %175 = xor i32 %167, -1
  %176 = lshr i32 %167, 23
  %177 = add i32 %176, %175
  %178 = shl i32 %177, 12
  %179 = xor i32 %178, %177
  %180 = lshr i32 %179, 7
  %181 = xor i32 %180, %179
  %182 = shl i32 %181, 2
  %183 = xor i32 %182, %181
  %184 = lshr i32 %183, 20
  %185 = xor i32 %184, %183
  %186 = or i32 %185, 1
  %187 = zext i32 %186 to i64
  br label %188

188:                                              ; preds = %193, %174
  %189 = phi %"class.blink::Element"* [ %172, %174 ], [ %200, %193 ]
  %190 = phi i64 [ %169, %174 ], [ %197, %193 ]
  %191 = phi i64 [ 0, %174 ], [ %195, %193 ]
  %192 = icmp eq %"class.blink::Element"* %189, null
  br i1 %192, label %307, label %193

193:                                              ; preds = %188
  %194 = icmp eq i64 %191, 0
  %195 = select i1 %194, i64 %187, i64 %191
  %196 = add i64 %195, %190
  %197 = and i64 %196, %148
  %198 = getelementptr inbounds %"class.blink::WeakMember.2900", %"class.blink::WeakMember.2900"* %142, i64 %197
  %199 = getelementptr inbounds %"class.blink::WeakMember.2900", %"class.blink::WeakMember.2900"* %198, i64 0, i32 0, i32 0
  %200 = load %"class.blink::Element"*, %"class.blink::Element"** %199, align 8
  %201 = icmp eq %"class.blink::Element"* %200, %1
  br i1 %201, label %202, label %188

202:                                              ; preds = %193, %144
  %203 = phi %"class.blink::WeakMember.2900"* [ %170, %144 ], [ %198, %193 ]
  %204 = icmp eq %"class.blink::WeakMember.2900"* %203, null
  br i1 %204, label %307, label %205

205:                                              ; preds = %13, %202, %127, %69
  %206 = load i32, i32* %12, align 8
  %207 = and i32 %206, 48
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %228

209:                                              ; preds = %205
  %210 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kFrameTagE, align 8
  %211 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %210, i64 0, i32 0, i32 0, i32 0
  %212 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %211, align 8
  %213 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 2
  %214 = bitcast %"class.blink::Member.283"* %213 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %215 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %214, align 8
  %216 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %215, i64 0, i32 3, i32 0, i32 0, i32 0
  %217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %216, align 8
  %218 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %212, i64 0, i32 3, i32 0, i32 0, i32 0
  %219 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %218, align 8
  %220 = icmp eq %"class.WTF::StringImpl"* %217, %219
  br i1 %220, label %231, label %221

221:                                              ; preds = %209
  %222 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kIFrameTagE, align 8
  %223 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %222, i64 0, i32 0, i32 0, i32 0
  %224 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %223, align 8
  %225 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %224, i64 0, i32 3, i32 0, i32 0, i32 0
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %225, align 8
  %227 = icmp eq %"class.WTF::StringImpl"* %217, %226
  br i1 %227, label %231, label %228

228:                                              ; preds = %205, %3, %221
  %229 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %229) #10
  %230 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %230, align 8
  br label %242

231:                                              ; preds = %209, %221
  %232 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kSrcdocAttrE, align 8
  %233 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %2, i64 0, i32 0, i32 0, i32 0
  %234 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %233, align 8
  %235 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %232, i64 0, i32 0, i32 0
  %236 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %235, align 8
  %237 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %234, %236
  %238 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %238) #10
  %239 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %239, align 8
  br i1 %237, label %240, label %242

240:                                              ; preds = %231
  %241 = call zeroext i1 @_ZN5blink27FrameSerializerDelegateImpl11RewriteLinkERKNS_7ElementERN3WTF6StringE(%"class.blink::FrameSerializerDelegateImpl"* undef, %"class.blink::Element"* nonnull dereferenceable(104) %1, %"class.WTF::String"* nonnull dereferenceable(8) %8)
  br i1 %241, label %287, label %242

242:                                              ; preds = %228, %240, %231
  %243 = phi %"class.WTF::StringImpl"** [ %230, %228 ], [ %239, %240 ], [ %239, %231 ]
  %244 = phi i8* [ %229, %228 ], [ %238, %240 ], [ %238, %231 ]
  %245 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kLinkTagE, align 8
  br i1 %11, label %263, label %246

246:                                              ; preds = %242
  %247 = load i32, i32* %12, align 8
  %248 = and i32 %247, 48
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %263

250:                                              ; preds = %246
  %251 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %245, i64 0, i32 0, i32 0, i32 0
  %252 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %251, align 8
  %253 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 2
  %254 = bitcast %"class.blink::Member.283"* %253 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %255 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %254, align 8
  %256 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %255, i64 0, i32 3, i32 0, i32 0, i32 0
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %256, align 8
  %258 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %252, i64 0, i32 3, i32 0, i32 0, i32 0
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %258, align 8
  %260 = icmp eq %"class.WTF::StringImpl"* %257, %259
  %261 = bitcast %"class.blink::Element"* %1 to %"class.blink::HTMLLinkElement"*
  %262 = select i1 %260, %"class.blink::HTMLLinkElement"* %261, %"class.blink::HTMLLinkElement"* null
  br label %263

263:                                              ; preds = %242, %246, %250
  %264 = phi %"class.blink::HTMLLinkElement"* [ %262, %250 ], [ null, %246 ], [ null, %242 ]
  %265 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %2, i64 0, i32 0, i32 0, i32 0
  %266 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %265, align 8
  %267 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kIntegrityAttrE, align 8
  %268 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %267, i64 0, i32 0, i32 0
  %269 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %268, align 8
  %270 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %266, i64 0, i32 3, i32 0, i32 0, i32 0
  %271 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %270, align 8
  %272 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %269, i64 0, i32 3, i32 0, i32 0, i32 0
  %273 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %272, align 8
  %274 = icmp eq %"class.WTF::StringImpl"* %271, %273
  %275 = icmp ne %"class.blink::HTMLLinkElement"* %264, null
  %276 = and i1 %275, %274
  br i1 %276, label %277, label %285

277:                                              ; preds = %263
  %278 = call %"class.blink::LinkStyle"* @_ZNK5blink15HTMLLinkElement12GetLinkStyleEv(%"class.blink::HTMLLinkElement"* nonnull %264) #10
  %279 = icmp eq %"class.blink::LinkStyle"* %278, null
  br i1 %279, label %285, label %280

280:                                              ; preds = %277
  %281 = call %"class.blink::LinkStyle"* @_ZNK5blink15HTMLLinkElement12GetLinkStyleEv(%"class.blink::HTMLLinkElement"* nonnull %264) #10
  %282 = getelementptr inbounds %"class.blink::LinkStyle", %"class.blink::LinkStyle"* %281, i64 0, i32 3, i32 0, i32 0
  %283 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %282, align 8
  %284 = icmp eq %"class.blink::CSSStyleSheet"* %283, null
  br i1 %284, label %285, label %287

285:                                              ; preds = %277, %280, %263
  %286 = call zeroext i1 @_ZNK5blink7Element20IsScriptingAttributeERKNS_9AttributeE(%"class.blink::Element"* %1, %"class.blink::Attribute"* dereferenceable(16) %2) #10
  br label %287

287:                                              ; preds = %285, %280, %240
  %288 = phi %"class.WTF::StringImpl"** [ %239, %240 ], [ %243, %285 ], [ %243, %280 ]
  %289 = phi i8* [ %238, %240 ], [ %244, %285 ], [ %244, %280 ]
  %290 = phi i1 [ false, %240 ], [ %286, %285 ], [ true, %280 ]
  %291 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %288, align 8
  %292 = icmp eq %"class.WTF::StringImpl"* %291, null
  br i1 %292, label %306, label %293

293:                                              ; preds = %287
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load atomic i32, i32* %294 monotonic, align 4
  %296 = and i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 0
  %299 = load i32, i32* %298, align 4
  br i1 %297, label %300, label %302

300:                                              ; preds = %293
  %301 = add i32 %299, -1
  store i32 %301, i32* %298, align 4
  br label %302

302:                                              ; preds = %300, %293
  %303 = phi i32 [ %301, %300 ], [ %299, %293 ]
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %306

305:                                              ; preds = %302
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %291) #10
  br label %306

306:                                              ; preds = %287, %302, %305
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %289) #10
  br label %307

307:                                              ; preds = %188, %202, %136, %58, %28, %39, %306
  %308 = phi i1 [ %290, %306 ], [ true, %39 ], [ true, %28 ], [ true, %58 ], [ true, %202 ], [ true, %136 ], [ true, %188 ]
  ret i1 %308
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink27FrameSerializerDelegateImpl11RewriteLinkERKNS_7ElementERN3WTF6StringE(%"class.blink::FrameSerializerDelegateImpl"* nocapture readnone, %"class.blink::Element"* dereferenceable(104), %"class.WTF::String"* nocapture dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebString", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::KURL", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::Element"* %1 to i1 (%"class.blink::Node"*)***
  %10 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %10, i64 42
  %12 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::Node"* %8) #10
  %14 = icmp eq %"class.blink::Element"* %1, null
  %15 = xor i1 %13, true
  %16 = or i1 %14, %15
  br i1 %16, label %104, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %"class.blink::TraceWrapperV8Reference"* %18 to %"class.blink::Frame"**
  %20 = load %"class.blink::Frame"*, %"class.blink::Frame"** %19, align 8
  %21 = icmp eq %"class.blink::Frame"* %20, null
  br i1 %21, label %104, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.blink::WebString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  %24 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %24, align 8
  %25 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink27FrameSerializerDelegateImpl12GetContentIDEPNS_5FrameE(%"class.blink::Frame"* nonnull %20)
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #10
  br label %43

43:                                               ; preds = %22, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  %44 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %44) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 112, i1 false)
  %45 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #10
  %46 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* nonnull %4) #10
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %46, %"class.WTF::StringImpl"** %47, align 8
  call void @_ZN5blink11MHTMLParser21ConvertContentIDToURIERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #10
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #10
  br label %63

63:                                               ; preds = %43, %59, %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #10
  %64 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 4, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %84, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i33
  %76 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %75, i33 1) #10
  %77 = extractvalue { i33, i1 } %76, 1
  %78 = extractvalue { i33, i1 } %76, 0
  %79 = icmp slt i33 %78, 0
  %80 = or i1 %77, %79
  br i1 %80, label %81, label %82, !prof !2

81:                                               ; preds = %72
  call void @llvm.trap() #10
  unreachable

82:                                               ; preds = %72
  %83 = trunc i33 %78 to i32
  store i32 %83, i32* %73, align 4
  br label %84

84:                                               ; preds = %82, %67, %63
  %85 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %86 = bitcast %"class.WTF::String"* %2 to i64*
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  store i64 %85, i64* %86, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #10
  br label %103

103:                                              ; preds = %84, %99, %102
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %44) #10
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %104

104:                                              ; preds = %103, %17, %3
  %105 = phi i1 [ false, %3 ], [ true, %103 ], [ false, %17 ]
  ret i1 %105
}

declare zeroext i1 @_ZNK5blink7Element20IsScriptingAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink11MHTMLParser21ConvertContentIDToURIERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink27FrameSerializerDelegateImpl25ShouldSkipResourceWithURLERKNS_4KURLE(%"class.blink::FrameSerializerDelegateImpl"* nocapture readonly, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebURL", align 8
  %4 = getelementptr inbounds %"class.blink::FrameSerializerDelegateImpl", %"class.blink::FrameSerializerDelegateImpl"* %0, i64 0, i32 1
  %5 = load %"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*, %"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"** %4, align 8
  %6 = bitcast %"class.blink::WebURL"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %6) #10
  call void @_ZN5blink6WebURLC1ERKNS_4KURLE(%"class.blink::WebURL"* nonnull %3, %"class.blink::KURL"* dereferenceable(112) %1) #10
  %7 = bitcast %"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"* %5 to i1 (%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*, %"class.blink::WebURL"*)***
  %8 = load i1 (%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*, %"class.blink::WebURL"*)**, i1 (%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*, %"class.blink::WebURL"*)*** %7, align 8
  %9 = load i1 (%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*, %"class.blink::WebURL"*)*, i1 (%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*, %"class.blink::WebURL"*)** %8, align 8
  %10 = call zeroext i1 %9(%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"* %5, %"class.blink::WebURL"* nonnull dereferenceable(96) %3) #10
  %11 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %3, i64 0, i32 1
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %11) #10
  %12 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %3, i64 0, i32 0
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %6) #10
  ret i1 %10
}

declare void @_ZN5blink6WebURLC1ERKNS_4KURLE(%"class.blink::WebURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27FrameSerializerDelegateImpl19GetCustomAttributesERKNS_7ElementE(%"class.WTF::Vector.3033"* noalias sret, %"class.blink::FrameSerializerDelegateImpl"* nocapture readnone, %"class.blink::Element"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.WTF::Vector.3033"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #10
  %5 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %6 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0
  %7 = icmp eq %"class.blink::Element"* %2, null
  br i1 %7, label %26, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 48
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %26

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %5, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 1, i32 2
  %17 = bitcast %"class.blink::Member.283"* %16 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %20, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %13
  %25 = bitcast %"class.blink::Element"* %2 to %"class.blink::HTMLImageElement"*
  tail call void @_ZN5blink27FrameSerializerDelegateImpl34GetCustomAttributesForImageElementERKNS_16HTMLImageElementEPN3WTF6VectorINS_9AttributeELj0ENS4_18PartitionAllocatorEEE(%"class.blink::FrameSerializerDelegateImpl"* undef, %"class.blink::HTMLImageElement"* nonnull dereferenceable(208) %25, %"class.WTF::Vector.3033"* %0)
  br label %26

26:                                               ; preds = %13, %3, %8, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27FrameSerializerDelegateImpl34GetCustomAttributesForImageElementERKNS_16HTMLImageElementEPN3WTF6VectorINS_9AttributeELj0ENS4_18PartitionAllocatorEEE(%"class.blink::FrameSerializerDelegateImpl"* nocapture readnone, %"class.blink::HTMLImageElement"* dereferenceable(208), %"class.WTF::Vector.3033"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %8 = alloca %"class.blink::Attribute", align 8
  %9 = alloca %"class.blink::Attribute", align 8
  %10 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %1, i64 0, i32 4, i32 0, i32 0
  %11 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %11, i64 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceContent"** %12, align 8
  %14 = icmp eq %"class.blink::ImageResourceContent"* %13, null
  br i1 %14, label %475, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %13, i64 0, i32 8, i32 0
  %17 = load %"class.blink::Image"*, %"class.blink::Image"** %16, align 8
  %18 = icmp eq %"class.blink::Image"* %17, null
  br i1 %18, label %475, label %19

19:                                               ; preds = %15
  %20 = tail call zeroext i1 @_ZNK5blink20ImageResourceContent13ErrorOccurredEv(%"class.blink::ImageResourceContent"* nonnull %13) #10
  br i1 %20, label %475, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %27 = bitcast %"class.blink::NodeData"** %26 to %"class.blink::NodeRareData"**
  %28 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %28, i64 0, i32 1, i32 0, i32 0
  %30 = bitcast %"class.blink::NodeData"** %26 to %"class.blink::NodeRenderingData"**
  %31 = select i1 %25, %"class.blink::NodeRenderingData"** %30, %"class.blink::NodeRenderingData"** %29
  %32 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %32, i64 0, i32 1
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %35 = icmp eq %"class.blink::LayoutObject"* %34, null
  br i1 %35, label %475, label %36

36:                                               ; preds = %21
  %37 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kWidthAttrE, align 8
  %38 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %39 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %38, align 8
  %40 = icmp eq %"class.blink::ElementData"* %39, null
  br i1 %40, label %41, label %43

41:                                               ; preds = %36
  %42 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  br label %140

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %39, i64 0, i32 0, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %55, label %48

48:                                               ; preds = %43
  %49 = bitcast %"class.blink::ElementData"* %39 to %"class.blink::UniqueElementData"*
  %50 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %39, i64 1, i32 1
  %51 = bitcast %"class.blink::Member.299"* %50 to %"class.blink::Attribute"**
  %52 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %49, i64 0, i32 2, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  br label %60

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %39, i64 1
  %57 = bitcast %"class.blink::ElementData"* %56 to %"class.blink::Attribute"*
  %58 = lshr i32 %45, 1
  %59 = and i32 %58, 268435455
  br label %60

60:                                               ; preds = %55, %48
  %61 = phi %"class.blink::Attribute"* [ %57, %55 ], [ %52, %48 ]
  %62 = phi i32 [ %59, %55 ], [ %54, %48 ]
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %61, i64 %63
  %65 = icmp eq i32 %62, 0
  br i1 %65, label %93, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %37, i64 0, i32 0, i32 0
  %68 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %68, i64 0, i32 3, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %68, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %71

71:                                               ; preds = %87, %66
  %72 = phi %"class.blink::Attribute"* [ %61, %66 ], [ %88, %87 ]
  %73 = phi i32 [ 0, %66 ], [ %89, %87 ]
  %74 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %72, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %74, align 8
  %76 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %75, %68
  br i1 %76, label %91, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 3, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %79, %80
  br i1 %81, label %82, label %87

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 4, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %84, %85
  br i1 %86, label %91, label %87

87:                                               ; preds = %82, %77
  %88 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %72, i64 1
  %89 = add i32 %73, 1
  %90 = icmp eq %"class.blink::Attribute"* %88, %64
  br i1 %90, label %93, label %71

91:                                               ; preds = %71, %82
  %92 = icmp eq i32 %73, -1
  br i1 %92, label %93, label %475

93:                                               ; preds = %87, %91, %60
  %94 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kHeightAttrE, align 8
  br i1 %47, label %102, label %95

95:                                               ; preds = %93
  %96 = bitcast %"class.blink::ElementData"* %39 to %"class.blink::UniqueElementData"*
  %97 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %39, i64 1, i32 1
  %98 = bitcast %"class.blink::Member.299"* %97 to %"class.blink::Attribute"**
  %99 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %96, i64 0, i32 2, i32 0, i32 0, i32 2
  %101 = load i32, i32* %100, align 4
  br label %107

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %39, i64 1
  %104 = bitcast %"class.blink::ElementData"* %103 to %"class.blink::Attribute"*
  %105 = lshr i32 %45, 1
  %106 = and i32 %105, 268435455
  br label %107

107:                                              ; preds = %102, %95
  %108 = phi %"class.blink::Attribute"* [ %104, %102 ], [ %99, %95 ]
  %109 = phi i32 [ %106, %102 ], [ %101, %95 ]
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %108, i64 %110
  %112 = icmp eq i32 %109, 0
  br i1 %112, label %140, label %113

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %94, i64 0, i32 0, i32 0
  %115 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %115, i64 0, i32 3, i32 0, i32 0, i32 0
  %117 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %115, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %118

118:                                              ; preds = %134, %113
  %119 = phi %"class.blink::Attribute"* [ %108, %113 ], [ %135, %134 ]
  %120 = phi i32 [ 0, %113 ], [ %136, %134 ]
  %121 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %119, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %121, align 8
  %123 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %122, %115
  br i1 %123, label %138, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %122, i64 0, i32 3, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %126, %127
  br i1 %128, label %129, label %134

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %122, i64 0, i32 4, i32 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %131, %132
  br i1 %133, label %138, label %134

134:                                              ; preds = %129, %124
  %135 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %119, i64 1
  %136 = add i32 %120, 1
  %137 = icmp eq %"class.blink::Attribute"* %135, %111
  br i1 %137, label %140, label %118

138:                                              ; preds = %118, %129
  %139 = icmp eq i32 %120, -1
  br i1 %139, label %140, label %475

140:                                              ; preds = %134, %138, %107, %41
  %141 = phi %"class.blink::QualifiedName"* [ %94, %138 ], [ %42, %41 ], [ %94, %107 ], [ %94, %134 ]
  %142 = tail call i32 @_ZNK5blink16HTMLImageElement12naturalWidthEv(%"class.blink::HTMLImageElement"* %1) #10
  %143 = tail call %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"* nonnull %13) #10
  %144 = bitcast %"class.blink::Image"* %143 to i64 (%"class.blink::Image"*)***
  %145 = load i64 (%"class.blink::Image"*)**, i64 (%"class.blink::Image"*)*** %144, align 8
  %146 = getelementptr inbounds i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %145, i64 13
  %147 = load i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %146, align 8
  %148 = tail call i64 %147(%"class.blink::Image"* %143) #10
  %149 = trunc i64 %148 to i32
  %150 = icmp eq i32 %142, %149
  br i1 %150, label %151, label %162

151:                                              ; preds = %140
  %152 = tail call i32 @_ZNK5blink16HTMLImageElement13naturalHeightEv(%"class.blink::HTMLImageElement"* %1) #10
  %153 = tail call %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"* nonnull %13) #10
  %154 = bitcast %"class.blink::Image"* %153 to i64 (%"class.blink::Image"*)***
  %155 = load i64 (%"class.blink::Image"*)**, i64 (%"class.blink::Image"*)*** %154, align 8
  %156 = getelementptr inbounds i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %155, i64 13
  %157 = load i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %156, align 8
  %158 = tail call i64 %157(%"class.blink::Image"* %153) #10
  %159 = lshr i64 %158, 32
  %160 = trunc i64 %159 to i32
  %161 = icmp eq i32 %152, %160
  br i1 %161, label %475, label %162

162:                                              ; preds = %151, %140
  %163 = bitcast %"class.blink::Attribute"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %163) #10
  %164 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %8, i64 0, i32 0, i32 0, i32 0
  %165 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %166 = bitcast %"class.blink::Attribute"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %166, i8 -86, i64 16, i1 false)
  %167 = tail call i32 @_ZNK5blink16HTMLImageElement14LayoutBoxWidthEv(%"class.blink::HTMLImageElement"* %1) #10
  %168 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %168)
  %169 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %169) #10
  %170 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 11
  %171 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 2
  %172 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 3
  %173 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %169, i8 -86, i64 32, i1 false) #10
  store i8* %170, i8** %171, align 8
  %174 = urem i32 %167, 10
  %175 = udiv i32 %167, 10
  %176 = trunc i32 %174 to i8
  %177 = or i8 %176, 48
  store i8 %177, i8* %170, align 1
  %178 = icmp ugt i32 %167, 9
  br i1 %178, label %179, label %194

179:                                              ; preds = %162
  %180 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 10
  store i8* %180, i8** %171, align 8
  %181 = urem i32 %175, 10
  %182 = trunc i32 %181 to i8
  %183 = or i8 %182, 48
  store i8 %183, i8* %180, align 2
  %184 = icmp ugt i32 %167, 99
  br i1 %184, label %185, label %192

185:                                              ; preds = %179
  %186 = udiv i32 %167, 100
  %187 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 9
  store i8* %187, i8** %171, align 8
  %188 = urem i32 %186, 10
  %189 = trunc i32 %188 to i8
  %190 = or i8 %189, 48
  store i8 %190, i8* %187, align 1
  %191 = icmp ugt i32 %167, 999
  br i1 %191, label %196, label %205

192:                                              ; preds = %179
  %193 = ptrtoint i8* %180 to i64
  br label %208

194:                                              ; preds = %162
  %195 = ptrtoint i8* %170 to i64
  br label %208

196:                                              ; preds = %185, %196
  %197 = phi i32 [ %199, %196 ], [ %186, %185 ]
  %198 = load i8*, i8** %171, align 8
  %199 = udiv i32 %197, 10
  %200 = getelementptr inbounds i8, i8* %198, i64 -1
  store i8* %200, i8** %171, align 8
  %201 = urem i32 %199, 10
  %202 = trunc i32 %201 to i8
  %203 = or i8 %202, 48
  store i8 %203, i8* %200, align 1
  %204 = icmp ugt i32 %197, 99
  br i1 %204, label %196, label %205

205:                                              ; preds = %196, %185
  %206 = bitcast i8** %171 to i64*
  %207 = load i64, i64* %206, align 8
  br label %208

208:                                              ; preds = %205, %192, %194
  %209 = phi i64 [ %195, %194 ], [ %207, %205 ], [ %193, %192 ]
  %210 = ptrtoint i8* %173 to i64
  %211 = sub i64 %210, %209
  %212 = trunc i64 %211 to i32
  store i32 %212, i32* %172, align 8
  %213 = inttoptr i64 %209 to i8*
  call void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"* nonnull %6, i8* %213, i32 %212) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %169) #10
  %214 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %214, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168)
  %216 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %37, i64 0, i32 0, i32 0
  %217 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %216, align 8
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %217, %"class.blink::QualifiedName::QualifiedNameImpl"** %164, align 8
  %218 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %217, null
  br i1 %218, label %226, label %219

219:                                              ; preds = %208
  %220 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %217, i64 0, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = and i32 %221, 16777216
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %226

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %217, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %225) #10
  br label %226

226:                                              ; preds = %224, %219, %208
  store %"class.WTF::StringImpl"* %215, %"class.WTF::StringImpl"** %165, align 8
  %227 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %227, label %257, label %228

228:                                              ; preds = %226
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %234 = load i32, i32* %233, align 4
  br i1 %232, label %235, label %245

235:                                              ; preds = %228
  %236 = zext i32 %234 to i33
  %237 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %236, i33 1) #10
  %238 = extractvalue { i33, i1 } %237, 1
  %239 = extractvalue { i33, i1 } %237, 0
  %240 = icmp slt i33 %239, 0
  %241 = or i1 %238, %240
  br i1 %241, label %242, label %243, !prof !2

242:                                              ; preds = %235
  call void @llvm.trap() #10
  unreachable

243:                                              ; preds = %235
  %244 = trunc i33 %239 to i32
  store i32 %244, i32* %233, align 4
  br label %245

245:                                              ; preds = %228, %243
  %246 = phi i32 [ %244, %243 ], [ %234, %228 ]
  %247 = load atomic i32, i32* %229 monotonic, align 4
  %248 = and i32 %247, 2
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %253

250:                                              ; preds = %245
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %252 = add i32 %246, -1
  store i32 %252, i32* %251, align 4
  br label %253

253:                                              ; preds = %250, %245
  %254 = phi i32 [ %252, %250 ], [ %246, %245 ]
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %253
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #10
  br label %257

257:                                              ; preds = %226, %253, %256
  %258 = getelementptr inbounds %"class.WTF::Vector.3033", %"class.WTF::Vector.3033"* %2, i64 0, i32 0, i32 0, i32 2
  %259 = load i32, i32* %258, align 4
  %260 = getelementptr inbounds %"class.WTF::Vector.3033", %"class.WTF::Vector.3033"* %2, i64 0, i32 0, i32 0, i32 1
  %261 = load i32, i32* %260, align 8
  %262 = icmp eq i32 %259, %261
  br i1 %262, label %301, label %263, !prof !2

263:                                              ; preds = %257
  %264 = getelementptr inbounds %"class.WTF::Vector.3033", %"class.WTF::Vector.3033"* %2, i64 0, i32 0, i32 0, i32 0
  %265 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %264, align 8
  %266 = zext i32 %259 to i64
  %267 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %164, align 8
  %268 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %265, i64 %266, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %267, %"class.blink::QualifiedName::QualifiedNameImpl"** %268, align 8
  %269 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %267, null
  br i1 %269, label %277, label %270

270:                                              ; preds = %263
  %271 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %267, i64 0, i32 1
  %272 = load i32, i32* %271, align 4
  %273 = and i32 %272, 16777216
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %277

275:                                              ; preds = %270
  %276 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %267, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %276) #10
  br label %277

277:                                              ; preds = %275, %270, %263
  %278 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %279 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %265, i64 %266, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %278, %"class.WTF::StringImpl"** %279, align 8
  %280 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %280, label %298, label %281

281:                                              ; preds = %277
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = load atomic i32, i32* %282 monotonic, align 4
  %284 = and i32 %283, 2
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %298

286:                                              ; preds = %281
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %288 = load i32, i32* %287, align 4
  %289 = zext i32 %288 to i33
  %290 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %289, i33 1) #10
  %291 = extractvalue { i33, i1 } %290, 1
  %292 = extractvalue { i33, i1 } %290, 0
  %293 = icmp slt i33 %292, 0
  %294 = or i1 %291, %293
  br i1 %294, label %295, label %296, !prof !2

295:                                              ; preds = %286
  call void @llvm.trap() #10
  unreachable

296:                                              ; preds = %286
  %297 = trunc i33 %292 to i32
  store i32 %297, i32* %287, align 4
  br label %298

298:                                              ; preds = %296, %281, %277
  %299 = load i32, i32* %258, align 4
  %300 = add i32 %299, 1
  store i32 %300, i32* %258, align 4
  br label %302

301:                                              ; preds = %257
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.3033"* %2, %"class.blink::Attribute"* nonnull dereferenceable(16) %8) #10
  br label %302

302:                                              ; preds = %298, %301
  %303 = bitcast %"class.blink::Attribute"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %303) #10
  %304 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %9, i64 0, i32 0, i32 0, i32 0
  %305 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %306 = bitcast %"class.blink::Attribute"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %306, i8 -86, i64 16, i1 false)
  %307 = call i32 @_ZNK5blink16HTMLImageElement15LayoutBoxHeightEv(%"class.blink::HTMLImageElement"* %1) #10
  %308 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %308)
  %309 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %309) #10
  %310 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 11
  %311 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 2
  %312 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 3
  %313 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %309, i8 -86, i64 32, i1 false) #10
  store i8* %310, i8** %311, align 8
  %314 = urem i32 %307, 10
  %315 = udiv i32 %307, 10
  %316 = trunc i32 %314 to i8
  %317 = or i8 %316, 48
  store i8 %317, i8* %310, align 1
  %318 = icmp ugt i32 %307, 9
  br i1 %318, label %319, label %334

319:                                              ; preds = %302
  %320 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 10
  store i8* %320, i8** %311, align 8
  %321 = urem i32 %315, 10
  %322 = trunc i32 %321 to i8
  %323 = or i8 %322, 48
  store i8 %323, i8* %320, align 2
  %324 = icmp ugt i32 %307, 99
  br i1 %324, label %325, label %332

325:                                              ; preds = %319
  %326 = udiv i32 %307, 100
  %327 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 9
  store i8* %327, i8** %311, align 8
  %328 = urem i32 %326, 10
  %329 = trunc i32 %328 to i8
  %330 = or i8 %329, 48
  store i8 %330, i8* %327, align 1
  %331 = icmp ugt i32 %307, 999
  br i1 %331, label %336, label %345

332:                                              ; preds = %319
  %333 = ptrtoint i8* %320 to i64
  br label %348

334:                                              ; preds = %302
  %335 = ptrtoint i8* %310 to i64
  br label %348

336:                                              ; preds = %325, %336
  %337 = phi i32 [ %339, %336 ], [ %326, %325 ]
  %338 = load i8*, i8** %311, align 8
  %339 = udiv i32 %337, 10
  %340 = getelementptr inbounds i8, i8* %338, i64 -1
  store i8* %340, i8** %311, align 8
  %341 = urem i32 %339, 10
  %342 = trunc i32 %341 to i8
  %343 = or i8 %342, 48
  store i8 %343, i8* %340, align 1
  %344 = icmp ugt i32 %337, 99
  br i1 %344, label %336, label %345

345:                                              ; preds = %336, %325
  %346 = bitcast i8** %311 to i64*
  %347 = load i64, i64* %346, align 8
  br label %348

348:                                              ; preds = %345, %332, %334
  %349 = phi i64 [ %335, %334 ], [ %347, %345 ], [ %333, %332 ]
  %350 = ptrtoint i8* %313 to i64
  %351 = sub i64 %350, %349
  %352 = trunc i64 %351 to i32
  store i32 %352, i32* %312, align 8
  %353 = inttoptr i64 %349 to i8*
  call void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"* nonnull %4, i8* %353, i32 %352) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %309) #10
  %354 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %355 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %354, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %308)
  %356 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %141, i64 0, i32 0, i32 0
  %357 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %356, align 8
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %357, %"class.blink::QualifiedName::QualifiedNameImpl"** %304, align 8
  %358 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %357, null
  br i1 %358, label %366, label %359

359:                                              ; preds = %348
  %360 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %357, i64 0, i32 1
  %361 = load i32, i32* %360, align 4
  %362 = and i32 %361, 16777216
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %364, label %366

364:                                              ; preds = %359
  %365 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %357, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %365) #10
  br label %366

366:                                              ; preds = %364, %359, %348
  store %"class.WTF::StringImpl"* %355, %"class.WTF::StringImpl"** %305, align 8
  %367 = icmp eq %"class.WTF::StringImpl"* %355, null
  br i1 %367, label %397, label %368

368:                                              ; preds = %366
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %370 = load atomic i32, i32* %369 monotonic, align 4
  %371 = and i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 0
  %374 = load i32, i32* %373, align 4
  br i1 %372, label %375, label %385

375:                                              ; preds = %368
  %376 = zext i32 %374 to i33
  %377 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %376, i33 1) #10
  %378 = extractvalue { i33, i1 } %377, 1
  %379 = extractvalue { i33, i1 } %377, 0
  %380 = icmp slt i33 %379, 0
  %381 = or i1 %378, %380
  br i1 %381, label %382, label %383, !prof !2

382:                                              ; preds = %375
  call void @llvm.trap() #10
  unreachable

383:                                              ; preds = %375
  %384 = trunc i33 %379 to i32
  store i32 %384, i32* %373, align 4
  br label %385

385:                                              ; preds = %368, %383
  %386 = phi i32 [ %384, %383 ], [ %374, %368 ]
  %387 = load atomic i32, i32* %369 monotonic, align 4
  %388 = and i32 %387, 2
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %390, label %393

390:                                              ; preds = %385
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 0
  %392 = add i32 %386, -1
  store i32 %392, i32* %391, align 4
  br label %393

393:                                              ; preds = %390, %385
  %394 = phi i32 [ %392, %390 ], [ %386, %385 ]
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %396, label %397

396:                                              ; preds = %393
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %355) #10
  br label %397

397:                                              ; preds = %366, %393, %396
  %398 = load i32, i32* %258, align 4
  %399 = load i32, i32* %260, align 8
  %400 = icmp eq i32 %398, %399
  br i1 %400, label %439, label %401, !prof !2

401:                                              ; preds = %397
  %402 = getelementptr inbounds %"class.WTF::Vector.3033", %"class.WTF::Vector.3033"* %2, i64 0, i32 0, i32 0, i32 0
  %403 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %402, align 8
  %404 = zext i32 %398 to i64
  %405 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %304, align 8
  %406 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %403, i64 %404, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %405, %"class.blink::QualifiedName::QualifiedNameImpl"** %406, align 8
  %407 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %405, null
  br i1 %407, label %415, label %408

408:                                              ; preds = %401
  %409 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %405, i64 0, i32 1
  %410 = load i32, i32* %409, align 4
  %411 = and i32 %410, 16777216
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %415

413:                                              ; preds = %408
  %414 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %405, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %414) #10
  br label %415

415:                                              ; preds = %413, %408, %401
  %416 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %305, align 8
  %417 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %403, i64 %404, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %416, %"class.WTF::StringImpl"** %417, align 8
  %418 = icmp eq %"class.WTF::StringImpl"* %416, null
  br i1 %418, label %436, label %419

419:                                              ; preds = %415
  %420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %416, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %421 = load atomic i32, i32* %420 monotonic, align 4
  %422 = and i32 %421, 2
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %424, label %436

424:                                              ; preds = %419
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %416, i64 0, i32 0
  %426 = load i32, i32* %425, align 4
  %427 = zext i32 %426 to i33
  %428 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %427, i33 1) #10
  %429 = extractvalue { i33, i1 } %428, 1
  %430 = extractvalue { i33, i1 } %428, 0
  %431 = icmp slt i33 %430, 0
  %432 = or i1 %429, %431
  br i1 %432, label %433, label %434, !prof !2

433:                                              ; preds = %424
  call void @llvm.trap() #10
  unreachable

434:                                              ; preds = %424
  %435 = trunc i33 %430 to i32
  store i32 %435, i32* %425, align 4
  br label %436

436:                                              ; preds = %434, %419, %415
  %437 = load i32, i32* %258, align 4
  %438 = add i32 %437, 1
  store i32 %438, i32* %258, align 4
  br label %440

439:                                              ; preds = %397
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.3033"* %2, %"class.blink::Attribute"* nonnull dereferenceable(16) %9) #10
  br label %440

440:                                              ; preds = %436, %439
  %441 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %305, align 8
  %442 = icmp eq %"class.WTF::StringImpl"* %441, null
  br i1 %442, label %456, label %443

443:                                              ; preds = %440
  %444 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %441, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %445 = load atomic i32, i32* %444 monotonic, align 4
  %446 = and i32 %445, 2
  %447 = icmp eq i32 %446, 0
  %448 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %441, i64 0, i32 0
  %449 = load i32, i32* %448, align 4
  br i1 %447, label %450, label %452

450:                                              ; preds = %443
  %451 = add i32 %449, -1
  store i32 %451, i32* %448, align 4
  br label %452

452:                                              ; preds = %450, %443
  %453 = phi i32 [ %451, %450 ], [ %449, %443 ]
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %455, label %456

455:                                              ; preds = %452
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %441) #10
  br label %456

456:                                              ; preds = %440, %452, %455
  %457 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %9, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %457) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %303) #10
  %458 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %459 = icmp eq %"class.WTF::StringImpl"* %458, null
  br i1 %459, label %473, label %460

460:                                              ; preds = %456
  %461 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %458, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %462 = load atomic i32, i32* %461 monotonic, align 4
  %463 = and i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %458, i64 0, i32 0
  %466 = load i32, i32* %465, align 4
  br i1 %464, label %467, label %469

467:                                              ; preds = %460
  %468 = add i32 %466, -1
  store i32 %468, i32* %465, align 4
  br label %469

469:                                              ; preds = %467, %460
  %470 = phi i32 [ %468, %467 ], [ %466, %460 ]
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %472, label %473

472:                                              ; preds = %469
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %458) #10
  br label %473

473:                                              ; preds = %456, %469, %472
  %474 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %8, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %474) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %163) #10
  br label %475

475:                                              ; preds = %91, %138, %15, %151, %19, %3, %21, %473
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink27FrameSerializerDelegateImpl26ShouldCollectProblemMetricEv(%"class.blink::FrameSerializerDelegateImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FrameSerializerDelegateImpl", %"class.blink::FrameSerializerDelegateImpl"* %0, i64 0, i32 1
  %3 = load %"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*, %"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"** %2, align 8
  %4 = bitcast %"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"* %3 to i1 (%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*)***
  %5 = load i1 (%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*)**, i1 (%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*)*, i1 (%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*)** %5, i64 3
  %7 = load i1 (%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*)*, i1 (%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::WebFrameSerializer::MHTMLPartsGenerationDelegate"* %3) #10
  ret i1 %8
}

declare zeroext i1 @_ZNK5blink20ImageResourceContent13ErrorOccurredEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #2

declare i32 @_ZNK5blink16HTMLImageElement12naturalWidthEv(%"class.blink::HTMLImageElement"*) local_unnamed_addr #2

declare %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #2

declare i32 @_ZNK5blink16HTMLImageElement13naturalHeightEv(%"class.blink::HTMLImageElement"*) local_unnamed_addr #2

declare i32 @_ZNK5blink16HTMLImageElement14LayoutBoxWidthEv(%"class.blink::HTMLImageElement"*) local_unnamed_addr #2

declare i32 @_ZNK5blink16HTMLImageElement15LayoutBoxHeightEv(%"class.blink::HTMLImageElement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.blink::Node"*, %"class.blink::Element"* } @_ZNK5blink27FrameSerializerDelegateImpl19GetAuxiliaryDOMTreeERKNS_7ElementE(%"class.blink::FrameSerializerDelegateImpl"* nocapture readonly, %"class.blink::Element"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::Element"*, align 8
  %6 = alloca %"class.blink::Document"*, align 8
  %7 = alloca %"class.blink::QualifiedName", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = alloca %"class.blink::QualifiedName", align 8
  %11 = alloca %"class.WTF::AtomicString", align 8
  %12 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"* %1) #10
  %13 = ptrtoint %"class.blink::ShadowRoot"* %12 to i64
  %14 = icmp eq %"class.blink::ShadowRoot"* %12, null
  br i1 %14, label %154, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %12, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = lshr i32 %17, 16
  %19 = and i32 %18, 3
  switch i32 %19, label %29 [
    i32 2, label %154
    i32 0, label %20
    i32 1, label %22
  ]

20:                                               ; preds = %15
  %21 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i64 4) #10
  br label %24

22:                                               ; preds = %15
  %23 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i64 6) #10
  br label %24

24:                                               ; preds = %20, %22
  %25 = phi %"class.WTF::String"* [ %4, %22 ], [ %3, %20 ]
  %26 = phi i8* [ %23, %22 ], [ %21, %20 ]
  %27 = bitcast %"class.WTF::String"* %25 to i64*
  %28 = load i64, i64* %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  br label %29

29:                                               ; preds = %24, %15
  %30 = phi i64 [ 0, %15 ], [ %28, %24 ]
  %31 = bitcast %"class.blink::Element"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  %32 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTemplateTagE, align 8
  %33 = bitcast %"class.blink::Document"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %35, i64 0, i32 2, i32 0, i32 0
  %37 = bitcast %"class.blink::Document"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::Document"** %6 to i64*
  store i64 %38, i64* %39, align 8
  %40 = call %"class.blink::Element"* @_ZN5blink25MakeGarbageCollectedTraitINS_7ElementEE4CallIJRKNS_17HTMLQualifiedNameEPNS_8DocumentEEEEPS1_DpOT_(%"class.blink::HTMLQualifiedName"* dereferenceable(8) %32, %"class.blink::Document"** nonnull dereferenceable(8) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  store %"class.blink::Element"* %40, %"class.blink::Element"** %5, align 8
  %41 = bitcast %"class.blink::QualifiedName"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #10
  %42 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %43 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #10
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN5blink12_GLOBAL__N_124kShadowModeAttributeNameE, i64 0, i64 0), i64 10) #10
  call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* nonnull %7, %"class.WTF::AtomicString"* dereferenceable(8) %42, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8, %"class.WTF::AtomicString"* dereferenceable(8) %42) #10
  %44 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #10
  %45 = inttoptr i64 %30 to %"class.WTF::StringImpl"*
  %46 = icmp eq i64 %30, 0
  br i1 %46, label %70, label %47

47:                                               ; preds = %29
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 acquire, align 4
  %50 = and i32 %49, 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %47
  %53 = load atomic i32, i32* %48 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %70

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #10
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %56
  call void @llvm.trap() #10
  unreachable

66:                                               ; preds = %56
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %57, align 4
  br label %70

68:                                               ; preds = %47
  %69 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %45) #10
  br label %70

70:                                               ; preds = %29, %52, %66, %68
  %71 = phi %"class.WTF::StringImpl"* [ %69, %68 ], [ %45, %52 ], [ %45, %66 ], [ null, %29 ]
  %72 = ptrtoint %"class.WTF::StringImpl"* %71 to i64
  %73 = bitcast %"class.WTF::AtomicString"* %9 to i64*
  store i64 %72, i64* %73, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %40, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %7, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9) #10
  %74 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #10
  br label %90

90:                                               ; preds = %70, %86, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #10
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %7) #10
  %91 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #10
  br label %107

107:                                              ; preds = %90, %103, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #10
  %108 = load i32, i32* %16, align 8
  %109 = and i32 %108, 524288
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %133, label %111

111:                                              ; preds = %107
  %112 = load %"class.blink::Element"*, %"class.blink::Element"** %5, align 8
  %113 = bitcast %"class.blink::QualifiedName"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #10
  %114 = bitcast %"class.WTF::AtomicString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #10
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @_ZN5blink12_GLOBAL__N_134kShadowDelegatesFocusAttributeNameE, i64 0, i64 0), i64 20) #10
  call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* nonnull %10, %"class.WTF::AtomicString"* dereferenceable(8) %42, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %11, %"class.WTF::AtomicString"* dereferenceable(8) %42) #10
  %115 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %112, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %10, %"class.WTF::AtomicString"* dereferenceable(8) %115) #10
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %10) #10
  %116 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %111
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #10
  br label %132

132:                                              ; preds = %111, %128, %131
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #10
  br label %133

133:                                              ; preds = %107, %132
  %134 = getelementptr inbounds %"class.blink::FrameSerializerDelegateImpl", %"class.blink::FrameSerializerDelegateImpl"* %0, i64 0, i32 2
  %135 = bitcast %"class.blink::HeapHashSet.2894"** %134 to %"class.WTF::HashSet.2897"**
  %136 = load %"class.WTF::HashSet.2897"*, %"class.WTF::HashSet.2897"** %135, align 8
  %137 = getelementptr inbounds %"class.WTF::HashSet.2897", %"class.WTF::HashSet.2897"* %136, i64 0, i32 0
  %138 = call { %"class.blink::WeakMember.2900"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_7ElementEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS3_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.2898"* %137, %"class.blink::Element"** nonnull dereferenceable(8) %5, %"class.blink::Element"** nonnull dereferenceable(8) %5) #10
  %139 = bitcast %"class.blink::Element"** %5 to i64*
  %140 = load i64, i64* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  br i1 %46, label %154, label %141

141:                                              ; preds = %133
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #10
  br label %154

154:                                              ; preds = %15, %153, %150, %133, %2
  %155 = phi i64 [ 0, %2 ], [ %13, %133 ], [ %13, %150 ], [ %13, %153 ], [ 0, %15 ]
  %156 = phi i64 [ 0, %2 ], [ %140, %133 ], [ %140, %150 ], [ %140, %153 ], [ 0, %15 ]
  %157 = inttoptr i64 %155 to %"class.blink::Node"*
  %158 = insertvalue { %"class.blink::Node"*, %"class.blink::Element"* } undef, %"class.blink::Node"* %157, 0
  %159 = inttoptr i64 %156 to %"class.blink::Element"*
  %160 = insertvalue { %"class.blink::Node"*, %"class.blink::Element"* } %158, %"class.blink::Element"* %159, 1
  ret { %"class.blink::Node"*, %"class.blink::Element"* } %160
}

declare %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #2

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FrameSerializer8DelegateD2Ev(%"class.blink::FrameSerializer::Delegate"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27FrameSerializerDelegateImplD0Ev(%"class.blink::FrameSerializerDelegateImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::FrameSerializerDelegateImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare %"class.blink::LinkStyle"* @_ZNK5blink15HTMLLinkElement12GetLinkStyleEv(%"class.blink::HTMLLinkElement"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #6

; Function Attrs: nounwind
declare void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"*) unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3342", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.3342"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3342", %"class.WTF::StringTypeAdapter.3342"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.3342"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3342"* nonnull %4, i8* %14) #10
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2893"* %9) #10
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2893"* %9) #10
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i8* %25, i8* %26) #10
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.6, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i8* %41, i8* %42) #10
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.6, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3342", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3343", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3342", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.3342"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.3342"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3342"* nonnull %5, i8* %10) #10
  %11 = bitcast %"class.WTF::StringTypeAdapter.3342"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3342", %"class.WTF::StringTypeAdapter.3342"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #10
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3342"* nonnull %3, i8* %14) #10
  %15 = bitcast %"class.WTF::StringTypeAdapter.3343"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3343", %"class.WTF::StringTypeAdapter.3343"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3343", %"class.WTF::StringTypeAdapter.3343"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #10
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.3343"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3342"* nonnull %3, i8* %1) #10
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3343", %"class.WTF::StringTypeAdapter.3343"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3344"* nonnull %34, i8* %37) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2893"* %6) #10
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3342"* nonnull %5, i8* %40) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3342", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3343", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3342", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.3342"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.3342"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3342"* nonnull %5, i8* %10) #10
  %11 = bitcast %"class.WTF::StringTypeAdapter.3342"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3342", %"class.WTF::StringTypeAdapter.3342"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #10
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3342"* nonnull %3, i8* %14) #10
  %15 = bitcast %"class.WTF::StringTypeAdapter.3343"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3343", %"class.WTF::StringTypeAdapter.3343"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3343", %"class.WTF::StringTypeAdapter.3343"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #10
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.3343"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3342"* nonnull %3, i16* %1) #10
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3343", %"class.WTF::StringTypeAdapter.3343"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3344"* nonnull %34, i16* %37) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2893"* %6) #10
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3342"* nonnull %5, i16* %40) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3342"*, i8*) unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2893"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3342", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.3342"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3342", %"class.WTF::StringTypeAdapter.3342"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2893", %"class.WTF::StringAppend.2893"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.3342"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3342"* nonnull %4, i8* %13) #10
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2893", %"class.WTF::StringAppend.2893"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i8* %30, i8* %31) #10
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.6, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i8* %45, i8* %46) #10
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.6, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3342"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3344"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3342"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3344"*, i16*) local_unnamed_addr #2

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"*, i8*, i32) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.3033"*, %"class.blink::Attribute"* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3033", %"class.WTF::Vector.3033"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3033", %"class.WTF::Vector.3033"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %6, align 8
  %8 = icmp ugt %"class.blink::Attribute"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Attribute"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.3033", %"class.WTF::Vector.3033"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::Attribute"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64 %27) #10
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv, i64 0, i64 0)) #10
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.3033"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.blink::Attribute"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3033"* %0, i32 %22) #10
  %36 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.blink::Attribute"* %1 to i64
  %39 = ptrtoint %"class.blink::Attribute"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 4
  %42 = getelementptr inbounds %"class.WTF::Vector.3033", %"class.WTF::Vector.3033"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !3

52:                                               ; preds = %37
  %53 = icmp eq %"class.blink::Attribute"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64 %55) #10
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv, i64 0, i64 0)) #10
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.3033"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 4
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.blink::Attribute"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3033"* %0, i32 %50) #10
  %64 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.blink::Attribute"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.blink::Attribute"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.blink::Attribute"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %70, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %69, i64 %72, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %74, %"class.blink::QualifiedName::QualifiedNameImpl"** %75, align 8
  %76 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %74, null
  br i1 %76, label %84, label %77

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = and i32 %79, 16777216
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %83) #10
  br label %84

84:                                               ; preds = %82, %77, %68
  %85 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %70, i64 0, i32 1, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %69, i64 %72, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %86, %"class.WTF::StringImpl"** %87, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %88, label %106, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %106

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i33
  %98 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #10
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !2

103:                                              ; preds = %94
  tail call void @llvm.trap() #10
  unreachable

104:                                              ; preds = %94
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %95, align 4
  br label %106

106:                                              ; preds = %84, %89, %104
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3033"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %41

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3033", %"class.WTF::Vector.3033"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3033", %"class.WTF::Vector.3033"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.3033"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.3033", %"class.WTF::Vector.3033"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %39, label %14

14:                                               ; preds = %4, %28
  %15 = phi %"class.blink::Attribute"* [ %37, %28 ], [ %6, %4 ]
  %16 = phi %"class.blink::Attribute"* [ %36, %28 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %16, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %18, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %20 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %18, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 16777216
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %27) #10
  br label %28

28:                                               ; preds = %26, %21, %14
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %16, i64 0, i32 1
  %30 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.WTF::AtomicString"* %30 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.WTF::AtomicString"* %29 to i64*
  store i64 %33, i64* %34, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %31, align 8
  %35 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %35) #10
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %16, i64 1
  %37 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 1
  %38 = icmp eq %"class.blink::Attribute"* %37, %10
  br i1 %38, label %39, label %14

39:                                               ; preds = %28, %4
  %40 = bitcast %"class.blink::Attribute"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #10
  br label %91

41:                                               ; preds = %2
  %42 = zext i32 %1 to i64
  %43 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64 %42) #10
  %44 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %43, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv, i64 0, i64 0)) #10
  %45 = lshr i64 %43, 4
  %46 = ptrtoint i8* %44 to i64
  %47 = getelementptr inbounds %"class.WTF::Vector.3033", %"class.WTF::Vector.3033"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %47, align 8
  %49 = getelementptr inbounds %"class.WTF::Vector.3033", %"class.WTF::Vector.3033"* %0, i64 0, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 %51
  %53 = icmp eq i32 %50, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %41
  %55 = bitcast %"class.blink::Attribute"* %48 to i8*
  br label %86

56:                                               ; preds = %41
  %57 = bitcast i8* %44 to %"class.blink::Attribute"*
  br label %58

58:                                               ; preds = %56, %72
  %59 = phi %"class.blink::Attribute"* [ %81, %72 ], [ %48, %56 ]
  %60 = phi %"class.blink::Attribute"* [ %80, %72 ], [ %57, %56 ]
  %61 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %59, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %62, %"class.blink::QualifiedName::QualifiedNameImpl"** %63, align 8
  %64 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %62, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, 16777216
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %71) #10
  br label %72

72:                                               ; preds = %70, %65, %58
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 0, i32 1
  %74 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %59, i64 0, i32 1
  %75 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.WTF::AtomicString"* %74 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.WTF::AtomicString"* %73 to i64*
  store i64 %77, i64* %78, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %75, align 8
  %79 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %59, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %79) #10
  %80 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 1
  %81 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %59, i64 1
  %82 = icmp eq %"class.blink::Attribute"* %81, %52
  br i1 %82, label %83, label %58

83:                                               ; preds = %72
  %84 = bitcast %"class.WTF::Vector.3033"* %0 to i8**
  %85 = load i8*, i8** %84, align 8
  br label %86

86:                                               ; preds = %54, %83
  %87 = phi i8* [ %85, %83 ], [ %55, %54 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %87) #10
  %88 = bitcast %"class.WTF::Vector.3033"* %0 to i64*
  store atomic i64 %46, i64* %88 monotonic, align 8
  %89 = trunc i64 %45 to i32
  %90 = getelementptr inbounds %"class.WTF::Vector.3033", %"class.WTF::Vector.3033"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %89, i32* %90, align 8
  br label %91

91:                                               ; preds = %86, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Element"* @_ZN5blink25MakeGarbageCollectedTraitINS_7ElementEE4CallIJRKNS_17HTMLQualifiedNameEPNS_8DocumentEEEEPS1_DpOT_(%"class.blink::HTMLQualifiedName"* dereferenceable(8), %"class.blink::Document"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %4 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %8 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %7, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %9

9:                                                ; preds = %6, %2
  %10 = phi i32 [ %4, %2 ], [ %8, %6 ]
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %3, i64 0, i32 19, i64 6
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 112
  br i1 %16, label %47, label %17, !prof !2

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 112
  store i8* %20, i8** %18, align 8
  %21 = add i64 %15, -112
  store i64 %21, i64* %14, align 8
  %22 = bitcast i8* %19 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 4
  %24 = bitcast i8* %23 to i16*
  %25 = trunc i32 %10 to i16
  %26 = shl i16 %25, 2
  store atomic i16 %26, i16* %24 monotonic, align 2
  %27 = getelementptr inbounds i8, i8* %19, i64 6
  %28 = bitcast i8* %27 to i16*
  store i16 56, i16* %28, align 2
  %29 = ptrtoint i8* %19 to i64
  %30 = and i64 %29, -131072
  %31 = inttoptr i64 %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 4400
  %33 = bitcast i8* %32 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %34 = bitcast i8* %32 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = sub i64 %29, %35
  %37 = lshr i64 %36, 3
  %38 = lshr i64 %36, 6
  %39 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %33, i64 0, i32 0, i32 1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = trunc i64 %37 to i32
  %42 = and i32 %41, 7
  %43 = shl i32 1, %42
  %44 = trunc i32 %43 to i8
  %45 = or i8 %40, %44
  store atomic i8 %45, i8* %39 release, align 1
  %46 = getelementptr inbounds i8, i8* %19, i64 8
  br label %50

47:                                               ; preds = %9
  %48 = zext i32 %10 to i64
  %49 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 112, i64 %48) #10
  br label %50

50:                                               ; preds = %17, %47
  %51 = phi i8* [ %46, %17 ], [ %49, %47 ]
  %52 = bitcast i8* %51 to %"class.blink::Element"*
  %53 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %0, i64 0, i32 0
  %54 = load %"class.blink::Document"*, %"class.blink::Document"** %1, align 8
  tail call void @_ZN5blink7ElementC1ERKNS_13QualifiedNameEPNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::Element"* %52, %"class.blink::QualifiedName"* dereferenceable(8) %53, %"class.blink::Document"* %54, i32 1074) #10
  %55 = getelementptr inbounds i8, i8* %51, i64 -4
  %56 = bitcast i8* %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = or i16 %57, 1
  store atomic i16 %58, i16* %56 release, align 2
  ret %"class.blink::Element"* %52
}

declare void @_ZN5blink7ElementC1ERKNS_13QualifiedNameEPNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"*, i32) unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #10
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::WeakMember.2900"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_7ElementEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS3_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.2898"*, %"class.blink::Element"** dereferenceable(8), %"class.blink::Element"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2898", %"class.WTF::HashTable.2898"* %0, i64 0, i32 0
  %5 = load %"class.blink::WeakMember.2900"*, %"class.blink::WeakMember.2900"** %4, align 8
  %6 = icmp eq %"class.blink::WeakMember.2900"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::WeakMember.2900"* @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_7ElementEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.2898"* %0, %"class.blink::WeakMember.2900"* null)
  %9 = load %"class.blink::WeakMember.2900"*, %"class.blink::WeakMember.2900"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::WeakMember.2900"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2898", %"class.WTF::HashTable.2898"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Element"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::WeakMember.2900", %"class.blink::WeakMember.2900"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::WeakMember.2900", %"class.blink::WeakMember.2900"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::Element"*, %"class.blink::Element"** %40, align 8
  %42 = icmp eq %"class.blink::Element"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Element"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Element"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::WeakMember.2900"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::WeakMember.2900"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Element"* %59, %43
  br i1 %64, label %149, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Element"* %59, inttoptr (i64 -1 to %"class.blink::Element"*)
  %67 = select i1 %66, %"class.blink::WeakMember.2900"* %60, %"class.blink::WeakMember.2900"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::WeakMember.2900", %"class.blink::WeakMember.2900"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::WeakMember.2900", %"class.blink::WeakMember.2900"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::Element"*, %"class.blink::Element"** %73, align 8
  %75 = icmp eq %"class.blink::Element"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::WeakMember.2900"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::WeakMember.2900"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #10
  %80 = getelementptr inbounds %"class.WTF::HashTable.2898", %"class.WTF::HashTable.2898"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::WeakMember.2900"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %89 = ptrtoint %"class.blink::Element"* %88 to i64
  %90 = bitcast %"class.blink::WeakMember.2900"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::Element"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #10
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::WeakMember.2900"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #10
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.2898", %"class.WTF::HashTable.2898"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.2898", %"class.WTF::HashTable.2898"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::WeakMember.2900"* @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_7ElementEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.2898"* %0, %"class.blink::WeakMember.2900"* %87)
  br label %149

115:                                              ; preds = %103
  %116 = mul i32 %106, 6
  %117 = icmp ult i32 %116, %111
  %118 = icmp ugt i32 %111, 8
  %119 = and i1 %117, %118
  br i1 %119, label %120, label %149

120:                                              ; preds = %115
  %121 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %122 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %121, i64 0, i32 1
  %123 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %122) #10
  %124 = icmp eq i8* %123, null
  br i1 %124, label %125, label %127, !prof !2

125:                                              ; preds = %120
  %126 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %122, i8* %126) #10
  br label %127

127:                                              ; preds = %125, %120
  %128 = phi i8* [ %126, %125 ], [ %123, %120 ]
  %129 = bitcast i8* %128 to %"class.blink::ThreadState"**
  %130 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 6
  %132 = load i8, i8* %131, align 8, !range !4
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %138, label %134

134:                                              ; preds = %127
  %135 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 16
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %149, label %138

138:                                              ; preds = %127, %134
  %139 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %130, i64 0, i32 13
  %140 = load i64, i64* %139, align 8
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %149

142:                                              ; preds = %138
  %143 = load i32, i32* %12, align 8
  %144 = lshr i32 %143, 1
  %145 = zext i32 %144 to i64
  %146 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_7ElementEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %145) #10
  %147 = bitcast %"class.blink::HeapHashTableBacking"* %146 to %"class.blink::WeakMember.2900"*
  %148 = tail call %"class.blink::WeakMember.2900"* @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_7ElementEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.2898"* %0, %"class.blink::WeakMember.2900"* %147, i32 %144, %"class.blink::WeakMember.2900"* %87) #10
  br label %149

149:                                              ; preds = %58, %134, %115, %113, %142, %138
  %150 = phi i8 [ 1, %138 ], [ 1, %142 ], [ 1, %113 ], [ 1, %115 ], [ 1, %134 ], [ 0, %58 ]
  %151 = phi %"class.blink::WeakMember.2900"* [ %87, %138 ], [ %148, %142 ], [ %114, %113 ], [ %87, %115 ], [ %87, %134 ], [ %60, %58 ]
  %152 = insertvalue { %"class.blink::WeakMember.2900"*, i8 } undef, %"class.blink::WeakMember.2900"* %151, 0
  %153 = insertvalue { %"class.blink::WeakMember.2900"*, i8 } %152, i8 %150, 1
  ret { %"class.blink::WeakMember.2900"*, i8 } %153
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WeakMember.2900"* @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_7ElementEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.2898"*, %"class.blink::WeakMember.2900"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.2898", %"class.WTF::HashTable.2898"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.2898", %"class.WTF::HashTable.2898"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #10
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* %23, i8* %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #10
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::WeakMember.2900"* @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_7ElementEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb(%"class.WTF::HashTable.2898"* %0, i32 %35, %"class.blink::WeakMember.2900"* %1, i8* nonnull dereferenceable(1) %4) #10
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_7ElementEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #10
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::WeakMember.2900"*
  %44 = call %"class.blink::WeakMember.2900"* @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_7ElementEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.2898"* %0, %"class.blink::WeakMember.2900"* %43, i32 %40, %"class.blink::WeakMember.2900"* %1) #10
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::WeakMember.2900"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::WeakMember.2900"* %46
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WeakMember.2900"* @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_7ElementEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb(%"class.WTF::HashTable.2898"*, i32, %"class.blink::WeakMember.2900"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #10
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #10
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.2898", %"class.WTF::HashTable.2898"* %0, i64 0, i32 0
  %32 = load %"class.blink::WeakMember.2900"*, %"class.blink::WeakMember.2900"** %31, align 8
  %33 = icmp eq %"class.blink::WeakMember.2900"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::WeakMember.2900"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #10
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.2898", %"class.WTF::HashTable.2898"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::WeakMember.2900"*, %"class.blink::WeakMember.2900"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_7ElementEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #10
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::WeakMember.2900"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::WeakMember.2900"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::WeakMember.2900"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::WeakMember.2900"*, %"class.blink::WeakMember.2900"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::WeakMember.2900", %"class.blink::WeakMember.2900"* %58, i64 %54
  %60 = icmp eq %"class.blink::WeakMember.2900"* %59, %2
  %61 = getelementptr inbounds %"class.blink::WeakMember.2900", %"class.blink::WeakMember.2900"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::WeakMember.2900"* %61, %"class.blink::WeakMember.2900"* %55
  %63 = bitcast %"class.blink::WeakMember.2900"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::WeakMember.2900"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::WeakMember.2900"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.2898"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #10
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::WeakMember.2900"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::WeakMember.2900"* @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_7ElementEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.2898"* %0, %"class.blink::WeakMember.2900"* %42, i32 %1, %"class.blink::WeakMember.2900"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::WeakMember.2900"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::WeakMember.2900"*, %"class.blink::WeakMember.2900"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::WeakMember.2900", %"class.blink::WeakMember.2900"* %84, i64 %81
  %86 = icmp eq %"class.blink::WeakMember.2900"* %85, %2
  %87 = getelementptr inbounds %"class.blink::WeakMember.2900", %"class.blink::WeakMember.2900"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::WeakMember.2900"* %87, %"class.blink::WeakMember.2900"* %82
  %89 = bitcast %"class.blink::WeakMember.2900"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::WeakMember.2900"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::WeakMember.2900"*, %"class.blink::WeakMember.2900"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::WeakMember.2900", %"class.blink::WeakMember.2900"* %96, i64 %95
  %98 = icmp eq %"class.blink::WeakMember.2900"* %97, %2
  %99 = getelementptr inbounds %"class.blink::WeakMember.2900", %"class.blink::WeakMember.2900"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::WeakMember.2900"* %99, %"class.blink::WeakMember.2900"* %88
  %101 = bitcast %"class.blink::WeakMember.2900"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::WeakMember.2900"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::WeakMember.2900"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::WeakMember.2900"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WeakMember.2900"* @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_7ElementEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.2898"*, %"class.blink::WeakMember.2900"*, i32, %"class.blink::WeakMember.2900"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2898", align 8
  %6 = bitcast %"class.WTF::HashTable.2898"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable.2898", %"class.WTF::HashTable.2898"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2898", %"class.WTF::HashTable.2898"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2898", %"class.WTF::HashTable.2898"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2898", %"class.WTF::HashTable.2898"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2898"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.blink::WeakMember.2900"* %1, %"class.blink::WeakMember.2900"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2898", %"class.WTF::HashTable.2898"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"class.blink::WeakMember.2900"* %1 to i64
  %17 = bitcast %"class.blink::WeakMember.2900"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.2898", %"class.WTF::HashTable.2898"* %0, i64 0, i32 0
  %20 = load %"class.blink::WeakMember.2900"*, %"class.blink::WeakMember.2900"** %19, align 8
  br label %48

21:                                               ; preds = %140
  %22 = bitcast %"class.WTF::HashTable.2898"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %141, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"class.blink::WeakMember.2900"* [ null, %15 ], [ %143, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %25
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #10
  %33 = load i32, i32* %12, align 8
  br label %34

34:                                               ; preds = %25, %32
  %35 = phi i32 [ %27, %25 ], [ %33, %32 ]
  %36 = bitcast %"class.WTF::HashTable.2898"* %0 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.WTF::HashTable.2898"* %5 to i64*
  store atomic i64 %26, i64* %36 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %34
  %42 = inttoptr i64 %26 to i8*
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #10
  br label %44

44:                                               ; preds = %34, %41
  store i32 %2, i32* %12, align 8
  store i64 %37, i64* %38, align 8
  store i32 %35, i32* %8, align 8
  call void @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_7ElementEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE5clearEv(%"class.WTF::HashTable.2898"* nonnull %5)
  %45 = getelementptr inbounds %"class.WTF::HashTable.2898", %"class.WTF::HashTable.2898"* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, -2147483648
  store i32 %47, i32* %45, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"class.blink::WeakMember.2900"* %29

48:                                               ; preds = %18, %140
  %49 = phi i32 [ %13, %18 ], [ %141, %140 ]
  %50 = phi %"class.blink::WeakMember.2900"* [ %20, %18 ], [ %142, %140 ]
  %51 = phi %"class.blink::WeakMember.2900"* [ null, %18 ], [ %143, %140 ]
  %52 = phi i32 [ 0, %18 ], [ %144, %140 ]
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.blink::WeakMember.2900", %"class.blink::WeakMember.2900"* %50, i64 %53
  %55 = bitcast %"class.blink::WeakMember.2900"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  switch i64 %56, label %57 [
    i64 -1, label %140
    i64 0, label %140
  ]

57:                                               ; preds = %48
  %58 = load %"class.blink::WeakMember.2900"*, %"class.blink::WeakMember.2900"** %7, align 8
  %59 = load i32, i32* %8, align 8
  %60 = add i32 %59, -1
  %61 = zext i32 %60 to i64
  %62 = shl i64 %56, 32
  %63 = xor i64 %62, -1
  %64 = add i64 %56, %63
  %65 = lshr i64 %64, 22
  %66 = xor i64 %65, %64
  %67 = shl i64 %66, 13
  %68 = xor i64 %67, -1
  %69 = add i64 %66, %68
  %70 = lshr i64 %69, 8
  %71 = xor i64 %70, %69
  %72 = mul i64 %71, 9
  %73 = lshr i64 %72, 15
  %74 = xor i64 %73, %72
  %75 = shl i64 %74, 27
  %76 = xor i64 %75, -1
  %77 = add i64 %74, %76
  %78 = lshr i64 %77, 31
  %79 = xor i64 %78, %77
  %80 = trunc i64 %79 to i32
  %81 = and i32 %60, %80
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.blink::WeakMember.2900", %"class.blink::WeakMember.2900"* %58, i64 %82
  %84 = ptrtoint %"class.blink::WeakMember.2900"* %83 to i64
  %85 = getelementptr inbounds %"class.blink::WeakMember.2900", %"class.blink::WeakMember.2900"* %83, i64 0, i32 0, i32 0
  %86 = load %"class.blink::Element"*, %"class.blink::Element"** %85, align 8
  %87 = icmp eq %"class.blink::Element"* %86, null
  %88 = inttoptr i64 %56 to %"class.blink::Element"*
  br i1 %87, label %106, label %89

89:                                               ; preds = %57
  %90 = xor i32 %80, -1
  %91 = lshr i32 %80, 23
  %92 = add i32 %91, %90
  %93 = shl i32 %92, 12
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 7
  %96 = xor i32 %95, %94
  %97 = shl i32 %96, 2
  %98 = xor i32 %97, %96
  %99 = lshr i32 %98, 20
  %100 = xor i32 %99, %98
  %101 = or i32 %100, 1
  %102 = zext i32 %101 to i64
  br label %112

103:                                              ; preds = %119
  %104 = ptrtoint %"class.blink::WeakMember.2900"* %126 to i64
  %105 = inttoptr i64 %121 to %"class.blink::WeakMember.2900"*
  br label %106

106:                                              ; preds = %103, %57
  %107 = phi i64 [ %104, %103 ], [ %84, %57 ]
  %108 = phi %"class.blink::WeakMember.2900"* [ %105, %103 ], [ null, %57 ]
  %109 = icmp eq %"class.blink::WeakMember.2900"* %108, null
  %110 = ptrtoint %"class.blink::WeakMember.2900"* %108 to i64
  %111 = select i1 %109, i64 %107, i64 %110
  br label %131

112:                                              ; preds = %119, %89
  %113 = phi i64 [ 0, %89 ], [ %121, %119 ]
  %114 = phi %"class.blink::Element"* [ %86, %89 ], [ %129, %119 ]
  %115 = phi i64 [ %84, %89 ], [ %127, %119 ]
  %116 = phi i64 [ %82, %89 ], [ %125, %119 ]
  %117 = phi i64 [ 0, %89 ], [ %123, %119 ]
  %118 = icmp eq %"class.blink::Element"* %114, %88
  br i1 %118, label %131, label %119

119:                                              ; preds = %112
  %120 = icmp eq %"class.blink::Element"* %114, inttoptr (i64 -1 to %"class.blink::Element"*)
  %121 = select i1 %120, i64 %115, i64 %113
  %122 = icmp eq i64 %117, 0
  %123 = select i1 %122, i64 %102, i64 %117
  %124 = add i64 %123, %116
  %125 = and i64 %124, %61
  %126 = getelementptr inbounds %"class.blink::WeakMember.2900", %"class.blink::WeakMember.2900"* %58, i64 %125
  %127 = ptrtoint %"class.blink::WeakMember.2900"* %126 to i64
  %128 = getelementptr inbounds %"class.blink::WeakMember.2900", %"class.blink::WeakMember.2900"* %126, i64 0, i32 0, i32 0
  %129 = load %"class.blink::Element"*, %"class.blink::Element"** %128, align 8
  %130 = icmp eq %"class.blink::Element"* %129, null
  br i1 %130, label %103, label %112

131:                                              ; preds = %112, %106
  %132 = phi i64 [ %111, %106 ], [ %115, %112 ]
  %133 = inttoptr i64 %132 to %"class.blink::WeakMember.2900"*
  %134 = inttoptr i64 %132 to i64*
  store i64 %56, i64* %134, align 8
  %135 = load %"class.blink::WeakMember.2900"*, %"class.blink::WeakMember.2900"** %19, align 8
  %136 = getelementptr inbounds %"class.blink::WeakMember.2900", %"class.blink::WeakMember.2900"* %135, i64 %53
  %137 = icmp eq %"class.blink::WeakMember.2900"* %136, %3
  %138 = select i1 %137, %"class.blink::WeakMember.2900"* %133, %"class.blink::WeakMember.2900"* %51
  %139 = load i32, i32* %12, align 8
  br label %140

140:                                              ; preds = %48, %48, %131
  %141 = phi i32 [ %49, %48 ], [ %139, %131 ], [ %49, %48 ]
  %142 = phi %"class.blink::WeakMember.2900"* [ %50, %48 ], [ %135, %131 ], [ %50, %48 ]
  %143 = phi %"class.blink::WeakMember.2900"* [ %51, %48 ], [ %138, %131 ], [ %51, %48 ]
  %144 = add i32 %52, 1
  %145 = icmp eq i32 %144, %141
  br i1 %145, label %21, label %48
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_7ElementEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.18, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_7ElementEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_7ElementEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %6 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_7ElementEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %10 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %9, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_7ElementEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_7ElementEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %11

11:                                               ; preds = %1, %8
  %12 = phi i32 [ %6, %1 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %5, i64 0, i32 19, i64 5
  %14 = bitcast %"class.blink::BaseArena"** %13 to %"class.blink::NormalPageArena"**
  %15 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %14, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = icmp ult i64 %0, -8
  br i1 %19, label %20, label %21

20:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  store i8* null, i8** %17, align 8
  br label %31

21:                                               ; preds = %11
  %22 = add nsw i64 %0, 8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %22) #10
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i8* %23, i8* %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  store i8* %26, i8** %17, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %21
  %29 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.14, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #10
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  br label %31

31:                                               ; preds = %20, %21, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  %32 = add i64 %0, 15
  %33 = and i64 %32, -8
  %34 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %15, i64 0, i32 4
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %35, %33
  br i1 %36, label %69, label %37, !prof !2

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %15, i64 0, i32 3
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 %33
  store i8* %40, i8** %38, align 8
  %41 = sub i64 %35, %33
  store i64 %41, i64* %34, align 8
  %42 = bitcast i8* %39 to i32*
  store i32 0, i32* %42, align 4
  %43 = getelementptr inbounds i8, i8* %39, i64 4
  %44 = bitcast i8* %43 to i16*
  %45 = trunc i32 %12 to i16
  %46 = shl i16 %45, 2
  store atomic i16 %46, i16* %44 monotonic, align 2
  %47 = lshr exact i64 %33, 1
  %48 = trunc i64 %47 to i16
  %49 = getelementptr inbounds i8, i8* %39, i64 6
  %50 = bitcast i8* %49 to i16*
  store i16 %48, i16* %50, align 2
  %51 = ptrtoint i8* %39 to i64
  %52 = and i64 %51, -131072
  %53 = inttoptr i64 %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 4400
  %55 = bitcast i8* %54 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %56 = bitcast i8* %54 to i64*
  %57 = load i64, i64* %56, align 16
  %58 = sub i64 %51, %57
  %59 = lshr i64 %58, 3
  %60 = lshr i64 %58, 6
  %61 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %55, i64 0, i32 0, i32 1, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = trunc i64 %59 to i32
  %64 = and i32 %63, 7
  %65 = shl i32 1, %64
  %66 = trunc i32 %65 to i8
  %67 = or i8 %62, %66
  store atomic i8 %67, i8* %61 release, align 1
  %68 = getelementptr inbounds i8, i8* %39, i64 8
  br label %72

69:                                               ; preds = %31
  %70 = zext i32 %12 to i64
  %71 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %15, i64 %33, i64 %70) #10
  br label %72

72:                                               ; preds = %37, %69
  %73 = phi i8* [ %68, %37 ], [ %71, %69 ]
  ret i8* %73
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_7ElementEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WeakMember.2900"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #10
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::WeakMember.2900", %"class.blink::WeakMember.2900"* %3, i64 %33
  %35 = bitcast %"class.blink::WeakMember.2900"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #10
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #10
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_7ElementEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_7ElementEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE5clearEv(%"class.WTF::HashTable.2898"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::HashTable.2898", %"class.WTF::HashTable.2898"* %0, i64 0, i32 0
  %3 = load %"class.blink::WeakMember.2900"*, %"class.blink::WeakMember.2900"** %2, align 8
  %4 = icmp eq %"class.blink::WeakMember.2900"* %3, null
  br i1 %4, label %45, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::HashTable.2898", %"class.WTF::HashTable.2898"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %41, label %10

10:                                               ; preds = %5
  %11 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %12 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %11, i64 0, i32 1
  %13 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %12) #10
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %17, !prof !2

15:                                               ; preds = %10
  %16 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %12, i8* %16) #10
  br label %17

17:                                               ; preds = %10, %15
  %18 = phi i8* [ %16, %15 ], [ %13, %10 ]
  %19 = bitcast i8* %18 to %"class.blink::ThreadState"**
  %20 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %20, i64 0, i32 9
  %22 = load i8, i8* %21, align 1, !range !4
  %23 = icmp ne i8 %22, 0
  %24 = icmp ne i32 %7, 0
  %25 = and i1 %24, %23
  br i1 %25, label %26, label %41

26:                                               ; preds = %17
  %27 = zext i32 %7 to i64
  br label %28

28:                                               ; preds = %38, %26
  %29 = phi i64 [ 0, %26 ], [ %39, %38 ]
  %30 = getelementptr inbounds %"class.blink::WeakMember.2900", %"class.blink::WeakMember.2900"* %3, i64 %29
  %31 = bitcast %"class.blink::WeakMember.2900"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  switch i64 %32, label %33 [
    i64 -1, label %38
    i64 0, label %38
  ]

33:                                               ; preds = %28
  store atomic i64 -1, i64* %31 monotonic, align 8
  %34 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #10
  br label %38

38:                                               ; preds = %36, %33, %28, %28
  %39 = add nuw nsw i64 %29, 1
  %40 = icmp eq i64 %39, %27
  br i1 %40, label %41, label %28

41:                                               ; preds = %38, %5, %17
  %42 = bitcast %"class.blink::WeakMember.2900"* %3 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %42) #10
  %43 = bitcast %"class.WTF::HashTable.2898"* %0 to i64*
  store atomic i64 0, i64* %43 monotonic, align 8
  store i32 0, i32* %6, align 8
  %44 = getelementptr inbounds %"class.WTF::HashTable.2898", %"class.WTF::HashTable.2898"* %0, i64 0, i32 2
  store i32 0, i32* %44, align 4
  br label %45

45:                                               ; preds = %1, %41
  ret void
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
