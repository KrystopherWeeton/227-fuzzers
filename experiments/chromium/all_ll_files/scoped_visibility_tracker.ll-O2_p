; ModuleID = '../../ui/base/scoped_visibility_tracker.cc'
source_filename = "../../ui/base/scoped_visibility_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::ScopedVisibilityTracker" = type <{ %"class.base::TickClock"*, %"class.base::TimeTicks", %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN2ui23ScopedVisibilityTrackerC1EPKN4base9TickClockEb = hidden unnamed_addr alias void (%"class.ui::ScopedVisibilityTracker"*, %"class.base::TickClock"*, i1), void (%"class.ui::ScopedVisibilityTracker"*, %"class.base::TickClock"*, i1)* @_ZN2ui23ScopedVisibilityTrackerC2EPKN4base9TickClockEb
@_ZN2ui23ScopedVisibilityTrackerD1Ev = hidden unnamed_addr alias void (%"class.ui::ScopedVisibilityTracker"*), void (%"class.ui::ScopedVisibilityTracker"*)* @_ZN2ui23ScopedVisibilityTrackerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23ScopedVisibilityTrackerC2EPKN4base9TickClockEb(%"class.ui::ScopedVisibilityTracker"* nocapture, %"class.base::TickClock"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::ScopedVisibilityTracker", %"class.ui::ScopedVisibilityTracker"* %0, i64 0, i32 0
  store %"class.base::TickClock"* %1, %"class.base::TickClock"** %4, align 8
  %5 = getelementptr inbounds %"class.ui::ScopedVisibilityTracker", %"class.ui::ScopedVisibilityTracker"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 17, i1 false)
  br i1 %2, label %7, label %8

7:                                                ; preds = %3
  tail call void @_ZN2ui23ScopedVisibilityTracker6UpdateEb(%"class.ui::ScopedVisibilityTracker"* %0, i1 zeroext true) #6
  br label %8

8:                                                ; preds = %7, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23ScopedVisibilityTracker7OnShownEv(%"class.ui::ScopedVisibilityTracker"* nocapture) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2ui23ScopedVisibilityTracker6UpdateEb(%"class.ui::ScopedVisibilityTracker"* %0, i1 zeroext true)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui23ScopedVisibilityTrackerD2Ev(%"class.ui::ScopedVisibilityTracker"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23ScopedVisibilityTracker6UpdateEb(%"class.ui::ScopedVisibilityTracker"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = zext i1 %1 to i8
  %5 = getelementptr inbounds %"class.ui::ScopedVisibilityTracker", %"class.ui::ScopedVisibilityTracker"* %0, i64 0, i32 0
  %6 = load %"class.base::TickClock"*, %"class.base::TickClock"** %5, align 8
  %7 = bitcast %"class.base::TickClock"* %6 to i64 (%"class.base::TickClock"*)***
  %8 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %8, i64 2
  %10 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %9, align 8
  %11 = tail call i64 %10(%"class.base::TickClock"* %6) #6
  %12 = getelementptr inbounds %"class.ui::ScopedVisibilityTracker", %"class.ui::ScopedVisibilityTracker"* %0, i64 0, i32 3
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %40, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.ui::ScopedVisibilityTracker", %"class.ui::ScopedVisibilityTracker"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = sub nsw i64 %11, %17
  %19 = add i64 %18, -9223372036854775807
  %20 = icmp ult i64 %19, 2
  %21 = getelementptr inbounds %"class.ui::ScopedVisibilityTracker", %"class.ui::ScopedVisibilityTracker"* %0, i64 0, i32 2, i32 0
  %22 = load i64, i64* %21, align 8
  br i1 %20, label %30, label %23

23:                                               ; preds = %15
  %24 = icmp slt i64 %18, 0
  %25 = select i1 %24, i64 -9223372036854775808, i64 9223372036854775807
  %26 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %22, i64 %18) #6
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = extractvalue { i64, i1 } %26, 0
  %29 = select i1 %27, i64 %25, i64 %28, !prof !3
  br label %38

30:                                               ; preds = %15
  %31 = add i64 %22, -9223372036854775807
  %32 = icmp ugt i64 %31, 1
  %33 = icmp eq i64 %22, %18
  %34 = or i1 %33, %32
  br i1 %34, label %38, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #6
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  br label %38

38:                                               ; preds = %23, %30, %35
  %39 = phi i64 [ %29, %23 ], [ %18, %30 ], [ %18, %35 ]
  store i64 %39, i64* %21, align 8
  br label %40

40:                                               ; preds = %2, %38
  br i1 %1, label %41, label %43

41:                                               ; preds = %40
  %42 = getelementptr inbounds %"class.ui::ScopedVisibilityTracker", %"class.ui::ScopedVisibilityTracker"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %11, i64* %42, align 8
  br label %43

43:                                               ; preds = %41, %40
  store i8 %4, i8* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui23ScopedVisibilityTracker8OnHiddenEv(%"class.ui::ScopedVisibilityTracker"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.ui::ScopedVisibilityTracker", %"class.ui::ScopedVisibilityTracker"* %0, i64 0, i32 0
  %4 = load %"class.base::TickClock"*, %"class.base::TickClock"** %3, align 8
  %5 = bitcast %"class.base::TickClock"* %4 to i64 (%"class.base::TickClock"*)***
  %6 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %6, i64 2
  %8 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %7, align 8
  %9 = tail call i64 %8(%"class.base::TickClock"* %4) #6
  %10 = getelementptr inbounds %"class.ui::ScopedVisibilityTracker", %"class.ui::ScopedVisibilityTracker"* %0, i64 0, i32 3
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %38, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.ui::ScopedVisibilityTracker", %"class.ui::ScopedVisibilityTracker"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = sub nsw i64 %9, %15
  %17 = add i64 %16, -9223372036854775807
  %18 = icmp ult i64 %17, 2
  %19 = getelementptr inbounds %"class.ui::ScopedVisibilityTracker", %"class.ui::ScopedVisibilityTracker"* %0, i64 0, i32 2, i32 0
  %20 = load i64, i64* %19, align 8
  br i1 %18, label %28, label %21

21:                                               ; preds = %13
  %22 = icmp slt i64 %16, 0
  %23 = select i1 %22, i64 -9223372036854775808, i64 9223372036854775807
  %24 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %20, i64 %16) #6
  %25 = extractvalue { i64, i1 } %24, 1
  %26 = extractvalue { i64, i1 } %24, 0
  %27 = select i1 %25, i64 %23, i64 %26, !prof !3
  br label %36

28:                                               ; preds = %13
  %29 = add i64 %20, -9223372036854775807
  %30 = icmp ugt i64 %29, 1
  %31 = icmp eq i64 %20, %16
  %32 = or i1 %31, %30
  br i1 %32, label %36, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #6
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #6
  br label %36

36:                                               ; preds = %33, %28, %21
  %37 = phi i64 [ %27, %21 ], [ %16, %28 ], [ %16, %33 ]
  store i64 %37, i64* %19, align 8
  br label %38

38:                                               ; preds = %1, %36
  store i8 0, i8* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui23ScopedVisibilityTracker21GetForegroundDurationEv(%"class.ui::ScopedVisibilityTracker"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.ui::ScopedVisibilityTracker", %"class.ui::ScopedVisibilityTracker"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %36, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.ui::ScopedVisibilityTracker", %"class.ui::ScopedVisibilityTracker"* %0, i64 0, i32 0
  %8 = load %"class.base::TickClock"*, %"class.base::TickClock"** %7, align 8
  %9 = bitcast %"class.base::TickClock"* %8 to i64 (%"class.base::TickClock"*)***
  %10 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %10, i64 2
  %12 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %11, align 8
  %13 = tail call i64 %12(%"class.base::TickClock"* %8) #6
  %14 = getelementptr inbounds %"class.ui::ScopedVisibilityTracker", %"class.ui::ScopedVisibilityTracker"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = sub nsw i64 %13, %15
  %17 = add i64 %16, -9223372036854775807
  %18 = icmp ult i64 %17, 2
  %19 = getelementptr inbounds %"class.ui::ScopedVisibilityTracker", %"class.ui::ScopedVisibilityTracker"* %0, i64 0, i32 2, i32 0
  %20 = load i64, i64* %19, align 8
  br i1 %18, label %28, label %21

21:                                               ; preds = %6
  %22 = icmp slt i64 %16, 0
  %23 = select i1 %22, i64 -9223372036854775808, i64 9223372036854775807
  %24 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %20, i64 %16) #6
  %25 = extractvalue { i64, i1 } %24, 1
  %26 = extractvalue { i64, i1 } %24, 0
  %27 = select i1 %25, i64 %23, i64 %26, !prof !3
  br label %39

28:                                               ; preds = %6
  %29 = add i64 %20, -9223372036854775807
  %30 = icmp ugt i64 %29, 1
  %31 = icmp eq i64 %20, %16
  %32 = or i1 %31, %30
  br i1 %32, label %39, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #6
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #6
  br label %39

36:                                               ; preds = %1
  %37 = getelementptr inbounds %"class.ui::ScopedVisibilityTracker", %"class.ui::ScopedVisibilityTracker"* %0, i64 0, i32 2, i32 0
  %38 = load i64, i64* %37, align 8
  br label %39

39:                                               ; preds = %33, %28, %21, %36
  %40 = phi i64 [ %38, %36 ], [ %27, %21 ], [ %16, %28 ], [ %16, %33 ]
  ret i64 %40
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
