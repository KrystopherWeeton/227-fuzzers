; ModuleID = '../../third_party/unrar/src/filestr.cpp'
source_filename = "../../third_party/unrar/src/filestr.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%class.ErrorHandler = type <{ i32, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%class.StringList = type { %class.Array, i64, i64, [16 x i64], i64 }
%class.Array = type <{ i32*, i64, i64, i64, i8, [7 x i8] }>
%class.File = type { i32 (...)**, i64, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, [2048 x i32], i32, i64 }
%class.Array.0 = type <{ i8*, i64, i64, i64, i8, [7 x i8] }>

$_ZN5ArrayIhE3AddEm = comdat any

$_ZN5ArrayIwE3AddEm = comdat any

@ErrHandler = external global %class.ErrorHandler, align 4
@.str = private unnamed_addr constant [44 x i32] [i32 77, i32 97, i32 120, i32 105, i32 109, i32 117, i32 109, i32 32, i32 97, i32 108, i32 108, i32 111, i32 119, i32 101, i32 100, i32 32, i32 97, i32 114, i32 114, i32 97, i32 121, i32 32, i32 115, i32 105, i32 122, i32 101, i32 32, i32 40, i32 37, i32 117, i32 41, i32 32, i32 105, i32 115, i32 32, i32 101, i32 120, i32 99, i32 101, i32 101, i32 100, i32 101, i32 100, i32 0], align 4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z12ReadTextFilePKwP10StringListbb11RAR_CHARSETbbb(i32*, %class.StringList*, i1 zeroext, i1 zeroext, i32, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #0 {
  %9 = alloca [2048 x i32], align 16
  %10 = alloca %class.File, align 8
  %11 = alloca %class.Array.0, align 8
  %12 = alloca %class.Array, align 8
  %13 = bitcast [2048 x i32]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %13) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 8192, i1 false)
  %14 = getelementptr inbounds [2048 x i32], [2048 x i32]* %9, i64 0, i64 0
  store i32 0, i32* %14, align 16
  %15 = icmp eq i32* %0, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %8
  br i1 %2, label %17, label %18

17:                                               ; preds = %16
  call void @_Z13GetConfigNamePKwPwmbb(i32* nonnull %0, i32* nonnull %14, i64 2048, i1 zeroext true, i1 zeroext false) #6
  br label %19

18:                                               ; preds = %16
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %14, i32* nonnull %0, i64 2048) #6
  br label %19

19:                                               ; preds = %8, %17, %18
  %20 = bitcast %class.File* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8248, i8* nonnull %20) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 8248, i1 false)
  call void @_ZN4FileC1Ev(%class.File* nonnull %10) #6
  %21 = load i32, i32* %14, align 16
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %19
  br i1 %3, label %24, label %26

24:                                               ; preds = %23
  %25 = call zeroext i1 @_ZN4File5WOpenEPKw(%class.File* nonnull %10, i32* nonnull %14) #6
  br i1 %25, label %31, label %28

26:                                               ; preds = %23
  %27 = call zeroext i1 @_ZN4File4OpenEPKwj(%class.File* nonnull %10, i32* nonnull %14, i32 0) #6
  br i1 %27, label %31, label %375

28:                                               ; preds = %24
  call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 6) #6
  br label %375

29:                                               ; preds = %19
  %30 = getelementptr inbounds %class.File, %class.File* %10, i64 0, i32 3
  store i32 1, i32* %30, align 4
  br label %31

31:                                               ; preds = %24, %26, %29
  %32 = bitcast %class.Array.0* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 40, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 33, i1 false) #6
  call void @_ZN5ArrayIhE3AddEm(%class.Array.0* nonnull %11, i64 4096) #6
  %33 = getelementptr inbounds %class.Array.0, %class.Array.0* %11, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = call i32 @_ZN4File4ReadEPvm(%class.File* nonnull %10, i8* %34, i64 4096) #6
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  %38 = getelementptr inbounds %class.Array.0, %class.Array.0* %11, i64 0, i32 2
  %39 = getelementptr inbounds %class.Array.0, %class.Array.0* %11, i64 0, i32 1
  br label %59

40:                                               ; preds = %31, %40
  %41 = phi i32 [ %48, %40 ], [ %35, %31 ]
  %42 = phi i32 [ %43, %40 ], [ 0, %31 ]
  %43 = add i32 %41, %42
  %44 = zext i32 %41 to i64
  call void @_ZN5ArrayIhE3AddEm(%class.Array.0* nonnull %11, i64 %44)
  %45 = zext i32 %43 to i64
  %46 = load i8*, i8** %33, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 %45
  %48 = call i32 @_ZN4File4ReadEPvm(%class.File* nonnull %10, i8* %47, i64 4096) #6
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %40

50:                                               ; preds = %40
  %51 = zext i32 %43 to i64
  %52 = getelementptr inbounds %class.Array.0, %class.Array.0* %11, i64 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, %51
  %55 = getelementptr inbounds %class.Array.0, %class.Array.0* %11, i64 0, i32 1
  br i1 %54, label %56, label %59

56:                                               ; preds = %50
  %57 = load i64, i64* %55, align 8
  %58 = sub i64 %51, %57
  call void @_ZN5ArrayIhE3AddEm(%class.Array.0* nonnull %11, i64 %58) #6
  br label %64

59:                                               ; preds = %37, %50
  %60 = phi i64* [ %39, %37 ], [ %55, %50 ]
  %61 = phi i64* [ %38, %37 ], [ %52, %50 ]
  %62 = phi i64 [ 0, %37 ], [ %51, %50 ]
  %63 = phi i32 [ 0, %37 ], [ %43, %50 ]
  store i64 %62, i64* %60, align 8
  br label %64

64:                                               ; preds = %56, %59
  %65 = phi i64* [ %55, %56 ], [ %60, %59 ]
  %66 = phi i64* [ %52, %56 ], [ %61, %59 ]
  %67 = phi i64 [ %51, %56 ], [ %62, %59 ]
  %68 = phi i32 [ %43, %56 ], [ %63, %59 ]
  %69 = icmp ugt i32 %68, 1
  br i1 %69, label %70, label %98

70:                                               ; preds = %64
  %71 = load i8*, i8** %33, align 8
  %72 = load i8, i8* %71, align 1
  switch i8 %72, label %82 [
    i8 -1, label %73
    i8 -2, label %78
  ]

73:                                               ; preds = %70
  %74 = getelementptr inbounds i8, i8* %71, i64 1
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, -2
  %77 = zext i1 %76 to i64
  br label %82

78:                                               ; preds = %70
  %79 = getelementptr inbounds i8, i8* %71, i64 1
  %80 = load i8, i8* %79, align 1
  %81 = icmp eq i8 %80, -1
  br label %82

82:                                               ; preds = %70, %73, %78
  %83 = phi i64 [ 0, %78 ], [ %77, %73 ], [ 0, %70 ]
  %84 = phi i1 [ false, %78 ], [ %76, %73 ], [ false, %70 ]
  %85 = phi i1 [ %81, %78 ], [ false, %73 ], [ false, %70 ]
  %86 = icmp ugt i32 %68, 2
  %87 = icmp eq i8 %72, -17
  %88 = and i1 %86, %87
  br i1 %88, label %89, label %98

89:                                               ; preds = %82
  %90 = getelementptr inbounds i8, i8* %71, i64 1
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, -69
  br i1 %92, label %93, label %98

93:                                               ; preds = %89
  %94 = getelementptr inbounds i8, i8* %71, i64 2
  %95 = load i8, i8* %94, align 1
  %96 = icmp eq i8 %95, -65
  %97 = select i1 %96, i64 3, i64 0
  br label %98

98:                                               ; preds = %64, %93, %89, %82
  %99 = phi i1 [ %85, %89 ], [ %85, %82 ], [ %85, %93 ], [ false, %64 ]
  %100 = phi i1 [ %84, %89 ], [ %84, %82 ], [ %84, %93 ], [ false, %64 ]
  %101 = phi i64 [ %83, %89 ], [ %83, %82 ], [ %83, %93 ], [ 0, %64 ]
  %102 = phi i64 [ 0, %89 ], [ 0, %82 ], [ %97, %93 ], [ 0, %64 ]
  %103 = icmp eq i32 %4, 0
  br i1 %103, label %104, label %158

104:                                              ; preds = %98
  %105 = load i8*, i8** %33, align 8
  %106 = icmp ugt i32 %68, 3
  br i1 %106, label %107, label %124

107:                                              ; preds = %104
  %108 = load i8, i8* %105, align 1
  %109 = icmp eq i8 %108, -17
  br i1 %109, label %110, label %128

110:                                              ; preds = %107
  %111 = getelementptr inbounds i8, i8* %105, i64 1
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, -69
  br i1 %113, label %114, label %126

114:                                              ; preds = %110
  %115 = getelementptr inbounds i8, i8* %105, i64 2
  %116 = load i8, i8* %115, align 1
  %117 = icmp eq i8 %116, -65
  br i1 %117, label %118, label %126

118:                                              ; preds = %114
  %119 = getelementptr inbounds i8, i8* %105, i64 3
  %120 = add nsw i64 %67, -3
  %121 = call zeroext i1 @_Z10IsTextUtf8PKhm(i8* %119, i64 %120) #6
  br i1 %121, label %122, label %126

122:                                              ; preds = %118
  %123 = bitcast %class.Array* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %123) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %123, i8 -86, i64 40, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %123, i8 0, i64 33, i1 false) #6
  br label %258

124:                                              ; preds = %104
  %125 = icmp eq i32 %68, 3
  br i1 %125, label %126, label %138

126:                                              ; preds = %124, %118, %114, %110
  %127 = load i8, i8* %105, align 1
  br label %128

128:                                              ; preds = %126, %107
  %129 = phi i8 [ %127, %126 ], [ %108, %107 ]
  switch i8 %129, label %138 [
    i8 -1, label %130
    i8 -2, label %134
  ]

130:                                              ; preds = %128
  %131 = getelementptr inbounds i8, i8* %105, i64 1
  %132 = load i8, i8* %131, align 1
  %133 = icmp eq i8 %132, -2
  br label %138

134:                                              ; preds = %128
  %135 = getelementptr inbounds i8, i8* %105, i64 1
  %136 = load i8, i8* %135, align 1
  %137 = icmp eq i8 %136, -1
  br label %138

138:                                              ; preds = %134, %130, %128, %124
  %139 = phi i1 [ false, %134 ], [ false, %124 ], [ %133, %130 ], [ false, %128 ]
  %140 = phi i1 [ %137, %134 ], [ false, %124 ], [ false, %130 ], [ false, %128 ]
  %141 = or i1 %139, %140
  br i1 %141, label %142, label %156

142:                                              ; preds = %138
  %143 = select i1 %139, i64 3, i64 2
  %144 = icmp ult i64 %143, %67
  br i1 %144, label %145, label %156

145:                                              ; preds = %142, %153
  %146 = phi i64 [ %154, %153 ], [ %143, %142 ]
  %147 = getelementptr inbounds i8, i8* %105, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = icmp ugt i8 %148, 31
  br i1 %149, label %153, label %150

150:                                              ; preds = %145
  switch i8 %148, label %151 [
    i8 13, label %153
    i8 10, label %153
  ]

151:                                              ; preds = %150
  %152 = bitcast %class.Array* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %152) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %152, i8 -86, i64 40, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %152, i8 0, i64 33, i1 false) #6
  br label %182

153:                                              ; preds = %150, %150, %145
  %154 = add nuw nsw i64 %146, 2
  %155 = icmp ult i64 %154, %67
  br i1 %155, label %145, label %156

156:                                              ; preds = %153, %138, %142
  %157 = bitcast %class.Array* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %157) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %157, i8 -86, i64 40, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %157, i8 0, i64 33, i1 false) #6
  br label %160

158:                                              ; preds = %98
  %159 = bitcast %class.Array* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %159) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %159, i8 -86, i64 40, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %159, i8 0, i64 33, i1 false) #6
  switch i32 %4, label %281 [
    i32 2, label %160
    i32 1, label %160
    i32 4, label %258
    i32 3, label %182
  ]

160:                                              ; preds = %156, %158, %158
  %161 = phi i8* [ %157, %156 ], [ %159, %158 ], [ %159, %158 ]
  call void @_ZN5ArrayIhE3AddEm(%class.Array.0* nonnull %11, i64 1) #6
  %162 = load i64, i64* %65, align 8
  %163 = add i64 %162, -1
  %164 = load i8*, i8** %33, align 8
  %165 = getelementptr inbounds i8, i8* %164, i64 %163
  store i8 0, i8* %165, align 1
  %166 = load i64, i64* %65, align 8
  %167 = getelementptr inbounds %class.Array, %class.Array* %12, i64 0, i32 2
  %168 = load i64, i64* %167, align 8
  %169 = icmp ult i64 %168, %166
  %170 = getelementptr inbounds %class.Array, %class.Array* %12, i64 0, i32 1
  br i1 %169, label %171, label %175

171:                                              ; preds = %160
  %172 = load i64, i64* %170, align 8
  %173 = sub i64 %166, %172
  call void @_ZN5ArrayIwE3AddEm(%class.Array* nonnull %12, i64 %173) #6
  %174 = load i64, i64* %170, align 8
  br label %176

175:                                              ; preds = %160
  store i64 %166, i64* %170, align 8
  br label %176

176:                                              ; preds = %171, %175
  %177 = phi i64 [ %174, %171 ], [ %166, %175 ]
  %178 = load i8*, i8** %33, align 8
  %179 = getelementptr inbounds %class.Array, %class.Array* %12, i64 0, i32 0
  %180 = load i32*, i32** %179, align 8
  %181 = call zeroext i1 @_Z10CharToWidePKcPwm(i8* %178, i32* %180, i64 %177) #6
  br label %281

182:                                              ; preds = %151, %158
  %183 = phi i8* [ %159, %158 ], [ %152, %151 ]
  %184 = or i1 %99, %100
  %185 = select i1 %184, i64 %101, i64 1
  %186 = select i1 %184, i64 2, i64 0
  %187 = load i64, i64* %65, align 8
  %188 = lshr i64 %187, 1
  %189 = add nuw i64 %188, 1
  call void @_ZN5ArrayIwE3AddEm(%class.Array* nonnull %12, i64 %189) #6
  %190 = load i64, i64* %65, align 8
  %191 = and i64 %190, -2
  %192 = icmp ugt i64 %191, %186
  br i1 %192, label %193, label %217

193:                                              ; preds = %182
  %194 = zext i1 %99 to i64
  %195 = getelementptr inbounds %class.Array, %class.Array* %12, i64 0, i32 0
  %196 = xor i64 %186, -1
  %197 = add i64 %191, %196
  %198 = and i64 %197, 2
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %214

200:                                              ; preds = %193
  %201 = or i64 %186, %194
  %202 = load i8*, i8** %33, align 8
  %203 = getelementptr inbounds i8, i8* %202, i64 %201
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = or i64 %186, %185
  %207 = getelementptr inbounds i8, i8* %202, i64 %206
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = shl nuw nsw i32 %209, 8
  %211 = or i32 %210, %205
  %212 = load i32*, i32** %195, align 8
  store i32 %211, i32* %212, align 4
  %213 = add nuw nsw i64 %186, 2
  br label %214

214:                                              ; preds = %200, %193
  %215 = phi i64 [ %186, %193 ], [ %213, %200 ]
  %216 = icmp eq i64 %197, 1
  br i1 %216, label %217, label %223

217:                                              ; preds = %214, %223, %182
  %218 = sub i64 %191, %186
  %219 = lshr exact i64 %218, 1
  %220 = getelementptr inbounds %class.Array, %class.Array* %12, i64 0, i32 0
  %221 = load i32*, i32** %220, align 8
  %222 = getelementptr inbounds i32, i32* %221, i64 %219
  store i32 0, i32* %222, align 4
  br label %281

223:                                              ; preds = %214, %223
  %224 = phi i64 [ %256, %223 ], [ %215, %214 ]
  %225 = or i64 %224, %194
  %226 = load i8*, i8** %33, align 8
  %227 = getelementptr inbounds i8, i8* %226, i64 %225
  %228 = load i8, i8* %227, align 1
  %229 = zext i8 %228 to i32
  %230 = or i64 %224, %185
  %231 = getelementptr inbounds i8, i8* %226, i64 %230
  %232 = load i8, i8* %231, align 1
  %233 = zext i8 %232 to i32
  %234 = shl nuw nsw i32 %233, 8
  %235 = or i32 %234, %229
  %236 = sub nuw i64 %224, %186
  %237 = lshr exact i64 %236, 1
  %238 = load i32*, i32** %195, align 8
  %239 = getelementptr inbounds i32, i32* %238, i64 %237
  store i32 %235, i32* %239, align 4
  %240 = add nuw i64 %224, 2
  %241 = or i64 %240, %194
  %242 = load i8*, i8** %33, align 8
  %243 = getelementptr inbounds i8, i8* %242, i64 %241
  %244 = load i8, i8* %243, align 1
  %245 = zext i8 %244 to i32
  %246 = or i64 %240, %185
  %247 = getelementptr inbounds i8, i8* %242, i64 %246
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %248 to i32
  %250 = shl nuw nsw i32 %249, 8
  %251 = or i32 %250, %245
  %252 = sub nuw i64 %240, %186
  %253 = lshr exact i64 %252, 1
  %254 = load i32*, i32** %195, align 8
  %255 = getelementptr inbounds i32, i32* %254, i64 %253
  store i32 %251, i32* %255, align 4
  %256 = add nuw i64 %224, 4
  %257 = icmp ult i64 %256, %191
  br i1 %257, label %223, label %217

258:                                              ; preds = %158, %122
  %259 = phi i8* [ %159, %158 ], [ %123, %122 ]
  call void @_ZN5ArrayIhE3AddEm(%class.Array.0* nonnull %11, i64 1) #6
  %260 = load i64, i64* %65, align 8
  %261 = add i64 %260, -1
  %262 = load i8*, i8** %33, align 8
  %263 = getelementptr inbounds i8, i8* %262, i64 %261
  store i8 0, i8* %263, align 1
  %264 = load i64, i64* %65, align 8
  %265 = getelementptr inbounds %class.Array, %class.Array* %12, i64 0, i32 2
  %266 = load i64, i64* %265, align 8
  %267 = icmp ult i64 %266, %264
  %268 = getelementptr inbounds %class.Array, %class.Array* %12, i64 0, i32 1
  br i1 %267, label %269, label %273

269:                                              ; preds = %258
  %270 = load i64, i64* %268, align 8
  %271 = sub i64 %264, %270
  call void @_ZN5ArrayIwE3AddEm(%class.Array* nonnull %12, i64 %271) #6
  %272 = load i64, i64* %268, align 8
  br label %274

273:                                              ; preds = %258
  store i64 %264, i64* %268, align 8
  br label %274

274:                                              ; preds = %269, %273
  %275 = phi i64 [ %272, %269 ], [ %264, %273 ]
  %276 = load i8*, i8** %33, align 8
  %277 = getelementptr inbounds i8, i8* %276, i64 %102
  %278 = getelementptr inbounds %class.Array, %class.Array* %12, i64 0, i32 0
  %279 = load i32*, i32** %278, align 8
  %280 = call zeroext i1 @_Z9UtfToWidePKcPwm(i8* %277, i32* %279, i64 %275) #6
  br label %281

281:                                              ; preds = %217, %176, %158, %274
  %282 = phi i8* [ %159, %158 ], [ %161, %176 ], [ %259, %274 ], [ %183, %217 ]
  %283 = getelementptr inbounds %class.Array, %class.Array* %12, i64 0, i32 0
  %284 = load i32*, i32** %283, align 8
  %285 = load i32, i32* %284, align 4
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %346, label %287

287:                                              ; preds = %339, %281
  %288 = phi i32 [ %285, %281 ], [ %342, %339 ]
  %289 = phi i32* [ %284, %281 ], [ %341, %339 ]
  br label %290

290:                                              ; preds = %287, %302
  %291 = phi i32 [ %303, %302 ], [ %288, %287 ]
  %292 = phi i32* [ %305, %302 ], [ %289, %287 ]
  %293 = phi i32* [ %304, %302 ], [ null, %287 ]
  switch i32 %291, label %294 [
    i32 13, label %306
    i32 10, label %306
    i32 0, label %306
  ]

294:                                              ; preds = %290
  %295 = icmp eq i32 %291, 47
  %296 = and i1 %295, %6
  %297 = getelementptr inbounds i32, i32* %292, i64 1
  %298 = load i32, i32* %297, align 4
  %299 = icmp eq i32 %298, 47
  %300 = and i1 %296, %299
  br i1 %300, label %301, label %302

301:                                              ; preds = %294
  store i32 0, i32* %292, align 4
  br label %302

302:                                              ; preds = %294, %301
  %303 = phi i32 [ 47, %301 ], [ %298, %294 ]
  %304 = phi i32* [ %292, %301 ], [ %293, %294 ]
  %305 = getelementptr inbounds i32, i32* %292, i64 1
  br label %290

306:                                              ; preds = %290, %290, %290
  %307 = icmp eq i32 %291, 0
  store i32 0, i32* %292, align 4
  %308 = icmp eq i32* %293, null
  %309 = select i1 %308, i32* %292, i32* %293
  %310 = getelementptr inbounds i32, i32* %309, i64 -1
  %311 = icmp ult i32* %310, %289
  br i1 %311, label %318, label %312

312:                                              ; preds = %306, %315
  %313 = phi i32* [ %316, %315 ], [ %310, %306 ]
  %314 = load i32, i32* %313, align 4
  switch i32 %314, label %318 [
    i32 32, label %315
    i32 9, label %315
  ]

315:                                              ; preds = %312, %312
  store i32 0, i32* %313, align 4
  %316 = getelementptr inbounds i32, i32* %313, i64 -1
  %317 = icmp ult i32* %316, %289
  br i1 %317, label %318, label %312

318:                                              ; preds = %315, %312, %306
  br i1 %5, label %319, label %330

319:                                              ; preds = %318
  %320 = load i32, i32* %289, align 4
  %321 = icmp eq i32 %320, 34
  br i1 %321, label %322, label %333

322:                                              ; preds = %319
  %323 = call i64 @wcslen(i32* %289) #7
  %324 = add i64 %323, -1
  %325 = getelementptr inbounds i32, i32* %289, i64 %324
  %326 = load i32, i32* %325, align 4
  %327 = icmp eq i32 %326, 34
  br i1 %327, label %328, label %330

328:                                              ; preds = %322
  store i32 0, i32* %325, align 4
  %329 = getelementptr inbounds i32, i32* %289, i64 1
  br label %330

330:                                              ; preds = %322, %328, %318
  %331 = phi i32* [ %289, %322 ], [ %329, %328 ], [ %289, %318 ]
  %332 = load i32, i32* %331, align 4
  br label %333

333:                                              ; preds = %330, %319
  %334 = phi i32 [ %332, %330 ], [ %320, %319 ]
  %335 = phi i32* [ %331, %330 ], [ %289, %319 ]
  %336 = icmp eq i32 %334, 0
  br i1 %336, label %338, label %337

337:                                              ; preds = %333
  call void @_ZN10StringList9AddStringEPKw(%class.StringList* %1, i32* %335) #6
  br label %338

338:                                              ; preds = %333, %337
  br i1 %307, label %344, label %339

339:                                              ; preds = %338, %343
  %340 = phi i32* [ %341, %343 ], [ %292, %338 ]
  %341 = getelementptr inbounds i32, i32* %340, i64 1
  %342 = load i32, i32* %341, align 4
  switch i32 %342, label %287 [
    i32 13, label %343
    i32 10, label %343
    i32 0, label %344
  ]

343:                                              ; preds = %339, %339
  br label %339

344:                                              ; preds = %338, %339
  %345 = load i32*, i32** %283, align 8
  br label %346

346:                                              ; preds = %344, %281
  %347 = phi i32* [ %345, %344 ], [ %284, %281 ]
  %348 = icmp eq i32* %347, null
  %349 = bitcast i32* %347 to i8*
  br i1 %348, label %362, label %350

350:                                              ; preds = %346
  %351 = getelementptr inbounds %class.Array, %class.Array* %12, i64 0, i32 4
  %352 = load i8, i8* %351, align 8, !range !2
  %353 = icmp eq i8 %352, 0
  br i1 %353, label %360, label %354

354:                                              ; preds = %350
  %355 = getelementptr inbounds %class.Array, %class.Array* %12, i64 0, i32 2
  %356 = load i64, i64* %355, align 8
  %357 = shl i64 %356, 2
  call void @_Z9cleandataPvm(i8* nonnull %349, i64 %357) #6
  %358 = bitcast %class.Array* %12 to i8**
  %359 = load i8*, i8** %358, align 8
  br label %360

360:                                              ; preds = %354, %350
  %361 = phi i8* [ %359, %354 ], [ %349, %350 ]
  call void @free(i8* %361) #6
  br label %362

362:                                              ; preds = %346, %360
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %282) #6
  %363 = load i8*, i8** %33, align 8
  %364 = icmp eq i8* %363, null
  br i1 %364, label %374, label %365

365:                                              ; preds = %362
  %366 = getelementptr inbounds %class.Array.0, %class.Array.0* %11, i64 0, i32 4
  %367 = load i8, i8* %366, align 8, !range !2
  %368 = icmp eq i8 %367, 0
  br i1 %368, label %372, label %369

369:                                              ; preds = %365
  %370 = load i64, i64* %66, align 8
  call void @_Z9cleandataPvm(i8* nonnull %363, i64 %370) #6
  %371 = load i8*, i8** %33, align 8
  br label %372

372:                                              ; preds = %369, %365
  %373 = phi i8* [ %363, %365 ], [ %371, %369 ]
  call void @free(i8* %373) #6
  br label %374

374:                                              ; preds = %362, %372
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #6
  br label %375

375:                                              ; preds = %26, %28, %374
  %376 = phi i1 [ true, %374 ], [ false, %28 ], [ false, %26 ]
  call void @_ZN4FileD1Ev(%class.File* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 8248, i8* nonnull %20) #6
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %13) #6
  ret i1 %376
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_Z13GetConfigNamePKwPwmbb(i32*, i32*, i64, i1 zeroext, i1 zeroext) local_unnamed_addr #2

declare void @_Z8wcsncpyzPwPKwm(i32*, i32*, i64) local_unnamed_addr #2

declare void @_ZN4FileC1Ev(%class.File*) unnamed_addr #2

declare zeroext i1 @_ZN4File5WOpenEPKw(%class.File*, i32*) local_unnamed_addr #2

declare zeroext i1 @_ZN4File4OpenEPKwj(%class.File*, i32*, i32) unnamed_addr #2

declare void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZN4File4ReadEPvm(%class.File*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5ArrayIhE3AddEm(%class.Array.0*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.0, %class.Array.0* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %class.Array.0, %class.Array.0* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %5, %7
  br i1 %8, label %9, label %49

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.Array.0, %class.Array.0* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = icmp ne i64 %11, 0
  %13 = icmp ugt i64 %5, %11
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %9
  tail call void (%class.ErrorHandler*, i32*, ...) @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler* nonnull @ErrHandler, i32* getelementptr inbounds ([44 x i32], [44 x i32]* @.str, i64 0, i64 0), i64 %11) #6
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #6
  %16 = load i64, i64* %6, align 8
  %17 = load i64, i64* %3, align 8
  br label %18

18:                                               ; preds = %9, %15
  %19 = phi i64 [ %5, %9 ], [ %17, %15 ]
  %20 = phi i64 [ %7, %9 ], [ %16, %15 ]
  %21 = lshr i64 %20, 2
  %22 = add i64 %20, 32
  %23 = add i64 %22, %21
  %24 = icmp ugt i64 %19, %23
  %25 = select i1 %24, i64 %19, i64 %23
  %26 = getelementptr inbounds %class.Array.0, %class.Array.0* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %40, label %29

29:                                               ; preds = %18
  %30 = tail call noalias i8* @malloc(i64 %25) #6
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #6
  br label %33

33:                                               ; preds = %32, %29
  %34 = getelementptr inbounds %class.Array.0, %class.Array.0* %0, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %33
  %38 = load i64, i64* %6, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* nonnull align 1 %35, i64 %38, i1 false)
  tail call void @_Z9cleandataPvm(i8* nonnull %35, i64 %38) #6
  %39 = load i8*, i8** %34, align 8
  tail call void @free(i8* %39) #6
  br label %46

40:                                               ; preds = %18
  %41 = getelementptr inbounds %class.Array.0, %class.Array.0* %0, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = tail call i8* @realloc(i8* %42, i64 %25) #6
  %44 = icmp eq i8* %43, null
  br i1 %44, label %45, label %46

45:                                               ; preds = %40
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #6
  br label %46

46:                                               ; preds = %33, %40, %45, %37
  %47 = phi i8* [ %30, %37 ], [ %30, %33 ], [ null, %45 ], [ %43, %40 ]
  %48 = getelementptr inbounds %class.Array.0, %class.Array.0* %0, i64 0, i32 0
  store i8* %47, i8** %48, align 8
  store i64 %25, i64* %6, align 8
  br label %49

49:                                               ; preds = %46, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z18DetectTextEncodingPKhm(i8*, i64) local_unnamed_addr #0 {
  %3 = icmp ugt i64 %1, 3
  br i1 %3, label %4, label %19

4:                                                ; preds = %2
  %5 = load i8, i8* %0, align 1
  %6 = icmp eq i8 %5, -17
  br i1 %6, label %7, label %23

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, -69
  br i1 %10, label %11, label %21

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %0, i64 2
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, -65
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = getelementptr inbounds i8, i8* %0, i64 3
  %17 = add i64 %1, -3
  %18 = tail call zeroext i1 @_Z10IsTextUtf8PKhm(i8* %16, i64 %17) #6
  br i1 %18, label %49, label %21

19:                                               ; preds = %2
  %20 = icmp eq i64 %1, 3
  br i1 %20, label %21, label %33

21:                                               ; preds = %19, %15, %11, %7
  %22 = load i8, i8* %0, align 1
  br label %23

23:                                               ; preds = %21, %4
  %24 = phi i8 [ %22, %21 ], [ %5, %4 ]
  switch i8 %24, label %33 [
    i8 -1, label %25
    i8 -2, label %29
  ]

25:                                               ; preds = %23
  %26 = getelementptr inbounds i8, i8* %0, i64 1
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, -2
  br label %33

29:                                               ; preds = %23
  %30 = getelementptr inbounds i8, i8* %0, i64 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, -1
  br label %33

33:                                               ; preds = %23, %25, %19, %29
  %34 = phi i1 [ false, %29 ], [ false, %19 ], [ %28, %25 ], [ false, %23 ]
  %35 = phi i1 [ %32, %29 ], [ false, %19 ], [ false, %25 ], [ false, %23 ]
  %36 = or i1 %34, %35
  br i1 %36, label %37, label %49

37:                                               ; preds = %33
  %38 = select i1 %34, i64 3, i64 2
  %39 = icmp ult i64 %38, %1
  br i1 %39, label %40, label %49

40:                                               ; preds = %37, %46
  %41 = phi i64 [ %47, %46 ], [ %38, %37 ]
  %42 = getelementptr inbounds i8, i8* %0, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = icmp ugt i8 %43, 31
  br i1 %44, label %46, label %45

45:                                               ; preds = %40
  switch i8 %43, label %49 [
    i8 13, label %46
    i8 10, label %46
  ]

46:                                               ; preds = %45, %45, %40
  %47 = add i64 %41, 2
  %48 = icmp ult i64 %47, %1
  br i1 %48, label %40, label %49

49:                                               ; preds = %45, %46, %37, %33, %15
  %50 = phi i32 [ 4, %15 ], [ 0, %33 ], [ 0, %37 ], [ 3, %45 ], [ 0, %46 ]
  ret i32 %50
}

declare zeroext i1 @_Z10CharToWidePKcPwm(i8*, i32*, i64) local_unnamed_addr #2

declare zeroext i1 @_Z9UtfToWidePKcPwm(i8*, i32*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @wcslen(i32* nocapture) local_unnamed_addr #3

declare void @_ZN10StringList9AddStringEPKw(%class.StringList*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4FileD1Ev(%class.File*) unnamed_addr #4

declare zeroext i1 @_Z10IsTextUtf8PKhm(i8*, i64) local_unnamed_addr #2

declare void @_Z9cleandataPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler*, i32*, ...) local_unnamed_addr #2

declare void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5ArrayIwE3AddEm(%class.Array*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %5, %7
  br i1 %8, label %9, label %56

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = icmp ne i64 %11, 0
  %13 = icmp ugt i64 %5, %11
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %9
  tail call void (%class.ErrorHandler*, i32*, ...) @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler* nonnull @ErrHandler, i32* getelementptr inbounds ([44 x i32], [44 x i32]* @.str, i64 0, i64 0), i64 %11) #6
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #6
  %16 = load i64, i64* %6, align 8
  %17 = load i64, i64* %3, align 8
  br label %18

18:                                               ; preds = %9, %15
  %19 = phi i64 [ %5, %9 ], [ %17, %15 ]
  %20 = phi i64 [ %7, %9 ], [ %16, %15 ]
  %21 = lshr i64 %20, 2
  %22 = add i64 %20, 32
  %23 = add i64 %22, %21
  %24 = icmp ugt i64 %19, %23
  %25 = select i1 %24, i64 %19, i64 %23
  %26 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %18
  %30 = shl i64 %25, 2
  %31 = tail call noalias i8* @malloc(i64 %30) #6
  %32 = bitcast i8* %31 to i32*
  %33 = icmp eq i8* %31, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #6
  br label %35

35:                                               ; preds = %34, %29
  %36 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = icmp eq i32* %37, null
  %39 = bitcast i32* %37 to i8*
  br i1 %38, label %53, label %40

40:                                               ; preds = %35
  %41 = load i64, i64* %6, align 8
  %42 = shl i64 %41, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* nonnull align 4 %39, i64 %42, i1 false)
  %43 = bitcast %class.Array* %0 to i8**
  tail call void @_Z9cleandataPvm(i8* nonnull %39, i64 %42) #6
  %44 = load i8*, i8** %43, align 8
  tail call void @free(i8* %44) #6
  br label %53

45:                                               ; preds = %18
  %46 = bitcast %class.Array* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = shl i64 %25, 2
  %49 = tail call i8* @realloc(i8* %47, i64 %48) #6
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i8* %49, null
  br i1 %51, label %52, label %53

52:                                               ; preds = %45
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #6
  br label %53

53:                                               ; preds = %35, %45, %52, %40
  %54 = phi i32* [ %32, %40 ], [ %32, %35 ], [ null, %52 ], [ %50, %45 ]
  %55 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 0
  store i32* %54, i32** %55, align 8
  store i64 %25, i64* %6, align 8
  br label %56

56:                                               ; preds = %53, %2
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
