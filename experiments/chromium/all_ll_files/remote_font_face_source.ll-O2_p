; ModuleID = '../../third_party/blink/renderer/core/css/remote_font_face_source.cc'
source_filename = "../../third_party/blink/renderer/core/css/remote_font_face_source.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"struct.base::FeatureParam" = type { %"struct.base::Feature"*, i8*, i32, %"struct.base::FeatureParam<blink::features::AlignFontDisplayAutoTimeoutWithLCPGoalMode, true>::Option"*, i64 }
%"struct.base::FeatureParam<blink::features::AlignFontDisplayAutoTimeoutWithLCPGoalMode, true>::Option" = type { i32, i8* }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.161", i32, [4 x i8], %"class.std::__1::unique_ptr.299", %"class.std::__1::unique_ptr.299", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.316", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.328", %"class.std::__1::unique_ptr.334", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.341", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.188", %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.254", %"class.std::__1::unique_ptr.279", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.197" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.197" = type { %"struct.std::__1::__atomic_base.198" }
%"struct.std::__1::__atomic_base.198" = type { %"struct.std::__1::__atomic_base.199" }
%"struct.std::__1::__atomic_base.199" = type { %"struct.std::__1::__cxx_atomic_impl.200" }
%"struct.std::__1::__cxx_atomic_impl.200" = type { %"struct.std::__1::__cxx_atomic_base_impl.201" }
%"struct.std::__1::__cxx_atomic_base_impl.201" = type { i64 }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::Worklist.208"* }
%"class.blink::Worklist.208" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.197" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::Worklist.215"* }
%"class.blink::Worklist.215" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.197" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::Worklist.222"* }
%"class.blink::Worklist.222" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.197" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::Worklist.229"* }
%"class.blink::Worklist.229" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.197" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::Worklist.236"* }
%"class.blink::Worklist.236" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.197" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::Worklist.243"* }
%"class.blink::Worklist.243" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.197" }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::Worklist.250"* }
%"class.blink::Worklist.250" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.197" }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.257", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.271", %"class.std::__1::__compressed_pair.273", [4 x i8] }>
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259", %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { i64 }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { float }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.282", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.291" }
%"class.WTF::Vector.291" = type { %"class.WTF::VectorBuffer.292" }
%"class.WTF::VectorBuffer.292" = type { %"class.WTF::VectorBufferBase.293" }
%"class.WTF::VectorBufferBase.293" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.307" }
%"class.WTF::VectorBuffer.307" = type { %"class.WTF::VectorBufferBase.308" }
%"class.WTF::VectorBufferBase.308" = type { %"struct.std::__1::pair.309"*, i32, i32 }
%"struct.std::__1::pair.309" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.322" }
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.208"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.215"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.222"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.229"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.236"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.664", i64 }
%"class.std::__1::vector.664" = type { %"class.std::__1::__vector_base.665" }
%"class.std::__1::__vector_base.665" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.666" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.667" }
%"struct.std::__1::__compressed_pair_elem.667" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.340 }
%class.scoped_refptr.340 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.341" = type { %"struct.std::__1::__atomic_base.342" }
%"struct.std::__1::__atomic_base.342" = type { %"struct.std::__1::__cxx_atomic_impl.343" }
%"struct.std::__1::__cxx_atomic_impl.343" = type { %"struct.std::__1::__cxx_atomic_base_impl.344" }
%"struct.std::__1::__cxx_atomic_base_impl.344" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::RemoteFontFaceSource" = type <{ %"class.blink::CSSFontFaceSource", %"class.blink::FontResourceClient.base", %"class.blink::ThreadState::PrefinalizerRegistration.374", [6 x i8], %"class.blink::Member.375", %"class.blink::Member.404", %class.scoped_refptr.410, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.blink::RemoteFontFaceSource::FontLoadHistograms", i8, i8, i8, i8, [4 x i8] }>
%"class.blink::CSSFontFaceSource" = type { i32 (...)**, %"class.WTF::HashMap", %"class.WTF::LinkedHashSet" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"struct.blink::FontCacheKey", %class.scoped_refptr.2974 }
%"struct.blink::FontCacheKey" = type <{ %"class.blink::FontFaceCreationParams", i32, i32, float, [4 x i8], %class.scoped_refptr.3001, i8, [7 x i8] }>
%"class.blink::FontFaceCreationParams" = type { i32, %"class.WTF::AtomicString", %"class.std::__1::basic_string", i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.18 }
%union.anon.18 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.3001 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.3002", %"class.WTF::RefCounted.3009", [4 x i8] }>
%"class.blink::FontSettings.3002" = type { %"class.WTF::Vector.3003" }
%"class.WTF::Vector.3003" = type { %"class.WTF::VectorBuffer.3004" }
%"class.WTF::VectorBuffer.3004" = type { %"class.WTF::VectorBufferBase.3005" }
%"class.WTF::VectorBufferBase.3005" = type { %"class.blink::FontTagValuePair.3006"*, i32, i32 }
%"class.blink::FontTagValuePair.3006" = type { i32, float }
%"class.WTF::RefCounted.3009" = type { %"class.base::RefCounted.3010" }
%"class.base::RefCounted.3010" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.2974 = type { %"class.blink::SimpleFontData"* }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.2983", %class.scoped_refptr.2989, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.2975" }>
%"class.WTF::RefCounted.2975" = type { %"class.base::RefCounted.2976" }
%"class.base::RefCounted.2976" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.2977", %"class.absl::optional.2977", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.2977" = type { %"class.absl::optional_internal::optional_data.2978" }
%"class.absl::optional_internal::optional_data.2978" = type { %"class.absl::optional_internal::optional_data_base.2979" }
%"class.absl::optional_internal::optional_data_base.2979" = type { %"class.absl::optional_internal::optional_data_dtor_base.2980" }
%"class.absl::optional_internal::optional_data_dtor_base.2980" = type { i8, %union.anon.2981 }
%union.anon.2981 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.2982, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.57" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.57" }>
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.413" }
%"struct.std::__1::atomic.413" = type { %"struct.std::__1::__atomic_base.414" }
%"struct.std::__1::__atomic_base.414" = type { %"struct.std::__1::__atomic_base.415" }
%"struct.std::__1::__atomic_base.415" = type { %"struct.std::__1::__cxx_atomic_impl.416" }
%"struct.std::__1::__cxx_atomic_impl.416" = type { %"struct.std::__1::__cxx_atomic_base_impl.417" }
%"struct.std::__1::__cxx_atomic_base_impl.417" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.2982 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.2983" = type { %"class.std::__1::__compressed_pair.2984" }
%"class.std::__1::__compressed_pair.2984" = type { %"struct.std::__1::__compressed_pair_elem.2985" }
%"struct.std::__1::__compressed_pair_elem.2985" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.2974, %class.scoped_refptr.2974 }
%class.scoped_refptr.2989 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.2990", [4 x i8] }>
%"class.WTF::RefCounted.2990" = type { %"class.base::RefCounted.2991" }
%"class.base::RefCounted.2991" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.0", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.0" = type { %"class.WTF::HashTable.1" }
%"class.WTF::HashTable.1" = type <{ %"struct.WTF::KeyValuePair.4"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4" = type { %"struct.blink::FontCacheKey", i32, [4 x i8] }
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector", i32, i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type { i32, i32, %"struct.blink::FontCacheKey" }
%"class.blink::FontResourceClient.base" = type { %"class.blink::ResourceClient.base" }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member", i8 }>
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.35", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.350", %"class.blink::ResourceResponse", %class.scoped_refptr.352, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.11", i8, %"class.absl::optional.20", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.absl::optional.11" = type { %"class.absl::optional_internal::optional_data.12" }
%"class.absl::optional_internal::optional_data.12" = type { %"class.absl::optional_internal::optional_data_base.13" }
%"class.absl::optional_internal::optional_data_base.13" = type { %"class.absl::optional_internal::optional_data_dtor_base.14" }
%"class.absl::optional_internal::optional_data_dtor_base.14" = type { i8, [7 x i8], %union.anon.15 }
%union.anon.15 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.20" = type { %"class.absl::optional_internal::optional_data.21" }
%"class.absl::optional_internal::optional_data.21" = type { %"class.absl::optional_internal::optional_data_base.22" }
%"class.absl::optional_internal::optional_data_base.22" = type { %"class.absl::optional_internal::optional_data_dtor_base.23" }
%"class.absl::optional_internal::optional_data_dtor_base.23" = type { i8, %union.anon.24 }
%union.anon.24 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.25", %"class.WTF::Vector.30" }
%"class.WTF::Vector.25" = type { %"class.WTF::VectorBuffer.26" }
%"class.WTF::VectorBuffer.26" = type { %"class.WTF::VectorBufferBase.27" }
%"class.WTF::VectorBufferBase.27" = type { i32*, i32, i32 }
%"class.WTF::Vector.30" = type { %"class.WTF::VectorBuffer.31" }
%"class.WTF::VectorBuffer.31" = type { %"class.WTF::VectorBufferBase.32" }
%"class.WTF::VectorBufferBase.32" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.35" = type { %"class.WTF::VectorBuffer.36" }
%"class.WTF::VectorBuffer.36" = type { %"class.WTF::VectorBufferBase.37" }
%"class.WTF::VectorBufferBase.37" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.135" }
%"class.WTF::HashMap.135" = type { %"class.WTF::HashTable.136" }
%"class.WTF::HashTable.136" = type <{ %"struct.WTF::KeyValuePair.138"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.138" = type <{ %"class.blink::WeakMember.3071", i32, [4 x i8] }>
%"class.blink::WeakMember.3071" = type { %"class.blink::MemberBase.3072" }
%"class.blink::MemberBase.3072" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member", i8, [7 x i8] }>
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.141" }
%"class.WTF::HashTable.141" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.143", i8, i8, %class.scoped_refptr.147, %class.scoped_refptr.345, %class.scoped_refptr.347 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.143" = type { %"class.WTF::HashTable.144" }
%"class.WTF::HashTable.144" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.147 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.148" }
%"class.base::RefCounted.148" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.153" }
%"class.WTF::HashMap.153" = type { %"class.WTF::HashTable.154" }
%"class.WTF::HashTable.154" = type <{ %"struct.WTF::KeyValuePair.156"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.156" = type { %"class.blink::WeakMember.157", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.157" = type { %"class.blink::MemberBase.158" }
%"class.blink::MemberBase.158" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.345 = type { %"class.base::RefCountedData.346"* }
%"class.base::RefCountedData.346" = type opaque
%class.scoped_refptr.347 = type { %"class.base::RefCountedData.348"* }
%"class.base::RefCountedData.348" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.98" }
%"class.base::time_internal::TimeBase.98" = type { i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.349 }
%class.scoped_refptr.349 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.43, %class.scoped_refptr.43, %class.scoped_refptr.43, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.49, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.62", %"class.absl::optional.67", %"class.absl::optional.77", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.87", %"class.absl::optional.77", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.77", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.87", %"class.absl::optional.92", i8, %class.scoped_refptr.97 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.38" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.38" = type { %"class.absl::optional_internal::optional_data.39" }
%"class.absl::optional_internal::optional_data.39" = type { %"class.absl::optional_internal::optional_data_base.40" }
%"class.absl::optional_internal::optional_data_base.40" = type { %"class.absl::optional_internal::optional_data_dtor_base.41" }
%"class.absl::optional_internal::optional_data_dtor_base.41" = type { i8, %union.anon.42 }
%union.anon.42 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.43 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.458", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.38", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.43 }
%"class.WTF::RefCounted.458" = type { %"class.base::RefCounted.459" }
%"class.base::RefCounted.459" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.44" }
%"class.WTF::HashMap.44" = type { %"class.WTF::HashTable.45" }
%"class.WTF::HashTable.45" = type <{ %"struct.WTF::KeyValuePair.48"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.48" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.49 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.56, i8, %"class.url::Origin" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.50"*, %"class.std::__1::unique_ptr.50"*, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.3057" }
%"class.std::__1::__compressed_pair.3057" = type { %"struct.std::__1::__compressed_pair_elem.3058" }
%"struct.std::__1::__compressed_pair_elem.3058" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.std::__1::unique_ptr.50"* }
%class.scoped_refptr.56 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.57" }
%"class.absl::optional.62" = type { %"class.absl::optional_internal::optional_data.63" }
%"class.absl::optional_internal::optional_data.63" = type { %"class.absl::optional_internal::optional_data_base.64" }
%"class.absl::optional_internal::optional_data_base.64" = type { %"class.absl::optional_internal::optional_data_dtor_base.65" }
%"class.absl::optional_internal::optional_data_dtor_base.65" = type { i8, %union.anon.66 }
%union.anon.66 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.67" = type { %"class.absl::optional_internal::optional_data.68" }
%"class.absl::optional_internal::optional_data.68" = type { %"class.absl::optional_internal::optional_data_base.69" }
%"class.absl::optional_internal::optional_data_base.69" = type { %"class.absl::optional_internal::optional_data_dtor_base.70" }
%"class.absl::optional_internal::optional_data_dtor_base.70" = type { i8, %union.anon.71 }
%union.anon.71 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.72", %"class.WTF::Vector.30", %"class.WTF::String" }
%"class.WTF::Vector.72" = type { %"class.WTF::VectorBuffer.73" }
%"class.WTF::VectorBuffer.73" = type { %"class.WTF::VectorBufferBase.74" }
%"class.WTF::VectorBufferBase.74" = type { %class.scoped_refptr.43*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.82", %"class.absl::optional.82" }
%"class.absl::optional.82" = type { %"class.absl::optional_internal::optional_data.83" }
%"class.absl::optional_internal::optional_data.83" = type { %"class.absl::optional_internal::optional_data_base.84" }
%"class.absl::optional_internal::optional_data_base.84" = type { %"class.absl::optional_internal::optional_data_dtor_base.85" }
%"class.absl::optional_internal::optional_data_dtor_base.85" = type { i8, %union.anon.86 }
%union.anon.86 = type { %"class.base::TimeDelta" }
%"class.absl::optional.77" = type { %"class.absl::optional_internal::optional_data.78" }
%"class.absl::optional_internal::optional_data.78" = type { %"class.absl::optional_internal::optional_data_base.79" }
%"class.absl::optional_internal::optional_data_base.79" = type { %"class.absl::optional_internal::optional_data_dtor_base.80" }
%"class.absl::optional_internal::optional_data_dtor_base.80" = type { i8, %union.anon.81 }
%union.anon.81 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.87" = type { %"class.absl::optional_internal::optional_data.88" }
%"class.absl::optional_internal::optional_data.88" = type { %"class.absl::optional_internal::optional_data_base.89" }
%"class.absl::optional_internal::optional_data_base.89" = type { %"class.absl::optional_internal::optional_data_dtor_base.90" }
%"class.absl::optional_internal::optional_data_dtor_base.90" = type { i8, %union.anon.91 }
%union.anon.91 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.92" = type { %"class.absl::optional_internal::optional_data.93" }
%"class.absl::optional_internal::optional_data.93" = type { %"class.absl::optional_internal::optional_data_base.94" }
%"class.absl::optional_internal::optional_data_base.94" = type { %"class.absl::optional_internal::optional_data_dtor_base.95" }
%"class.absl::optional_internal::optional_data_dtor_base.95" = type { i8, %union.anon.96 }
%union.anon.96 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.97 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.3062", %"class.base::internal::flat_tree.3063" }
%"class.base::RefCountedThreadSafe.3062" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.3063" = type { %"class.std::__1::vector.3064" }
%"class.std::__1::vector.3064" = type { %"class.std::__1::__vector_base.3065" }
%"class.std::__1::__vector_base.3065" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3066" }
%"class.std::__1::__compressed_pair.3066" = type { %"struct.std::__1::__compressed_pair_elem.3067" }
%"struct.std::__1::__compressed_pair_elem.3067" = type { i32* }
%"class.blink::Member.350" = type { %"class.blink::MemberBase.351" }
%"class.blink::MemberBase.351" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.99", %class.scoped_refptr.114, %class.scoped_refptr.115, %"struct.blink::CacheControlHeader", %"class.absl::optional.82", %"class.absl::optional.116", %"class.absl::optional.116", %"class.absl::optional.116", i64, %"class.blink::KURL", %"class.WTF::Vector.121", %"class.WTF::String", %"class.WTF::Vector.30", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.87", %"class.WTF::Vector.30", %"class.blink::KURL", %"class.absl::optional.126" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.99" = type { %"class.absl::optional_internal::optional_data.100" }
%"class.absl::optional_internal::optional_data.100" = type { %"class.absl::optional_internal::optional_data_base.101" }
%"class.absl::optional_internal::optional_data_base.101" = type { %"class.absl::optional_internal::optional_data_dtor_base.102" }
%"class.absl::optional_internal::optional_data_dtor_base.102" = type { i8, %union.anon.103 }
%union.anon.103 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.30", %"class.WTF::String", i64, i64, %"class.WTF::Vector.104", %"class.WTF::Vector.109" }
%"class.WTF::Vector.104" = type { %"class.WTF::VectorBuffer.105" }
%"class.WTF::VectorBuffer.105" = type { %"class.WTF::VectorBufferBase.106" }
%"class.WTF::VectorBufferBase.106" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.109" = type { %"class.WTF::VectorBuffer.110" }
%"class.WTF::VectorBuffer.110" = type { %"class.WTF::VectorBufferBase.111" }
%"class.WTF::VectorBufferBase.111" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.114 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.115 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.116" = type { %"class.absl::optional_internal::optional_data.117" }
%"class.absl::optional_internal::optional_data.117" = type { %"class.absl::optional_internal::optional_data_base.118" }
%"class.absl::optional_internal::optional_data_base.118" = type { %"class.absl::optional_internal::optional_data_dtor_base.119" }
%"class.absl::optional_internal::optional_data_dtor_base.119" = type { i8, %union.anon.120 }
%union.anon.120 = type { %"class.base::Time" }
%"class.WTF::Vector.121" = type { %"class.WTF::VectorBuffer.122" }
%"class.WTF::VectorBuffer.122" = type { %"class.WTF::VectorBufferBase.123" }
%"class.WTF::VectorBufferBase.123" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.126" = type { %"class.absl::optional_internal::optional_data.127" }
%"class.absl::optional_internal::optional_data.127" = type { %"class.absl::optional_internal::optional_data_base.128" }
%"class.absl::optional_internal::optional_data_base.128" = type { %"class.absl::optional_internal::optional_data_dtor_base.129" }
%"class.absl::optional_internal::optional_data_dtor_base.129" = type { i8, %union.anon.130 }
%union.anon.130 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.352 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.353", i64, %"class.WTF::Vector.355", %"class.WTF::Vector.360" }
%"class.WTF::RefCounted.353" = type { %"class.base::RefCounted.354" }
%"class.base::RefCounted.354" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.355" = type { %"class.WTF::VectorBuffer.356" }
%"class.WTF::VectorBuffer.356" = type { %"class.WTF::VectorBufferBase.357" }
%"class.WTF::VectorBufferBase.357" = type { i8*, i32, i32 }
%"class.WTF::Vector.360" = type { %"class.WTF::VectorBuffer.361" }
%"class.WTF::VectorBuffer.361" = type { %"class.WTF::VectorBufferBase.362" }
%"class.WTF::VectorBufferBase.362" = type { %"class.std::__1::unique_ptr.363"*, i32, i32 }
%"class.std::__1::unique_ptr.363" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.blink::ThreadState::PrefinalizerRegistration.374" = type { i8 }
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::CSSFontFace"* }
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::FontSelector"* }
%class.scoped_refptr.410 = type { %"class.blink::FontCustomPlatformData"* }
%"class.blink::FontCustomPlatformData" = type <{ %"class.WTF::RefCounted.411", [4 x i8], %class.sk_sp, i64, i8, i8, [6 x i8] }>
%"class.WTF::RefCounted.411" = type { %"class.base::RefCounted.412" }
%"class.base::RefCounted.412" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::RemoteFontFaceSource::FontLoadHistograms" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, i32 }
%"class.blink::CSSFontFace" = type { %class.scoped_refptr.379, %"class.blink::HeapHashSet.387", %"class.blink::HeapDeque", %"class.blink::Member.402" }
%class.scoped_refptr.379 = type { %"class.blink::UnicodeRangeSet"* }
%"class.blink::UnicodeRangeSet" = type { %"class.WTF::RefCounted.380", %"class.WTF::Vector.382" }
%"class.WTF::RefCounted.380" = type { %"class.base::RefCounted.381" }
%"class.base::RefCounted.381" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.382" = type { %"class.WTF::VectorBuffer.383" }
%"class.WTF::VectorBuffer.383" = type { %"class.WTF::VectorBufferBase.384" }
%"class.WTF::VectorBufferBase.384" = type { %"struct.blink::UnicodeRange"*, i32, i32 }
%"struct.blink::UnicodeRange" = type { i32, i32 }
%"class.blink::HeapHashSet.387" = type { %"class.WTF::HashSet.390" }
%"class.WTF::HashSet.390" = type { %"class.WTF::HashTable.391" }
%"class.WTF::HashTable.391" = type <{ %"class.blink::Member.393"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.393" = type { %"class.blink::MemberBase.3078" }
%"class.blink::MemberBase.3078" = type { %"class.blink::CSSSegmentedFontFace"* }
%"class.blink::CSSSegmentedFontFace" = type { %"struct.blink::FontSelectionCapabilities", %"class.WTF::LruCache", %"class.blink::Member.3086", i64 }
%"struct.blink::FontSelectionCapabilities" = type <{ %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange", i8, i8 }>
%"struct.blink::FontSelectionRange" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%"class.WTF::LruCache" = type { %"class.WTF::HashMap.3081", %"class.WTF::DoublyLinkedList", i64 }
%"class.WTF::HashMap.3081" = type { %"class.WTF::HashTable.3082" }
%"class.WTF::HashTable.3082" = type <{ %"struct.WTF::KeyValuePair.3085"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3085" = type opaque
%"class.WTF::DoublyLinkedList" = type { %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* }
%"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey" = type opaque
%"class.blink::Member.3086" = type { %"class.blink::MemberBase.3087" }
%"class.blink::MemberBase.3087" = type { %"class.blink::FontFaceList"* }
%"class.blink::FontFaceList" = type { %"class.blink::HeapListHashSet.3090", %"class.blink::HeapListHashSet.3090" }
%"class.blink::HeapListHashSet.3090" = type { %"class.WTF::ListHashSet.base.3100", [7 x i8] }
%"class.WTF::ListHashSet.base.3100" = type <{ %"class.WTF::HashTable.3095", %"class.blink::Member.3097", %"class.blink::Member.3097", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.3095" = type <{ %"class.blink::Member.3097"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3097" = type { %"class.blink::MemberBase.3098" }
%"class.blink::MemberBase.3098" = type { %"class.blink::HeapListHashSetNode.3099"* }
%"class.blink::HeapListHashSetNode.3099" = type { %"class.blink::Member.402", %"class.blink::Member.3097", %"class.blink::Member.3097" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapDeque" = type { %"class.WTF::Deque.396" }
%"class.WTF::Deque.396" = type { %"class.WTF::Deque<blink::Member<blink::CSSFontFaceSource>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::CSSFontFaceSource>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.398" }
%"class.WTF::VectorBuffer.398" = type { %"class.WTF::VectorBufferBase.399" }
%"class.WTF::VectorBufferBase.399" = type { %"class.blink::Member.400"*, i32, i32 }
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::CSSFontFaceSource"* }
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::FontFace"* }
%"class.blink::FontFace" = type { %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextClient", %"class.WTF::AtomicString", %"class.WTF::String", %"class.blink::Member.420", %"class.blink::Member.420", %"class.blink::Member.420", %"class.blink::Member.420", %"class.blink::Member.420", %"class.blink::Member.420", %"class.blink::Member.420", %"class.blink::Member.420", %"class.blink::Member.420", %"class.blink::Member.420", %"class.blink::Member.420", %"class.blink::Member.420", i32, %"class.blink::Member.424", %"class.blink::Member.426", %"class.blink::Member.375", %"class.blink::HeapVector" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.418" }
%"class.blink::WeakMember.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.505", i32, i8, [3 x i8], %"class.blink::HeapVector.507", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.516", %"class.blink::Member.518", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.527", %"class.blink::Member.649", %"class.blink::Member.651", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.435" }
%"class.blink::HeapHashMap.435" = type { %"class.WTF::HashMap.438" }
%"class.WTF::HashMap.438" = type { %"class.WTF::HashTable.439" }
%"class.WTF::HashTable.439" = type <{ %"struct.WTF::KeyValuePair.441"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.441" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.449" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.442" }
%"class.blink::HeapHashSet.442" = type { %"class.WTF::HashSet.445" }
%"class.WTF::HashSet.445" = type { %"class.WTF::HashTable.446" }
%"class.WTF::HashTable.446" = type <{ %"class.blink::WeakMember.448"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.448" = type opaque
%"class.blink::Supplementable.449" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.450" }
%"class.blink::HeapHashMap.450" = type { %"class.WTF::HashMap.453" }
%"class.WTF::HashMap.453" = type { %"class.WTF::HashTable.454" }
%"class.WTF::HashTable.454" = type <{ %"struct.WTF::KeyValuePair.456"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.456" = type { i8*, %"class.blink::Member.3073" }
%"class.blink::Member.3073" = type { %"class.blink::MemberBase.3074" }
%"class.blink::MemberBase.3074" = type { %"class.blink::Supplement.3075"* }
%"class.blink::Supplement.3075" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3076" }
%"class.blink::Member.3076" = type { %"class.blink::MemberBase.3077" }
%"class.blink::MemberBase.3077" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.457, %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.485", %"class.std::__1::unique_ptr.485", %"class.blink::Member.500", i32, [4 x i8], %"class.WTF::HashSet.501", i32, i32 }
%class.scoped_refptr.457 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.472", %"class.std::__1::map.481"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree.463" }
%"class.std::__1::__tree.463" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.464", %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.std::__1::map.472" = type { %"class.std::__1::__tree.473" }
%"class.std::__1::__tree.473" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.474", %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.std::__1::map.481" = type opaque
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array.488", %"class.base::flat_map" }
%"struct.std::__1::array.488" = type { [14 x %"class.blink::PolicyValue"] }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.489" }
%"class.std::__1::vector.489" = type { %"class.std::__1::__vector_base.490" }
%"class.std::__1::__vector_base.490" = type { %"struct.std::__1::pair.491"*, %"struct.std::__1::pair.491"*, %"class.std::__1::__compressed_pair.492" }
%"struct.std::__1::pair.491" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.std::__1::pair.491"* }
%"class.blink::Member.500" = type { %"class.blink::MemberBase.419" }
%"class.WTF::HashSet.501" = type { %"class.WTF::HashTable.502" }
%"class.WTF::HashTable.502" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.507" = type { %"class.WTF::Vector.510" }
%"class.WTF::Vector.510" = type { %"class.WTF::VectorBuffer.511" }
%"class.WTF::VectorBuffer.511" = type { %"class.WTF::VectorBufferBase.512" }
%"class.WTF::VectorBufferBase.512" = type { %"class.blink::Member.513"*, i32, i32 }
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::ErrorEvent"* }
%"class.blink::ErrorEvent" = type opaque
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.518" = type { %"class.blink::MemberBase.519" }
%"class.blink::MemberBase.519" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.520", i32, i32 }
%"class.blink::HeapHashMap.520" = type { %"class.WTF::HashMap.523" }
%"class.WTF::HashMap.523" = type { %"class.WTF::HashTable.524" }
%"class.WTF::HashTable.524" = type <{ %"struct.WTF::KeyValuePair.526"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.526" = type opaque
%"class.std::__1::unique_ptr.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.530" }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.533" }
%"class.WTF::Vector.533" = type { %"class.WTF::VectorBuffer.534" }
%"class.WTF::VectorBuffer.534" = type { %"class.WTF::VectorBufferBase.535" }
%"class.WTF::VectorBufferBase.535" = type { %"class.mojo::StructPtr.536"*, i32, i32 }
%"class.mojo::StructPtr.536" = type { %"class.std::__1::unique_ptr.537" }
%"class.std::__1::unique_ptr.537" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.540", %"class.WTF::HashMap.547", %"class.WTF::HashMap.552", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.30", i32, %"class.mojo::StructPtr.557", %"class.WTF::Vector.30" }
%"class.mojo::StructPtr.540" = type { %"class.std::__1::unique_ptr.541" }
%"class.std::__1::unique_ptr.541" = type { %"class.std::__1::__compressed_pair.542" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.543" }
%"struct.std::__1::__compressed_pair_elem.543" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.547" = type { %"class.WTF::HashTable.548" }
%"class.WTF::HashTable.548" = type <{ %"struct.WTF::KeyValuePair.551"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.551" = type opaque
%"class.WTF::HashMap.552" = type { %"class.WTF::HashTable.553" }
%"class.WTF::HashTable.553" = type <{ %"struct.WTF::KeyValuePair.556"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.556" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.557" = type { %"class.std::__1::unique_ptr.558" }
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.30", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.640" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.572", i32 }>
%"class.std::__1::unique_ptr.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.82", %"class.absl::optional.577", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.593", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.615", %"class.std::__1::map.626", i64, %"class.base::OnceCallback.586", %"class.base::OnceCallback.635", i8, %class.scoped_refptr.582, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.636" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.575 }
%class.scoped_refptr.575 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.576", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.577" = type { %"class.absl::optional_internal::optional_data.578" }
%"class.absl::optional_internal::optional_data.578" = type { %"class.absl::optional_internal::optional_data_base.579" }
%"class.absl::optional_internal::optional_data_base.579" = type { %"class.absl::optional_internal::optional_data_dtor_base.580" }
%"class.absl::optional_internal::optional_data_dtor_base.580" = type { i8, %union.anon.581 }
%union.anon.581 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.586" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.582, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.584 }
%class.scoped_refptr.584 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.585", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.585" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.413" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.591 }
%class.scoped_refptr.591 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.663", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.582, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.663" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.592 }
%class.scoped_refptr.592 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.596", %class.scoped_refptr.597 }
%"class.base::RepeatingCallback.596" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.597 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.598", [4 x i8] }>
%"class.base::RefCountedThreadSafe.598" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.608", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.614" }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.608" = type { %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.614" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.615" = type { %"class.std::__1::__tree.616" }
%"class.std::__1::__tree.616" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.617", %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.std::__1::map.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.base::OnceCallback.586" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.635" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.582 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.583" }>
%"class.base::RefCountedThreadSafe.583" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.586" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.636" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.649" = type { %"class.blink::MemberBase.650" }
%"class.blink::MemberBase.650" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.651" = type { %"class.blink::MemberBase.652" }
%"class.blink::MemberBase.652" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.518", i8, [7 x i8], %"class.WTF::Vector.533", %"class.blink::HeapVector.655", i8, [7 x i8], %"class.WTF::HashSet.501", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.655" = type { %"class.WTF::Vector.658" }
%"class.WTF::Vector.658" = type { %"class.WTF::VectorBuffer.659" }
%"class.WTF::VectorBuffer.659" = type { %"class.WTF::VectorBufferBase.660" }
%"class.WTF::VectorBufferBase.660" = type { %"class.blink::Member.661"*, i32, i32 }
%"class.blink::Member.661" = type opaque
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Member.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::DOMException"* }
%"class.blink::DOMException" = type { %"class.blink::ScriptWrappable", i16, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.430" }
%"class.WTF::Vector.430" = type { %"class.WTF::VectorBuffer.431" }
%"class.WTF::VectorBuffer.431" = type { %"class.WTF::VectorBufferBase.432" }
%"class.WTF::VectorBufferBase.432" = type { %"class.blink::Member.433"*, i32, i32 }
%"class.blink::Member.433" = type opaque
%"class.blink::FontSelector" = type { %"class.blink::FontCacheClient", %"class.blink::Member.408" }
%"class.blink::FontCacheClient" = type { i32 (...)** }
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::FontFallbackMap"* }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.948", %"class.blink::ThreadState::PrefinalizerRegistration.956", %"class.blink::Member.957", %"class.blink::Member.681", %"class.blink::Member.959", i8, %"class.blink::Member.961", %"class.blink::Member.963", %"class.blink::Member.965", %"class.blink::Member.965", %"class.blink::Member.965", %"class.blink::Member.965", %"class.blink::Member.965", %"class.blink::Member.965", %"class.blink::Member.967", %"class.blink::Member.969", %"class.blink::Member.971", %"class.blink::Member.973", %"class.blink::Member.977", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.30", %"class.blink::Member.979", %class.scoped_refptr.981, %"class.blink::HeapHashSet.1044", %"class.blink::Member.1051", %"class.blink::HeapHashMap.1064", %"class.std::__1::unique_ptr.1071", %"class.blink::Member.1083", %"class.blink::Member.1104", %"class.blink::Member.1106", %"class.blink::Member.1108", %"class.WTF::Vector.1111", %"class.util::TokenType", %"class.WTF::HashSet.1116", %"class.WTF::Deque.1120" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.835", %"class.blink::Member.837", %"class.blink::Member.839", %"class.blink::Member.841", i8, %"class.WTF::Vector.843" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.828" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.816" }
%"class.blink::HeapVector.816" = type { %"class.WTF::Vector.819" }
%"class.WTF::Vector.819" = type { %"class.WTF::VectorBuffer.820" }
%"class.WTF::VectorBuffer.820" = type { %"class.WTF::VectorBufferBase.821", [32 x i8] }
%"class.WTF::VectorBufferBase.821" = type { %"struct.std::__1::pair.822"*, i32, i32 }
%"struct.std::__1::pair.822" = type { %"class.WTF::AtomicString", %"class.blink::Member.823" }
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::HeapVector.825"* }
%"class.blink::HeapVector.825" = type opaque
%"class.std::__1::unique_ptr.828" = type { %"class.std::__1::__compressed_pair.829" }
%"class.std::__1::__compressed_pair.829" = type { %"struct.std::__1::__compressed_pair_elem.830" }
%"struct.std::__1::__compressed_pair_elem.830" = type { %"class.WTF::Vector.831"* }
%"class.WTF::Vector.831" = type opaque
%"class.blink::Member.835" = type { %"class.blink::MemberBase.836" }
%"class.blink::MemberBase.836" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1924", %"class.blink::Member.1926", %"class.blink::Member.1928", i8, i32, i8, i32, %"class.blink::Member.1930", %"class.blink::Member.837", %"class.blink::FrameLifecycle", %"class.blink::Member.835", %"class.blink::Member.835", %"class.blink::Member.835", %"class.blink::Member.835", %"class.blink::Member.835", %"class.blink::Member.835", %"class.blink::Member.1089", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map.1934", %"class.blink::Member.1944", i8, %"class.base::UnguessableToken", %"class.absl::optional.1946", %"class.absl::optional.87", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.835", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1924" = type { %"class.blink::MemberBase.1925" }
%"class.blink::MemberBase.1925" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1926" = type { %"class.blink::MemberBase.1927" }
%"class.blink::MemberBase.1927" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1928" = type { %"class.blink::MemberBase.1929" }
%"class.blink::MemberBase.1929" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1930" = type { %"class.blink::MemberBase.1931" }
%"class.blink::MemberBase.1931" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type { i32 (...)** }
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1958", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1966", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1974", %"class.blink::FrameLoader", %"class.blink::Member.1991", %"class.blink::Member.698", %"class.blink::Member.1993", %"class.blink::Member.1995", %"class.blink::Member.1997", %"class.blink::Member.1999", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2001", %class.scoped_refptr.2225, %"class.blink::Member.2226", %"class.blink::Member.2228", %"class.blink::Member.2239", %"class.blink::Member.2241", %"class.blink::Member.2243", %"class.blink::Member.2245", %"class.blink::Member.2247", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.2249", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2252", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2274", %"class.std::__1::unique_ptr.2275", %"class.absl::optional.87", i32, [4 x i8], %"class.std::__1::unique_ptr.2281", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2289", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2294", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2299", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2302", %"class.blink::Member.2304", %"class.blink::Member.2306", %"class.blink::Member.2308", %"class.mojo::StructPtr.2311", %"class.blink::Member.2319", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2321", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1958" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1959" }
%"class.blink::HeapHashMap.1959" = type { %"class.WTF::HashMap.1962" }
%"class.WTF::HashMap.1962" = type { %"class.WTF::HashTable.1963" }
%"class.WTF::HashTable.1963" = type <{ %"struct.WTF::KeyValuePair.1965"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1965" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1966" = type { %"class.std::__1::__compressed_pair.1967" }
%"class.std::__1::__compressed_pair.1967" = type { %"struct.std::__1::__compressed_pair_elem.1968" }
%"struct.std::__1::__compressed_pair_elem.1968" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1074", %"class.base::WeakPtrFactory.1079" }
%"class.WTF::HashMap.1074" = type { %"class.WTF::HashTable.1075" }
%"class.WTF::HashTable.1075" = type <{ %"struct.WTF::KeyValuePair.1078"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1078" = type opaque
%"class.base::WeakPtrFactory.1079" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1972" }
%"class.blink::Member.1972" = type { %"class.blink::MemberBase.1973" }
%"class.blink::MemberBase.1973" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1087" }
%"class.blink::WeakMember.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3207", i64, %"class.std::__1::map.3208", i8*, i64, %"class.base::WeakPtrFactory.3217" }
%"class.base::RepeatingCallback.3207" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3208" = type { %"class.std::__1::__tree.3209" }
%"class.std::__1::__tree.3209" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3210", %"class.std::__1::__compressed_pair.3214" }
%"class.std::__1::__compressed_pair.3210" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"class.std::__1::__compressed_pair.3214" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.base::WeakPtrFactory.3217" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1974" = type { %"class.WTF::HashSet.1977" }
%"class.WTF::HashSet.1977" = type { %"class.WTF::HashTable.1978" }
%"class.WTF::HashTable.1978" = type <{ %"class.blink::WeakMember.1980"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1980" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1089", %"class.blink::Member.1981", %"class.blink::Member.1983", %"class.std::__1::unique_ptr.1985", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1899" }
%"class.blink::Member.1981" = type { %"class.blink::MemberBase.1982" }
%"class.blink::MemberBase.1982" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1983" = type { %"class.blink::MemberBase.1984" }
%"class.blink::MemberBase.1984" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.121", %"class.blink::Member.1873", %"class.std::__1::unique_ptr.2685", %"class.std::__1::unique_ptr.527", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.2839, %"class.WTF::AtomicString", i32, %"class.absl::optional.2738", %class.scoped_refptr.43, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.2703", i8, %"class.absl::optional.2710", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.1089", %"class.blink::Member.2840", %"class.blink::Member.1127", %"class.blink::Member.2851", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.2853", %class.scoped_refptr.457, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.2866", %"class.std::__1::unique_ptr.2715", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.2868", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.352, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.1887, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.2873", %"class.blink::Member.2888", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.2901", %"class.WTF::Vector.30", i8, i8, i8, %"class.blink::WebVector.2828", %"class.blink::WebVector.2828", %"class.mojo::Remote.2906" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.blink::Member.1873" = type { %"class.blink::MemberBase.1874" }
%"class.blink::MemberBase.1874" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.std::__1::unique_ptr.2685" = type { %"class.std::__1::__compressed_pair.2686" }
%"class.std::__1::__compressed_pair.2686" = type { %"struct.std::__1::__compressed_pair_elem.2687" }
%"struct.std::__1::__compressed_pair_elem.2687" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.2689", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.2703", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.2710", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.2715", %"class.base::UnguessableToken", %"class.blink::WebVector.2721", %"class.base::TickClock"*, %"class.blink::WebVector.2730", %"class.absl::optional.2738", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.2743", %"class.blink::WebVector.2257", i8, %"class.blink::WebVector.2762", i8, %"class.std::__1::unique_ptr.2770", %"class.blink::WebVector.2828", %"class.blink::WebVector.2828" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebVector.2689" = type { %"class.std::__1::vector.2690" }
%"class.std::__1::vector.2690" = type { %"class.std::__1::__vector_base.2691" }
%"class.std::__1::__vector_base.2691" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.2698" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.2698" = type { %"struct.std::__1::__compressed_pair_elem.2699" }
%"struct.std::__1::__compressed_pair_elem.2699" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.2692", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.2692" = type { %"class.std::__1::__compressed_pair.2693" }
%"class.std::__1::__compressed_pair.2693" = type { %"struct.std::__1::__compressed_pair_elem.2694" }
%"struct.std::__1::__compressed_pair_elem.2694" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.2709", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.2709" = type { i8* }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.2688" }
%"class.blink::WebPrivatePtr.2688" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.2721" = type { %"class.std::__1::vector.2722" }
%"class.std::__1::vector.2722" = type { %"class.std::__1::__vector_base.2723" }
%"class.std::__1::__vector_base.2723" = type { %"class.std::__1::unique_ptr.2724"*, %"class.std::__1::unique_ptr.2724"*, %"class.std::__1::__compressed_pair.2725" }
%"class.std::__1::unique_ptr.2724" = type opaque
%"class.std::__1::__compressed_pair.2725" = type { %"struct.std::__1::__compressed_pair_elem.2726" }
%"struct.std::__1::__compressed_pair_elem.2726" = type { %"class.std::__1::unique_ptr.2724"* }
%"class.blink::WebVector.2730" = type { %"class.std::__1::vector.2731" }
%"class.std::__1::vector.2731" = type { %"class.std::__1::__vector_base.2732" }
%"class.std::__1::__vector_base.2732" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2733" }
%"class.std::__1::__compressed_pair.2733" = type { %"struct.std::__1::__compressed_pair_elem.2734" }
%"struct.std::__1::__compressed_pair_elem.2734" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.absl::optional.2743" = type { %"class.absl::optional_internal::optional_data.2744" }
%"class.absl::optional_internal::optional_data.2744" = type { %"class.absl::optional_internal::optional_data_base.2745" }
%"class.absl::optional_internal::optional_data_base.2745" = type { %"class.absl::optional_internal::optional_data_dtor_base.2746" }
%"class.absl::optional_internal::optional_data_dtor_base.2746" = type { i8, [7 x i8], %union.anon.2747 }
%union.anon.2747 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector.2257" = type { %"class.std::__1::vector.2258" }
%"class.std::__1::vector.2258" = type { %"class.std::__1::__vector_base.2259" }
%"class.std::__1::__vector_base.2259" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.2260" }
%"class.std::__1::__compressed_pair.2260" = type { %"struct.std::__1::__compressed_pair_elem.2261" }
%"struct.std::__1::__compressed_pair_elem.2261" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.2762" = type { %"class.std::__1::vector.2763" }
%"class.std::__1::vector.2763" = type { %"class.std::__1::__vector_base.2764" }
%"class.std::__1::__vector_base.2764" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2765" }
%"class.std::__1::__compressed_pair.2765" = type { %"struct.std::__1::__compressed_pair_elem.2766" }
%"struct.std::__1::__compressed_pair_elem.2766" = type { i32* }
%"class.std::__1::unique_ptr.2770" = type { %"class.std::__1::__compressed_pair.2771" }
%"class.std::__1::__compressed_pair.2771" = type { %"struct.std::__1::__compressed_pair_elem.2772" }
%"struct.std::__1::__compressed_pair_elem.2772" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.2773" }
%"class.blink::WebVector.2773" = type { %"class.std::__1::vector.2774" }
%"class.std::__1::vector.2774" = type { %"class.std::__1::__vector_base.2775" }
%"class.std::__1::__vector_base.2775" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.2820" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.2776", %"class.blink::WebVector.2784", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector.2257", i32, [4 x i8], %"class.absl::optional.2815", %"class.blink::WebVector.2257" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.2776" = type { %"class.std::__1::vector.2777" }
%"class.std::__1::vector.2777" = type { %"class.std::__1::__vector_base.2778" }
%"class.std::__1::__vector_base.2778" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.2779" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.2779" = type { %"struct.std::__1::__compressed_pair_elem.2780" }
%"struct.std::__1::__compressed_pair_elem.2780" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.2784" = type { %"class.std::__1::vector.2785" }
%"class.std::__1::vector.2785" = type { %"class.std::__1::__vector_base.2786" }
%"class.std::__1::__vector_base.2786" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.2810" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.2787", %"class.blink::WebVector.2257", %"class.blink::WebVector.2795", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.2787" = type { %"class.std::__1::vector.2788" }
%"class.std::__1::vector.2788" = type { %"class.std::__1::__vector_base.2789" }
%"class.std::__1::__vector_base.2789" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.2790" }
%"class.std::__1::__compressed_pair.2790" = type { %"struct.std::__1::__compressed_pair_elem.2791" }
%"struct.std::__1::__compressed_pair_elem.2791" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.2795" = type { %"class.std::__1::vector.2796" }
%"class.std::__1::vector.2796" = type { %"class.std::__1::__vector_base.2797" }
%"class.std::__1::__vector_base.2797" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.2805" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.2798" }
%"class.blink::WebVector.2798" = type { %"class.std::__1::vector.2799" }
%"class.std::__1::vector.2799" = type { %"class.std::__1::__vector_base.2800" }
%"class.std::__1::__vector_base.2800" = type { i8*, i8*, %"class.std::__1::__compressed_pair.2801" }
%"class.std::__1::__compressed_pair.2801" = type { %"struct.std::__1::__compressed_pair_elem.985" }
%"struct.std::__1::__compressed_pair_elem.985" = type { i8* }
%"class.std::__1::__compressed_pair.2805" = type { %"struct.std::__1::__compressed_pair_elem.2806" }
%"struct.std::__1::__compressed_pair_elem.2806" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.2810" = type { %"struct.std::__1::__compressed_pair_elem.2811" }
%"struct.std::__1::__compressed_pair_elem.2811" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.2815" = type { %"class.absl::optional_internal::optional_data.2816" }
%"class.absl::optional_internal::optional_data.2816" = type { %"class.absl::optional_internal::optional_data_base.2817" }
%"class.absl::optional_internal::optional_data_base.2817" = type { %"class.absl::optional_internal::optional_data_dtor_base.2818" }
%"class.absl::optional_internal::optional_data_dtor_base.2818" = type { i8, [7 x i8], %union.anon.2819 }
%union.anon.2819 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector.2257", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.2820" = type { %"struct.std::__1::__compressed_pair_elem.2821" }
%"struct.std::__1::__compressed_pair_elem.2821" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%class.scoped_refptr.2839 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.2738" = type { %"class.absl::optional_internal::optional_data.2739" }
%"class.absl::optional_internal::optional_data.2739" = type { %"class.absl::optional_internal::optional_data_base.2740" }
%"class.absl::optional_internal::optional_data_base.2740" = type { %"class.absl::optional_internal::optional_data_dtor_base.2741" }
%"class.absl::optional_internal::optional_data_dtor_base.2741" = type { i8, %union.anon.2742 }
%union.anon.2742 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector.2257", %"class.blink::WebString", %"class.blink::WebVector.2257", %"class.blink::WebVector.2257" }
%"class.std::__1::unique_ptr.2703" = type { %"class.std::__1::__compressed_pair.2704" }
%"class.std::__1::__compressed_pair.2704" = type { %"struct.std::__1::__compressed_pair_elem.2705" }
%"struct.std::__1::__compressed_pair_elem.2705" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.2710" = type { %"class.absl::optional_internal::optional_data.2711" }
%"class.absl::optional_internal::optional_data.2711" = type { %"class.absl::optional_internal::optional_data_base.2712" }
%"class.absl::optional_internal::optional_data_base.2712" = type { %"class.absl::optional_internal::optional_data_dtor_base.2713" }
%"class.absl::optional_internal::optional_data_dtor_base.2713" = type { i8, %union.anon.2714 }
%union.anon.2714 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.2748", %"class.base::flat_map.1934", i8, [7 x i8] }>
%"class.std::__1::vector.2748" = type { %"class.std::__1::__vector_base.2749" }
%"class.std::__1::__vector_base.2749" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.2757" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.2750", i8, i8, [6 x i8] }>
%"class.std::__1::vector.2750" = type { %"class.std::__1::__vector_base.2751" }
%"class.std::__1::__vector_base.2751" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.2752" }
%"class.std::__1::__compressed_pair.2752" = type { %"struct.std::__1::__compressed_pair_elem.2753" }
%"struct.std::__1::__compressed_pair_elem.2753" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.2757" = type { %"struct.std::__1::__compressed_pair_elem.2758" }
%"struct.std::__1::__compressed_pair_elem.2758" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.2840" = type { %"class.blink::MemberBase.2841" }
%"class.blink::MemberBase.2841" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.30", %"class.blink::Member.2844", %"class.absl::optional.2846", i64, i64, i32, %class.scoped_refptr.981, %class.scoped_refptr.2839, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.981 }
%"class.blink::Member.2844" = type { %"class.blink::MemberBase.2845" }
%"class.blink::MemberBase.2845" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.2846" = type { %"class.absl::optional_internal::optional_data.2847" }
%"class.absl::optional_internal::optional_data.2847" = type { %"class.absl::optional_internal::optional_data_base.2848" }
%"class.absl::optional_internal::optional_data_base.2848" = type { %"class.absl::optional_internal::optional_data_dtor_base.2849" }
%"class.absl::optional_internal::optional_data_dtor_base.2849" = type { i8, %union.anon.2850 }
%union.anon.2850 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%"class.blink::Member.1127" = type { %"class.blink::MemberBase.1128" }
%"class.blink::MemberBase.1128" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.2851" = type { %"class.blink::MemberBase.2852" }
%"class.blink::MemberBase.2852" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.mojo::Remote.2853" = type { %"class.mojo::internal::InterfacePtrState.2854" }
%"class.mojo::internal::InterfacePtrState.2854" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2855" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.847, %"class.std::__1::unique_ptr.572", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.582, i32 }>
%class.scoped_refptr.847 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.582, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.906", %"class.absl::optional.911", %"class.absl::optional.864", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.931", i8, [7 x i8], %class.scoped_refptr.582, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.598" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.586", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.582, %"class.std::__1::unique_ptr.848", %"class.absl::optional.858", %"struct.std::__1::atomic.341", i8, i8, i8, i8, i32, i32, %"class.absl::optional.864", %"class.std::__1::unique_ptr.869", i8, i64, %class.scoped_refptr.903, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.905" }
%"class.std::__1::unique_ptr.848" = type { %"class.std::__1::__compressed_pair.849" }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.850" }
%"struct.std::__1::__compressed_pair_elem.850" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.582, i8, %"class.mojo::ScopedHandleBase.851", %class.scoped_refptr.852, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.853", i8*, %"class.base::WeakPtrFactory.854" }
%"class.mojo::ScopedHandleBase.851" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.852 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.853" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.854" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.858" = type { %"class.absl::optional_internal::optional_data.859" }
%"class.absl::optional_internal::optional_data.859" = type { %"class.absl::optional_internal::optional_data_base.860" }
%"class.absl::optional_internal::optional_data_base.860" = type { %"class.absl::optional_internal::optional_data_dtor_base.861" }
%"class.absl::optional_internal::optional_data_dtor_base.861" = type { i8, %union.anon.862 }
%union.anon.862 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.863", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.863" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.869" = type { %"class.std::__1::__compressed_pair.870" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871" }
%"struct.std::__1::__compressed_pair_elem.871" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.872", i8, i64, %class.scoped_refptr.873, %class.scoped_refptr.898 }
%"class.base::RepeatingCallback.872" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.873 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.874", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.876", %"class.std::__1::map.887", i8, [7 x i8] }>
%"class.base::RefCounted.874" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.875 }
%class.scoped_refptr.875 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.876" = type { %"class.std::__1::__tree.877" }
%"class.std::__1::__tree.877" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.878", %"class.std::__1::__compressed_pair.882" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"class.std::__1::__compressed_pair.882" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.std::__1::map.887" = type { %"class.std::__1::__tree.888" }
%"class.std::__1::__tree.888" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.889", %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%class.scoped_refptr.898 = type { %"class.base::RefCountedData.899"* }
%"class.base::RefCountedData.899" = type opaque
%class.scoped_refptr.903 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.904 }
%class.scoped_refptr.904 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.905" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.906" = type { %"class.absl::optional_internal::optional_data.907" }
%"class.absl::optional_internal::optional_data.907" = type { %"class.absl::optional_internal::optional_data_base.908" }
%"class.absl::optional_internal::optional_data_base.908" = type { %"class.absl::optional_internal::optional_data_dtor_base.909" }
%"class.absl::optional_internal::optional_data_dtor_base.909" = type { i8, %union.anon.910 }
%union.anon.910 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.911" = type { %"class.absl::optional_internal::optional_data.912" }
%"class.absl::optional_internal::optional_data.912" = type { %"class.absl::optional_internal::optional_data_base.913" }
%"class.absl::optional_internal::optional_data_base.913" = type { %"class.absl::optional_internal::optional_data_dtor_base.914" }
%"class.absl::optional_internal::optional_data_dtor_base.914" = type { i8, [7 x i8], %union.anon.915 }
%union.anon.915 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.864" = type { %"class.absl::optional_internal::optional_data.865" }
%"class.absl::optional_internal::optional_data.865" = type { %"class.absl::optional_internal::optional_data_base.866" }
%"class.absl::optional_internal::optional_data_base.866" = type { %"class.absl::optional_internal::optional_data_dtor_base.867" }
%"class.absl::optional_internal::optional_data_dtor_base.867" = type { i8, %union.anon.868 }
%union.anon.868 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.916 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.916 = type { %"class.std::__1::map.919" }
%"class.std::__1::map.919" = type { %"class.std::__1::__tree.920" }
%"class.std::__1::__tree.920" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.921", %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.930"*, i64 }
%"class.std::__1::unique_ptr.930" = type opaque
%"class.std::__1::map.931" = type { %"class.std::__1::__tree.932" }
%"class.std::__1::__tree.932" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.933", %"class.std::__1::__compressed_pair.937" }
%"class.std::__1::__compressed_pair.933" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.std::__1::unique_ptr.2855" = type { %"class.std::__1::__compressed_pair.2856" }
%"class.std::__1::__compressed_pair.2856" = type { %"struct.std::__1::__compressed_pair_elem.2857" }
%"struct.std::__1::__compressed_pair_elem.2857" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.82", %"class.absl::optional.82", %"class.absl::optional.82", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.2861", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.1983" }
%"class.WTF::Vector.2861" = type { %"class.WTF::VectorBuffer.2862" }
%"class.WTF::VectorBuffer.2862" = type { %"class.WTF::VectorBufferBase.2863" }
%"class.WTF::VectorBufferBase.2863" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.base::Clock" = type opaque
%"class.blink::Member.2866" = type { %"class.blink::MemberBase.2867" }
%"class.blink::MemberBase.2867" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.2715" = type { %"class.std::__1::__compressed_pair.2716" }
%"class.std::__1::__compressed_pair.2716" = type { %"struct.std::__1::__compressed_pair_elem.2717" }
%"struct.std::__1::__compressed_pair_elem.2717" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map.1934", %"class.base::flat_map" }
%"class.WTF::Vector.2868" = type { %"class.WTF::VectorBuffer.2869" }
%"class.WTF::VectorBuffer.2869" = type { %"class.WTF::VectorBufferBase.2870" }
%"class.WTF::VectorBufferBase.2870" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%class.scoped_refptr.1887 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::Member.2873" = type { %"class.blink::MemberBase.2874" }
%"class.blink::MemberBase.2874" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.2877", %"class.std::__1::unique_ptr.2882", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.2877" = type { %"class.WTF::HashTable.2878" }
%"class.WTF::HashTable.2878" = type <{ %"struct.WTF::KeyValuePair.2881"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2881" = type { %"class.WTF::Vector.3266", %class.scoped_refptr.3271 }
%"class.WTF::Vector.3266" = type { %"class.WTF::VectorBuffer.3267" }
%"class.WTF::VectorBuffer.3267" = type { %"class.WTF::VectorBufferBase.3268", [32 x i8] }
%"class.WTF::VectorBufferBase.3268" = type { i8*, i32, i32 }
%class.scoped_refptr.3271 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.3272", %"class.WTF::Vector.3274", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.3272" = type { %"class.base::RefCounted.3273" }
%"class.base::RefCounted.3273" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3274" = type { %"class.WTF::VectorBuffer.3275" }
%"class.WTF::VectorBuffer.3275" = type { %"class.WTF::VectorBufferBase.3268" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.3278", i64, %"class.absl::optional.3283" }
%"class.std::__1::unique_ptr.3278" = type { %"class.std::__1::__compressed_pair.3279" }
%"class.std::__1::__compressed_pair.3279" = type { %"struct.std::__1::__compressed_pair_elem.985" }
%"class.absl::optional.3283" = type { %"class.absl::optional_internal::optional_data.3284" }
%"class.absl::optional_internal::optional_data.3284" = type { %"class.absl::optional_internal::optional_data_base.3285" }
%"class.absl::optional_internal::optional_data_base.3285" = type { %"class.absl::optional_internal::optional_data_dtor_base.3286" }
%"class.absl::optional_internal::optional_data_dtor_base.3286" = type { i8, %union.anon.3287 }
%union.anon.3287 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.3288", %"class.std::__1::unique_ptr.3289" }
%"class.mojo::ScopedHandleBase.3288" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.3289" = type { %"class.std::__1::__compressed_pair.3290" }
%"class.std::__1::__compressed_pair.3290" = type { %"struct.std::__1::__compressed_pair_elem.3291" }
%"struct.std::__1::__compressed_pair_elem.3291" = type { i8* }
%"class.std::__1::unique_ptr.2882" = type { %"class.std::__1::__compressed_pair.2883" }
%"class.std::__1::__compressed_pair.2883" = type { %"struct.std::__1::__compressed_pair_elem.2884" }
%"struct.std::__1::__compressed_pair_elem.2884" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Member.2888" = type { %"class.blink::MemberBase.2889" }
%"class.blink::MemberBase.2889" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.2894" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.2890", %"class.std::__1::bitset.2890", %"class.std::__1::bitset.2892" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2890" = type { %"class.std::__1::__bitset.2891" }
%"class.std::__1::__bitset.2891" = type { [11 x i64] }
%"class.std::__1::bitset.2892" = type { %"class.std::__1::__bitset.2893" }
%"class.std::__1::__bitset.2893" = type { [2 x i64] }
%"class.blink::HeapHashSet.2894" = type { %"class.WTF::HashSet.2897" }
%"class.WTF::HashSet.2897" = type { %"class.WTF::HashTable.2898" }
%"class.WTF::HashTable.2898" = type <{ %"class.blink::Member.2900"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2900" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.2901" = type { %"class.WTF::VectorBuffer.2902" }
%"class.WTF::VectorBuffer.2902" = type { %"class.WTF::VectorBufferBase.2903" }
%"class.WTF::VectorBufferBase.2903" = type { i32*, i32, i32 }
%"class.blink::WebVector.2828" = type { %"class.std::__1::vector.2829" }
%"class.std::__1::vector.2829" = type { %"class.std::__1::__vector_base.2830" }
%"class.std::__1::__vector_base.2830" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.2831" }
%"class.std::__1::__compressed_pair.2831" = type { %"struct.std::__1::__compressed_pair_elem.2832" }
%"struct.std::__1::__compressed_pair_elem.2832" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.2906" = type { %"class.mojo::internal::InterfacePtrState.2907" }
%"class.mojo::internal::InterfacePtrState.2907" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2908" }
%"class.std::__1::unique_ptr.2908" = type { %"class.std::__1::__compressed_pair.2909" }
%"class.std::__1::__compressed_pair.2909" = type { %"struct.std::__1::__compressed_pair_elem.2910" }
%"struct.std::__1::__compressed_pair_elem.2910" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1985" = type { %"class.std::__1::__compressed_pair.1986" }
%"class.std::__1::__compressed_pair.1986" = type { %"struct.std::__1::__compressed_pair_elem.1987" }
%"struct.std::__1::__compressed_pair_elem.1987" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.1899" = type { %"class.WTF::HashTable.1900" }
%"class.WTF::HashTable.1900" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1991" = type { %"class.blink::MemberBase.1992" }
%"class.blink::MemberBase.1992" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2400", %"class.blink::Member.1089", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2405", i8, i32, %"class.blink::Color", %"class.absl::optional.2407", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2412", %"class.blink::Member.2414", %"class.blink::Member.2414", %"class.std::__1::unique_ptr.2417", i32, [4 x i8], %"class.WTF::HashSet.2420", %"class.blink::Member.2427", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2429", %"class.blink::HeapHashSet.2436", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2444", i8, %"class.blink::Member.2450", i8, i8, i32, %"class.blink::HeapLinkedHashSet.2452", %"class.blink::HeapLinkedHashSet.2466", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2480", i8, %"class.std::__1::unique_ptr.2486", %"class.std::__1::unique_ptr.2603", %"class.WTF::Vector.2609", i32, %class.scoped_refptr.2614, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2615", %"class.blink::Member.2617", %"class.blink::Member.2619", %"class.blink::HeapHashSet.2621", %"class.blink::HeapHashSet.2628", %"class.std::__1::unique_ptr.2635", %"class.std::__1::unique_ptr.2641", %"class.WTF::Vector.807" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2400" = type { %"class.WTF::HashTable.2401" }
%"class.WTF::HashTable.2401" = type <{ %class.scoped_refptr.2404*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2404 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2405" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2406", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1148, %"class.base::WeakPtrFactory.1149" }
%class.scoped_refptr.1148 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1149" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.2406" = type { %"class.blink::MemberBase.1992" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.2407" = type { %"class.absl::optional_internal::optional_data.2408" }
%"class.absl::optional_internal::optional_data.2408" = type { %"class.absl::optional_internal::optional_data_base.2409" }
%"class.absl::optional_internal::optional_data_base.2409" = type { %"class.absl::optional_internal::optional_data_dtor_base.2410" }
%"class.absl::optional_internal::optional_data_dtor_base.2410" = type { i8, %union.anon.2411 }
%union.anon.2411 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2412" = type { %"class.blink::MemberBase.2413" }
%"class.blink::MemberBase.2413" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2414" = type { %"class.blink::MemberBase.2415" }
%"class.blink::MemberBase.2415" = type { %"class.blink::HeapHashSet.2416"* }
%"class.blink::HeapHashSet.2416" = type opaque
%"class.std::__1::unique_ptr.2417" = type { %"class.std::__1::__compressed_pair.2418" }
%"class.std::__1::__compressed_pair.2418" = type { %"struct.std::__1::__compressed_pair_elem.2419" }
%"struct.std::__1::__compressed_pair_elem.2419" = type { %"class.WTF::HashSet.2420"* }
%"class.WTF::HashSet.2420" = type { %"class.WTF::HashTable.2421" }
%"class.WTF::HashTable.2421" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.2427" = type { %"class.blink::MemberBase.2428" }
%"class.blink::MemberBase.2428" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2429" = type { %"class.WTF::HashSet.2432" }
%"class.WTF::HashSet.2432" = type { %"class.WTF::HashTable.2433" }
%"class.WTF::HashTable.2433" = type <{ %"class.blink::Member.2435"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2435" = type opaque
%"class.blink::HeapHashSet.2436" = type { %"class.WTF::HashSet.2439" }
%"class.WTF::HashSet.2439" = type { %"class.WTF::HashTable.2440" }
%"class.WTF::HashTable.2440" = type <{ %"class.blink::Member.2442"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2442" = type { %"class.blink::MemberBase.2443" }
%"class.blink::MemberBase.2443" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2670", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2681", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.698" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.2670" = type { %"class.blink::MemberBase.2671" }
%"class.blink::MemberBase.2671" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2672", %"class.blink::Member.2673", %"class.blink::Member.2675", %"class.blink::Member.2677", %"class.blink::Member.2679", %"class.WTF::Vector.807", i16, %class.scoped_refptr.1148 }
%"class.blink::ThreadState::PrefinalizerRegistration.2672" = type { i8 }
%"class.blink::Member.2673" = type { %"class.blink::MemberBase.2674" }
%"class.blink::MemberBase.2674" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2675" = type { %"class.blink::MemberBase.2676" }
%"class.blink::MemberBase.2676" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2677" = type { %"class.blink::MemberBase.2678" }
%"class.blink::MemberBase.2678" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2679" = type { %"class.blink::MemberBase.2680" }
%"class.blink::MemberBase.2680" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.2681" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2682", { i64, i64 } }
%"class.blink::WeakMember.2682" = type { %"class.blink::MemberBase.2443" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.2444" = type { %"class.std::__1::__compressed_pair.2445" }
%"class.std::__1::__compressed_pair.2445" = type { %"struct.std::__1::__compressed_pair_elem.2446" }
%"struct.std::__1::__compressed_pair_elem.2446" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2450" = type { %"class.blink::MemberBase.2451" }
%"class.blink::MemberBase.2451" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet.2452" = type { %"class.WTF::LinkedHashSet.2455" }
%"class.WTF::LinkedHashSet.2455" = type { %"class.WTF::HashMap.2456", %"class.WTF::VectorBackedLinkedList.2460" }
%"class.WTF::HashMap.2456" = type { %"class.WTF::HashTable.2457" }
%"class.WTF::HashTable.2457" = type <{ %"struct.WTF::KeyValuePair.2459"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2459" = type opaque
%"class.WTF::VectorBackedLinkedList.2460" = type { %"class.WTF::Vector.2461", i32, i32 }
%"class.WTF::Vector.2461" = type { %"class.WTF::VectorBuffer.2462" }
%"class.WTF::VectorBuffer.2462" = type { %"class.WTF::VectorBufferBase.2463" }
%"class.WTF::VectorBufferBase.2463" = type { %"class.WTF::VectorBackedLinkedListNode.2464"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2464" = type opaque
%"class.blink::HeapLinkedHashSet.2466" = type { %"class.WTF::LinkedHashSet.2469" }
%"class.WTF::LinkedHashSet.2469" = type { %"class.WTF::HashMap.2470", %"class.WTF::VectorBackedLinkedList.2474" }
%"class.WTF::HashMap.2470" = type { %"class.WTF::HashTable.2471" }
%"class.WTF::HashTable.2471" = type <{ %"struct.WTF::KeyValuePair.2473"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2473" = type opaque
%"class.WTF::VectorBackedLinkedList.2474" = type { %"class.WTF::Vector.2475", i32, i32 }
%"class.WTF::Vector.2475" = type { %"class.WTF::VectorBuffer.2476" }
%"class.WTF::VectorBuffer.2476" = type { %"class.WTF::VectorBufferBase.2477" }
%"class.WTF::VectorBufferBase.2477" = type { %"class.WTF::VectorBackedLinkedListNode.2478"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2478" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2480" = type { %"class.std::__1::__compressed_pair.2481" }
%"class.std::__1::__compressed_pair.2481" = type { %"struct.std::__1::__compressed_pair_elem.2482" }
%"struct.std::__1::__compressed_pair_elem.2482" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2486" = type { %"class.std::__1::__compressed_pair.2487" }
%"class.std::__1::__compressed_pair.2487" = type { %"struct.std::__1::__compressed_pair_elem.2488" }
%"struct.std::__1::__compressed_pair_elem.2488" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2489, %class.scoped_refptr.2489, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2580", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2585", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2489 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2490", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2497" }
%"class.WTF::RefCounted.2490" = type { %"class.base::RefCounted.2491" }
%"class.base::RefCounted.2491" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2492", i32, [4 x i8] }>
%"class.WTF::Vector.2492" = type { %"class.WTF::VectorBuffer.2493" }
%"class.WTF::VectorBuffer.2493" = type { %"class.WTF::VectorBufferBase.2494" }
%"class.WTF::VectorBufferBase.2494" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2497" = type { %"class.WTF::VectorBuffer.2498" }
%"class.WTF::VectorBuffer.2498" = type { %"class.WTF::VectorBufferBase.2499" }
%"class.WTF::VectorBufferBase.2499" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2503", %"class.std::__1::unique_ptr.2552", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.2500, %class.scoped_refptr.2501, %class.scoped_refptr.2502 }
%class.scoped_refptr.2500 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.2516", i8, i8, %class.scoped_refptr.2500, i32, i32 }
%"class.WTF::RefCounted.2516" = type { %"class.base::RefCounted.2517" }
%"class.base::RefCounted.2517" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2501 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2665" }
%"class.blink::PaintPropertyNode.2665" = type { %"class.WTF::RefCounted.2666", i8, i8, %class.scoped_refptr.2501, i32, i32 }
%"class.WTF::RefCounted.2666" = type { %"class.base::RefCounted.2667" }
%"class.base::RefCounted.2667" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2502 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2662" }
%"class.blink::PaintPropertyNode.2662" = type { %"class.WTF::RefCounted.2663", i8, i8, %class.scoped_refptr.2502, i32, i32 }
%"class.WTF::RefCounted.2663" = type { %"class.base::RefCounted.2664" }
%"class.base::RefCounted.2664" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2503" = type { %"class.std::__1::__compressed_pair.2504" }
%"class.std::__1::__compressed_pair.2504" = type { %"struct.std::__1::__compressed_pair_elem.2505" }
%"struct.std::__1::__compressed_pair_elem.2505" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2506", %"class.WTF::Vector.2511", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2506" = type { %"class.WTF::VectorBuffer.2507" }
%"class.WTF::VectorBuffer.2507" = type { %"class.WTF::VectorBufferBase.2508" }
%"class.WTF::VectorBufferBase.2508" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2511" = type { %"class.WTF::VectorBuffer.2512" }
%"class.WTF::VectorBuffer.2512" = type { %"class.WTF::VectorBufferBase.2513" }
%"class.WTF::VectorBufferBase.2513" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.2531" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.2524, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.2525", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.2518" }
%"class.std::__1::unique_ptr.2518" = type { %"class.std::__1::__compressed_pair.2519" }
%"class.std::__1::__compressed_pair.2519" = type { %"struct.std::__1::__compressed_pair_elem.2520" }
%"struct.std::__1::__compressed_pair_elem.2520" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.2524 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.2647", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.2647" = type { %"class.WTF::RefCounted.2648", i8, i8, %class.scoped_refptr.2524, i32, i32 }
%"class.WTF::RefCounted.2648" = type { %"class.base::RefCounted.2649" }
%"class.base::RefCounted.2649" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.2650" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.2650" = type { %"class.absl::optional_internal::optional_data.2651" }
%"class.absl::optional_internal::optional_data.2651" = type { %"class.absl::optional_internal::optional_data_base.2652" }
%"class.absl::optional_internal::optional_data_base.2652" = type { %"class.absl::optional_internal::optional_data_dtor_base.2653" }
%"class.absl::optional_internal::optional_data_dtor_base.2653" = type { i8, %union.anon.2654 }
%union.anon.2654 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.2655", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.2655" = type { %"class.std::__1::__vector_base.2656" }
%"class.std::__1::__vector_base.2656" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.2657" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.2657" = type { %"struct.std::__1::__compressed_pair_elem.2658" }
%"struct.std::__1::__compressed_pair_elem.2658" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.2525" = type { %"class.std::__1::__compressed_pair.2526" }
%"class.std::__1::__compressed_pair.2526" = type { %"struct.std::__1::__compressed_pair_elem.2527" }
%"struct.std::__1::__compressed_pair_elem.2527" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.2531" = type { %"class.std::__1::__compressed_pair.2532" }
%"class.std::__1::__compressed_pair.2532" = type { %"struct.std::__1::__compressed_pair_elem.2533" }
%"struct.std::__1::__compressed_pair_elem.2533" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.2534", %"class.std::__1::unique_ptr.2540", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2534" = type { %"class.std::__1::__compressed_pair.2535" }
%"class.std::__1::__compressed_pair.2535" = type { %"struct.std::__1::__compressed_pair_elem.2536" }
%"struct.std::__1::__compressed_pair_elem.2536" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2540" = type { %"class.std::__1::__compressed_pair.2541" }
%"class.std::__1::__compressed_pair.2541" = type { %"struct.std::__1::__compressed_pair_elem.2542" }
%"struct.std::__1::__compressed_pair_elem.2542" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2552" = type { %"class.std::__1::__compressed_pair.2553" }
%"class.std::__1::__compressed_pair.2553" = type { %"struct.std::__1::__compressed_pair_elem.2554" }
%"struct.std::__1::__compressed_pair_elem.2554" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2555", %"class.absl::optional.2555" }
%"class.absl::optional.2555" = type { %"class.absl::optional_internal::optional_data.2556" }
%"class.absl::optional_internal::optional_data.2556" = type { %"class.absl::optional_internal::optional_data_base.2557" }
%"class.absl::optional_internal::optional_data_base.2557" = type { %"class.absl::optional_internal::optional_data_dtor_base.2558" }
%"class.absl::optional_internal::optional_data_dtor_base.2558" = type { i8, [3 x i8], %union.anon.2559 }
%union.anon.2559 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2497"*, %"class.absl::optional.2565", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2565" = type { %"class.absl::optional_internal::optional_data.2566" }
%"class.absl::optional_internal::optional_data.2566" = type { %"class.absl::optional_internal::optional_data_base.2567" }
%"class.absl::optional_internal::optional_data_base.2567" = type { %"class.absl::optional_internal::optional_data_dtor_base.2568" }
%"class.absl::optional_internal::optional_data_dtor_base.2568" = type { i8, %union.anon.2569 }
%union.anon.2569 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2570", %"class.WTF::Vector.2575" }
%"class.WTF::Vector.2570" = type { %"class.WTF::VectorBuffer.2571" }
%"class.WTF::VectorBuffer.2571" = type { %"class.WTF::VectorBufferBase.2572", [128 x i8] }
%"class.WTF::VectorBufferBase.2572" = type { i32*, i32, i32 }
%"class.WTF::Vector.2575" = type { %"class.WTF::VectorBuffer.2576" }
%"class.WTF::VectorBuffer.2576" = type { %"class.WTF::VectorBufferBase.2577", [128 x i8] }
%"class.WTF::VectorBufferBase.2577" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2580" = type { %"class.WTF::VectorBuffer.2581" }
%"class.WTF::VectorBuffer.2581" = type { %"class.WTF::VectorBufferBase.2582" }
%"class.WTF::VectorBufferBase.2582" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2585" = type { %"class.WTF::HashTable.2586" }
%"class.WTF::HashTable.2586" = type <{ %"struct.WTF::KeyValuePair.2589"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2589" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2590", %"class.WTF::Vector.2595" }
%"class.WTF::HashMap.2590" = type { %"class.WTF::HashTable.2591" }
%"class.WTF::HashTable.2591" = type <{ %"struct.WTF::KeyValuePair.2594"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2594" = type opaque
%"class.WTF::Vector.2595" = type { %"class.WTF::VectorBuffer.2596" }
%"class.WTF::VectorBuffer.2596" = type { %"class.WTF::VectorBufferBase.2597" }
%"class.WTF::VectorBufferBase.2597" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2603" = type { %"class.std::__1::__compressed_pair.2604" }
%"class.std::__1::__compressed_pair.2604" = type { %"struct.std::__1::__compressed_pair_elem.2605" }
%"struct.std::__1::__compressed_pair_elem.2605" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2609" = type { %"class.WTF::VectorBuffer.2610" }
%"class.WTF::VectorBuffer.2610" = type { %"class.WTF::VectorBufferBase.2611" }
%"class.WTF::VectorBufferBase.2611" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2614 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2615" = type { %"class.blink::MemberBase.2616" }
%"class.blink::MemberBase.2616" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2617" = type { %"class.blink::MemberBase.2618" }
%"class.blink::MemberBase.2618" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2619" = type { %"class.blink::MemberBase.2620" }
%"class.blink::MemberBase.2620" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2621" = type { %"class.WTF::HashSet.2624" }
%"class.WTF::HashSet.2624" = type { %"class.WTF::HashTable.2625" }
%"class.WTF::HashTable.2625" = type <{ %"class.blink::WeakMember.2627"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2627" = type opaque
%"class.blink::HeapHashSet.2628" = type { %"class.WTF::HashSet.2631" }
%"class.WTF::HashSet.2631" = type { %"class.WTF::HashTable.2632" }
%"class.WTF::HashTable.2632" = type <{ %"class.blink::WeakMember.2634"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2634" = type opaque
%"class.std::__1::unique_ptr.2635" = type { %"class.std::__1::__compressed_pair.2636" }
%"class.std::__1::__compressed_pair.2636" = type { %"struct.std::__1::__compressed_pair_elem.2637" }
%"struct.std::__1::__compressed_pair_elem.2637" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2641" = type { %"class.std::__1::__compressed_pair.2642" }
%"class.std::__1::__compressed_pair.2642" = type { %"struct.std::__1::__compressed_pair_elem.2643" }
%"struct.std::__1::__compressed_pair_elem.2643" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.116", i32, i32, i32, i8, [3 x i8] }>
%"class.WTF::Vector.807" = type { %"class.WTF::VectorBuffer.808" }
%"class.WTF::VectorBuffer.808" = type { %"class.WTF::VectorBufferBase.809" }
%"class.WTF::VectorBufferBase.809" = type { %"class.base::OnceCallback.586"*, i32, i32 }
%"class.blink::Member.698" = type { %"class.blink::MemberBase.699" }
%"class.blink::MemberBase.699" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.703" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.671", %"class.blink::Member.671" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.671", %"class.blink::Member.673", %"class.blink::Member.671", %"class.blink::Member.671", %"class.blink::Member.675" }
%"class.blink::Member.673" = type { %"class.blink::MemberBase.674" }
%"class.blink::MemberBase.674" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.679", %"class.blink::Member.681", %"class.blink::Member.673", %"class.blink::Member.683", %"class.blink::Member.683", %"class.blink::Member.727", %"class.blink::Member.729", %"class.blink::Member.731", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.736", %"class.blink::HeapVector.738" }
%"class.blink::Member.679" = type { %"class.blink::MemberBase.680" }
%"class.blink::MemberBase.680" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.683" = type { %"class.blink::MemberBase.684" }
%"class.blink::MemberBase.684" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type { %"class.WTF::AtomicString", %"class.blink::Member.694" }
%"class.blink::Member.694" = type { %"class.blink::MemberBase.695" }
%"class.blink::MemberBase.695" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.698", i32, %"class.blink::HeapVector.720" }
%"class.blink::HeapVector.720" = type { %"class.WTF::Vector.723" }
%"class.WTF::Vector.723" = type { %"class.WTF::VectorBuffer.724" }
%"class.WTF::VectorBuffer.724" = type { %"class.WTF::VectorBufferBase.725" }
%"class.WTF::VectorBufferBase.725" = type { %"class.blink::Member.698"*, i32, i32 }
%"class.blink::Member.727" = type { %"class.blink::MemberBase.728" }
%"class.blink::MemberBase.728" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.729" = type { %"class.blink::MemberBase.730" }
%"class.blink::MemberBase.730" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.731" = type { %"class.blink::MemberBase.732" }
%"class.blink::MemberBase.732" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.733" }
%"class.blink::Member.733" = type { %"class.blink::MemberBase.734" }
%"class.blink::MemberBase.734" = type { %"class.blink::HeapHashMap.735"* }
%"class.blink::HeapHashMap.735" = type opaque
%"class.blink::Member.736" = type { %"class.blink::MemberBase.737" }
%"class.blink::MemberBase.737" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.738" = type { %"class.WTF::Vector.741" }
%"class.WTF::Vector.741" = type { %"class.WTF::VectorBuffer.742" }
%"class.WTF::VectorBuffer.742" = type { %"class.WTF::VectorBufferBase.743" }
%"class.WTF::VectorBufferBase.743" = type { %"class.blink::Member.744"*, i32, i32 }
%"class.blink::Member.744" = type { %"class.blink::MemberBase.745" }
%"class.blink::MemberBase.745" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.746", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.748, %"class.WTF::Vector.767", %"class.WTF::Vector.767", %"class.blink::Member.671", %"class.blink::Member.772", %"class.blink::HeapHashSet.776", %"class.blink::Member.681", %"class.WTF::HashSet.783", %"class.WTF::TextPosition", %"class.blink::Member.787", %"class.blink::HeapVector.789", %"class.blink::Member.796" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.746" = type { %"class.blink::MemberBase.747" }
%"class.blink::MemberBase.747" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.748 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.749", %"class.WTF::Vector.751" }
%"class.WTF::RefCounted.749" = type { %"class.base::RefCounted.750" }
%"class.base::RefCounted.750" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.751" = type { %"class.WTF::VectorBuffer.752" }
%"class.WTF::VectorBuffer.752" = type { %"class.WTF::VectorBufferBase.753" }
%"class.WTF::VectorBufferBase.753" = type { %"class.std::__1::unique_ptr.754"*, i32, i32 }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.757", %"class.WTF::String" }
%"class.WTF::Vector.757" = type { %"class.WTF::VectorBuffer.758" }
%"class.WTF::VectorBuffer.758" = type { %"class.WTF::VectorBufferBase.759" }
%"class.WTF::VectorBufferBase.759" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.767" = type { %"class.WTF::VectorBuffer.768" }
%"class.WTF::VectorBuffer.768" = type { %"class.WTF::VectorBufferBase.769" }
%"class.WTF::VectorBufferBase.769" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.772" = type { %"class.blink::MemberBase.773" }
%"class.blink::MemberBase.773" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.774" }
%"class.blink::Member.774" = type { %"class.blink::MemberBase.775" }
%"class.blink::MemberBase.775" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.776" = type { %"class.WTF::HashSet.779" }
%"class.WTF::HashSet.779" = type { %"class.WTF::HashTable.780" }
%"class.WTF::HashTable.780" = type <{ %"class.blink::WeakMember.782"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.782" = type { %"class.blink::MemberBase.674" }
%"class.WTF::HashSet.783" = type { %"class.WTF::HashTable.784" }
%"class.WTF::HashTable.784" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.787" = type { %"class.blink::MemberBase.788" }
%"class.blink::MemberBase.788" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.748, %"class.blink::Member.744", %"class.blink::Member.772" }
%"class.blink::HeapVector.789" = type { %"class.WTF::Vector.792" }
%"class.WTF::Vector.792" = type { %"class.WTF::VectorBuffer.793" }
%"class.WTF::VectorBuffer.793" = type { %"class.WTF::VectorBufferBase.794" }
%"class.WTF::VectorBufferBase.794" = type { %"class.blink::Member.772"*, i32, i32 }
%"class.blink::Member.796" = type { %"class.blink::MemberBase.797" }
%"class.blink::MemberBase.797" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.675" = type { %"class.blink::MemberBase.676" }
%"class.blink::MemberBase.676" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.700 }
%class.scoped_refptr.700 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.701", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.701" = type { %"class.base::RefCounted.702" }
%"class.base::RefCounted.702" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.703" = type { %"class.blink::MemberBase.704" }
%"class.blink::MemberBase.704" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.707", %"class.blink::Member.709", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.707" = type { %"class.WTF::SingleThreadedBitField.708" }
%"class.WTF::SingleThreadedBitField.708" = type { i32 }
%"class.blink::Member.709" = type { %"class.blink::MemberBase.710" }
%"class.blink::MemberBase.710" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.713 }
%class.scoped_refptr.713 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.714", %"class.WTF::AtomicString", %"class.WTF::Vector.716" }
%"class.WTF::RefCounted.714" = type { %"class.base::RefCounted.715" }
%"class.base::RefCounted.715" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.716" = type { %"class.WTF::VectorBuffer.717" }
%"class.WTF::VectorBuffer.717" = type { %"class.WTF::VectorBufferBase.106", [32 x i8] }
%"class.blink::Member.1993" = type { %"class.blink::MemberBase.1994" }
%"class.blink::MemberBase.1994" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1995" = type { %"class.blink::MemberBase.1996" }
%"class.blink::MemberBase.1996" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1997" = type { %"class.blink::MemberBase.1998" }
%"class.blink::MemberBase.1998" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1999" = type { %"class.blink::MemberBase.2000" }
%"class.blink::MemberBase.2000" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2001" = type { %"class.blink::MemberBase.2002" }
%"class.blink::MemberBase.2002" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2005", %"class.blink::HeapListHashSet.2016", %"class.blink::HeapListHashSet.2027", %"class.blink::HeapListHashSet.2038", %"class.blink::HeapListHashSet.2049", %"class.blink::HeapListHashSet.2060", %"class.blink::HeapListHashSet.2071", %"class.blink::HeapListHashSet.2082", %"class.blink::HeapListHashSet.2093", %"class.blink::HeapListHashSet.2104", %"class.blink::HeapListHashSet.2115", %"class.blink::HeapListHashSet.2126", %"class.blink::HeapListHashSet.2137", %"class.blink::HeapListHashSet.2148", %"class.blink::HeapListHashSet.2159", %"class.blink::HeapListHashSet.2170", %"class.blink::HeapListHashSet.2181", %"class.blink::HeapListHashSet.2192", %"class.blink::HeapListHashSet.2203", %"class.blink::HeapListHashSet.2214" }
%"class.blink::HeapListHashSet.2005" = type { %"class.WTF::ListHashSet.base.2015", [7 x i8] }
%"class.WTF::ListHashSet.base.2015" = type <{ %"class.WTF::HashTable.2010", %"class.blink::Member.2012", %"class.blink::Member.2012", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2010" = type <{ %"class.blink::Member.2012"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2012" = type { %"class.blink::MemberBase.2013" }
%"class.blink::MemberBase.2013" = type { %"class.blink::HeapListHashSetNode.2014"* }
%"class.blink::HeapListHashSetNode.2014" = type { %"class.blink::Member.2228", %"class.blink::Member.2012", %"class.blink::Member.2012" }
%"class.blink::HeapListHashSet.2016" = type { %"class.WTF::ListHashSet.base.2026", [7 x i8] }
%"class.WTF::ListHashSet.base.2026" = type <{ %"class.WTF::HashTable.2021", %"class.blink::Member.2023", %"class.blink::Member.2023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2021" = type <{ %"class.blink::Member.2023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2023" = type { %"class.blink::MemberBase.2024" }
%"class.blink::MemberBase.2024" = type { %"class.blink::HeapListHashSetNode.2025"* }
%"class.blink::HeapListHashSetNode.2025" = type { %"class.blink::Member.2394", %"class.blink::Member.2023", %"class.blink::Member.2023" }
%"class.blink::Member.2394" = type { %"class.blink::MemberBase.2395" }
%"class.blink::MemberBase.2395" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2027" = type { %"class.WTF::ListHashSet.base.2037", [7 x i8] }
%"class.WTF::ListHashSet.base.2037" = type <{ %"class.WTF::HashTable.2032", %"class.blink::Member.2034", %"class.blink::Member.2034", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2032" = type <{ %"class.blink::Member.2034"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2034" = type { %"class.blink::MemberBase.2035" }
%"class.blink::MemberBase.2035" = type { %"class.blink::HeapListHashSetNode.2036"* }
%"class.blink::HeapListHashSetNode.2036" = type { %"class.blink::Member.2390", %"class.blink::Member.2034", %"class.blink::Member.2034" }
%"class.blink::Member.2390" = type { %"class.blink::MemberBase.2391" }
%"class.blink::MemberBase.2391" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2038" = type { %"class.WTF::ListHashSet.base.2048", [7 x i8] }
%"class.WTF::ListHashSet.base.2048" = type <{ %"class.WTF::HashTable.2043", %"class.blink::Member.2045", %"class.blink::Member.2045", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2043" = type <{ %"class.blink::Member.2045"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2045" = type { %"class.blink::MemberBase.2046" }
%"class.blink::MemberBase.2046" = type { %"class.blink::HeapListHashSetNode.2047"* }
%"class.blink::HeapListHashSetNode.2047" = type { %"class.blink::Member.2386", %"class.blink::Member.2045", %"class.blink::Member.2045" }
%"class.blink::Member.2386" = type { %"class.blink::MemberBase.2387" }
%"class.blink::MemberBase.2387" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2049" = type { %"class.WTF::ListHashSet.base.2059", [7 x i8] }
%"class.WTF::ListHashSet.base.2059" = type <{ %"class.WTF::HashTable.2054", %"class.blink::Member.2056", %"class.blink::Member.2056", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2054" = type <{ %"class.blink::Member.2056"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2056" = type { %"class.blink::MemberBase.2057" }
%"class.blink::MemberBase.2057" = type { %"class.blink::HeapListHashSetNode.2058"* }
%"class.blink::HeapListHashSetNode.2058" = type { %"class.blink::Member.2382", %"class.blink::Member.2056", %"class.blink::Member.2056" }
%"class.blink::Member.2382" = type { %"class.blink::MemberBase.2383" }
%"class.blink::MemberBase.2383" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2060" = type { %"class.WTF::ListHashSet.base.2070", [7 x i8] }
%"class.WTF::ListHashSet.base.2070" = type <{ %"class.WTF::HashTable.2065", %"class.blink::Member.2067", %"class.blink::Member.2067", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2065" = type <{ %"class.blink::Member.2067"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2067" = type { %"class.blink::MemberBase.2068" }
%"class.blink::MemberBase.2068" = type { %"class.blink::HeapListHashSetNode.2069"* }
%"class.blink::HeapListHashSetNode.2069" = type { %"class.blink::Member.2378", %"class.blink::Member.2067", %"class.blink::Member.2067" }
%"class.blink::Member.2378" = type { %"class.blink::MemberBase.2379" }
%"class.blink::MemberBase.2379" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2071" = type { %"class.WTF::ListHashSet.base.2081", [7 x i8] }
%"class.WTF::ListHashSet.base.2081" = type <{ %"class.WTF::HashTable.2076", %"class.blink::Member.2078", %"class.blink::Member.2078", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2076" = type <{ %"class.blink::Member.2078"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2078" = type { %"class.blink::MemberBase.2079" }
%"class.blink::MemberBase.2079" = type { %"class.blink::HeapListHashSetNode.2080"* }
%"class.blink::HeapListHashSetNode.2080" = type { %"class.blink::Member.2374", %"class.blink::Member.2078", %"class.blink::Member.2078" }
%"class.blink::Member.2374" = type { %"class.blink::MemberBase.2375" }
%"class.blink::MemberBase.2375" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2082" = type { %"class.WTF::ListHashSet.base.2092", [7 x i8] }
%"class.WTF::ListHashSet.base.2092" = type <{ %"class.WTF::HashTable.2087", %"class.blink::Member.2089", %"class.blink::Member.2089", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2087" = type <{ %"class.blink::Member.2089"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2089" = type { %"class.blink::MemberBase.2090" }
%"class.blink::MemberBase.2090" = type { %"class.blink::HeapListHashSetNode.2091"* }
%"class.blink::HeapListHashSetNode.2091" = type { %"class.blink::Member.2370", %"class.blink::Member.2089", %"class.blink::Member.2089" }
%"class.blink::Member.2370" = type { %"class.blink::MemberBase.2371" }
%"class.blink::MemberBase.2371" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2093" = type { %"class.WTF::ListHashSet.base.2103", [7 x i8] }
%"class.WTF::ListHashSet.base.2103" = type <{ %"class.WTF::HashTable.2098", %"class.blink::Member.2100", %"class.blink::Member.2100", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2098" = type <{ %"class.blink::Member.2100"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2100" = type { %"class.blink::MemberBase.2101" }
%"class.blink::MemberBase.2101" = type { %"class.blink::HeapListHashSetNode.2102"* }
%"class.blink::HeapListHashSetNode.2102" = type { %"class.blink::Member.2366", %"class.blink::Member.2100", %"class.blink::Member.2100" }
%"class.blink::Member.2366" = type { %"class.blink::MemberBase.2367" }
%"class.blink::MemberBase.2367" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2104" = type { %"class.WTF::ListHashSet.base.2114", [7 x i8] }
%"class.WTF::ListHashSet.base.2114" = type <{ %"class.WTF::HashTable.2109", %"class.blink::Member.2111", %"class.blink::Member.2111", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2109" = type <{ %"class.blink::Member.2111"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2111" = type { %"class.blink::MemberBase.2112" }
%"class.blink::MemberBase.2112" = type { %"class.blink::HeapListHashSetNode.2113"* }
%"class.blink::HeapListHashSetNode.2113" = type { %"class.blink::Member.2362", %"class.blink::Member.2111", %"class.blink::Member.2111" }
%"class.blink::Member.2362" = type { %"class.blink::MemberBase.2363" }
%"class.blink::MemberBase.2363" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2115" = type { %"class.WTF::ListHashSet.base.2125", [7 x i8] }
%"class.WTF::ListHashSet.base.2125" = type <{ %"class.WTF::HashTable.2120", %"class.blink::Member.2122", %"class.blink::Member.2122", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2120" = type <{ %"class.blink::Member.2122"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2122" = type { %"class.blink::MemberBase.2123" }
%"class.blink::MemberBase.2123" = type { %"class.blink::HeapListHashSetNode.2124"* }
%"class.blink::HeapListHashSetNode.2124" = type { %"class.blink::Member.2241", %"class.blink::Member.2122", %"class.blink::Member.2122" }
%"class.blink::HeapListHashSet.2126" = type { %"class.WTF::ListHashSet.base.2136", [7 x i8] }
%"class.WTF::ListHashSet.base.2136" = type <{ %"class.WTF::HashTable.2131", %"class.blink::Member.2133", %"class.blink::Member.2133", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2131" = type <{ %"class.blink::Member.2133"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2133" = type { %"class.blink::MemberBase.2134" }
%"class.blink::MemberBase.2134" = type { %"class.blink::HeapListHashSetNode.2135"* }
%"class.blink::HeapListHashSetNode.2135" = type { %"class.blink::Member.2356", %"class.blink::Member.2133", %"class.blink::Member.2133" }
%"class.blink::Member.2356" = type { %"class.blink::MemberBase.2357" }
%"class.blink::MemberBase.2357" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2137" = type { %"class.WTF::ListHashSet.base.2147", [7 x i8] }
%"class.WTF::ListHashSet.base.2147" = type <{ %"class.WTF::HashTable.2142", %"class.blink::Member.2144", %"class.blink::Member.2144", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2142" = type <{ %"class.blink::Member.2144"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2144" = type { %"class.blink::MemberBase.2145" }
%"class.blink::MemberBase.2145" = type { %"class.blink::HeapListHashSetNode.2146"* }
%"class.blink::HeapListHashSetNode.2146" = type { %"class.blink::Member.2352", %"class.blink::Member.2144", %"class.blink::Member.2144" }
%"class.blink::Member.2352" = type { %"class.blink::MemberBase.2353" }
%"class.blink::MemberBase.2353" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2148" = type { %"class.WTF::ListHashSet.base.2158", [7 x i8] }
%"class.WTF::ListHashSet.base.2158" = type <{ %"class.WTF::HashTable.2153", %"class.blink::Member.2155", %"class.blink::Member.2155", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2153" = type <{ %"class.blink::Member.2155"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2155" = type { %"class.blink::MemberBase.2156" }
%"class.blink::MemberBase.2156" = type { %"class.blink::HeapListHashSetNode.2157"* }
%"class.blink::HeapListHashSetNode.2157" = type { %"class.blink::Member.2348", %"class.blink::Member.2155", %"class.blink::Member.2155" }
%"class.blink::Member.2348" = type { %"class.blink::MemberBase.2349" }
%"class.blink::MemberBase.2349" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2159" = type { %"class.WTF::ListHashSet.base.2169", [7 x i8] }
%"class.WTF::ListHashSet.base.2169" = type <{ %"class.WTF::HashTable.2164", %"class.blink::Member.2166", %"class.blink::Member.2166", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2164" = type <{ %"class.blink::Member.2166"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2166" = type { %"class.blink::MemberBase.2167" }
%"class.blink::MemberBase.2167" = type { %"class.blink::HeapListHashSetNode.2168"* }
%"class.blink::HeapListHashSetNode.2168" = type { %"class.blink::Member.2344", %"class.blink::Member.2166", %"class.blink::Member.2166" }
%"class.blink::Member.2344" = type { %"class.blink::MemberBase.2345" }
%"class.blink::MemberBase.2345" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2170" = type { %"class.WTF::ListHashSet.base.2180", [7 x i8] }
%"class.WTF::ListHashSet.base.2180" = type <{ %"class.WTF::HashTable.2175", %"class.blink::Member.2177", %"class.blink::Member.2177", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2175" = type <{ %"class.blink::Member.2177"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2177" = type { %"class.blink::MemberBase.2178" }
%"class.blink::MemberBase.2178" = type { %"class.blink::HeapListHashSetNode.2179"* }
%"class.blink::HeapListHashSetNode.2179" = type { %"class.blink::Member.2340", %"class.blink::Member.2177", %"class.blink::Member.2177" }
%"class.blink::Member.2340" = type { %"class.blink::MemberBase.2341" }
%"class.blink::MemberBase.2341" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2181" = type { %"class.WTF::ListHashSet.base.2191", [7 x i8] }
%"class.WTF::ListHashSet.base.2191" = type <{ %"class.WTF::HashTable.2186", %"class.blink::Member.2188", %"class.blink::Member.2188", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2186" = type <{ %"class.blink::Member.2188"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2188" = type { %"class.blink::MemberBase.2189" }
%"class.blink::MemberBase.2189" = type { %"class.blink::HeapListHashSetNode.2190"* }
%"class.blink::HeapListHashSetNode.2190" = type { %"class.blink::Member.2336", %"class.blink::Member.2188", %"class.blink::Member.2188" }
%"class.blink::Member.2336" = type { %"class.blink::MemberBase.2337" }
%"class.blink::MemberBase.2337" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2192" = type { %"class.WTF::ListHashSet.base.2202", [7 x i8] }
%"class.WTF::ListHashSet.base.2202" = type <{ %"class.WTF::HashTable.2197", %"class.blink::Member.2199", %"class.blink::Member.2199", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2197" = type <{ %"class.blink::Member.2199"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2199" = type { %"class.blink::MemberBase.2200" }
%"class.blink::MemberBase.2200" = type { %"class.blink::HeapListHashSetNode.2201"* }
%"class.blink::HeapListHashSetNode.2201" = type { %"class.blink::Member.2332", %"class.blink::Member.2199", %"class.blink::Member.2199" }
%"class.blink::Member.2332" = type { %"class.blink::MemberBase.2333" }
%"class.blink::MemberBase.2333" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2203" = type { %"class.WTF::ListHashSet.base.2213", [7 x i8] }
%"class.WTF::ListHashSet.base.2213" = type <{ %"class.WTF::HashTable.2208", %"class.blink::Member.2210", %"class.blink::Member.2210", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2208" = type <{ %"class.blink::Member.2210"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2210" = type { %"class.blink::MemberBase.2211" }
%"class.blink::MemberBase.2211" = type { %"class.blink::HeapListHashSetNode.2212"* }
%"class.blink::HeapListHashSetNode.2212" = type { %"class.blink::Member.2243", %"class.blink::Member.2210", %"class.blink::Member.2210" }
%"class.blink::HeapListHashSet.2214" = type { %"class.WTF::ListHashSet.base.2224", [7 x i8] }
%"class.WTF::ListHashSet.base.2224" = type <{ %"class.WTF::HashTable.2219", %"class.blink::Member.2221", %"class.blink::Member.2221", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2219" = type <{ %"class.blink::Member.2221"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2221" = type { %"class.blink::MemberBase.2222" }
%"class.blink::MemberBase.2222" = type { %"class.blink::HeapListHashSetNode.2223"* }
%"class.blink::HeapListHashSetNode.2223" = type { %"class.blink::Member.2226", %"class.blink::Member.2221", %"class.blink::Member.2221" }
%class.scoped_refptr.2225 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2226" = type { %"class.blink::MemberBase.2227" }
%"class.blink::MemberBase.2227" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2228" = type { %"class.blink::MemberBase.2229" }
%"class.blink::MemberBase.2229" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.1089", %"class.WTF::Vector.1111", i32, [4 x i8], %"class.blink::HeapHashMap.2232", i32, i8, [3 x i8] }>
%"class.blink::HeapHashMap.2232" = type { %"class.WTF::HashMap.2235" }
%"class.WTF::HashMap.2235" = type { %"class.WTF::HashTable.2236" }
%"class.WTF::HashTable.2236" = type <{ %"struct.WTF::KeyValuePair.2238"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2238" = type opaque
%"class.blink::Member.2239" = type { %"class.blink::MemberBase.2240" }
%"class.blink::MemberBase.2240" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2241" = type { %"class.blink::MemberBase.2242" }
%"class.blink::MemberBase.2242" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2243" = type { %"class.blink::MemberBase.2244" }
%"class.blink::MemberBase.2244" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.2245" = type { %"class.blink::MemberBase.2246" }
%"class.blink::MemberBase.2246" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2247" = type { %"class.blink::MemberBase.2248" }
%"class.blink::MemberBase.2248" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.2249" = type { %"class.blink::Member.2250" }
%"class.blink::Member.2250" = type { %"class.blink::MemberBase.2251" }
%"class.blink::MemberBase.2251" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3220" }
%"class.mojo::Remote.3220" = type { %"class.mojo::internal::InterfacePtrState.3221" }
%"class.mojo::internal::InterfacePtrState.3221" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3222" }
%"class.std::__1::unique_ptr.3222" = type { %"class.std::__1::__compressed_pair.3223" }
%"class.std::__1::__compressed_pair.3223" = type { %"struct.std::__1::__compressed_pair_elem.3224" }
%"struct.std::__1::__compressed_pair_elem.3224" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2252" = type { %"class.std::__1::__compressed_pair.2253" }
%"class.std::__1::__compressed_pair.2253" = type { %"struct.std::__1::__compressed_pair_elem.2254" }
%"struct.std::__1::__compressed_pair_elem.2254" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.2255, %"class.blink::WebVector.2257", %"class.base::WaitableEvent"* }
%class.scoped_refptr.2255 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.2256", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.2256" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.2265, i8, [7 x i8] }>
%class.scoped_refptr.2265 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.2266", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.2266" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2267" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2267" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2274" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2275" = type { %"class.std::__1::__compressed_pair.2276" }
%"class.std::__1::__compressed_pair.2276" = type { %"struct.std::__1::__compressed_pair_elem.2277" }
%"struct.std::__1::__compressed_pair_elem.2277" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.2281" = type { %"class.std::__1::__compressed_pair.2282" }
%"class.std::__1::__compressed_pair.2282" = type { %"struct.std::__1::__compressed_pair_elem.2283" }
%"struct.std::__1::__compressed_pair_elem.2283" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2287" }
%"class.blink::Member.2287" = type { %"class.blink::MemberBase.2288" }
%"class.blink::MemberBase.2288" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3230" }
%"class.mojo::AssociatedRemote.3230" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3231" }
%"class.mojo::internal::AssociatedInterfacePtrState.3231" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3232" }
%"class.std::__1::unique_ptr.3232" = type { %"class.std::__1::__compressed_pair.3233" }
%"class.std::__1::__compressed_pair.3233" = type { %"struct.std::__1::__compressed_pair_elem.3234" }
%"struct.std::__1::__compressed_pair_elem.3234" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2289" = type { %"class.blink::Member.2290" }
%"class.blink::Member.2290" = type { %"class.blink::MemberBase.2291" }
%"class.blink::MemberBase.2291" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3240" }
%"class.mojo::AssociatedRemote.3240" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3241" }
%"class.mojo::internal::AssociatedInterfacePtrState.3241" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3242" }
%"class.std::__1::unique_ptr.3242" = type { %"class.std::__1::__compressed_pair.3243" }
%"class.std::__1::__compressed_pair.3243" = type { %"struct.std::__1::__compressed_pair_elem.3244" }
%"struct.std::__1::__compressed_pair_elem.3244" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2292" }
%"class.blink::Member.2292" = type { %"class.blink::MemberBase.2293" }
%"class.blink::MemberBase.2293" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3250", %"class.blink::Member.1089", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3250" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3251" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.572" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3251" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2294" = type { %"class.blink::Member.2295" }
%"class.blink::Member.2295" = type { %"class.blink::MemberBase.2296" }
%"class.blink::MemberBase.2296" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3254", %"class.blink::Member.1089", %"class.mojo::AssociatedReceiver.3255" }
%"class.blink::ThreadState::PrefinalizerRegistration.3254" = type { i8 }
%"class.mojo::AssociatedReceiver.3255" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3256" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3256" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2297" }
%"class.blink::Member.2297" = type { %"class.blink::MemberBase.2298" }
%"class.blink::MemberBase.2298" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3259", %"class.blink::Member.1089", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3259" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.847, %"class.std::__1::unique_ptr.572", %"class.base::WeakPtrFactory.3260" }
%"class.base::WeakPtrFactory.3260" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2299" = type { %"class.blink::Member.2300" }
%"class.blink::Member.2300" = type { %"class.blink::MemberBase.2301" }
%"class.blink::MemberBase.2301" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3263", %"class.blink::Member.1089", %"class.mojo::AssociatedReceiver.3264" }
%"class.blink::ThreadState::PrefinalizerRegistration.3263" = type { i8 }
%"class.mojo::AssociatedReceiver.3264" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3265" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3265" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2302" = type { %"class.blink::MemberBase.2303" }
%"class.blink::MemberBase.2303" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2304" = type { %"class.blink::MemberBase.2305" }
%"class.blink::MemberBase.2305" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2306" = type { %"class.blink::MemberBase.2307" }
%"class.blink::MemberBase.2307" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2308" = type { %"class.blink::MemberBase.2309" }
%"class.blink::MemberBase.2309" = type { %"class.blink::HeapHashMap.2310"* }
%"class.blink::HeapHashMap.2310" = type opaque
%"class.mojo::StructPtr.2311" = type { %"class.std::__1::unique_ptr.2312" }
%"class.std::__1::unique_ptr.2312" = type { %"class.std::__1::__compressed_pair.2313" }
%"class.std::__1::__compressed_pair.2313" = type { %"struct.std::__1::__compressed_pair_elem.2314" }
%"struct.std::__1::__compressed_pair_elem.2314" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2315", %"class.mojo::InlinedStructPtr.1842" }
%"class.mojo::InlinedStructPtr.2315" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1842" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2319" = type { %"class.blink::MemberBase.2320" }
%"class.blink::MemberBase.2320" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2321" = type { %"class.absl::optional_internal::optional_data.2322" }
%"class.absl::optional_internal::optional_data.2322" = type { %"class.absl::optional_internal::optional_data_base.2323" }
%"class.absl::optional_internal::optional_data_base.2323" = type { %"class.absl::optional_internal::optional_data_dtor_base.2324" }
%"class.absl::optional_internal::optional_data_dtor_base.2324" = type { i8, %union.anon.2325 }
%union.anon.2325 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.835", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map.1934" = type { %"class.base::internal::flat_tree.1935" }
%"class.base::internal::flat_tree.1935" = type { %"class.std::__1::vector.1936" }
%"class.std::__1::vector.1936" = type { %"class.std::__1::__vector_base.1937" }
%"class.std::__1::__vector_base.1937" = type { %"struct.std::__1::pair.1938"*, %"struct.std::__1::pair.1938"*, %"class.std::__1::__compressed_pair.1939" }
%"struct.std::__1::pair.1938" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.std::__1::__compressed_pair.1939" = type { %"struct.std::__1::__compressed_pair_elem.1940" }
%"struct.std::__1::__compressed_pair_elem.1940" = type { %"struct.std::__1::pair.1938"* }
%"class.blink::Member.1944" = type { %"class.blink::MemberBase.1945" }
%"class.blink::MemberBase.1945" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1946" = type { %"class.absl::optional_internal::optional_data.1947" }
%"class.absl::optional_internal::optional_data.1947" = type { %"class.absl::optional_internal::optional_data_base.1948" }
%"class.absl::optional_internal::optional_data_base.1948" = type { %"class.absl::optional_internal::optional_data_dtor_base.1949" }
%"class.absl::optional_internal::optional_data_dtor_base.1949" = type { i8, %union.anon.1950 }
%union.anon.1950 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1951" }
%"class.blink::HeapHashSet.1951" = type { %"class.WTF::HashSet.1954" }
%"class.WTF::HashSet.1954" = type { %"class.WTF::HashTable.1955" }
%"class.WTF::HashTable.1955" = type <{ %"class.blink::WeakMember.1957"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1957" = type opaque
%"class.blink::Member.837" = type { %"class.blink::MemberBase.838" }
%"class.blink::MemberBase.838" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.839" = type { %"class.blink::MemberBase.840" }
%"class.blink::MemberBase.840" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.841" = type { %"class.blink::MemberBase.842" }
%"class.blink::MemberBase.842" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.843" = type { %"class.WTF::VectorBuffer.844" }
%"class.WTF::VectorBuffer.844" = type { %"class.WTF::VectorBufferBase.845" }
%"class.WTF::VectorBufferBase.845" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.940" }
%"class.std::__1::unique_ptr.940" = type { %"class.std::__1::__compressed_pair.941" }
%"class.std::__1::__compressed_pair.941" = type { %"struct.std::__1::__compressed_pair_elem.942" }
%"struct.std::__1::__compressed_pair_elem.942" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.505", i32, i8, [3 x i8], %"class.blink::HeapVector.507", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.516", %"class.blink::Member.518", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.527", %"class.blink::Member.649", %"class.blink::Member.651", i8 }>
%"class.blink::Supplementable.948" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.949" }
%"class.blink::HeapHashMap.949" = type { %"class.WTF::HashMap.952" }
%"class.WTF::HashMap.952" = type { %"class.WTF::HashTable.953" }
%"class.WTF::HashTable.953" = type <{ %"struct.WTF::KeyValuePair.955"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.955" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.956" = type { i8 }
%"class.blink::Member.957" = type { %"class.blink::MemberBase.958" }
%"class.blink::MemberBase.958" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.681" = type { %"class.blink::MemberBase.682" }
%"class.blink::MemberBase.682" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.799", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.807", %"class.WTF::Vector.807", i8, i32, %"class.blink::Member.812", %"class.blink::Member.500", %"class.blink::Member.1125", %"class.blink::Member.1127", %"class.blink::Member.1129", %"class.blink::Member.1131", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1133", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1139", %"class.blink::Member.1141", %"class.blink::Member.744", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1143", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.720", %"class.blink::Member.698", %"class.blink::Member.1100", %"class.blink::Member.698", %"class.blink::Member.698", %"class.blink::Member.698", %"class.blink::UserActionElementSet", %"class.blink::Member.1158", double, double, i64, i64, %"class.blink::HeapHashSet.1160", %"class.blink::HeapHashSet.1167", i16, i8, %"class.blink::Member.1174", %"class.blink::Member.1176", %"class.blink::Member.1559", %"class.blink::Member.1561", %"class.blink::TextLinkColors", %"class.blink::Member.1563", i8, [7 x i8], %"class.blink::HeapHashMap.1565", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.698", %"class.WTF::Vector.1572", %"class.blink::Member.1577", %"class.blink::Member.1581", i8, %"class.blink::Member.698", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1583", %"class.blink::HeapVector.1585", %"class.std::__1::unique_ptr.1593", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1599", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1612", %"class.WTF::Vector.1614", i8, i8, %"class.std::__1::unique_ptr.1619", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.720", %"class.blink::HeapVector.1625", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1633", i8, i32, %"class.blink::Member.1635", %"class.blink::Member.1637", %"class.blink::Member.1639", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1641", %"class.WTF::HashMap.1643", %"class.blink::Member.1648", %"class.blink::Member.1650", %"class.blink::Member.1652", %"class.blink::Member.1654", %"class.blink::Member.681", %"class.blink::Member.681", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1656", i8, i32, %"class.blink::Member.1663", %"class.blink::Member.1665", i32, %"class.blink::Member.1667", %"class.blink::Member.1669", %"class.blink::Member.1671", %"class.std::__1::unique_ptr.1673", i64, %"class.std::__1::unique_ptr.1679", i32, i32, %"class.blink::Member.1690", %"class.blink::Member.1692", %"class.blink::Member.1694", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1696", %"class.WTF::Vector.1111", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1698", %"class.blink::Member.1705", %"class.std::__1::unique_ptr.1707", %"class.blink::Member.1713", i8, i8, %"class.WTF::String", %"class.blink::Member.1715", i8, [7 x i8], %"class.blink::HeapHashMap.1717", %"class.blink::HeapObserverSet.1724", %"class.blink::Member.1732", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1734", i32, i8, i8, %"class.blink::WeakMember.1736", %"class.blink::Member.1737" }
%"class.blink::Supplementable.799" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.800" }
%"class.blink::HeapHashMap.800" = type { %"class.WTF::HashMap.803" }
%"class.WTF::HashMap.803" = type { %"class.WTF::HashTable.804" }
%"class.WTF::HashTable.804" = type <{ %"struct.WTF::KeyValuePair.806"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.806" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.1770", %"class.blink::Member.1771", %"class.blink::Member.1773", %"class.blink::Member.1777", %class.scoped_refptr.1148, %class.scoped_refptr.1148, %"class.blink::Member.1779", %"class.blink::Member.1781", %"class.blink::Member.1787", %"class.blink::Member.1791", %"class.blink::Member.1843", %"class.blink::HeapHashMap.1845", %"class.blink::HeapHashSet.1852", %"class.blink::HeapHashSet.1852", %"class.blink::HeapHashMap.1859", %"class.blink::HeapVector.1866", %"class.blink::Member.1873", %"class.blink::HeapTaskRunnerTimer.1875", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1877", %"class.WTF::Vector.1884", %"class.blink::HeapHashSet.1890", %"class.blink::HeapHashSet.1890", %"class.std::__1::unique_ptr.1896", %"class.base::WeakPtr.1836", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.1908", i8, i8, %"class.base::WeakPtrFactory.1910" }
%"class.blink::ThreadState::PrefinalizerRegistration.1770" = type { i8 }
%"class.blink::Member.1771" = type { %"class.blink::MemberBase.1772" }
%"class.blink::MemberBase.1772" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1773" = type { %"class.blink::MemberBase.1774" }
%"class.blink::MemberBase.1774" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type { i32 (...)** }
%"class.blink::Member.1777" = type { %"class.blink::MemberBase.1778" }
%"class.blink::MemberBase.1778" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.1779" = type { %"class.blink::MemberBase.1780" }
%"class.blink::MemberBase.1780" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1781" = type { %"class.blink::MemberBase.1782" }
%"class.blink::MemberBase.1782" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1785" }
%"class.blink::Member.1785" = type { %"class.blink::MemberBase.1786" }
%"class.blink::MemberBase.1786" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1787" = type { %"class.blink::MemberBase.1788" }
%"class.blink::MemberBase.1788" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1791" = type { %"class.blink::MemberBase.1792" }
%"class.blink::MemberBase.1792" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1795", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1797", %"class.WTF::HashSet.1802", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1806", %"class.std::__1::map.1813", %"class.std::__1::map.1824", %"class.std::__1::unique_ptr.1833", %"class.blink::Member.1781", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.1840", %"class.mojo::InlinedStructPtr.1842", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1795" = type { %"class.blink::MemberBase.1796" }
%"class.blink::MemberBase.1796" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1797" = type { %"class.WTF::HashTable.1798" }
%"class.WTF::HashTable.1798" = type <{ %"struct.WTF::KeyValuePair.1801"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1801" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1802" = type { %"class.WTF::HashTable.1803" }
%"class.WTF::HashTable.1803" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1806" = type { %"class.WTF::HashMap.1809" }
%"class.WTF::HashMap.1809" = type { %"class.WTF::HashTable.1810" }
%"class.WTF::HashTable.1810" = type <{ %"struct.WTF::KeyValuePair.1812"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1812" = type opaque
%"class.std::__1::map.1813" = type { %"class.std::__1::__tree.1814" }
%"class.std::__1::__tree.1814" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1815", %"class.std::__1::__compressed_pair.1819" }
%"class.std::__1::__compressed_pair.1815" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"class.std::__1::__compressed_pair.1819" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.std::__1::map.1824" = type { %"class.std::__1::__tree.1825" }
%"class.std::__1::__tree.1825" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1826", %"class.std::__1::__compressed_pair.1830" }
%"class.std::__1::__compressed_pair.1826" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"class.std::__1::__compressed_pair.1830" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"class.std::__1::unique_ptr.1833" = type { %"class.std::__1::__compressed_pair.1834" }
%"class.std::__1::__compressed_pair.1834" = type { %"struct.std::__1::__compressed_pair_elem.1835" }
%"struct.std::__1::__compressed_pair_elem.1835" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.1836", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.blink::Member.1840" = type { %"class.blink::MemberBase.1841" }
%"class.blink::MemberBase.1841" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.blink::Member.1843" = type { %"class.blink::MemberBase.1844" }
%"class.blink::MemberBase.1844" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.1845" = type { %"class.WTF::HashMap.1848" }
%"class.WTF::HashMap.1848" = type { %"class.WTF::HashTable.1849" }
%"class.WTF::HashTable.1849" = type <{ %"struct.WTF::KeyValuePair.1851"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1851" = type opaque
%"class.blink::HeapHashSet.1852" = type { %"class.WTF::HashSet.1855" }
%"class.WTF::HashSet.1855" = type { %"class.WTF::HashTable.1856" }
%"class.WTF::HashTable.1856" = type <{ %"class.blink::WeakMember.1858"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1858" = type { %"class.blink::MemberBase" }
%"class.blink::HeapHashMap.1859" = type { %"class.WTF::HashMap.1862" }
%"class.WTF::HashMap.1862" = type { %"class.WTF::HashTable.1863" }
%"class.WTF::HashTable.1863" = type <{ %"struct.WTF::KeyValuePair.1865"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1865" = type opaque
%"class.blink::HeapVector.1866" = type { %"class.WTF::Vector.1869" }
%"class.WTF::Vector.1869" = type { %"class.WTF::VectorBuffer.1870" }
%"class.WTF::VectorBuffer.1870" = type { %"class.WTF::VectorBufferBase.1871" }
%"class.WTF::VectorBufferBase.1871" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::HeapTaskRunnerTimer.1875" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1876", { i64, i64 } }
%"class.blink::WeakMember.1876" = type { %"class.blink::MemberBase.1126" }
%"class.blink::HeapHashMap.1877" = type { %"class.WTF::HashMap.1880" }
%"class.WTF::HashMap.1880" = type { %"class.WTF::HashTable.1881" }
%"class.WTF::HashTable.1881" = type <{ %"struct.WTF::KeyValuePair.1883"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1883" = type opaque
%"class.WTF::Vector.1884" = type { %"class.WTF::VectorBuffer.1885" }
%"class.WTF::VectorBuffer.1885" = type { %"class.WTF::VectorBufferBase.1886" }
%"class.WTF::VectorBufferBase.1886" = type { %class.scoped_refptr.1887*, i32, i32 }
%"class.blink::HeapHashSet.1890" = type { %"class.WTF::HashSet.1893" }
%"class.WTF::HashSet.1893" = type { %"class.WTF::HashTable.1894" }
%"class.WTF::HashTable.1894" = type <{ %"class.blink::Member.350"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1896" = type { %"class.std::__1::__compressed_pair.1897" }
%"class.std::__1::__compressed_pair.1897" = type { %"struct.std::__1::__compressed_pair_elem.1898" }
%"struct.std::__1::__compressed_pair_elem.1898" = type { %"class.WTF::HashSet.1899"* }
%"class.base::WeakPtr.1836" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1906" }
%"class.blink::Member.1906" = type { %"class.blink::MemberBase.1907" }
%"class.blink::MemberBase.1907" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1908" = type { %"class.blink::MemberBase.1909" }
%"class.blink::MemberBase.1909" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1910" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1129" = type { %"class.blink::MemberBase.1130" }
%"class.blink::MemberBase.1130" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1131" = type { %"class.blink::MemberBase.1132" }
%"class.blink::MemberBase.1132" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1133" = type { %"class.std::__1::__compressed_pair.1134" }
%"class.std::__1::__compressed_pair.1134" = type { %"struct.std::__1::__compressed_pair_elem.1135" }
%"struct.std::__1::__compressed_pair_elem.1135" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.1140" }
%"class.blink::MemberBase.1140" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1141" = type { %"class.blink::MemberBase.1142" }
%"class.blink::MemberBase.1142" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.1143" = type { %"class.WTF::VectorBuffer.1144" }
%"class.WTF::VectorBuffer.1144" = type { %"class.WTF::VectorBufferBase.1145" }
%"class.WTF::VectorBufferBase.1145" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.147 }
%"class.blink::Member.1100" = type { %"class.blink::MemberBase.1101" }
%"class.blink::MemberBase.1101" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.681", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.671", %"class.blink::Member.671", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1151" }
%"class.blink::HeapHashMap.1151" = type { %"class.WTF::HashMap.1154" }
%"class.WTF::HashMap.1154" = type { %"class.WTF::HashTable.1155" }
%"class.WTF::HashTable.1155" = type <{ %"struct.WTF::KeyValuePair.1157"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1157" = type opaque
%"class.blink::Member.1158" = type { %"class.blink::MemberBase.1159" }
%"class.blink::MemberBase.1159" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1160" = type { %"class.WTF::HashSet.1163" }
%"class.WTF::HashSet.1163" = type { %"class.WTF::HashTable.1164" }
%"class.WTF::HashTable.1164" = type <{ %"class.blink::WeakMember.1166"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1166" = type opaque
%"class.blink::HeapHashSet.1167" = type { %"class.WTF::HashSet.1170" }
%"class.WTF::HashSet.1170" = type { %"class.WTF::HashTable.1171" }
%"class.WTF::HashTable.1171" = type <{ %"class.blink::WeakMember.1173"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1173" = type opaque
%"class.blink::Member.1174" = type { %"class.blink::MemberBase.1175" }
%"class.blink::MemberBase.1175" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.681", i32, i32, i32, %"class.blink::Member.744", %"class.blink::Member.1180", %"class.blink::Member.1207", %"class.blink::HeapHashMap.1209", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1216", %"class.blink::HeapHashSet.1216", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1222", %"class.blink::Member.1236", %"class.blink::Member.1266", %"class.blink::Member.1268", %"class.blink::Member.1274", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1432", %"class.blink::Member.1438", %"class.blink::HeapHashMap.1499", %"class.blink::HeapHashMap.1506", %"class.std::__1::unique_ptr.1513", i32, %"class.blink::HeapVector.1519", %"class.blink::HeapVector.1519", %"class.blink::HeapVector.1192", %"class.blink::HeapHashSet.1527", %"class.blink::HeapHashMap.1534", %"class.blink::Member.1541", %"class.blink::HeapHashMap.1543", %class.scoped_refptr.1550, %class.scoped_refptr.1551, %"class.blink::Member.420", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1552", %"class.blink::Member.698" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.673", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1184", %"class.blink::HeapVector.1192", i8 }>
%"class.blink::HeapVector.1184" = type { %"class.WTF::Vector.1187" }
%"class.WTF::Vector.1187" = type { %"class.WTF::VectorBuffer.1188" }
%"class.WTF::VectorBuffer.1188" = type { %"class.WTF::VectorBufferBase.1189" }
%"class.WTF::VectorBufferBase.1189" = type { %"class.blink::Member.1190"*, i32, i32 }
%"class.blink::Member.1190" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1203", %"class.blink::Member.1205", %"class.blink::Member.1205", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1203" = type <{ %"class.blink::Member.1205"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1206" }
%"class.blink::MemberBase.1206" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.671", %"class.blink::Member.1205", %"class.blink::Member.1205" }
%"class.blink::Member.1207" = type { %"class.blink::MemberBase.1208" }
%"class.blink::MemberBase.1208" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1209" = type { %"class.WTF::HashMap.1212" }
%"class.WTF::HashMap.1212" = type { %"class.WTF::HashTable.1213" }
%"class.WTF::HashTable.1213" = type <{ %"struct.WTF::KeyValuePair.1215"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1215" = type opaque
%"class.blink::HeapHashSet.1216" = type { %"class.WTF::HashSet.1219" }
%"class.WTF::HashSet.1219" = type { %"class.WTF::HashTable.1220" }
%"class.WTF::HashTable.1220" = type <{ %"class.blink::Member.673"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1222" = type { %"class.blink::MemberBase.1223" }
%"class.blink::MemberBase.1223" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1226", %"class.blink::Member.1228" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1226" = type { %"class.blink::MemberBase.1227" }
%"class.blink::MemberBase.1227" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type opaque
%"class.blink::Member.1228" = type { %"class.blink::MemberBase.1229" }
%"class.blink::MemberBase.1229" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1232", %"class.blink::Member.1234" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Member.1232" = type { %"class.blink::MemberBase.1233" }
%"class.blink::MemberBase.1233" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1234" = type { %"class.blink::MemberBase.1235" }
%"class.blink::MemberBase.1235" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1752", %"class.blink::Member.1228", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.1759] }
%"class.blink::HeapVector.1752" = type { %"class.WTF::Vector.1755" }
%"class.WTF::Vector.1755" = type { %"class.WTF::VectorBuffer.1756" }
%"class.WTF::VectorBuffer.1756" = type { %"class.WTF::VectorBufferBase.1757" }
%"class.WTF::VectorBufferBase.1757" = type { %"class.blink::Member.1234"*, i32, i32 }
%class.sk_sp.1759 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1760, i32, %"class.absl::optional.1761", i8, i32 }
%class.sk_sp.1760 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1761" = type { %"class.absl::optional_internal::optional_data.1762" }
%"class.absl::optional_internal::optional_data.1762" = type { %"class.absl::optional_internal::optional_data_base.1763" }
%"class.absl::optional_internal::optional_data_base.1763" = type { %"class.absl::optional_internal::optional_data_dtor_base.1764" }
%"class.absl::optional_internal::optional_data_dtor_base.1764" = type { i8, %union.anon.1765 }
%union.anon.1765 = type { %struct.SkRect }
%"class.blink::Member.1236" = type { %"class.blink::MemberBase.1237" }
%"class.blink::MemberBase.1237" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.681", %class.scoped_refptr.1247, %"class.blink::SelectorFilter", %"class.blink::Member.1207", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1240" }
%"class.blink::HeapHashMap.1240" = type { %"class.WTF::HashMap.1243" }
%"class.WTF::HashMap.1243" = type { %"class.WTF::HashTable.1244" }
%"class.WTF::HashTable.1244" = type <{ %"struct.WTF::KeyValuePair.1246"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1246" = type opaque
%class.scoped_refptr.1247 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1248", %"class.std::__1::unique_ptr.1260" }
%"class.blink::HeapVector.1248" = type { %"class.WTF::Vector.1251" }
%"class.WTF::Vector.1251" = type { %"class.WTF::VectorBuffer.1252" }
%"class.WTF::VectorBuffer.1252" = type { %"class.WTF::VectorBufferBase.1253" }
%"class.WTF::VectorBufferBase.1253" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.698", %"class.WTF::Vector.1254" }
%"class.WTF::Vector.1254" = type { %"class.WTF::VectorBuffer.1255" }
%"class.WTF::VectorBuffer.1255" = type { %"class.WTF::VectorBufferBase.1256", [16 x i8] }
%"class.WTF::VectorBufferBase.1256" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1260" = type { %"class.std::__1::__compressed_pair.1261" }
%"class.std::__1::__compressed_pair.1261" = type { %"struct.std::__1::__compressed_pair_elem.1262" }
%"struct.std::__1::__compressed_pair_elem.1262" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1266" = type { %"class.blink::MemberBase.1267" }
%"class.blink::MemberBase.1267" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1268" = type { %"class.blink::MemberBase.1269" }
%"class.blink::MemberBase.1269" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1272", i8, [7 x i8] }>
%"class.blink::Member.1272" = type { %"class.blink::MemberBase.1273" }
%"class.blink::MemberBase.1273" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1274" = type { %"class.blink::MemberBase.1275" }
%"class.blink::MemberBase.1275" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1296", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1278", %"class.WTF::HashMap.1278", %"class.WTF::HashMap.1278", %"class.WTF::HashMap.1283", %class.scoped_refptr.1288, %class.scoped_refptr.1295, %class.scoped_refptr.1294, %"class.WTF::Vector.767", %"class.WTF::Vector.767", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1278" = type { %"class.WTF::HashTable.1279" }
%"class.WTF::HashTable.1279" = type <{ %"struct.WTF::KeyValuePair.1282"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1282" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3187 }
%class.scoped_refptr.3187 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1289", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1291", %"union.blink::InvalidationSet::Backing.1292", %"union.blink::InvalidationSet::Backing.1293", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1289" = type { %"class.base::RefCounted.1290" }
%"class.base::RefCounted.1290" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1291" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1292" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1293" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1283" = type { %"class.WTF::HashTable.1284" }
%"class.WTF::HashTable.1284" = type <{ %"struct.WTF::KeyValuePair.1287"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1287" = type opaque
%class.scoped_refptr.1288 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1294, %class.scoped_refptr.1294 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1289", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1291", %"union.blink::InvalidationSet::Backing.1292", %"union.blink::InvalidationSet::Backing.1293", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1295 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1294 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1296" = type { %"class.blink::MemberBase.1297" }
%"class.blink::MemberBase.1297" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1300", %"class.blink::HeapHashMap.1300", %"class.blink::HeapHashMap.1300", %"class.blink::HeapHashMap.1300", %"class.blink::HeapVector.1307", %"class.blink::HeapVector.1307", %"class.blink::HeapVector.1307", %"class.blink::HeapVector.1307", %"class.blink::HeapVector.1307", %"class.blink::HeapVector.1307", %"class.blink::HeapVector.1307", %"class.blink::HeapVector.1307", %"class.blink::HeapVector.1307", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1343", %"class.blink::HeapVector.1351", %"class.blink::HeapVector.1359", %"class.blink::HeapVector.1376", %"class.blink::HeapVector.1384", %"class.blink::HeapVector.1392", %"class.blink::HeapVector.1401", %"class.WTF::Vector.1408", i32, %"class.blink::Member.1414" }
%"class.blink::HeapHashMap.1300" = type { %"class.WTF::HashMap.1303" }
%"class.WTF::HashMap.1303" = type { %"class.WTF::HashTable.1304" }
%"class.WTF::HashTable.1304" = type <{ %"struct.WTF::KeyValuePair.1306"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1306" = type { %"class.WTF::AtomicString", %"class.blink::Member.3197" }
%"class.blink::Member.3197" = type { %"class.blink::MemberBase.3198" }
%"class.blink::MemberBase.3198" = type { %"class.blink::HeapVector.1307"* }
%"class.blink::HeapVector.1307" = type { %"class.WTF::Vector.1310" }
%"class.WTF::Vector.1310" = type { %"class.WTF::VectorBuffer.1311" }
%"class.WTF::VectorBuffer.1311" = type { %"class.WTF::VectorBufferBase.1312" }
%"class.WTF::VectorBufferBase.1312" = type { %"class.blink::Member.1313"*, i32, i32 }
%"class.blink::Member.1313" = type { %"class.blink::MemberBase.1314" }
%"class.blink::MemberBase.1314" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1317", i64, [4 x i32] }
%"class.blink::Member.1317" = type { %"class.blink::MemberBase.1318" }
%"class.blink::MemberBase.1318" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.709", %"class.blink::Member.1338" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1343" = type { %"class.WTF::Vector.1346" }
%"class.WTF::Vector.1346" = type { %"class.WTF::VectorBuffer.1347" }
%"class.WTF::VectorBuffer.1347" = type { %"class.WTF::VectorBufferBase.1348" }
%"class.WTF::VectorBufferBase.1348" = type { %"class.blink::Member.1349"*, i32, i32 }
%"class.blink::Member.1349" = type { %"class.blink::MemberBase.3193" }
%"class.blink::MemberBase.3193" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.709", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1351" = type { %"class.WTF::Vector.1354" }
%"class.WTF::Vector.1354" = type { %"class.WTF::VectorBuffer.1355" }
%"class.WTF::VectorBuffer.1355" = type { %"class.WTF::VectorBufferBase.1356" }
%"class.WTF::VectorBufferBase.1356" = type { %"class.blink::Member.1357"*, i32, i32 }
%"class.blink::Member.1357" = type { %"class.blink::MemberBase.3194" }
%"class.blink::MemberBase.3194" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.709" }
%"class.blink::HeapVector.1359" = type { %"class.WTF::Vector.1362" }
%"class.WTF::Vector.1362" = type { %"class.WTF::VectorBuffer.1363" }
%"class.WTF::VectorBuffer.1363" = type { %"class.WTF::VectorBufferBase.1364" }
%"class.WTF::VectorBufferBase.1364" = type { %"class.blink::Member.1365"*, i32, i32 }
%"class.blink::Member.1365" = type { %"class.blink::MemberBase.1366" }
%"class.blink::MemberBase.1366" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1367", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1367" = type { %"class.WTF::Vector.1370" }
%"class.WTF::Vector.1370" = type { %"class.WTF::VectorBuffer.1371" }
%"class.WTF::VectorBuffer.1371" = type { %"class.WTF::VectorBufferBase.1372" }
%"class.WTF::VectorBufferBase.1372" = type { %"class.blink::Member.1373"*, i32, i32 }
%"class.blink::Member.1373" = type opaque
%"class.blink::HeapVector.1376" = type { %"class.WTF::Vector.1379" }
%"class.WTF::Vector.1379" = type { %"class.WTF::VectorBuffer.1380" }
%"class.WTF::VectorBuffer.1380" = type { %"class.WTF::VectorBufferBase.1381" }
%"class.WTF::VectorBufferBase.1381" = type { %"class.blink::Member.1382"*, i32, i32 }
%"class.blink::Member.1382" = type { %"class.blink::MemberBase.3195" }
%"class.blink::MemberBase.3195" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.709" }
%"class.blink::HeapVector.1384" = type { %"class.WTF::Vector.1387" }
%"class.WTF::Vector.1387" = type { %"class.WTF::VectorBuffer.1388" }
%"class.WTF::VectorBuffer.1388" = type { %"class.WTF::VectorBufferBase.1389" }
%"class.WTF::VectorBufferBase.1389" = type { %"class.blink::Member.1390"*, i32, i32 }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.3196" }
%"class.blink::MemberBase.3196" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.420", %"class.blink::Member.420", %"class.blink::Member.420", %"class.blink::Member.420", %"class.blink::Member.420", %"class.blink::Member.420", %"class.blink::Member.420", %"class.blink::Member.420", %"class.blink::Member.420", %"class.blink::Member.420", i32, [4 x i8] }>
%"class.blink::HeapVector.1392" = type { %"class.WTF::Vector.1395" }
%"class.WTF::Vector.1395" = type { %"class.WTF::VectorBuffer.1396" }
%"class.WTF::VectorBuffer.1396" = type { %"class.WTF::VectorBufferBase.1397" }
%"class.WTF::VectorBufferBase.1397" = type { %"class.blink::Member.1398"*, i32, i32 }
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.420", %"class.blink::Member.420", %"class.blink::Member.420", %"class.blink::Member.420", %"class.blink::Member.420" }
%"class.blink::HeapVector.1401" = type { %"class.WTF::Vector.1404" }
%"class.WTF::Vector.1404" = type { %"class.WTF::VectorBuffer.1405" }
%"class.WTF::VectorBuffer.1405" = type { %"class.WTF::VectorBufferBase.1406" }
%"class.WTF::VectorBufferBase.1406" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1317", i32, i32 }
%"class.WTF::Vector.1408" = type { %"class.WTF::VectorBuffer.1409" }
%"class.WTF::VectorBuffer.1409" = type { %"class.WTF::VectorBufferBase.1410" }
%"class.WTF::VectorBufferBase.1410" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1411, i8, [7 x i8] }>
%class.scoped_refptr.1411 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1414" = type { %"class.blink::MemberBase.1415" }
%"class.blink::MemberBase.1415" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1418", %"class.blink::HeapHashMap.1418", %"class.blink::HeapHashMap.1418", %"class.blink::HeapHashMap.1418" }
%"class.blink::HeapHashMap.1418" = type { %"class.WTF::HashMap.1421" }
%"class.WTF::HashMap.1421" = type { %"class.WTF::HashTable.1422" }
%"class.WTF::HashTable.1422" = type <{ %"struct.WTF::KeyValuePair.1424"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1424" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1425" }
%"class.blink::HeapHashMap.1425" = type { %"class.WTF::HashMap.1428" }
%"class.WTF::HashMap.1428" = type { %"class.WTF::HashTable.1429" }
%"class.WTF::HashTable.1429" = type <{ %"struct.WTF::KeyValuePair.1431"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1431" = type { %"class.blink::Member.679", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3188", %"class.WTF::Vector.3188" }
%"class.WTF::Vector.3188" = type { %"class.WTF::VectorBuffer.3189" }
%"class.WTF::VectorBuffer.3189" = type { %"class.WTF::VectorBufferBase.3190" }
%"class.WTF::VectorBufferBase.3190" = type { %class.scoped_refptr.3187*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.671", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1432" = type { %"class.WTF::HashSet.1435" }
%"class.WTF::HashSet.1435" = type { %"class.WTF::HashTable.1436" }
%"class.WTF::HashTable.1436" = type <{ %"class.blink::Member.698"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1438" = type { %"class.blink::MemberBase.1439" }
%"class.blink::MemberBase.1439" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type { %"class.blink::FontSelector", %"class.blink::WeakMember.1440", %"class.blink::Member.1442", %"class.blink::HeapHashSet.1480", %"class.blink::GenericFontFamilySettings" }
%"class.blink::WeakMember.1440" = type { %"class.blink::MemberBase.1441" }
%"class.blink::MemberBase.1441" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.1442" = type { %"class.blink::MemberBase.1443" }
%"class.blink::MemberBase.1443" = type { %"class.blink::FontFaceCache"* }
%"class.blink::FontFaceCache" = type <{ %"class.blink::HeapHashMap.1446", %"class.blink::HeapHashMap.1453", %"class.blink::HeapHashMap.1460", %"class.blink::HeapLinkedHashSet", i32, [4 x i8] }>
%"class.blink::HeapHashMap.1446" = type { %"class.WTF::HashMap.1449" }
%"class.WTF::HashMap.1449" = type { %"class.WTF::HashTable.1450" }
%"class.WTF::HashTable.1450" = type <{ %"struct.WTF::KeyValuePair.1452"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1452" = type opaque
%"class.blink::HeapHashMap.1453" = type { %"class.WTF::HashMap.1456" }
%"class.WTF::HashMap.1456" = type { %"class.WTF::HashTable.1457" }
%"class.WTF::HashTable.1457" = type <{ %"struct.WTF::KeyValuePair.1459"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1459" = type opaque
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet.1469" }
%"class.WTF::LinkedHashSet.1469" = type { %"class.WTF::HashMap.1470", %"class.WTF::VectorBackedLinkedList.1474" }
%"class.WTF::HashMap.1470" = type { %"class.WTF::HashTable.1471" }
%"class.WTF::HashTable.1471" = type <{ %"struct.WTF::KeyValuePair.1473"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1473" = type <{ %"class.blink::Member.402", i32, [4 x i8] }>
%"class.WTF::VectorBackedLinkedList.1474" = type { %"class.WTF::Vector.1475", i32, i32 }
%"class.WTF::Vector.1475" = type { %"class.WTF::VectorBuffer.1476" }
%"class.WTF::VectorBuffer.1476" = type { %"class.WTF::VectorBufferBase.1477" }
%"class.WTF::VectorBufferBase.1477" = type { %"class.WTF::VectorBackedLinkedListNode.1478"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1478" = type { i32, i32, %"class.blink::Member.402" }
%"class.blink::HeapHashSet.1480" = type { %"class.WTF::HashSet.1483" }
%"class.WTF::HashSet.1483" = type { %"class.WTF::HashTable.1484" }
%"class.WTF::HashTable.1484" = type <{ %"class.blink::WeakMember.1486"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1486" = type opaque
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.1487", %"class.WTF::HashMap.1487", %"class.WTF::HashMap.1487", %"class.WTF::HashMap.1487", %"class.WTF::HashMap.1487", %"class.WTF::HashMap.1487", %"class.WTF::HashMap.1487", %"class.std::__1::unique_ptr.1492" }
%"class.WTF::HashMap.1487" = type { %"class.WTF::HashTable.1488" }
%"class.WTF::HashTable.1488" = type <{ %"struct.WTF::KeyValuePair.1491"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1491" = type opaque
%"class.std::__1::unique_ptr.1492" = type { %"class.std::__1::__compressed_pair.1493" }
%"class.std::__1::__compressed_pair.1493" = type { %"struct.std::__1::__compressed_pair_elem.1494" }
%"struct.std::__1::__compressed_pair_elem.1494" = type { %"class.WTF::Vector.1495"* }
%"class.WTF::Vector.1495" = type opaque
%"class.blink::HeapHashMap.1499" = type { %"class.WTF::HashMap.1502" }
%"class.WTF::HashMap.1502" = type { %"class.WTF::HashTable.1503" }
%"class.WTF::HashTable.1503" = type <{ %"struct.WTF::KeyValuePair.1505"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1505" = type opaque
%"class.blink::HeapHashMap.1506" = type { %"class.WTF::HashMap.1509" }
%"class.WTF::HashMap.1509" = type { %"class.WTF::HashTable.1510" }
%"class.WTF::HashTable.1510" = type <{ %"struct.WTF::KeyValuePair.1512"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1512" = type opaque
%"class.std::__1::unique_ptr.1513" = type { %"class.std::__1::__compressed_pair.1514" }
%"class.std::__1::__compressed_pair.1514" = type { %"struct.std::__1::__compressed_pair_elem.1515" }
%"struct.std::__1::__compressed_pair_elem.1515" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1519" = type { %"class.WTF::Vector.1522" }
%"class.WTF::Vector.1522" = type { %"class.WTF::VectorBuffer.1523" }
%"class.WTF::VectorBuffer.1523" = type { %"class.WTF::VectorBufferBase.1524" }
%"class.WTF::VectorBufferBase.1524" = type { %"struct.std::__1::pair.1525"*, i32, i32 }
%"struct.std::__1::pair.1525" = type opaque
%"class.blink::HeapVector.1192" = type { %"class.WTF::Vector.1195" }
%"class.WTF::Vector.1195" = type { %"class.WTF::VectorBuffer.1196" }
%"class.WTF::VectorBuffer.1196" = type { %"class.WTF::VectorBufferBase.1197" }
%"class.WTF::VectorBufferBase.1197" = type { %"struct.std::__1::pair.1198"*, i32, i32 }
%"struct.std::__1::pair.1198" = type opaque
%"class.blink::HeapHashSet.1527" = type { %"class.WTF::HashSet.1530" }
%"class.WTF::HashSet.1530" = type { %"class.WTF::HashTable.1531" }
%"class.WTF::HashTable.1531" = type <{ %"class.blink::WeakMember.1533"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1533" = type { %"class.blink::MemberBase.745" }
%"class.blink::HeapHashMap.1534" = type { %"class.WTF::HashMap.1537" }
%"class.WTF::HashMap.1537" = type { %"class.WTF::HashTable.1538" }
%"class.WTF::HashTable.1538" = type <{ %"struct.WTF::KeyValuePair.1540"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1540" = type { %"class.WTF::AtomicString", %"class.blink::Member.1365" }
%"class.blink::Member.1541" = type { %"class.blink::MemberBase.1542" }
%"class.blink::MemberBase.1542" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1543" = type { %"class.WTF::HashMap.1546" }
%"class.WTF::HashMap.1546" = type { %"class.WTF::HashTable.1547" }
%"class.WTF::HashTable.1547" = type <{ %"struct.WTF::KeyValuePair.1549"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1549" = type opaque
%class.scoped_refptr.1550 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.1551 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type opaque
%"class.blink::HeapHashSet.1552" = type { %"class.WTF::HashSet.1555" }
%"class.WTF::HashSet.1555" = type { %"class.WTF::HashTable.1556" }
%"class.WTF::HashTable.1556" = type <{ %"class.blink::Member.1558"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1558" = type opaque
%"class.blink::Member.1559" = type { %"class.blink::MemberBase.1560" }
%"class.blink::MemberBase.1560" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.673", %"class.blink::HeapVector.738" }
%"class.blink::Member.1561" = type { %"class.blink::MemberBase.1562" }
%"class.blink::MemberBase.1562" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1565" = type { %"class.WTF::HashMap.1568" }
%"class.WTF::HashMap.1568" = type { %"class.WTF::HashTable.1569" }
%"class.WTF::HashTable.1569" = type <{ %"struct.WTF::KeyValuePair.1571"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1571" = type opaque
%"class.WTF::Vector.1572" = type { %"class.WTF::VectorBuffer.1573" }
%"class.WTF::VectorBuffer.1573" = type { %"class.WTF::VectorBufferBase.1574" }
%"class.WTF::VectorBufferBase.1574" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1577" = type { %"class.blink::MemberBase.1578" }
%"class.blink::MemberBase.1578" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1581" = type { %"class.blink::MemberBase.1582" }
%"class.blink::MemberBase.1582" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1583" = type { %"class.blink::MemberBase.1584" }
%"class.blink::MemberBase.1584" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1585" = type { %"class.WTF::Vector.1588" }
%"class.WTF::Vector.1588" = type { %"class.WTF::VectorBuffer.1589" }
%"class.WTF::VectorBuffer.1589" = type { %"class.WTF::VectorBufferBase.1590" }
%"class.WTF::VectorBufferBase.1590" = type { %"class.blink::Member.1591"*, i32, i32 }
%"class.blink::Member.1591" = type opaque
%"class.std::__1::unique_ptr.1593" = type { %"class.std::__1::__compressed_pair.1594" }
%"class.std::__1::__compressed_pair.1594" = type { %"struct.std::__1::__compressed_pair_elem.1595" }
%"struct.std::__1::__compressed_pair_elem.1595" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1599" = type { %"class.WTF::HashSet.1602" }
%"class.WTF::HashSet.1602" = type { %"class.WTF::HashTable.1603" }
%"class.WTF::HashTable.1603" = type <{ %"class.blink::WeakMember.1605"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1605" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1606", i32, [4 x i8] }>
%"class.WTF::Vector.1606" = type { %"class.WTF::VectorBuffer.1607" }
%"class.WTF::VectorBuffer.1607" = type { %"class.WTF::VectorBufferBase.1608" }
%"class.WTF::VectorBufferBase.1608" = type { %"struct.std::__1::pair.1609"*, i32, i32 }
%"struct.std::__1::pair.1609" = type opaque
%"class.blink::Member.1612" = type { %"class.blink::MemberBase.1613" }
%"class.blink::MemberBase.1613" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1614" = type { %"class.WTF::VectorBuffer.1615" }
%"class.WTF::VectorBuffer.1615" = type { %"class.WTF::VectorBufferBase.1616" }
%"class.WTF::VectorBufferBase.1616" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1619" = type { %"class.std::__1::__compressed_pair.1620" }
%"class.std::__1::__compressed_pair.1620" = type { %"struct.std::__1::__compressed_pair_elem.1621" }
%"struct.std::__1::__compressed_pair_elem.1621" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1625" = type { %"class.WTF::Vector.1628" }
%"class.WTF::Vector.1628" = type { %"class.WTF::VectorBuffer.1629" }
%"class.WTF::VectorBuffer.1629" = type { %"class.WTF::VectorBufferBase.1630" }
%"class.WTF::VectorBufferBase.1630" = type { %"class.blink::Member.1631"*, i32, i32 }
%"class.blink::Member.1631" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.681" }
%"class.blink::Member.1633" = type { %"class.blink::MemberBase.1634" }
%"class.blink::MemberBase.1634" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1635" = type { %"class.blink::MemberBase.1636" }
%"class.blink::MemberBase.1636" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1637" = type { %"class.blink::MemberBase.1638" }
%"class.blink::MemberBase.1638" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1639" = type { %"class.blink::MemberBase.1640" }
%"class.blink::MemberBase.1640" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1641" = type { %"class.blink::MemberBase.1642" }
%"class.blink::MemberBase.1642" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1643" = type { %"class.WTF::HashTable.1644" }
%"class.WTF::HashTable.1644" = type <{ %"struct.WTF::KeyValuePair.1647"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1647" = type opaque
%"class.blink::Member.1648" = type { %"class.blink::MemberBase.1649" }
%"class.blink::MemberBase.1649" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1650" = type { %"class.blink::MemberBase.1651" }
%"class.blink::MemberBase.1651" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1652" = type { %"class.blink::MemberBase.1653" }
%"class.blink::MemberBase.1653" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1654" = type { %"class.blink::MemberBase.1655" }
%"class.blink::MemberBase.1655" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1150", { i64, i64 } }
%"class.blink::WeakMember.1150" = type { %"class.blink::MemberBase.682" }
%"class.blink::HeapHashSet.1656" = type { %"class.WTF::HashSet.1659" }
%"class.WTF::HashSet.1659" = type { %"class.WTF::HashTable.1660" }
%"class.WTF::HashTable.1660" = type <{ %"class.blink::Member.1662"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1662" = type opaque
%"class.blink::Member.1663" = type { %"class.blink::MemberBase.1664" }
%"class.blink::MemberBase.1664" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1665" = type { %"class.blink::MemberBase.1666" }
%"class.blink::MemberBase.1666" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1667" = type { %"class.blink::MemberBase.1668" }
%"class.blink::MemberBase.1668" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1669" = type { %"class.blink::MemberBase.1670" }
%"class.blink::MemberBase.1670" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1671" = type { %"class.blink::MemberBase.1672" }
%"class.blink::MemberBase.1672" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1673" = type { %"class.std::__1::__compressed_pair.1674" }
%"class.std::__1::__compressed_pair.1674" = type { %"struct.std::__1::__compressed_pair_elem.1675" }
%"struct.std::__1::__compressed_pair_elem.1675" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1679" = type { %"class.std::__1::__compressed_pair.1680" }
%"class.std::__1::__compressed_pair.1680" = type { %"struct.std::__1::__compressed_pair_elem.1681" }
%"struct.std::__1::__compressed_pair_elem.1681" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.783", %"class.WTF::HashSet.783", %"class.WTF::HashSet.783", %"class.WTF::HashSet.783", %"class.WTF::HashSet.783", %"class.WTF::HashSet.783", i32, [4 x i8], %"class.WTF::HashMap.1682", %"class.WTF::HashMap.1682", %"class.WTF::HashMap.1682", %"class.WTF::HashMap.1682", %"class.WTF::HashMap.1682", %"class.WTF::HashMap.1682", %"class.WTF::HashMap.1682", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1682" = type { %"class.WTF::HashTable.1683" }
%"class.WTF::HashTable.1683" = type <{ %"struct.WTF::KeyValuePair.1686"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1686" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1690" = type { %"class.blink::MemberBase.1691" }
%"class.blink::MemberBase.1691" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1692" = type { %"class.blink::MemberBase.1693" }
%"class.blink::MemberBase.1693" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1694" = type { %"class.blink::MemberBase.1695" }
%"class.blink::MemberBase.1695" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1696" = type { %"class.blink::MemberBase.1697" }
%"class.blink::MemberBase.1697" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.1698" = type { %"class.WTF::HashMap.1701" }
%"class.WTF::HashMap.1701" = type { %"class.WTF::HashTable.1702" }
%"class.WTF::HashTable.1702" = type <{ %"struct.WTF::KeyValuePair.1704"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1704" = type opaque
%"class.blink::Member.1705" = type { %"class.blink::MemberBase.1706" }
%"class.blink::MemberBase.1706" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1707" = type { %"class.std::__1::__compressed_pair.1708" }
%"class.std::__1::__compressed_pair.1708" = type { %"struct.std::__1::__compressed_pair_elem.1709" }
%"struct.std::__1::__compressed_pair_elem.1709" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1713" = type { %"class.blink::MemberBase.1714" }
%"class.blink::MemberBase.1714" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1715" = type { %"class.blink::MemberBase.1716" }
%"class.blink::MemberBase.1716" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1717" = type { %"class.WTF::HashMap.1720" }
%"class.WTF::HashMap.1720" = type { %"class.WTF::HashTable.1721" }
%"class.WTF::HashTable.1721" = type <{ %"struct.WTF::KeyValuePair.1723"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1723" = type opaque
%"class.blink::HeapObserverSet.1724" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1725" }
%"class.blink::HeapHashSet.1725" = type { %"class.WTF::HashSet.1728" }
%"class.WTF::HashSet.1728" = type { %"class.WTF::HashTable.1729" }
%"class.WTF::HashTable.1729" = type <{ %"class.blink::WeakMember.1731"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1731" = type opaque
%"class.blink::Member.1732" = type { %"class.blink::MemberBase.1733" }
%"class.blink::MemberBase.1733" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1734" = type { %"class.blink::MemberBase.1735" }
%"class.blink::MemberBase.1735" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.681", %"class.blink::HeapHashSet.1741", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1748", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1741" = type { %"class.WTF::HashSet.1744" }
%"class.WTF::HashSet.1744" = type { %"class.WTF::HashTable.1745" }
%"class.WTF::HashTable.1745" = type <{ %"class.blink::Member.1747"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1747" = type opaque
%"class.blink::HeapTaskRunnerTimer.1748" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1749", { i64, i64 } }
%"class.blink::WeakMember.1749" = type { %"class.blink::MemberBase.1735" }
%"class.blink::WeakMember.1736" = type { %"class.blink::MemberBase.672" }
%"class.blink::Member.1737" = type { %"class.blink::MemberBase.1738" }
%"class.blink::MemberBase.1738" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.961" = type { %"class.blink::MemberBase.962" }
%"class.blink::MemberBase.962" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.963" = type { %"class.blink::MemberBase.964" }
%"class.blink::MemberBase.964" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.965" = type { %"class.blink::MemberBase.966" }
%"class.blink::MemberBase.966" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.969" = type { %"class.blink::MemberBase.970" }
%"class.blink::MemberBase.970" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.971" = type { %"class.blink::MemberBase.972" }
%"class.blink::MemberBase.972" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.973" = type { %"class.blink::MemberBase.974" }
%"class.blink::MemberBase.974" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.977" = type { %"class.blink::MemberBase.978" }
%"class.blink::MemberBase.978" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.979" = type { %"class.blink::MemberBase.980" }
%"class.blink::MemberBase.980" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.981 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.983", i64, %"class.WTF::Vector.987", %"class.WTF::Vector.992", %"class.WTF::Vector.998", %"class.WTF::Vector.1016", %class.scoped_refptr.457, %"class.WTF::HashMap.1022", %"class.WTF::Vector.1027", %"class.WTF::Vector.987", %"class.WTF::Vector.1033", %"class.WTF::HashMap.1039", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.982" }
%"class.base::RefCountedThreadSafe.982" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.983" = type { %"class.std::__1::__compressed_pair.984" }
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.985" }
%"class.WTF::Vector.992" = type { %"class.WTF::VectorBuffer.993" }
%"class.WTF::VectorBuffer.993" = type { %"class.WTF::VectorBufferBase.994", [8 x i8] }
%"class.WTF::VectorBufferBase.994" = type { %class.scoped_refptr.995*, i32, i32 }
%class.scoped_refptr.995 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.998" = type { %"class.WTF::VectorBuffer.999" }
%"class.WTF::VectorBuffer.999" = type { %"class.WTF::VectorBufferBase.1000" }
%"class.WTF::VectorBufferBase.1000" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1002", %"class.std::__1::unique_ptr.1008" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1001 }
%class.scoped_refptr.1001 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1002" = type { %"class.std::__1::__compressed_pair.1003" }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.1004" }
%"struct.std::__1::__compressed_pair_elem.1004" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1008" = type { %"class.std::__1::__compressed_pair.1009" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.1010" }
%"struct.std::__1::__compressed_pair_elem.1010" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1016" = type { %"class.WTF::VectorBuffer.1017" }
%"class.WTF::VectorBuffer.1017" = type { %"class.WTF::VectorBufferBase.1018" }
%"class.WTF::VectorBufferBase.1018" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1019", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1019" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1022" = type { %"class.WTF::HashTable.1023" }
%"class.WTF::HashTable.1023" = type <{ %"struct.WTF::KeyValuePair.1026"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1026" = type opaque
%"class.WTF::Vector.1027" = type { %"class.WTF::VectorBuffer.1028" }
%"class.WTF::VectorBuffer.1028" = type { %"class.WTF::VectorBufferBase.1029" }
%"class.WTF::VectorBufferBase.1029" = type { %"class.mojo::ScopedHandleBase.1030"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1030" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.987" = type { %"class.WTF::VectorBuffer.988" }
%"class.WTF::VectorBuffer.988" = type { %"class.WTF::VectorBufferBase.989", [16 x i8] }
%"class.WTF::VectorBufferBase.989" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1033" = type { %"class.WTF::VectorBuffer.1034" }
%"class.WTF::VectorBuffer.1034" = type { %"class.WTF::VectorBufferBase.1035" }
%"class.WTF::VectorBufferBase.1035" = type { %"class.mojo::PendingRemote.1036"*, i32, i32 }
%"class.mojo::PendingRemote.1036" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.1039" = type { %"class.WTF::HashTable.1040" }
%"class.WTF::HashTable.1040" = type <{ %"struct.WTF::KeyValuePair.1043"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1043" = type { i8**, %"class.std::__1::unique_ptr.3199" }
%"class.std::__1::unique_ptr.3199" = type { %"class.std::__1::__compressed_pair.3200" }
%"class.std::__1::__compressed_pair.3200" = type { %"struct.std::__1::__compressed_pair_elem.3201" }
%"struct.std::__1::__compressed_pair_elem.3201" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.1044" = type { %"class.WTF::HashSet.1047" }
%"class.WTF::HashSet.1047" = type { %"class.WTF::HashTable.1048" }
%"class.WTF::HashTable.1048" = type <{ %"class.blink::WeakMember.1050"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1050" = type opaque
%"class.blink::Member.1051" = type { %"class.blink::MemberBase.1052" }
%"class.blink::MemberBase.1052" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1058", %"class.blink::Member.1058", %"class.blink::Member.1060", %"class.blink::Member.1062", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1053" }
%"class.absl::optional.1053" = type { %"class.absl::optional_internal::optional_data.1054" }
%"class.absl::optional_internal::optional_data.1054" = type { %"class.absl::optional_internal::optional_data_base.1055" }
%"class.absl::optional_internal::optional_data_base.1055" = type { %"class.absl::optional_internal::optional_data_dtor_base.1056" }
%"class.absl::optional_internal::optional_data_dtor_base.1056" = type { i8, %union.anon.1057 }
%union.anon.1057 = type { i64 }
%"class.blink::Member.1058" = type { %"class.blink::MemberBase.1059" }
%"class.blink::MemberBase.1059" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1060" = type { %"class.blink::MemberBase.1061" }
%"class.blink::MemberBase.1061" = type { %"class.blink::Event"* }
%"class.blink::Member.1062" = type { %"class.blink::MemberBase.1063" }
%"class.blink::MemberBase.1063" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.1064" = type { %"class.WTF::HashMap.1067" }
%"class.WTF::HashMap.1067" = type { %"class.WTF::HashTable.1068" }
%"class.WTF::HashTable.1068" = type <{ %"struct.WTF::KeyValuePair.1070"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1070" = type opaque
%"class.std::__1::unique_ptr.1071" = type { %"class.std::__1::__compressed_pair.1072" }
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.1073" }
%"struct.std::__1::__compressed_pair_elem.1073" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.1089", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1100", %"class.blink::Member.1102", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.1091", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1093", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.1091" = type { %"class.blink::MemberBase.1092" }
%"class.blink::MemberBase.1092" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1093" = type { %"class.WTF::HashMap.1096" }
%"class.WTF::HashMap.1096" = type { %"class.WTF::HashTable.1097" }
%"class.WTF::HashTable.1097" = type <{ %"struct.WTF::KeyValuePair.1099"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1099" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.671", i32, i32 }
%"class.blink::Member.1102" = type { %"class.blink::MemberBase.1103" }
%"class.blink::MemberBase.1103" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1104" = type { %"class.blink::MemberBase.1105" }
%"class.blink::MemberBase.1105" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.812", %"class.blink::Member.1918", %"class.blink::Member.1920" }
%"class.blink::Member.1918" = type { %"class.blink::MemberBase.1919" }
%"class.blink::MemberBase.1919" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1920" = type { %"class.blink::MemberBase.1921" }
%"class.blink::MemberBase.1921" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1106" = type { %"class.blink::MemberBase.1107" }
%"class.blink::MemberBase.1107" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.812", %"class.blink::HeapMojoRemote.1913" }
%"class.blink::HeapMojoRemote.1913" = type { %"class.blink::Member.1914" }
%"class.blink::Member.1914" = type { %"class.blink::MemberBase.1915" }
%"class.blink::MemberBase.1915" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1108" = type { %"class.blink::MemberBase.1109" }
%"class.blink::MemberBase.1109" = type { %"class.blink::HeapHashMap.1110"* }
%"class.blink::HeapHashMap.1110" = type opaque
%"class.WTF::Vector.1111" = type { %"class.WTF::VectorBuffer.1112" }
%"class.WTF::VectorBuffer.1112" = type { %"class.WTF::VectorBufferBase.1113" }
%"class.WTF::VectorBufferBase.1113" = type { i8*, i32, i32 }
%"class.util::TokenType" = type { %"class.base::StrongAlias.846" }
%"class.base::StrongAlias.846" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.1116" = type { %"class.WTF::HashTable.1117" }
%"class.WTF::HashTable.1117" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1120" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1123" }
%"class.WTF::VectorBuffer.1123" = type { %"class.WTF::VectorBufferBase.1124" }
%"class.WTF::VectorBufferBase.1124" = type { i64*, i32, i32 }
%"class.blink::FontFaceSetDocument" = type <{ %"class.blink::FontFaceSet", %"class.blink::Supplement", %"class.blink::FontFaceSetDocument::FontLoadHistogram", %"class.blink::FontFaceSetDocument::FontDisplayAutoAlignHistogram", [4 x i8], %"class.blink::HeapTaskRunnerTimer.2930", i8, [7 x i8] }>
%"class.blink::FontFaceSet" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContextClient", %"class.blink::SetlikeIterable", %"class.blink::FontFace::LoadFontCallback", i8, i8, i8, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapHashSet.2914", %"class.blink::HeapVector.2920", %"class.blink::HeapVector.2920", %"class.blink::Member.2927" }
%"class.blink::SetlikeIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::FontFace::LoadFontCallback" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::HeapHashSet.2914" = type { %"class.WTF::HashSet.2917" }
%"class.WTF::HashSet.2917" = type { %"class.WTF::HashTable.2918" }
%"class.WTF::HashTable.2918" = type <{ %"class.blink::Member.402"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.2920" = type { %"class.WTF::Vector.2923" }
%"class.WTF::Vector.2923" = type { %"class.WTF::VectorBuffer.2924" }
%"class.WTF::VectorBuffer.2924" = type { %"class.WTF::VectorBufferBase.2925" }
%"class.WTF::VectorBufferBase.2925" = type { %"class.blink::Member.402"*, i32, i32 }
%"class.blink::Member.2927" = type { %"class.blink::MemberBase.2928" }
%"class.blink::MemberBase.2928" = type { %"class.blink::ScriptPromiseProperty.2929"* }
%"class.blink::ScriptPromiseProperty.2929" = type <{ %"class.blink::ExecutionContextClient", i32, [4 x i8], %"class.blink::Member.3105", %"class.blink::Member.424", %"class.blink::HeapVector.3107", %"class.blink::HeapVector.3179", i8, i8, [6 x i8] }>
%"class.blink::Member.3105" = type { %"class.blink::MemberBase.3106" }
%"class.blink::MemberBase.3106" = type { %"class.blink::FontFaceSet"* }
%"class.blink::HeapVector.3107" = type { %"class.WTF::Vector.3110" }
%"class.WTF::Vector.3110" = type { %"class.WTF::VectorBuffer.3111" }
%"class.WTF::VectorBuffer.3111" = type { %"class.WTF::VectorBufferBase.3112" }
%"class.WTF::VectorBufferBase.3112" = type { %"class.blink::Member.3113"*, i32, i32 }
%"class.blink::Member.3113" = type { %"class.blink::MemberBase.3114" }
%"class.blink::MemberBase.3114" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.3117", i32, %"class.blink::Member.3118", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.3172", %"class.blink::SelfKeepAlive.3175" }
%"class.blink::ThreadState::PrefinalizerRegistration.3117" = type { i8 }
%"class.blink::Member.3118" = type { %"class.blink::MemberBase.3119" }
%"class.blink::MemberBase.3119" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.3122, %"class.blink::Member.3123", %"class.blink::SelfKeepAlive", %"class.util::TokenType.3170" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.3122 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.3123" = type { %"class.blink::MemberBase.3124" }
%"class.blink::MemberBase.3124" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.3127", %"class.blink::HeapHashMap.3136", %"class.std::__1::unique_ptr.3146", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.3158", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.3161" }
%"class.blink::HeapHashMap.3127" = type { %"class.WTF::HashMap.3130" }
%"class.WTF::HashMap.3130" = type { %"class.WTF::HashTable.3131" }
%"class.WTF::HashTable.3131" = type <{ %"struct.WTF::KeyValuePair.3133"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3133" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HeapHashMap.3136" = type { %"class.WTF::HashMap.3139" }
%"class.WTF::HashMap.3139" = type { %"class.WTF::HashTable.3140" }
%"class.WTF::HashTable.3140" = type <{ %"struct.WTF::KeyValuePair.3142"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3142" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.3143" }
%"class.blink::TraceWrapperV8Reference.3143" = type { %"class.v8::TracedReference.3144" }
%"class.v8::TracedReference.3144" = type { %"class.v8::BasicTracedReference.3145" }
%"class.v8::BasicTracedReference.3145" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.3146" = type { %"class.std::__1::__compressed_pair.3147" }
%"class.std::__1::__compressed_pair.3147" = type { %"struct.std::__1::__compressed_pair_elem.3148" }
%"struct.std::__1::__compressed_pair_elem.3148" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.3149" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.3149" = type { %"class.std::__1::__compressed_pair.3150" }
%"class.std::__1::__compressed_pair.3150" = type { %"struct.std::__1::__compressed_pair_elem.3151" }
%"struct.std::__1::__compressed_pair_elem.3151" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.3158" = type { %"class.v8::Persistent.3159" }
%"class.v8::Persistent.3159" = type { %"class.v8::PersistentBase.3160" }
%"class.v8::PersistentBase.3160" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.3161" = type { %"class.WTF::HashMap.3164" }
%"class.WTF::HashMap.3164" = type { %"class.WTF::HashTable.3165" }
%"class.WTF::HashTable.3165" = type <{ %"struct.WTF::KeyValuePair.3167"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3167" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.3168" }
%"class.blink::Persistent.3168" = type { %"class.blink::PersistentBase.3169" }
%"class.blink::PersistentBase.3169" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType.3170" = type { %"class.base::StrongAlias.3171" }
%"class.base::StrongAlias.3171" = type { %"class.base::UnguessableToken" }
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.3118", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.3172", %class.scoped_refptr.147 }
%"class.blink::TraceWrapperV8Reference.3172" = type { %"class.v8::TracedReference.3173" }
%"class.v8::TracedReference.3173" = type { %"class.v8::BasicTracedReference.3174" }
%"class.v8::BasicTracedReference.3174" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.3175" = type { %"class.blink::Persistent.3176" }
%"class.blink::Persistent.3176" = type { %"class.blink::PersistentBase.3177" }
%"class.blink::PersistentBase.3177" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.3179" = type { %"class.WTF::Vector.3182" }
%"class.WTF::Vector.3182" = type { %"class.WTF::VectorBuffer.3183" }
%"class.WTF::VectorBuffer.3183" = type { %"class.WTF::VectorBufferBase.3184" }
%"class.WTF::VectorBufferBase.3184" = type { %"class.blink::ScriptPromise"*, i32, i32 }
%"class.blink::ScriptPromise" = type { %"class.blink::Member.3118", %"class.blink::ScriptValue" }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.681" }
%"class.blink::FontFaceSetDocument::FontLoadHistogram" = type { i32 }
%"class.blink::FontFaceSetDocument::FontDisplayAutoAlignHistogram" = type <{ i32, i8, i8, [2 x i8] }>
%"class.blink::HeapTaskRunnerTimer.2930" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2931", { i64, i64 } }
%"class.blink::WeakMember.2931" = type { %"class.blink::MemberBase.2932" }
%"class.blink::MemberBase.2932" = type { %"class.blink::FontFaceSetDocument"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::NetworkStateNotifier" = type <{ %"class.WTF::Mutex", %"struct.blink::NetworkStateNotifier::NetworkState", i8, [7 x i8], %"struct.blink::NetworkStateNotifier::NetworkState", %"class.WTF::HashMap.2969", %"class.WTF::HashMap.2969", i8, [7 x i8] }>
%"struct.blink::NetworkStateNotifier::NetworkState" = type <{ i8, i8, i8, i8, i32, double, i32, [4 x i8], %"class.absl::optional.82", %"class.absl::optional.82", %"class.absl::optional.2959", i8, [3 x i8], %"class.absl::optional.2964", [4 x i8] }>
%"class.absl::optional.2959" = type { %"class.absl::optional_internal::optional_data.2960" }
%"class.absl::optional_internal::optional_data.2960" = type { %"class.absl::optional_internal::optional_data_base.2961" }
%"class.absl::optional_internal::optional_data_base.2961" = type { %"class.absl::optional_internal::optional_data_dtor_base.2962" }
%"class.absl::optional_internal::optional_data_dtor_base.2962" = type { i8, %union.anon.2963 }
%union.anon.2963 = type { double }
%"class.absl::optional.2964" = type { %"class.absl::optional_internal::optional_data.2965" }
%"class.absl::optional_internal::optional_data.2965" = type { %"class.absl::optional_internal::optional_data_base.2966" }
%"class.absl::optional_internal::optional_data_base.2966" = type { %"class.absl::optional_internal::optional_data_dtor_base.2967" }
%"class.absl::optional_internal::optional_data_dtor_base.2967" = type { i8, %union.anon.2968 }
%union.anon.2968 = type { i32 }
%"class.WTF::HashMap.2969" = type { %"class.WTF::HashTable.2970" }
%"class.WTF::HashTable.2970" = type <{ %"struct.WTF::KeyValuePair.2973"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2973" = type { %class.scoped_refptr.1148, %"class.std::__1::unique_ptr.3298" }
%"class.std::__1::unique_ptr.3298" = type { %"class.std::__1::__compressed_pair.3299" }
%"class.std::__1::__compressed_pair.3299" = type { %"struct.std::__1::__compressed_pair_elem.3300" }
%"struct.std::__1::__compressed_pair_elem.3300" = type { %"struct.blink::NetworkStateNotifier::ObserverList"* }
%"struct.blink::NetworkStateNotifier::ObserverList" = type { i8, %"class.WTF::Vector.3301", %"class.WTF::Vector.3306" }
%"class.WTF::Vector.3301" = type { %"class.WTF::VectorBuffer.3302" }
%"class.WTF::VectorBuffer.3302" = type { %"class.WTF::VectorBufferBase.3303" }
%"class.WTF::VectorBufferBase.3303" = type { %"class.blink::NetworkStateNotifier::NetworkStateObserver"**, i32, i32 }
%"class.blink::NetworkStateNotifier::NetworkStateObserver" = type { i32 (...)** }
%"class.WTF::Vector.3306" = type { %"class.WTF::VectorBuffer.3307" }
%"class.WTF::VectorBuffer.3307" = type { %"class.WTF::VectorBufferBase.1256" }
%"class.WTF::StringAppend" = type { i8*, %"class.WTF::String" }
%"class.blink::FontResource" = type { %"class.blink::Resource", %class.scoped_refptr.410, %"class.WTF::String", i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.blink::HeapHashSet.2933" }
%"class.blink::HeapHashSet.2933" = type { %"class.WTF::HashSet.2936" }
%"class.WTF::HashSet.2936" = type { %"class.WTF::HashTable.2937" }
%"class.WTF::HashTable.2937" = type <{ %"class.blink::WeakMember.2939"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2939" = type opaque
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.2942", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.2954", %"class.WTF::Vector.2955" }
%"class.std::__1::unique_ptr.2942" = type { %"class.std::__1::__compressed_pair.2943" }
%"class.std::__1::__compressed_pair.2943" = type { %"struct.std::__1::__compressed_pair_elem.2944" }
%"struct.std::__1::__compressed_pair_elem.2944" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.2945", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2945" = type { %"class.std::__1::__compressed_pair.2946" }
%"class.std::__1::__compressed_pair.2946" = type { %"struct.std::__1::__compressed_pair_elem.2947" }
%"struct.std::__1::__compressed_pair_elem.2947" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.2954" = type { %"class.blink::MemberBase.1090" }
%"class.WTF::Vector.2955" = type { %"class.WTF::VectorBuffer.2956" }
%"class.WTF::VectorBuffer.2956" = type { %"class.WTF::VectorBufferBase.2572" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.2993, %class.scoped_refptr.3001, %class.scoped_refptr.3011, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.3017 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2992 }
%class.scoped_refptr.2992 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.3018", [4 x i8] }>
%"class.WTF::RefCounted.3018" = type { %"class.base::RefCounted.3019" }
%"class.base::RefCounted.3019" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2993 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.2999", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.2994" }
%"class.WTF::Vector.2994" = type { %"class.WTF::VectorBuffer.2995" }
%"class.WTF::VectorBuffer.2995" = type { %"class.WTF::VectorBufferBase.2996" }
%"class.WTF::VectorBufferBase.2996" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.2999" = type { %"class.base::RefCounted.3000" }
%"class.base::RefCounted.3000" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.3011 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.3012", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.3014, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.3012" = type { %"class.base::RefCounted.3013" }
%"class.base::RefCounted.3013" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.3014 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.3015", [4 x i8] }>
%"class.WTF::RefCounted.3015" = type { %"class.base::RefCounted.3016" }
%"class.base::RefCounted.3016" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%union.anon.3017 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"struct.blink::FontMetricsOverride" = type { %"class.absl::optional.2977", %"class.absl::optional.2977", %"class.absl::optional.2977" }
%"class.blink::FontCache" = type <{ i8, [3 x i8], i32, %class.sk_sp.3020, i16, i8, [5 x i8], %"class.blink::Persistent.3021", %"class.WTF::HashMap.3024", %"class.WTF::HashMap.3029", %"class.blink::FontDataCache", %"class.blink::Persistent.3052", float, [4 x i8] }>
%class.sk_sp.3020 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%"class.blink::Persistent.3021" = type { %"class.blink::PersistentBase.3022" }
%"class.blink::PersistentBase.3022" = type { %"class.blink::HeapHashSet.3023"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashSet.3023" = type opaque
%"class.WTF::HashMap.3024" = type { %"class.WTF::HashTable.3025" }
%"class.WTF::HashTable.3025" = type <{ %"struct.WTF::KeyValuePair.3028"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3028" = type opaque
%"class.WTF::HashMap.3029" = type { %"class.WTF::HashTable.3030" }
%"class.WTF::HashTable.3030" = type <{ %"struct.WTF::KeyValuePair.3033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3033" = type opaque
%"class.blink::FontDataCache" = type { %"class.WTF::HashMap.3034", %"class.WTF::LinkedHashSet.3039" }
%"class.WTF::HashMap.3034" = type { %"class.WTF::HashTable.3035" }
%"class.WTF::HashTable.3035" = type <{ %"struct.WTF::KeyValuePair.3038"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3038" = type opaque
%"class.WTF::LinkedHashSet.3039" = type { %"class.WTF::HashMap.3040", %"class.WTF::VectorBackedLinkedList.3045" }
%"class.WTF::HashMap.3040" = type { %"class.WTF::HashTable.3041" }
%"class.WTF::HashTable.3041" = type <{ %"struct.WTF::KeyValuePair.3044"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3044" = type opaque
%"class.WTF::VectorBackedLinkedList.3045" = type { %"class.WTF::Vector.3046", i32, i32 }
%"class.WTF::Vector.3046" = type { %"class.WTF::VectorBuffer.3047" }
%"class.WTF::VectorBuffer.3047" = type { %"class.WTF::VectorBufferBase.3048" }
%"class.WTF::VectorBufferBase.3048" = type { %"class.WTF::VectorBackedLinkedListNode.3049"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.3049" = type opaque
%"class.blink::Persistent.3052" = type { %"class.blink::PersistentBase.3053" }
%"class.blink::PersistentBase.3053" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.2975", [4 x i8] }>
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.583", [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::FontResourceClient" = type { %"class.blink::ResourceClient.base", [7 x i8] }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.3323", %"class.blink::FreeList", %"class.WTF::Vector.3328" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array.3322" }
%"struct.std::__1::array.3322" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.3323" = type { %"class.WTF::VectorBuffer.3324" }
%"class.WTF::VectorBuffer.3324" = type { %"class.WTF::VectorBufferBase.3325" }
%"class.WTF::VectorBufferBase.3325" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.3328" = type { %"class.WTF::VectorBuffer.3329" }
%"class.WTF::VectorBuffer.3329" = type { %"class.WTF::VectorBufferBase.3330" }
%"class.WTF::VectorBufferBase.3330" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::CSSCustomFontData" = type <{ %"class.blink::CustomFontData.base", [4 x i8], %"class.blink::WeakPersistent", i32, i8, [3 x i8] }>
%"class.blink::CustomFontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.2990" }>
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.3055" }
%"class.blink::PersistentBase.3055" = type { %"class.blink::CSSFontFaceSource"*, %"class.blink::PersistentNodePtr.3056" }
%"class.blink::PersistentNodePtr.3056" = type { %"class.blink::PersistentNode"* }
%"class.WTF::StringTypeAdapter" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.3338" = type { %"class.WTF::StringTypeAdapter.3339" }
%"class.WTF::StringTypeAdapter.3339" = type { %"class.WTF::StringView" }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>

$_ZNK4base12FeatureParamIN5blink8features42AlignFontDisplayAutoTimeoutWithLCPGoalModeELb1EE3GetEv = comdat any

$_ZN5blink11ThreadState24PrefinalizerRegistrationINS_20RemoteFontFaceSourceEEC2EPS2_ = comdat any

$_ZNK5blink17CSSFontFaceSource18IsLocalNonBlockingEv = comdat any

$_ZNK5blink20RemoteFontFaceSource6GetURLEv = comdat any

$_ZNK5blink20RemoteFontFaceSource21GetCustomPlaftormDataEv = comdat any

$_ZNK5blink17CSSFontFaceSource20IsLocalFontAvailableERKNS_15FontDescriptionE = comdat any

$_ZNK5blink20RemoteFontFaceSource15IsInBlockPeriodEv = comdat any

$_ZNK5blink20RemoteFontFaceSource17IsInFailurePeriodEv = comdat any

$_ZN5blink20RemoteFontFaceSource12HadBlankTextEv = comdat any

$_ZN5blink20RemoteFontFaceSource14PaintRequestedEv = comdat any

$_ZN5blink17CSSFontFaceSource16ReportFontLookupERKNS_15FontDescriptionEPNS_14SimpleFontDataEb = comdat any

$_ZNK5blink20RemoteFontFaceSource9DebugNameEv = comdat any

$_ZN5blink14ResourceClient12DataReceivedEPNS_8ResourceEPKcm = comdat any

$_ZNK5blink18FontResourceClient20IsFontResourceClientEv = comdat any

$_ZNK5blink14ResourceClient19IsRawResourceClientEv = comdat any

$_ZThn80_NK5blink20RemoteFontFaceSource9DebugNameEv = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink12FontCacheKeyENS_18PartitionAllocatorEEC2Ev = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E14AppendSlowCaseIS5_EEvOT_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyES0_EEEEmm = comdat any

$_ZN5blink11ThreadState24PrefinalizerRegistrationINS_14ResourceClientEEC2EPS2_ = comdat any

$_ZN5blink14ResourceClient18InvokePreFinalizerERKNS_14LivenessBrokerEPv = comdat any

$_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm = comdat any

$_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_14ResourceClientEEEbPKT_ = comdat any

$_ZN5blink14CustomFontDataD2Ev = comdat any

$_ZN5blink14CustomFontDataD0Ev = comdat any

$_ZNK5blink14CustomFontData17BeginLoadIfNeededEv = comdat any

$_ZNK5blink14CustomFontData9IsLoadingEv = comdat any

$_ZNK5blink14CustomFontData17IsLoadingFallbackEv = comdat any

$_ZNK5blink14CustomFontData17ShouldSkipDrawingEv = comdat any

$_ZN5blink14CustomFontData19ClearFontFaceSourceEv = comdat any

$_ZN5blink17CSSCustomFontDataD2Ev = comdat any

$_ZN5blink17CSSCustomFontDataD0Ev = comdat any

$_ZNK5blink17CSSCustomFontData17BeginLoadIfNeededEv = comdat any

$_ZNK5blink17CSSCustomFontData9IsLoadingEv = comdat any

$_ZNK5blink17CSSCustomFontData17IsLoadingFallbackEv = comdat any

$_ZNK5blink17CSSCustomFontData17ShouldSkipDrawingEv = comdat any

$_ZN5blink17CSSCustomFontData19ClearFontFaceSourceEv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17CSSFontFaceSourceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_17CSSFontFaceSourceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZZN7logging15CheckOpValueStrIN5blink20RemoteFontFaceSource18FontLoadHistograms10DataSourceEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN5blink20RemoteFontFaceSource18InvokePreFinalizerERKNS_14LivenessBrokerEPv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendIPKcNS7_6StringEEEEEEPS1_DpOT_ = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN5blink10TraceTraitINS_11CSSFontFaceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_12FontSelectorEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink14CustomFontDataE = comdat any

$_ZTVN5blink17CSSCustomFontDataE = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink8features39kAlignFontDisplayAutoTimeoutWithLCPGoalE = external global %"struct.base::Feature", align 8
@_ZN5blink8features48kAlignFontDisplayAutoTimeoutWithLCPGoalModeParamE = external global %"struct.base::FeatureParam", align 8
@_ZN5blink8features30kFontPreloadingDelaysRenderingE = external global %"struct.base::Feature", align 8
@_ZTVN5blink20RemoteFontFaceSourceE = hidden unnamed_addr constant { [26 x i8*], [13 x i8*] } { [26 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::RemoteFontFaceSource"*)* @_ZN5blink20RemoteFontFaceSourceD2Ev to i8*), i8* bitcast (void (%"class.blink::RemoteFontFaceSource"*)* @_ZN5blink20RemoteFontFaceSourceD0Ev to i8*), i8* bitcast (i1 (%"class.blink::CSSFontFaceSource"*)* @_ZNK5blink17CSSFontFaceSource18IsLocalNonBlockingEv to i8*), i8* bitcast (i1 (%"class.blink::RemoteFontFaceSource"*)* @_ZNK5blink20RemoteFontFaceSource9IsLoadingEv to i8*), i8* bitcast (i1 (%"class.blink::RemoteFontFaceSource"*)* @_ZNK5blink20RemoteFontFaceSource8IsLoadedEv to i8*), i8* bitcast (i1 (%"class.blink::RemoteFontFaceSource"*)* @_ZNK5blink20RemoteFontFaceSource7IsValidEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::RemoteFontFaceSource"*)* @_ZNK5blink20RemoteFontFaceSource6GetURLEv to i8*), i8* bitcast (%"class.blink::FontCustomPlatformData"* (%"class.blink::RemoteFontFaceSource"*)* @_ZNK5blink20RemoteFontFaceSource21GetCustomPlaftormDataEv to i8*), i8* bitcast (i1 (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*)* @_ZNK5blink17CSSFontFaceSource20IsLocalFontAvailableERKNS_15FontDescriptionE to i8*), i8* bitcast (void (%"class.blink::RemoteFontFaceSource"*)* @_ZN5blink20RemoteFontFaceSource17BeginLoadIfNeededEv to i8*), i8* bitcast (void (%"class.blink::RemoteFontFaceSource"*, i32)* @_ZN5blink20RemoteFontFaceSource10SetDisplayENS_11FontDisplayE to i8*), i8* bitcast (i1 (%"class.blink::RemoteFontFaceSource"*)* @_ZNK5blink20RemoteFontFaceSource15IsInBlockPeriodEv to i8*), i8* bitcast (i1 (%"class.blink::RemoteFontFaceSource"*)* @_ZNK5blink20RemoteFontFaceSource17IsInFailurePeriodEv to i8*), i8* bitcast (i1 (%"class.blink::RemoteFontFaceSource"*)* @_ZN5blink20RemoteFontFaceSource12UpdatePeriodEv to i8*), i8* bitcast (i1 (%"class.blink::RemoteFontFaceSource"*)* @_ZN5blink20RemoteFontFaceSource12HadBlankTextEv to i8*), i8* bitcast (void (%"class.blink::RemoteFontFaceSource"*)* @_ZN5blink20RemoteFontFaceSource14PaintRequestedEv to i8*), i8* bitcast (void (%"class.blink::RemoteFontFaceSource"*, %"class.blink::Visitor"*)* @_ZNK5blink20RemoteFontFaceSource5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::SimpleFontData"* (%"class.blink::RemoteFontFaceSource"*, %"class.blink::FontDescription"*, %"struct.blink::FontSelectionCapabilities"*)* @_ZN5blink20RemoteFontFaceSource14CreateFontDataERKNS_15FontDescriptionERKNS_25FontSelectionCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"*, %"class.blink::SimpleFontData"*, i1)* @_ZN5blink17CSSFontFaceSource16ReportFontLookupERKNS_15FontDescriptionEPNS_14SimpleFontDataEb to i8*), i8* bitcast (void (%"class.blink::RemoteFontFaceSource"*, %"class.blink::Resource"*)* @_ZN5blink20RemoteFontFaceSource14NotifyFinishedEPNS_8ResourceE to i8*), i8* bitcast (void (%"class.blink::RemoteFontFaceSource"*, %"class.blink::FontResource"*)* @_ZN5blink20RemoteFontFaceSource26FontLoadShortLimitExceededEPNS_12FontResourceE to i8*), i8* bitcast (void (%"class.blink::RemoteFontFaceSource"*, %"class.blink::FontResource"*)* @_ZN5blink20RemoteFontFaceSource25FontLoadLongLimitExceededEPNS_12FontResourceE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::RemoteFontFaceSource"*)* @_ZNK5blink20RemoteFontFaceSource9DebugNameEv to i8*), i8* bitcast (i1 (%"class.blink::RemoteFontFaceSource"*)* @_ZNK5blink20RemoteFontFaceSource40IsLowPriorityLoadingAllowedForRemoteFontEv to i8*)], [13 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.blink::RemoteFontFaceSource"*, %"class.blink::Visitor"*)* @_ZThn80_NK5blink20RemoteFontFaceSource5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::RemoteFontFaceSource"*)* @_ZThn80_N5blink20RemoteFontFaceSourceD1Ev to i8*), i8* bitcast (void (%"class.blink::RemoteFontFaceSource"*)* @_ZThn80_N5blink20RemoteFontFaceSourceD0Ev to i8*), i8* bitcast (void (%"class.blink::ResourceClient"*, %"class.blink::Resource"*, i8*, i64)* @_ZN5blink14ResourceClient12DataReceivedEPNS_8ResourceEPKcm to i8*), i8* bitcast (void (%"class.blink::RemoteFontFaceSource"*, %"class.blink::Resource"*)* @_ZThn80_N5blink20RemoteFontFaceSource14NotifyFinishedEPNS_8ResourceE to i8*), i8* bitcast (i1 (%"class.blink::FontResourceClient"*)* @_ZNK5blink18FontResourceClient20IsFontResourceClientEv to i8*), i8* bitcast (i1 (%"class.blink::ResourceClient"*)* @_ZNK5blink14ResourceClient19IsRawResourceClientEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::RemoteFontFaceSource"*)* @_ZThn80_NK5blink20RemoteFontFaceSource9DebugNameEv to i8*), i8* bitcast (void (%"class.blink::RemoteFontFaceSource"*, %"class.blink::FontResource"*)* @_ZThn80_N5blink20RemoteFontFaceSource26FontLoadShortLimitExceededEPNS_12FontResourceE to i8*), i8* bitcast (void (%"class.blink::RemoteFontFaceSource"*, %"class.blink::FontResource"*)* @_ZThn80_N5blink20RemoteFontFaceSource25FontLoadLongLimitExceededEPNS_12FontResourceE to i8*), i8* bitcast (i1 (%"class.blink::RemoteFontFaceSource"*)* @_ZThn80_NK5blink20RemoteFontFaceSource40IsLowPriorityLoadingAllowedForRemoteFontEv to i8*)] }, align 8
@.str = private unnamed_addr constant [35 x i8] c"Failed to decode downloaded font: \00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"OTS parsing error: \00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.2 = private unnamed_addr constant [145 x i8] c"Slow network is detected. See https://www.chromestatus.com/feature/5636954674692096 for more details. Fallback font will be used while loading: \00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"WebFont.BlankTextShownTime\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"WebFont.CacheHit\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"kFromUnknown != data_source_\00", align 1
@.str.6 = private unnamed_addr constant [69 x i8] c"../../third_party/blink/renderer/core/css/remote_font_face_source.cc\00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"WebFont.DownloadTime.LoadError\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"WebFont.DownloadTime.0.Under10KB\00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"WebFont.DownloadTime.1.10KBTo50KB\00", align 1
@.str.10 = private unnamed_addr constant [35 x i8] c"WebFont.DownloadTime.2.50KBTo100KB\00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"WebFont.DownloadTime.3.100KBTo1MB\00", align 1
@.str.12 = private unnamed_addr constant [31 x i8] c"WebFont.DownloadTime.4.Over1MB\00", align 1
@_ZTVN5blink17CSSFontFaceSourceE = external unnamed_addr constant { [21 x i8*] }, align 8
@.str.15 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.16 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [125 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::VectorBackedLinkedListNode<blink::FontCacheKey, WTF::PartitionAllocator>]\00", align 1
@_ZTVN5blink14ResourceClientE = external unnamed_addr constant { [10 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv = private unnamed_addr constant [119 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>]\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink13CoreProbeSink16s_existingAgentsE = external local_unnamed_addr global %"struct.std::__1::atomic", align 4
@_ZTVN5blink14CustomFontDataE = linkonce_odr hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CustomFontData"*)* @_ZN5blink14CustomFontDataD2Ev to i8*), i8* bitcast (void (%"class.blink::CustomFontData"*)* @_ZN5blink14CustomFontDataD0Ev to i8*), i8* bitcast (void (%"class.blink::CustomFontData"*)* @_ZNK5blink14CustomFontData17BeginLoadIfNeededEv to i8*), i8* bitcast (i1 (%"class.blink::CustomFontData"*)* @_ZNK5blink14CustomFontData9IsLoadingEv to i8*), i8* bitcast (i1 (%"class.blink::CustomFontData"*)* @_ZNK5blink14CustomFontData17IsLoadingFallbackEv to i8*), i8* bitcast (i1 (%"class.blink::CustomFontData"*)* @_ZNK5blink14CustomFontData17ShouldSkipDrawingEv to i8*), i8* bitcast (void (%"class.blink::CustomFontData"*)* @_ZN5blink14CustomFontData19ClearFontFaceSourceEv to i8*)] }, comdat, align 8
@_ZTVN5blink17CSSCustomFontDataE = linkonce_odr hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CSSCustomFontData"*)* @_ZN5blink17CSSCustomFontDataD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSCustomFontData"*)* @_ZN5blink17CSSCustomFontDataD0Ev to i8*), i8* bitcast (void (%"class.blink::CSSCustomFontData"*)* @_ZNK5blink17CSSCustomFontData17BeginLoadIfNeededEv to i8*), i8* bitcast (i1 (%"class.blink::CSSCustomFontData"*)* @_ZNK5blink17CSSCustomFontData9IsLoadingEv to i8*), i8* bitcast (i1 (%"class.blink::CSSCustomFontData"*)* @_ZNK5blink17CSSCustomFontData17IsLoadingFallbackEv to i8*), i8* bitcast (i1 (%"class.blink::CSSCustomFontData"*)* @_ZNK5blink17CSSCustomFontData17ShouldSkipDrawingEv to i8*), i8* bitcast (void (%"class.blink::CSSCustomFontData"*)* @_ZN5blink17CSSCustomFontData19ClearFontFaceSourceEv to i8*)] }, comdat, align 8
@.str.17 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.18 = private unnamed_addr constant [21 x i8] c"RemoteFontFaceSource\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.21 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.22 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@.str.23 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.24 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.25 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@switch.table._ZNK5blink20RemoteFontFaceSource13ComputePeriodEv = private unnamed_addr constant [3 x i32] [i32 0, i32 0, i32 1], align 4
@switch.table._ZNK5blink20RemoteFontFaceSource13ComputePeriodEv.26 = private unnamed_addr constant [3 x i32] [i32 0, i32 2, i32 2], align 4
@switch.table._ZN5blink20RemoteFontFaceSource18FontLoadHistograms22DataSourceMetricsValueEv = private unnamed_addr constant [5 x i32] [i32 0, i32 2, i32 3, i32 1, i32 0], align 4

@_ZN5blink20RemoteFontFaceSourceC1EPNS_11CSSFontFaceEPNS_12FontSelectorENS_11FontDisplayE = hidden unnamed_addr alias void (%"class.blink::RemoteFontFaceSource"*, %"class.blink::CSSFontFace"*, %"class.blink::FontSelector"*, i32), void (%"class.blink::RemoteFontFaceSource"*, %"class.blink::CSSFontFace"*, %"class.blink::FontSelector"*, i32)* @_ZN5blink20RemoteFontFaceSourceC2EPNS_11CSSFontFaceEPNS_12FontSelectorENS_11FontDisplayE
@_ZN5blink20RemoteFontFaceSourceD1Ev = hidden unnamed_addr alias void (%"class.blink::RemoteFontFaceSource"*), void (%"class.blink::RemoteFontFaceSource"*)* @_ZN5blink20RemoteFontFaceSourceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink20RemoteFontFaceSource35NeedsInterventionToAlignWithLCPGoalEv(%"class.blink::RemoteFontFaceSource"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features39kAlignFontDisplayAutoTimeoutWithLCPGoalE) #15
  br i1 %2, label %3, label %59

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 5, i32 0, i32 0
  %5 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %4, align 8
  %6 = bitcast %"class.blink::FontSelector"* %5 to %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)***
  %7 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)**, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %7, i64 21
  %9 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %8, align 8
  %10 = tail call %"class.blink::ExecutionContext"* %9(%"class.blink::FontSelector"* %5) #15
  %11 = icmp eq %"class.blink::ExecutionContext"* %10, null
  br i1 %11, label %59, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.blink::ExecutionContext"* %10 to i1 (%"class.blink::ExecutionContext"*)***
  %14 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %14, i64 1
  %16 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::ExecutionContext"* nonnull %10) #15
  br i1 %17, label %18, label %59

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %10, i64 -1, i32 8
  %20 = bitcast i32* %19 to %"class.blink::LocalDOMWindow"*
  %21 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %20) #15
  %22 = icmp eq %"class.blink::Document"* %21, null
  br i1 %22, label %59, label %23

23:                                               ; preds = %18
  %24 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %4, align 8
  %25 = bitcast %"class.blink::FontSelector"* %24 to %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)***
  %26 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)**, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %26, i64 21
  %28 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %27, align 8
  %29 = tail call %"class.blink::ExecutionContext"* %28(%"class.blink::FontSelector"* %24) #15
  %30 = icmp eq %"class.blink::ExecutionContext"* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %23
  %32 = bitcast %"class.blink::ExecutionContext"* %29 to i1 (%"class.blink::ExecutionContext"*)***
  %33 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %33, i64 1
  %35 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::ExecutionContext"* nonnull %29) #15
  br i1 %36, label %37, label %41

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %29, i64 -1, i32 8
  %39 = bitcast i32* %38 to %"class.blink::LocalDOMWindow"*
  %40 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %39) #15
  br label %41

41:                                               ; preds = %23, %31, %37
  %42 = phi %"class.blink::Document"* [ %40, %37 ], [ null, %31 ], [ null, %23 ]
  %43 = tail call %"class.blink::FontFaceSetDocument"* @_ZN5blink19FontFaceSetDocument4FromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %42) #15
  %44 = getelementptr inbounds %"class.blink::FontFaceSetDocument", %"class.blink::FontFaceSetDocument"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %59, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %49 = load %"class.blink::Resource"*, %"class.blink::Resource"** %48, align 8
  %50 = icmp eq %"class.blink::Resource"* %49, null
  br i1 %50, label %51, label %59

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 1, i32 0, i32 4
  %53 = load i8, i8* %52, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %59

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 16
  %57 = load i8, i8* %56, align 1, !range !2
  %58 = icmp eq i8 %57, 0
  br label %59

59:                                               ; preds = %51, %41, %3, %12, %47, %55, %18, %1
  %60 = phi i1 [ false, %1 ], [ false, %18 ], [ false, %41 ], [ true, %47 ], [ false, %51 ], [ %58, %55 ], [ false, %12 ], [ false, %3 ]
  ret i1 %60
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Document"* @_ZNK5blink20RemoteFontFaceSource11GetDocumentEv(%"class.blink::RemoteFontFaceSource"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %2, align 8
  %4 = bitcast %"class.blink::FontSelector"* %3 to %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)***
  %5 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)**, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %5, i64 21
  %7 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %6, align 8
  %8 = tail call %"class.blink::ExecutionContext"* %7(%"class.blink::FontSelector"* %3) #15
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::ExecutionContext"* %8 to i1 (%"class.blink::ExecutionContext"*)***
  %12 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %12, i64 1
  %14 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::ExecutionContext"* nonnull %8) #15
  br i1 %15, label %16, label %22

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 -1, i32 8
  %18 = icmp eq i32* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = bitcast i32* %17 to %"class.blink::LocalDOMWindow"*
  %21 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %20) #15
  br label %22

22:                                               ; preds = %1, %10, %16, %19
  %23 = phi %"class.blink::Document"* [ %21, %19 ], [ null, %16 ], [ null, %10 ], [ null, %1 ]
  ret %"class.blink::Document"* %23
}

declare %"class.blink::FontFaceSetDocument"* @_ZN5blink19FontFaceSetDocument4FromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink20RemoteFontFaceSource8IsLoadedEv(%"class.blink::RemoteFontFaceSource"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::Resource"*, %"class.blink::Resource"** %2, align 8
  %4 = icmp eq %"class.blink::Resource"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20RemoteFontFaceSource28ComputeFontDisplayAutoPeriodEv(%"class.blink::RemoteFontFaceSource"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZNK5blink20RemoteFontFaceSource35NeedsInterventionToAlignWithLCPGoalEv(%"class.blink::RemoteFontFaceSource"* %0)
  br i1 %2, label %3, label %13

3:                                                ; preds = %1
  %4 = tail call i32 @_ZNK4base12FeatureParamIN5blink8features42AlignFontDisplayAutoTimeoutWithLCPGoalModeELb1EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN5blink8features48kAlignFontDisplayAutoTimeoutWithLCPGoalModeParamE)
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %22, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 6, i32 0
  %8 = load %"class.blink::FontCustomPlatformData"*, %"class.blink::FontCustomPlatformData"** %7, align 8
  %9 = icmp eq %"class.blink::FontCustomPlatformData"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = tail call zeroext i1 @_ZNK5blink22FontCustomPlatformData13MayBeIconFontEv(%"class.blink::FontCustomPlatformData"* nonnull %8) #15
  br i1 %11, label %12, label %22

12:                                               ; preds = %6, %10
  br label %22

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 13
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 9
  %19 = load i32, i32* %18, align 4
  %20 = icmp ugt i32 %19, 1
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %17, %13, %12, %3, %10
  %23 = phi i32 [ 1, %12 ], [ 1, %3 ], [ 2, %10 ], [ 1, %13 ], [ %21, %17 ]
  ret i32 %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4base12FeatureParamIN5blink8features42AlignFontDisplayAutoTimeoutWithLCPGoalModeELb1EE3GetEv(%"struct.base::FeatureParam"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load %"struct.base::Feature"*, %"struct.base::Feature"** %8, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i64 @strlen(i8* %13) #15
  %15 = icmp ugt i64 %14, -17
  br i1 %15, label %16, label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %17) #16
  unreachable

18:                                               ; preds = %1
  %19 = icmp ult i64 %14, 23
  br i1 %19, label %29, label %20

20:                                               ; preds = %18
  %21 = add nuw i64 %14, 16
  %22 = and i64 %21, -16
  %23 = tail call i8* @_Znwm(i64 %22) #17
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = or i64 %22, -9223372036854775808
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %27, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %34

29:                                               ; preds = %18
  %30 = trunc i64 %14 to i8
  %31 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 %30, i8* %32, align 1
  %33 = icmp eq i64 %14, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29, %20
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %28, %20 ]
  %36 = phi i8* [ %11, %29 ], [ %23, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* align 1 %13, i64 %14, i1 false) #15
  br label %37

37:                                               ; preds = %29, %34
  %38 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %35, %34 ]
  %39 = phi i8* [ %11, %29 ], [ %36, %34 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %14
  store i8 0, i8* %40, align 1
  call void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"struct.base::Feature"* dereferenceable(16) %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #15
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #17
  br label %47

47:                                               ; preds = %37, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #15
  %48 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = load i64, i64* %7, align 8
  %53 = zext i8 %50 to i64
  %54 = select i1 %51, i64 %52, i64 %53
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 4
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %92, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 3
  br label %64

62:                                               ; preds = %47
  %63 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 2
  br label %132

64:                                               ; preds = %86, %60
  %65 = phi i64 [ %58, %60 ], [ %83, %86 ]
  %66 = phi i64 [ %52, %60 ], [ %88, %86 ]
  %67 = phi i8 [ %50, %60 ], [ %87, %86 ]
  %68 = phi i64 [ 0, %60 ], [ %84, %86 ]
  %69 = load %"struct.base::FeatureParam<blink::features::AlignFontDisplayAutoTimeoutWithLCPGoalMode, true>::Option"*, %"struct.base::FeatureParam<blink::features::AlignFontDisplayAutoTimeoutWithLCPGoalMode, true>::Option"** %61, align 8
  %70 = getelementptr inbounds %"struct.base::FeatureParam<blink::features::AlignFontDisplayAutoTimeoutWithLCPGoalMode, true>::Option", %"struct.base::FeatureParam<blink::features::AlignFontDisplayAutoTimeoutWithLCPGoalMode, true>::Option"* %69, i64 %68, i32 1
  %71 = load i8*, i8** %70, align 8
  %72 = call i64 @strlen(i8* %71) #15
  %73 = icmp slt i8 %67, 0
  %74 = zext i8 %67 to i64
  %75 = select i1 %73, i64 %66, i64 %74
  %76 = icmp eq i64 %72, %75
  br i1 %76, label %77, label %82

77:                                               ; preds = %64
  %78 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* %71, i64 %72) #15
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %89, label %80

80:                                               ; preds = %77
  %81 = load i64, i64* %57, align 8
  br label %82

82:                                               ; preds = %80, %64
  %83 = phi i64 [ %81, %80 ], [ %65, %64 ]
  %84 = add nuw i64 %68, 1
  %85 = icmp ult i64 %84, %83
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  %87 = load i8, i8* %49, align 1
  %88 = load i64, i64* %7, align 8
  br label %64

89:                                               ; preds = %77
  %90 = load %"struct.base::FeatureParam<blink::features::AlignFontDisplayAutoTimeoutWithLCPGoalMode, true>::Option"*, %"struct.base::FeatureParam<blink::features::AlignFontDisplayAutoTimeoutWithLCPGoalMode, true>::Option"** %61, align 8
  %91 = getelementptr inbounds %"struct.base::FeatureParam<blink::features::AlignFontDisplayAutoTimeoutWithLCPGoalMode, true>::Option", %"struct.base::FeatureParam<blink::features::AlignFontDisplayAutoTimeoutWithLCPGoalMode, true>::Option"* %90, i64 %68, i32 0
  br label %132

92:                                               ; preds = %82, %56
  %93 = load %"struct.base::Feature"*, %"struct.base::Feature"** %8, align 8
  %94 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #15
  %95 = load i8*, i8** %12, align 8
  %96 = call i64 @strlen(i8* %95) #15
  %97 = icmp ugt i64 %96, -17
  br i1 %97, label %98, label %100

98:                                               ; preds = %92
  %99 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %99) #16
  unreachable

100:                                              ; preds = %92
  %101 = icmp ult i64 %96, 23
  br i1 %101, label %111, label %102

102:                                              ; preds = %100
  %103 = add nuw i64 %96, 16
  %104 = and i64 %103, -16
  %105 = call i8* @_Znwm(i64 %104) #17
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %105, i8** %106, align 8
  %107 = or i64 %104, -9223372036854775808
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %96, i64* %109, align 8
  %110 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %116

111:                                              ; preds = %100
  %112 = trunc i64 %96 to i8
  %113 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  store i8 %112, i8* %114, align 1
  %115 = icmp eq i64 %96, 0
  br i1 %115, label %119, label %116

116:                                              ; preds = %111, %102
  %117 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %113, %111 ], [ %110, %102 ]
  %118 = phi i8* [ %94, %111 ], [ %105, %102 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %118, i8* align 1 %95, i64 %96, i1 false) #15
  br label %119

119:                                              ; preds = %111, %116
  %120 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %113, %111 ], [ %117, %116 ]
  %121 = phi i8* [ %94, %111 ], [ %118, %116 ]
  %122 = getelementptr inbounds i8, i8* %121, i64 %96
  store i8 0, i8* %122, align 1
  %123 = getelementptr inbounds %"struct.base::FeatureParam", %"struct.base::FeatureParam"* %0, i64 0, i32 2
  %124 = load i32, i32* %123, align 8
  call void @_ZN4base19LogInvalidEnumValueERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_i(%"struct.base::Feature"* dereferenceable(16) %93, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i32 %124) #15
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %130) #17
  br label %131

131:                                              ; preds = %119, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #15
  br label %132

132:                                              ; preds = %89, %131, %62
  %133 = phi i32* [ %63, %62 ], [ %123, %131 ], [ %91, %89 ]
  %134 = load i32, i32* %133, align 8
  %135 = load i8, i8* %49, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %132
  %138 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %138) #17
  br label %139

139:                                              ; preds = %132, %137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #15
  ret i32 %134
}

declare zeroext i1 @_ZNK5blink22FontCustomPlatformData13MayBeIconFontEv(%"class.blink::FontCustomPlatformData"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20RemoteFontFaceSource13ComputePeriodEv(%"class.blink::RemoteFontFaceSource"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %102 [
    i32 0, label %4
    i32 1, label %25
    i32 4, label %33
    i32 3, label %29
  ]

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZNK5blink20RemoteFontFaceSource35NeedsInterventionToAlignWithLCPGoalEv(%"class.blink::RemoteFontFaceSource"* %0) #15
  br i1 %5, label %6, label %16

6:                                                ; preds = %4
  %7 = tail call i32 @_ZNK4base12FeatureParamIN5blink8features42AlignFontDisplayAutoTimeoutWithLCPGoalModeELb1EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN5blink8features48kAlignFontDisplayAutoTimeoutWithLCPGoalModeParamE) #15
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %102, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 6, i32 0
  %11 = load %"class.blink::FontCustomPlatformData"*, %"class.blink::FontCustomPlatformData"** %10, align 8
  %12 = icmp eq %"class.blink::FontCustomPlatformData"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = tail call zeroext i1 @_ZNK5blink22FontCustomPlatformData13MayBeIconFontEv(%"class.blink::FontCustomPlatformData"* nonnull %11) #15
  br i1 %14, label %15, label %102

15:                                               ; preds = %13, %9
  br label %102

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 13
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %102

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 9
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %22, 1
  %24 = zext i1 %23 to i32
  br label %102

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 9
  %27 = load i32, i32* %26, align 4
  %28 = icmp ult i32 %27, 3
  br i1 %28, label %98, label %102

29:                                               ; preds = %1
  %30 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 9
  %31 = load i32, i32* %30, align 4
  %32 = icmp ult i32 %31, 3
  br i1 %32, label %102, label %33

33:                                               ; preds = %1, %29
  %34 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features30kFontPreloadingDelaysRenderingE) #15
  br i1 %34, label %35, label %55

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 5, i32 0, i32 0
  %37 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %36, align 8
  %38 = bitcast %"class.blink::FontSelector"* %37 to %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)***
  %39 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)**, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %39, i64 21
  %41 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %40, align 8
  %42 = tail call %"class.blink::ExecutionContext"* %41(%"class.blink::FontSelector"* %37) #15
  %43 = icmp eq %"class.blink::ExecutionContext"* %42, null
  br i1 %43, label %55, label %44

44:                                               ; preds = %35
  %45 = bitcast %"class.blink::ExecutionContext"* %42 to i1 (%"class.blink::ExecutionContext"*)***
  %46 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %45, align 8
  %47 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %46, i64 1
  %48 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.blink::ExecutionContext"* nonnull %42) #15
  br i1 %49, label %50, label %55

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %42, i64 -1, i32 8
  %52 = bitcast i32* %51 to %"class.blink::LocalDOMWindow"*
  %53 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %52) #15
  %54 = icmp eq %"class.blink::Document"* %53, null
  br i1 %54, label %55, label %59

55:                                               ; preds = %35, %44, %33, %50
  %56 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 9
  %57 = load i32, i32* %56, align 4
  %58 = icmp ult i32 %57, 3
  br i1 %58, label %104, label %59

59:                                               ; preds = %55, %50
  %60 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 5, i32 0, i32 0
  %61 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %60, align 8
  %62 = bitcast %"class.blink::FontSelector"* %61 to %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)***
  %63 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)**, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %63, i64 21
  %65 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %64, align 8
  %66 = tail call %"class.blink::ExecutionContext"* %65(%"class.blink::FontSelector"* %61) #15
  %67 = icmp eq %"class.blink::ExecutionContext"* %66, null
  br i1 %67, label %78, label %68

68:                                               ; preds = %59
  %69 = bitcast %"class.blink::ExecutionContext"* %66 to i1 (%"class.blink::ExecutionContext"*)***
  %70 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %69, align 8
  %71 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %70, i64 1
  %72 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %71, align 8
  %73 = tail call zeroext i1 %72(%"class.blink::ExecutionContext"* nonnull %66) #15
  br i1 %73, label %74, label %78

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %66, i64 -1, i32 8
  %76 = bitcast i32* %75 to %"class.blink::LocalDOMWindow"*
  %77 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %76) #15
  br label %78

78:                                               ; preds = %59, %68, %74
  %79 = phi %"class.blink::Document"* [ %77, %74 ], [ null, %68 ], [ null, %59 ]
  %80 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %79, i64 0, i32 187, i32 0, i32 0
  %81 = load %"class.blink::FontPreloadManager"*, %"class.blink::FontPreloadManager"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::FontPreloadManager", %"class.blink::FontPreloadManager"* %81, i64 0, i32 6
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, 3
  br i1 %84, label %85, label %102

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 1, i32 0, i32 4
  %87 = load i8, i8* %86, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %102

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 14
  %91 = load i8, i8* %90, align 1, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %102

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 15
  %95 = load i8, i8* %94, align 2, !range !2
  %96 = icmp eq i8 %95, 0
  %97 = select i1 %96, i32 1, i32 2
  ret i32 %97

98:                                               ; preds = %25
  %99 = sext i32 %27 to i64
  %100 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZNK5blink20RemoteFontFaceSource13ComputePeriodEv, i64 0, i64 %99
  %101 = load i32, i32* %100, align 4
  ret i32 %101

102:                                              ; preds = %78, %89, %1, %6, %13, %15, %16, %20, %85, %25, %29
  %103 = phi i32 [ %31, %29 ], [ 1, %89 ], [ 1, %85 ], [ 1, %78 ], [ 1, %15 ], [ 1, %6 ], [ 2, %13 ], [ 1, %16 ], [ %24, %20 ], [ 1, %25 ], [ 1, %1 ]
  ret i32 %103

104:                                              ; preds = %55
  %105 = sext i32 %57 to i64
  %106 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZNK5blink20RemoteFontFaceSource13ComputePeriodEv.26, i64 0, i64 %105
  %107 = load i32, i32* %106, align 4
  ret i32 %107
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20RemoteFontFaceSourceC2EPNS_11CSSFontFaceEPNS_12FontSelectorENS_11FontDisplayE(%"class.blink::RemoteFontFaceSource"*, %"class.blink::CSSFontFace"*, %"class.blink::FontSelector"*, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN5blink17CSSFontFaceSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.WTF::HashMap"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #15
  %8 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 0, i32 2
  %9 = bitcast %"class.WTF::LinkedHashSet"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #15
  %10 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 0, i32 2, i32 1
  tail call void @_ZN3WTF22VectorBackedLinkedListIN5blink12FontCacheKeyENS_18PartitionAllocatorEEC2Ev(%"class.WTF::VectorBackedLinkedList"* %10) #15
  %11 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 1
  %12 = bitcast %"class.blink::FontResourceClient.base"* %11 to %"class.blink::ResourceClient"*
  %13 = getelementptr inbounds %"class.blink::FontResourceClient.base", %"class.blink::FontResourceClient.base"* %11, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink14ResourceClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 1, i32 0, i32 1
  tail call void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_14ResourceClientEEC2EPS2_(%"class.blink::ThreadState::PrefinalizerRegistration"* %14, %"class.blink::ResourceClient"* %12) #15
  %15 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 1, i32 0, i32 3, i32 0, i32 0
  store %"class.blink::Resource"* null, %"class.blink::Resource"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 1, i32 0, i32 4
  store i8 0, i8* %16, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [13 x i8*] }, { [26 x i8*], [13 x i8*] }* @_ZTVN5blink20RemoteFontFaceSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [13 x i8*] }, { [26 x i8*], [13 x i8*] }* @_ZTVN5blink20RemoteFontFaceSourceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %17 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 2
  tail call void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_20RemoteFontFaceSourceEEC2EPS2_(%"class.blink::ThreadState::PrefinalizerRegistration.374"* %17, %"class.blink::RemoteFontFaceSource"* %0)
  %18 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::CSSFontFace"* %1, %"class.blink::CSSFontFace"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.blink::FontSelector"* %2, %"class.blink::FontSelector"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 6, i32 0
  %21 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 8
  %22 = bitcast %"class.blink::FontSelector"* %2 to %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)***
  %23 = bitcast %"class.blink::FontCustomPlatformData"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false)
  %24 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)**, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*** %22, align 8
  %25 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %24, i64 21
  %26 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %25, align 8
  %27 = tail call %"class.blink::ExecutionContext"* %26(%"class.blink::FontSelector"* %2) #15
  %28 = add i32 %3, -3
  %29 = icmp ugt i32 %28, 1
  %30 = icmp ne %"class.blink::ExecutionContext"* %27, null
  %31 = and i1 %29, %30
  br i1 %31, label %32, label %41

32:                                               ; preds = %4
  %33 = bitcast %"class.blink::ExecutionContext"* %27 to i1 (%"class.blink::ExecutionContext"*)***
  %34 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %34, i64 1
  %36 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::ExecutionContext"* nonnull %27) #15
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  %39 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %40 = tail call zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_13ReportOptionsERKN3WTF6StringES7_(%"class.blink::ExecutionContext"* nonnull %27, i32 1, i32 1, %"class.WTF::String"* dereferenceable(8) %39, %"class.WTF::String"* dereferenceable(8) %39) #15
  br i1 %40, label %41, label %42

41:                                               ; preds = %38, %32, %4
  br label %42

42:                                               ; preds = %38, %41
  %43 = phi i32 [ %3, %41 ], [ 4, %38 ]
  store i32 %43, i32* %21, align 8
  %44 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 9
  store i32 0, i32* %44, align 4
  %45 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 12
  %46 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 12, i32 4
  store i32 0, i32* %46, align 4
  %47 = bitcast %"class.blink::RemoteFontFaceSource::FontLoadHistograms"* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 18, i1 false) #15
  %48 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 13
  %49 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %19, align 8
  %50 = bitcast %"class.blink::FontSelector"* %49 to %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)***
  %51 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)**, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %51, i64 21
  %53 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %52, align 8
  %54 = tail call %"class.blink::ExecutionContext"* %53(%"class.blink::FontSelector"* %49) #15
  %55 = icmp eq %"class.blink::ExecutionContext"* %54, null
  br i1 %55, label %79, label %56

56:                                               ; preds = %42
  %57 = bitcast %"class.blink::ExecutionContext"* %54 to i1 (%"class.blink::ExecutionContext"*)***
  %58 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %57, align 8
  %59 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %58, i64 1
  %60 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.blink::ExecutionContext"* nonnull %54) #15
  br i1 %61, label %62, label %79

62:                                               ; preds = %56
  %63 = tail call dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() #15
  %64 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %63, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %64) #15
  %65 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %63, i64 0, i32 2
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  %68 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %63, i64 0, i32 4
  %69 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %63, i64 0, i32 1
  %70 = select i1 %67, %"struct.blink::NetworkStateNotifier::NetworkState"* %69, %"struct.blink::NetworkStateNotifier::NetworkState"* %68
  %71 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %70, i64 0, i32 6
  %72 = load i32, i32* %71, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %64) #15
  %73 = add i32 %72, -1
  %74 = icmp ult i32 %73, 4
  br i1 %74, label %75, label %79

75:                                               ; preds = %62
  %76 = load i32, i32* %21, align 8
  %77 = icmp eq i32 %76, 0
  %78 = zext i1 %77 to i8
  br label %79

79:                                               ; preds = %42, %56, %62, %75
  %80 = phi i8 [ 0, %56 ], [ 0, %62 ], [ %78, %75 ], [ 0, %42 ]
  store i8 %80, i8* %48, align 8
  %81 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 14
  store i8 0, i8* %81, align 1
  %82 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 15
  store i8 0, i8* %82, align 2
  %83 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 16
  store i8 0, i8* %83, align 1
  %84 = tail call i32 @_ZNK5blink20RemoteFontFaceSource13ComputePeriodEv(%"class.blink::RemoteFontFaceSource"* %0)
  %85 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 10
  store i32 %84, i32* %85, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_20RemoteFontFaceSourceEEC2EPS2_(%"class.blink::ThreadState::PrefinalizerRegistration.374"*, %"class.blink::RemoteFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::RemoteFontFaceSource"* %1 to i64
  %4 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %5 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %4, i64 0, i32 1
  %6 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %5) #15
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %10, !prof !3

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %5, i8* %9) #15
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i8* [ %9, %8 ], [ %6, %2 ]
  %12 = bitcast i8* %11 to %"class.blink::ThreadState"**
  %13 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 2
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %23, label %20

20:                                               ; preds = %10
  %21 = add i32 %19, 1
  %22 = icmp eq i32 %21, %16
  br i1 %22, label %32, label %34

23:                                               ; preds = %10
  %24 = icmp eq i32 %19, 0
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  br i1 %24, label %30, label %27

27:                                               ; preds = %23
  %28 = add i32 %26, -1
  %29 = icmp eq i32 %19, %28
  br i1 %29, label %32, label %34

30:                                               ; preds = %23
  %31 = icmp eq i32 %26, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %30, %27, %20
  tail call void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"* %14) #15
  %33 = load i32, i32* %18, align 4
  br label %34

34:                                               ; preds = %20, %27, %30, %32
  %35 = phi i32 [ %19, %20 ], [ %19, %27 ], [ 0, %30 ], [ %33, %32 ]
  %36 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::pair.309"*, %"struct.std::__1::pair.309"** %36, align 8
  %38 = zext i32 %35 to i64
  %39 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %37, i64 %38
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = add i32 %41, -1
  %43 = icmp eq i32 %35, %42
  %44 = add i32 %35, 1
  %45 = select i1 %43, i32 0, i32 %44
  store i32 %45, i32* %18, align 4
  %46 = bitcast %"struct.std::__1::pair.309"* %39 to i64*
  store i64 %3, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %37, i64 %38, i32 1
  store i1 (%"class.blink::LivenessBroker"*, i8*)* @_ZN5blink20RemoteFontFaceSource18InvokePreFinalizerERKNS_14LivenessBrokerEPv, i1 (%"class.blink::LivenessBroker"*, i8*)** %47, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20RemoteFontFaceSource37GetFontDisplayWithDocumentPolicyCheckENS_11FontDisplayEPKNS_12FontSelectorENS_13ReportOptionsE(%"class.blink::RemoteFontFaceSource"* nocapture readnone, i32, %"class.blink::FontSelector"*, i32) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.blink::FontSelector"* %2 to %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)***
  %6 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)**, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %6, i64 21
  %8 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %7, align 8
  %9 = tail call %"class.blink::ExecutionContext"* %8(%"class.blink::FontSelector"* %2) #15
  %10 = add i32 %1, -3
  %11 = icmp ugt i32 %10, 1
  %12 = icmp ne %"class.blink::ExecutionContext"* %9, null
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %23

14:                                               ; preds = %4
  %15 = bitcast %"class.blink::ExecutionContext"* %9 to i1 (%"class.blink::ExecutionContext"*)***
  %16 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %16, i64 1
  %18 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::ExecutionContext"* nonnull %9) #15
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %22 = tail call zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_13ReportOptionsERKN3WTF6StringES7_(%"class.blink::ExecutionContext"* nonnull %9, i32 1, i32 %3, %"class.WTF::String"* dereferenceable(8) %21, %"class.WTF::String"* dereferenceable(8) %21) #15
  br i1 %22, label %23, label %24

23:                                               ; preds = %20, %14, %4
  br label %24

24:                                               ; preds = %20, %23
  %25 = phi i32 [ %1, %23 ], [ 4, %20 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20RemoteFontFaceSource33ShouldTriggerWebFontsInterventionEv(%"class.blink::RemoteFontFaceSource"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %2, align 8
  %4 = bitcast %"class.blink::FontSelector"* %3 to %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)***
  %5 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)**, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %5, i64 21
  %7 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %6, align 8
  %8 = tail call %"class.blink::ExecutionContext"* %7(%"class.blink::FontSelector"* %3) #15
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  br i1 %9, label %33, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::ExecutionContext"* %8 to i1 (%"class.blink::ExecutionContext"*)***
  %12 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %12, i64 1
  %14 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::ExecutionContext"* nonnull %8) #15
  br i1 %15, label %16, label %33

16:                                               ; preds = %10
  %17 = tail call dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() #15
  %18 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %17, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %18) #15
  %19 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %17, i64 0, i32 2
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  %22 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %17, i64 0, i32 4
  %23 = getelementptr inbounds %"class.blink::NetworkStateNotifier", %"class.blink::NetworkStateNotifier"* %17, i64 0, i32 1
  %24 = select i1 %21, %"struct.blink::NetworkStateNotifier::NetworkState"* %23, %"struct.blink::NetworkStateNotifier::NetworkState"* %22
  %25 = getelementptr inbounds %"struct.blink::NetworkStateNotifier::NetworkState", %"struct.blink::NetworkStateNotifier::NetworkState"* %24, i64 0, i32 6
  %26 = load i32, i32* %25, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %18) #15
  %27 = add i32 %26, -1
  %28 = icmp ult i32 %27, 4
  br i1 %28, label %29, label %33

29:                                               ; preds = %16
  %30 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 8
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br label %33

33:                                               ; preds = %1, %16, %29, %10
  %34 = phi i1 [ false, %10 ], [ false, %16 ], [ %32, %29 ], [ false, %1 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20RemoteFontFaceSourceD2Ev(%"class.blink::RemoteFontFaceSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [13 x i8*] }, { [26 x i8*], [13 x i8*] }* @_ZTVN5blink20RemoteFontFaceSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [13 x i8*] }, { [26 x i8*], [13 x i8*] }* @_ZTVN5blink20RemoteFontFaceSourceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 7, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #15
  br label %20

20:                                               ; preds = %1, %16, %19
  %21 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 6, i32 0
  %22 = load %"class.blink::FontCustomPlatformData"*, %"class.blink::FontCustomPlatformData"** %21, align 8
  %23 = icmp eq %"class.blink::FontCustomPlatformData"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::FontCustomPlatformData", %"class.blink::FontCustomPlatformData"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #15
  %26 = getelementptr inbounds %"class.blink::FontCustomPlatformData", %"class.blink::FontCustomPlatformData"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  tail call void @_ZN5blink22FontCustomPlatformDataD1Ev(%"class.blink::FontCustomPlatformData"* nonnull %22) #15
  %30 = bitcast %"class.blink::FontCustomPlatformData"* %22 to i8*
  tail call void @free(i8* %30) #15
  br label %31

31:                                               ; preds = %20, %24, %29
  %32 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 0
  tail call void @_ZN5blink17CSSFontFaceSourceD2Ev(%"class.blink::CSSFontFaceSource"* %32) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink17CSSFontFaceSourceD2Ev(%"class.blink::CSSFontFaceSource"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink20RemoteFontFaceSourceD1Ev(%"class.blink::RemoteFontFaceSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 -1, i32 4
  %3 = bitcast %"class.blink::Member.375"* %2 to %"class.blink::RemoteFontFaceSource"*
  tail call void @_ZN5blink20RemoteFontFaceSourceD2Ev(%"class.blink::RemoteFontFaceSource"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20RemoteFontFaceSourceD0Ev(%"class.blink::RemoteFontFaceSource"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink20RemoteFontFaceSourceD2Ev(%"class.blink::RemoteFontFaceSource"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink20RemoteFontFaceSourceD0Ev(%"class.blink::RemoteFontFaceSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 -1, i32 4
  %3 = bitcast %"class.blink::Member.375"* %2 to %"class.blink::RemoteFontFaceSource"*
  tail call void @_ZN5blink20RemoteFontFaceSourceD2Ev(%"class.blink::RemoteFontFaceSource"* %3) #15
  ret void
}

declare %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20RemoteFontFaceSource7DisposeEv(%"class.blink::RemoteFontFaceSource"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::FontResourceClient.base"* %2 to %"class.blink::ResourceClient"*
  tail call void @_ZN5blink14ResourceClient11SetResourceEPNS_8ResourceEPN4base22SingleThreadTaskRunnerE(%"class.blink::ResourceClient"* %3, %"class.blink::Resource"* null, %"class.base::SingleThreadTaskRunner"* null) #15
  %4 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 0
  tail call void @_ZN5blink17CSSFontFaceSource10PruneTableEv(%"class.blink::CSSFontFaceSource"* %4) #15
  ret void
}

declare void @_ZN5blink17CSSFontFaceSource10PruneTableEv(%"class.blink::CSSFontFaceSource"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink20RemoteFontFaceSource9IsLoadingEv(%"class.blink::RemoteFontFaceSource"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::Resource"*, %"class.blink::Resource"** %2, align 8
  %4 = icmp eq %"class.blink::Resource"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %3, i64 0, i32 2
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 1
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink20RemoteFontFaceSource7IsValidEv(%"class.blink::RemoteFontFaceSource"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::Resource"*, %"class.blink::Resource"** %2, align 8
  %4 = icmp eq %"class.blink::Resource"* %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 6, i32 0
  %7 = load %"class.blink::FontCustomPlatformData"*, %"class.blink::FontCustomPlatformData"** %6, align 8
  %8 = icmp ne %"class.blink::FontCustomPlatformData"* %7, null
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ true, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20RemoteFontFaceSource14NotifyFinishedEPNS_8ResourceE(%"class.blink::RemoteFontFaceSource"*, %"class.blink::Resource"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.WTF::StringAppend", align 8
  %9 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 5, i32 0, i32 0
  %10 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %9, align 8
  %11 = bitcast %"class.blink::FontSelector"* %10 to %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)***
  %12 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)**, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %12, i64 21
  %14 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %13, align 8
  %15 = tail call %"class.blink::ExecutionContext"* %14(%"class.blink::FontSelector"* %10) #15
  %16 = icmp eq %"class.blink::ExecutionContext"* %15, null
  br i1 %16, label %435, label %17

17:                                               ; preds = %2
  %18 = bitcast %"class.blink::ExecutionContext"* %15 to i1 (%"class.blink::ExecutionContext"*)***
  %19 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %19, i64 1
  %21 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.blink::ExecutionContext"* nonnull %15) #15
  br i1 %22, label %23, label %32

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %15, i64 -1, i32 8
  %25 = icmp eq i32* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %23
  %27 = bitcast i32* %24 to %"class.blink::LocalDOMWindow"*
  %28 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %27) #15
  %29 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %28, i64 0, i32 5, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp sgt i32 %30, 19
  br i1 %31, label %435, label %32

32:                                               ; preds = %17, %23, %26
  %33 = bitcast %"class.blink::Resource"* %1 to %"class.blink::FontResource"*
  %34 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 12
  tail call void @_ZN5blink20RemoteFontFaceSource18FontLoadHistograms16RecordRemoteFontEPKNS_12FontResourceE(%"class.blink::RemoteFontFaceSource::FontLoadHistograms"* %34, %"class.blink::FontResource"* %33)
  %35 = tail call %"class.blink::FontCustomPlatformData"* @_ZN5blink12FontResource17GetCustomFontDataEv(%"class.blink::FontResource"* %33) #15
  %36 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 6
  %37 = ptrtoint %"class.blink::FontCustomPlatformData"* %35 to i64
  %38 = bitcast %class.scoped_refptr.410* %36 to i64*
  %39 = getelementptr inbounds %class.scoped_refptr.410, %class.scoped_refptr.410* %36, i64 0, i32 0
  %40 = load %"class.blink::FontCustomPlatformData"*, %"class.blink::FontCustomPlatformData"** %39, align 8
  store i64 %37, i64* %38, align 8
  %41 = icmp eq %"class.blink::FontCustomPlatformData"* %40, null
  br i1 %41, label %49, label %42

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.blink::FontCustomPlatformData", %"class.blink::FontCustomPlatformData"* %40, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %43) #15
  %44 = getelementptr inbounds %"class.blink::FontCustomPlatformData", %"class.blink::FontCustomPlatformData"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %42
  tail call void @_ZN5blink22FontCustomPlatformDataD1Ev(%"class.blink::FontCustomPlatformData"* nonnull %40) #15
  %48 = bitcast %"class.blink::FontCustomPlatformData"* %40 to i8*
  tail call void @free(i8* %48) #15
  br label %49

49:                                               ; preds = %32, %42, %47
  %50 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 26
  %51 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %50) #15
  %52 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 7
  %53 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %51, i64 0, i32 4, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %73, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i33
  %65 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %64, i33 1) #15
  %66 = extractvalue { i33, i1 } %65, 1
  %67 = extractvalue { i33, i1 } %65, 0
  %68 = icmp slt i33 %67, 0
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %71, !prof !3

70:                                               ; preds = %61
  tail call void @llvm.trap() #15
  unreachable

71:                                               ; preds = %61
  %72 = trunc i33 %67 to i32
  store i32 %72, i32* %62, align 4
  br label %73

73:                                               ; preds = %71, %56, %49
  %74 = ptrtoint %"class.WTF::StringImpl"* %54 to i64
  %75 = bitcast %"class.WTF::String"* %52 to i64*
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %52, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  store i64 %74, i64* %75, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #15
  br label %92

92:                                               ; preds = %73, %88, %91
  %93 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 2
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 4
  br i1 %95, label %96, label %323

96:                                               ; preds = %92
  %97 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %97) #15
  store i32 8, i32* %3, align 4
  %98 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %98) #15
  store i32 2, i32* %4, align 4
  %99 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #15
  %100 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %50) #15
  %101 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"* %100) #15
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %146, label %103

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %120

110:                                              ; preds = %103
  %111 = zext i32 %109 to i33
  %112 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %111, i33 1) #15
  %113 = extractvalue { i33, i1 } %112, 1
  %114 = extractvalue { i33, i1 } %112, 0
  %115 = icmp slt i33 %114, 0
  %116 = or i1 %113, %115
  br i1 %116, label %117, label %118, !prof !3

117:                                              ; preds = %110
  tail call void @llvm.trap() #15
  unreachable

118:                                              ; preds = %110
  %119 = trunc i33 %114 to i32
  store i32 %119, i32* %108, align 4
  br label %120

120:                                              ; preds = %118, %103
  %121 = phi i32 [ %119, %118 ], [ %109, %103 ]
  %122 = load atomic i32, i32* %104 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %135

125:                                              ; preds = %120
  %126 = zext i32 %121 to i33
  %127 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %126, i33 1) #15
  %128 = extractvalue { i33, i1 } %127, 1
  %129 = extractvalue { i33, i1 } %127, 0
  %130 = icmp slt i33 %129, 0
  %131 = or i1 %128, %130
  br i1 %131, label %132, label %133, !prof !3

132:                                              ; preds = %125
  tail call void @llvm.trap() #15
  unreachable

133:                                              ; preds = %125
  %134 = trunc i33 %129 to i32
  store i32 %134, i32* %108, align 4
  br label %135

135:                                              ; preds = %133, %120
  %136 = phi i32 [ %134, %133 ], [ %121, %120 ]
  %137 = load atomic i32, i32* %104 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %142

140:                                              ; preds = %135
  %141 = add i32 %136, -1
  store i32 %141, i32* %108, align 4
  br label %142

142:                                              ; preds = %140, %135
  %143 = phi i32 [ %141, %140 ], [ %136, %135 ]
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #15
  br label %146

146:                                              ; preds = %96, %142, %145
  %147 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i8** %147, align 8
  %148 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %148, align 8
  %149 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendIPKcNS7_6StringEEEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %4, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %5) #15
  %150 = bitcast %"class.blink::ExecutionContext"* %15 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %151 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %150, align 8
  %152 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %151, i64 52
  %153 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %152, align 8
  call void %153(%"class.blink::ExecutionContext"* nonnull %15, %"class.blink::ConsoleMessage"* %149, i1 zeroext false) #15
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %146
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #15
  br label %169

169:                                              ; preds = %146, %165, %168
  br i1 %102, label %183, label %170

170:                                              ; preds = %169
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  br i1 %174, label %177, label %179

177:                                              ; preds = %170
  %178 = add i32 %176, -1
  store i32 %178, i32* %175, align 4
  br label %179

179:                                              ; preds = %177, %170
  %180 = phi i32 [ %178, %177 ], [ %176, %170 ]
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %179
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #15
  br label %183

183:                                              ; preds = %169, %179, %182
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %97) #15
  %184 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 1, i32 1
  %185 = bitcast i8* %184 to %"class.WTF::StringImpl"**
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %187, label %323, label %188

188:                                              ; preds = %183
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  br i1 %192, label %195, label %205

195:                                              ; preds = %188
  %196 = zext i32 %194 to i33
  %197 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %196, i33 1) #15
  %198 = extractvalue { i33, i1 } %197, 1
  %199 = extractvalue { i33, i1 } %197, 0
  %200 = icmp slt i33 %199, 0
  %201 = or i1 %198, %200
  br i1 %201, label %202, label %203, !prof !3

202:                                              ; preds = %195
  call void @llvm.trap() #15
  unreachable

203:                                              ; preds = %195
  %204 = trunc i33 %199 to i32
  store i32 %204, i32* %193, align 4
  br label %205

205:                                              ; preds = %188, %203
  %206 = phi i32 [ %204, %203 ], [ %194, %188 ]
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 1
  %208 = load i32, i32* %207, align 4
  %209 = icmp ugt i32 %208, 1
  %210 = load atomic i32, i32* %189 monotonic, align 4
  %211 = and i32 %210, 2
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %216

213:                                              ; preds = %205
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 0
  %215 = add i32 %206, -1
  store i32 %215, i32* %214, align 4
  br label %216

216:                                              ; preds = %213, %205
  %217 = phi i32 [ %215, %213 ], [ %206, %205 ]
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %186) #15
  br i1 %209, label %221, label %323

220:                                              ; preds = %216
  br i1 %209, label %221, label %323

221:                                              ; preds = %219, %220
  %222 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %222) #15
  store i32 8, i32* %6, align 4
  %223 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %223) #15
  store i32 2, i32* %7, align 4
  %224 = bitcast %"class.WTF::StringAppend"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %224) #15
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %226 = icmp eq %"class.WTF::StringImpl"* %225, null
  br i1 %226, label %286, label %227

227:                                              ; preds = %221
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load atomic i32, i32* %228 monotonic, align 4
  %230 = and i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 0
  %233 = load i32, i32* %232, align 4
  br i1 %231, label %234, label %244

234:                                              ; preds = %227
  %235 = zext i32 %233 to i33
  %236 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %235, i33 1) #15
  %237 = extractvalue { i33, i1 } %236, 1
  %238 = extractvalue { i33, i1 } %236, 0
  %239 = icmp slt i33 %238, 0
  %240 = or i1 %237, %239
  br i1 %240, label %241, label %242, !prof !3

241:                                              ; preds = %234
  call void @llvm.trap() #15
  unreachable

242:                                              ; preds = %234
  %243 = trunc i33 %238 to i32
  store i32 %243, i32* %232, align 4
  br label %244

244:                                              ; preds = %227, %242
  %245 = phi i32 [ %243, %242 ], [ %233, %227 ]
  %246 = load atomic i32, i32* %228 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 0
  br i1 %248, label %250, label %260

250:                                              ; preds = %244
  %251 = zext i32 %245 to i33
  %252 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %251, i33 1) #15
  %253 = extractvalue { i33, i1 } %252, 1
  %254 = extractvalue { i33, i1 } %252, 0
  %255 = icmp slt i33 %254, 0
  %256 = or i1 %253, %255
  br i1 %256, label %257, label %258, !prof !3

257:                                              ; preds = %250
  call void @llvm.trap() #15
  unreachable

258:                                              ; preds = %250
  %259 = trunc i33 %254 to i32
  store i32 %259, i32* %249, align 4
  br label %260

260:                                              ; preds = %258, %244
  %261 = phi i32 [ %259, %258 ], [ %245, %244 ]
  %262 = load atomic i32, i32* %228 monotonic, align 4
  %263 = and i32 %262, 2
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %275

265:                                              ; preds = %260
  %266 = zext i32 %261 to i33
  %267 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %266, i33 1) #15
  %268 = extractvalue { i33, i1 } %267, 1
  %269 = extractvalue { i33, i1 } %267, 0
  %270 = icmp slt i33 %269, 0
  %271 = or i1 %268, %270
  br i1 %271, label %272, label %273, !prof !3

272:                                              ; preds = %265
  call void @llvm.trap() #15
  unreachable

273:                                              ; preds = %265
  %274 = trunc i33 %269 to i32
  store i32 %274, i32* %249, align 4
  br label %275

275:                                              ; preds = %273, %260
  %276 = phi i32 [ %274, %273 ], [ %261, %260 ]
  %277 = load atomic i32, i32* %228 monotonic, align 4
  %278 = and i32 %277, 2
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %282

280:                                              ; preds = %275
  %281 = add i32 %276, -1
  store i32 %281, i32* %249, align 4
  br label %282

282:                                              ; preds = %280, %275
  %283 = phi i32 [ %281, %280 ], [ %276, %275 ]
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %286

285:                                              ; preds = %282
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %225) #15
  br label %286

286:                                              ; preds = %221, %282, %285
  %287 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8** %287, align 8
  %288 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %225, %"class.WTF::StringImpl"** %288, align 8
  %289 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendIPKcNS7_6StringEEEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %7, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %8) #15
  %290 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %150, align 8
  %291 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %290, i64 52
  %292 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %291, align 8
  call void %292(%"class.blink::ExecutionContext"* nonnull %15, %"class.blink::ConsoleMessage"* %289, i1 zeroext false) #15
  %293 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %288, align 8
  %294 = icmp eq %"class.WTF::StringImpl"* %293, null
  br i1 %294, label %308, label %295

295:                                              ; preds = %286
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = and i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 0
  %301 = load i32, i32* %300, align 4
  br i1 %299, label %302, label %304

302:                                              ; preds = %295
  %303 = add i32 %301, -1
  store i32 %303, i32* %300, align 4
  br label %304

304:                                              ; preds = %302, %295
  %305 = phi i32 [ %303, %302 ], [ %301, %295 ]
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %308

307:                                              ; preds = %304
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %293) #15
  br label %308

308:                                              ; preds = %286, %304, %307
  br i1 %226, label %322, label %309

309:                                              ; preds = %308
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %311 = load atomic i32, i32* %310 monotonic, align 4
  %312 = and i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 0
  %315 = load i32, i32* %314, align 4
  br i1 %313, label %316, label %318

316:                                              ; preds = %309
  %317 = add i32 %315, -1
  store i32 %317, i32* %314, align 4
  br label %318

318:                                              ; preds = %316, %309
  %319 = phi i32 [ %317, %316 ], [ %315, %309 ]
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %322

321:                                              ; preds = %318
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %225) #15
  br label %322

322:                                              ; preds = %308, %318, %321
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %224) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %223) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %222) #15
  br label %323

323:                                              ; preds = %183, %219, %220, %322, %92
  %324 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 1
  %325 = bitcast %"class.blink::FontResourceClient.base"* %324 to %"class.blink::ResourceClient"*
  call void @_ZN5blink14ResourceClient11SetResourceEPNS_8ResourceEPN4base22SingleThreadTaskRunnerE(%"class.blink::ResourceClient"* %325, %"class.blink::Resource"* null, %"class.base::SingleThreadTaskRunner"* null) #15
  %326 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 0
  call void @_ZN5blink17CSSFontFaceSource10PruneTableEv(%"class.blink::CSSFontFaceSource"* %326) #15
  %327 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %9, align 8
  %328 = bitcast %"class.blink::FontSelector"* %327 to %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)***
  %329 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)**, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*** %328, align 8
  %330 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %329, i64 21
  %331 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %330, align 8
  %332 = call %"class.blink::ExecutionContext"* %331(%"class.blink::FontSelector"* %327) #15
  %333 = icmp eq %"class.blink::ExecutionContext"* %332, null
  br i1 %333, label %398, label %334

334:                                              ; preds = %323
  %335 = bitcast %"class.blink::ExecutionContext"* %332 to i1 (%"class.blink::ExecutionContext"*)***
  %336 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %335, align 8
  %337 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %336, i64 1
  %338 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %337, align 8
  %339 = call zeroext i1 %338(%"class.blink::ExecutionContext"* nonnull %332) #15
  br i1 %339, label %340, label %398

340:                                              ; preds = %334
  %341 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %332, i64 -1, i32 8
  %342 = bitcast i32* %341 to %"class.blink::LocalDOMWindow"*
  %343 = call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %342) #15
  %344 = icmp eq %"class.blink::Document"* %343, null
  br i1 %344, label %398, label %345

345:                                              ; preds = %340
  %346 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %9, align 8
  %347 = bitcast %"class.blink::FontSelector"* %346 to %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)***
  %348 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)**, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*** %347, align 8
  %349 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %348, i64 21
  %350 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %349, align 8
  %351 = call %"class.blink::ExecutionContext"* %350(%"class.blink::FontSelector"* %346) #15
  %352 = icmp eq %"class.blink::ExecutionContext"* %351, null
  br i1 %352, label %363, label %353

353:                                              ; preds = %345
  %354 = bitcast %"class.blink::ExecutionContext"* %351 to i1 (%"class.blink::ExecutionContext"*)***
  %355 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %354, align 8
  %356 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %355, i64 1
  %357 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %356, align 8
  %358 = call zeroext i1 %357(%"class.blink::ExecutionContext"* nonnull %351) #15
  br i1 %358, label %359, label %363

359:                                              ; preds = %353
  %360 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %351, i64 -1, i32 8
  %361 = bitcast i32* %360 to %"class.blink::LocalDOMWindow"*
  %362 = call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %361) #15
  br label %363

363:                                              ; preds = %345, %353, %359
  %364 = phi %"class.blink::Document"* [ %362, %359 ], [ null, %353 ], [ null, %345 ]
  %365 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %364, i64 0, i32 187, i32 0, i32 0
  %366 = load %"class.blink::FontPreloadManager"*, %"class.blink::FontPreloadManager"** %365, align 8
  %367 = getelementptr inbounds %"class.blink::FontPreloadManager", %"class.blink::FontPreloadManager"* %366, i64 0, i32 6
  %368 = load i32, i32* %367, align 8
  %369 = icmp eq i32 %368, 3
  br i1 %369, label %372, label %370

370:                                              ; preds = %363
  %371 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 14
  store i8 1, i8* %371, align 1
  br label %372

372:                                              ; preds = %370, %363
  %373 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %9, align 8
  %374 = bitcast %"class.blink::FontSelector"* %373 to %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)***
  %375 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)**, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*** %374, align 8
  %376 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %375, i64 21
  %377 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %376, align 8
  %378 = call %"class.blink::ExecutionContext"* %377(%"class.blink::FontSelector"* %373) #15
  %379 = icmp eq %"class.blink::ExecutionContext"* %378, null
  br i1 %379, label %390, label %380

380:                                              ; preds = %372
  %381 = bitcast %"class.blink::ExecutionContext"* %378 to i1 (%"class.blink::ExecutionContext"*)***
  %382 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %381, align 8
  %383 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %382, i64 1
  %384 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %383, align 8
  %385 = call zeroext i1 %384(%"class.blink::ExecutionContext"* nonnull %378) #15
  br i1 %385, label %386, label %390

386:                                              ; preds = %380
  %387 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %378, i64 -1, i32 8
  %388 = bitcast i32* %387 to %"class.blink::LocalDOMWindow"*
  %389 = call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %388) #15
  br label %390

390:                                              ; preds = %372, %380, %386
  %391 = phi %"class.blink::Document"* [ %389, %386 ], [ null, %380 ], [ null, %372 ]
  %392 = call %"class.blink::FontFaceSetDocument"* @_ZN5blink19FontFaceSetDocument4FromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %391) #15
  %393 = getelementptr inbounds %"class.blink::FontFaceSetDocument", %"class.blink::FontFaceSetDocument"* %392, i64 0, i32 6
  %394 = load i8, i8* %393, align 8, !range !2
  %395 = icmp eq i8 %394, 0
  br i1 %395, label %396, label %398

396:                                              ; preds = %390
  %397 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 16
  store i8 1, i8* %397, align 1
  br label %398

398:                                              ; preds = %390, %323, %334, %340, %396
  %399 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 1, i32 0, i32 4
  %400 = load i8, i8* %399, align 8, !range !2
  %401 = icmp eq i8 %400, 0
  br i1 %401, label %404, label %402

402:                                              ; preds = %398
  %403 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 10
  store i32 3, i32* %403, align 8
  br label %406

404:                                              ; preds = %398
  %405 = call zeroext i1 @_ZN5blink20RemoteFontFaceSource12UpdatePeriodEv(%"class.blink::RemoteFontFaceSource"* %0)
  br label %406

406:                                              ; preds = %404, %402
  %407 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 4, i32 0, i32 0
  %408 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %407, align 8
  %409 = call zeroext i1 @_ZN5blink11CSSFontFace10FontLoadedEPNS_17CSSFontFaceSourceE(%"class.blink::CSSFontFace"* %408, %"class.blink::CSSFontFaceSource"* %326) #15
  br i1 %409, label %410, label %435

410:                                              ; preds = %406
  %411 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %9, align 8
  %412 = bitcast %"class.blink::FontSelector"* %411 to void (%"class.blink::FontSelector"*, i32)***
  %413 = load void (%"class.blink::FontSelector"*, i32)**, void (%"class.blink::FontSelector"*, i32)*** %412, align 8
  %414 = getelementptr inbounds void (%"class.blink::FontSelector"*, i32)*, void (%"class.blink::FontSelector"*, i32)** %413, i64 20
  %415 = load void (%"class.blink::FontSelector"*, i32)*, void (%"class.blink::FontSelector"*, i32)** %414, align 8
  call void %415(%"class.blink::FontSelector"* %411, i32 1) #15
  %416 = call %"class.blink::FontCustomPlatformData"* @_ZN5blink12FontResource17GetCustomFontDataEv(%"class.blink::FontResource"* %33) #15
  %417 = icmp eq %"class.blink::FontCustomPlatformData"* %416, null
  br i1 %417, label %435, label %418

418:                                              ; preds = %410
  %419 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %407, align 8
  %420 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %419, i64 0, i32 3, i32 0, i32 0
  %421 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %420, align 8
  %422 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %50) #15
  %423 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %424 = and i32 %423, 32
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %428, label %426

426:                                              ; preds = %418
  %427 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %422, i64 0, i32 4
  call void @_ZN5blink5probe16FontsUpdatedImplEPNS_16ExecutionContextEPKNS_8FontFaceERKN3WTF6StringEPKNS_22FontCustomPlatformDataE(%"class.blink::ExecutionContext"* nonnull %15, %"class.blink::FontFace"* %421, %"class.WTF::String"* dereferenceable(8) %427, %"class.blink::FontCustomPlatformData"* nonnull %416) #15
  br label %428

428:                                              ; preds = %426, %418
  %429 = getelementptr inbounds %"class.blink::FontCustomPlatformData", %"class.blink::FontCustomPlatformData"* %416, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %429) #15
  %430 = getelementptr inbounds %"class.blink::FontCustomPlatformData", %"class.blink::FontCustomPlatformData"* %416, i64 0, i32 0, i32 0, i32 0, i32 0
  %431 = load i32, i32* %430, align 4
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %435

433:                                              ; preds = %428
  call void @_ZN5blink22FontCustomPlatformDataD1Ev(%"class.blink::FontCustomPlatformData"* nonnull %416) #15
  %434 = bitcast %"class.blink::FontCustomPlatformData"* %416 to i8*
  call void @free(i8* %434) #15
  br label %435

435:                                              ; preds = %410, %433, %428, %26, %406, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20RemoteFontFaceSource18FontLoadHistograms16RecordRemoteFontEPKNS_12FontResourceE(%"class.blink::RemoteFontFaceSource::FontLoadHistograms"*, %"class.blink::FontResource"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.blink::FontResource", %"class.blink::FontResource"* %1, i64 0, i32 0, i32 26
  %5 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %4) #15
  %6 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %8 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 4, i32* %10, align 8
  %11 = tail call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %5, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %3) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  br i1 %11, label %16, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::FontResource", %"class.blink::FontResource"* %1, i64 0, i32 0, i32 29
  %14 = tail call zeroext i1 @_ZNK5blink16ResourceResponse9WasCachedEv(%"class.blink::ResourceResponse"* %13) #15
  %15 = select i1 %14, i32 3, i32 4
  br label %16

16:                                               ; preds = %2, %12
  %17 = phi i32 [ %15, %12 ], [ 1, %2 ]
  %18 = getelementptr inbounds %"class.blink::RemoteFontFaceSource::FontLoadHistograms", %"class.blink::RemoteFontFaceSource::FontLoadHistograms"* %0, i64 0, i32 4
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %27

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::RemoteFontFaceSource::FontLoadHistograms", %"class.blink::RemoteFontFaceSource::FontLoadHistograms"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %21
  store i32 2, i32* %18, align 4
  br label %34

26:                                               ; preds = %21
  store i32 %17, i32* %18, align 4
  br label %27

27:                                               ; preds = %16, %26
  %28 = phi i32 [ %19, %16 ], [ %17, %26 ]
  %29 = icmp ult i32 %28, 5
  br i1 %29, label %30, label %34

30:                                               ; preds = %27
  %31 = sext i32 %28 to i64
  %32 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN5blink20RemoteFontFaceSource18FontLoadHistograms22DataSourceMetricsValueEv, i64 0, i64 %31
  %33 = load i32, i32* %32, align 4
  br label %34

34:                                               ; preds = %27, %30, %25
  %35 = phi i32 [ 3, %25 ], [ %33, %30 ], [ 0, %27 ]
  tail call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i32 %35, i32 4) #15
  %36 = load i32, i32* %18, align 4
  %37 = add i32 %36, -3
  %38 = icmp ult i32 %37, 2
  br i1 %38, label %39, label %44

39:                                               ; preds = %34
  %40 = tail call i64 @_ZN4base9TimeTicks3NowEv() #15
  %41 = getelementptr inbounds %"class.blink::RemoteFontFaceSource::FontLoadHistograms", %"class.blink::RemoteFontFaceSource::FontLoadHistograms"* %0, i64 0, i32 0, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = sub nsw i64 %40, %42
  tail call void @_ZN5blink20RemoteFontFaceSource18FontLoadHistograms23RecordLoadTimeHistogramEPKNS_12FontResourceEN4base9TimeDeltaE(%"class.blink::RemoteFontFaceSource::FontLoadHistograms"* %0, %"class.blink::FontResource"* %1, i64 %43)
  br label %44

44:                                               ; preds = %34, %39
  ret void
}

declare %"class.blink::FontCustomPlatformData"* @_ZN5blink12FontResource17GetCustomFontDataEv(%"class.blink::FontResource"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20RemoteFontFaceSource12UpdatePeriodEv(%"class.blink::RemoteFontFaceSource"*) unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZNK5blink20RemoteFontFaceSource13ComputePeriodEv(%"class.blink::RemoteFontFaceSource"* %0)
  %3 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 10
  %4 = load i32, i32* %3, align 8
  %5 = icmp ne i32 %2, %4
  %6 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::Resource"*, %"class.blink::Resource"** %6, align 8
  %8 = icmp eq %"class.blink::Resource"* %7, null
  br i1 %8, label %43, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %7, i64 0, i32 2
  %11 = load i8, i8* %10, align 1
  %12 = icmp ne i8 %11, 1
  %13 = icmp eq i32 %4, %2
  %14 = or i1 %13, %12
  br i1 %14, label %43, label %15

15:                                               ; preds = %9
  %16 = icmp eq i32 %4, 0
  %17 = icmp eq i32 %2, 0
  %18 = or i1 %17, %16
  br i1 %18, label %19, label %43

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 0
  tail call void @_ZN5blink17CSSFontFaceSource10PruneTableEv(%"class.blink::CSSFontFaceSource"* %20) #15
  %21 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 4, i32 0, i32 0
  %22 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %21, align 8
  %23 = tail call zeroext i1 @_ZN5blink11CSSFontFace25FallbackVisibilityChangedEPNS_20RemoteFontFaceSourceE(%"class.blink::CSSFontFace"* %22, %"class.blink::RemoteFontFaceSource"* %0) #15
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 5, i32 0, i32 0
  %26 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %25, align 8
  %27 = bitcast %"class.blink::FontSelector"* %26 to void (%"class.blink::FontSelector"*, i32)***
  %28 = load void (%"class.blink::FontSelector"*, i32)**, void (%"class.blink::FontSelector"*, i32)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::FontSelector"*, i32)*, void (%"class.blink::FontSelector"*, i32)** %28, i64 20
  %30 = load void (%"class.blink::FontSelector"*, i32)*, void (%"class.blink::FontSelector"*, i32)** %29, align 8
  tail call void %30(%"class.blink::FontSelector"* %26, i32 0) #15
  br label %31

31:                                               ; preds = %24, %19
  %32 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 12, i32 1, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 12, i32 2
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %43

39:                                               ; preds = %35
  %40 = tail call i64 @_ZN4base9TimeTicks3NowEv() #15
  %41 = load i64, i64* %32, align 8
  %42 = sub nsw i64 %40, %41
  tail call void @_ZN4base17UmaHistogramTimesEPKcNS_9TimeDeltaE(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i64 %42) #15
  store i8 1, i8* %36, align 8
  br label %43

43:                                               ; preds = %9, %1, %39, %35, %31, %15
  store i32 %2, i32* %3, align 8
  ret i1 %5
}

declare zeroext i1 @_ZN5blink11CSSFontFace10FontLoadedEPNS_17CSSFontFaceSourceE(%"class.blink::CSSFontFace"*, %"class.blink::CSSFontFaceSource"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink20RemoteFontFaceSource14NotifyFinishedEPNS_8ResourceE(%"class.blink::RemoteFontFaceSource"*, %"class.blink::Resource"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 -1, i32 4
  %4 = bitcast %"class.blink::Member.375"* %3 to %"class.blink::RemoteFontFaceSource"*
  tail call void @_ZN5blink20RemoteFontFaceSource14NotifyFinishedEPNS_8ResourceE(%"class.blink::RemoteFontFaceSource"* %4, %"class.blink::Resource"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20RemoteFontFaceSource26FontLoadShortLimitExceededEPNS_12FontResourceE(%"class.blink::RemoteFontFaceSource"*, %"class.blink::FontResource"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::Resource"*, %"class.blink::Resource"** %3, align 8
  %5 = icmp eq %"class.blink::Resource"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 9
  store i32 1, i32* %7, align 4
  %8 = tail call zeroext i1 @_ZN5blink20RemoteFontFaceSource12UpdatePeriodEv(%"class.blink::RemoteFontFaceSource"* %0)
  br label %9

9:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink20RemoteFontFaceSource26FontLoadShortLimitExceededEPNS_12FontResourceE(%"class.blink::RemoteFontFaceSource"*, %"class.blink::FontResource"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 -1, i32 4
  %4 = bitcast %"class.blink::Member.375"* %3 to %"class.blink::RemoteFontFaceSource"*
  %5 = getelementptr inbounds %"class.blink::Member.375", %"class.blink::Member.375"* %3, i64 12
  %6 = bitcast %"class.blink::Member.375"* %5 to %"class.blink::Resource"**
  %7 = load %"class.blink::Resource"*, %"class.blink::Resource"** %6, align 8
  %8 = icmp eq %"class.blink::Resource"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %4, i64 0, i32 9
  store i32 1, i32* %10, align 4
  %11 = tail call zeroext i1 @_ZN5blink20RemoteFontFaceSource12UpdatePeriodEv(%"class.blink::RemoteFontFaceSource"* %4) #15
  br label %12

12:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20RemoteFontFaceSource25FontLoadLongLimitExceededEPNS_12FontResourceE(%"class.blink::RemoteFontFaceSource"*, %"class.blink::FontResource"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::Resource"*, %"class.blink::Resource"** %3, align 8
  %5 = icmp eq %"class.blink::Resource"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 9
  store i32 2, i32* %7, align 4
  %8 = tail call zeroext i1 @_ZN5blink20RemoteFontFaceSource12UpdatePeriodEv(%"class.blink::RemoteFontFaceSource"* %0)
  %9 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 12, i32 3
  store i8 1, i8* %9, align 1
  %10 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 12, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  store i32 2, i32* %10, align 4
  br label %19

18:                                               ; preds = %13
  store i32 4, i32* %10, align 4
  br label %19

19:                                               ; preds = %18, %17, %6, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink20RemoteFontFaceSource18FontLoadHistograms17LongLimitExceededEv(%"class.blink::RemoteFontFaceSource::FontLoadHistograms"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteFontFaceSource::FontLoadHistograms", %"class.blink::RemoteFontFaceSource::FontLoadHistograms"* %0, i64 0, i32 3
  store i8 1, i8* %2, align 1
  %3 = getelementptr inbounds %"class.blink::RemoteFontFaceSource::FontLoadHistograms", %"class.blink::RemoteFontFaceSource::FontLoadHistograms"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::RemoteFontFaceSource::FontLoadHistograms", %"class.blink::RemoteFontFaceSource::FontLoadHistograms"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  %10 = select i1 %9, i32 2, i32 4
  store i32 %10, i32* %3, align 4
  br label %11

11:                                               ; preds = %6, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink20RemoteFontFaceSource25FontLoadLongLimitExceededEPNS_12FontResourceE(%"class.blink::RemoteFontFaceSource"*, %"class.blink::FontResource"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 -1, i32 4
  %4 = bitcast %"class.blink::Member.375"* %3 to %"class.blink::RemoteFontFaceSource"*
  %5 = getelementptr inbounds %"class.blink::Member.375", %"class.blink::Member.375"* %3, i64 12
  %6 = bitcast %"class.blink::Member.375"* %5 to %"class.blink::Resource"**
  %7 = load %"class.blink::Resource"*, %"class.blink::Resource"** %6, align 8
  %8 = icmp eq %"class.blink::Resource"* %7, null
  br i1 %8, label %23, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %4, i64 0, i32 9
  store i32 2, i32* %10, align 4
  %11 = tail call zeroext i1 @_ZN5blink20RemoteFontFaceSource12UpdatePeriodEv(%"class.blink::RemoteFontFaceSource"* %4) #15
  %12 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %4, i64 0, i32 12, i32 3
  store i8 1, i8* %12, align 1
  %13 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %4, i64 0, i32 12, i32 4
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::Member.375", %"class.blink::Member.375"* %3, i64 20
  %18 = bitcast %"class.blink::Member.375"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  store i32 2, i32* %13, align 4
  br label %23

22:                                               ; preds = %16
  store i32 4, i32* %13, align 4
  br label %23

23:                                               ; preds = %2, %9, %21, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20RemoteFontFaceSource10SetDisplayENS_11FontDisplayE(%"class.blink::RemoteFontFaceSource"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::Resource"*, %"class.blink::Resource"** %3, align 8
  %5 = icmp eq %"class.blink::Resource"* %4, null
  br i1 %5, label %32, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 5, i32 0, i32 0
  %8 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %7, align 8
  %9 = bitcast %"class.blink::FontSelector"* %8 to %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)***
  %10 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)**, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %10, i64 21
  %12 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %11, align 8
  %13 = tail call %"class.blink::ExecutionContext"* %12(%"class.blink::FontSelector"* %8) #15
  %14 = add i32 %1, -3
  %15 = icmp ugt i32 %14, 1
  %16 = icmp ne %"class.blink::ExecutionContext"* %13, null
  %17 = and i1 %15, %16
  br i1 %17, label %18, label %27

18:                                               ; preds = %6
  %19 = bitcast %"class.blink::ExecutionContext"* %13 to i1 (%"class.blink::ExecutionContext"*)***
  %20 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %20, i64 1
  %22 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.blink::ExecutionContext"* nonnull %13) #15
  br i1 %23, label %24, label %27

24:                                               ; preds = %18
  %25 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %26 = tail call zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_13ReportOptionsERKN3WTF6StringES7_(%"class.blink::ExecutionContext"* nonnull %13, i32 1, i32 0, %"class.WTF::String"* dereferenceable(8) %25, %"class.WTF::String"* dereferenceable(8) %25) #15
  br i1 %26, label %27, label %28

27:                                               ; preds = %24, %18, %6
  br label %28

28:                                               ; preds = %24, %27
  %29 = phi i32 [ %1, %27 ], [ 4, %24 ]
  %30 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 8
  store i32 %29, i32* %30, align 8
  %31 = tail call zeroext i1 @_ZN5blink20RemoteFontFaceSource12UpdatePeriodEv(%"class.blink::RemoteFontFaceSource"* %0)
  br label %32

32:                                               ; preds = %2, %28
  ret void
}

declare zeroext i1 @_ZN5blink11CSSFontFace25FallbackVisibilityChangedEPNS_20RemoteFontFaceSourceE(%"class.blink::CSSFontFace"*, %"class.blink::RemoteFontFaceSource"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20RemoteFontFaceSource18FontLoadHistograms18RecordFallbackTimeEv(%"class.blink::RemoteFontFaceSource::FontLoadHistograms"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteFontFaceSource::FontLoadHistograms", %"class.blink::RemoteFontFaceSource::FontLoadHistograms"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::RemoteFontFaceSource::FontLoadHistograms", %"class.blink::RemoteFontFaceSource::FontLoadHistograms"* %0, i64 0, i32 2
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = tail call i64 @_ZN4base9TimeTicks3NowEv() #15
  %11 = load i64, i64* %2, align 8
  %12 = sub nsw i64 %10, %11
  tail call void @_ZN4base17UmaHistogramTimesEPKcNS_9TimeDeltaE(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i64 %12) #15
  store i8 1, i8* %6, align 8
  br label %13

13:                                               ; preds = %5, %1, %9
  ret void
}

declare zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_13ReportOptionsERKN3WTF6StringES7_(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink20RemoteFontFaceSource40IsLowPriorityLoadingAllowedForRemoteFontEv(%"class.blink::RemoteFontFaceSource"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 13
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZThn80_NK5blink20RemoteFontFaceSource40IsLowPriorityLoadingAllowedForRemoteFontEv(%"class.blink::RemoteFontFaceSource"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 -1, i32 4
  %3 = getelementptr inbounds %"class.blink::Member.375", %"class.blink::Member.375"* %2, i64 23
  %4 = bitcast %"class.blink::Member.375"* %3 to i8*
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZN5blink20RemoteFontFaceSource14CreateFontDataERKNS_15FontDescriptionERKNS_25FontSelectionCapabilitiesE(%"class.blink::RemoteFontFaceSource"*, %"class.blink::FontDescription"* dereferenceable(80), %"struct.blink::FontSelectionCapabilities"* dereferenceable(14)) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::FontMetricsOverride", align 4
  %5 = alloca %"class.blink::FontPlatformData", align 8
  %6 = alloca %"struct.blink::FontSelectionRequest", align 8
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 10
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 2
  br i1 %10, label %65, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::Resource"*, %"class.blink::Resource"** %12, align 8
  %14 = icmp eq %"class.blink::Resource"* %13, null
  br i1 %14, label %15, label %19

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 6, i32 0
  %17 = load %"class.blink::FontCustomPlatformData"*, %"class.blink::FontCustomPlatformData"** %16, align 8
  %18 = icmp eq %"class.blink::FontCustomPlatformData"* %17, null
  br i1 %18, label %65, label %21

19:                                               ; preds = %11
  %20 = tail call %"class.blink::SimpleFontData"* @_ZN5blink20RemoteFontFaceSource29CreateLoadingFallbackFontDataERKNS_15FontDescriptionE(%"class.blink::RemoteFontFaceSource"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1)
  br label %65

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 12, i32 1, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %34, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 12, i32 2
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %25
  %30 = tail call i64 @_ZN4base9TimeTicks3NowEv() #15
  %31 = load i64, i64* %22, align 8
  %32 = sub nsw i64 %30, %31
  tail call void @_ZN4base17UmaHistogramTimesEPKcNS_9TimeDeltaE(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i64 %32) #15
  store i8 1, i8* %26, align 8
  %33 = load %"class.blink::FontCustomPlatformData"*, %"class.blink::FontCustomPlatformData"** %16, align 8
  br label %34

34:                                               ; preds = %21, %25, %29
  %35 = phi %"class.blink::FontCustomPlatformData"* [ %17, %21 ], [ %17, %25 ], [ %33, %29 ]
  %36 = bitcast %"class.blink::FontPlatformData"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %36) #15
  %37 = tail call float @_ZNK5blink15FontDescription17EffectiveFontSizeEv(%"class.blink::FontDescription"* %1) #15
  %38 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %39 = bitcast %"struct.blink::FontDescription::BitFields"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 536870912
  %42 = icmp ne i64 %41, 0
  %43 = and i64 %40, 1073741824
  %44 = icmp ne i64 %43, 0
  %45 = bitcast %"struct.blink::FontSelectionRequest"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %45) #15
  %46 = tail call i48 @_ZNK5blink15FontDescription23GetFontSelectionRequestEv(%"class.blink::FontDescription"* %1) #15
  %47 = bitcast %"struct.blink::FontSelectionRequest"* %6 to i48*
  store i48 %46, i48* %47, align 8
  %48 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #15
  %49 = load i64, i64* %39, align 8
  %50 = lshr i64 %49, 51
  %51 = trunc i64 %50 to i32
  %52 = and i32 %51, 1
  store i32 %52, i32* %7, align 4
  %53 = trunc i64 %49 to i32
  %54 = and i32 %53, 3
  %55 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 2, i32 0
  %56 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %55, align 8
  call void @_ZN5blink22FontCustomPlatformData19GetFontPlatformDataEfbbRKNS_20FontSelectionRequestERKNS_25FontSelectionCapabilitiesERKNS_13OpticalSizingENS_15FontOrientationEPKNS_21FontVariationSettingsE(%"class.blink::FontPlatformData"* nonnull sret %5, %"class.blink::FontCustomPlatformData"* %35, float %37, i1 zeroext %42, i1 zeroext %44, %"struct.blink::FontSelectionRequest"* nonnull dereferenceable(6) %6, %"struct.blink::FontSelectionCapabilities"* dereferenceable(14) %2, i32* nonnull dereferenceable(4) %7, i32 %54, %"class.blink::FontVariationSettings"* %56) #15
  %57 = call noalias i8* @malloc(i64 16) #15
  %58 = bitcast i8* %57 to %"class.blink::CustomFontData"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #15
  %59 = getelementptr inbounds i8, i8* %57, i64 8
  %60 = bitcast i8* %59 to i32*
  store i32 1, i32* %60, align 4
  %61 = bitcast i8* %57 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14CustomFontDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  %62 = call noalias i8* @malloc(i64 224) #15
  %63 = bitcast i8* %62 to %"class.blink::SimpleFontData"*
  %64 = getelementptr inbounds %"struct.blink::FontMetricsOverride", %"struct.blink::FontMetricsOverride"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %64, i8 0, i64 24, i1 false) #15
  call void @_ZN5blink14SimpleFontDataC1ERKNS_16FontPlatformDataE13scoped_refptrINS_14CustomFontDataEEbRKNS_19FontMetricsOverrideE(%"class.blink::SimpleFontData"* %63, %"class.blink::FontPlatformData"* nonnull dereferenceable(72) %5, %"class.blink::CustomFontData"* %58, i1 zeroext false, %"struct.blink::FontMetricsOverride"* nonnull dereferenceable(24) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #15
  call void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #15
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %45) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %36) #15
  br label %65

65:                                               ; preds = %15, %3, %34, %19
  %66 = phi %"class.blink::SimpleFontData"* [ %63, %34 ], [ %20, %19 ], [ null, %15 ], [ null, %3 ]
  ret %"class.blink::SimpleFontData"* %66
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZN5blink20RemoteFontFaceSource29CreateLoadingFallbackFontDataERKNS_15FontDescriptionE(%"class.blink::RemoteFontFaceSource"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::FontMetricsOverride", align 4
  %4 = tail call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #15
  %5 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %4, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* %5, align 4
  %8 = tail call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #15
  %9 = tail call %"class.blink::SimpleFontData"* @_ZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainE(%"class.blink::FontCache"* %8, %"class.blink::FontDescription"* dereferenceable(80) %1, i32 1) #15
  %10 = icmp eq %"class.blink::SimpleFontData"* %9, null
  br i1 %10, label %97, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 10
  %14 = load i32, i32* %13, align 8
  %15 = icmp ne i32 %14, 0
  %16 = zext i1 %15 to i32
  %17 = tail call noalias i8* @malloc(i64 40) #15
  %18 = getelementptr inbounds i8, i8* %17, i64 8
  %19 = bitcast i8* %18 to i32*
  store i32 1, i32* %19, align 4
  %20 = bitcast i8* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink17CSSCustomFontDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %17, i64 16
  %22 = bitcast i8* %21 to %"class.blink::CSSFontFaceSource"**
  store %"class.blink::CSSFontFaceSource"* %12, %"class.blink::CSSFontFaceSource"** %22, align 8
  %23 = getelementptr inbounds i8, i8* %17, i64 24
  %24 = bitcast i8* %23 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %24, align 8
  %25 = ptrtoint %"class.blink::RemoteFontFaceSource"* %0 to i64
  switch i64 %25, label %26 [
    i64 0, label %52
    i64 -1, label %52
  ]

26:                                               ; preds = %11
  %27 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %28 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %27, i64 0, i32 1
  %29 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %28) #15
  %30 = icmp eq i8* %29, null
  br i1 %30, label %31, label %33, !prof !3

31:                                               ; preds = %26
  %32 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %28, i8* %32) #15
  br label %33

33:                                               ; preds = %31, %26
  %34 = phi i8* [ %32, %31 ], [ %29, %26 ]
  %35 = bitcast i8* %34 to %"class.blink::ThreadState"**
  %36 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  %38 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %39, align 8
  %41 = icmp eq %"class.blink::PersistentNode"* %40, null
  br i1 %41, label %42, label %45, !prof !3

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %38, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %43) #15
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %39, align 8
  br label %45

45:                                               ; preds = %42, %33
  %46 = phi %"class.blink::PersistentNode"* [ %44, %42 ], [ %40, %33 ]
  %47 = bitcast %"class.blink::PersistentNode"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.blink::PersistentRegion"* %38 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %46, i64 0, i32 0
  store i8* %21, i8** %50, align 8
  %51 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %46, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17CSSFontFaceSourceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %51, align 8
  store %"class.blink::PersistentNode"* %46, %"class.blink::PersistentNode"** %24, align 8
  br label %52

52:                                               ; preds = %11, %11, %45
  %53 = getelementptr inbounds i8, i8* %17, i64 32
  %54 = bitcast i8* %53 to i32*
  store i32 %16, i32* %54, align 8
  %55 = getelementptr inbounds i8, i8* %17, i64 36
  store i8 0, i8* %55, align 4
  %56 = icmp eq %"class.blink::RemoteFontFaceSource"* %0, null
  br i1 %56, label %64, label %57

57:                                               ; preds = %52
  %58 = bitcast %"class.blink::RemoteFontFaceSource"* %0 to i1 (%"class.blink::CSSFontFaceSource"*)***
  %59 = load i1 (%"class.blink::CSSFontFaceSource"*)**, i1 (%"class.blink::CSSFontFaceSource"*)*** %58, align 8
  %60 = getelementptr inbounds i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %59, i64 3
  %61 = load i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %60, align 8
  %62 = tail call zeroext i1 %61(%"class.blink::CSSFontFaceSource"* nonnull %12) #15
  %63 = zext i1 %62 to i8
  store i8 %63, i8* %55, align 4
  br label %64

64:                                               ; preds = %52, %57
  %65 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 15
  store i8 1, i8* %65, align 2
  %66 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %9, i64 0, i32 5
  %67 = bitcast i8* %17 to %"class.blink::CustomFontData"*
  %68 = icmp eq i8* %17, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %64
  %70 = bitcast i8* %18 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %70) #15
  br label %71

71:                                               ; preds = %64, %69
  %72 = tail call noalias i8* @malloc(i64 224) #15
  %73 = bitcast i8* %72 to %"class.blink::SimpleFontData"*
  %74 = getelementptr inbounds %"struct.blink::FontMetricsOverride", %"struct.blink::FontMetricsOverride"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %74, i8 0, i64 24, i1 false) #15
  call void @_ZN5blink14SimpleFontDataC1ERKNS_16FontPlatformDataE13scoped_refptrINS_14CustomFontDataEEbRKNS_19FontMetricsOverrideE(%"class.blink::SimpleFontData"* %73, %"class.blink::FontPlatformData"* dereferenceable(72) %66, %"class.blink::CustomFontData"* %67, i1 zeroext false, %"struct.blink::FontMetricsOverride"* nonnull dereferenceable(24) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #15
  br i1 %68, label %84, label %75

75:                                               ; preds = %71
  %76 = bitcast i8* %18 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %76) #15
  %77 = load i32, i32* %19, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %84

79:                                               ; preds = %75
  %80 = bitcast i8* %17 to void (%"class.blink::CustomFontData"*)***
  %81 = load void (%"class.blink::CustomFontData"*)**, void (%"class.blink::CustomFontData"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.blink::CustomFontData"*)*, void (%"class.blink::CustomFontData"*)** %81, i64 1
  %83 = load void (%"class.blink::CustomFontData"*)*, void (%"class.blink::CustomFontData"*)** %82, align 8
  call void %83(%"class.blink::CustomFontData"* nonnull %67) #15
  br label %84

84:                                               ; preds = %79, %75, %71
  %85 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %9, i64 0, i32 0, i32 1, i32 0
  %86 = getelementptr inbounds %"class.base::RefCounted.2976", %"class.base::RefCounted.2976"* %85, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %86) #15
  %87 = getelementptr inbounds %"class.base::RefCounted.2976", %"class.base::RefCounted.2976"* %85, i64 0, i32 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %97

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.base::RefCounted.2976", %"class.base::RefCounted.2976"* %85, i64 -2
  %92 = bitcast %"class.base::RefCounted.2976"* %91 to %"class.blink::FontData"*
  %93 = bitcast %"class.base::RefCounted.2976"* %91 to void (%"class.blink::FontData"*)***
  %94 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %93, align 8
  %95 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %94, i64 1
  %96 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %95, align 8
  call void %96(%"class.blink::FontData"* nonnull %92) #15
  br label %97

97:                                               ; preds = %2, %84, %90
  %98 = phi %"class.blink::SimpleFontData"* [ %73, %84 ], [ %73, %90 ], [ null, %2 ]
  %99 = call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #15
  %100 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %99, i64 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = add nsw i32 %101, -1
  store i32 %102, i32* %100, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %97
  call void @_ZN5blink9FontCache5PurgeENS_13PurgeSeverityE(%"class.blink::FontCache"* %99, i32 0) #15
  br label %105

105:                                              ; preds = %97, %104
  ret %"class.blink::SimpleFontData"* %98
}

declare void @_ZN5blink22FontCustomPlatformData19GetFontPlatformDataEfbbRKNS_20FontSelectionRequestERKNS_25FontSelectionCapabilitiesERKNS_13OpticalSizingENS_15FontOrientationEPKNS_21FontVariationSettingsE(%"class.blink::FontPlatformData"* sret, %"class.blink::FontCustomPlatformData"*, float, i1 zeroext, i1 zeroext, %"struct.blink::FontSelectionRequest"* dereferenceable(6), %"struct.blink::FontSelectionCapabilities"* dereferenceable(14), i32* dereferenceable(4), i32, %"class.blink::FontVariationSettings"*) local_unnamed_addr #1

declare float @_ZNK5blink15FontDescription17EffectiveFontSizeEv(%"class.blink::FontDescription"*) local_unnamed_addr #1

declare i48 @_ZNK5blink15FontDescription23GetFontSelectionRequestEv(%"class.blink::FontDescription"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind
declare void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"*) unnamed_addr #4

declare %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32) local_unnamed_addr #1

declare %"class.blink::SimpleFontData"* @_ZN5blink9FontCache25GetLastResortFallbackFontERKNS_15FontDescriptionENS_12ShouldRetainE(%"class.blink::FontCache"*, %"class.blink::FontDescription"* dereferenceable(80), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20RemoteFontFaceSource17BeginLoadIfNeededEv(%"class.blink::RemoteFontFaceSource"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %"class.WTF::StringAppend", align 8
  %5 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::Resource"*, %"class.blink::Resource"** %5, align 8
  %7 = icmp eq %"class.blink::Resource"* %6, null
  br i1 %7, label %200, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 5, i32 0, i32 0
  %10 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %9, align 8
  %11 = bitcast %"class.blink::FontSelector"* %10 to %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)***
  %12 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)**, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %12, i64 21
  %14 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %13, align 8
  %15 = tail call %"class.blink::ExecutionContext"* %14(%"class.blink::FontSelector"* %10) #15
  %16 = icmp eq %"class.blink::ExecutionContext"* %15, null
  br i1 %16, label %200, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 4, i32 0, i32 0
  %19 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %19, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %20, align 8
  %22 = tail call i32 @_ZNK5blink8FontFace14GetFontDisplayEv(%"class.blink::FontFace"* %21) #15
  %23 = load %"class.blink::Resource"*, %"class.blink::Resource"** %5, align 8
  %24 = icmp eq %"class.blink::Resource"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %17
  %26 = bitcast %"class.blink::Resource"* %23 to %"class.blink::FontResource"*
  br label %54

27:                                               ; preds = %17
  %28 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %9, align 8
  %29 = bitcast %"class.blink::FontSelector"* %28 to %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)***
  %30 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)**, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %30, i64 21
  %32 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %31, align 8
  %33 = tail call %"class.blink::ExecutionContext"* %32(%"class.blink::FontSelector"* %28) #15
  %34 = add i32 %22, -3
  %35 = icmp ugt i32 %34, 1
  %36 = icmp ne %"class.blink::ExecutionContext"* %33, null
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %47

38:                                               ; preds = %27
  %39 = bitcast %"class.blink::ExecutionContext"* %33 to i1 (%"class.blink::ExecutionContext"*)***
  %40 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %40, i64 1
  %42 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.blink::ExecutionContext"* nonnull %33) #15
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  %45 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %46 = tail call zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_13ReportOptionsERKN3WTF6StringES7_(%"class.blink::ExecutionContext"* nonnull %33, i32 1, i32 0, %"class.WTF::String"* dereferenceable(8) %45, %"class.WTF::String"* dereferenceable(8) %45) #15
  br i1 %46, label %47, label %48

47:                                               ; preds = %44, %38, %27
  br label %48

48:                                               ; preds = %47, %44
  %49 = phi i32 [ %22, %47 ], [ 4, %44 ]
  %50 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 8
  store i32 %49, i32* %50, align 8
  %51 = tail call zeroext i1 @_ZN5blink20RemoteFontFaceSource12UpdatePeriodEv(%"class.blink::RemoteFontFaceSource"* %0) #15
  %52 = bitcast %"class.blink::Resource"** %5 to %"class.blink::FontResource"**
  %53 = load %"class.blink::FontResource"*, %"class.blink::FontResource"** %52, align 8
  br label %54

54:                                               ; preds = %25, %48
  %55 = phi %"class.blink::FontResource"* [ %26, %25 ], [ %53, %48 ]
  %56 = getelementptr inbounds %"class.blink::FontResource", %"class.blink::FontResource"* %55, i64 0, i32 0
  %57 = getelementptr inbounds %"class.blink::FontResource", %"class.blink::FontResource"* %55, i64 0, i32 0, i32 2
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %176

60:                                               ; preds = %54
  %61 = tail call zeroext i1 @_ZNK5blink12FontResource40IsLowPriorityLoadingAllowedForRemoteFontEv(%"class.blink::FontResource"* %55) #15
  br i1 %61, label %62, label %157

62:                                               ; preds = %60
  %63 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %9, align 8
  %64 = bitcast %"class.blink::FontSelector"* %63 to %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)***
  %65 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)**, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %65, i64 21
  %67 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %66, align 8
  %68 = tail call %"class.blink::ExecutionContext"* %67(%"class.blink::FontSelector"* %63) #15
  %69 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69) #15
  store i32 12, i32* %2, align 4
  %70 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70) #15
  store i32 1, i32* %3, align 4
  %71 = bitcast %"class.WTF::StringAppend"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #15
  %72 = getelementptr inbounds %"class.blink::FontResource", %"class.blink::FontResource"* %55, i64 0, i32 0, i32 26
  %73 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %72) #15
  %74 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"* %73) #15
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %119, label %76

76:                                               ; preds = %62
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %93

83:                                               ; preds = %76
  %84 = zext i32 %82 to i33
  %85 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %84, i33 1) #15
  %86 = extractvalue { i33, i1 } %85, 1
  %87 = extractvalue { i33, i1 } %85, 0
  %88 = icmp slt i33 %87, 0
  %89 = or i1 %86, %88
  br i1 %89, label %90, label %91, !prof !3

90:                                               ; preds = %83
  tail call void @llvm.trap() #15
  unreachable

91:                                               ; preds = %83
  %92 = trunc i33 %87 to i32
  store i32 %92, i32* %81, align 4
  br label %93

93:                                               ; preds = %91, %76
  %94 = phi i32 [ %92, %91 ], [ %82, %76 ]
  %95 = load atomic i32, i32* %77 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %108

98:                                               ; preds = %93
  %99 = zext i32 %94 to i33
  %100 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %99, i33 1) #15
  %101 = extractvalue { i33, i1 } %100, 1
  %102 = extractvalue { i33, i1 } %100, 0
  %103 = icmp slt i33 %102, 0
  %104 = or i1 %101, %103
  br i1 %104, label %105, label %106, !prof !3

105:                                              ; preds = %98
  tail call void @llvm.trap() #15
  unreachable

106:                                              ; preds = %98
  %107 = trunc i33 %102 to i32
  store i32 %107, i32* %81, align 4
  br label %108

108:                                              ; preds = %106, %93
  %109 = phi i32 [ %107, %106 ], [ %94, %93 ]
  %110 = load atomic i32, i32* %77 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %108
  %114 = add i32 %109, -1
  store i32 %114, i32* %81, align 4
  br label %115

115:                                              ; preds = %113, %108
  %116 = phi i32 [ %114, %113 ], [ %109, %108 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #15
  br label %119

119:                                              ; preds = %62, %115, %118
  %120 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0
  store i8* getelementptr inbounds ([145 x i8], [145 x i8]* @.str.2, i64 0, i64 0), i8** %120, align 8
  %121 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %121, align 8
  %122 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendIPKcNS7_6StringEEEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %2, i32* nonnull dereferenceable(4) %3, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %4) #15
  %123 = bitcast %"class.blink::ExecutionContext"* %68 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %124 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %124, i64 52
  %126 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %125, align 8
  call void %126(%"class.blink::ExecutionContext"* %68, %"class.blink::ConsoleMessage"* %122, i1 zeroext false) #15
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %119
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #15
  br label %142

142:                                              ; preds = %119, %138, %141
  br i1 %75, label %156, label %143

143:                                              ; preds = %142
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #15
  br label %156

156:                                              ; preds = %142, %152, %155
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #15
  call void @_ZN5blink8Resource17DidChangePriorityENS_13WebURLRequest8PriorityEi(%"class.blink::Resource"* %56, i32 0, i32 0) #15
  br label %157

157:                                              ; preds = %156, %60
  %158 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %9, align 8
  %159 = bitcast %"class.blink::FontSelector"* %158 to %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)***
  %160 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)**, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*** %159, align 8
  %161 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %160, i64 21
  %162 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %161, align 8
  %163 = call %"class.blink::ExecutionContext"* %162(%"class.blink::FontSelector"* %158) #15
  %164 = bitcast %"class.blink::ExecutionContext"* %163 to %"class.blink::ResourceFetcher"* (%"class.blink::ExecutionContext"*)***
  %165 = load %"class.blink::ResourceFetcher"* (%"class.blink::ExecutionContext"*)**, %"class.blink::ResourceFetcher"* (%"class.blink::ExecutionContext"*)*** %164, align 8
  %166 = getelementptr inbounds %"class.blink::ResourceFetcher"* (%"class.blink::ExecutionContext"*)*, %"class.blink::ResourceFetcher"* (%"class.blink::ExecutionContext"*)** %165, i64 25
  %167 = load %"class.blink::ResourceFetcher"* (%"class.blink::ExecutionContext"*)*, %"class.blink::ResourceFetcher"* (%"class.blink::ExecutionContext"*)** %166, align 8
  %168 = call %"class.blink::ResourceFetcher"* %167(%"class.blink::ExecutionContext"* %163) #15
  %169 = call zeroext i1 @_ZN5blink15ResourceFetcher9StartLoadEPNS_8ResourceE(%"class.blink::ResourceFetcher"* %168, %"class.blink::Resource"* %56) #15
  br i1 %169, label %170, label %176

170:                                              ; preds = %157
  %171 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %172 = load i64, i64* %171, align 8
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %176

174:                                              ; preds = %170
  %175 = call i64 @_ZN4base9TimeTicks3NowEv() #15
  store i64 %175, i64* %171, align 8
  br label %176

176:                                              ; preds = %174, %170, %157, %54
  %177 = load %"class.blink::FontSelector"*, %"class.blink::FontSelector"** %9, align 8
  %178 = bitcast %"class.blink::FontSelector"* %177 to %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)***
  %179 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)**, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*** %178, align 8
  %180 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %179, i64 21
  %181 = load %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)*, %"class.blink::ExecutionContext"* (%"class.blink::FontSelector"*)** %180, align 8
  %182 = call %"class.blink::ExecutionContext"* %181(%"class.blink::FontSelector"* %177) #15
  %183 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %182, i64 0, i32 1
  %184 = bitcast %"class.blink::MojoBindingContext"* %183 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %185 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %184, align 8
  %186 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %185, i64 6
  %187 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %186, align 8
  %188 = call %"class.base::SingleThreadTaskRunner"* %187(%"class.blink::MojoBindingContext"* %183, i8 zeroext 24) #15
  call void @_ZN5blink12FontResource31StartLoadLimitTimersIfNecessaryEPN4base22SingleThreadTaskRunnerE(%"class.blink::FontResource"* %55, %"class.base::SingleThreadTaskRunner"* %188) #15
  %189 = icmp eq %"class.base::SingleThreadTaskRunner"* %188, null
  br i1 %189, label %198, label %190

190:                                              ; preds = %176
  %191 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %188, i64 0, i32 0, i32 0, i32 1
  %192 = getelementptr inbounds %"class.base::RefCountedThreadSafe.583", %"class.base::RefCountedThreadSafe.583"* %191, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = atomicrmw sub i32* %192, i32 1 acq_rel
  %194 = icmp eq i32 %193, 1
  br i1 %194, label %195, label %198

195:                                              ; preds = %190
  %196 = getelementptr inbounds %"class.base::RefCountedThreadSafe.583", %"class.base::RefCountedThreadSafe.583"* %191, i64 -2
  %197 = bitcast %"class.base::RefCountedThreadSafe.583"* %196 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %197) #15
  br label %198

198:                                              ; preds = %176, %190, %195
  %199 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %18, align 8
  call void @_ZN5blink11CSSFontFace12DidBeginLoadEv(%"class.blink::CSSFontFace"* %199) #15
  br label %200

200:                                              ; preds = %8, %1, %198
  ret void
}

declare i32 @_ZNK5blink8FontFace14GetFontDisplayEv(%"class.blink::FontFace"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink12FontResource40IsLowPriorityLoadingAllowedForRemoteFontEv(%"class.blink::FontResource"*) local_unnamed_addr #1

declare void @_ZN5blink8Resource17DidChangePriorityENS_13WebURLRequest8PriorityEi(%"class.blink::Resource"*, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink15ResourceFetcher9StartLoadEPNS_8ResourceE(%"class.blink::ResourceFetcher"*, %"class.blink::Resource"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20RemoteFontFaceSource18FontLoadHistograms11LoadStartedEv(%"class.blink::RemoteFontFaceSource::FontLoadHistograms"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteFontFaceSource::FontLoadHistograms", %"class.blink::RemoteFontFaceSource::FontLoadHistograms"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = tail call i64 @_ZN4base9TimeTicks3NowEv() #15
  store i64 %6, i64* %2, align 8
  br label %7

7:                                                ; preds = %5, %1
  ret void
}

declare void @_ZN5blink12FontResource31StartLoadLimitTimersIfNecessaryEPN4base22SingleThreadTaskRunnerE(%"class.blink::FontResource"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #1

declare void @_ZN5blink11CSSFontFace12DidBeginLoadEv(%"class.blink::CSSFontFace"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20RemoteFontFaceSource5TraceEPNS_7VisitorE(%"class.blink::RemoteFontFaceSource"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 4
  %4 = bitcast %"class.blink::Member.375"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11CSSFontFaceEE5TraceEPNS_7VisitorEPKv) #15
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 5
  %15 = bitcast %"class.blink::Member.404"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12FontSelectorEE5TraceEPNS_7VisitorEPKv) #15
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 1
  %26 = bitcast %"class.blink::FontResourceClient.base"* %25 to %"class.blink::ResourceClient"*
  tail call void @_ZNK5blink14ResourceClient5TraceEPNS_7VisitorE(%"class.blink::ResourceClient"* %26, %"class.blink::Visitor"* %1) #15
  ret void
}

declare void @_ZNK5blink14ResourceClient5TraceEPNS_7VisitorE(%"class.blink::ResourceClient"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_NK5blink20RemoteFontFaceSource5TraceEPNS_7VisitorE(%"class.blink::RemoteFontFaceSource"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 -1, i32 4
  %4 = getelementptr inbounds %"class.blink::Member.375", %"class.blink::Member.375"* %3, i64 14
  %5 = bitcast %"class.blink::Member.375"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11CSSFontFaceEE5TraceEPNS_7VisitorEPKv) #15
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %"class.blink::Member.375", %"class.blink::Member.375"* %3, i64 15
  %16 = bitcast %"class.blink::Member.375"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12FontSelectorEE5TraceEPNS_7VisitorEPKv) #15
  br label %25

25:                                               ; preds = %14, %19
  %26 = getelementptr inbounds %"class.blink::Member.375", %"class.blink::Member.375"* %3, i64 10
  %27 = bitcast %"class.blink::Member.375"* %26 to %"class.blink::ResourceClient"*
  tail call void @_ZNK5blink14ResourceClient5TraceEPNS_7VisitorE(%"class.blink::ResourceClient"* %27, %"class.blink::Visitor"* %1) #15
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20RemoteFontFaceSource18FontLoadHistograms19FallbackFontPaintedENS0_13DisplayPeriodE(%"class.blink::RemoteFontFaceSource::FontLoadHistograms"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %11

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::RemoteFontFaceSource::FontLoadHistograms", %"class.blink::RemoteFontFaceSource::FontLoadHistograms"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %4
  %9 = tail call i64 @_ZN4base9TimeTicks3NowEv() #15
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.blink::RemoteFontFaceSource::FontLoadHistograms", %"class.blink::RemoteFontFaceSource::FontLoadHistograms"* %0, i64 0, i32 2
  store i8 0, i8* %10, align 8
  br label %11

11:                                               ; preds = %8, %4, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink20RemoteFontFaceSource18FontLoadHistograms16MaySetDataSourceENS1_10DataSourceE(%"class.blink::RemoteFontFaceSource::FontLoadHistograms"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::RemoteFontFaceSource::FontLoadHistograms", %"class.blink::RemoteFontFaceSource::FontLoadHistograms"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::RemoteFontFaceSource::FontLoadHistograms", %"class.blink::RemoteFontFaceSource::FontLoadHistograms"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  %10 = select i1 %9, i32 2, i32 %1
  store i32 %10, i32* %3, align 4
  br label %11

11:                                               ; preds = %6, %2
  ret void
}

declare void @_ZN4base17UmaHistogramTimesEPKcNS_9TimeDeltaE(i8*, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink20RemoteFontFaceSource18FontLoadHistograms22DataSourceMetricsValueEv(%"class.blink::RemoteFontFaceSource::FontLoadHistograms"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteFontFaceSource::FontLoadHistograms", %"class.blink::RemoteFontFaceSource::FontLoadHistograms"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp ult i32 %3, 5
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN5blink20RemoteFontFaceSource18FontLoadHistograms22DataSourceMetricsValueEv, i64 0, i64 %6
  %8 = load i32, i32* %7, align 4
  ret i32 %8

9:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20RemoteFontFaceSource18FontLoadHistograms23RecordLoadTimeHistogramEPKNS_12FontResourceEN4base9TimeDeltaE(%"class.blink::RemoteFontFaceSource::FontLoadHistograms"*, %"class.blink::FontResource"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #15
  store i32 0, i32* %6, align 4
  %11 = getelementptr inbounds %"class.blink::RemoteFontFaceSource::FontLoadHistograms", %"class.blink::RemoteFontFaceSource::FontLoadHistograms"* %0, i64 0, i32 4
  %12 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  %13 = load i32, i32* %11, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  store i8* null, i8** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #15
  br label %26

16:                                               ; preds = %3
  %17 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %10, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN5blink20RemoteFontFaceSource18FontLoadHistograms10DataSourceEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #15
  %18 = bitcast i32* %11 to i8*
  %19 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %18, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN5blink20RemoteFontFaceSource18FontLoadHistograms10DataSourceEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i8* %17, i8* %19) #15
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  store i8* %21, i8** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #15
  %22 = icmp eq i8* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.6, i64 0, i64 0), i32 464, %"class.logging::CheckOpResult"* nonnull %5) #15
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  br label %26

26:                                               ; preds = %15, %16, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  %27 = getelementptr inbounds %"class.blink::FontResource", %"class.blink::FontResource"* %1, i64 0, i32 0, i32 2
  %28 = load i8, i8* %27, align 1
  %29 = add i8 %28, -3
  %30 = icmp ult i8 %29, 2
  br i1 %30, label %42, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::FontResource", %"class.blink::FontResource"* %1, i64 0, i32 0, i32 5
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, 10240
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = icmp ult i64 %33, 51200
  br i1 %36, label %42, label %37

37:                                               ; preds = %35
  %38 = icmp ult i64 %33, 102400
  br i1 %38, label %42, label %39

39:                                               ; preds = %37
  %40 = icmp ult i64 %33, 1048576
  %41 = select i1 %40, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i64 0, i64 0)
  br label %42

42:                                               ; preds = %39, %37, %35, %31, %26
  %43 = phi i8* [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i64 0, i64 0), %26 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0), %31 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0), %35 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i64 0, i64 0), %37 ], [ %41, %39 ]
  call void @_ZN4base17UmaHistogramTimesEPKcNS_9TimeDeltaE(i8* %43, i64 %2) #15
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CSSFontFaceSource18IsLocalNonBlockingEv(%"class.blink::CSSFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink20RemoteFontFaceSource6GetURLEv(%"class.blink::RemoteFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #15
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !3

19:                                               ; preds = %10
  tail call void @llvm.trap() #15
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FontCustomPlatformData"* @_ZNK5blink20RemoteFontFaceSource21GetCustomPlaftormDataEv(%"class.blink::RemoteFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 6, i32 0
  %3 = load %"class.blink::FontCustomPlatformData"*, %"class.blink::FontCustomPlatformData"** %2, align 8
  ret %"class.blink::FontCustomPlatformData"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CSSFontFaceSource20IsLocalFontAvailableERKNS_15FontDescriptionE(%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20RemoteFontFaceSource15IsInBlockPeriodEv(%"class.blink::RemoteFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20RemoteFontFaceSource17IsInFailurePeriodEv(%"class.blink::RemoteFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 2
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink20RemoteFontFaceSource12HadBlankTextEv(%"class.blink::RemoteFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 12, i32 1, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp ne i64 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20RemoteFontFaceSource14PaintRequestedEv(%"class.blink::RemoteFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 12, i32 1, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = tail call i64 @_ZN4base9TimeTicks3NowEv() #15
  store i64 %10, i64* %6, align 8
  %11 = getelementptr inbounds %"class.blink::RemoteFontFaceSource", %"class.blink::RemoteFontFaceSource"* %0, i64 0, i32 12, i32 2
  store i8 0, i8* %11, align 8
  br label %12

12:                                               ; preds = %1, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17CSSFontFaceSource16ReportFontLookupERKNS_15FontDescriptionEPNS_14SimpleFontDataEb(%"class.blink::CSSFontFaceSource"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::SimpleFontData"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink20RemoteFontFaceSource9DebugNameEv(%"class.blink::RemoteFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0), i64 20) #15
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14ResourceClient12DataReceivedEPNS_8ResourceEPKcm(%"class.blink::ResourceClient"*, %"class.blink::Resource"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18FontResourceClient20IsFontResourceClientEv(%"class.blink::FontResourceClient"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14ResourceClient19IsRawResourceClientEv(%"class.blink::ResourceClient"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZThn80_NK5blink20RemoteFontFaceSource9DebugNameEv(%"class.blink::RemoteFontFaceSource"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0), i64 20) #15
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3)
  ret %"class.WTF::StringImpl"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF22VectorBackedLinkedListIN5blink12FontCacheKeyENS_18PartitionAllocatorEEC2Ev(%"class.WTF::VectorBackedLinkedList"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::VectorBackedLinkedListNode", align 8
  %3 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %2 to i8*
  %4 = bitcast %"class.WTF::VectorBackedLinkedList"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %3) #15
  %5 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %2, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %2, i64 0, i32 1
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %2, i64 0, i32 2, i32 0, i32 0
  store i32 0, i32* %7, align 8, !alias.scope !4
  %8 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %2, i64 0, i32 2, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %2, i64 0, i32 2, i32 5, i32 0
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %9, align 8, !alias.scope !4
  %10 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %2, i64 0, i32 2, i32 6
  store i8 0, i8* %10, align 8, !alias.scope !4
  %11 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 52, i1 false) #15, !alias.scope !4
  %12 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector"* %12, %"class.WTF::VectorBackedLinkedListNode"* nonnull dereferenceable(88) %2) #15
  %13 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %9, align 8
  %14 = icmp eq %"class.blink::FontVariationSettings"* %13, null
  br i1 %14, label %35, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %13, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.base::RefCounted.3010", %"class.base::RefCounted.3010"* %16, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #15
  %18 = getelementptr inbounds %"class.base::RefCounted.3010", %"class.base::RefCounted.3010"* %16, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %35

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.base::RefCounted.3010", %"class.base::RefCounted.3010"* %16, i64 -4
  %23 = bitcast %"class.base::RefCounted.3010"* %22 to %"class.blink::FontTagValuePair.3006"**
  %24 = load %"class.blink::FontTagValuePair.3006"*, %"class.blink::FontTagValuePair.3006"** %23, align 8
  %25 = icmp eq %"class.blink::FontTagValuePair.3006"* %24, null
  %26 = bitcast %"class.blink::FontTagValuePair.3006"* %24 to i8*
  br i1 %25, label %33, label %27, !prof !7

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.base::RefCounted.3010", %"class.base::RefCounted.3010"* %16, i64 -1, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31, !prof !3

31:                                               ; preds = %27
  store i32 0, i32* %28, align 4
  br label %32

32:                                               ; preds = %31, %27
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #15
  br label %33

33:                                               ; preds = %32, %21
  %34 = bitcast %"class.base::RefCounted.3010"* %22 to i8*
  call void @free(i8* %34) #15
  br label %35

35:                                               ; preds = %33, %15, %1
  %36 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %2, i64 0, i32 2, i32 0, i32 2
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #17
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %2, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #15
  br label %61

61:                                               ; preds = %44, %57, %60
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %3) #15
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector"*, %"class.WTF::VectorBackedLinkedListNode"* dereferenceable(88)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  %8 = icmp ugt %"class.WTF::VectorBackedLinkedListNode"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::VectorBackedLinkedListNode"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !7

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyES0_EEEEmm(i64 %27) #15
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #15
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 88
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.WTF::VectorBackedLinkedListNode"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %22) #15
  %36 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %39 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 88
  %42 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !7

52:                                               ; preds = %37
  %53 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyES0_EEEEmm(i64 %55) #15
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #15
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 88
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.WTF::VectorBackedLinkedListNode"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %50) #15
  %64 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72
  %74 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %70 to i64*
  %75 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %73 to i64*
  %76 = load i64, i64* %74, align 8
  store i64 %76, i64* %75, align 8
  %77 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72, i32 2, i32 0, i32 0
  %78 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %70, i64 0, i32 2, i32 0, i32 0
  %79 = load i32, i32* %78, align 8
  store i32 %79, i32* %77, align 8
  %80 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72, i32 2, i32 0, i32 1
  %81 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %70, i64 0, i32 2, i32 0, i32 1
  %82 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.WTF::AtomicString"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.WTF::AtomicString"* %80 to i64*
  store i64 %84, i64* %85, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %82, align 8
  %86 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72, i32 2, i32 0, i32 2
  %87 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  %88 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %70, i64 0, i32 2, i32 0, i32 2
  %89 = bitcast %"class.std::__1::basic_string"* %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %89, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #15
  %90 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72, i32 2, i32 0, i32 3
  %91 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %70, i64 0, i32 2, i32 0, i32 3
  %92 = bitcast i32* %91 to i64*
  %93 = bitcast i32* %90 to i64*
  %94 = load i64, i64* %92, align 8
  store i64 %94, i64* %93, align 8
  %95 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72, i32 2, i32 1
  %96 = bitcast i32* %95 to i8*
  %97 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %70, i64 0, i32 2, i32 1
  %98 = bitcast i32* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %98, i64 12, i1 false) #15
  %99 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72, i32 2, i32 5
  %100 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %70, i64 0, i32 2, i32 5
  %101 = getelementptr inbounds %class.scoped_refptr.3001, %class.scoped_refptr.3001* %100, i64 0, i32 0
  %102 = bitcast %class.scoped_refptr.3001* %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %class.scoped_refptr.3001* %99 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %101, align 8
  %105 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %69, i64 %72, i32 2, i32 6
  %106 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %70, i64 0, i32 2, i32 6
  %107 = load i8, i8* %106, align 8, !range !2
  store i8 %107, i8* %105, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEELj0ES4_E16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %105

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %103, label %14

14:                                               ; preds = %4, %99
  %15 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %101, %99 ], [ %6, %4 ]
  %16 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %100, %99 ], [ null, %4 ]
  %17 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %15 to i64*
  %18 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %16 to i64*
  %19 = load i64, i64* %17, align 8
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 0, i32 2, i32 0, i32 0
  %21 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %20, align 8
  %23 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 0, i32 2, i32 0, i32 1
  %24 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.WTF::AtomicString"* %24 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.WTF::AtomicString"* %23 to i64*
  store i64 %27, i64* %28, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %25, align 8
  %29 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 0, i32 2, i32 0, i32 2
  %30 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %31 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 2
  %32 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %32, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #15
  %33 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 0, i32 2, i32 0, i32 3
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 3
  %35 = bitcast i32* %34 to i64*
  %36 = bitcast i32* %33 to i64*
  %37 = load i64, i64* %35, align 8
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 0, i32 2, i32 1
  %39 = bitcast i32* %38 to i8*
  %40 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 1
  %41 = bitcast i32* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %41, i64 12, i1 false) #15
  %42 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 0, i32 2, i32 5
  %43 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 5
  %44 = getelementptr inbounds %class.scoped_refptr.3001, %class.scoped_refptr.3001* %43, i64 0, i32 0
  %45 = bitcast %class.scoped_refptr.3001* %43 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %class.scoped_refptr.3001* %42 to i64*
  store i64 %46, i64* %47, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %44, align 8
  %48 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 0, i32 2, i32 6
  %49 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 6
  %50 = load i8, i8* %49, align 8, !range !2
  store i8 %50, i8* %48, align 8
  %51 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 5, i32 0
  %52 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %51, align 8
  %53 = icmp eq %"class.blink::FontVariationSettings"* %52, null
  br i1 %53, label %74, label %54

54:                                               ; preds = %14
  %55 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %52, i64 0, i32 1, i32 0
  %56 = getelementptr inbounds %"class.base::RefCounted.3010", %"class.base::RefCounted.3010"* %55, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %56) #15
  %57 = getelementptr inbounds %"class.base::RefCounted.3010", %"class.base::RefCounted.3010"* %55, i64 0, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %74

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.base::RefCounted.3010", %"class.base::RefCounted.3010"* %55, i64 -4
  %62 = bitcast %"class.base::RefCounted.3010"* %61 to %"class.blink::FontTagValuePair.3006"**
  %63 = load %"class.blink::FontTagValuePair.3006"*, %"class.blink::FontTagValuePair.3006"** %62, align 8
  %64 = icmp eq %"class.blink::FontTagValuePair.3006"* %63, null
  %65 = bitcast %"class.blink::FontTagValuePair.3006"* %63 to i8*
  br i1 %64, label %72, label %66, !prof !7

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.base::RefCounted.3010", %"class.base::RefCounted.3010"* %55, i64 -1, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %71, label %70, !prof !3

70:                                               ; preds = %66
  store i32 0, i32* %67, align 4
  br label %71

71:                                               ; preds = %70, %66
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %65) #15
  br label %72

72:                                               ; preds = %71, %60
  %73 = bitcast %"class.base::RefCounted.3010"* %61 to i8*
  tail call void @free(i8* %73) #15
  br label %74

74:                                               ; preds = %72, %54, %14
  %75 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  tail call void @_ZdlPv(i8* %81) #17
  br label %82

82:                                               ; preds = %79, %74
  %83 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #15
  br label %99

99:                                               ; preds = %82, %95, %98
  %100 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %16, i64 1
  %101 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 1
  %102 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %101, %10
  br i1 %102, label %103, label %14

103:                                              ; preds = %99, %4
  %104 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %104) #15
  br label %219

105:                                              ; preds = %2
  %106 = zext i32 %1 to i64
  %107 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyES0_EEEEmm(i64 %106) #15
  %108 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %107, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #15
  %109 = udiv i64 %107, 88
  %110 = ptrtoint i8* %108 to i64
  %111 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %111, align 8
  %113 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %112, i64 %115
  %117 = icmp eq i32 %114, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %105
  %119 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %112 to i8*
  br label %214

120:                                              ; preds = %105
  %121 = bitcast i8* %108 to %"class.WTF::VectorBackedLinkedListNode"*
  br label %122

122:                                              ; preds = %120, %207
  %123 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %209, %207 ], [ %112, %120 ]
  %124 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %208, %207 ], [ %121, %120 ]
  %125 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %123 to i64*
  %126 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %124 to i64*
  %127 = load i64, i64* %125, align 8
  store i64 %127, i64* %126, align 8
  %128 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 2, i32 0, i32 0
  %129 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 0, i32 0
  %130 = load i32, i32* %129, align 8
  store i32 %130, i32* %128, align 8
  %131 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 2, i32 0, i32 1
  %132 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 0, i32 1
  %133 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %132, i64 0, i32 0, i32 0, i32 0
  %134 = bitcast %"class.WTF::AtomicString"* %132 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.WTF::AtomicString"* %131 to i64*
  store i64 %135, i64* %136, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %133, align 8
  %137 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 2, i32 0, i32 2
  %138 = bitcast %"class.std::__1::basic_string"* %137 to i8*
  %139 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 0, i32 2
  %140 = bitcast %"class.std::__1::basic_string"* %139 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %140, i64 24, i1 false) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 24, i1 false) #15
  %141 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 2, i32 0, i32 3
  %142 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 0, i32 3
  %143 = bitcast i32* %142 to i64*
  %144 = bitcast i32* %141 to i64*
  %145 = load i64, i64* %143, align 8
  store i64 %145, i64* %144, align 8
  %146 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 2, i32 1
  %147 = bitcast i32* %146 to i8*
  %148 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 1
  %149 = bitcast i32* %148 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %149, i64 12, i1 false) #15
  %150 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 2, i32 5
  %151 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 5
  %152 = getelementptr inbounds %class.scoped_refptr.3001, %class.scoped_refptr.3001* %151, i64 0, i32 0
  %153 = bitcast %class.scoped_refptr.3001* %151 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %class.scoped_refptr.3001* %150 to i64*
  store i64 %154, i64* %155, align 8
  store %"class.blink::FontVariationSettings"* null, %"class.blink::FontVariationSettings"** %152, align 8
  %156 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 0, i32 2, i32 6
  %157 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 6
  %158 = load i8, i8* %157, align 8, !range !2
  store i8 %158, i8* %156, align 8
  %159 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 5, i32 0
  %160 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %159, align 8
  %161 = icmp eq %"class.blink::FontVariationSettings"* %160, null
  br i1 %161, label %182, label %162

162:                                              ; preds = %122
  %163 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %160, i64 0, i32 1, i32 0
  %164 = getelementptr inbounds %"class.base::RefCounted.3010", %"class.base::RefCounted.3010"* %163, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %164) #15
  %165 = getelementptr inbounds %"class.base::RefCounted.3010", %"class.base::RefCounted.3010"* %163, i64 0, i32 0, i32 0
  %166 = load i32, i32* %165, align 4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %182

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"class.base::RefCounted.3010", %"class.base::RefCounted.3010"* %163, i64 -4
  %170 = bitcast %"class.base::RefCounted.3010"* %169 to %"class.blink::FontTagValuePair.3006"**
  %171 = load %"class.blink::FontTagValuePair.3006"*, %"class.blink::FontTagValuePair.3006"** %170, align 8
  %172 = icmp eq %"class.blink::FontTagValuePair.3006"* %171, null
  %173 = bitcast %"class.blink::FontTagValuePair.3006"* %171 to i8*
  br i1 %172, label %180, label %174, !prof !7

174:                                              ; preds = %168
  %175 = getelementptr inbounds %"class.base::RefCounted.3010", %"class.base::RefCounted.3010"* %163, i64 -1, i32 0, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %179, label %178, !prof !3

178:                                              ; preds = %174
  store i32 0, i32* %175, align 4
  br label %179

179:                                              ; preds = %178, %174
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %173) #15
  br label %180

180:                                              ; preds = %179, %168
  %181 = bitcast %"class.base::RefCounted.3010"* %169 to i8*
  tail call void @free(i8* %181) #15
  br label %182

182:                                              ; preds = %180, %162, %122
  %183 = bitcast %"class.std::__1::basic_string"* %139 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %184 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %183, i64 0, i32 1, i32 0
  %185 = load i8, i8* %184, align 1
  %186 = icmp slt i8 %185, 0
  br i1 %186, label %187, label %190

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %139, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load i8*, i8** %188, align 8
  tail call void @_ZdlPv(i8* %189) #17
  br label %190

190:                                              ; preds = %187, %182
  %191 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %207, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %192) #15
  br label %207

207:                                              ; preds = %190, %203, %206
  %208 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %124, i64 1
  %209 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 1
  %210 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %209, %116
  br i1 %210, label %211, label %122

211:                                              ; preds = %207
  %212 = bitcast %"class.WTF::Vector"* %0 to i8**
  %213 = load i8*, i8** %212, align 8
  br label %214

214:                                              ; preds = %118, %211
  %215 = phi i8* [ %213, %211 ], [ %119, %118 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %215) #15
  %216 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %110, i64* %216 monotonic, align 8
  %217 = trunc i64 %109 to i32
  %218 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %217, i32* %218, align 8
  br label %219

219:                                              ; preds = %214, %103
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeIN5blink12FontCacheKeyES0_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 24379392
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 24379392) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = mul i64 %0, 88
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_14ResourceClientEEC2EPS2_(%"class.blink::ThreadState::PrefinalizerRegistration"*, %"class.blink::ResourceClient"*) unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ResourceClient"* %1 to i64
  %4 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %5 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %4, i64 0, i32 1
  %6 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %5) #15
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %10, !prof !3

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %5, i8* %9) #15
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i8* [ %9, %8 ], [ %6, %2 ]
  %12 = bitcast i8* %11 to %"class.blink::ThreadState"**
  %13 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 2
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %23, label %20

20:                                               ; preds = %10
  %21 = add i32 %19, 1
  %22 = icmp eq i32 %21, %16
  br i1 %22, label %32, label %34

23:                                               ; preds = %10
  %24 = icmp eq i32 %19, 0
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  br i1 %24, label %30, label %27

27:                                               ; preds = %23
  %28 = add i32 %26, -1
  %29 = icmp eq i32 %19, %28
  br i1 %29, label %32, label %34

30:                                               ; preds = %23
  %31 = icmp eq i32 %26, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %30, %27, %20
  tail call void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"* %14) #15
  %33 = load i32, i32* %18, align 4
  br label %34

34:                                               ; preds = %20, %27, %30, %32
  %35 = phi i32 [ %19, %20 ], [ %19, %27 ], [ 0, %30 ], [ %33, %32 ]
  %36 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::pair.309"*, %"struct.std::__1::pair.309"** %36, align 8
  %38 = zext i32 %35 to i64
  %39 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %37, i64 %38
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = add i32 %41, -1
  %43 = icmp eq i32 %35, %42
  %44 = add i32 %35, 1
  %45 = select i1 %43, i32 0, i32 %44
  store i32 %45, i32* %18, align 4
  %46 = bitcast %"struct.std::__1::pair.309"* %39 to i64*
  store i64 %3, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %37, i64 %38, i32 1
  store i1 (%"class.blink::LivenessBroker"*, i8*)* @_ZN5blink14ResourceClient18InvokePreFinalizerERKNS_14LivenessBrokerEPv, i1 (%"class.blink::LivenessBroker"*, i8*)** %47, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink14ResourceClient18InvokePreFinalizerERKNS_14LivenessBrokerEPv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ResourceClient"*
  %4 = tail call zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_14ResourceClientEEEbPKT_(%"class.blink::LivenessBroker"* %0, %"class.blink::ResourceClient"* %3)
  br i1 %4, label %6, label %5

5:                                                ; preds = %2
  tail call void @_ZN5blink14ResourceClient11SetResourceEPNS_8ResourceEPN4base22SingleThreadTaskRunnerE(%"class.blink::ResourceClient"* %3, %"class.blink::Resource"* null, %"class.base::SingleThreadTaskRunner"* null) #15
  br label %6

6:                                                ; preds = %2, %5
  %7 = phi i1 [ true, %5 ], [ false, %2 ]
  ret i1 %7
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.309"*, %"struct.std::__1::pair.309"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #15
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #15
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv, i64 0, i64 0)) #15
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 4
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %"struct.std::__1::pair.309"*
  br i1 %23, label %40, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %5, i64 %26
  %28 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %24, i64 %26
  %29 = icmp ne %"struct.std::__1::pair.309"* %28, null
  %30 = icmp ne %"struct.std::__1::pair.309"* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %73, !prof !7

32:                                               ; preds = %25
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %5, i64 %33
  %35 = bitcast %"struct.std::__1::pair.309"* %27 to i8*
  %36 = ptrtoint %"struct.std::__1::pair.309"* %34 to i64
  %37 = ptrtoint %"struct.std::__1::pair.309"* %27 to i64
  %38 = sub i64 %36, %37
  %39 = bitcast %"struct.std::__1::pair.309"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %35, i64 %38, i1 false) #15
  br label %73

40:                                               ; preds = %1
  %41 = icmp ne i8* %14, null
  %42 = icmp ne %"struct.std::__1::pair.309"* %5, null
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %51, !prof !7

44:                                               ; preds = %40
  %45 = zext i32 %22 to i64
  %46 = bitcast %"struct.std::__1::pair.309"* %5 to i8*
  %47 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %46, i64 %47, i1 false) #15
  %48 = load i32, i32* %2, align 8
  %49 = load i32, i32* %19, align 8
  %50 = load %"struct.std::__1::pair.309"*, %"struct.std::__1::pair.309"** %4, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi %"struct.std::__1::pair.309"* [ %24, %40 ], [ %50, %44 ]
  %53 = phi i32 [ %20, %40 ], [ %49, %44 ]
  %54 = phi i32 [ %18, %40 ], [ %48, %44 ]
  %55 = sub i32 %53, %3
  %56 = add i32 %55, %54
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %5, i64 %57
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %52, i64 %59
  %61 = icmp ne %"struct.std::__1::pair.309"* %60, null
  %62 = icmp ne %"struct.std::__1::pair.309"* %58, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %72, !prof !7

64:                                               ; preds = %51
  %65 = zext i32 %3 to i64
  %66 = getelementptr inbounds %"struct.std::__1::pair.309", %"struct.std::__1::pair.309"* %5, i64 %65
  %67 = bitcast %"struct.std::__1::pair.309"* %58 to i8*
  %68 = ptrtoint %"struct.std::__1::pair.309"* %66 to i64
  %69 = ptrtoint %"struct.std::__1::pair.309"* %58 to i64
  %70 = sub i64 %68, %69
  %71 = bitcast %"struct.std::__1::pair.309"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %67, i64 %70, i1 false) #15
  br label %72

72:                                               ; preds = %51, %64
  store i32 %56, i32* %19, align 8
  br label %73

73:                                               ; preds = %32, %25, %72
  %74 = bitcast %"struct.std::__1::pair.309"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_14ResourceClientEEEbPKT_(%"class.blink::LivenessBroker"*, %"class.blink::ResourceClient"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::ResourceClient"* %1, null
  br i1 %3, label %73, label %4

4:                                                ; preds = %2
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #15
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #15
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = icmp eq %"class.blink::ThreadState"* %14, null
  br i1 %15, label %73, label %16

16:                                               ; preds = %11
  %17 = ptrtoint %"class.blink::ResourceClient"* %1 to i64
  %18 = and i64 %17, -131072
  %19 = inttoptr i64 %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 4138
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = getelementptr inbounds i8, i8* %19, i64 4160
  br label %63

25:                                               ; preds = %16
  %26 = getelementptr inbounds i8, i8* %19, i64 4096
  %27 = bitcast i8* %26 to %"class.blink::NormalPage"*
  %28 = getelementptr inbounds i8, i8* %19, i64 4400
  %29 = bitcast i8* %28 to i8**
  %30 = bitcast i8* %28 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = sub i64 %17, %31
  %33 = lshr i64 %32, 3
  %34 = lshr i64 %32, 6
  %35 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %34
  %36 = load atomic i8, i8* %35 acquire, align 1
  %37 = trunc i64 %33 to i32
  %38 = and i32 %37, 7
  %39 = shl i32 2, %38
  %40 = trunc i32 %39 to i8
  %41 = add i8 %40, -1
  %42 = and i8 %41, %36
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %25, %44
  %45 = phi i64 [ %46, %44 ], [ %34, %25 ]
  %46 = add i64 %45, -1
  %47 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %46
  %48 = load atomic i8, i8* %47 acquire, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %44, label %50

50:                                               ; preds = %44, %25
  %51 = phi i64 [ %34, %25 ], [ %46, %44 ]
  %52 = phi i8 [ %42, %25 ], [ %48, %44 ]
  %53 = zext i8 %52 to i32
  %54 = tail call i32 @llvm.ctlz.i32(i32 %53, i1 true) #15, !range !8
  %55 = add nsw i32 %54, -24
  %56 = shl i64 %51, 3
  %57 = or i64 %56, 7
  %58 = sext i32 %55 to i64
  %59 = sub i64 %57, %58
  %60 = shl i64 %59, 3
  %61 = load i8*, i8** %29, align 16
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  br label %63

63:                                               ; preds = %23, %50
  %64 = phi i8* [ %24, %23 ], [ %62, %50 ]
  %65 = getelementptr inbounds i8, i8* %64, i64 4
  %66 = bitcast i8* %65 to i16*
  %67 = load atomic i16, i16* %66 acquire, align 2
  %68 = getelementptr inbounds i8, i8* %64, i64 6
  %69 = bitcast i8* %68 to i16*
  %70 = load i16, i16* %69, align 2
  %71 = and i16 %70, 1
  %72 = icmp ne i16 %71, 0
  br label %73

73:                                               ; preds = %11, %2, %63
  %74 = phi i1 [ %72, %63 ], [ true, %2 ], [ true, %11 ]
  ret i1 %74
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink14ResourceClient11SetResourceEPNS_8ResourceEPN4base22SingleThreadTaskRunnerE(%"class.blink::ResourceClient"*, %"class.blink::Resource"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #1

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

declare void @_ZN5blink5probe16FontsUpdatedImplEPNS_16ExecutionContextEPKNS_8FontFaceERKN3WTF6StringEPKNS_22FontCustomPlatformDataE(%"class.blink::ExecutionContext"*, %"class.blink::FontFace"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::FontCustomPlatformData"*) local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

declare void @_ZN5blink14SimpleFontDataC1ERKNS_16FontPlatformDataE13scoped_refptrINS_14CustomFontDataEEbRKNS_19FontMetricsOverrideE(%"class.blink::SimpleFontData"*, %"class.blink::FontPlatformData"* dereferenceable(72), %"class.blink::CustomFontData"*, i1 zeroext, %"struct.blink::FontMetricsOverride"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14CustomFontDataD2Ev(%"class.blink::CustomFontData"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14CustomFontDataD0Ev(%"class.blink::CustomFontData"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::CustomFontData"* %0 to i8*
  tail call void @free(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink14CustomFontData17BeginLoadIfNeededEv(%"class.blink::CustomFontData"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14CustomFontData9IsLoadingEv(%"class.blink::CustomFontData"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14CustomFontData17IsLoadingFallbackEv(%"class.blink::CustomFontData"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14CustomFontData17ShouldSkipDrawingEv(%"class.blink::CustomFontData"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14CustomFontData19ClearFontFaceSourceEv(%"class.blink::CustomFontData"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17CSSCustomFontDataD2Ev(%"class.blink::CSSCustomFontData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink17CSSCustomFontDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #15
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #15
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17CSSCustomFontDataD0Ev(%"class.blink::CSSCustomFontData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink17CSSCustomFontDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #15
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #15
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  br label %25

25:                                               ; preds = %1, %13
  %26 = bitcast %"class.blink::CSSCustomFontData"* %0 to i8*
  tail call void @free(i8* %26) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17CSSCustomFontData17BeginLoadIfNeededEv(%"class.blink::CSSCustomFontData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::CSSFontFaceSource"*, %"class.blink::CSSFontFaceSource"** %6, align 8
  %8 = icmp eq %"class.blink::CSSFontFaceSource"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  store i8 1, i8* %2, align 4
  %10 = bitcast %"class.blink::CSSFontFaceSource"* %7 to void (%"class.blink::CSSFontFaceSource"*)***
  %11 = load void (%"class.blink::CSSFontFaceSource"*)**, void (%"class.blink::CSSFontFaceSource"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::CSSFontFaceSource"*)*, void (%"class.blink::CSSFontFaceSource"*)** %11, i64 9
  %13 = load void (%"class.blink::CSSFontFaceSource"*)*, void (%"class.blink::CSSFontFaceSource"*)** %12, align 8
  tail call void %13(%"class.blink::CSSFontFaceSource"* nonnull %7) #15
  br label %14

14:                                               ; preds = %5, %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CSSCustomFontData9IsLoadingEv(%"class.blink::CSSCustomFontData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CSSCustomFontData17IsLoadingFallbackEv(%"class.blink::CSSCustomFontData"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17CSSCustomFontData17ShouldSkipDrawingEv(%"class.blink::CSSCustomFontData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::CSSFontFaceSource"*, %"class.blink::CSSFontFaceSource"** %2, align 8
  %4 = icmp eq %"class.blink::CSSFontFaceSource"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::CSSFontFaceSource"* %3 to void (%"class.blink::CSSFontFaceSource"*)***
  %7 = load void (%"class.blink::CSSFontFaceSource"*)**, void (%"class.blink::CSSFontFaceSource"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::CSSFontFaceSource"*)*, void (%"class.blink::CSSFontFaceSource"*)** %7, i64 15
  %9 = load void (%"class.blink::CSSFontFaceSource"*)*, void (%"class.blink::CSSFontFaceSource"*)** %8, align 8
  tail call void %9(%"class.blink::CSSFontFaceSource"* nonnull %3) #15
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 4
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp ne i8 %16, 0
  br label %18

18:                                               ; preds = %14, %10
  %19 = phi i1 [ false, %10 ], [ %17, %14 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17CSSCustomFontData19ClearFontFaceSourceEv(%"class.blink::CSSCustomFontData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::CSSFontFaceSource"* null, %"class.blink::CSSFontFaceSource"** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSCustomFontData", %"class.blink::CSSCustomFontData"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #15
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #15
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17CSSFontFaceSourceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_17CSSFontFaceSourceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_17CSSFontFaceSourceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSFontFaceSource"**
  %4 = load %"class.blink::CSSFontFaceSource"*, %"class.blink::CSSFontFaceSource"** %3, align 8
  %5 = icmp eq %"class.blink::CSSFontFaceSource"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #15
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #15
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CSSFontFaceSource", %"class.blink::CSSFontFaceSource"* %4, i64 -1, i32 2, i32 1, i32 1
  %20 = bitcast i32* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::CSSFontFaceSource"* null, %"class.blink::CSSFontFaceSource"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #15
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !3

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #15
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

declare void @_ZN5blink9FontCache5PurgeENS_13PurgeSeverityE(%"class.blink::FontCache"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16ResourceResponse9WasCachedEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"*, %"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIN5blink20RemoteFontFaceSource18FontLoadHistograms10DataSourceEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #12 comdat align 2 {
  %3 = bitcast i8* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %0, i32 %4) #15
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink20RemoteFontFaceSource18InvokePreFinalizerERKNS_14LivenessBrokerEPv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %26, label %4

4:                                                ; preds = %2
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #15
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #15
  br label %11

11:                                               ; preds = %9, %4
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = icmp eq %"class.blink::ThreadState"* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds i8, i8* %1, i64 -2
  %18 = bitcast i8* %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = and i16 %19, 1
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %16
  %23 = getelementptr inbounds i8, i8* %1, i64 80
  %24 = bitcast i8* %23 to %"class.blink::ResourceClient"*
  tail call void @_ZN5blink14ResourceClient11SetResourceEPNS_8ResourceEPN4base22SingleThreadTaskRunnerE(%"class.blink::ResourceClient"* %24, %"class.blink::Resource"* null, %"class.base::SingleThreadTaskRunner"* null) #15
  %25 = bitcast i8* %1 to %"class.blink::CSSFontFaceSource"*
  tail call void @_ZN5blink17CSSFontFaceSource10PruneTableEv(%"class.blink::CSSFontFaceSource"* nonnull %25) #15
  br label %26

26:                                               ; preds = %16, %11, %2, %22
  %27 = phi i1 [ true, %22 ], [ false, %16 ], [ false, %2 ], [ false, %11 ]
  ret i1 %27
}

declare void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base19LogInvalidEnumValueERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_i(%"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #13

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #14

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink22FontCustomPlatformDataD1Ev(%"class.blink::FontCustomPlatformData"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendIPKcNS7_6StringEEEEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), %"class.WTF::StringAppend"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #15
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"* %2)
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #15
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %12) #15
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #15
  br label %28

28:                                               ; preds = %3, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %29 = getelementptr inbounds i8, i8* %5, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.3338", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3338", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #15
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %6, i8* %11) #15
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #15
  br i1 %20, label %82, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #15
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #15
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #15
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #15
  %28 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %28) #15
  %29 = bitcast %"class.WTF::StringTypeAdapter.3338"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #15
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3338", %"class.WTF::StringTypeAdapter.3338"* %5, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3338", %"class.WTF::StringTypeAdapter.3338"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #15
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

36:                                               ; preds = %21
  %37 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  br label %42

42:                                               ; preds = %34, %36
  %43 = phi i8* [ null, %34 ], [ %41, %36 ]
  %44 = phi i64 [ %35, %34 ], [ %37, %36 ]
  %45 = phi i32 [ 0, %34 ], [ %39, %36 ]
  %46 = bitcast %"class.WTF::StringTypeAdapter.3338"* %5 to i64*
  store i64 %44, i64* %46, align 8
  store i8* %43, i8** %30, align 8
  store i32 %45, i32* %31, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %25) #15
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3338", %"class.WTF::StringTypeAdapter.3338"* %5, i64 0, i32 0
  %48 = load i32, i32* %27, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %25, i64 %49
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3339"* nonnull %47, i8* %50) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #15
  %51 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %51, label %143, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #15
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !3

66:                                               ; preds = %59
  call void @llvm.trap() #15
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %52, %67
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %72 = load atomic i32, i32* %53 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %77 = add i32 %70, -1
  store i32 %77, i32* %76, align 4
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i32 [ %77, %75 ], [ %70, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %143

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #15
  br label %143

82:                                               ; preds = %1
  %83 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #15
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %84 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %84, i16** nonnull dereferenceable(8) %8) #15
  %86 = load i16*, i16** %8, align 8
  %87 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #15
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false) #15
  %89 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %89) #15
  %90 = bitcast %"class.WTF::StringTypeAdapter.3338"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #15
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3338", %"class.WTF::StringTypeAdapter.3338"* %3, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3338", %"class.WTF::StringTypeAdapter.3338"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #15
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

97:                                               ; preds = %82
  %98 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %102 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  br label %103

103:                                              ; preds = %95, %97
  %104 = phi i8* [ null, %95 ], [ %102, %97 ]
  %105 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %106 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %107 = bitcast %"class.WTF::StringTypeAdapter.3338"* %3 to i64*
  store i64 %105, i64* %107, align 8
  store i8* %104, i8** %91, align 8
  store i32 %106, i32* %92, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %2, i16* %86) #15
  %108 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3338", %"class.WTF::StringTypeAdapter.3338"* %3, i64 0, i32 0
  %109 = load i32, i32* %88, align 8
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %86, i64 %110
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3339"* nonnull %108, i16* %111) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #15
  %112 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #15
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !3

127:                                              ; preds = %120
  call void @llvm.trap() #15
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %133 = load atomic i32, i32* %114 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %138 = add i32 %131, -1
  store i32 %138, i32* %137, align 4
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #15
  br label %143

143:                                              ; preds = %142, %139, %103, %81, %78, %42
  %144 = phi i8* [ %22, %42 ], [ %22, %78 ], [ %22, %81 ], [ %83, %103 ], [ %83, %139 ], [ %83, %142 ]
  %145 = phi i64 [ 0, %42 ], [ %71, %78 ], [ %71, %81 ], [ 0, %103 ], [ %132, %139 ], [ %132, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #15
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #15
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #15
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #15
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #15
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* %40, i8* %41) #15
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.21, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #15
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #15
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #15
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #15
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %13) #15
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* %30, i8* %31) #15
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #15
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #15
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %45, i8* %46) #15
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.24, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #15
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #15
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #15
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"*, i8*) unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3339"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3339"*, i16*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11CSSFontFaceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSFontFace"*
  tail call void @_ZNK5blink11CSSFontFace5TraceEPNS_7VisitorE(%"class.blink::CSSFontFace"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

declare void @_ZNK5blink11CSSFontFace5TraceEPNS_7VisitorE(%"class.blink::CSSFontFace"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12FontSelectorEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FontSelector"*
  %4 = bitcast i8* %1 to void (%"class.blink::FontSelector"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FontSelector"*, %"class.blink::Visitor"*)**, void (%"class.blink::FontSelector"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FontSelector"*, %"class.blink::Visitor"*)*, void (%"class.blink::FontSelector"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::FontSelector"*, %"class.blink::Visitor"*)*, void (%"class.blink::FontSelector"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FontSelector"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

declare void @_ZN4base23UmaHistogramExactLinearEPKcii(i8*, i32, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }
attributes #17 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv: argument 0"}
!6 = distinct !{!6, !"_ZN3WTF17GenericHashTraitsIN5blink12FontCacheKeyEE10EmptyValueEv"}
!7 = !{!"branch_weights", i32 2000, i32 1}
!8 = !{i32 24, i32 33}
