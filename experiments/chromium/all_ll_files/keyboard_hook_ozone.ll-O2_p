; ModuleID = '../../ui/events/ozone/keyboard_hook_ozone.cc'
source_filename = "../../ui/events/ozone/keyboard_hook_ozone.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::KeyboardHookOzone" = type { %"class.ui::KeyboardHook", %"class.std::__1::unique_ptr" }
%"class.ui::KeyboardHook" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::PlatformKeyboardHook"* }
%"class.ui::PlatformKeyboardHook" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i32* }
%"class.ui::OzonePlatform" = type <{ i32 (...)**, i8, i8, i8, i8, [4 x i8] }>

@_ZTVN2ui17KeyboardHookOzoneE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::KeyboardHookOzone"*)* @_ZN2ui17KeyboardHookOzoneD2Ev to i8*), i8* bitcast (void (%"class.ui::KeyboardHookOzone"*)* @_ZN2ui17KeyboardHookOzoneD0Ev to i8*), i8* bitcast (i1 (%"class.ui::KeyboardHookOzone"*, i32)* @_ZNK2ui17KeyboardHookOzone11IsKeyLockedENS_7DomCodeE to i8*)] }, align 8

@_ZN2ui17KeyboardHookOzoneC1ENS_25PlatformKeyboardHookTypesEN4base17RepeatingCallbackIFvPNS_8KeyEventEEEEN4absl8optionalINS2_8internal9flat_treeINS_7DomCodeENS2_8identityENSt3__14lessIvEENSE_6vectorISC_NSE_9allocatorISC_EEEEEEEEj = hidden unnamed_addr alias void (%"class.ui::KeyboardHookOzone"*, i32, %"class.base::RepeatingCallback"*, %"class.absl::optional"*, i32), void (%"class.ui::KeyboardHookOzone"*, i32, %"class.base::RepeatingCallback"*, %"class.absl::optional"*, i32)* @_ZN2ui17KeyboardHookOzoneC2ENS_25PlatformKeyboardHookTypesEN4base17RepeatingCallbackIFvPNS_8KeyEventEEEEN4absl8optionalINS2_8internal9flat_treeINS_7DomCodeENS2_8identityENSt3__14lessIvEENSE_6vectorISC_NSE_9allocatorISC_EEEEEEEEj
@_ZN2ui17KeyboardHookOzoneD1Ev = hidden unnamed_addr alias void (%"class.ui::KeyboardHookOzone"*), void (%"class.ui::KeyboardHookOzone"*)* @_ZN2ui17KeyboardHookOzoneD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui17KeyboardHookOzoneC2ENS_25PlatformKeyboardHookTypesEN4base17RepeatingCallbackIFvPNS_8KeyEventEEEEN4absl8optionalINS2_8internal9flat_treeINS_7DomCodeENS2_8identityENSt3__14lessIvEENSE_6vectorISC_NSE_9allocatorISC_EEEEEEEEj(%"class.ui::KeyboardHookOzone"* nocapture, i32, %"class.base::RepeatingCallback"* nocapture, %"class.absl::optional"* nocapture, i32) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::RepeatingCallback", align 8
  %7 = alloca %"class.absl::optional", align 8
  %8 = getelementptr inbounds %"class.ui::KeyboardHookOzone", %"class.ui::KeyboardHookOzone"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui17KeyboardHookOzoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.ui::KeyboardHookOzone", %"class.ui::KeyboardHookOzone"* %0, i64 0, i32 1
  %10 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  store i64 0, i64* %10, align 8
  %11 = tail call %"class.ui::OzonePlatform"* @_ZN2ui13OzonePlatform11GetInstanceEv() #5
  %12 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.base::RepeatingCallback"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.base::RepeatingCallback"* %6 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 32, i1 false) #5
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = bitcast %"class.base::internal::flat_tree"* %21 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 8
  %25 = bitcast %"class.base::internal::flat_tree"* %22 to <2 x i64>*
  store <2 x i64> %24, <2 x i64>* %25, align 8
  %26 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast i32** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast i32** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast %"class.base::internal::flat_tree"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #5
  store i8 1, i8* %16, align 8
  br label %32

32:                                               ; preds = %5, %20
  %33 = bitcast %"class.ui::OzonePlatform"* %11 to %"class.ui::PlatformKeyboardHook"* (%"class.ui::OzonePlatform"*, i32, %"class.base::RepeatingCallback"*, %"class.absl::optional"*, i32)***
  %34 = load %"class.ui::PlatformKeyboardHook"* (%"class.ui::OzonePlatform"*, i32, %"class.base::RepeatingCallback"*, %"class.absl::optional"*, i32)**, %"class.ui::PlatformKeyboardHook"* (%"class.ui::OzonePlatform"*, i32, %"class.base::RepeatingCallback"*, %"class.absl::optional"*, i32)*** %33, align 8
  %35 = getelementptr inbounds %"class.ui::PlatformKeyboardHook"* (%"class.ui::OzonePlatform"*, i32, %"class.base::RepeatingCallback"*, %"class.absl::optional"*, i32)*, %"class.ui::PlatformKeyboardHook"* (%"class.ui::OzonePlatform"*, i32, %"class.base::RepeatingCallback"*, %"class.absl::optional"*, i32)** %34, i64 19
  %36 = load %"class.ui::PlatformKeyboardHook"* (%"class.ui::OzonePlatform"*, i32, %"class.base::RepeatingCallback"*, %"class.absl::optional"*, i32)*, %"class.ui::PlatformKeyboardHook"* (%"class.ui::OzonePlatform"*, i32, %"class.base::RepeatingCallback"*, %"class.absl::optional"*, i32)** %35, align 8
  %37 = call %"class.ui::PlatformKeyboardHook"* %36(%"class.ui::OzonePlatform"* %11, i32 %1, %"class.base::RepeatingCallback"* nonnull %6, %"class.absl::optional"* nonnull %7, i32 %4) #5
  %38 = ptrtoint %"class.ui::PlatformKeyboardHook"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.ui::PlatformKeyboardHook"*, %"class.ui::PlatformKeyboardHook"** %39, align 8
  store i64 %38, i64* %10, align 8
  %41 = icmp eq %"class.ui::PlatformKeyboardHook"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %32
  %43 = bitcast %"class.ui::PlatformKeyboardHook"* %40 to void (%"class.ui::PlatformKeyboardHook"*)***
  %44 = load void (%"class.ui::PlatformKeyboardHook"*)**, void (%"class.ui::PlatformKeyboardHook"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.ui::PlatformKeyboardHook"*)*, void (%"class.ui::PlatformKeyboardHook"*)** %44, i64 1
  %46 = load void (%"class.ui::PlatformKeyboardHook"*)*, void (%"class.ui::PlatformKeyboardHook"*)** %45, align 8
  call void %46(%"class.ui::PlatformKeyboardHook"* nonnull %40) #5
  br label %47

47:                                               ; preds = %42, %32
  %48 = load i8, i8* %16, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %60, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = icmp eq i32* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = ptrtoint i32* %52 to i64
  %56 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %57 = bitcast i32** %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = bitcast i32* %52 to i8*
  call void @_ZdlPv(i8* %58) #6
  br label %59

59:                                               ; preds = %54, %50
  store i8 0, i8* %16, align 8
  br label %60

60:                                               ; preds = %47, %59
  %61 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %61) #5
  ret void
}

declare %"class.ui::OzonePlatform"* @_ZN2ui13OzonePlatform11GetInstanceEv() local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui17KeyboardHookOzoneD2Ev(%"class.ui::KeyboardHookOzone"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::KeyboardHookOzone", %"class.ui::KeyboardHookOzone"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui17KeyboardHookOzoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::KeyboardHookOzone", %"class.ui::KeyboardHookOzone"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.ui::PlatformKeyboardHook"*, %"class.ui::PlatformKeyboardHook"** %3, align 8
  store %"class.ui::PlatformKeyboardHook"* null, %"class.ui::PlatformKeyboardHook"** %3, align 8
  %5 = icmp eq %"class.ui::PlatformKeyboardHook"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.ui::PlatformKeyboardHook"* %4 to void (%"class.ui::PlatformKeyboardHook"*)***
  %8 = load void (%"class.ui::PlatformKeyboardHook"*)**, void (%"class.ui::PlatformKeyboardHook"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::PlatformKeyboardHook"*)*, void (%"class.ui::PlatformKeyboardHook"*)** %8, i64 1
  %10 = load void (%"class.ui::PlatformKeyboardHook"*)*, void (%"class.ui::PlatformKeyboardHook"*)** %9, align 8
  tail call void %10(%"class.ui::PlatformKeyboardHook"* nonnull %4) #5
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui17KeyboardHookOzoneD0Ev(%"class.ui::KeyboardHookOzone"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::KeyboardHookOzone", %"class.ui::KeyboardHookOzone"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui17KeyboardHookOzoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::KeyboardHookOzone", %"class.ui::KeyboardHookOzone"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.ui::PlatformKeyboardHook"*, %"class.ui::PlatformKeyboardHook"** %3, align 8
  store %"class.ui::PlatformKeyboardHook"* null, %"class.ui::PlatformKeyboardHook"** %3, align 8
  %5 = icmp eq %"class.ui::PlatformKeyboardHook"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.ui::PlatformKeyboardHook"* %4 to void (%"class.ui::PlatformKeyboardHook"*)***
  %8 = load void (%"class.ui::PlatformKeyboardHook"*)**, void (%"class.ui::PlatformKeyboardHook"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::PlatformKeyboardHook"*)*, void (%"class.ui::PlatformKeyboardHook"*)** %8, i64 1
  %10 = load void (%"class.ui::PlatformKeyboardHook"*)*, void (%"class.ui::PlatformKeyboardHook"*)** %9, align 8
  tail call void %10(%"class.ui::PlatformKeyboardHook"* nonnull %4) #5
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.ui::KeyboardHookOzone"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui17KeyboardHookOzone11IsKeyLockedENS_7DomCodeE(%"class.ui::KeyboardHookOzone"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::KeyboardHookOzone", %"class.ui::KeyboardHookOzone"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.ui::PlatformKeyboardHook"*, %"class.ui::PlatformKeyboardHook"** %3, align 8
  %5 = bitcast %"class.ui::PlatformKeyboardHook"* %4 to i1 (%"class.ui::PlatformKeyboardHook"*, i32)***
  %6 = load i1 (%"class.ui::PlatformKeyboardHook"*, i32)**, i1 (%"class.ui::PlatformKeyboardHook"*, i32)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.ui::PlatformKeyboardHook"*, i32)*, i1 (%"class.ui::PlatformKeyboardHook"*, i32)** %6, i64 2
  %8 = load i1 (%"class.ui::PlatformKeyboardHook"*, i32)*, i1 (%"class.ui::PlatformKeyboardHook"*, i32)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.ui::PlatformKeyboardHook"* %4, i32 %1) #5
  ret i1 %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
