; ModuleID = '../../net/ssl/ssl_client_session_cache.cc'
source_filename = "../../net/ssl/ssl_client_session_cache.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::SSLClientSessionCache::Key" = type <{ %"class.net::HostPortPair", %"class.absl::optional", [6 x i8], %"class.net::NetworkIsolationKey", i32, i8, [3 x i8] }>
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.net::IPAddress" }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.2", %"class.absl::optional.2" }
%"class.absl::optional.2" = type { %"class.absl::optional_internal::optional_data.3" }
%"class.absl::optional_internal::optional_data.3" = type { %"class.absl::optional_internal::optional_data_base.4" }
%"class.absl::optional_internal::optional_data_base.4" = type { %"class.absl::optional_internal::optional_data_dtor_base.5" }
%"class.absl::optional_internal::optional_data_dtor_base.5" = type { i8, %union.anon.6 }
%union.anon.6 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.7" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.7" = type { %"class.absl::optional_internal::optional_data.8" }
%"class.absl::optional_internal::optional_data.8" = type { %"class.absl::optional_internal::optional_data_base.9" }
%"class.absl::optional_internal::optional_data_base.9" = type { %"class.absl::optional_internal::optional_data_dtor_base.10" }
%"class.absl::optional_internal::optional_data_dtor_base.10" = type { i8, %union.anon.11 }
%union.anon.11 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.net::SSLClientSessionCache" = type { %"class.base::Clock"*, %"struct.net::SSLClientSessionCache::Config", %"class.base::MRUCache", i64, %"class.std::__1::unique_ptr" }
%"class.base::Clock" = type { i32 (...)** }
%"struct.net::SSLClientSessionCache::Config" = type { i64, i64 }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.16" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.net::SSLClientSessionCache::Entry" = type { [2 x %"class.std::__1::unique_ptr.32"] }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %struct.ssl_session_st* }
%struct.ssl_session_st = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::__tuple_equal.84" = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.12", %"class.std::__1::__tuple_leaf.13", %"class.std::__1::__tuple_leaf.14", %"class.std::__1::__tuple_leaf.15" }
%"class.std::__1::__tuple_leaf" = type { %"class.net::HostPortPair"* }
%"class.std::__1::__tuple_leaf.12" = type { %"class.absl::optional"* }
%"class.std::__1::__tuple_leaf.13" = type { %"class.net::NetworkIsolationKey"* }
%"class.std::__1::__tuple_leaf.14" = type { i32* }
%"class.std::__1::__tuple_leaf.15" = type { i8* }
%"struct.std::__1::__tuple_less" = type { i8 }
%"class.base::DefaultClock" = type { %"class.base::Clock" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.110" }
%"struct.std::__1::pair.110" = type { %"struct.net::SSLClientSessionCache::Key", %"class.std::__1::__list_iterator" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Entry" }
%"class.base::trace_event::ProcessMemoryDump" = type { %"class.base::UnguessableToken", %"class.std::__1::map.36", %"class.std::__1::map.47", %"struct.base::trace_event::MemoryDumpArgs", %"class.std::__1::unique_ptr.58" }
%"class.std::__1::map.36" = type { %"class.std::__1::__tree.37" }
%"class.std::__1::__tree.37" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.47" = type { %"class.std::__1::__tree.48" }
%"class.std::__1::__tree.48" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.49", %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.base::trace_event::MemoryDumpArgs" = type { i32, i32, i64 }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.base::trace_event::MemoryAllocatorDump"* }
%"class.base::trace_event::MemoryAllocatorDump" = type { %"class.std::__1::basic_string", %"class.base::trace_event::MemoryAllocatorDumpGuid", i32, i32, %"class.absl::optional.61", %"class.std::__1::vector" }
%"class.base::trace_event::MemoryAllocatorDumpGuid" = type { i64 }
%"class.absl::optional.61" = type { %"class.absl::optional_internal::optional_data.62" }
%"class.absl::optional_internal::optional_data.62" = type { %"class.absl::optional_internal::optional_data_base.63" }
%"class.absl::optional_internal::optional_data_base.63" = type { %"class.absl::optional_internal::optional_data_dtor_base.64" }
%"class.absl::optional_internal::optional_data_dtor_base.64" = type { i8, %union.anon.65 }
%union.anon.65 = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"class.std::__1::__compressed_pair.66" }
%"struct.base::trace_event::MemoryAllocatorDump::Entry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i64, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"* }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.74" }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %struct.crypto_buffer_st**, %struct.crypto_buffer_st**, %"class.std::__1::__compressed_pair.76" }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %struct.crypto_buffer_st** }
%"class.std::__1::__basic_string_common" = type { i8 }
%struct.stack_st_CRYPTO_BUFFER = type opaque
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%"struct.std::__1::__tuple_less.109" = type { i8 }
%"class.std::__1::tuple.88" = type { %"struct.std::__1::__tuple_impl.89" }
%"struct.std::__1::__tuple_impl.89" = type { %"class.std::__1::__tuple_leaf.90", %"class.std::__1::__tuple_leaf.91", %"class.std::__1::__tuple_leaf.92" }
%"class.std::__1::__tuple_leaf.90" = type { %"class.absl::optional.2"* }
%"class.std::__1::__tuple_leaf.91" = type { %"class.absl::optional.2"* }
%"class.std::__1::__tuple_leaf.92" = type { i8* }
%"struct.std::__1::__split_buffer" = type { %struct.crypto_buffer_st**, %struct.crypto_buffer_st**, %struct.crypto_buffer_st**, %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.77", %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.std::__1::allocator.79"* }
%"class.std::__1::allocator.79" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4base12MRUCacheBaseIN3net21SSLClientSessionCache3KeyENS2_5EntryENSt3__14lessIS3_EENS_19MRUCacheStandardMapEED2Ev = comdat any

$_ZN4base12MRUCacheBaseIN3net21SSLClientSessionCache3KeyENS2_5EntryENSt3__14lessIS3_EENS_19MRUCacheStandardMapEE3PutIS4_EENS5_15__list_iteratorINS5_4pairIS3_S4_EEPvEERKS3_OT_ = comdat any

$_ZNSt3__113__tuple_equalILm3EEclINS_5tupleIJRKN3net12HostPortPairERKN4absl8optionalINS4_9IPAddressEEERKNS4_19NetworkIsolationKeyERKNS4_11PrivacyModeERKbEEESM_EEbRKT_RKT0_ = comdat any

$_ZNSt3__112__tuple_lessILm5EEclINS_5tupleIJRKN3net12HostPortPairERKN4absl8optionalINS4_9IPAddressEEERKNS4_19NetworkIsolationKeyERKNS4_11PrivacyModeERKbEEESM_EEbRKT_RKT0_ = comdat any

$_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN3net12HostPortPairERKN4absl8optionalINS4_9IPAddressEEERKNS4_19NetworkIsolationKeyERKNS4_11PrivacyModeERKbEEESM_EEbRKT_RKT0_ = comdat any

$_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_ = comdat any

$_ZN4base12MRUCacheBaseIN3net21SSLClientSessionCache3KeyENS2_5EntryENSt3__14lessIS3_EENS_19MRUCacheStandardMapEED0Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE7destroyEPNS_11__tree_nodeISB_S9_EE = comdat any

$_ZNSt3__110__list_impINS_4pairIN3net21SSLClientSessionCache3KeyENS3_5EntryEEENS_9allocatorIS6_EEE5clearEv = comdat any

$_ZN4base8MRUCacheIN3net21SSLClientSessionCache3KeyENS2_5EntryENSt3__14lessIS3_EEED0Ev = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net21SSLClientSessionCacheEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS4_EEEEEFvS6_EE3RunEPNS0_13BindStateBaseES6_ = comdat any

$_ZN4base8internal9BindStateIMN3net21SSLClientSessionCacheEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE4findIS4_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_S9_EElEERKT_ = comdat any

$_ZNSt3__14listINS_4pairIN3net21SSLClientSessionCache3KeyENS3_5EntryEEENS_9allocatorIS6_EEE5eraseENS_21__list_const_iteratorIS6_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE5eraseENS_21__tree_const_iteratorISB_PNS_11__tree_nodeISB_S9_EElEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__14listINS_4pairIN3net21SSLClientSessionCache3KeyENS3_5EntryEEENS_9allocatorIS6_EEE13emplace_frontIJRKS4_S5_EEEvDpOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE25__emplace_unique_key_argsIS4_JRKS4_SA_EEENS6_INS_15__tree_iteratorISB_PNS_11__tree_nodeISB_S9_EElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE12__find_equalIS4_EERPNS_16__tree_node_baseIS9_EERPNS_15__tree_end_nodeISM_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIPK16crypto_buffer_stNS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIPK16crypto_buffer_stRNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_ = comdat any

$_ZTVN4base12MRUCacheBaseIN3net21SSLClientSessionCache3KeyENS2_5EntryENSt3__14lessIS3_EENS_19MRUCacheStandardMapEEE = comdat any

$_ZTVN4base8MRUCacheIN3net21SSLClientSessionCache3KeyENS2_5EntryENSt3__14lessIS3_EEEE = comdat any

@.str = private unnamed_addr constant [22 x i8] c"SSLClientSessionCache\00", align 1
@.str.1 = private unnamed_addr constant [42 x i8] c"../../net/ssl/ssl_client_session_cache.cc\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"/ssl_client_session_cache\00", align 1
@_ZN4base11trace_event19MemoryAllocatorDump9kNameSizeE = external constant [0 x i8], align 1
@_ZN4base11trace_event19MemoryAllocatorDump11kUnitsBytesE = external constant [0 x i8], align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"cert_size\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"cert_count\00", align 1
@_ZN4base11trace_event19MemoryAllocatorDump13kUnitsObjectsE = external constant [0 x i8], align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"undeduped_cert_size\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"undeduped_cert_count\00", align 1
@_ZTVN4base12MRUCacheBaseIN3net21SSLClientSessionCache3KeyENS2_5EntryENSt3__14lessIS3_EENS_19MRUCacheStandardMapEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::MRUCacheBase"*)* @_ZN4base12MRUCacheBaseIN3net21SSLClientSessionCache3KeyENS2_5EntryENSt3__14lessIS3_EENS_19MRUCacheStandardMapEED2Ev to i8*), i8* bitcast (void (%"class.base::MRUCacheBase"*)* @_ZN4base12MRUCacheBaseIN3net21SSLClientSessionCache3KeyENS2_5EntryENSt3__14lessIS3_EENS_19MRUCacheStandardMapEED0Ev to i8*)] }, comdat, align 8
@_ZTVN4base8MRUCacheIN3net21SSLClientSessionCache3KeyENS2_5EntryENSt3__14lessIS3_EEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::MRUCacheBase"*)* @_ZN4base12MRUCacheBaseIN3net21SSLClientSessionCache3KeyENS2_5EntryENSt3__14lessIS3_EENS_19MRUCacheStandardMapEED2Ev to i8*), i8* bitcast (void (%"class.base::MRUCache"*)* @_ZN4base8MRUCacheIN3net21SSLClientSessionCache3KeyENS2_5EntryENSt3__14lessIS3_EEED0Ev to i8*)] }, comdat, align 8

@_ZN3net21SSLClientSessionCache3KeyC1Ev = hidden unnamed_addr alias void (%"struct.net::SSLClientSessionCache::Key"*), void (%"struct.net::SSLClientSessionCache::Key"*)* @_ZN3net21SSLClientSessionCache3KeyC2Ev
@_ZN3net21SSLClientSessionCache3KeyC1ERKS1_ = hidden unnamed_addr alias void (%"struct.net::SSLClientSessionCache::Key"*, %"struct.net::SSLClientSessionCache::Key"*), void (%"struct.net::SSLClientSessionCache::Key"*, %"struct.net::SSLClientSessionCache::Key"*)* @_ZN3net21SSLClientSessionCache3KeyC2ERKS1_
@_ZN3net21SSLClientSessionCache3KeyC1EOS1_ = hidden unnamed_addr alias void (%"struct.net::SSLClientSessionCache::Key"*, %"struct.net::SSLClientSessionCache::Key"*), void (%"struct.net::SSLClientSessionCache::Key"*, %"struct.net::SSLClientSessionCache::Key"*)* @_ZN3net21SSLClientSessionCache3KeyC2EOS1_
@_ZN3net21SSLClientSessionCache3KeyD1Ev = hidden unnamed_addr alias void (%"struct.net::SSLClientSessionCache::Key"*), void (%"struct.net::SSLClientSessionCache::Key"*)* @_ZN3net21SSLClientSessionCache3KeyD2Ev
@_ZN3net21SSLClientSessionCacheC1ERKNS0_6ConfigE = hidden unnamed_addr alias void (%"class.net::SSLClientSessionCache"*, %"struct.net::SSLClientSessionCache::Config"*), void (%"class.net::SSLClientSessionCache"*, %"struct.net::SSLClientSessionCache::Config"*)* @_ZN3net21SSLClientSessionCacheC2ERKNS0_6ConfigE
@_ZN3net21SSLClientSessionCacheD1Ev = hidden unnamed_addr alias void (%"class.net::SSLClientSessionCache"*), void (%"class.net::SSLClientSessionCache"*)* @_ZN3net21SSLClientSessionCacheD2Ev
@_ZN3net21SSLClientSessionCache5EntryC1Ev = hidden unnamed_addr alias void (%"struct.net::SSLClientSessionCache::Entry"*), void (%"struct.net::SSLClientSessionCache::Entry"*)* @_ZN3net21SSLClientSessionCache5EntryC2Ev
@_ZN3net21SSLClientSessionCache5EntryC1EOS1_ = hidden unnamed_addr alias void (%"struct.net::SSLClientSessionCache::Entry"*, %"struct.net::SSLClientSessionCache::Entry"*), void (%"struct.net::SSLClientSessionCache::Entry"*, %"struct.net::SSLClientSessionCache::Entry"*)* @_ZN3net21SSLClientSessionCache5EntryC2EOS1_
@_ZN3net21SSLClientSessionCache5EntryD1Ev = hidden unnamed_addr alias void (%"struct.net::SSLClientSessionCache::Entry"*), void (%"struct.net::SSLClientSessionCache::Entry"*)* @_ZN3net21SSLClientSessionCache5EntryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21SSLClientSessionCache3KeyC2Ev(%"struct.net::SSLClientSessionCache::Key"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 0
  tail call void @_ZN3net12HostPortPairC1Ev(%"class.net::HostPortPair"* %2) #14
  %3 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 0, i64 18, i1 false) #14
  %4 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 3
  tail call void @_ZN3net19NetworkIsolationKeyC1Ev(%"class.net::NetworkIsolationKey"* %4) #14
  %5 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 4
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 5
  store i8 0, i8* %6, align 4
  ret void
}

declare void @_ZN3net12HostPortPairC1Ev(%"class.net::HostPortPair"*) unnamed_addr #1

declare void @_ZN3net19NetworkIsolationKeyC1Ev(%"class.net::NetworkIsolationKey"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21SSLClientSessionCache3KeyC2ERKS1_(%"struct.net::SSLClientSessionCache::Key"*, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::SSLClientSessionCache::Key"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.net::SSLClientSessionCache::Key"* %0 to i8*
  %9 = bitcast %"struct.net::SSLClientSessionCache::Key"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #14
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #14
  br label %16

16:                                               ; preds = %7, %10
  %17 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 0, i32 1
  %19 = load i16, i16* %18, align 8
  store i16 %19, i16* %17, align 8
  %20 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %21, i8 0, i64 18, i1 false) #14
  %22 = load i8, i8* %20, align 1, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0
  %27 = bitcast i8* %26 to %"class.net::IPAddress"*
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %27, %"class.net::IPAddress"* dereferenceable(17) %25) #14
  store i8 1, i8* %21, align 1
  br label %28

28:                                               ; preds = %16, %24
  %29 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 3
  %30 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 3
  tail call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %29, %"class.net::NetworkIsolationKey"* dereferenceable(184) %30) #14
  %31 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 4
  %32 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 4
  %33 = bitcast i32* %31 to i8*
  %34 = bitcast i32* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 5, i1 false)
  ret void
}

declare void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"* dereferenceable(184)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21SSLClientSessionCache3KeyC2EOS1_(%"struct.net::SSLClientSessionCache::Key"*, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::SSLClientSessionCache::Key"* %0 to i8*
  %4 = bitcast %"struct.net::SSLClientSessionCache::Key"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #14
  %5 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 0, i32 1
  %7 = load i16, i16* %6, align 8
  store i16 %7, i16* %5, align 8
  %8 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %9, i8 0, i64 18, i1 false) #14
  %10 = load i8, i8* %8, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0
  %15 = bitcast i8* %14 to %"class.net::IPAddress"*
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %15, %"class.net::IPAddress"* dereferenceable(17) %13) #14
  store i8 1, i8* %9, align 1
  br label %16

16:                                               ; preds = %2, %12
  %17 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 3
  tail call void @_ZN3net19NetworkIsolationKeyC1EOS0_(%"class.net::NetworkIsolationKey"* %17, %"class.net::NetworkIsolationKey"* dereferenceable(184) %18) #14
  %19 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 4
  %20 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 4
  %21 = bitcast i32* %19 to i8*
  %22 = bitcast i32* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 5, i1 false)
  ret void
}

declare void @_ZN3net19NetworkIsolationKeyC1EOS0_(%"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"* dereferenceable(184)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21SSLClientSessionCache3KeyD2Ev(%"struct.net::SSLClientSessionCache::Key"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 3
  tail call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %2) #14
  %3 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %7) #14
  store i8 0, i8* %3, align 1
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"struct.net::SSLClientSessionCache::Key"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #15
  br label %16

16:                                               ; preds = %8, %13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(248) %"struct.net::SSLClientSessionCache::Key"* @_ZN3net21SSLClientSessionCache3KeyaSERKS1_(%"struct.net::SSLClientSessionCache::Key"* returned, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 0, i32 0
  %4 = icmp eq %"struct.net::SSLClientSessionCache::Key"* %0, %1
  br i1 %4, label %34, label %5

5:                                                ; preds = %2
  %6 = bitcast %"struct.net::SSLClientSessionCache::Key"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"struct.net::SSLClientSessionCache::Key"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %24, label %14

14:                                               ; preds = %5
  br i1 %13, label %18, label %15

15:                                               ; preds = %14
  %16 = bitcast %"struct.net::SSLClientSessionCache::Key"* %0 to i8*
  %17 = bitcast %"struct.net::SSLClientSessionCache::Key"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #14
  br label %34

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %20, i64 %22) #14
  br label %34

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"struct.net::SSLClientSessionCache::Key"* %1 to i8*
  %30 = zext i8 %12 to i64
  %31 = select i1 %13, i8* %26, i8* %29
  %32 = select i1 %13, i64 %28, i64 %30
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %31, i64 %32) #14
  br label %34

34:                                               ; preds = %2, %15, %18, %24
  %35 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 0, i32 1
  %36 = load i16, i16* %35, align 8
  %37 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 0, i32 1
  store i16 %36, i16* %37, align 8
  %38 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %40 = load i8, i8* %39, align 1, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %52, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8, i8* %44, align 1, !range !2
  %46 = icmp eq i8 %45, 0
  %47 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0
  br i1 %46, label %50, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %43, i64 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %47, i8* align 1 %49, i64 17, i1 false) #14
  br label %58

50:                                               ; preds = %42
  %51 = bitcast i8* %47 to %"class.net::IPAddress"*
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %51, %"class.net::IPAddress"* dereferenceable(17) %43) #14
  store i8 1, i8* %44, align 1
  br label %58

52:                                               ; preds = %34
  %53 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8, i8* %53, align 1, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %57) #14
  store i8 0, i8* %53, align 1
  br label %58

58:                                               ; preds = %48, %50, %52, %56
  %59 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 3
  %60 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 3
  %61 = tail call dereferenceable(184) %"class.net::NetworkIsolationKey"* @_ZN3net19NetworkIsolationKeyaSERKS0_(%"class.net::NetworkIsolationKey"* %59, %"class.net::NetworkIsolationKey"* dereferenceable(184) %60) #14
  %62 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 4
  %63 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 4
  %64 = bitcast i32* %62 to i8*
  %65 = bitcast i32* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 5, i1 false)
  ret %"struct.net::SSLClientSessionCache::Key"* %0
}

declare dereferenceable(184) %"class.net::NetworkIsolationKey"* @_ZN3net19NetworkIsolationKeyaSERKS0_(%"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"* dereferenceable(184)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(248) %"struct.net::SSLClientSessionCache::Key"* @_ZN3net21SSLClientSessionCache3KeyaSEOS1_(%"struct.net::SSLClientSessionCache::Key"* returned, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::SSLClientSessionCache::Key"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #15
  br label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %"struct.net::SSLClientSessionCache::Key"* %0 to i8*
  %12 = bitcast %"struct.net::SSLClientSessionCache::Key"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #14
  %13 = bitcast %"struct.net::SSLClientSessionCache::Key"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  store i8 0, i8* %14, align 1
  store i8 0, i8* %12, align 1
  %15 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 0, i32 1
  %16 = load i16, i16* %15, align 8
  %17 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 0, i32 1
  store i16 %16, i16* %17, align 8
  %18 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8, i8* %24, align 1, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0
  br i1 %26, label %30, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %23, i64 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %29, i64 17, i1 false) #14
  br label %38

30:                                               ; preds = %22
  %31 = bitcast i8* %27 to %"class.net::IPAddress"*
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %31, %"class.net::IPAddress"* dereferenceable(17) %23) #14
  store i8 1, i8* %24, align 1
  br label %38

32:                                               ; preds = %10
  %33 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8, i8* %33, align 1, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %37) #14
  store i8 0, i8* %33, align 1
  br label %38

38:                                               ; preds = %28, %30, %32, %36
  %39 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 3
  %40 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 3
  %41 = tail call dereferenceable(184) %"class.net::NetworkIsolationKey"* @_ZN3net19NetworkIsolationKeyaSEOS0_(%"class.net::NetworkIsolationKey"* %39, %"class.net::NetworkIsolationKey"* dereferenceable(184) %40) #14
  %42 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 4
  %43 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 4
  %44 = bitcast i32* %42 to i8*
  %45 = bitcast i32* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 5, i1 false)
  ret %"struct.net::SSLClientSessionCache::Key"* %0
}

declare dereferenceable(184) %"class.net::NetworkIsolationKey"* @_ZN3net19NetworkIsolationKeyaSEOS0_(%"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"* dereferenceable(184)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net21SSLClientSessionCache3KeyeqERKS1_(%"struct.net::SSLClientSessionCache::Key"*, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::__tuple_equal.84", align 1
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 5
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.net::HostPortPair"* %7, %"class.net::HostPortPair"** %12, align 8, !alias.scope !3
  %13 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %8, %"class.absl::optional"** %13, align 8, !alias.scope !3
  %14 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 2, i32 0
  store %"class.net::NetworkIsolationKey"* %9, %"class.net::NetworkIsolationKey"** %14, align 8, !alias.scope !3
  %15 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 3, i32 0
  store i32* %10, i32** %15, align 8, !alias.scope !3
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 4, i32 0
  store i8* %11, i8** %16, align 8, !alias.scope !3
  %17 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 0
  %19 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 3
  %21 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 4
  %22 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 5
  %23 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.net::HostPortPair"* %18, %"class.net::HostPortPair"** %23, align 8, !alias.scope !8
  %24 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %19, %"class.absl::optional"** %24, align 8, !alias.scope !8
  %25 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 2, i32 0
  store %"class.net::NetworkIsolationKey"* %20, %"class.net::NetworkIsolationKey"** %25, align 8, !alias.scope !8
  %26 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 3, i32 0
  store i32* %21, i32** %26, align 8, !alias.scope !8
  %27 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 4, i32 0
  store i8* %22, i8** %27, align 8, !alias.scope !8
  %28 = getelementptr inbounds %"struct.std::__1::__tuple_equal.84", %"struct.std::__1::__tuple_equal.84"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %28) #14
  %29 = call zeroext i1 @_ZNSt3__113__tuple_equalILm3EEclINS_5tupleIJRKN3net12HostPortPairERKN4absl8optionalINS4_9IPAddressEEERKNS4_19NetworkIsolationKeyERKNS4_11PrivacyModeERKbEEESM_EEbRKT_RKT0_(%"struct.std::__1::__tuple_equal.84"* nonnull %3, %"class.std::__1::tuple"* nonnull dereferenceable(40) %4, %"class.std::__1::tuple"* nonnull dereferenceable(40) %5) #14
  br i1 %29, label %31, label %30

30:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %28) #14
  br label %43

31:                                               ; preds = %2
  %32 = load i32*, i32** %15, align 8
  %33 = load i32, i32* %32, align 4
  %34 = load i32*, i32** %26, align 8
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %33, %35
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %28) #14
  br i1 %36, label %37, label %43

37:                                               ; preds = %31
  %38 = load i8*, i8** %16, align 8
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = load i8*, i8** %27, align 8
  %41 = load i8, i8* %40, align 1, !range !2
  %42 = icmp eq i8 %39, %41
  br label %43

43:                                               ; preds = %30, %31, %37
  %44 = phi i1 [ false, %31 ], [ %42, %37 ], [ false, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #14
  ret i1 %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net21SSLClientSessionCache3KeyltERKS1_(%"struct.net::SSLClientSessionCache::Key"*, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::__tuple_less", align 1
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %0, i64 0, i32 5
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.net::HostPortPair"* %7, %"class.net::HostPortPair"** %12, align 8, !alias.scope !13
  %13 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %8, %"class.absl::optional"** %13, align 8, !alias.scope !13
  %14 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 2, i32 0
  store %"class.net::NetworkIsolationKey"* %9, %"class.net::NetworkIsolationKey"** %14, align 8, !alias.scope !13
  %15 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 3, i32 0
  store i32* %10, i32** %15, align 8, !alias.scope !13
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 4, i32 0
  store i8* %11, i8** %16, align 8, !alias.scope !13
  %17 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 0
  %19 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 3
  %21 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 4
  %22 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 5
  %23 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.net::HostPortPair"* %18, %"class.net::HostPortPair"** %23, align 8, !alias.scope !18
  %24 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %19, %"class.absl::optional"** %24, align 8, !alias.scope !18
  %25 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 2, i32 0
  store %"class.net::NetworkIsolationKey"* %20, %"class.net::NetworkIsolationKey"** %25, align 8, !alias.scope !18
  %26 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 3, i32 0
  store i32* %21, i32** %26, align 8, !alias.scope !18
  %27 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 4, i32 0
  store i8* %22, i8** %27, align 8, !alias.scope !18
  %28 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %28) #14
  %29 = call zeroext i1 @_ZNSt3__112__tuple_lessILm5EEclINS_5tupleIJRKN3net12HostPortPairERKN4absl8optionalINS4_9IPAddressEEERKNS4_19NetworkIsolationKeyERKNS4_11PrivacyModeERKbEEESM_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %3, %"class.std::__1::tuple"* nonnull dereferenceable(40) %4, %"class.std::__1::tuple"* nonnull dereferenceable(40) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %28) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #14
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21SSLClientSessionCacheC2ERKNS0_6ConfigE(%"class.net::SSLClientSessionCache"*, %"struct.net::SSLClientSessionCache::Config"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::RepeatingCallback", align 8
  %5 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 0
  %6 = tail call %"class.base::DefaultClock"* @_ZN4base12DefaultClock11GetInstanceEv() #14
  %7 = getelementptr inbounds %"class.base::DefaultClock", %"class.base::DefaultClock"* %6, i64 0, i32 0
  store %"class.base::Clock"* %7, %"class.base::Clock"** %5, align 8
  %8 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 1
  %9 = bitcast %"struct.net::SSLClientSessionCache::Config"* %8 to i8*
  %10 = bitcast %"struct.net::SSLClientSessionCache::Config"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false)
  %11 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Config", %"struct.net::SSLClientSessionCache::Config"* %1, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 0
  %14 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %14, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %14, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %15, %"struct.std::__1::__list_node_base"** %16, align 8
  %17 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %15, %"struct.std::__1::__list_node_base"** %17, align 8
  %18 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"class.std::__1::__tree_node_base"** %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %20, %"class.std::__1::__tree_end_node"** %21, align 8
  %23 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 3
  store i64 %12, i64* %23, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base8MRUCacheIN3net21SSLClientSessionCache3KeyENS2_5EntryENSt3__14lessIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %24 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 3
  %25 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 4
  %26 = bitcast %"class.std::__1::unique_ptr"* %25 to i64*
  %27 = bitcast %"class.base::Location"* %3 to i8*
  %28 = bitcast i64* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #14
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 51) #14
  %29 = bitcast %"class.base::RepeatingCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14
  %30 = ptrtoint %"class.net::SSLClientSessionCache"* %0 to i64
  %31 = call i8* @_Znwm(i64 56) #15, !noalias !23
  %32 = bitcast i8* %31 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %32, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net21SSLClientSessionCacheEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS4_EEEEEFvS6_EE3RunEPNS0_13BindStateBaseES6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net21SSLClientSessionCacheEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #14, !noalias !23
  %33 = getelementptr inbounds i8, i8* %31, i64 32
  %34 = bitcast i8* %33 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::SSLClientSessionCache"*, i32)* @_ZN3net21SSLClientSessionCache16OnMemoryPressureEN4base22MemoryPressureListener19MemoryPressureLevelE to i64), i64 0>, <2 x i64>* %34, align 8, !noalias !23
  %35 = getelementptr inbounds i8, i8* %31, i64 48
  %36 = bitcast i8* %35 to i64*
  store i64 %30, i64* %36, align 8, !noalias !23
  %37 = bitcast %"class.base::RepeatingCallback"* %4 to i8**
  store i8* %31, i8** %37, align 8, !alias.scope !23
  %38 = call i8* @_Znwm(i64 48) #15
  %39 = bitcast i8* %38 to %"class.base::MemoryPressureListener"*
  call void @_ZN4base22MemoryPressureListenerC1ERKNS_8LocationERKNS_17RepeatingCallbackIFvNS0_19MemoryPressureLevelEEEE(%"class.base::MemoryPressureListener"* nonnull %39, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::RepeatingCallback"* nonnull dereferenceable(8) %4) #14
  %40 = ptrtoint i8* %38 to i64
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.base::MemoryPressureListener"*, %"class.base::MemoryPressureListener"** %41, align 8
  store i64 %40, i64* %26, align 8
  %43 = icmp eq %"class.base::MemoryPressureListener"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %2
  call void @_ZN4base22MemoryPressureListenerD1Ev(%"class.base::MemoryPressureListener"* nonnull %42) #14
  %45 = bitcast %"class.base::MemoryPressureListener"* %42 to i8*
  call void @_ZdlPv(i8* %45) #15
  br label %46

46:                                               ; preds = %44, %2
  %47 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %47) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #14
  ret void
}

declare %"class.base::DefaultClock"* @_ZN4base12DefaultClock11GetInstanceEv() local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21SSLClientSessionCache16OnMemoryPressureEN4base22MemoryPressureListener19MemoryPressureLevelE(%"class.net::SSLClientSessionCache"*, i32) #0 align 2 {
  switch i32 %1, label %14 [
    i32 2, label %4
    i32 1, label %3
  ]

3:                                                ; preds = %2
  tail call void @_ZN3net21SSLClientSessionCache20FlushExpiredSessionsEv(%"class.net::SSLClientSessionCache"* %0)
  br label %14

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2
  %6 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %5, i64 0, i32 0
  %7 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE7destroyEPNS_11__tree_nodeISB_S9_EE(%"class.std::__1::__tree"* %6, %"class.std::__1::__tree_node"* %9) #14
  %10 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %5, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %12, align 8
  %13 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__110__list_impINS_4pairIN3net21SSLClientSessionCache3KeyENS3_5EntryEEENS_9allocatorIS6_EEE5clearEv(%"class.std::__1::__list_imp"* %13) #14
  br label %14

14:                                               ; preds = %2, %4, %3
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21SSLClientSessionCacheD2Ev(%"class.net::SSLClientSessionCache"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE7destroyEPNS_11__tree_nodeISB_S9_EE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %6) #14
  %7 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %9, align 8
  %10 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__110__list_impINS_4pairIN3net21SSLClientSessionCache3KeyENS3_5EntryEEENS_9allocatorIS6_EEE5clearEv(%"class.std::__1::__list_imp"* %10) #14
  %11 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.base::MemoryPressureListener"*, %"class.base::MemoryPressureListener"** %11, align 8
  store %"class.base::MemoryPressureListener"* null, %"class.base::MemoryPressureListener"** %11, align 8
  %13 = icmp eq %"class.base::MemoryPressureListener"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  tail call void @_ZN4base22MemoryPressureListenerD1Ev(%"class.base::MemoryPressureListener"* nonnull %12) #14
  %15 = bitcast %"class.base::MemoryPressureListener"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #15
  br label %16

16:                                               ; preds = %1, %14
  %17 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base12MRUCacheBaseIN3net21SSLClientSessionCache3KeyENS2_5EntryENSt3__14lessIS3_EENS_19MRUCacheStandardMapEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2, i32 0
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE7destroyEPNS_11__tree_nodeISB_S9_EE(%"class.std::__1::__tree"* %18, %"class.std::__1::__tree_node"* %19) #14
  tail call void @_ZNSt3__110__list_impINS_4pairIN3net21SSLClientSessionCache3KeyENS3_5EntryEEENS_9allocatorIS6_EEE5clearEv(%"class.std::__1::__list_imp"* %10) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21SSLClientSessionCache5FlushEv(%"class.net::SSLClientSessionCache"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE7destroyEPNS_11__tree_nodeISB_S9_EE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %6) #14
  %7 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %9, align 8
  %10 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__110__list_impINS_4pairIN3net21SSLClientSessionCache3KeyENS3_5EntryEEENS_9allocatorIS6_EEE5clearEv(%"class.std::__1::__list_imp"* %10) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12MRUCacheBaseIN3net21SSLClientSessionCache3KeyENS2_5EntryENSt3__14lessIS3_EENS_19MRUCacheStandardMapEED2Ev(%"class.base::MRUCacheBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base12MRUCacheBaseIN3net21SSLClientSessionCache3KeyENS2_5EntryENSt3__14lessIS3_EENS_19MRUCacheStandardMapEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE7destroyEPNS_11__tree_nodeISB_S9_EE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %6) #14
  %7 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__110__list_impINS_4pairIN3net21SSLClientSessionCache3KeyENS3_5EntryEEENS_9allocatorIS6_EEE5clearEv(%"class.std::__1::__list_imp"* %7) #14
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3net21SSLClientSessionCache4sizeEv(%"class.net::SSLClientSessionCache"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ssl_session_st* @_ZN3net21SSLClientSessionCache6LookupERKNS0_3KeyE(%"class.net::SSLClientSessionCache"*, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Time", align 8
  %4 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 1
  store i64 %6, i64* %4, align 8
  %7 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %6, %8
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  store i64 0, i64* %4, align 8
  tail call void @_ZN3net21SSLClientSessionCache20FlushExpiredSessionsEv(%"class.net::SSLClientSessionCache"* %0)
  br label %11

11:                                               ; preds = %2, %10
  %12 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2, i32 0
  %13 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE4findIS4_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_S9_EElEERKT_(%"class.std::__1::__tree"* %12, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248) %1) #14
  %14 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %15 = icmp eq %"class.std::__1::__tree_end_node"* %13, %14
  br i1 %15, label %110, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 35
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"struct.std::__1::__list_node_base"**
  %19 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %18, align 8
  %20 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %21 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %20, align 8
  %22 = icmp eq %"struct.std::__1::__list_node_base"* %21, %19
  br i1 %22, label %43, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %19, i64 0, i32 1
  %25 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__list_node_base"* %25, %21
  br i1 %26, label %43, label %27

27:                                               ; preds = %23
  %28 = ptrtoint %"struct.std::__1::__list_node_base"* %25 to i64
  %29 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %19, i64 0, i32 0
  %30 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %30, i64 0, i32 1
  %32 = bitcast %"struct.std::__1::__list_node_base"** %31 to i64*
  store i64 %28, i64* %32, align 8
  %33 = bitcast %"struct.std::__1::__list_node_base"* %19 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"struct.std::__1::__list_node_base"** %24 to i64**
  %36 = load i64*, i64** %35, align 8
  store i64 %34, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %21, i64 0, i32 0
  %38 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %38, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %19, %"struct.std::__1::__list_node_base"** %39, align 8
  %40 = bitcast %"struct.std::__1::__list_node_base"* %21 to i64*
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* %33, align 8
  store %"struct.std::__1::__list_node_base"* %19, %"struct.std::__1::__list_node_base"** %37, align 8
  store %"struct.std::__1::__list_node_base"* %21, %"struct.std::__1::__list_node_base"** %24, align 8
  %42 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %20, align 8
  br label %43

43:                                               ; preds = %16, %23, %27
  %44 = phi %"struct.std::__1::__list_node_base"* [ %19, %16 ], [ %21, %23 ], [ %42, %27 ]
  %45 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %46 = icmp eq %"struct.std::__1::__list_node_base"* %44, %45
  br i1 %46, label %110, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.base::Time"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #14
  %49 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 0
  %50 = load %"class.base::Clock"*, %"class.base::Clock"** %49, align 8
  %51 = bitcast %"class.base::Clock"* %50 to i64 (%"class.base::Clock"*)***
  %52 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %51, align 8
  %53 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %52, i64 2
  %54 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %53, align 8
  %55 = tail call i64 %54(%"class.base::Clock"* %50) #14
  %56 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %3, i64 0, i32 0, i32 0
  store i64 %55, i64* %56, align 8
  %57 = call i64 @_ZNK4base4Time7ToTimeTEv(%"class.base::Time"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #14
  %58 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %44, i64 16, i32 1
  %59 = bitcast %"struct.std::__1::__list_node_base"** %58 to %"struct.net::SSLClientSessionCache::Entry"*
  %60 = bitcast %"struct.std::__1::__list_node_base"** %58 to %struct.ssl_session_st**
  %61 = load %struct.ssl_session_st*, %struct.ssl_session_st** %60, align 8
  %62 = icmp eq %struct.ssl_session_st* %61, null
  br i1 %62, label %81, label %63

63:                                               ; preds = %47
  %64 = call i32 @SSL_SESSION_up_ref(%struct.ssl_session_st* nonnull %61) #14
  %65 = ptrtoint %struct.ssl_session_st* %61 to i64
  %66 = call i32 @SSL_SESSION_should_be_single_use(%struct.ssl_session_st* nonnull %61) #14
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %81, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %58, i64 1
  %70 = bitcast %"struct.std::__1::__list_node_base"** %69 to %struct.ssl_session_st**
  %71 = bitcast %"struct.std::__1::__list_node_base"** %69 to i64*
  %72 = load i64, i64* %71, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %70, align 8
  %73 = load %struct.ssl_session_st*, %struct.ssl_session_st** %60, align 8
  %74 = bitcast %"struct.std::__1::__list_node_base"** %58 to i64*
  store i64 %72, i64* %74, align 8
  %75 = icmp eq %struct.ssl_session_st* %73, null
  br i1 %75, label %76, label %77

76:                                               ; preds = %68
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %70, align 8
  br label %81

77:                                               ; preds = %68
  call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %73) #14
  %78 = load %struct.ssl_session_st*, %struct.ssl_session_st** %70, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %70, align 8
  %79 = icmp eq %struct.ssl_session_st* %78, null
  br i1 %79, label %81, label %80

80:                                               ; preds = %77
  call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %78) #14
  br label %81

81:                                               ; preds = %47, %63, %76, %77, %80
  %82 = phi i64 [ 0, %47 ], [ %65, %63 ], [ %65, %76 ], [ %65, %77 ], [ %65, %80 ]
  %83 = inttoptr i64 %82 to %struct.ssl_session_st*
  %84 = call zeroext i1 @_ZN3net21SSLClientSessionCache5Entry14ExpireSessionsEl(%"struct.net::SSLClientSessionCache::Entry"* %59, i64 %57)
  br i1 %84, label %85, label %95

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %44, i64 1
  %87 = bitcast %"struct.std::__1::__list_node_base"* %86 to %"struct.net::SSLClientSessionCache::Key"*
  %88 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE4findIS4_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_S9_EElEERKT_(%"class.std::__1::__tree"* %12, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248) %87) #14
  %89 = icmp eq %"class.std::__1::__tree_end_node"* %88, %14
  br i1 %89, label %92, label %90

90:                                               ; preds = %85
  %91 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE5eraseENS_21__tree_const_iteratorISB_PNS_11__tree_nodeISB_S9_EElEE(%"class.std::__1::__tree"* %12, %"class.std::__1::__tree_end_node"* %88) #14
  br label %92

92:                                               ; preds = %85, %90
  %93 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 1
  %94 = call %"struct.std::__1::__list_node_base"* @_ZNSt3__14listINS_4pairIN3net21SSLClientSessionCache3KeyENS3_5EntryEEENS_9allocatorIS6_EEE5eraseENS_21__list_const_iteratorIS6_PvEE(%"class.std::__1::list"* %93, %"struct.std::__1::__list_node_base"* %44) #14
  br label %95

95:                                               ; preds = %92, %81
  %96 = icmp slt i64 %57, 0
  br i1 %96, label %107, label %97

97:                                               ; preds = %95
  %98 = call i64 @SSL_SESSION_get_time(%struct.ssl_session_st* %83) #14
  %99 = add i64 %98, -1
  %100 = icmp ugt i64 %99, %57
  br i1 %100, label %107, label %101

101:                                              ; preds = %97
  %102 = call i64 @SSL_SESSION_get_time(%struct.ssl_session_st* %83) #14
  %103 = call i32 @SSL_SESSION_get_timeout(%struct.ssl_session_st* %83) #14
  %104 = zext i32 %103 to i64
  %105 = add i64 %102, %104
  %106 = icmp ugt i64 %105, %57
  br i1 %106, label %110, label %107

107:                                              ; preds = %101, %97, %95
  %108 = icmp eq i64 %82, 0
  br i1 %108, label %110, label %109

109:                                              ; preds = %107
  call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %83) #14
  br label %110

110:                                              ; preds = %101, %11, %109, %107, %43
  %111 = phi i64 [ 0, %43 ], [ %82, %101 ], [ 0, %107 ], [ 0, %109 ], [ 0, %11 ]
  %112 = inttoptr i64 %111 to %struct.ssl_session_st*
  ret %struct.ssl_session_st* %112
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21SSLClientSessionCache20FlushExpiredSessionsEv(%"class.net::SSLClientSessionCache"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Time", align 8
  %3 = bitcast %"class.base::Time"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #14
  %4 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 0
  %5 = load %"class.base::Clock"*, %"class.base::Clock"** %4, align 8
  %6 = bitcast %"class.base::Clock"* %5 to i64 (%"class.base::Clock"*)***
  %7 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %7, i64 2
  %9 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %8, align 8
  %10 = tail call i64 %9(%"class.base::Clock"* %5) #14
  %11 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  store i64 %10, i64* %11, align 8
  %12 = call i64 @_ZNK4base4Time7ToTimeTEv(%"class.base::Time"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #14
  %13 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %14 = bitcast %"struct.std::__1::__list_node_base"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %17 = inttoptr i64 %15 to %"struct.std::__1::__list_node_base"*
  %18 = icmp eq %"struct.std::__1::__list_node_base"* %16, %17
  br i1 %18, label %47, label %19

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2, i32 0
  %21 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %22 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 1
  br label %23

23:                                               ; preds = %19, %43
  %24 = phi %"struct.std::__1::__list_node_base"* [ %17, %19 ], [ %45, %43 ]
  %25 = phi i64 [ %15, %19 ], [ %44, %43 ]
  %26 = inttoptr i64 %25 to %"struct.std::__1::__list_node"*
  %27 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %26, i64 0, i32 1, i32 1
  %28 = call zeroext i1 @_ZN3net21SSLClientSessionCache5Entry14ExpireSessionsEl(%"struct.net::SSLClientSessionCache::Entry"* %27, i64 %12)
  br i1 %28, label %29, label %39

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 1
  %31 = bitcast %"struct.std::__1::__list_node_base"* %30 to %"struct.net::SSLClientSessionCache::Key"*
  %32 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE4findIS4_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_S9_EElEERKT_(%"class.std::__1::__tree"* %20, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248) %31) #14
  %33 = icmp eq %"class.std::__1::__tree_end_node"* %32, %21
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE5eraseENS_21__tree_const_iteratorISB_PNS_11__tree_nodeISB_S9_EElEE(%"class.std::__1::__tree"* %20, %"class.std::__1::__tree_end_node"* %32) #14
  br label %36

36:                                               ; preds = %29, %34
  %37 = call %"struct.std::__1::__list_node_base"* @_ZNSt3__14listINS_4pairIN3net21SSLClientSessionCache3KeyENS3_5EntryEEENS_9allocatorIS6_EEE5eraseENS_21__list_const_iteratorIS6_PvEE(%"class.std::__1::list"* %22, %"struct.std::__1::__list_node_base"* %24) #14
  %38 = ptrtoint %"struct.std::__1::__list_node_base"* %37 to i64
  br label %43

39:                                               ; preds = %23
  %40 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 0, i32 1
  %41 = bitcast %"struct.std::__1::__list_node_base"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  br label %43

43:                                               ; preds = %39, %36
  %44 = phi i64 [ %38, %36 ], [ %42, %39 ]
  %45 = inttoptr i64 %44 to %"struct.std::__1::__list_node_base"*
  %46 = icmp eq %"struct.std::__1::__list_node_base"* %16, %45
  br i1 %46, label %47, label %23

47:                                               ; preds = %43, %1
  ret void
}

declare i64 @_ZNK4base4Time7ToTimeTEv(%"class.base::Time"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ssl_session_st* @_ZN3net21SSLClientSessionCache5Entry3PopEv(%"struct.net::SSLClientSessionCache::Entry"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Entry", %"struct.net::SSLClientSessionCache::Entry"* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0
  %3 = load %struct.ssl_session_st*, %struct.ssl_session_st** %2, align 8
  %4 = icmp eq %struct.ssl_session_st* %3, null
  br i1 %4, label %23, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @SSL_SESSION_up_ref(%struct.ssl_session_st* nonnull %3) #14
  %7 = ptrtoint %struct.ssl_session_st* %3 to i64
  %8 = tail call i32 @SSL_SESSION_should_be_single_use(%struct.ssl_session_st* nonnull %3) #14
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Entry", %"struct.net::SSLClientSessionCache::Entry"* %0, i64 0, i32 0, i64 1
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.32"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.32"* %11 to i64*
  %14 = load i64, i64* %13, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %12, align 8
  %15 = load %struct.ssl_session_st*, %struct.ssl_session_st** %2, align 8
  %16 = bitcast %"struct.net::SSLClientSessionCache::Entry"* %0 to i64*
  store i64 %14, i64* %16, align 8
  %17 = icmp eq %struct.ssl_session_st* %15, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %12, align 8
  br label %23

19:                                               ; preds = %10
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %15) #14
  %20 = load %struct.ssl_session_st*, %struct.ssl_session_st** %12, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %12, align 8
  %21 = icmp eq %struct.ssl_session_st* %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %20) #14
  br label %23

23:                                               ; preds = %22, %19, %18, %5, %1
  %24 = phi i64 [ 0, %1 ], [ %7, %5 ], [ %7, %18 ], [ %7, %19 ], [ %7, %22 ]
  %25 = inttoptr i64 %24 to %struct.ssl_session_st*
  ret %struct.ssl_session_st* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net21SSLClientSessionCache5Entry14ExpireSessionsEl(%"struct.net::SSLClientSessionCache::Entry"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Entry", %"struct.net::SSLClientSessionCache::Entry"* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0
  %4 = load %struct.ssl_session_st*, %struct.ssl_session_st** %3, align 8
  %5 = icmp eq %struct.ssl_session_st* %4, null
  %6 = icmp slt i64 %1, 0
  %7 = or i1 %6, %5
  br i1 %7, label %36, label %8

8:                                                ; preds = %2
  %9 = tail call i64 @SSL_SESSION_get_time(%struct.ssl_session_st* nonnull %4) #14
  %10 = add i64 %9, -1
  %11 = icmp ugt i64 %10, %1
  br i1 %11, label %36, label %12

12:                                               ; preds = %8
  %13 = tail call i64 @SSL_SESSION_get_time(%struct.ssl_session_st* nonnull %4) #14
  %14 = tail call i32 @SSL_SESSION_get_timeout(%struct.ssl_session_st* nonnull %4) #14
  %15 = zext i32 %14 to i64
  %16 = add i64 %13, %15
  %17 = icmp ugt i64 %16, %1
  br i1 %17, label %18, label %36

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Entry", %"struct.net::SSLClientSessionCache::Entry"* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i32 0
  %20 = load %struct.ssl_session_st*, %struct.ssl_session_st** %19, align 8
  %21 = icmp eq %struct.ssl_session_st* %20, null
  br i1 %21, label %36, label %22

22:                                               ; preds = %18
  %23 = tail call i64 @SSL_SESSION_get_time(%struct.ssl_session_st* nonnull %20) #14
  %24 = add i64 %23, -1
  %25 = icmp ugt i64 %24, %1
  br i1 %25, label %32, label %26

26:                                               ; preds = %22
  %27 = tail call i64 @SSL_SESSION_get_time(%struct.ssl_session_st* nonnull %20) #14
  %28 = tail call i32 @SSL_SESSION_get_timeout(%struct.ssl_session_st* nonnull %20) #14
  %29 = zext i32 %28 to i64
  %30 = add i64 %27, %29
  %31 = icmp ugt i64 %30, %1
  br i1 %31, label %36, label %32

32:                                               ; preds = %26, %22
  %33 = load %struct.ssl_session_st*, %struct.ssl_session_st** %19, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %19, align 8
  %34 = icmp eq %struct.ssl_session_st* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %32
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %33) #14
  br label %36

36:                                               ; preds = %26, %18, %12, %8, %35, %32, %2
  %37 = phi i1 [ true, %2 ], [ true, %12 ], [ false, %26 ], [ false, %18 ], [ false, %32 ], [ false, %35 ], [ true, %8 ]
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net21SSLClientSessionCache9IsExpiredEP14ssl_session_stl(%struct.ssl_session_st*, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp slt i64 %1, 0
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @SSL_SESSION_get_time(%struct.ssl_session_st* %0) #14
  %6 = add i64 %5, -1
  %7 = icmp ugt i64 %6, %1
  br i1 %7, label %14, label %8

8:                                                ; preds = %4
  %9 = tail call i64 @SSL_SESSION_get_time(%struct.ssl_session_st* %0) #14
  %10 = tail call i32 @SSL_SESSION_get_timeout(%struct.ssl_session_st* %0) #14
  %11 = zext i32 %10 to i64
  %12 = add i64 %9, %11
  %13 = icmp ule i64 %12, %1
  br label %14

14:                                               ; preds = %4, %8, %2
  %15 = phi i1 [ true, %2 ], [ true, %4 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21SSLClientSessionCache6InsertERKNS0_3KeyENSt3__110unique_ptrI14ssl_session_stN4bssl8internal7DeleterIS6_EEEE(%"class.net::SSLClientSessionCache"*, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248), %struct.ssl_session_st*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.net::SSLClientSessionCache::Entry", align 8
  %5 = ptrtoint %struct.ssl_session_st* %2 to i64
  %6 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0
  %7 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2, i32 0
  %8 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE4findIS4_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_S9_EElEERKT_(%"class.std::__1::__tree"* %7, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248) %1) #14
  %9 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %10 = icmp eq %"class.std::__1::__tree_end_node"* %8, %9
  br i1 %10, label %42, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 35
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"struct.std::__1::__list_node_base"**
  %14 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %13, align 8
  %15 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %16 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8
  %17 = icmp eq %"struct.std::__1::__list_node_base"* %16, %14
  br i1 %17, label %38, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %14, i64 0, i32 1
  %20 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %19, align 8
  %21 = icmp eq %"struct.std::__1::__list_node_base"* %20, %16
  br i1 %21, label %38, label %22

22:                                               ; preds = %18
  %23 = ptrtoint %"struct.std::__1::__list_node_base"* %20 to i64
  %24 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %14, i64 0, i32 0
  %25 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 0, i32 1
  %27 = bitcast %"struct.std::__1::__list_node_base"** %26 to i64*
  store i64 %23, i64* %27, align 8
  %28 = bitcast %"struct.std::__1::__list_node_base"* %14 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"struct.std::__1::__list_node_base"** %19 to i64**
  %31 = load i64*, i64** %30, align 8
  store i64 %29, i64* %31, align 8
  %32 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 0
  %33 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %33, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %14, %"struct.std::__1::__list_node_base"** %34, align 8
  %35 = bitcast %"struct.std::__1::__list_node_base"* %16 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %28, align 8
  store %"struct.std::__1::__list_node_base"* %14, %"struct.std::__1::__list_node_base"** %32, align 8
  store %"struct.std::__1::__list_node_base"* %16, %"struct.std::__1::__list_node_base"** %19, align 8
  %37 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8
  br label %38

38:                                               ; preds = %11, %18, %22
  %39 = phi %"struct.std::__1::__list_node_base"* [ %14, %11 ], [ %16, %18 ], [ %37, %22 ]
  %40 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %41 = icmp eq %"struct.std::__1::__list_node_base"* %39, %40
  br i1 %41, label %42, label %55

42:                                               ; preds = %3, %38
  %43 = bitcast %"struct.net::SSLClientSessionCache::Entry"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 16, i1 false) #14
  %44 = call %"struct.std::__1::__list_node_base"* @_ZN4base12MRUCacheBaseIN3net21SSLClientSessionCache3KeyENS2_5EntryENSt3__14lessIS3_EENS_19MRUCacheStandardMapEE3PutIS4_EENS5_15__list_iteratorINS5_4pairIS3_S4_EEPvEERKS3_OT_(%"class.base::MRUCacheBase"* %6, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248) %1, %"struct.net::SSLClientSessionCache::Entry"* nonnull dereferenceable(16) %4)
  %45 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Entry", %"struct.net::SSLClientSessionCache::Entry"* %4, i64 0, i32 0, i64 1, i32 0, i32 0, i32 0
  %46 = load %struct.ssl_session_st*, %struct.ssl_session_st** %45, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %45, align 8
  %47 = icmp eq %struct.ssl_session_st* %46, null
  br i1 %47, label %49, label %48

48:                                               ; preds = %42
  call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %46) #14
  br label %49

49:                                               ; preds = %48, %42
  %50 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Entry", %"struct.net::SSLClientSessionCache::Entry"* %4, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0
  %51 = load %struct.ssl_session_st*, %struct.ssl_session_st** %50, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %50, align 8
  %52 = icmp eq %struct.ssl_session_st* %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %51) #14
  br label %54

54:                                               ; preds = %49, %53
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #14
  br label %55

55:                                               ; preds = %54, %38
  %56 = phi %"struct.std::__1::__list_node_base"* [ %44, %54 ], [ %39, %38 ]
  %57 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %56, i64 16, i32 1
  %58 = bitcast %"struct.std::__1::__list_node_base"** %57 to %struct.ssl_session_st**
  %59 = load %struct.ssl_session_st*, %struct.ssl_session_st** %58, align 8
  %60 = icmp eq %struct.ssl_session_st* %59, null
  br i1 %60, label %61, label %63

61:                                               ; preds = %55
  %62 = bitcast %"struct.std::__1::__list_node_base"** %57 to i64*
  store i64 %5, i64* %62, align 8
  br label %82

63:                                               ; preds = %55
  %64 = call i32 @SSL_SESSION_should_be_single_use(%struct.ssl_session_st* nonnull %59) #14
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %63
  %67 = bitcast %"struct.std::__1::__list_node_base"** %57 to i64*
  br label %77

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %57, i64 1
  %70 = bitcast %"struct.std::__1::__list_node_base"** %57 to i64*
  %71 = load i64, i64* %70, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %58, align 8
  %72 = bitcast %"struct.std::__1::__list_node_base"** %69 to %struct.ssl_session_st**
  %73 = load %struct.ssl_session_st*, %struct.ssl_session_st** %72, align 8
  %74 = bitcast %"struct.std::__1::__list_node_base"** %69 to i64*
  store i64 %71, i64* %74, align 8
  %75 = icmp eq %struct.ssl_session_st* %73, null
  br i1 %75, label %77, label %76

76:                                               ; preds = %68
  call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %73) #14
  br label %77

77:                                               ; preds = %76, %68, %66
  %78 = phi i64* [ %67, %66 ], [ %70, %76 ], [ %70, %68 ]
  %79 = load %struct.ssl_session_st*, %struct.ssl_session_st** %58, align 8
  store i64 %5, i64* %78, align 8
  %80 = icmp eq %struct.ssl_session_st* %79, null
  br i1 %80, label %82, label %81

81:                                               ; preds = %77
  call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %79) #14
  br label %82

82:                                               ; preds = %81, %77, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__list_node_base"* @_ZN4base12MRUCacheBaseIN3net21SSLClientSessionCache3KeyENS2_5EntryENSt3__14lessIS3_EENS_19MRUCacheStandardMapEE3PutIS4_EENS5_15__list_iteratorINS5_4pairIS3_S4_EEPvEERKS3_OT_(%"class.base::MRUCacheBase"*, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248), %"struct.net::SSLClientSessionCache::Entry"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__list_iterator", align 8
  %5 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2, i32 0
  %6 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE4findIS4_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_S9_EElEERKT_(%"class.std::__1::__tree"* %5, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248) %1) #14
  %7 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %6, %7
  br i1 %8, label %22, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 35
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"struct.std::__1::__list_node_base"**
  %12 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %12, i64 1
  %14 = bitcast %"struct.std::__1::__list_node_base"* %13 to %"struct.net::SSLClientSessionCache::Key"*
  %15 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE4findIS4_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_S9_EElEERKT_(%"class.std::__1::__tree"* %5, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248) %14) #14
  %16 = icmp eq %"class.std::__1::__tree_end_node"* %15, %7
  br i1 %16, label %19, label %17

17:                                               ; preds = %9
  %18 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE5eraseENS_21__tree_const_iteratorISB_PNS_11__tree_nodeISB_S9_EElEE(%"class.std::__1::__tree"* %5, %"class.std::__1::__tree_end_node"* %15) #14
  br label %19

19:                                               ; preds = %9, %17
  %20 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 1
  %21 = tail call %"struct.std::__1::__list_node_base"* @_ZNSt3__14listINS_4pairIN3net21SSLClientSessionCache3KeyENS3_5EntryEEENS_9allocatorIS6_EEE5eraseENS_21__list_const_iteratorIS6_PvEE(%"class.std::__1::list"* %20, %"struct.std::__1::__list_node_base"* %12) #14
  br label %47

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %47, label %26

26:                                               ; preds = %22
  %27 = add i64 %24, -1
  %28 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp ugt i64 %29, %27
  br i1 %30, label %31, label %47

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 1
  br label %34

34:                                               ; preds = %43, %31
  %35 = phi i64 [ %29, %31 ], [ %45, %43 ]
  %36 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %32, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %36, i64 1
  %38 = bitcast %"struct.std::__1::__list_node_base"* %37 to %"struct.net::SSLClientSessionCache::Key"*
  %39 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE4findIS4_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_S9_EElEERKT_(%"class.std::__1::__tree"* %5, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248) %38) #14
  %40 = icmp eq %"class.std::__1::__tree_end_node"* %39, %6
  br i1 %40, label %43, label %41

41:                                               ; preds = %34
  %42 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE5eraseENS_21__tree_const_iteratorISB_PNS_11__tree_nodeISB_S9_EElEE(%"class.std::__1::__tree"* %5, %"class.std::__1::__tree_end_node"* %39) #14
  br label %43

43:                                               ; preds = %41, %34
  %44 = tail call %"struct.std::__1::__list_node_base"* @_ZNSt3__14listINS_4pairIN3net21SSLClientSessionCache3KeyENS3_5EntryEEENS_9allocatorIS6_EEE5eraseENS_21__list_const_iteratorIS6_PvEE(%"class.std::__1::list"* %33, %"struct.std::__1::__list_node_base"* %36) #14
  %45 = add i64 %35, -1
  %46 = icmp ugt i64 %45, %27
  br i1 %46, label %34, label %47

47:                                               ; preds = %43, %26, %22, %19
  %48 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 1
  tail call void @_ZNSt3__14listINS_4pairIN3net21SSLClientSessionCache3KeyENS3_5EntryEEENS_9allocatorIS6_EEE13emplace_frontIJRKS4_S5_EEEvDpOT_(%"class.std::__1::list"* %48, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248) %1, %"struct.net::SSLClientSessionCache::Entry"* dereferenceable(16) %2)
  %49 = bitcast %"class.std::__1::__list_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #14
  %50 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %51 = bitcast %"struct.std::__1::__list_node_base"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.std::__1::__list_iterator"* %4 to i64*
  store i64 %52, i64* %53, align 8
  %54 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE25__emplace_unique_key_argsIS4_JRKS4_SA_EEENS6_INS_15__tree_iteratorISB_PNS_11__tree_nodeISB_S9_EElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %5, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248) %1, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248) %1, %"class.std::__1::__list_iterator"* nonnull dereferenceable(8) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #14
  %55 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %50, align 8
  ret %"struct.std::__1::__list_node_base"* %55
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21SSLClientSessionCache5Entry4PushENSt3__110unique_ptrI14ssl_session_stN4bssl8internal7DeleterIS4_EEEE(%"struct.net::SSLClientSessionCache::Entry"* nocapture, %struct.ssl_session_st*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %struct.ssl_session_st* %1 to i64
  %4 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Entry", %"struct.net::SSLClientSessionCache::Entry"* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0
  %5 = load %struct.ssl_session_st*, %struct.ssl_session_st** %4, align 8
  %6 = icmp eq %struct.ssl_session_st* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = bitcast %"struct.net::SSLClientSessionCache::Entry"* %0 to i64*
  store i64 %3, i64* %8, align 8
  br label %28

9:                                                ; preds = %2
  %10 = tail call i32 @SSL_SESSION_should_be_single_use(%struct.ssl_session_st* nonnull %5) #14
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %9
  %13 = bitcast %"struct.net::SSLClientSessionCache::Entry"* %0 to i64*
  br label %23

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Entry", %"struct.net::SSLClientSessionCache::Entry"* %0, i64 0, i32 0, i64 1
  %16 = bitcast %"struct.net::SSLClientSessionCache::Entry"* %0 to i64*
  %17 = load i64, i64* %16, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %4, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.32"* %15, i64 0, i32 0, i32 0, i32 0
  %19 = load %struct.ssl_session_st*, %struct.ssl_session_st** %18, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.32"* %15 to i64*
  store i64 %17, i64* %20, align 8
  %21 = icmp eq %struct.ssl_session_st* %19, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %14
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %19) #14
  br label %23

23:                                               ; preds = %12, %22, %14
  %24 = phi i64* [ %13, %12 ], [ %16, %22 ], [ %16, %14 ]
  %25 = load %struct.ssl_session_st*, %struct.ssl_session_st** %4, align 8
  store i64 %3, i64* %24, align 8
  %26 = icmp eq %struct.ssl_session_st* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %25) #14
  br label %28

28:                                               ; preds = %27, %23, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21SSLClientSessionCache14ClearEarlyDataERKNS0_3KeyE(%"class.net::SSLClientSessionCache"*, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2, i32 0
  %4 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE4findIS4_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_S9_EElEERKT_(%"class.std::__1::__tree"* %3, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248) %1) #14
  %5 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  br i1 %6, label %53, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 35
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"struct.std::__1::__list_node_base"**
  %10 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %12 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__list_node_base"* %12, %10
  br i1 %13, label %34, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %10, i64 0, i32 1
  %16 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8
  %17 = icmp eq %"struct.std::__1::__list_node_base"* %16, %12
  br i1 %17, label %34, label %18

18:                                               ; preds = %14
  %19 = ptrtoint %"struct.std::__1::__list_node_base"* %16 to i64
  %20 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %10, i64 0, i32 0
  %21 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %21, i64 0, i32 1
  %23 = bitcast %"struct.std::__1::__list_node_base"** %22 to i64*
  store i64 %19, i64* %23, align 8
  %24 = bitcast %"struct.std::__1::__list_node_base"* %10 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"struct.std::__1::__list_node_base"** %15 to i64**
  %27 = load i64*, i64** %26, align 8
  store i64 %25, i64* %27, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %12, i64 0, i32 0
  %29 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %29, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %10, %"struct.std::__1::__list_node_base"** %30, align 8
  %31 = bitcast %"struct.std::__1::__list_node_base"* %12 to i64*
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %24, align 8
  store %"struct.std::__1::__list_node_base"* %10, %"struct.std::__1::__list_node_base"** %28, align 8
  store %"struct.std::__1::__list_node_base"* %12, %"struct.std::__1::__list_node_base"** %15, align 8
  %33 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %11, align 8
  br label %34

34:                                               ; preds = %7, %14, %18
  %35 = phi %"struct.std::__1::__list_node_base"* [ %10, %7 ], [ %12, %14 ], [ %33, %18 ]
  %36 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %37 = icmp eq %"struct.std::__1::__list_node_base"* %35, %36
  br i1 %37, label %53, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %35, i64 16, i32 1
  %40 = bitcast %"struct.std::__1::__list_node_base"** %39 to %struct.ssl_session_st**
  %41 = load %struct.ssl_session_st*, %struct.ssl_session_st** %40, align 8
  %42 = icmp eq %struct.ssl_session_st* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %38
  %44 = tail call %struct.ssl_session_st* @SSL_SESSION_copy_without_early_data(%struct.ssl_session_st* nonnull %41) #14
  %45 = load %struct.ssl_session_st*, %struct.ssl_session_st** %40, align 8
  store %struct.ssl_session_st* %44, %struct.ssl_session_st** %40, align 8
  %46 = icmp eq %struct.ssl_session_st* %45, null
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %45) #14
  br label %48

48:                                               ; preds = %38, %47, %43
  %49 = getelementptr inbounds %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %39, i64 1
  %50 = bitcast %"struct.std::__1::__list_node_base"** %49 to %struct.ssl_session_st**
  %51 = load %struct.ssl_session_st*, %struct.ssl_session_st** %50, align 8
  %52 = icmp eq %struct.ssl_session_st* %51, null
  br i1 %52, label %53, label %54

53:                                               ; preds = %48, %54, %58, %34, %2
  ret void

54:                                               ; preds = %48
  %55 = tail call %struct.ssl_session_st* @SSL_SESSION_copy_without_early_data(%struct.ssl_session_st* nonnull %51) #14
  %56 = load %struct.ssl_session_st*, %struct.ssl_session_st** %50, align 8
  store %struct.ssl_session_st* %55, %struct.ssl_session_st** %50, align 8
  %57 = icmp eq %struct.ssl_session_st* %56, null
  br i1 %57, label %53, label %58

58:                                               ; preds = %54
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %56) #14
  br label %53
}

declare %struct.ssl_session_st* @SSL_SESSION_copy_without_early_data(%struct.ssl_session_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21SSLClientSessionCache14FlushForServerERKNS_12HostPortPairE(%"class.net::SSLClientSessionCache"*, %"class.net::HostPortPair"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast %"struct.std::__1::__list_node_base"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %7 = inttoptr i64 %5 to %"struct.std::__1::__list_node_base"*
  %8 = icmp eq %"struct.std::__1::__list_node_base"* %6, %7
  br i1 %8, label %91, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.net::HostPortPair"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.net::HostPortPair"* %1 to i8*
  %15 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 0, i32 1
  %16 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2, i32 0
  %17 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %18 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 1
  br label %19

19:                                               ; preds = %9, %87
  %20 = phi %"struct.std::__1::__list_node_base"* [ %7, %9 ], [ %89, %87 ]
  %21 = phi i64 [ %5, %9 ], [ %88, %87 ]
  %22 = inttoptr i64 %21 to %"struct.std::__1::__list_node"*
  %23 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %22, i64 0, i32 1, i32 0, i32 0
  %24 = bitcast %"class.net::HostPortPair"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = load i8, i8* %11, align 1
  %33 = icmp slt i8 %32, 0
  %34 = load i64, i64* %12, align 8
  %35 = zext i8 %32 to i64
  %36 = select i1 %33, i64 %34, i64 %35
  %37 = icmp eq i64 %31, %36
  br i1 %37, label %38, label %83

38:                                               ; preds = %19
  %39 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast %"class.net::HostPortPair"* %23 to i8*
  %42 = select i1 %27, i8* %40, i8* %41
  %43 = load i8*, i8** %13, align 8
  %44 = select i1 %33, i8* %43, i8* %14
  %45 = icmp eq i64 %31, 0
  br i1 %27, label %52, label %46

46:                                               ; preds = %38
  br i1 %45, label %68, label %47

47:                                               ; preds = %46
  %48 = ptrtoint i8* %40 to i64
  %49 = trunc i64 %48 to i8
  %50 = load i8, i8* %44, align 1
  %51 = icmp eq i8 %50, %49
  br i1 %51, label %53, label %83

52:                                               ; preds = %38
  br i1 %45, label %68, label %65

53:                                               ; preds = %47, %60
  %54 = phi i64 [ %57, %60 ], [ %30, %47 ]
  %55 = phi i8* [ %58, %60 ], [ %41, %47 ]
  %56 = phi i8* [ %61, %60 ], [ %44, %47 ]
  %57 = add i64 %54, -1
  %58 = getelementptr inbounds i8, i8* %55, i64 1
  %59 = icmp eq i64 %57, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds i8, i8* %56, i64 1
  %62 = load i8, i8* %58, align 1
  %63 = load i8, i8* %61, align 1
  %64 = icmp eq i8 %62, %63
  br i1 %64, label %53, label %83

65:                                               ; preds = %52
  %66 = tail call i32 @bcmp(i8* %42, i8* %44, i64 %31) #14
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %83

68:                                               ; preds = %53, %46, %52, %65
  %69 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 1
  %70 = load i16, i16* %69, align 8
  %71 = load i16, i16* %15, align 8
  %72 = icmp eq i16 %70, %71
  br i1 %72, label %73, label %83

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %20, i64 1
  %75 = bitcast %"struct.std::__1::__list_node_base"* %74 to %"struct.net::SSLClientSessionCache::Key"*
  %76 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE4findIS4_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_S9_EElEERKT_(%"class.std::__1::__tree"* %16, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248) %75) #14
  %77 = icmp eq %"class.std::__1::__tree_end_node"* %76, %17
  br i1 %77, label %80, label %78

78:                                               ; preds = %73
  %79 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE5eraseENS_21__tree_const_iteratorISB_PNS_11__tree_nodeISB_S9_EElEE(%"class.std::__1::__tree"* %16, %"class.std::__1::__tree_end_node"* %76) #14
  br label %80

80:                                               ; preds = %73, %78
  %81 = tail call %"struct.std::__1::__list_node_base"* @_ZNSt3__14listINS_4pairIN3net21SSLClientSessionCache3KeyENS3_5EntryEEENS_9allocatorIS6_EEE5eraseENS_21__list_const_iteratorIS6_PvEE(%"class.std::__1::list"* %18, %"struct.std::__1::__list_node_base"* %20) #14
  %82 = ptrtoint %"struct.std::__1::__list_node_base"* %81 to i64
  br label %87

83:                                               ; preds = %60, %47, %19, %65, %68
  %84 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %20, i64 0, i32 1
  %85 = bitcast %"struct.std::__1::__list_node_base"** %84 to i64*
  %86 = load i64, i64* %85, align 8
  br label %87

87:                                               ; preds = %83, %80
  %88 = phi i64 [ %82, %80 ], [ %86, %83 ]
  %89 = inttoptr i64 %88 to %"struct.std::__1::__list_node_base"*
  %90 = icmp eq %"struct.std::__1::__list_node_base"* %6, %89
  br i1 %90, label %91, label %19

91:                                               ; preds = %87, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net21SSLClientSessionCache18SetClockForTestingEPN4base5ClockE(%"class.net::SSLClientSessionCache"* nocapture, %"class.base::Clock"*) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 0
  store %"class.base::Clock"* %1, %"class.base::Clock"** %3, align 8
  ret void
}

declare i64 @SSL_SESSION_get_time(%struct.ssl_session_st*) local_unnamed_addr #1

declare i32 @SSL_SESSION_get_timeout(%struct.ssl_session_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net21SSLClientSessionCache15DumpMemoryStatsEPN4base11trace_event17ProcessMemoryDumpERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.net::SSLClientSessionCache"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::internal::flat_tree", align 16
  %6 = alloca %struct.crypto_buffer_st*, align 8
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #14, !alias.scope !28
  %11 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1, !noalias !28
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = zext i8 %13 to i64
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %14, i64 %16, i64 %19
  %22 = select i1 %14, i8* %18, i8* %20
  %23 = add i64 %21, 25
  %24 = icmp ugt i64 %23, -17
  br i1 %24, label %25, label %27

25:                                               ; preds = %3
  %26 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %26) #16
  unreachable

27:                                               ; preds = %3
  %28 = icmp ult i64 %23, 23
  br i1 %28, label %29, label %33

29:                                               ; preds = %27
  %30 = trunc i64 %21 to i8
  %31 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 %30, i8* %32, align 1, !alias.scope !28
  br label %39

33:                                               ; preds = %27
  %34 = add i64 %21, 41
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #15
  store i8* %36, i8** %8, align 8, !alias.scope !28
  %37 = or i64 %35, -9223372036854775808
  store i64 %37, i64* %10, align 8, !alias.scope !28
  store i64 %21, i64* %9, align 8, !alias.scope !28
  %38 = icmp eq i64 %21, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %29, %33
  %40 = phi i8* [ %7, %29 ], [ %36, %33 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %40, i8* align 1 %22, i64 %21, i1 false) #14
  br label %41

41:                                               ; preds = %33, %39
  %42 = phi i8* [ %36, %33 ], [ %40, %39 ]
  %43 = getelementptr inbounds i8, i8* %42, i64 %21
  store i8 0, i8* %43, align 1
  %44 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i64 25) #14
  %45 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #14
  %46 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.net::SSLClientSessionCache", %"class.net::SSLClientSessionCache"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %48 = bitcast %"struct.std::__1::__list_node_base"** %46 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = inttoptr i64 %49 to %"struct.std::__1::__list_node_base"*
  %51 = icmp eq %"struct.std::__1::__list_node_base"* %47, %50
  br i1 %51, label %52, label %82

52:                                               ; preds = %257, %41
  %53 = phi i64 [ 0, %41 ], [ %258, %257 ]
  %54 = bitcast %"class.base::internal::flat_tree"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #14
  %55 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %5, i64 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %5, i64 0, i32 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %54, i8 0, i64 24, i1 false) #14
  %58 = bitcast %struct.crypto_buffer_st*** %57 to i64*
  %59 = icmp eq i64 %53, 0
  br i1 %59, label %73, label %60

60:                                               ; preds = %52
  %61 = icmp ugt i64 %53, 2305843009213693951
  br i1 %61, label %62, label %63

62:                                               ; preds = %60
  call void @abort() #16
  unreachable

63:                                               ; preds = %60
  %64 = shl i64 %53, 3
  %65 = call i8* @_Znwm(i64 %64) #15
  %66 = bitcast i8* %65 to %struct.crypto_buffer_st**
  %67 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %66, i64 %53
  %68 = ptrtoint %struct.crypto_buffer_st** %67 to i64
  %69 = insertelement <2 x i8*> undef, i8* %65, i32 0
  %70 = shufflevector <2 x i8*> %69, <2 x i8*> undef, <2 x i32> zeroinitializer
  %71 = ptrtoint <2 x i8*> %70 to <2 x i64>
  %72 = bitcast %"class.base::internal::flat_tree"* %5 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %72, align 16
  store i64 %68, i64* %58, align 16
  br label %73

73:                                               ; preds = %63, %52
  %74 = load i64, i64* %48, align 8
  %75 = inttoptr i64 %74 to %"struct.std::__1::__list_node_base"*
  %76 = icmp eq %"struct.std::__1::__list_node_base"* %47, %75
  br i1 %76, label %100, label %77

77:                                               ; preds = %73
  %78 = bitcast %struct.crypto_buffer_st** %6 to i8*
  %79 = bitcast %struct.crypto_buffer_st** %6 to i8**
  %80 = bitcast %struct.crypto_buffer_st*** %56 to i64*
  %81 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %5, i64 0, i32 0
  br label %118

82:                                               ; preds = %41, %257
  %83 = phi %"struct.std::__1::__list_node_base"* [ %262, %257 ], [ %50, %41 ]
  %84 = phi i64 [ %261, %257 ], [ %49, %41 ]
  %85 = phi i64 [ %258, %257 ], [ 0, %41 ]
  %86 = inttoptr i64 %84 to %"struct.std::__1::__list_node"*
  %87 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %86, i64 0, i32 1, i32 1, i32 0, i64 0, i32 0, i32 0, i32 0
  %88 = load %struct.ssl_session_st*, %struct.ssl_session_st** %87, align 8
  %89 = icmp eq %struct.ssl_session_st* %88, null
  br i1 %89, label %95, label %90

90:                                               ; preds = %82
  %91 = call %struct.stack_st_CRYPTO_BUFFER* @SSL_SESSION_get0_peer_certificates(%struct.ssl_session_st* nonnull %88) #14
  %92 = bitcast %struct.stack_st_CRYPTO_BUFFER* %91 to %struct.stack_st*
  %93 = call i64 @sk_num(%struct.stack_st* %92) #14
  %94 = add i64 %93, %85
  br label %95

95:                                               ; preds = %82, %90
  %96 = phi i64 [ %94, %90 ], [ %85, %82 ]
  %97 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %86, i64 0, i32 1, i32 1, i32 0, i64 1, i32 0, i32 0, i32 0
  %98 = load %struct.ssl_session_st*, %struct.ssl_session_st** %97, align 8
  %99 = icmp eq %struct.ssl_session_st* %98, null
  br i1 %99, label %257, label %252

100:                                              ; preds = %243, %73
  %101 = phi i64 [ 0, %73 ], [ %244, %243 ]
  %102 = phi i64 [ 0, %73 ], [ %245, %243 ]
  %103 = phi i64 [ 0, %73 ], [ %246, %243 ]
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %45, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump9kNameSizeE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump11kUnitsBytesE, i64 0, i64 0), i64 %103) #14
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %45, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump11kUnitsBytesE, i64 0, i64 0), i64 %103) #14
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %45, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump13kUnitsObjectsE, i64 0, i64 0), i64 %102) #14
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %45, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump11kUnitsBytesE, i64 0, i64 0), i64 %101) #14
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %45, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump13kUnitsObjectsE, i64 0, i64 0), i64 %53) #14
  %104 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %55, align 16
  %105 = icmp eq %struct.crypto_buffer_st** %104, null
  br i1 %105, label %110, label %106

106:                                              ; preds = %100
  %107 = ptrtoint %struct.crypto_buffer_st** %104 to i64
  %108 = bitcast %struct.crypto_buffer_st*** %56 to i64*
  store i64 %107, i64* %108, align 8
  %109 = bitcast %struct.crypto_buffer_st** %104 to i8*
  call void @_ZdlPv(i8* %109) #15
  br label %110

110:                                              ; preds = %100, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #14
  %111 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %110
  %116 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %116) #15
  br label %117

117:                                              ; preds = %110, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #14
  ret void

118:                                              ; preds = %77, %243
  %119 = phi %"struct.std::__1::__list_node_base"* [ %75, %77 ], [ %250, %243 ]
  %120 = phi i64 [ %74, %77 ], [ %249, %243 ]
  %121 = phi i64 [ 0, %77 ], [ %246, %243 ]
  %122 = phi i64 [ 0, %77 ], [ %245, %243 ]
  %123 = phi i64 [ 0, %77 ], [ %244, %243 ]
  %124 = inttoptr i64 %120 to %"struct.std::__1::__list_node"*
  %125 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %124, i64 0, i32 1, i32 1, i32 0, i64 0, i32 0, i32 0, i32 0
  %126 = load %struct.ssl_session_st*, %struct.ssl_session_st** %125, align 8
  %127 = icmp eq %struct.ssl_session_st* %126, null
  br i1 %127, label %182, label %128

128:                                              ; preds = %118
  %129 = call %struct.stack_st_CRYPTO_BUFFER* @SSL_SESSION_get0_peer_certificates(%struct.ssl_session_st* nonnull %126) #14
  %130 = bitcast %struct.stack_st_CRYPTO_BUFFER* %129 to %struct.stack_st*
  %131 = call i64 @sk_num(%struct.stack_st* %130) #14
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %182, label %133

133:                                              ; preds = %128, %177
  %134 = phi i64 [ %179, %177 ], [ %121, %128 ]
  %135 = phi i64 [ %178, %177 ], [ %122, %128 ]
  %136 = phi i64 [ %141, %177 ], [ %123, %128 ]
  %137 = phi i64 [ %180, %177 ], [ 0, %128 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #14
  store %struct.crypto_buffer_st* inttoptr (i64 -6148914691236517206 to %struct.crypto_buffer_st*), %struct.crypto_buffer_st** %6, align 8
  %138 = call i8* @sk_value(%struct.stack_st* %130, i64 %137) #14
  %139 = bitcast i8* %138 to %struct.crypto_buffer_st*
  store i8* %138, i8** %79, align 8
  %140 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %139) #14
  %141 = add i64 %140, %136
  %142 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %55, align 16
  %143 = load i64, i64* %80, align 8
  %144 = ptrtoint %struct.crypto_buffer_st** %142 to i64
  %145 = sub i64 %143, %144
  %146 = icmp eq i64 %145, 0
  %147 = inttoptr i64 %143 to %struct.crypto_buffer_st**
  br i1 %146, label %164, label %148

148:                                              ; preds = %133
  %149 = ashr exact i64 %145, 3
  %150 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %6, align 8
  br label %151

151:                                              ; preds = %151, %148
  %152 = phi %struct.crypto_buffer_st** [ %142, %148 ], [ %162, %151 ]
  %153 = phi i64 [ %149, %148 ], [ %161, %151 ]
  %154 = lshr i64 %153, 1
  %155 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %152, i64 %154
  %156 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %155, align 8
  %157 = icmp ult %struct.crypto_buffer_st* %156, %150
  %158 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %155, i64 1
  %159 = xor i64 %154, -1
  %160 = add i64 %153, %159
  %161 = select i1 %157, i64 %160, i64 %154
  %162 = select i1 %157, %struct.crypto_buffer_st** %158, %struct.crypto_buffer_st** %152
  %163 = icmp eq i64 %161, 0
  br i1 %163, label %164, label %151

164:                                              ; preds = %151, %133
  %165 = phi %struct.crypto_buffer_st** [ %142, %133 ], [ %162, %151 ]
  %166 = icmp eq %struct.crypto_buffer_st** %165, %147
  br i1 %166, label %171, label %167

167:                                              ; preds = %164
  %168 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %6, align 8
  %169 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %165, align 8
  %170 = icmp ult %struct.crypto_buffer_st* %168, %169
  br i1 %170, label %171, label %177

171:                                              ; preds = %167, %164
  %172 = call %struct.crypto_buffer_st** @_ZNSt3__16vectorIPK16crypto_buffer_stNS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector.74"* nonnull %81, %struct.crypto_buffer_st** %165, %struct.crypto_buffer_st** nonnull dereferenceable(8) %6) #14
  %173 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %6, align 8
  %174 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %173) #14
  %175 = add i64 %174, %134
  %176 = add i64 %135, 1
  br label %177

177:                                              ; preds = %167, %171
  %178 = phi i64 [ %176, %171 ], [ %135, %167 ]
  %179 = phi i64 [ %175, %171 ], [ %134, %167 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #14
  %180 = add nuw i64 %137, 1
  %181 = icmp eq i64 %180, %131
  br i1 %181, label %182, label %133

182:                                              ; preds = %177, %128, %118
  %183 = phi i64 [ %123, %118 ], [ %123, %128 ], [ %141, %177 ]
  %184 = phi i64 [ %122, %118 ], [ %122, %128 ], [ %178, %177 ]
  %185 = phi i64 [ %121, %118 ], [ %121, %128 ], [ %179, %177 ]
  %186 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %124, i64 0, i32 1, i32 1, i32 0, i64 1, i32 0, i32 0, i32 0
  %187 = load %struct.ssl_session_st*, %struct.ssl_session_st** %186, align 8
  %188 = icmp eq %struct.ssl_session_st* %187, null
  br i1 %188, label %243, label %189

189:                                              ; preds = %182
  %190 = call %struct.stack_st_CRYPTO_BUFFER* @SSL_SESSION_get0_peer_certificates(%struct.ssl_session_st* nonnull %187) #14
  %191 = bitcast %struct.stack_st_CRYPTO_BUFFER* %190 to %struct.stack_st*
  %192 = call i64 @sk_num(%struct.stack_st* %191) #14
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %243, label %194

194:                                              ; preds = %189, %238
  %195 = phi i64 [ %240, %238 ], [ %185, %189 ]
  %196 = phi i64 [ %239, %238 ], [ %184, %189 ]
  %197 = phi i64 [ %202, %238 ], [ %183, %189 ]
  %198 = phi i64 [ %241, %238 ], [ 0, %189 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #14
  store %struct.crypto_buffer_st* inttoptr (i64 -6148914691236517206 to %struct.crypto_buffer_st*), %struct.crypto_buffer_st** %6, align 8
  %199 = call i8* @sk_value(%struct.stack_st* %191, i64 %198) #14
  %200 = bitcast i8* %199 to %struct.crypto_buffer_st*
  store i8* %199, i8** %79, align 8
  %201 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %200) #14
  %202 = add i64 %201, %197
  %203 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %55, align 16
  %204 = load i64, i64* %80, align 8
  %205 = ptrtoint %struct.crypto_buffer_st** %203 to i64
  %206 = sub i64 %204, %205
  %207 = icmp eq i64 %206, 0
  %208 = inttoptr i64 %204 to %struct.crypto_buffer_st**
  br i1 %207, label %225, label %209

209:                                              ; preds = %194
  %210 = ashr exact i64 %206, 3
  %211 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %6, align 8
  br label %212

212:                                              ; preds = %212, %209
  %213 = phi %struct.crypto_buffer_st** [ %203, %209 ], [ %223, %212 ]
  %214 = phi i64 [ %210, %209 ], [ %222, %212 ]
  %215 = lshr i64 %214, 1
  %216 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %213, i64 %215
  %217 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %216, align 8
  %218 = icmp ult %struct.crypto_buffer_st* %217, %211
  %219 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %216, i64 1
  %220 = xor i64 %215, -1
  %221 = add i64 %214, %220
  %222 = select i1 %218, i64 %221, i64 %215
  %223 = select i1 %218, %struct.crypto_buffer_st** %219, %struct.crypto_buffer_st** %213
  %224 = icmp eq i64 %222, 0
  br i1 %224, label %225, label %212

225:                                              ; preds = %212, %194
  %226 = phi %struct.crypto_buffer_st** [ %203, %194 ], [ %223, %212 ]
  %227 = icmp eq %struct.crypto_buffer_st** %226, %208
  br i1 %227, label %232, label %228

228:                                              ; preds = %225
  %229 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %6, align 8
  %230 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %226, align 8
  %231 = icmp ult %struct.crypto_buffer_st* %229, %230
  br i1 %231, label %232, label %238

232:                                              ; preds = %228, %225
  %233 = call %struct.crypto_buffer_st** @_ZNSt3__16vectorIPK16crypto_buffer_stNS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector.74"* nonnull %81, %struct.crypto_buffer_st** %226, %struct.crypto_buffer_st** nonnull dereferenceable(8) %6) #14
  %234 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %6, align 8
  %235 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %234) #14
  %236 = add i64 %235, %195
  %237 = add i64 %196, 1
  br label %238

238:                                              ; preds = %232, %228
  %239 = phi i64 [ %237, %232 ], [ %196, %228 ]
  %240 = phi i64 [ %236, %232 ], [ %195, %228 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #14
  %241 = add nuw i64 %198, 1
  %242 = icmp eq i64 %241, %192
  br i1 %242, label %243, label %194

243:                                              ; preds = %238, %189, %182
  %244 = phi i64 [ %183, %182 ], [ %183, %189 ], [ %202, %238 ]
  %245 = phi i64 [ %184, %182 ], [ %184, %189 ], [ %239, %238 ]
  %246 = phi i64 [ %185, %182 ], [ %185, %189 ], [ %240, %238 ]
  %247 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %119, i64 0, i32 1
  %248 = bitcast %"struct.std::__1::__list_node_base"** %247 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = inttoptr i64 %249 to %"struct.std::__1::__list_node_base"*
  %251 = icmp eq %"struct.std::__1::__list_node_base"* %47, %250
  br i1 %251, label %100, label %118

252:                                              ; preds = %95
  %253 = call %struct.stack_st_CRYPTO_BUFFER* @SSL_SESSION_get0_peer_certificates(%struct.ssl_session_st* nonnull %98) #14
  %254 = bitcast %struct.stack_st_CRYPTO_BUFFER* %253 to %struct.stack_st*
  %255 = call i64 @sk_num(%struct.stack_st* %254) #14
  %256 = add i64 %255, %96
  br label %257

257:                                              ; preds = %252, %95
  %258 = phi i64 [ %256, %252 ], [ %96, %95 ]
  %259 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %83, i64 0, i32 1
  %260 = bitcast %"struct.std::__1::__list_node_base"** %259 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %261 to %"struct.std::__1::__list_node_base"*
  %263 = icmp eq %"struct.std::__1::__list_node_base"* %47, %262
  br i1 %263, label %52, label %82
}

declare %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare %struct.stack_st_CRYPTO_BUFFER* @SSL_SESSION_get0_peer_certificates(%struct.ssl_session_st*) local_unnamed_addr #1

declare i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st*) local_unnamed_addr #1

declare void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"*, i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net21SSLClientSessionCache5EntryC2Ev(%"struct.net::SSLClientSessionCache::Entry"*) unnamed_addr #5 align 2 {
  %2 = bitcast %"struct.net::SSLClientSessionCache::Entry"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net21SSLClientSessionCache5EntryC2EOS1_(%"struct.net::SSLClientSessionCache::Entry"* nocapture, %"struct.net::SSLClientSessionCache::Entry"* nocapture dereferenceable(16)) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Entry", %"struct.net::SSLClientSessionCache::Entry"* %1, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0
  %4 = bitcast %"struct.net::SSLClientSessionCache::Entry"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %3, align 8
  %6 = bitcast %"struct.net::SSLClientSessionCache::Entry"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Entry", %"struct.net::SSLClientSessionCache::Entry"* %0, i64 0, i32 0, i64 1
  %8 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Entry", %"struct.net::SSLClientSessionCache::Entry"* %1, i64 0, i32 0, i64 1
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.32"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::unique_ptr.32"* %8 to i64*
  %11 = load i64, i64* %10, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %9, align 8
  %12 = bitcast %"class.std::__1::unique_ptr.32"* %7 to i64*
  store i64 %11, i64* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21SSLClientSessionCache5EntryD2Ev(%"struct.net::SSLClientSessionCache::Entry"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Entry", %"struct.net::SSLClientSessionCache::Entry"* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i32 0
  %3 = load %struct.ssl_session_st*, %struct.ssl_session_st** %2, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %2, align 8
  %4 = icmp eq %struct.ssl_session_st* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %3) #14
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Entry", %"struct.net::SSLClientSessionCache::Entry"* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0
  %8 = load %struct.ssl_session_st*, %struct.ssl_session_st** %7, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %7, align 8
  %9 = icmp eq %struct.ssl_session_st* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %8) #14
  br label %11

11:                                               ; preds = %10, %6
  ret void
}

declare i32 @SSL_SESSION_should_be_single_use(%struct.ssl_session_st*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__113__tuple_equalILm3EEclINS_5tupleIJRKN3net12HostPortPairERKN4absl8optionalINS4_9IPAddressEEERKNS4_19NetworkIsolationKeyERKNS4_11PrivacyModeERKbEEESM_EEbRKT_RKT0_(%"struct.std::__1::__tuple_equal.84"*, %"class.std::__1::tuple"* dereferenceable(40), %"class.std::__1::tuple"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %6, align 8
  %8 = bitcast %"class.net::HostPortPair"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = bitcast %"class.net::HostPortPair"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = icmp eq i64 %15, %23
  br i1 %24, label %25, label %131

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast %"class.net::HostPortPair"* %5 to i8*
  %29 = select i1 %11, i8* %27, i8* %28
  %30 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = bitcast %"class.net::HostPortPair"* %7 to i8*
  %33 = select i1 %19, i8* %31, i8* %32
  %34 = icmp eq i64 %15, 0
  br i1 %11, label %41, label %35

35:                                               ; preds = %25
  br i1 %34, label %57, label %36

36:                                               ; preds = %35
  %37 = ptrtoint i8* %27 to i64
  %38 = trunc i64 %37 to i8
  %39 = load i8, i8* %33, align 1
  %40 = icmp eq i8 %39, %38
  br i1 %40, label %42, label %131

41:                                               ; preds = %25
  br i1 %34, label %57, label %54

42:                                               ; preds = %36, %49
  %43 = phi i64 [ %46, %49 ], [ %14, %36 ]
  %44 = phi i8* [ %47, %49 ], [ %28, %36 ]
  %45 = phi i8* [ %50, %49 ], [ %33, %36 ]
  %46 = add i64 %43, -1
  %47 = getelementptr inbounds i8, i8* %44, i64 1
  %48 = icmp eq i64 %46, 0
  br i1 %48, label %57, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds i8, i8* %45, i64 1
  %51 = load i8, i8* %47, align 1
  %52 = load i8, i8* %50, align 1
  %53 = icmp eq i8 %51, %52
  br i1 %53, label %42, label %131

54:                                               ; preds = %41
  %55 = tail call i32 @bcmp(i8* %29, i8* %33, i64 %15) #14
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %131

57:                                               ; preds = %42, %35, %41, %54
  %58 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %5, i64 0, i32 1
  %59 = load i16, i16* %58, align 8
  %60 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %7, i64 0, i32 1
  %61 = load i16, i16* %60, align 8
  %62 = icmp eq i16 %59, %61
  br i1 %62, label %63, label %131

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 1, i32 0
  %65 = load %"class.absl::optional"*, %"class.absl::optional"** %64, align 8
  %66 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 1, i32 0
  %67 = load %"class.absl::optional"*, %"class.absl::optional"** %66, align 8
  %68 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %65, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8, i8* %68, align 1, !range !2
  %70 = icmp ne i8 %69, 0
  %71 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8, i8* %71, align 1, !range !2
  %73 = icmp ne i8 %72, 0
  %74 = xor i1 %70, %73
  %75 = xor i1 %70, true
  %76 = or i1 %74, %75
  br i1 %76, label %84, label %77

77:                                               ; preds = %63
  %78 = icmp eq i8 %72, 0
  br i1 %78, label %79, label %80, !prof !31

79:                                               ; preds = %77
  tail call void @llvm.trap() #14
  unreachable

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %65, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %67, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %83 = tail call zeroext i1 @_ZNK3net9IPAddresseqERKS0_(%"class.net::IPAddress"* %81, %"class.net::IPAddress"* dereferenceable(17) %82) #14
  br i1 %83, label %85, label %131

84:                                               ; preds = %63
  br i1 %74, label %131, label %85

85:                                               ; preds = %84, %80
  %86 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 2, i32 0
  %87 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 2, i32 0
  %89 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %88, align 8
  %90 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %87, i64 0, i32 0
  %91 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %89, i64 0, i32 0
  %92 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %87, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %93 = load i8, i8* %92, align 8, !range !2
  %94 = icmp ne i8 %93, 0
  %95 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %89, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %96 = load i8, i8* %95, align 8, !range !2
  %97 = icmp ne i8 %96, 0
  %98 = xor i1 %94, %97
  %99 = xor i1 %94, true
  %100 = or i1 %98, %99
  br i1 %100, label %108, label %101

101:                                              ; preds = %85
  %102 = icmp eq i8 %96, 0
  br i1 %102, label %103, label %104, !prof !31

103:                                              ; preds = %101
  tail call void @llvm.trap() #14
  unreachable

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %87, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %106 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %89, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %107 = tail call zeroext i1 @_ZNK3net13SchemefulSiteeqERKS0_(%"class.net::SchemefulSite"* %105, %"class.net::SchemefulSite"* dereferenceable(80) %106) #14
  br i1 %107, label %109, label %131

108:                                              ; preds = %85
  br i1 %98, label %131, label %109

109:                                              ; preds = %108, %104
  %110 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %111 = load i8, i8* %110, align 8, !range !2
  %112 = icmp ne i8 %111, 0
  %113 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %114 = load i8, i8* %113, align 8, !range !2
  %115 = icmp ne i8 %114, 0
  %116 = xor i1 %112, %115
  %117 = xor i1 %112, true
  %118 = or i1 %116, %117
  br i1 %118, label %126, label %119

119:                                              ; preds = %109
  %120 = icmp eq i8 %114, 0
  br i1 %120, label %121, label %122, !prof !31

121:                                              ; preds = %119
  tail call void @llvm.trap() #14
  unreachable

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %124 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %125 = tail call zeroext i1 @_ZNK3net13SchemefulSiteeqERKS0_(%"class.net::SchemefulSite"* %123, %"class.net::SchemefulSite"* dereferenceable(80) %124) #14
  br i1 %125, label %127, label %131

126:                                              ; preds = %109
  br i1 %116, label %131, label %127

127:                                              ; preds = %126, %122
  %128 = load i8, i8* %90, align 1, !range !2
  %129 = load i8, i8* %91, align 1, !range !2
  %130 = icmp eq i8 %128, %129
  br label %131

131:                                              ; preds = %49, %84, %36, %3, %54, %57, %127, %126, %122, %108, %104, %80
  %132 = phi i1 [ false, %84 ], [ false, %80 ], [ false, %126 ], [ %130, %127 ], [ false, %122 ], [ false, %108 ], [ false, %104 ], [ false, %57 ], [ false, %54 ], [ false, %3 ], [ false, %36 ], [ false, %49 ]
  ret i1 %132
}

declare zeroext i1 @_ZNK3net9IPAddresseqERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare zeroext i1 @_ZNK3net13SchemefulSiteeqERKS0_(%"class.net::SchemefulSite"*, %"class.net::SchemefulSite"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__112__tuple_lessILm5EEclINS_5tupleIJRKN3net12HostPortPairERKN4absl8optionalINS4_9IPAddressEEERKNS4_19NetworkIsolationKeyERKNS4_11PrivacyModeERKbEEESM_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"*, %"class.std::__1::tuple"* dereferenceable(40), %"class.std::__1::tuple"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__tuple_less.109", align 1
  %5 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %7, align 8
  %9 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %8, i64 0, i32 1
  %11 = load i16, i16* %9, align 2
  %12 = load i16, i16* %10, align 2
  %13 = icmp ult i16 %11, %12
  br i1 %13, label %122, label %14

14:                                               ; preds = %3
  %15 = icmp ult i16 %12, %11
  br i1 %15, label %122, label %16

16:                                               ; preds = %14
  %17 = bitcast %"class.net::HostPortPair"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = bitcast %"class.net::HostPortPair"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i64 %30, i64 %31
  %33 = icmp ult i64 %24, %32
  %34 = select i1 %33, i64 %24, i64 %32
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %47, label %36

36:                                               ; preds = %16
  %37 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast %"class.net::HostPortPair"* %6 to i8*
  %40 = select i1 %28, i8* %38, i8* %39
  %41 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = bitcast %"class.net::HostPortPair"* %8 to i8*
  %44 = select i1 %20, i8* %42, i8* %43
  %45 = tail call i32 @memcmp(i8* %40, i8* %44, i64 %34) #14
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %36, %16
  %48 = icmp ult i64 %32, %24
  br i1 %48, label %122, label %51

49:                                               ; preds = %36
  %50 = icmp slt i32 %45, 0
  br i1 %50, label %122, label %51

51:                                               ; preds = %47, %49
  %52 = bitcast %"class.net::HostPortPair"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  %56 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = zext i8 %54 to i64
  %59 = select i1 %55, i64 %57, i64 %58
  %60 = bitcast %"class.net::HostPortPair"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  %64 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = zext i8 %62 to i64
  %67 = select i1 %63, i64 %65, i64 %66
  %68 = icmp ult i64 %59, %67
  %69 = select i1 %68, i64 %59, i64 %67
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %82, label %71

71:                                               ; preds = %51
  %72 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = bitcast %"class.net::HostPortPair"* %8 to i8*
  %75 = select i1 %63, i8* %73, i8* %74
  %76 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = bitcast %"class.net::HostPortPair"* %6 to i8*
  %79 = select i1 %55, i8* %77, i8* %78
  %80 = tail call i32 @memcmp(i8* %75, i8* %79, i64 %69) #14
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %71, %51
  %83 = icmp ult i64 %67, %59
  br i1 %83, label %122, label %86

84:                                               ; preds = %71
  %85 = icmp slt i32 %80, 0
  br i1 %85, label %122, label %86

86:                                               ; preds = %82, %84
  %87 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 1, i32 0
  %88 = load %"class.absl::optional"*, %"class.absl::optional"** %87, align 8
  %89 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 1, i32 0
  %90 = load %"class.absl::optional"*, %"class.absl::optional"** %89, align 8
  %91 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %90, i64 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8, i8* %91, align 1, !range !2
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %105, label %94

94:                                               ; preds = %86
  %95 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %88, i64 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8, i8* %95, align 1, !range !2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %122, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %88, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %100 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %90, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %101 = tail call zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"* %99, %"class.net::IPAddress"* dereferenceable(17) %100) #14
  br i1 %101, label %122, label %102

102:                                              ; preds = %98
  %103 = load %"class.absl::optional"*, %"class.absl::optional"** %89, align 8
  %104 = load %"class.absl::optional"*, %"class.absl::optional"** %87, align 8
  br label %105

105:                                              ; preds = %102, %86
  %106 = phi %"class.absl::optional"* [ %104, %102 ], [ %88, %86 ]
  %107 = phi %"class.absl::optional"* [ %103, %102 ], [ %90, %86 ]
  %108 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %106, i64 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8, i8* %108, align 1, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %119, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %107, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8, i8* %112, align 1, !range !2
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %122, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %107, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %117 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %106, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %118 = tail call zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"* %116, %"class.net::IPAddress"* dereferenceable(17) %117) #14
  br i1 %118, label %122, label %119

119:                                              ; preds = %115, %105
  %120 = getelementptr inbounds %"struct.std::__1::__tuple_less.109", %"struct.std::__1::__tuple_less.109"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %120) #14
  %121 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN3net12HostPortPairERKN4absl8optionalINS4_9IPAddressEEERKNS4_19NetworkIsolationKeyERKNS4_11PrivacyModeERKbEEESM_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.109"* nonnull %4, %"class.std::__1::tuple"* dereferenceable(40) %1, %"class.std::__1::tuple"* dereferenceable(40) %2) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %120) #14
  br label %122

122:                                              ; preds = %14, %3, %119, %115, %111, %98, %94, %82, %47, %84, %49
  %123 = phi i1 [ true, %49 ], [ false, %84 ], [ true, %47 ], [ false, %82 ], [ %121, %119 ], [ true, %98 ], [ false, %115 ], [ true, %94 ], [ false, %111 ], [ true, %3 ], [ false, %14 ]
  ret i1 %123
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN3net12HostPortPairERKN4absl8optionalINS4_9IPAddressEEERKNS4_19NetworkIsolationKeyERKNS4_11PrivacyModeERKbEEESM_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.109"*, %"class.std::__1::tuple"* dereferenceable(40), %"class.std::__1::tuple"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__tuple_less.109", align 1
  %5 = alloca %"class.std::__1::tuple.88", align 8
  %6 = alloca %"class.std::__1::tuple.88", align 8
  %7 = alloca %"struct.std::__1::__tuple_less.109", align 1
  %8 = alloca %"class.std::__1::tuple.88", align 8
  %9 = alloca %"class.std::__1::tuple.88", align 8
  %10 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 2, i32 0
  %11 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 2, i32 0
  %13 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %12, align 8
  %14 = bitcast %"class.std::__1::tuple.88"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #14
  %15 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %11, i64 0, i32 1
  %16 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %11, i64 0, i32 2
  %17 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %11, i64 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::tuple.88", %"class.std::__1::tuple.88"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional.2"* %15, %"class.absl::optional.2"** %18, align 8, !alias.scope !32
  %19 = getelementptr inbounds %"class.std::__1::tuple.88", %"class.std::__1::tuple.88"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional.2"* %16, %"class.absl::optional.2"** %19, align 8, !alias.scope !32
  %20 = getelementptr inbounds %"class.std::__1::tuple.88", %"class.std::__1::tuple.88"* %5, i64 0, i32 0, i32 2, i32 0
  store i8* %17, i8** %20, align 8, !alias.scope !32
  %21 = bitcast %"class.std::__1::tuple.88"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #14
  %22 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %13, i64 0, i32 1
  %23 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %13, i64 0, i32 2
  %24 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %13, i64 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::tuple.88", %"class.std::__1::tuple.88"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional.2"* %22, %"class.absl::optional.2"** %25, align 8, !alias.scope !35
  %26 = getelementptr inbounds %"class.std::__1::tuple.88", %"class.std::__1::tuple.88"* %6, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional.2"* %23, %"class.absl::optional.2"** %26, align 8, !alias.scope !35
  %27 = getelementptr inbounds %"class.std::__1::tuple.88", %"class.std::__1::tuple.88"* %6, i64 0, i32 0, i32 2, i32 0
  store i8* %24, i8** %27, align 8, !alias.scope !35
  %28 = getelementptr inbounds %"struct.std::__1::__tuple_less.109", %"struct.std::__1::__tuple_less.109"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %28) #14
  %29 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.109"* nonnull %4, %"class.std::__1::tuple.88"* nonnull dereferenceable(24) %5, %"class.std::__1::tuple.88"* nonnull dereferenceable(24) %6) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %28) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #14
  br i1 %29, label %67, label %30

30:                                               ; preds = %3
  %31 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %12, align 8
  %32 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %10, align 8
  %33 = bitcast %"class.std::__1::tuple.88"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #14
  %34 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %31, i64 0, i32 1
  %35 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %31, i64 0, i32 2
  %36 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %31, i64 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::tuple.88", %"class.std::__1::tuple.88"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional.2"* %34, %"class.absl::optional.2"** %37, align 8, !alias.scope !38
  %38 = getelementptr inbounds %"class.std::__1::tuple.88", %"class.std::__1::tuple.88"* %8, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional.2"* %35, %"class.absl::optional.2"** %38, align 8, !alias.scope !38
  %39 = getelementptr inbounds %"class.std::__1::tuple.88", %"class.std::__1::tuple.88"* %8, i64 0, i32 0, i32 2, i32 0
  store i8* %36, i8** %39, align 8, !alias.scope !38
  %40 = bitcast %"class.std::__1::tuple.88"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #14
  %41 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %32, i64 0, i32 1
  %42 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %32, i64 0, i32 2
  %43 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %32, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::tuple.88", %"class.std::__1::tuple.88"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional.2"* %41, %"class.absl::optional.2"** %44, align 8, !alias.scope !41
  %45 = getelementptr inbounds %"class.std::__1::tuple.88", %"class.std::__1::tuple.88"* %9, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional.2"* %42, %"class.absl::optional.2"** %45, align 8, !alias.scope !41
  %46 = getelementptr inbounds %"class.std::__1::tuple.88", %"class.std::__1::tuple.88"* %9, i64 0, i32 0, i32 2, i32 0
  store i8* %43, i8** %46, align 8, !alias.scope !41
  %47 = getelementptr inbounds %"struct.std::__1::__tuple_less.109", %"struct.std::__1::__tuple_less.109"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %47) #14
  %48 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.109"* nonnull %7, %"class.std::__1::tuple.88"* nonnull dereferenceable(24) %8, %"class.std::__1::tuple.88"* nonnull dereferenceable(24) %9) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %47) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #14
  br i1 %48, label %67, label %49

49:                                               ; preds = %30
  %50 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 3, i32 0
  %51 = load i32*, i32** %50, align 8
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 3, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = load i32, i32* %54, align 4
  %56 = icmp slt i32 %52, %55
  br i1 %56, label %67, label %57

57:                                               ; preds = %49
  %58 = icmp slt i32 %55, %52
  br i1 %58, label %67, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 4, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = load i8, i8* %61, align 1, !range !2
  %63 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 4, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = load i8, i8* %64, align 1, !range !2
  %66 = icmp ult i8 %62, %65
  br label %67

67:                                               ; preds = %59, %57, %49, %30, %3
  %68 = phi i1 [ true, %3 ], [ false, %30 ], [ %66, %59 ], [ true, %49 ], [ false, %57 ]
  ret i1 %68
}

declare zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.109"*, %"class.std::__1::tuple.88"* dereferenceable(24), %"class.std::__1::tuple.88"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::tuple.88", %"class.std::__1::tuple.88"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.absl::optional.2"*, %"class.absl::optional.2"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::tuple.88", %"class.std::__1::tuple.88"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.absl::optional.2"*, %"class.absl::optional.2"** %6, align 8
  %8 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %77, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %16, %"class.net::SchemefulSite"* dereferenceable(80) %17) #14
  br i1 %18, label %77, label %19

19:                                               ; preds = %15
  %20 = load %"class.absl::optional.2"*, %"class.absl::optional.2"** %6, align 8
  %21 = load %"class.absl::optional.2"*, %"class.absl::optional.2"** %4, align 8
  br label %22

22:                                               ; preds = %19, %3
  %23 = phi %"class.absl::optional.2"* [ %21, %19 ], [ %5, %3 ]
  %24 = phi %"class.absl::optional.2"* [ %20, %19 ], [ %7, %3 ]
  %25 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %77, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %35 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %33, %"class.net::SchemefulSite"* dereferenceable(80) %34) #14
  br i1 %35, label %77, label %36

36:                                               ; preds = %22, %32
  %37 = getelementptr inbounds %"class.std::__1::tuple.88", %"class.std::__1::tuple.88"* %1, i64 0, i32 0, i32 1, i32 0
  %38 = load %"class.absl::optional.2"*, %"class.absl::optional.2"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::tuple.88", %"class.std::__1::tuple.88"* %2, i64 0, i32 0, i32 1, i32 0
  %40 = load %"class.absl::optional.2"*, %"class.absl::optional.2"** %39, align 8
  %41 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %55, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %77, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %38, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %40, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %51 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %49, %"class.net::SchemefulSite"* dereferenceable(80) %50) #14
  br i1 %51, label %77, label %52

52:                                               ; preds = %48
  %53 = load %"class.absl::optional.2"*, %"class.absl::optional.2"** %39, align 8
  %54 = load %"class.absl::optional.2"*, %"class.absl::optional.2"** %37, align 8
  br label %55

55:                                               ; preds = %52, %36
  %56 = phi %"class.absl::optional.2"* [ %54, %52 ], [ %38, %36 ]
  %57 = phi %"class.absl::optional.2"* [ %53, %52 ], [ %40, %36 ]
  %58 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %69, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %77, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %57, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %67 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %56, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %68 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %66, %"class.net::SchemefulSite"* dereferenceable(80) %67) #14
  br i1 %68, label %77, label %69

69:                                               ; preds = %65, %55
  %70 = getelementptr inbounds %"class.std::__1::tuple.88", %"class.std::__1::tuple.88"* %1, i64 0, i32 0, i32 2, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = load i8, i8* %71, align 1, !range !2
  %73 = getelementptr inbounds %"class.std::__1::tuple.88", %"class.std::__1::tuple.88"* %2, i64 0, i32 0, i32 2, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = load i8, i8* %74, align 1, !range !2
  %76 = icmp ult i8 %72, %75
  br label %77

77:                                               ; preds = %28, %11, %69, %65, %61, %48, %44, %32, %15
  %78 = phi i1 [ true, %15 ], [ false, %32 ], [ %76, %69 ], [ true, %48 ], [ false, %65 ], [ true, %44 ], [ false, %61 ], [ true, %11 ], [ false, %28 ]
  ret i1 %78
}

declare zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"*, %"class.net::SchemefulSite"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12MRUCacheBaseIN3net21SSLClientSessionCache3KeyENS2_5EntryENSt3__14lessIS3_EENS_19MRUCacheStandardMapEED0Ev(%"class.base::MRUCacheBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base12MRUCacheBaseIN3net21SSLClientSessionCache3KeyENS2_5EntryENSt3__14lessIS3_EENS_19MRUCacheStandardMapEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE7destroyEPNS_11__tree_nodeISB_S9_EE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %6) #14
  %7 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__110__list_impINS_4pairIN3net21SSLClientSessionCache3KeyENS3_5EntryEEENS_9allocatorIS6_EEE5clearEv(%"class.std::__1::__list_imp"* %7) #14
  %8 = bitcast %"class.base::MRUCacheBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE7destroyEPNS_11__tree_nodeISB_S9_EE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %27, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE7destroyEPNS_11__tree_nodeISB_S9_EE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE7destroyEPNS_11__tree_nodeISB_S9_EE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #14
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 0, i32 3
  tail call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %11) #14
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %16) #14
  store i8 0, i8* %12, align 1
  br label %17

17:                                               ; preds = %15, %4
  %18 = bitcast %"struct.std::__1::pair.110"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.std::__1::pair.110", %"struct.std::__1::pair.110"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #15
  br label %25

25:                                               ; preds = %17, %22
  %26 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %26) #15
  br label %27

27:                                               ; preds = %2, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__list_impINS_4pairIN3net21SSLClientSessionCache3KeyENS3_5EntryEEENS_9allocatorIS6_EEE5clearEv(%"class.std::__1::__list_imp"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %60, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %0, i64 0, i32 0, i32 1
  %7 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %0, i64 0, i32 0, i32 0
  %10 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %10, i64 0, i32 1
  %12 = bitcast %"struct.std::__1::__list_node_base"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %7, i64 0, i32 0
  %15 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %15, i64 0, i32 1
  %17 = bitcast %"struct.std::__1::__list_node_base"** %16 to i64*
  store i64 %13, i64* %17, align 8
  %18 = bitcast %"struct.std::__1::__list_node_base"* %7 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"struct.std::__1::__list_node_base"** %11 to i64**
  %21 = load i64*, i64** %20, align 8
  store i64 %19, i64* %21, align 8
  store i64 0, i64* %2, align 8
  %22 = icmp eq %"struct.std::__1::__list_node_base"* %7, %8
  br i1 %22, label %60, label %23

23:                                               ; preds = %5, %57
  %24 = phi %"struct.std::__1::__list_node_base"* [ %26, %57 ], [ %7, %5 ]
  %25 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 0, i32 1
  %26 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 1
  %28 = bitcast %"struct.std::__1::__list_node_base"* %27 to %"struct.std::__1::pair"*
  %29 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 17
  %30 = bitcast %"struct.std::__1::__list_node_base"* %29 to %struct.ssl_session_st**
  %31 = load %struct.ssl_session_st*, %struct.ssl_session_st** %30, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %30, align 8
  %32 = icmp eq %struct.ssl_session_st* %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %23
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %31) #14
  br label %34

34:                                               ; preds = %33, %23
  %35 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 16, i32 1
  %36 = bitcast %"struct.std::__1::__list_node_base"** %35 to %struct.ssl_session_st**
  %37 = load %struct.ssl_session_st*, %struct.ssl_session_st** %36, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %36, align 8
  %38 = icmp eq %struct.ssl_session_st* %37, null
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %37) #14
  br label %40

40:                                               ; preds = %39, %34
  %41 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 4, i32 1
  %42 = bitcast %"struct.std::__1::__list_node_base"** %41 to %"class.net::NetworkIsolationKey"*
  tail call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %42) #14
  %43 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 3
  %44 = bitcast %"struct.std::__1::__list_node_base"* %43 to i8*
  %45 = load i8, i8* %44, align 1, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %48) #14
  store i8 0, i8* %44, align 1
  br label %49

49:                                               ; preds = %47, %40
  %50 = bitcast %"struct.std::__1::__list_node_base"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %49
  %55 = bitcast %"struct.std::__1::__list_node_base"* %27 to i8**
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZdlPv(i8* %56) #15
  br label %57

57:                                               ; preds = %49, %54
  %58 = bitcast %"struct.std::__1::__list_node_base"* %24 to i8*
  tail call void @_ZdlPv(i8* %58) #15
  %59 = icmp eq %"struct.std::__1::__list_node_base"* %26, %8
  br i1 %59, label %60, label %23

60:                                               ; preds = %57, %5, %1
  ret void
}

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #1

declare i32 @SSL_SESSION_up_ref(%struct.ssl_session_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8MRUCacheIN3net21SSLClientSessionCache3KeyENS2_5EntryENSt3__14lessIS3_EEED0Ev(%"class.base::MRUCache"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::MRUCache", %"class.base::MRUCache"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base12MRUCacheBaseIN3net21SSLClientSessionCache3KeyENS2_5EntryENSt3__14lessIS3_EENS_19MRUCacheStandardMapEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::MRUCache", %"class.base::MRUCache"* %0, i64 0, i32 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.base::MRUCache", %"class.base::MRUCache"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE7destroyEPNS_11__tree_nodeISB_S9_EE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %6) #14
  %7 = getelementptr inbounds %"class.base::MRUCache", %"class.base::MRUCache"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__110__list_impINS_4pairIN3net21SSLClientSessionCache3KeyENS3_5EntryEEENS_9allocatorIS6_EEE5clearEv(%"class.std::__1::__list_imp"* %7) #14
  %8 = bitcast %"class.base::MRUCache"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base22MemoryPressureListenerD1Ev(%"class.base::MemoryPressureListener"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net21SSLClientSessionCacheEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS4_EEEEEFvS6_EE3RunEPNS0_13BindStateBaseES6_(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.net::SSLClientSessionCache"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.net::SSLClientSessionCache"*, i32)**
  %22 = load void (%"class.net::SSLClientSessionCache"*, i32)*, void (%"class.net::SSLClientSessionCache"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.net::SSLClientSessionCache"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.net::SSLClientSessionCache"*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.net::SSLClientSessionCache"* %13, i32 %1) #14
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net21SSLClientSessionCacheEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

declare void @_ZN4base22MemoryPressureListenerC1ERKNS_8LocationERKNS_17RepeatingCallbackIFvNS0_19MemoryPressureLevelEEEE(%"class.base::MemoryPressureListener"*, %"class.base::Location"* dereferenceable(32), %"class.base::RepeatingCallback"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE4findIS4_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_S9_EElEERKT_(%"class.std::__1::__tree"*, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__tuple_less", align 1
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"struct.std::__1::__tuple_less", align 1
  %7 = alloca %"class.std::__1::tuple", align 8
  %8 = alloca %"class.std::__1::tuple", align 8
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %12 = icmp eq %"class.std::__1::__tree_node"* %11, null
  br i1 %12, label %74, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::tuple"* %4 to i8*
  %15 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 2, i32 0
  %18 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 3, i32 0
  %19 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 4, i32 0
  %20 = bitcast %"class.std::__1::tuple"* %5 to i8*
  %21 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 0
  %22 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 3
  %24 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 4
  %25 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 5
  %26 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 1, i32 0
  %28 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 2, i32 0
  %29 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 3, i32 0
  %30 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 4, i32 0
  %31 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %3, i64 0, i32 0
  br label %32

32:                                               ; preds = %32, %13
  %33 = phi %"class.std::__1::__tree_end_node"* [ %9, %13 ], [ %46, %32 ]
  %34 = phi %"class.std::__1::__tree_node"* [ %11, %13 ], [ %47, %32 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #14
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 1, i32 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 1, i32 0, i32 0, i32 3
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 1, i32 0, i32 0, i32 4
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 1, i32 0, i32 0, i32 5
  store %"class.net::HostPortPair"* %35, %"class.net::HostPortPair"** %15, align 8, !alias.scope !44
  store %"class.absl::optional"* %36, %"class.absl::optional"** %16, align 8, !alias.scope !44
  store %"class.net::NetworkIsolationKey"* %37, %"class.net::NetworkIsolationKey"** %17, align 8, !alias.scope !44
  store i32* %38, i32** %18, align 8, !alias.scope !44
  store i8* %39, i8** %19, align 8, !alias.scope !44
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #14
  store %"class.net::HostPortPair"* %21, %"class.net::HostPortPair"** %26, align 8, !alias.scope !49
  store %"class.absl::optional"* %22, %"class.absl::optional"** %27, align 8, !alias.scope !49
  store %"class.net::NetworkIsolationKey"* %23, %"class.net::NetworkIsolationKey"** %28, align 8, !alias.scope !49
  store i32* %24, i32** %29, align 8, !alias.scope !49
  store i8* %25, i8** %30, align 8, !alias.scope !49
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #14
  %40 = call zeroext i1 @_ZNSt3__112__tuple_lessILm5EEclINS_5tupleIJRKN3net12HostPortPairERKN4absl8optionalINS4_9IPAddressEEERKNS4_19NetworkIsolationKeyERKNS4_11PrivacyModeERKbEEESM_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %3, %"class.std::__1::tuple"* nonnull dereferenceable(40) %4, %"class.std::__1::tuple"* nonnull dereferenceable(40) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #14
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 0
  %44 = bitcast %"class.std::__1::__tree_node"* %34 to %"class.std::__1::__tree_node"**
  %45 = select i1 %40, %"class.std::__1::__tree_node"** %42, %"class.std::__1::__tree_node"** %44
  %46 = select i1 %40, %"class.std::__1::__tree_end_node"* %33, %"class.std::__1::__tree_end_node"* %43
  %47 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %45, align 8
  %48 = icmp eq %"class.std::__1::__tree_node"* %47, null
  br i1 %48, label %49, label %32

49:                                               ; preds = %32
  %50 = icmp eq %"class.std::__1::__tree_end_node"* %46, %9
  br i1 %50, label %74, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %46, i64 4
  %53 = bitcast %"class.std::__1::__tree_end_node"* %52 to %"struct.std::__1::__value_type"*
  %54 = bitcast %"class.std::__1::tuple"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %54) #14
  %55 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.net::HostPortPair"* %21, %"class.net::HostPortPair"** %55, align 8, !alias.scope !54
  %56 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %22, %"class.absl::optional"** %56, align 8, !alias.scope !54
  %57 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 2, i32 0
  store %"class.net::NetworkIsolationKey"* %23, %"class.net::NetworkIsolationKey"** %57, align 8, !alias.scope !54
  %58 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 3, i32 0
  store i32* %24, i32** %58, align 8, !alias.scope !54
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 4, i32 0
  store i8* %25, i8** %59, align 8, !alias.scope !54
  %60 = bitcast %"class.std::__1::tuple"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #14
  %61 = insertelement <2 x %"class.std::__1::__tree_end_node"*> undef, %"class.std::__1::__tree_end_node"* %46, i32 0
  %62 = shufflevector <2 x %"class.std::__1::__tree_end_node"*> %61, <2 x %"class.std::__1::__tree_end_node"*> undef, <2 x i32> zeroinitializer
  %63 = getelementptr %"class.std::__1::__tree_end_node", <2 x %"class.std::__1::__tree_end_node"*> %62, <2 x i64> <i64 8, i64 11>
  %64 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %46, i64 34
  %65 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %53, i64 0, i32 0, i32 0, i32 5
  %66 = bitcast %"class.std::__1::tuple"* %8 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %52, %"class.std::__1::__tree_end_node"** %66, align 8, !alias.scope !59
  %67 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 1, i32 0
  %68 = bitcast %"class.absl::optional"** %67 to <2 x %"class.std::__1::__tree_end_node"*>*
  store <2 x %"class.std::__1::__tree_end_node"*> %63, <2 x %"class.std::__1::__tree_end_node"*>* %68, align 8, !alias.scope !59
  %69 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 3, i32 0
  %70 = bitcast i32** %69 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %64, %"class.std::__1::__tree_end_node"** %70, align 8, !alias.scope !59
  %71 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 4, i32 0
  store i8* %65, i8** %71, align 8, !alias.scope !59
  %72 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %72) #14
  %73 = call zeroext i1 @_ZNSt3__112__tuple_lessILm5EEclINS_5tupleIJRKN3net12HostPortPairERKN4absl8optionalINS4_9IPAddressEEERKNS4_19NetworkIsolationKeyERKNS4_11PrivacyModeERKbEEESM_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %6, %"class.std::__1::tuple"* nonnull dereferenceable(40) %7, %"class.std::__1::tuple"* nonnull dereferenceable(40) %8) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %72) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %54) #14
  br i1 %73, label %74, label %75

74:                                               ; preds = %49, %2, %51
  br label %75

75:                                               ; preds = %51, %74
  %76 = phi %"class.std::__1::__tree_end_node"* [ %9, %74 ], [ %46, %51 ]
  ret %"class.std::__1::__tree_end_node"* %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__list_node_base"* @_ZNSt3__14listINS_4pairIN3net21SSLClientSessionCache3KeyENS3_5EntryEEENS_9allocatorIS6_EEE5eraseENS_21__list_const_iteratorIS6_PvEE(%"class.std::__1::list"*, %"struct.std::__1::__list_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 0, i32 1
  %4 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %3, align 8
  %5 = ptrtoint %"struct.std::__1::__list_node_base"* %4 to i64
  %6 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 0, i32 0
  %7 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %6, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %7, i64 0, i32 1
  %9 = bitcast %"struct.std::__1::__list_node_base"** %8 to i64*
  store i64 %5, i64* %9, align 8
  %10 = bitcast %"struct.std::__1::__list_node_base"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"struct.std::__1::__list_node_base"** %3 to i64**
  %13 = load i64*, i64** %12, align 8
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, -1
  store i64 %16, i64* %14, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 1
  %18 = bitcast %"struct.std::__1::__list_node_base"* %17 to %"struct.std::__1::pair"*
  %19 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 17
  %20 = bitcast %"struct.std::__1::__list_node_base"* %19 to %struct.ssl_session_st**
  %21 = load %struct.ssl_session_st*, %struct.ssl_session_st** %20, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %20, align 8
  %22 = icmp eq %struct.ssl_session_st* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %2
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %21) #14
  br label %24

24:                                               ; preds = %23, %2
  %25 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 16, i32 1
  %26 = bitcast %"struct.std::__1::__list_node_base"** %25 to %struct.ssl_session_st**
  %27 = load %struct.ssl_session_st*, %struct.ssl_session_st** %26, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %26, align 8
  %28 = icmp eq %struct.ssl_session_st* %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %24
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %27) #14
  br label %30

30:                                               ; preds = %29, %24
  %31 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 4, i32 1
  %32 = bitcast %"struct.std::__1::__list_node_base"** %31 to %"class.net::NetworkIsolationKey"*
  tail call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %32) #14
  %33 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %1, i64 3
  %34 = bitcast %"struct.std::__1::__list_node_base"* %33 to i8*
  %35 = load i8, i8* %34, align 1, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %38) #14
  store i8 0, i8* %34, align 1
  br label %39

39:                                               ; preds = %37, %30
  %40 = bitcast %"struct.std::__1::__list_node_base"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %39
  %45 = bitcast %"struct.std::__1::__list_node_base"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  tail call void @_ZdlPv(i8* %46) #15
  br label %47

47:                                               ; preds = %39, %44
  %48 = bitcast %"struct.std::__1::__list_node_base"* %1 to i8*
  tail call void @_ZdlPv(i8* %48) #15
  ret %"struct.std::__1::__list_node_base"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE5eraseENS_21__tree_const_iteratorISB_PNS_11__tree_nodeISB_S9_EElEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_end_node"**
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %7
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %4, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %6 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %19, %6
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %6 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %35
  %39 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #14
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 11
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.net::NetworkIsolationKey"*
  tail call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %47) #14
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 8
  %49 = bitcast %"class.std::__1::__tree_end_node"* %48 to i8*
  %50 = load i8, i8* %49, align 1, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %38
  %53 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"struct.std::__1::pair.110"*
  %54 = getelementptr inbounds %"struct.std::__1::pair.110", %"struct.std::__1::pair.110"* %53, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %54) #14
  store i8 0, i8* %49, align 1
  br label %55

55:                                               ; preds = %52, %38
  %56 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %55
  %61 = bitcast %"class.std::__1::__tree_end_node"* %45 to i8**
  %62 = load i8*, i8** %61, align 8
  tail call void @_ZdlPv(i8* %62) #15
  br label %63

63:                                               ; preds = %55, %60
  %64 = bitcast %"class.std::__1::__tree_end_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %64) #15
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listINS_4pairIN3net21SSLClientSessionCache3KeyENS3_5EntryEEENS_9allocatorIS6_EEE13emplace_frontIJRKS4_S5_EEEvDpOT_(%"class.std::__1::list"*, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248), %"struct.net::SSLClientSessionCache::Entry"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = tail call i8* @_Znwm(i64 280) #15, !noalias !64
  %5 = bitcast i8* %4 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %5, align 8, !noalias !64
  %6 = getelementptr inbounds i8, i8* %4, i64 16
  %7 = bitcast %"struct.net::SSLClientSessionCache::Key"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %3
  %12 = bitcast %"struct.net::SSLClientSessionCache::Key"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %12, i64 24, i1 false) #14
  br label %19

13:                                               ; preds = %3
  %14 = bitcast i8* %6 to %"class.std::__1::basic_string"*
  %15 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %14, i8* %16, i64 %18) #14
  br label %19

19:                                               ; preds = %13, %11
  %20 = getelementptr inbounds i8, i8* %4, i64 40
  %21 = bitcast i8* %20 to i16*
  %22 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 0, i32 1
  %23 = load i16, i16* %22, align 8
  store i16 %23, i16* %21, align 8
  %24 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds i8, i8* %4, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %25, i8 0, i64 18, i1 false) #14
  %26 = load i8, i8* %24, align 1, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %30 = getelementptr inbounds i8, i8* %4, i64 49
  %31 = bitcast i8* %30 to %"class.net::IPAddress"*
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %31, %"class.net::IPAddress"* dereferenceable(17) %29) #14
  store i8 1, i8* %25, align 1
  br label %32

32:                                               ; preds = %28, %19
  %33 = getelementptr inbounds i8, i8* %4, i64 72
  %34 = bitcast i8* %33 to %"class.net::NetworkIsolationKey"*
  %35 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 3
  tail call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %34, %"class.net::NetworkIsolationKey"* dereferenceable(184) %35) #14
  %36 = getelementptr inbounds i8, i8* %4, i64 256
  %37 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %1, i64 0, i32 4
  %38 = bitcast i32* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %38, i64 5, i1 false) #14
  %39 = getelementptr inbounds i8, i8* %4, i64 264
  %40 = bitcast %"struct.net::SSLClientSessionCache::Entry"* %2 to <2 x i64>*
  %41 = load <2 x i64>, <2 x i64>* %40, align 8
  %42 = bitcast %"struct.net::SSLClientSessionCache::Entry"* %2 to <2 x %struct.ssl_session_st*>*
  store <2 x %struct.ssl_session_st*> zeroinitializer, <2 x %struct.ssl_session_st*>* %42, align 8
  %43 = bitcast i8* %39 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %44, %"struct.std::__1::__list_node_base"** %5, align 8
  %45 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %46 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %45, align 8
  %47 = getelementptr inbounds i8, i8* %4, i64 8
  %48 = bitcast i8* %47 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %46, %"struct.std::__1::__list_node_base"** %48, align 8
  %49 = bitcast %"struct.std::__1::__list_node_base"* %46 to i8**
  store i8* %4, i8** %49, align 8
  %50 = bitcast %"struct.std::__1::__list_node_base"** %45 to i8**
  store i8* %4, i8** %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %51, align 8
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE25__emplace_unique_key_argsIS4_JRKS4_SA_EEENS6_INS_15__tree_iteratorISB_PNS_11__tree_nodeISB_S9_EElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248), %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248), %"class.std::__1::__list_iterator"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %6 = bitcast %"class.std::__1::__tree_end_node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE12__find_equalIS4_EERPNS_16__tree_node_baseIS9_EERPNS_15__tree_end_nodeISM_EERKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %5, %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248) %1)
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %11, label %73

11:                                               ; preds = %4
  %12 = call i8* @_Znwm(i64 288) #15, !noalias !67
  %13 = getelementptr inbounds i8, i8* %12, i64 32
  %14 = bitcast %"struct.net::SSLClientSessionCache::Key"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1, !noalias !67
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %11
  %19 = bitcast %"struct.net::SSLClientSessionCache::Key"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %19, i64 24, i1 false) #14, !noalias !67
  br label %26

20:                                               ; preds = %11
  %21 = bitcast i8* %13 to %"class.std::__1::basic_string"*
  %22 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8, !noalias !67
  %24 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8, !noalias !67
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %21, i8* %23, i64 %25) #14, !noalias !67
  br label %26

26:                                               ; preds = %20, %18
  %27 = getelementptr inbounds i8, i8* %12, i64 56
  %28 = bitcast i8* %27 to i16*
  %29 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %2, i64 0, i32 0, i32 1
  %30 = load i16, i16* %29, align 8, !noalias !67
  store i16 %30, i16* %28, align 8, !noalias !67
  %31 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds i8, i8* %12, i64 64
  call void @llvm.memset.p0i8.i64(i8* align 1 %32, i8 0, i64 18, i1 false) #14, !noalias !67
  %33 = load i8, i8* %31, align 1, !range !2, !noalias !67
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = getelementptr inbounds i8, i8* %12, i64 65
  %38 = bitcast i8* %37 to %"class.net::IPAddress"*
  call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %38, %"class.net::IPAddress"* dereferenceable(17) %36) #14, !noalias !67
  store i8 1, i8* %32, align 1, !noalias !67
  br label %39

39:                                               ; preds = %26, %35
  %40 = getelementptr inbounds i8, i8* %12, i64 88
  %41 = bitcast i8* %40 to %"class.net::NetworkIsolationKey"*
  %42 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %2, i64 0, i32 3
  call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %41, %"class.net::NetworkIsolationKey"* dereferenceable(184) %42) #14, !noalias !67
  %43 = getelementptr inbounds i8, i8* %12, i64 272
  %44 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %2, i64 0, i32 4
  %45 = bitcast i32* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %45, i64 5, i1 false) #14, !noalias !67
  %46 = getelementptr inbounds i8, i8* %12, i64 280
  %47 = bitcast %"class.std::__1::__list_iterator"* %3 to i64*
  %48 = bitcast i8* %46 to i64*
  %49 = load i64, i64* %47, align 8, !noalias !67
  store i64 %49, i64* %48, align 8, !noalias !67
  %50 = bitcast %"class.std::__1::__tree_end_node"** %5 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast i8* %12 to %"class.std::__1::__tree_node"*
  %53 = bitcast i8* %12 to %"class.std::__1::__tree_node_base"*
  %54 = getelementptr inbounds i8, i8* %12, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false) #14
  %55 = bitcast i8* %54 to i64*
  store i64 %51, i64* %55, align 8
  %56 = bitcast %"class.std::__1::__tree_node_base"** %7 to i8**
  store i8* %12, i8** %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %58 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %39
  %63 = ptrtoint %"class.std::__1::__tree_node_base"* %60 to i64
  %64 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %63, i64* %64, align 8
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  br label %66

66:                                               ; preds = %62, %39
  %67 = phi %"class.std::__1::__tree_node_base"* [ %53, %39 ], [ %65, %62 ]
  %68 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"* %67) #14
  %70 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %70, align 8
  br label %73

73:                                               ; preds = %66, %4
  %74 = phi i8 [ 1, %66 ], [ 0, %4 ]
  %75 = phi %"class.std::__1::__tree_node"* [ %52, %66 ], [ %9, %4 ]
  %76 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %75, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %77 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %76, 0
  %78 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %77, i8 %74, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE12__find_equalIS4_EERPNS_16__tree_node_baseIS9_EERPNS_15__tree_end_nodeISM_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"struct.net::SSLClientSessionCache::Key"* dereferenceable(248)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__tuple_less", align 1
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"struct.std::__1::__tuple_less", align 1
  %8 = alloca %"class.std::__1::tuple", align 8
  %9 = alloca %"class.std::__1::tuple", align 8
  %10 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node"**
  %12 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node"* %12, null
  br i1 %13, label %76, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::tuple"* %5 to i8*
  %17 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %2, i64 0, i32 0
  %18 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %2, i64 0, i32 1
  %19 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %2, i64 0, i32 3
  %20 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %2, i64 0, i32 4
  %21 = getelementptr inbounds %"struct.net::SSLClientSessionCache::Key", %"struct.net::SSLClientSessionCache::Key"* %2, i64 0, i32 5
  %22 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 2, i32 0
  %25 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 3, i32 0
  %26 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 4, i32 0
  %27 = bitcast %"class.std::__1::tuple"* %6 to i8*
  %28 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 2, i32 0
  %31 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 3, i32 0
  %32 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 4, i32 0
  %33 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %4, i64 0, i32 0
  %34 = bitcast %"class.std::__1::tuple"* %8 to i8*
  %35 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 1, i32 0
  %37 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 3, i32 0
  %39 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 4, i32 0
  %40 = bitcast %"class.std::__1::tuple"* %9 to i8*
  %41 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 1, i32 0
  %43 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 2, i32 0
  %44 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 3, i32 0
  %45 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 4, i32 0
  %46 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %7, i64 0, i32 0
  br label %47

47:                                               ; preds = %14, %72
  %48 = phi %"class.std::__1::__tree_node"* [ %75, %72 ], [ %12, %14 ]
  %49 = phi %"class.std::__1::__tree_node_base"** [ %74, %72 ], [ %15, %14 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #14
  store %"class.net::HostPortPair"* %17, %"class.net::HostPortPair"** %22, align 8, !alias.scope !70
  store %"class.absl::optional"* %18, %"class.absl::optional"** %23, align 8, !alias.scope !70
  store %"class.net::NetworkIsolationKey"* %19, %"class.net::NetworkIsolationKey"** %24, align 8, !alias.scope !70
  store i32* %20, i32** %25, align 8, !alias.scope !70
  store i8* %21, i8** %26, align 8, !alias.scope !70
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #14
  %50 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 1, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 1, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 1, i32 0, i32 0, i32 3
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 1, i32 0, i32 0, i32 4
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 1, i32 0, i32 0, i32 5
  store %"class.net::HostPortPair"* %50, %"class.net::HostPortPair"** %28, align 8, !alias.scope !75
  store %"class.absl::optional"* %51, %"class.absl::optional"** %29, align 8, !alias.scope !75
  store %"class.net::NetworkIsolationKey"* %52, %"class.net::NetworkIsolationKey"** %30, align 8, !alias.scope !75
  store i32* %53, i32** %31, align 8, !alias.scope !75
  store i8* %54, i8** %32, align 8, !alias.scope !75
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %33) #14
  %55 = call zeroext i1 @_ZNSt3__112__tuple_lessILm5EEclINS_5tupleIJRKN3net12HostPortPairERKN4absl8optionalINS4_9IPAddressEEERKNS4_19NetworkIsolationKeyERKNS4_11PrivacyModeERKbEEESM_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %4, %"class.std::__1::tuple"* nonnull dereferenceable(40) %5, %"class.std::__1::tuple"* nonnull dereferenceable(40) %6) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %33) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #14
  br i1 %55, label %56, label %62

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, null
  br i1 %59, label %60, label %72

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %61, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %78

62:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %34) #14
  store %"class.net::HostPortPair"* %50, %"class.net::HostPortPair"** %35, align 8, !alias.scope !80
  store %"class.absl::optional"* %51, %"class.absl::optional"** %36, align 8, !alias.scope !80
  store %"class.net::NetworkIsolationKey"* %52, %"class.net::NetworkIsolationKey"** %37, align 8, !alias.scope !80
  store i32* %53, i32** %38, align 8, !alias.scope !80
  store i8* %54, i8** %39, align 8, !alias.scope !80
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %40) #14
  store %"class.net::HostPortPair"* %17, %"class.net::HostPortPair"** %41, align 8, !alias.scope !85
  store %"class.absl::optional"* %18, %"class.absl::optional"** %42, align 8, !alias.scope !85
  store %"class.net::NetworkIsolationKey"* %19, %"class.net::NetworkIsolationKey"** %43, align 8, !alias.scope !85
  store i32* %20, i32** %44, align 8, !alias.scope !85
  store i8* %21, i8** %45, align 8, !alias.scope !85
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %46) #14
  %63 = call zeroext i1 @_ZNSt3__112__tuple_lessILm5EEclINS_5tupleIJRKN3net12HostPortPairERKN4absl8optionalINS4_9IPAddressEEERKNS4_19NetworkIsolationKeyERKNS4_11PrivacyModeERKbEEESM_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %7, %"class.std::__1::tuple"* nonnull dereferenceable(40) %8, %"class.std::__1::tuple"* nonnull dereferenceable(40) %9) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %46) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %40) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %34) #14
  br i1 %63, label %64, label %70

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 0, i32 1
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %68, label %72

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %69, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %78

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %71, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %78

72:                                               ; preds = %64, %56
  %73 = phi %"class.std::__1::__tree_node_base"* [ %58, %56 ], [ %66, %64 ]
  %74 = phi %"class.std::__1::__tree_node_base"** [ %57, %56 ], [ %65, %64 ]
  %75 = bitcast %"class.std::__1::__tree_node_base"* %73 to %"class.std::__1::__tree_node"*
  br label %47

76:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"** %1, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  br label %78

78:                                               ; preds = %76, %70, %68, %60
  %79 = phi %"class.std::__1::__tree_node_base"** [ %57, %60 ], [ %65, %68 ], [ %49, %70 ], [ %77, %76 ]
  ret %"class.std::__1::__tree_node_base"** %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare void @SSL_SESSION_free(%struct.ssl_session_st*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #12

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.crypto_buffer_st** @_ZNSt3__16vectorIPK16crypto_buffer_stNS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector.74"*, %struct.crypto_buffer_st**, %struct.crypto_buffer_st** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %struct.crypto_buffer_st** %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %0, i64 0, i32 0, i32 1
  %8 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %9, align 8
  %11 = icmp ult %struct.crypto_buffer_st** %8, %10
  %12 = ptrtoint %struct.crypto_buffer_st** %8 to i64
  %13 = ptrtoint %struct.crypto_buffer_st** %10 to i64
  br i1 %11, label %14, label %163

14:                                               ; preds = %3
  %15 = icmp eq %struct.crypto_buffer_st** %8, %1
  %16 = bitcast %struct.crypto_buffer_st** %2 to i64*
  %17 = load i64, i64* %16, align 8
  br i1 %15, label %18, label %23

18:                                               ; preds = %14
  %19 = bitcast %struct.crypto_buffer_st** %1 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %1, i64 1
  %21 = ptrtoint %struct.crypto_buffer_st** %20 to i64
  %22 = bitcast %struct.crypto_buffer_st*** %7 to i64*
  store i64 %21, i64* %22, align 8
  br label %319

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %1, i64 1
  %25 = ptrtoint %struct.crypto_buffer_st** %24 to i64
  %26 = sub i64 %12, %25
  %27 = ashr exact i64 %26, 3
  %28 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %1, i64 %27
  %29 = bitcast %struct.crypto_buffer_st*** %7 to i64*
  %30 = icmp ult %struct.crypto_buffer_st** %28, %8
  br i1 %30, label %31, label %144

31:                                               ; preds = %23
  %32 = sub nsw i64 0, %27
  %33 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %8, i64 %32
  %34 = bitcast %struct.crypto_buffer_st** %33 to i8*
  %35 = xor i64 %4, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = lshr i64 %37, 3
  %39 = add nuw nsw i64 %38, 1
  %40 = icmp ult i64 %39, 4
  br i1 %40, label %41, label %44

41:                                               ; preds = %139, %44, %31
  %42 = phi %struct.crypto_buffer_st** [ %8, %44 ], [ %8, %31 ], [ %62, %139 ]
  %43 = phi %struct.crypto_buffer_st** [ %28, %44 ], [ %28, %31 ], [ %63, %139 ]
  br label %152

44:                                               ; preds = %31
  %45 = sub nsw i64 0, %27
  %46 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %8, i64 %45
  %47 = bitcast %struct.crypto_buffer_st** %46 to i8*
  %48 = xor i64 %4, -1
  %49 = getelementptr i8, i8* %47, i64 %48
  %50 = ptrtoint i8* %49 to i64
  %51 = lshr i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %8, i64 %52
  %54 = add nsw i64 %27, %51
  %55 = add nsw i64 %54, 1
  %56 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %1, i64 %55
  %57 = icmp ult %struct.crypto_buffer_st** %8, %56
  %58 = icmp ult %struct.crypto_buffer_st** %28, %53
  %59 = and i1 %57, %58
  br i1 %59, label %41, label %60

60:                                               ; preds = %44
  %61 = and i64 %39, 4611686018427387900
  %62 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %8, i64 %61
  %63 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %28, i64 %61
  %64 = add nsw i64 %61, -4
  %65 = lshr exact i64 %64, 2
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 12
  br i1 %68, label %120, label %69

69:                                               ; preds = %60
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %8, i64 %72
  %75 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %28, i64 %72
  %76 = bitcast %struct.crypto_buffer_st** %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8, !alias.scope !90
  %78 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %75, i64 2
  %79 = bitcast %struct.crypto_buffer_st** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !90
  %81 = bitcast %struct.crypto_buffer_st** %74 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %81, align 8, !alias.scope !93, !noalias !90
  %82 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %74, i64 2
  %83 = bitcast %struct.crypto_buffer_st** %82 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %83, align 8, !alias.scope !93, !noalias !90
  %84 = or i64 %72, 4
  %85 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %8, i64 %84
  %86 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %28, i64 %84
  %87 = bitcast %struct.crypto_buffer_st** %86 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 8, !alias.scope !90
  %89 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %86, i64 2
  %90 = bitcast %struct.crypto_buffer_st** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !90
  %92 = bitcast %struct.crypto_buffer_st** %85 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %92, align 8, !alias.scope !93, !noalias !90
  %93 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %85, i64 2
  %94 = bitcast %struct.crypto_buffer_st** %93 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %94, align 8, !alias.scope !93, !noalias !90
  %95 = or i64 %72, 8
  %96 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %8, i64 %95
  %97 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %28, i64 %95
  %98 = bitcast %struct.crypto_buffer_st** %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8, !alias.scope !90
  %100 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %97, i64 2
  %101 = bitcast %struct.crypto_buffer_st** %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !90
  %103 = bitcast %struct.crypto_buffer_st** %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %103, align 8, !alias.scope !93, !noalias !90
  %104 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %96, i64 2
  %105 = bitcast %struct.crypto_buffer_st** %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !93, !noalias !90
  %106 = or i64 %72, 12
  %107 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %8, i64 %106
  %108 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %28, i64 %106
  %109 = bitcast %struct.crypto_buffer_st** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !90
  %111 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %108, i64 2
  %112 = bitcast %struct.crypto_buffer_st** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !90
  %114 = bitcast %struct.crypto_buffer_st** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !93, !noalias !90
  %115 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %107, i64 2
  %116 = bitcast %struct.crypto_buffer_st** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !93, !noalias !90
  %117 = add i64 %72, 16
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !95

120:                                              ; preds = %71, %60
  %121 = phi i64 [ 0, %60 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %8, i64 %124
  %127 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %28, i64 %124
  %128 = bitcast %struct.crypto_buffer_st** %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 8, !alias.scope !90
  %130 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %127, i64 2
  %131 = bitcast %struct.crypto_buffer_st** %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !90
  %133 = bitcast %struct.crypto_buffer_st** %126 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %133, align 8, !alias.scope !93, !noalias !90
  %134 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %126, i64 2
  %135 = bitcast %struct.crypto_buffer_st** %134 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %135, align 8, !alias.scope !93, !noalias !90
  %136 = add i64 %124, 4
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !97

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %61
  br i1 %140, label %141, label %41

141:                                              ; preds = %152, %139
  %142 = phi %struct.crypto_buffer_st** [ %62, %139 ], [ %159, %152 ]
  %143 = ptrtoint %struct.crypto_buffer_st** %142 to i64
  br label %144

144:                                              ; preds = %141, %23
  %145 = phi i64 [ %143, %141 ], [ %12, %23 ]
  store i64 %145, i64* %29, align 8
  %146 = icmp eq i64 %26, 0
  br i1 %146, label %161, label %147

147:                                              ; preds = %144
  %148 = sub nsw i64 0, %27
  %149 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %8, i64 %148
  %150 = bitcast %struct.crypto_buffer_st** %149 to i8*
  %151 = bitcast %struct.crypto_buffer_st** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 %26, i1 false) #14
  br label %161

152:                                              ; preds = %41, %152
  %153 = phi %struct.crypto_buffer_st** [ %159, %152 ], [ %42, %41 ]
  %154 = phi %struct.crypto_buffer_st** [ %158, %152 ], [ %43, %41 ]
  %155 = bitcast %struct.crypto_buffer_st** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %struct.crypto_buffer_st** %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %154, i64 1
  %159 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %153, i64 1
  %160 = icmp ult %struct.crypto_buffer_st** %158, %8
  br i1 %160, label %152, label %141, !llvm.loop !99

161:                                              ; preds = %144, %147
  %162 = bitcast %struct.crypto_buffer_st** %1 to i64*
  store i64 %17, i64* %162, align 8
  br label %319

163:                                              ; preds = %3
  %164 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %0, i64 0, i32 0, i32 2
  %165 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %165) #14
  %166 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %167 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %168 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %169 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %170 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %171 = bitcast %struct.crypto_buffer_st*** %7 to i64*
  %172 = bitcast %"class.std::__1::vector.74"* %0 to i64*
  %173 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 -86, i64 40, i1 false)
  %174 = load i64, i64* %172, align 8
  %175 = sub i64 %12, %174
  %176 = ashr exact i64 %175, 3
  %177 = add nsw i64 %176, 1
  %178 = icmp ugt i64 %177, 2305843009213693951
  br i1 %178, label %179, label %181

179:                                              ; preds = %163
  %180 = bitcast %"class.std::__1::vector.74"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %180) #16
  unreachable

181:                                              ; preds = %163
  %182 = bitcast %struct.crypto_buffer_st*** %9 to i64*
  %183 = sub i64 %13, %174
  %184 = ashr exact i64 %183, 3
  %185 = icmp ult i64 %184, 1152921504606846975
  br i1 %185, label %190, label %186

186:                                              ; preds = %181
  %187 = sub i64 %4, %174
  %188 = ashr exact i64 %187, 3
  store %struct.crypto_buffer_st** null, %struct.crypto_buffer_st*** %169, align 8
  %189 = bitcast %"class.std::__1::allocator.79"** %170 to %"class.std::__1::__compressed_pair.76"**
  store %"class.std::__1::__compressed_pair.76"* %164, %"class.std::__1::__compressed_pair.76"** %189, align 8
  br label %201

190:                                              ; preds = %181
  %191 = ashr exact i64 %183, 2
  %192 = icmp ult i64 %191, %177
  %193 = select i1 %192, i64 %177, i64 %191
  %194 = sub i64 %4, %174
  %195 = ashr exact i64 %194, 3
  store %struct.crypto_buffer_st** null, %struct.crypto_buffer_st*** %169, align 8
  %196 = bitcast %"class.std::__1::allocator.79"** %170 to %"class.std::__1::__compressed_pair.76"**
  store %"class.std::__1::__compressed_pair.76"* %164, %"class.std::__1::__compressed_pair.76"** %196, align 8
  %197 = icmp eq i64 %193, 0
  br i1 %197, label %207, label %198

198:                                              ; preds = %190
  %199 = icmp ugt i64 %193, 2305843009213693951
  br i1 %199, label %200, label %201

200:                                              ; preds = %198
  tail call void @abort() #16
  unreachable

201:                                              ; preds = %186, %198
  %202 = phi i64 [ 2305843009213693951, %186 ], [ %193, %198 ]
  %203 = phi i64 [ %188, %186 ], [ %195, %198 ]
  %204 = shl i64 %202, 3
  %205 = tail call i8* @_Znwm(i64 %204) #15
  %206 = bitcast i8* %205 to %struct.crypto_buffer_st**
  br label %207

207:                                              ; preds = %190, %201
  %208 = phi i64 [ %203, %201 ], [ %195, %190 ]
  %209 = phi i64 [ %202, %201 ], [ 0, %190 ]
  %210 = phi %struct.crypto_buffer_st** [ %206, %201 ], [ null, %190 ]
  store %struct.crypto_buffer_st** %210, %struct.crypto_buffer_st*** %166, align 8
  %211 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %210, i64 %208
  store %struct.crypto_buffer_st** %211, %struct.crypto_buffer_st*** %168, align 8
  store %struct.crypto_buffer_st** %211, %struct.crypto_buffer_st*** %167, align 8
  %212 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %210, i64 %209
  store %struct.crypto_buffer_st** %212, %struct.crypto_buffer_st*** %169, align 8
  call void @_ZNSt3__114__split_bufferIPK16crypto_buffer_stRNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %5, %struct.crypto_buffer_st** dereferenceable(8) %2)
  %213 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %167, align 8
  %214 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %6, align 8
  %215 = ptrtoint %struct.crypto_buffer_st** %214 to i64
  %216 = sub i64 %4, %215
  %217 = ashr exact i64 %216, 3
  %218 = sub nsw i64 0, %217
  %219 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %213, i64 %218
  store %struct.crypto_buffer_st** %219, %struct.crypto_buffer_st*** %167, align 8
  %220 = icmp sgt i64 %216, 0
  br i1 %220, label %221, label %224

221:                                              ; preds = %207
  %222 = bitcast %struct.crypto_buffer_st** %219 to i8*
  %223 = bitcast %struct.crypto_buffer_st** %214 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %223, i64 %216, i1 false) #14
  br label %224

224:                                              ; preds = %221, %207
  %225 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %7, align 8
  %226 = icmp eq %struct.crypto_buffer_st** %225, %1
  br i1 %226, label %227, label %231

227:                                              ; preds = %224
  %228 = ptrtoint %struct.crypto_buffer_st** %225 to i64
  %229 = bitcast %struct.crypto_buffer_st*** %168 to i64*
  %230 = load i64, i64* %229, align 8
  br label %293

231:                                              ; preds = %224
  %232 = bitcast %struct.crypto_buffer_st*** %168 to i64**
  %233 = load i64*, i64** %232, align 8
  %234 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %225, i64 -1
  %235 = ptrtoint %struct.crypto_buffer_st** %234 to i64
  %236 = sub i64 %235, %4
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %255, label %241

241:                                              ; preds = %231, %241
  %242 = phi i64* [ %250, %241 ], [ %233, %231 ]
  %243 = phi %struct.crypto_buffer_st** [ %247, %241 ], [ %1, %231 ]
  %244 = phi i64 [ %251, %241 ], [ %239, %231 ]
  %245 = bitcast %struct.crypto_buffer_st** %243 to i64*
  %246 = load i64, i64* %245, align 8
  store i64 %246, i64* %242, align 8
  %247 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %243, i64 1
  %248 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %168, align 8
  %249 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %248, i64 1
  store %struct.crypto_buffer_st** %249, %struct.crypto_buffer_st*** %168, align 8
  %250 = bitcast %struct.crypto_buffer_st** %249 to i64*
  %251 = add i64 %244, -1
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %241, !llvm.loop !100

253:                                              ; preds = %241
  %254 = bitcast %struct.crypto_buffer_st** %249 to i64*
  br label %255

255:                                              ; preds = %231, %253
  %256 = phi %struct.crypto_buffer_st** [ undef, %231 ], [ %249, %253 ]
  %257 = phi i64* [ %233, %231 ], [ %254, %253 ]
  %258 = phi %struct.crypto_buffer_st** [ %1, %231 ], [ %247, %253 ]
  %259 = icmp ult i64 %236, 24
  br i1 %259, label %288, label %260

260:                                              ; preds = %255, %260
  %261 = phi i64* [ %287, %260 ], [ %257, %255 ]
  %262 = phi %struct.crypto_buffer_st** [ %283, %260 ], [ %258, %255 ]
  %263 = bitcast %struct.crypto_buffer_st** %262 to i64*
  %264 = load i64, i64* %263, align 8
  store i64 %264, i64* %261, align 8
  %265 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %262, i64 1
  %266 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %168, align 8
  %267 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %266, i64 1
  store %struct.crypto_buffer_st** %267, %struct.crypto_buffer_st*** %168, align 8
  %268 = bitcast %struct.crypto_buffer_st** %267 to i64*
  %269 = bitcast %struct.crypto_buffer_st** %265 to i64*
  %270 = load i64, i64* %269, align 8
  store i64 %270, i64* %268, align 8
  %271 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %262, i64 2
  %272 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %168, align 8
  %273 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %272, i64 1
  store %struct.crypto_buffer_st** %273, %struct.crypto_buffer_st*** %168, align 8
  %274 = bitcast %struct.crypto_buffer_st** %273 to i64*
  %275 = bitcast %struct.crypto_buffer_st** %271 to i64*
  %276 = load i64, i64* %275, align 8
  store i64 %276, i64* %274, align 8
  %277 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %262, i64 3
  %278 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %168, align 8
  %279 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %278, i64 1
  store %struct.crypto_buffer_st** %279, %struct.crypto_buffer_st*** %168, align 8
  %280 = bitcast %struct.crypto_buffer_st** %279 to i64*
  %281 = bitcast %struct.crypto_buffer_st** %277 to i64*
  %282 = load i64, i64* %281, align 8
  store i64 %282, i64* %280, align 8
  %283 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %262, i64 4
  %284 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %168, align 8
  %285 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %284, i64 1
  store %struct.crypto_buffer_st** %285, %struct.crypto_buffer_st*** %168, align 8
  %286 = icmp eq %struct.crypto_buffer_st** %283, %225
  %287 = bitcast %struct.crypto_buffer_st** %285 to i64*
  br i1 %286, label %288, label %260

288:                                              ; preds = %260, %255
  %289 = phi %struct.crypto_buffer_st** [ %256, %255 ], [ %285, %260 ]
  %290 = ptrtoint %struct.crypto_buffer_st** %289 to i64
  %291 = load i64, i64* %171, align 8
  %292 = bitcast %struct.crypto_buffer_st*** %168 to i64*
  br label %293

293:                                              ; preds = %227, %288
  %294 = phi i64* [ %229, %227 ], [ %292, %288 ]
  %295 = phi i64 [ %230, %227 ], [ %290, %288 ]
  %296 = phi i64 [ %228, %227 ], [ %291, %288 ]
  %297 = load i64, i64* %172, align 8
  %298 = bitcast %struct.crypto_buffer_st*** %167 to i64*
  %299 = load i64, i64* %298, align 8
  store i64 %299, i64* %172, align 8
  store i64 %297, i64* %298, align 8
  store i64 %295, i64* %171, align 8
  store i64 %296, i64* %294, align 8
  %300 = load i64, i64* %182, align 8
  %301 = bitcast %struct.crypto_buffer_st*** %169 to i64*
  %302 = load i64, i64* %301, align 8
  store i64 %302, i64* %182, align 8
  store i64 %300, i64* %301, align 8
  %303 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %297, i64* %303, align 8
  %304 = inttoptr i64 %297 to %struct.crypto_buffer_st**
  %305 = inttoptr i64 %296 to %struct.crypto_buffer_st**
  %306 = icmp eq %struct.crypto_buffer_st** %305, %304
  br i1 %306, label %314, label %307

307:                                              ; preds = %293
  %308 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %305, i64 -1
  %309 = ptrtoint %struct.crypto_buffer_st** %308 to i64
  %310 = sub i64 %309, %297
  %311 = lshr i64 %310, 3
  %312 = xor i64 %311, -1
  %313 = getelementptr %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %305, i64 %312
  store %struct.crypto_buffer_st** %313, %struct.crypto_buffer_st*** %168, align 8
  br label %314

314:                                              ; preds = %307, %293
  %315 = icmp eq i64 %297, 0
  br i1 %315, label %318, label %316

316:                                              ; preds = %314
  %317 = inttoptr i64 %297 to i8*
  call void @_ZdlPv(i8* %317) #15
  br label %318

318:                                              ; preds = %314, %316
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %165) #14
  br label %319

319:                                              ; preds = %18, %161, %318
  %320 = phi %struct.crypto_buffer_st** [ %1, %18 ], [ %1, %161 ], [ %213, %318 ]
  ret %struct.crypto_buffer_st** %320
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPK16crypto_buffer_stRNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_(%"struct.std::__1::__split_buffer"*, %struct.crypto_buffer_st** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %5, align 8
  %7 = icmp eq %struct.crypto_buffer_st** %4, %6
  %8 = ptrtoint %struct.crypto_buffer_st** %6 to i64
  %9 = bitcast %struct.crypto_buffer_st** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %13, align 8
  %15 = icmp ugt %struct.crypto_buffer_st** %12, %14
  %16 = ptrtoint %struct.crypto_buffer_st** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %struct.crypto_buffer_st** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %12, i64 %22
  %24 = ptrtoint %struct.crypto_buffer_st** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %struct.crypto_buffer_st** %23 to i8*
  %30 = bitcast %struct.crypto_buffer_st** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #14
  %31 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %struct.crypto_buffer_st** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %23, i64 %26
  store %struct.crypto_buffer_st** %34, %struct.crypto_buffer_st*** %3, align 8
  %35 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %33, i64 %22
  store %struct.crypto_buffer_st** %35, %struct.crypto_buffer_st*** %11, align 8
  %36 = bitcast %struct.crypto_buffer_st** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %struct.crypto_buffer_st*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #15
  %50 = bitcast i8* %49 to %struct.crypto_buffer_st**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %50, i64 %47
  %53 = ptrtoint %struct.crypto_buffer_st** %52 to i64
  %54 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %50, i64 %43
  %55 = ptrtoint %struct.crypto_buffer_st** %54 to i64
  %56 = ptrtoint %struct.crypto_buffer_st** %12 to i64
  %57 = ptrtoint %struct.crypto_buffer_st** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %struct.crypto_buffer_st** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %struct.crypto_buffer_st** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %struct.crypto_buffer_st** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %69, i64 1
  %77 = ptrtoint %struct.crypto_buffer_st** %76 to i64
  %78 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !101

81:                                               ; preds = %68
  %82 = ptrtoint %struct.crypto_buffer_st** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %struct.crypto_buffer_st** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %struct.crypto_buffer_st** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %struct.crypto_buffer_st** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %struct.crypto_buffer_st** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %struct.crypto_buffer_st** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %89, i64 1
  %96 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %91, i64 1
  %97 = bitcast %struct.crypto_buffer_st** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %struct.crypto_buffer_st** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %89, i64 2
  %101 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %91, i64 2
  %102 = bitcast %struct.crypto_buffer_st** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %struct.crypto_buffer_st** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %89, i64 3
  %106 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %91, i64 3
  %107 = bitcast %struct.crypto_buffer_st** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %struct.crypto_buffer_st** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %89, i64 4
  %111 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %91, i64 4
  %112 = bitcast %struct.crypto_buffer_st** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %struct.crypto_buffer_st** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %89, i64 5
  %116 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %91, i64 5
  %117 = bitcast %struct.crypto_buffer_st** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %struct.crypto_buffer_st** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %89, i64 6
  %121 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %91, i64 6
  %122 = bitcast %struct.crypto_buffer_st** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %struct.crypto_buffer_st** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %89, i64 7
  %126 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %91, i64 7
  %127 = bitcast %struct.crypto_buffer_st** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %struct.crypto_buffer_st** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %89, i64 8
  %131 = ptrtoint %struct.crypto_buffer_st** %130 to i64
  %132 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %91, i64 8
  %133 = icmp eq %struct.crypto_buffer_st** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %struct.crypto_buffer_st** %60 to i64
  %136 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %struct.crypto_buffer_st** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %struct.crypto_buffer_st*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %struct.crypto_buffer_st*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %struct.crypto_buffer_st** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %struct.crypto_buffer_st** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #15
  %146 = bitcast %struct.crypto_buffer_st*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %struct.crypto_buffer_st** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %3, align 8
  %153 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %152, i64 1
  store %struct.crypto_buffer_st** %153, %struct.crypto_buffer_st*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_"}
!6 = distinct !{!6, !7, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE: argument 0"}
!7 = distinct !{!7, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_"}
!11 = distinct !{!11, !12, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE: argument 0"}
!12 = distinct !{!12, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE"}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_"}
!16 = distinct !{!16, !17, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE: argument 0"}
!17 = distinct !{!17, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_"}
!21 = distinct !{!21, !22, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE: argument 0"}
!22 = distinct !{!22, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE"}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN3net21SSLClientSessionCacheEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!25 = distinct !{!25, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN3net21SSLClientSessionCacheEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!26 = distinct !{!26, !27, !"_ZN4base13BindRepeatingIMN3net21SSLClientSessionCacheEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!27 = distinct !{!27, !"_ZN4base13BindRepeatingIMN3net21SSLClientSessionCacheEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!30 = distinct !{!30, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!31 = !{!"branch_weights", i32 1, i32 2000}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!34 = distinct !{!34, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!37 = distinct !{!37, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!40 = distinct !{!40, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!43 = distinct !{!43, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!44 = !{!45, !47}
!45 = distinct !{!45, !46, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_: argument 0"}
!46 = distinct !{!46, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_"}
!47 = distinct !{!47, !48, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE: argument 0"}
!48 = distinct !{!48, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE"}
!49 = !{!50, !52}
!50 = distinct !{!50, !51, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_: argument 0"}
!51 = distinct !{!51, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_"}
!52 = distinct !{!52, !53, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE: argument 0"}
!53 = distinct !{!53, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE"}
!54 = !{!55, !57}
!55 = distinct !{!55, !56, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_: argument 0"}
!56 = distinct !{!56, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_"}
!57 = distinct !{!57, !58, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE: argument 0"}
!58 = distinct !{!58, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE"}
!59 = !{!60, !62}
!60 = distinct !{!60, !61, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_: argument 0"}
!61 = distinct !{!61, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_"}
!62 = distinct !{!62, !63, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE: argument 0"}
!63 = distinct !{!63, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZNSt3__14listINS_4pairIN3net21SSLClientSessionCache3KeyENS3_5EntryEEENS_9allocatorIS6_EEE15__allocate_nodeERNS7_INS_11__list_nodeIS6_PvEEEE: argument 0"}
!66 = distinct !{!66, !"_ZNSt3__14listINS_4pairIN3net21SSLClientSessionCache3KeyENS3_5EntryEEENS_9allocatorIS6_EEE15__allocate_nodeERNS7_INS_11__list_nodeIS6_PvEEEE"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE16__construct_nodeIJRKS4_SA_EEENS_10unique_ptrINS_11__tree_nodeISB_S9_EENS_22__tree_node_destructorINSG_ISO_EEEEEEDpOT_: argument 0"}
!69 = distinct !{!69, !"_ZNSt3__16__treeINS_12__value_typeIN3net21SSLClientSessionCache3KeyENS_15__list_iteratorINS_4pairIS4_NS3_5EntryEEEPvEEEENS_19__map_value_compareIS4_SB_NS_4lessIS4_EELb1EEENS_9allocatorISB_EEE16__construct_nodeIJRKS4_SA_EEENS_10unique_ptrINS_11__tree_nodeISB_S9_EENS_22__tree_node_destructorINSG_ISO_EEEEEEDpOT_"}
!70 = !{!71, !73}
!71 = distinct !{!71, !72, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_: argument 0"}
!72 = distinct !{!72, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_"}
!73 = distinct !{!73, !74, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE: argument 0"}
!74 = distinct !{!74, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE"}
!75 = !{!76, !78}
!76 = distinct !{!76, !77, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_: argument 0"}
!77 = distinct !{!77, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_"}
!78 = distinct !{!78, !79, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE: argument 0"}
!79 = distinct !{!79, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE"}
!80 = !{!81, !83}
!81 = distinct !{!81, !82, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_: argument 0"}
!82 = distinct !{!82, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_"}
!83 = distinct !{!83, !84, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE: argument 0"}
!84 = distinct !{!84, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE"}
!85 = !{!86, !88}
!86 = distinct !{!86, !87, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_: argument 0"}
!87 = distinct !{!87, !"_ZNSt3__13tieIJKN3net12HostPortPairEKN4absl8optionalINS1_9IPAddressEEEKNS1_19NetworkIsolationKeyEKNS1_11PrivacyModeEKbEEENS_5tupleIJDpRT_EEESH_"}
!88 = distinct !{!88, !89, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE: argument 0"}
!89 = distinct !{!89, !"_ZN3net12_GLOBAL__N_112TieKeyFieldsERKNS_21SSLClientSessionCache3KeyE"}
!90 = !{!91}
!91 = distinct !{!91, !92}
!92 = distinct !{!92, !"LVerDomain"}
!93 = !{!94}
!94 = distinct !{!94, !92}
!95 = distinct !{!95, !96}
!96 = !{!"llvm.loop.isvectorized", i32 1}
!97 = distinct !{!97, !98}
!98 = !{!"llvm.loop.unroll.disable"}
!99 = distinct !{!99, !96}
!100 = distinct !{!100, !98}
!101 = distinct !{!101, !98}
