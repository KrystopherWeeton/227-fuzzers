; ModuleID = '../../components/webcrypto/algorithms/pbkdf2.cc'
source_filename = "../../components/webcrypto/algorithms/pbkdf2.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webcrypto::AlgorithmImplementation" = type { i32 (...)** }
%"class.webcrypto::(anonymous namespace)::Pbkdf2Implementation" = type { %"class.webcrypto::AlgorithmImplementation" }
%"class.webcrypto::Status" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.blink::WebCryptoAlgorithm" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebCryptoKey" = type { %"class.blink::WebPrivatePtr.7" }
%"class.blink::WebPrivatePtr.7" = type { i8* }
%"class.webcrypto::CryptoData" = type <{ i8*, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i8* }
%"class.webcrypto::GenerateKeyResult" = type opaque
%"class.crypto::OpenSSLErrStackTracer" = type { %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.blink::WebCryptoPbkdf2Params" = type <{ %"class.blink::WebCryptoAlgorithmParamsWithHash", %"class.blink::WebVector", i32, [4 x i8] }>
%"class.blink::WebCryptoAlgorithmParamsWithHash" = type { %"class.blink::WebCryptoAlgorithmParams", %"class.blink::WebCryptoAlgorithm" }
%"class.blink::WebCryptoAlgorithmParams" = type { i32 (...)** }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%struct.env_md_st = type opaque
%"class.blink::WebCryptoKeyAlgorithm" = type { %"class.blink::WebPrivatePtr.16" }
%"class.blink::WebPrivatePtr.16" = type { i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

@_ZTVN9webcrypto12_GLOBAL__N_120Pbkdf2ImplementationE = internal unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webcrypto::AlgorithmImplementation"*)* @_ZN9webcrypto23AlgorithmImplementationD2Ev to i8*), i8* bitcast (void (%"class.webcrypto::(anonymous namespace)::Pbkdf2Implementation"*)* @_ZN9webcrypto12_GLOBAL__N_120Pbkdf2ImplementationD0Ev to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto23AlgorithmImplementation7EncryptERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSB_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto23AlgorithmImplementation7DecryptERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSB_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto23AlgorithmImplementation4SignERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSB_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.webcrypto::CryptoData"*, i8*)* @_ZNK9webcrypto23AlgorithmImplementation6VerifyERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataESA_Pb to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto23AlgorithmImplementation6DigestERKN5blink18WebCryptoAlgorithmERKNS_10CryptoDataEPNSt3__16vectorIhNS8_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, i1, i32, %"class.webcrypto::GenerateKeyResult"*)* @_ZNK9webcrypto23AlgorithmImplementation11GenerateKeyERKN5blink18WebCryptoAlgorithmEbiPNS_17GenerateKeyResultE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::Pbkdf2Implementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, i1, i32, %"class.std::__1::vector"*)* @_ZNK9webcrypto12_GLOBAL__N_120Pbkdf2Implementation10DeriveBitsERKN5blink18WebCryptoAlgorithmERKNS2_12WebCryptoKeyEbjPNSt3__16vectorIhNS9_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::Pbkdf2Implementation"*, %"class.blink::WebCryptoAlgorithm"*, i8*, i32*)* @_ZNK9webcrypto12_GLOBAL__N_120Pbkdf2Implementation12GetKeyLengthERKN5blink18WebCryptoAlgorithmEPbPj to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::Pbkdf2Implementation"*, i32, %"class.webcrypto::CryptoData"*, %"class.blink::WebCryptoAlgorithm"*, i1, i32, %"class.blink::WebCryptoKey"*)* @_ZNK9webcrypto12_GLOBAL__N_120Pbkdf2Implementation9ImportKeyEN5blink18WebCryptoKeyFormatERKNS_10CryptoDataERKNS2_18WebCryptoAlgorithmEbiPNS2_12WebCryptoKeyE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, i32, %"class.blink::WebCryptoKey"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto23AlgorithmImplementation9ExportKeyEN5blink18WebCryptoKeyFormatERKNS1_12WebCryptoKeyEPNSt3__16vectorIhNS6_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::Pbkdf2Implementation"*, %"class.blink::WebCryptoKeyAlgorithm"*, i32, i1, i32, %"class.webcrypto::CryptoData"*, %"class.blink::WebCryptoKey"*)* @_ZNK9webcrypto12_GLOBAL__N_120Pbkdf2Implementation22DeserializeKeyForCloneERKN5blink21WebCryptoKeyAlgorithmENS2_16WebCryptoKeyTypeEbiRKNS_10CryptoDataEPNS2_12WebCryptoKeyE to i8*)] }, align 8
@.str = private unnamed_addr constant [11 x i8] c"DeriveBits\00", align 1
@.str.1 = private unnamed_addr constant [48 x i8] c"../../components/webcrypto/algorithms/pbkdf2.cc\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto26CreatePbkdf2ImplementationEv() local_unnamed_addr #0 {
  %1 = tail call i8* @_Znwm(i64 8) #8
  %2 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN9webcrypto12_GLOBAL__N_120Pbkdf2ImplementationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast i8* %1 to %"class.webcrypto::AlgorithmImplementation"*
  ret %"class.webcrypto::AlgorithmImplementation"* %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9webcrypto23AlgorithmImplementationD2Ev(%"class.webcrypto::AlgorithmImplementation"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN9webcrypto12_GLOBAL__N_120Pbkdf2ImplementationD0Ev(%"class.webcrypto::(anonymous namespace)::Pbkdf2Implementation"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::Pbkdf2Implementation", %"class.webcrypto::(anonymous namespace)::Pbkdf2Implementation"* %0, i64 0, i32 0
  tail call void @_ZN9webcrypto23AlgorithmImplementationD2Ev(%"class.webcrypto::AlgorithmImplementation"* %2) #9
  %3 = bitcast %"class.webcrypto::(anonymous namespace)::Pbkdf2Implementation"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

declare void @_ZNK9webcrypto23AlgorithmImplementation7EncryptERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSB_9allocatorIhEEEE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.std::__1::vector"*) unnamed_addr #5

declare void @_ZNK9webcrypto23AlgorithmImplementation7DecryptERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSB_9allocatorIhEEEE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.std::__1::vector"*) unnamed_addr #5

declare void @_ZNK9webcrypto23AlgorithmImplementation4SignERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSB_9allocatorIhEEEE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.std::__1::vector"*) unnamed_addr #5

declare void @_ZNK9webcrypto23AlgorithmImplementation6VerifyERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataESA_Pb(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.webcrypto::CryptoData"* dereferenceable(16), i8*) unnamed_addr #5

declare void @_ZNK9webcrypto23AlgorithmImplementation6DigestERKN5blink18WebCryptoAlgorithmERKNS_10CryptoDataEPNSt3__16vectorIhNS8_9allocatorIhEEEE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.std::__1::vector"*) unnamed_addr #5

declare void @_ZNK9webcrypto23AlgorithmImplementation11GenerateKeyERKN5blink18WebCryptoAlgorithmEbiPNS_17GenerateKeyResultE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), i1 zeroext, i32, %"class.webcrypto::GenerateKeyResult"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK9webcrypto12_GLOBAL__N_120Pbkdf2Implementation10DeriveBitsERKN5blink18WebCryptoAlgorithmERKNS2_12WebCryptoKeyEbjPNSt3__16vectorIhNS9_9allocatorIhEEEE(%"class.webcrypto::Status"* noalias sret, %"class.webcrypto::(anonymous namespace)::Pbkdf2Implementation"* nocapture readnone, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), i1 zeroext, i32, %"class.std::__1::vector"*) unnamed_addr #0 align 2 {
  %8 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 70) #9
  %12 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %8, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %12, %"class.base::Location"* nonnull dereferenceable(32) %9) #9
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #9
  br i1 %4, label %14, label %13

13:                                               ; preds = %7
  call void @_ZN9webcrypto6Status39ErrorPbkdf2DeriveBitsLengthNotSpecifiedEv(%"class.webcrypto::Status"* sret %0) #9
  br label %72

14:                                               ; preds = %7
  %15 = and i32 %5, 7
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %14
  call void @_ZN9webcrypto6Status24ErrorPbkdf2InvalidLengthEv(%"class.webcrypto::Status"* sret %0) #9
  br label %72

18:                                               ; preds = %14
  %19 = icmp eq i32 %5, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %18
  call void @_ZN9webcrypto6Status31ErrorPbkdf2DeriveBitsLengthZeroEv(%"class.webcrypto::Status"* sret %0) #9
  br label %72

21:                                               ; preds = %18
  %22 = call %"class.blink::WebCryptoPbkdf2Params"* @_ZNK5blink18WebCryptoAlgorithm12Pbkdf2ParamsEv(%"class.blink::WebCryptoAlgorithm"* %2) #9
  %23 = getelementptr inbounds %"class.blink::WebCryptoPbkdf2Params", %"class.blink::WebCryptoPbkdf2Params"* %22, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %21
  call void @_ZN9webcrypto6Status22ErrorPbkdf2Iterations0Ev(%"class.webcrypto::Status"* sret %0) #9
  br label %72

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::WebCryptoPbkdf2Params", %"class.blink::WebCryptoPbkdf2Params"* %22, i64 0, i32 0, i32 1
  %29 = call %struct.env_md_st* @_ZN9webcrypto9GetDigestERKN5blink18WebCryptoAlgorithmE(%"class.blink::WebCryptoAlgorithm"* dereferenceable(8) %28) #9
  %30 = icmp eq %struct.env_md_st* %29, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  call void @_ZN9webcrypto6Status16ErrorUnsupportedEv(%"class.webcrypto::Status"* sret %0) #9
  br label %72

32:                                               ; preds = %27
  %33 = lshr i32 %5, 3
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %36 = bitcast i8** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.std::__1::vector"* %6 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %37, %39
  %41 = icmp ult i64 %40, %34
  %42 = inttoptr i64 %39 to i8*
  br i1 %41, label %43, label %45

43:                                               ; preds = %32
  %44 = sub i64 %34, %40
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %6, i64 %44) #9
  br label %49

45:                                               ; preds = %32
  %46 = icmp ugt i64 %40, %34
  br i1 %46, label %47, label %49

47:                                               ; preds = %45
  %48 = getelementptr inbounds i8, i8* %42, i64 %34
  store i8* %48, i8** %35, align 8
  br label %49

49:                                               ; preds = %43, %45, %47
  %50 = call dereferenceable(24) %"class.std::__1::vector"* @_ZN9webcrypto19GetSymmetricKeyDataERKN5blink12WebCryptoKeyE(%"class.blink::WebCryptoKey"* dereferenceable(8) %3) #9
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %50, i64 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %50, i64 0, i32 0, i32 1
  %54 = bitcast i8** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = ptrtoint i8* %52 to i64
  %57 = sub i64 %55, %56
  %58 = getelementptr inbounds %"class.blink::WebCryptoPbkdf2Params", %"class.blink::WebCryptoPbkdf2Params"* %22, i64 0, i32 1, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %"class.blink::WebCryptoPbkdf2Params", %"class.blink::WebCryptoPbkdf2Params"* %22, i64 0, i32 1, i32 0, i32 0, i32 1
  %61 = bitcast i8** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = ptrtoint i8* %59 to i64
  %64 = sub i64 %62, %63
  %65 = load i32, i32* %23, align 8
  %66 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = call i32 @PKCS5_PBKDF2_HMAC(i8* %52, i64 %57, i8* %59, i64 %64, i32 %65, %struct.env_md_st* nonnull %29, i64 %34, i8* %67) #9
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %49
  call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #9
  br label %72

71:                                               ; preds = %49
  call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #9
  br label %72

72:                                               ; preds = %26, %70, %71, %31, %20, %17, %13
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %12) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK9webcrypto12_GLOBAL__N_120Pbkdf2Implementation12GetKeyLengthERKN5blink18WebCryptoAlgorithmEPbPj(%"class.webcrypto::Status"* noalias sret, %"class.webcrypto::(anonymous namespace)::Pbkdf2Implementation"* nocapture readnone, %"class.blink::WebCryptoAlgorithm"* nocapture readnone dereferenceable(8), i8* nocapture, i32* nocapture readnone) unnamed_addr #0 align 2 {
  store i8 0, i8* %3, align 1
  tail call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK9webcrypto12_GLOBAL__N_120Pbkdf2Implementation9ImportKeyEN5blink18WebCryptoKeyFormatERKNS_10CryptoDataERKNS2_18WebCryptoAlgorithmEbiPNS2_12WebCryptoKeyE(%"class.webcrypto::Status"* noalias sret, %"class.webcrypto::(anonymous namespace)::Pbkdf2Implementation"* nocapture readnone, i32, %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.blink::WebCryptoAlgorithm"* nocapture readnone dereferenceable(8), i1 zeroext, i32, %"class.blink::WebCryptoKey"*) unnamed_addr #0 align 2 {
  %9 = alloca %"class.webcrypto::Status", align 8
  %10 = alloca %"class.blink::WebCryptoKeyAlgorithm", align 8
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %12, label %38

12:                                               ; preds = %8
  %13 = bitcast %"class.webcrypto::Status"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #9, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false) #9, !noalias !2
  call void @_ZN9webcrypto22CheckKeyCreationUsagesEii(%"class.webcrypto::Status"* nonnull sret %9, i32 144, i32 %6) #9, !noalias !2
  %14 = call zeroext i1 @_ZNK9webcrypto6Status7IsErrorEv(%"class.webcrypto::Status"* nonnull %9) #9, !noalias !2
  br i1 %14, label %15, label %23

15:                                               ; preds = %12
  %16 = bitcast %"class.webcrypto::Status"* %9 to i64*
  %17 = bitcast %"class.webcrypto::Status"* %0 to i64*
  %18 = load i64, i64* %16, align 8, !noalias !2
  store i64 %18, i64* %17, align 8, !alias.scope !2
  %19 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %9, i64 0, i32 2
  %21 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #9, !noalias !2
  br label %28

23:                                               ; preds = %12
  br i1 %5, label %24, label %25

24:                                               ; preds = %23
  call void @_ZN9webcrypto6Status28ErrorImportExtractableKdfKeyEv(%"class.webcrypto::Status"* sret %0) #9
  br label %28

25:                                               ; preds = %23
  %26 = bitcast %"class.blink::WebCryptoKeyAlgorithm"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9, !noalias !2
  %27 = getelementptr inbounds %"class.blink::WebCryptoKeyAlgorithm", %"class.blink::WebCryptoKeyAlgorithm"* %10, i64 0, i32 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %27, align 8, !noalias !2
  call void @_ZN5blink21WebCryptoKeyAlgorithm19CreateWithoutParamsENS_20WebCryptoAlgorithmIdE(%"class.blink::WebCryptoKeyAlgorithm"* nonnull sret %10, i32 15) #9
  call void @_ZN9webcrypto24CreateWebCryptoSecretKeyERKNS_10CryptoDataERKN5blink21WebCryptoKeyAlgorithmEbiPNS3_12WebCryptoKeyE(%"class.webcrypto::Status"* sret %0, %"class.webcrypto::CryptoData"* dereferenceable(16) %3, %"class.blink::WebCryptoKeyAlgorithm"* nonnull dereferenceable(8) %10, i1 zeroext false, i32 %6, %"class.blink::WebCryptoKey"* %7) #9
  call void @_ZN5blink21WebCryptoKeyAlgorithm5ResetEv(%"class.blink::WebCryptoKeyAlgorithm"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9, !noalias !2
  br label %28

28:                                               ; preds = %25, %24, %15
  %29 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %9, i64 0, i32 2
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1, !noalias !2
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8, !noalias !2
  call void @_ZdlPv(i8* %36) #8
  br label %37

37:                                               ; preds = %28, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #9, !noalias !2
  br label %39

38:                                               ; preds = %8
  tail call void @_ZN9webcrypto6Status31ErrorUnsupportedImportKeyFormatEv(%"class.webcrypto::Status"* sret %0) #9
  br label %39

39:                                               ; preds = %38, %37
  ret void
}

declare void @_ZNK9webcrypto23AlgorithmImplementation9ExportKeyEN5blink18WebCryptoKeyFormatERKNS1_12WebCryptoKeyEPNSt3__16vectorIhNS6_9allocatorIhEEEE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, i32, %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.std::__1::vector"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK9webcrypto12_GLOBAL__N_120Pbkdf2Implementation22DeserializeKeyForCloneERKN5blink21WebCryptoKeyAlgorithmENS2_16WebCryptoKeyTypeEbiRKNS_10CryptoDataEPNS2_12WebCryptoKeyE(%"class.webcrypto::Status"* noalias sret, %"class.webcrypto::(anonymous namespace)::Pbkdf2Implementation"* nocapture readnone, %"class.blink::WebCryptoKeyAlgorithm"* dereferenceable(8), i32, i1 zeroext, i32, %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.blink::WebCryptoKey"*) unnamed_addr #0 align 2 {
  %9 = tail call i32 @_ZNK5blink21WebCryptoKeyAlgorithm10ParamsTypeEv(%"class.blink::WebCryptoKeyAlgorithm"* %2) #9
  %10 = or i32 %9, %3
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @_ZN9webcrypto6Status15ErrorUnexpectedEv(%"class.webcrypto::Status"* sret %0) #9
  br label %14

13:                                               ; preds = %8
  tail call void @_ZN9webcrypto24CreateWebCryptoSecretKeyERKNS_10CryptoDataERKN5blink21WebCryptoKeyAlgorithmEbiPNS3_12WebCryptoKeyE(%"class.webcrypto::Status"* sret %0, %"class.webcrypto::CryptoData"* dereferenceable(16) %6, %"class.blink::WebCryptoKeyAlgorithm"* dereferenceable(8) %2, i1 zeroext %4, i32 %5, %"class.blink::WebCryptoKey"* %7) #9
  br label %14

14:                                               ; preds = %13, %12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

declare void @_ZN9webcrypto6Status39ErrorPbkdf2DeriveBitsLengthNotSpecifiedEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

declare void @_ZN9webcrypto6Status24ErrorPbkdf2InvalidLengthEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

declare void @_ZN9webcrypto6Status31ErrorPbkdf2DeriveBitsLengthZeroEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

declare %"class.blink::WebCryptoPbkdf2Params"* @_ZNK5blink18WebCryptoAlgorithm12Pbkdf2ParamsEv(%"class.blink::WebCryptoAlgorithm"*) local_unnamed_addr #5

declare void @_ZN9webcrypto6Status22ErrorPbkdf2Iterations0Ev(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

declare %struct.env_md_st* @_ZN9webcrypto9GetDigestERKN5blink18WebCryptoAlgorithmE(%"class.blink::WebCryptoAlgorithm"* dereferenceable(8)) local_unnamed_addr #5

declare void @_ZN9webcrypto6Status16ErrorUnsupportedEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::vector"* @_ZN9webcrypto19GetSymmetricKeyDataERKN5blink12WebCryptoKeyE(%"class.blink::WebCryptoKey"* dereferenceable(8)) local_unnamed_addr #5

declare i32 @PKCS5_PBKDF2_HMAC(i8*, i64, i8*, i64, i32, %struct.env_md_st*, i64, i8*) local_unnamed_addr #5

declare void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

declare void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #5

declare void @_ZN6crypto17EnsureOpenSSLInitEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #9
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #10
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #8
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #9
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #9
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #8
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN9webcrypto6Status31ErrorUnsupportedImportKeyFormatEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

declare void @_ZN9webcrypto22CheckKeyCreationUsagesEii(%"class.webcrypto::Status"* sret, i32, i32) local_unnamed_addr #5

declare zeroext i1 @_ZNK9webcrypto6Status7IsErrorEv(%"class.webcrypto::Status"*) local_unnamed_addr #5

declare void @_ZN9webcrypto6Status28ErrorImportExtractableKdfKeyEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

declare void @_ZN5blink21WebCryptoKeyAlgorithm19CreateWithoutParamsENS_20WebCryptoAlgorithmIdE(%"class.blink::WebCryptoKeyAlgorithm"* sret, i32) local_unnamed_addr #5

declare void @_ZN9webcrypto24CreateWebCryptoSecretKeyERKNS_10CryptoDataERKN5blink21WebCryptoKeyAlgorithmEbiPNS3_12WebCryptoKeyE(%"class.webcrypto::Status"* sret, %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.blink::WebCryptoKeyAlgorithm"* dereferenceable(8), i1 zeroext, i32, %"class.blink::WebCryptoKey"*) local_unnamed_addr #5

declare void @_ZN5blink21WebCryptoKeyAlgorithm5ResetEv(%"class.blink::WebCryptoKeyAlgorithm"*) local_unnamed_addr #5

declare i32 @_ZNK5blink21WebCryptoKeyAlgorithm10ParamsTypeEv(%"class.blink::WebCryptoKeyAlgorithm"*) local_unnamed_addr #5

declare void @_ZN9webcrypto6Status15ErrorUnexpectedEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK9webcrypto12_GLOBAL__N_120Pbkdf2Implementation12ImportKeyRawERKNS_10CryptoDataERKN5blink18WebCryptoAlgorithmEbiPNS5_12WebCryptoKeyE: argument 0"}
!4 = distinct !{!4, !"_ZNK9webcrypto12_GLOBAL__N_120Pbkdf2Implementation12ImportKeyRawERKNS_10CryptoDataERKN5blink18WebCryptoAlgorithmEbiPNS5_12WebCryptoKeyE"}
