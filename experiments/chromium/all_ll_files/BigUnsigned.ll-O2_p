; ModuleID = '../../third_party/pdfium/third_party/bigint/BigUnsigned.cc'
source_filename = "../../third_party/pdfium/third_party/bigint/BigUnsigned.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.BigUnsigned = type { %class.NumberlikeArray }
%class.NumberlikeArray = type { i32, i32, i64* }

@_ZN11BigUnsignedC1Em = hidden unnamed_addr alias void (%class.BigUnsigned*, i64), void (%class.BigUnsigned*, i64)* @_ZN11BigUnsignedC2Em
@_ZN11BigUnsignedC1Ej = hidden unnamed_addr alias void (%class.BigUnsigned*, i32), void (%class.BigUnsigned*, i32)* @_ZN11BigUnsignedC2Ej
@_ZN11BigUnsignedC1Et = hidden unnamed_addr alias void (%class.BigUnsigned*, i16), void (%class.BigUnsigned*, i16)* @_ZN11BigUnsignedC2Et
@_ZN11BigUnsignedC1El = hidden unnamed_addr alias void (%class.BigUnsigned*, i64), void (%class.BigUnsigned*, i64)* @_ZN11BigUnsignedC2El
@_ZN11BigUnsignedC1Ei = hidden unnamed_addr alias void (%class.BigUnsigned*, i32), void (%class.BigUnsigned*, i32)* @_ZN11BigUnsignedC2Ei
@_ZN11BigUnsignedC1Es = hidden unnamed_addr alias void (%class.BigUnsigned*, i16), void (%class.BigUnsigned*, i16)* @_ZN11BigUnsignedC2Es

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11BigUnsignedC2Em(%class.BigUnsigned* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = bitcast %class.BigUnsigned* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #7
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  store i32 1, i32* %6, align 8
  %7 = tail call i8* @_Znam(i64 8) #8
  %8 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %9 = bitcast i64** %8 to i8**
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 1, i32* %10, align 4
  %11 = bitcast i8* %7 to i64*
  store i64 %1, i64* %11, align 8
  br label %12

12:                                               ; preds = %2, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11BigUnsignedC2Ej(%class.BigUnsigned* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %class.BigUnsigned* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #7
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  store i32 1, i32* %6, align 8
  %7 = tail call i8* @_Znam(i64 8) #8
  %8 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %9 = bitcast i64** %8 to i8**
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 1, i32* %10, align 4
  %11 = zext i32 %1 to i64
  %12 = bitcast i8* %7 to i64*
  store i64 %11, i64* %12, align 8
  br label %13

13:                                               ; preds = %2, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11BigUnsignedC2Et(%class.BigUnsigned* nocapture, i16 zeroext) unnamed_addr #0 align 2 {
  %3 = bitcast %class.BigUnsigned* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #7
  %4 = icmp eq i16 %1, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  store i32 1, i32* %6, align 8
  %7 = tail call i8* @_Znam(i64 8) #8
  %8 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %9 = bitcast i64** %8 to i8**
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 1, i32* %10, align 4
  %11 = zext i16 %1 to i64
  %12 = bitcast i8* %7 to i64*
  store i64 %11, i64* %12, align 8
  br label %13

13:                                               ; preds = %2, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11BigUnsignedC2El(%class.BigUnsigned* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = bitcast %class.BigUnsigned* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #7
  %4 = icmp slt i64 %1, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @abort() #9
  unreachable

6:                                                ; preds = %2
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  store i32 1, i32* %9, align 8
  %10 = tail call i8* @_Znam(i64 8) #8
  %11 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %12 = bitcast i64** %11 to i8**
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 1, i32* %13, align 4
  %14 = bitcast i8* %10 to i64*
  store i64 %1, i64* %14, align 8
  br label %15

15:                                               ; preds = %6, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11BigUnsignedC2Ei(%class.BigUnsigned* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %class.BigUnsigned* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #7
  %4 = icmp slt i32 %1, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @abort() #9
  unreachable

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  store i32 1, i32* %9, align 8
  %10 = tail call i8* @_Znam(i64 8) #8
  %11 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %12 = bitcast i64** %11 to i8**
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 1, i32* %13, align 4
  %14 = sext i32 %1 to i64
  %15 = bitcast i8* %10 to i64*
  store i64 %14, i64* %15, align 8
  br label %16

16:                                               ; preds = %6, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11BigUnsignedC2Es(%class.BigUnsigned* nocapture, i16 signext) unnamed_addr #0 align 2 {
  %3 = bitcast %class.BigUnsigned* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #7
  %4 = icmp slt i16 %1, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @abort() #9
  unreachable

6:                                                ; preds = %2
  %7 = icmp eq i16 %1, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  store i32 1, i32* %9, align 8
  %10 = tail call i8* @_Znam(i64 8) #8
  %11 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %12 = bitcast i64** %11 to i8**
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 1, i32* %13, align 4
  %14 = sext i16 %1 to i64
  %15 = bitcast i8* %10 to i64*
  store i64 %14, i64* %15, align 8
  br label %16

16:                                               ; preds = %6, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK11BigUnsigned14toUnsignedLongEv(%class.BigUnsigned* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %8 [
    i32 0, label %9
    i32 1, label %4
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  br label %9

8:                                                ; preds = %1
  tail call void @abort() #9
  unreachable

9:                                                ; preds = %1, %4
  %10 = phi i64 [ %7, %4 ], [ 0, %1 ]
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK11BigUnsigned13toUnsignedIntEv(%class.BigUnsigned* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %10 [
    i32 0, label %11
    i32 1, label %4
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = icmp ugt i64 %7, 4294967295
  br i1 %9, label %10, label %11

10:                                               ; preds = %4, %1
  tail call void @abort() #9
  unreachable

11:                                               ; preds = %1, %4
  %12 = phi i32 [ %8, %4 ], [ %3, %1 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZNK11BigUnsigned15toUnsignedShortEv(%class.BigUnsigned* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %10 [
    i32 0, label %11
    i32 1, label %4
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i16
  %9 = icmp ugt i64 %7, 65535
  br i1 %9, label %10, label %11

10:                                               ; preds = %4, %1
  tail call void @abort() #9
  unreachable

11:                                               ; preds = %1, %4
  %12 = phi i16 [ %8, %4 ], [ 0, %1 ]
  ret i16 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK11BigUnsigned6toLongEv(%class.BigUnsigned* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %4 [
    i32 0, label %11
    i32 1, label %5
  ]

4:                                                ; preds = %1
  tail call void @abort() #9
  unreachable

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %7 = load i64*, i64** %6, align 8
  %8 = load i64, i64* %7, align 8
  %9 = icmp sgt i64 %8, -1
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  tail call void @abort() #9
  unreachable

11:                                               ; preds = %1, %5
  %12 = phi i64 [ %8, %5 ], [ 0, %1 ]
  ret i64 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK11BigUnsigned5toIntEv(%class.BigUnsigned* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %11 [
    i32 0, label %15
    i32 1, label %4
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = add i64 %7, 2147483648
  %10 = icmp ugt i64 %9, 4294967295
  br i1 %10, label %11, label %12

11:                                               ; preds = %4, %1
  tail call void @abort() #9
  unreachable

12:                                               ; preds = %4
  %13 = icmp sgt i32 %8, -1
  br i1 %13, label %15, label %14

14:                                               ; preds = %12
  tail call void @abort() #9
  unreachable

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %8, %12 ], [ %3, %1 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i16 @_ZNK11BigUnsigned7toShortEv(%class.BigUnsigned* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %11 [
    i32 0, label %15
    i32 1, label %4
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i16
  %9 = add i64 %7, 32768
  %10 = icmp ugt i64 %9, 65535
  br i1 %10, label %11, label %12

11:                                               ; preds = %4, %1
  tail call void @abort() #9
  unreachable

12:                                               ; preds = %4
  %13 = icmp sgt i16 %8, -1
  br i1 %13, label %15, label %14

14:                                               ; preds = %12
  tail call void @abort() #9
  unreachable

15:                                               ; preds = %1, %12
  %16 = phi i16 [ %8, %12 ], [ 0, %1 ]
  ret i16 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11BigUnsigned8setBlockEjm(%class.BigUnsigned* nocapture, i32, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %2, 0
  %5 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp ugt i32 %6, %1
  br i1 %4, label %8, label %30

8:                                                ; preds = %3
  br i1 %7, label %9, label %115

9:                                                ; preds = %8
  %10 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %11 = load i64*, i64** %10, align 8
  %12 = zext i32 %1 to i64
  %13 = getelementptr inbounds i64, i64* %11, i64 %12
  store i64 0, i64* %13, align 8
  %14 = load i32, i32* %5, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %115, label %16

16:                                               ; preds = %9
  %17 = zext i32 %14 to i64
  %18 = load i64*, i64** %10, align 8
  br label %19

19:                                               ; preds = %27, %16
  %20 = phi i64 [ %17, %16 ], [ %29, %27 ]
  %21 = trunc i64 %20 to i32
  %22 = add i32 %21, -1
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i64, i64* %18, i64 %23
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %115

27:                                               ; preds = %19
  store i32 %22, i32* %5, align 4
  %28 = icmp eq i32 %22, 0
  %29 = add nsw i64 %20, -1
  br i1 %28, label %115, label %19

30:                                               ; preds = %3
  br i1 %7, label %110, label %31

31:                                               ; preds = %30
  %32 = add i32 %1, 1
  %33 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = icmp ult i32 %34, %32
  br i1 %35, label %36, label %71

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %38 = load i64*, i64** %37, align 8
  store i32 %32, i32* %33, align 8
  %39 = zext i32 %32 to i64
  %40 = shl nuw nsw i64 %39, 3
  %41 = tail call i8* @_Znam(i64 %40) #8
  %42 = bitcast i64** %37 to i8**
  store i8* %41, i8** %42, align 8
  %43 = icmp eq i32 %6, 0
  br i1 %43, label %65, label %44

44:                                               ; preds = %36
  %45 = bitcast i8* %41 to i64*
  %46 = load i64, i64* %38, align 8
  store i64 %46, i64* %45, align 8
  %47 = icmp eq i32 %6, 1
  br i1 %47, label %65, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds i64, i64* %38, i64 1
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds i8, i8* %41, i64 8
  %52 = bitcast i8* %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = load i32, i32* %5, align 4
  %54 = icmp ugt i32 %53, 2
  br i1 %54, label %55, label %65

55:                                               ; preds = %48, %55
  %56 = phi i64 [ %61, %55 ], [ 2, %48 ]
  %57 = load i64*, i64** %37, align 8
  %58 = getelementptr inbounds i64, i64* %38, i64 %56
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds i64, i64* %57, i64 %56
  store i64 %59, i64* %60, align 8
  %61 = add nuw nsw i64 %56, 1
  %62 = load i32, i32* %5, align 4
  %63 = zext i32 %62 to i64
  %64 = icmp ult i64 %61, %63
  br i1 %64, label %55, label %65

65:                                               ; preds = %55, %48, %44, %36
  %66 = phi i32 [ 1, %44 ], [ 0, %36 ], [ %53, %48 ], [ %62, %55 ]
  %67 = icmp eq i64* %38, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = bitcast i64* %38 to i8*
  tail call void @_ZdaPv(i8* %69) #8
  %70 = load i32, i32* %5, align 4
  br label %71

71:                                               ; preds = %31, %65, %68
  %72 = phi i32 [ %6, %31 ], [ %66, %65 ], [ %70, %68 ]
  %73 = icmp ult i32 %72, %1
  br i1 %73, label %74, label %94

74:                                               ; preds = %71
  %75 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %76 = zext i32 %72 to i64
  %77 = zext i32 %1 to i64
  %78 = sub nsw i64 %77, %76
  %79 = xor i64 %76, -1
  %80 = add nsw i64 %79, %77
  %81 = and i64 %78, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %91, label %83

83:                                               ; preds = %74, %83
  %84 = phi i64 [ %88, %83 ], [ %76, %74 ]
  %85 = phi i64 [ %89, %83 ], [ %81, %74 ]
  %86 = load i64*, i64** %75, align 8
  %87 = getelementptr inbounds i64, i64* %86, i64 %84
  store i64 0, i64* %87, align 8
  %88 = add nuw nsw i64 %84, 1
  %89 = add i64 %85, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %83, !llvm.loop !2

91:                                               ; preds = %83, %74
  %92 = phi i64 [ %76, %74 ], [ %88, %83 ]
  %93 = icmp ult i64 %80, 3
  br i1 %93, label %94, label %95

94:                                               ; preds = %91, %95, %71
  store i32 %32, i32* %5, align 4
  br label %110

95:                                               ; preds = %91, %95
  %96 = phi i64 [ %108, %95 ], [ %92, %91 ]
  %97 = load i64*, i64** %75, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 %96
  store i64 0, i64* %98, align 8
  %99 = add nuw nsw i64 %96, 1
  %100 = load i64*, i64** %75, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 %99
  store i64 0, i64* %101, align 8
  %102 = add nuw nsw i64 %96, 2
  %103 = load i64*, i64** %75, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 %102
  store i64 0, i64* %104, align 8
  %105 = add nuw nsw i64 %96, 3
  %106 = load i64*, i64** %75, align 8
  %107 = getelementptr inbounds i64, i64* %106, i64 %105
  store i64 0, i64* %107, align 8
  %108 = add nuw nsw i64 %96, 4
  %109 = icmp eq i64 %108, %77
  br i1 %109, label %94, label %95

110:                                              ; preds = %30, %94
  %111 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %112 = load i64*, i64** %111, align 8
  %113 = zext i32 %1 to i64
  %114 = getelementptr inbounds i64, i64* %112, i64 %113
  store i64 %2, i64* %114, align 8
  br label %115

115:                                              ; preds = %27, %19, %9, %8, %110
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK11BigUnsigned9bitLengthEv(%class.BigUnsigned* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = add i32 %3, -1
  %7 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %8 = load i64*, i64** %7, align 8
  %9 = zext i32 %6 to i64
  %10 = getelementptr inbounds i64, i64* %8, i64 %9
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %5
  %14 = call i64 @llvm.ctlz.i64(i64 %11, i1 true), !range !4
  %15 = trunc i64 %14 to i32
  %16 = sub nuw nsw i32 64, %15
  br label %17

17:                                               ; preds = %13, %5
  %18 = phi i32 [ 0, %5 ], [ %16, %13 ]
  %19 = shl i32 %3, 6
  %20 = add i32 %19, -64
  %21 = add i32 %20, %18
  br label %22

22:                                               ; preds = %1, %17
  %23 = phi i32 [ %21, %17 ], [ 0, %1 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11BigUnsigned6setBitEjb(%class.BigUnsigned* nocapture, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = lshr i32 %1, 6
  %5 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp ugt i32 %6, %4
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %10 = load i64*, i64** %9, align 8
  %11 = zext i32 %4 to i64
  %12 = getelementptr inbounds i64, i64* %10, i64 %11
  %13 = load i64, i64* %12, align 8
  br label %14

14:                                               ; preds = %3, %8
  %15 = phi i64 [ %13, %8 ], [ 0, %3 ]
  %16 = and i32 %1, 63
  %17 = zext i32 %16 to i64
  %18 = shl i64 1, %17
  %19 = or i64 %15, %18
  %20 = xor i64 %18, -1
  %21 = and i64 %15, %20
  %22 = select i1 %2, i64 %19, i64 %21
  tail call void @_ZN11BigUnsigned8setBlockEjm(%class.BigUnsigned* %0, i32 %4, i64 %22)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK11BigUnsigned9compareToERKS_(%class.BigUnsigned* nocapture readonly, %class.BigUnsigned* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp ult i32 %4, %6
  br i1 %7, label %31, label %8

8:                                                ; preds = %2
  %9 = icmp ugt i32 %4, %6
  br i1 %9, label %31, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %12 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 2
  %13 = load i64*, i64** %12, align 8
  %14 = zext i32 %4 to i64
  br label %15

15:                                               ; preds = %10, %18
  %16 = phi i64 [ %14, %10 ], [ %27, %18 ]
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %31, label %18

18:                                               ; preds = %15
  %19 = add i64 %16, 4294967295
  %20 = load i64*, i64** %11, align 8
  %21 = and i64 %19, 4294967295
  %22 = getelementptr inbounds i64, i64* %20, i64 %21
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds i64, i64* %13, i64 %21
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %23, %25
  %27 = add nsw i64 %16, -1
  br i1 %26, label %15, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %23, %25
  %30 = select i1 %29, i32 1, i32 -1
  br label %31

31:                                               ; preds = %15, %28, %8, %2
  %32 = phi i32 [ -1, %2 ], [ 1, %8 ], [ %30, %28 ], [ 0, %15 ]
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11BigUnsigned3addERKS_S1_(%class.BigUnsigned*, %class.BigUnsigned* readonly dereferenceable(16), %class.BigUnsigned* readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.BigUnsigned, align 8
  %5 = icmp eq %class.BigUnsigned* %0, %1
  %6 = icmp eq %class.BigUnsigned* %0, %2
  %7 = or i1 %5, %6
  br i1 %7, label %8, label %53

8:                                                ; preds = %3
  %9 = bitcast %class.BigUnsigned* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #7
  %10 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %4, i64 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #7
  call void @_ZN11BigUnsigned3addERKS_S1_(%class.BigUnsigned* nonnull %4, %class.BigUnsigned* dereferenceable(16) %1, %class.BigUnsigned* dereferenceable(16) %2)
  %11 = icmp eq %class.BigUnsigned* %4, %0
  br i1 %11, label %47, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %4, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %17, %14
  br i1 %18, label %19, label %31

19:                                               ; preds = %12
  %20 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %21 = load i64*, i64** %20, align 8
  %22 = icmp eq i64* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast i64* %21 to i8*
  call void @_ZdaPv(i8* %24) #8
  br label %25

25:                                               ; preds = %23, %19
  store i32 %14, i32* %16, align 8
  %26 = zext i32 %14 to i64
  %27 = shl nuw nsw i64 %26, 3
  %28 = call i8* @_Znam(i64 %27) #8
  %29 = bitcast i64** %20 to i8**
  store i8* %28, i8** %29, align 8
  %30 = load i32, i32* %15, align 4
  br label %31

31:                                               ; preds = %25, %12
  %32 = phi i32 [ %14, %12 ], [ %30, %25 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %47, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %43, %36 ]
  %38 = load i64*, i64** %10, align 8
  %39 = getelementptr inbounds i64, i64* %38, i64 %37
  %40 = load i64, i64* %39, align 8
  %41 = load i64*, i64** %35, align 8
  %42 = getelementptr inbounds i64, i64* %41, i64 %37
  store i64 %40, i64* %42, align 8
  %43 = add nuw nsw i64 %37, 1
  %44 = load i32, i32* %15, align 4
  %45 = zext i32 %44 to i64
  %46 = icmp ult i64 %43, %45
  br i1 %46, label %36, label %47

47:                                               ; preds = %36, %8, %31
  %48 = load i64*, i64** %10, align 8
  %49 = icmp eq i64* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = bitcast i64* %48 to i8*
  call void @_ZdaPv(i8* %51) #8
  br label %52

52:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #7
  br label %242

53:                                               ; preds = %3
  %54 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %2, i64 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %93

59:                                               ; preds = %53
  %60 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 %58, i32* %60, align 4
  %61 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp ult i32 %62, %58
  br i1 %63, label %64, label %76

64:                                               ; preds = %59
  %65 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  %69 = bitcast i64* %66 to i8*
  tail call void @_ZdaPv(i8* %69) #8
  br label %70

70:                                               ; preds = %68, %64
  store i32 %58, i32* %61, align 8
  %71 = zext i32 %58 to i64
  %72 = shl nuw nsw i64 %71, 3
  %73 = tail call i8* @_Znam(i64 %72) #8
  %74 = bitcast i64** %65 to i8**
  store i8* %73, i8** %74, align 8
  %75 = load i32, i32* %60, align 4
  br label %76

76:                                               ; preds = %70, %59
  %77 = phi i32 [ %58, %59 ], [ %75, %70 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %242, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %2, i64 0, i32 0, i32 2
  %81 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  br label %82

82:                                               ; preds = %82, %79
  %83 = phi i64 [ 0, %79 ], [ %89, %82 ]
  %84 = load i64*, i64** %80, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 %83
  %86 = load i64, i64* %85, align 8
  %87 = load i64*, i64** %81, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 %83
  store i64 %86, i64* %88, align 8
  %89 = add nuw nsw i64 %83, 1
  %90 = load i32, i32* %60, align 4
  %91 = zext i32 %90 to i64
  %92 = icmp ult i64 %89, %91
  br i1 %92, label %82, label %242

93:                                               ; preds = %53
  %94 = icmp eq i32 %58, 0
  br i1 %94, label %95, label %127

95:                                               ; preds = %93
  %96 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 %55, i32* %96, align 4
  %97 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 8
  %99 = icmp ult i32 %98, %55
  br i1 %99, label %100, label %113

100:                                              ; preds = %95
  %101 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %102 = load i64*, i64** %101, align 8
  %103 = icmp eq i64* %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %100
  %105 = bitcast i64* %102 to i8*
  tail call void @_ZdaPv(i8* %105) #8
  br label %106

106:                                              ; preds = %100, %104
  store i32 %55, i32* %97, align 8
  %107 = zext i32 %55 to i64
  %108 = shl nuw nsw i64 %107, 3
  %109 = tail call i8* @_Znam(i64 %108) #8
  %110 = bitcast i64** %101 to i8**
  store i8* %109, i8** %110, align 8
  %111 = load i32, i32* %96, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %242, label %113

113:                                              ; preds = %95, %106
  %114 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 2
  %115 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  br label %116

116:                                              ; preds = %116, %113
  %117 = phi i64 [ 0, %113 ], [ %123, %116 ]
  %118 = load i64*, i64** %114, align 8
  %119 = getelementptr inbounds i64, i64* %118, i64 %117
  %120 = load i64, i64* %119, align 8
  %121 = load i64*, i64** %115, align 8
  %122 = getelementptr inbounds i64, i64* %121, i64 %117
  store i64 %120, i64* %122, align 8
  %123 = add nuw nsw i64 %117, 1
  %124 = load i32, i32* %96, align 4
  %125 = zext i32 %124 to i64
  %126 = icmp ult i64 %123, %125
  br i1 %126, label %116, label %242

127:                                              ; preds = %93
  %128 = icmp ult i32 %55, %58
  %129 = select i1 %128, %class.BigUnsigned* %2, %class.BigUnsigned* %1
  %130 = select i1 %128, %class.BigUnsigned* %1, %class.BigUnsigned* %2
  %131 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %129, i64 0, i32 0, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = add i32 %132, 1
  %134 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 %133, i32* %134, align 4
  %135 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp ult i32 %136, %133
  br i1 %137, label %138, label %149

138:                                              ; preds = %127
  %139 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %140 = load i64*, i64** %139, align 8
  %141 = icmp eq i64* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = bitcast i64* %140 to i8*
  tail call void @_ZdaPv(i8* %143) #8
  br label %144

144:                                              ; preds = %142, %138
  store i32 %133, i32* %135, align 8
  %145 = zext i32 %133 to i64
  %146 = shl nuw nsw i64 %145, 3
  %147 = tail call i8* @_Znam(i64 %146) #8
  %148 = bitcast i64** %139 to i8**
  store i8* %147, i8** %148, align 8
  br label %149

149:                                              ; preds = %127, %144
  %150 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %130, i64 0, i32 0, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %149
  %154 = load i32, i32* %131, align 4
  br label %196

155:                                              ; preds = %149
  %156 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %129, i64 0, i32 0, i32 2
  %157 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %130, i64 0, i32 0, i32 2
  %158 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  br label %168

159:                                              ; preds = %184
  %160 = trunc i64 %190 to i32
  %161 = load i32, i32* %131, align 4
  %162 = icmp ugt i32 %161, %160
  %163 = and i1 %185, %162
  br i1 %163, label %164, label %196

164:                                              ; preds = %159
  %165 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %129, i64 0, i32 0, i32 2
  %166 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %167 = and i64 %190, 4294967295
  br label %205

168:                                              ; preds = %155, %184
  %169 = phi i64 [ 0, %155 ], [ %190, %184 ]
  %170 = phi i8 [ 0, %155 ], [ %189, %184 ]
  %171 = load i64*, i64** %156, align 8
  %172 = getelementptr inbounds i64, i64* %171, i64 %169
  %173 = load i64, i64* %172, align 8
  %174 = load i64*, i64** %157, align 8
  %175 = getelementptr inbounds i64, i64* %174, i64 %169
  %176 = load i64, i64* %175, align 8
  %177 = add i64 %176, %173
  %178 = icmp ult i64 %177, %173
  %179 = icmp eq i8 %170, 0
  br i1 %179, label %184, label %180

180:                                              ; preds = %168
  %181 = add i64 %177, 1
  %182 = icmp eq i64 %181, 0
  %183 = or i1 %178, %182
  br label %184

184:                                              ; preds = %168, %180
  %185 = phi i1 [ %183, %180 ], [ %178, %168 ]
  %186 = phi i64 [ %181, %180 ], [ %177, %168 ]
  %187 = load i64*, i64** %158, align 8
  %188 = getelementptr inbounds i64, i64* %187, i64 %169
  store i64 %186, i64* %188, align 8
  %189 = zext i1 %185 to i8
  %190 = add nuw nsw i64 %169, 1
  %191 = load i32, i32* %150, align 4
  %192 = zext i32 %191 to i64
  %193 = icmp ult i64 %190, %192
  br i1 %193, label %168, label %159

194:                                              ; preds = %205
  %195 = trunc i64 %214 to i32
  br label %196

196:                                              ; preds = %153, %194, %159
  %197 = phi i32 [ %161, %159 ], [ %215, %194 ], [ %154, %153 ]
  %198 = phi i32 [ %160, %159 ], [ %195, %194 ], [ 0, %153 ]
  %199 = phi i1 [ %185, %159 ], [ %211, %194 ], [ false, %153 ]
  %200 = icmp ult i32 %198, %197
  br i1 %200, label %201, label %232

201:                                              ; preds = %196
  %202 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %129, i64 0, i32 0, i32 2
  %203 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %204 = zext i32 %198 to i64
  br label %219

205:                                              ; preds = %164, %205
  %206 = phi i64 [ %167, %164 ], [ %214, %205 ]
  %207 = load i64*, i64** %165, align 8
  %208 = getelementptr inbounds i64, i64* %207, i64 %206
  %209 = load i64, i64* %208, align 8
  %210 = add i64 %209, 1
  %211 = icmp eq i64 %210, 0
  %212 = load i64*, i64** %166, align 8
  %213 = getelementptr inbounds i64, i64* %212, i64 %206
  store i64 %210, i64* %213, align 8
  %214 = add nuw nsw i64 %206, 1
  %215 = load i32, i32* %131, align 4
  %216 = zext i32 %215 to i64
  %217 = icmp ult i64 %214, %216
  %218 = and i1 %211, %217
  br i1 %218, label %205, label %194

219:                                              ; preds = %201, %219
  %220 = phi i64 [ %204, %201 ], [ %226, %219 ]
  %221 = load i64*, i64** %202, align 8
  %222 = getelementptr inbounds i64, i64* %221, i64 %220
  %223 = load i64, i64* %222, align 8
  %224 = load i64*, i64** %203, align 8
  %225 = getelementptr inbounds i64, i64* %224, i64 %220
  store i64 %223, i64* %225, align 8
  %226 = add nuw nsw i64 %220, 1
  %227 = load i32, i32* %131, align 4
  %228 = zext i32 %227 to i64
  %229 = icmp ult i64 %226, %228
  br i1 %229, label %219, label %230

230:                                              ; preds = %219
  %231 = trunc i64 %226 to i32
  br label %232

232:                                              ; preds = %230, %196
  %233 = phi i32 [ %198, %196 ], [ %231, %230 ]
  br i1 %199, label %234, label %239

234:                                              ; preds = %232
  %235 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %236 = load i64*, i64** %235, align 8
  %237 = zext i32 %233 to i64
  %238 = getelementptr inbounds i64, i64* %236, i64 %237
  store i64 1, i64* %238, align 8
  br label %242

239:                                              ; preds = %232
  %240 = load i32, i32* %134, align 4
  %241 = add i32 %240, -1
  store i32 %241, i32* %134, align 4
  br label %242

242:                                              ; preds = %116, %82, %106, %76, %234, %239, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11BigUnsigned8subtractERKS_S1_(%class.BigUnsigned*, %class.BigUnsigned* readonly dereferenceable(16), %class.BigUnsigned* readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.BigUnsigned, align 8
  %5 = icmp eq %class.BigUnsigned* %0, %1
  %6 = icmp eq %class.BigUnsigned* %0, %2
  %7 = or i1 %5, %6
  br i1 %7, label %8, label %53

8:                                                ; preds = %3
  %9 = bitcast %class.BigUnsigned* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #7
  %10 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %4, i64 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #7
  call void @_ZN11BigUnsigned8subtractERKS_S1_(%class.BigUnsigned* nonnull %4, %class.BigUnsigned* dereferenceable(16) %1, %class.BigUnsigned* dereferenceable(16) %2)
  %11 = icmp eq %class.BigUnsigned* %4, %0
  br i1 %11, label %47, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %4, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %17, %14
  br i1 %18, label %19, label %31

19:                                               ; preds = %12
  %20 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %21 = load i64*, i64** %20, align 8
  %22 = icmp eq i64* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast i64* %21 to i8*
  call void @_ZdaPv(i8* %24) #8
  br label %25

25:                                               ; preds = %23, %19
  store i32 %14, i32* %16, align 8
  %26 = zext i32 %14 to i64
  %27 = shl nuw nsw i64 %26, 3
  %28 = call i8* @_Znam(i64 %27) #8
  %29 = bitcast i64** %20 to i8**
  store i8* %28, i8** %29, align 8
  %30 = load i32, i32* %15, align 4
  br label %31

31:                                               ; preds = %25, %12
  %32 = phi i32 [ %14, %12 ], [ %30, %25 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %47, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %43, %36 ]
  %38 = load i64*, i64** %10, align 8
  %39 = getelementptr inbounds i64, i64* %38, i64 %37
  %40 = load i64, i64* %39, align 8
  %41 = load i64*, i64** %35, align 8
  %42 = getelementptr inbounds i64, i64* %41, i64 %37
  store i64 %40, i64* %42, align 8
  %43 = add nuw nsw i64 %37, 1
  %44 = load i32, i32* %15, align 4
  %45 = zext i32 %44 to i64
  %46 = icmp ult i64 %43, %45
  br i1 %46, label %36, label %47

47:                                               ; preds = %36, %8, %31
  %48 = load i64*, i64** %10, align 8
  %49 = icmp eq i64* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = bitcast i64* %48 to i8*
  call void @_ZdaPv(i8* %51) #8
  br label %52

52:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #7
  br label %211

53:                                               ; preds = %3
  %54 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %2, i64 0, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %93

59:                                               ; preds = %53
  %60 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 %58, i32* %60, align 4
  %61 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp ult i32 %62, %58
  br i1 %63, label %64, label %76

64:                                               ; preds = %59
  %65 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  %69 = bitcast i64* %66 to i8*
  tail call void @_ZdaPv(i8* %69) #8
  br label %70

70:                                               ; preds = %68, %64
  store i32 %58, i32* %61, align 8
  %71 = zext i32 %58 to i64
  %72 = shl nuw nsw i64 %71, 3
  %73 = tail call i8* @_Znam(i64 %72) #8
  %74 = bitcast i64** %65 to i8**
  store i8* %73, i8** %74, align 8
  %75 = load i32, i32* %60, align 4
  br label %76

76:                                               ; preds = %70, %59
  %77 = phi i32 [ %58, %59 ], [ %75, %70 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %211, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 2
  %81 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  br label %82

82:                                               ; preds = %82, %79
  %83 = phi i64 [ 0, %79 ], [ %89, %82 ]
  %84 = load i64*, i64** %80, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 %83
  %86 = load i64, i64* %85, align 8
  %87 = load i64*, i64** %81, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 %83
  store i64 %86, i64* %88, align 8
  %89 = add nuw nsw i64 %83, 1
  %90 = load i32, i32* %60, align 4
  %91 = zext i32 %90 to i64
  %92 = icmp ult i64 %89, %91
  br i1 %92, label %82, label %211

93:                                               ; preds = %53
  %94 = icmp ult i32 %58, %55
  br i1 %94, label %95, label %96

95:                                               ; preds = %93
  tail call void @abort() #9
  unreachable

96:                                               ; preds = %93
  %97 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 %58, i32* %97, align 4
  %98 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = icmp ult i32 %99, %58
  br i1 %100, label %101, label %112

101:                                              ; preds = %96
  %102 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %103 = load i64*, i64** %102, align 8
  %104 = icmp eq i64* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %101
  %106 = bitcast i64* %103 to i8*
  tail call void @_ZdaPv(i8* %106) #8
  br label %107

107:                                              ; preds = %105, %101
  store i32 %58, i32* %98, align 8
  %108 = zext i32 %58 to i64
  %109 = shl nuw nsw i64 %108, 3
  %110 = tail call i8* @_Znam(i64 %109) #8
  %111 = bitcast i64** %102 to i8**
  store i8* %110, i8** %111, align 8
  br label %112

112:                                              ; preds = %96, %107
  %113 = load i32, i32* %54, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %112
  %116 = load i32, i32* %57, align 4
  br label %173

117:                                              ; preds = %112
  %118 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 2
  %119 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %2, i64 0, i32 0, i32 2
  %120 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  br label %130

121:                                              ; preds = %146
  %122 = trunc i64 %152 to i32
  %123 = load i32, i32* %57, align 4
  %124 = icmp ugt i32 %123, %122
  %125 = and i1 %147, %124
  br i1 %125, label %126, label %172

126:                                              ; preds = %121
  %127 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 2
  %128 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %129 = and i64 %152, 4294967295
  br label %156

130:                                              ; preds = %117, %146
  %131 = phi i64 [ 0, %117 ], [ %152, %146 ]
  %132 = phi i8 [ 0, %117 ], [ %151, %146 ]
  %133 = load i64*, i64** %118, align 8
  %134 = getelementptr inbounds i64, i64* %133, i64 %131
  %135 = load i64, i64* %134, align 8
  %136 = load i64*, i64** %119, align 8
  %137 = getelementptr inbounds i64, i64* %136, i64 %131
  %138 = load i64, i64* %137, align 8
  %139 = sub i64 %135, %138
  %140 = icmp ult i64 %135, %138
  %141 = icmp eq i8 %132, 0
  br i1 %141, label %146, label %142

142:                                              ; preds = %130
  %143 = icmp eq i64 %139, 0
  %144 = or i1 %140, %143
  %145 = add i64 %139, -1
  br label %146

146:                                              ; preds = %130, %142
  %147 = phi i1 [ %144, %142 ], [ %140, %130 ]
  %148 = phi i64 [ %145, %142 ], [ %139, %130 ]
  %149 = load i64*, i64** %120, align 8
  %150 = getelementptr inbounds i64, i64* %149, i64 %131
  store i64 %148, i64* %150, align 8
  %151 = zext i1 %147 to i8
  %152 = add nuw nsw i64 %131, 1
  %153 = load i32, i32* %54, align 4
  %154 = zext i32 %153 to i64
  %155 = icmp ult i64 %152, %154
  br i1 %155, label %130, label %121

156:                                              ; preds = %126, %156
  %157 = phi i64 [ %129, %126 ], [ %165, %156 ]
  %158 = load i64*, i64** %127, align 8
  %159 = getelementptr inbounds i64, i64* %158, i64 %157
  %160 = load i64, i64* %159, align 8
  %161 = icmp eq i64 %160, 0
  %162 = add i64 %160, -1
  %163 = load i64*, i64** %128, align 8
  %164 = getelementptr inbounds i64, i64* %163, i64 %157
  store i64 %162, i64* %164, align 8
  %165 = add nuw nsw i64 %157, 1
  %166 = load i32, i32* %57, align 4
  %167 = zext i32 %166 to i64
  %168 = icmp ult i64 %165, %167
  %169 = and i1 %161, %168
  br i1 %169, label %156, label %170

170:                                              ; preds = %156
  %171 = trunc i64 %165 to i32
  br i1 %161, label %181, label %173

172:                                              ; preds = %121
  br i1 %147, label %181, label %173

173:                                              ; preds = %170, %115, %172
  %174 = phi i32 [ 0, %115 ], [ %122, %172 ], [ %171, %170 ]
  %175 = phi i32 [ %116, %115 ], [ %123, %172 ], [ %166, %170 ]
  %176 = icmp ult i32 %174, %175
  br i1 %176, label %177, label %193

177:                                              ; preds = %173
  %178 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 2
  %179 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %180 = zext i32 %174 to i64
  br label %182

181:                                              ; preds = %170, %172
  store i32 0, i32* %97, align 4
  tail call void @abort() #9
  unreachable

182:                                              ; preds = %177, %182
  %183 = phi i64 [ %180, %177 ], [ %189, %182 ]
  %184 = load i64*, i64** %178, align 8
  %185 = getelementptr inbounds i64, i64* %184, i64 %183
  %186 = load i64, i64* %185, align 8
  %187 = load i64*, i64** %179, align 8
  %188 = getelementptr inbounds i64, i64* %187, i64 %183
  store i64 %186, i64* %188, align 8
  %189 = add nuw nsw i64 %183, 1
  %190 = load i32, i32* %57, align 4
  %191 = zext i32 %190 to i64
  %192 = icmp ult i64 %189, %191
  br i1 %192, label %182, label %193

193:                                              ; preds = %182, %173
  %194 = load i32, i32* %97, align 4
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %211, label %196

196:                                              ; preds = %193
  %197 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %198 = zext i32 %194 to i64
  %199 = load i64*, i64** %197, align 8
  br label %200

200:                                              ; preds = %208, %196
  %201 = phi i64 [ %198, %196 ], [ %210, %208 ]
  %202 = trunc i64 %201 to i32
  %203 = add i32 %202, -1
  %204 = zext i32 %203 to i64
  %205 = getelementptr inbounds i64, i64* %199, i64 %204
  %206 = load i64, i64* %205, align 8
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %208, label %211

208:                                              ; preds = %200
  store i32 %203, i32* %97, align 4
  %209 = icmp eq i32 %203, 0
  %210 = add nsw i64 %201, -1
  br i1 %209, label %211, label %200

211:                                              ; preds = %208, %200, %82, %193, %76, %52
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11BigUnsigned8multiplyERKS_S1_(%class.BigUnsigned*, %class.BigUnsigned* readonly dereferenceable(16), %class.BigUnsigned* readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.BigUnsigned, align 8
  %5 = icmp eq %class.BigUnsigned* %0, %1
  %6 = icmp eq %class.BigUnsigned* %0, %2
  %7 = or i1 %5, %6
  br i1 %7, label %8, label %53

8:                                                ; preds = %3
  %9 = bitcast %class.BigUnsigned* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #7
  %10 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %4, i64 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #7
  call void @_ZN11BigUnsigned8multiplyERKS_S1_(%class.BigUnsigned* nonnull %4, %class.BigUnsigned* dereferenceable(16) %1, %class.BigUnsigned* dereferenceable(16) %2)
  %11 = icmp eq %class.BigUnsigned* %4, %0
  br i1 %11, label %47, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %4, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %17, %14
  br i1 %18, label %19, label %31

19:                                               ; preds = %12
  %20 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %21 = load i64*, i64** %20, align 8
  %22 = icmp eq i64* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast i64* %21 to i8*
  call void @_ZdaPv(i8* %24) #8
  br label %25

25:                                               ; preds = %23, %19
  store i32 %14, i32* %16, align 8
  %26 = zext i32 %14 to i64
  %27 = shl nuw nsw i64 %26, 3
  %28 = call i8* @_Znam(i64 %27) #8
  %29 = bitcast i64** %20 to i8**
  store i8* %28, i8** %29, align 8
  %30 = load i32, i32* %15, align 4
  br label %31

31:                                               ; preds = %25, %12
  %32 = phi i32 [ %14, %12 ], [ %30, %25 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %47, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %43, %36 ]
  %38 = load i64*, i64** %10, align 8
  %39 = getelementptr inbounds i64, i64* %38, i64 %37
  %40 = load i64, i64* %39, align 8
  %41 = load i64*, i64** %35, align 8
  %42 = getelementptr inbounds i64, i64* %41, i64 %37
  store i64 %40, i64* %42, align 8
  %43 = add nuw nsw i64 %37, 1
  %44 = load i32, i32* %15, align 4
  %45 = zext i32 %44 to i64
  %46 = icmp ult i64 %43, %45
  br i1 %46, label %36, label %47

47:                                               ; preds = %36, %8, %31
  %48 = load i64*, i64** %10, align 8
  %49 = icmp eq i64* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = bitcast i64* %48 to i8*
  call void @_ZdaPv(i8* %51) #8
  br label %52

52:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #7
  br label %197

53:                                               ; preds = %3
  %54 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %2, i64 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %57, %53
  %62 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %62, align 4
  br label %197

63:                                               ; preds = %57
  %64 = add i32 %59, %55
  %65 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 %64, i32* %65, align 4
  %66 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = icmp ult i32 %67, %64
  br i1 %68, label %69, label %81

69:                                               ; preds = %63
  %70 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %71 = load i64*, i64** %70, align 8
  %72 = icmp eq i64* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  %74 = bitcast i64* %71 to i8*
  tail call void @_ZdaPv(i8* %74) #8
  br label %75

75:                                               ; preds = %73, %69
  store i32 %64, i32* %66, align 8
  %76 = zext i32 %64 to i64
  %77 = shl nuw nsw i64 %76, 3
  %78 = tail call i8* @_Znam(i64 %77) #8
  %79 = bitcast i64** %70 to i8**
  store i8* %78, i8** %79, align 8
  %80 = load i32, i32* %65, align 4
  br label %81

81:                                               ; preds = %63, %75
  %82 = phi i32 [ %64, %63 ], [ %80, %75 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  br label %94

86:                                               ; preds = %94, %81
  %87 = phi i32 [ 0, %81 ], [ %99, %94 ]
  %88 = load i32, i32* %54, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %187, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 2
  %92 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %93 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %2, i64 0, i32 0, i32 2
  br label %102

94:                                               ; preds = %84, %94
  %95 = phi i64 [ 0, %84 ], [ %98, %94 ]
  %96 = load i64*, i64** %85, align 8
  %97 = getelementptr inbounds i64, i64* %96, i64 %95
  store i64 0, i64* %97, align 8
  %98 = add nuw nsw i64 %95, 1
  %99 = load i32, i32* %65, align 4
  %100 = zext i32 %99 to i64
  %101 = icmp ult i64 %98, %100
  br i1 %101, label %94, label %86

102:                                              ; preds = %90, %180
  %103 = phi i64 [ 0, %90 ], [ %181, %180 ]
  %104 = trunc i64 %103 to i32
  br label %105

105:                                              ; preds = %177, %102
  %106 = phi i64 [ 0, %102 ], [ %178, %177 ]
  %107 = load i64*, i64** %91, align 8
  %108 = getelementptr inbounds i64, i64* %107, i64 %103
  %109 = load i64, i64* %108, align 8
  %110 = shl i64 1, %106
  %111 = and i64 %109, %110
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %177, label %113

113:                                              ; preds = %105
  %114 = load i32, i32* %58, align 4
  %115 = icmp eq i64 %106, 0
  %116 = sub nuw nsw i64 64, %106
  br label %120

117:                                              ; preds = %157
  br i1 %159, label %118, label %177

118:                                              ; preds = %117
  %119 = load i64*, i64** %92, align 8
  br label %165

120:                                              ; preds = %113, %157
  %121 = phi i32 [ %114, %113 ], [ %163, %157 ]
  %122 = phi i8 [ 0, %113 ], [ %160, %157 ]
  %123 = phi i32 [ %104, %113 ], [ %162, %157 ]
  %124 = phi i32 [ 0, %113 ], [ %161, %157 ]
  %125 = load i64*, i64** %92, align 8
  %126 = zext i32 %123 to i64
  %127 = getelementptr inbounds i64, i64* %125, i64 %126
  %128 = load i64, i64* %127, align 8
  %129 = icmp eq i32 %124, 0
  %130 = or i1 %115, %129
  br i1 %130, label %138, label %131

131:                                              ; preds = %120
  %132 = load i64*, i64** %93, align 8
  %133 = add i32 %124, -1
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds i64, i64* %132, i64 %134
  %136 = load i64, i64* %135, align 8
  %137 = lshr i64 %136, %116
  br label %138

138:                                              ; preds = %131, %120
  %139 = phi i64 [ %137, %131 ], [ 0, %120 ]
  %140 = icmp eq i32 %121, %124
  br i1 %140, label %147, label %141

141:                                              ; preds = %138
  %142 = load i64*, i64** %93, align 8
  %143 = zext i32 %124 to i64
  %144 = getelementptr inbounds i64, i64* %142, i64 %143
  %145 = load i64, i64* %144, align 8
  %146 = shl i64 %145, %106
  br label %147

147:                                              ; preds = %138, %141
  %148 = phi i64 [ %146, %141 ], [ 0, %138 ]
  %149 = or i64 %148, %139
  %150 = add i64 %149, %128
  %151 = icmp ult i64 %150, %128
  %152 = icmp eq i8 %122, 0
  br i1 %152, label %157, label %153

153:                                              ; preds = %147
  %154 = add i64 %150, 1
  %155 = icmp eq i64 %154, 0
  %156 = or i1 %151, %155
  br label %157

157:                                              ; preds = %147, %153
  %158 = phi i64 [ %154, %153 ], [ %150, %147 ]
  %159 = phi i1 [ %156, %153 ], [ %151, %147 ]
  store i64 %158, i64* %127, align 8
  %160 = zext i1 %159 to i8
  %161 = add i32 %124, 1
  %162 = add i32 %123, 1
  %163 = load i32, i32* %58, align 4
  %164 = icmp ugt i32 %161, %163
  br i1 %164, label %117, label %120

165:                                              ; preds = %118, %165
  %166 = phi i64* [ %172, %165 ], [ %119, %118 ]
  %167 = phi i32 [ %176, %165 ], [ %162, %118 ]
  %168 = zext i32 %167 to i64
  %169 = getelementptr inbounds i64, i64* %166, i64 %168
  %170 = load i64, i64* %169, align 8
  %171 = add i64 %170, 1
  store i64 %171, i64* %169, align 8
  %172 = load i64*, i64** %92, align 8
  %173 = getelementptr inbounds i64, i64* %172, i64 %168
  %174 = load i64, i64* %173, align 8
  %175 = icmp eq i64 %174, 0
  %176 = add i32 %167, 1
  br i1 %175, label %165, label %177

177:                                              ; preds = %165, %117, %105
  %178 = add nuw nsw i64 %106, 1
  %179 = icmp eq i64 %178, 64
  br i1 %179, label %180, label %105

180:                                              ; preds = %177
  %181 = add nuw nsw i64 %103, 1
  %182 = load i32, i32* %54, align 4
  %183 = zext i32 %182 to i64
  %184 = icmp ult i64 %181, %183
  br i1 %184, label %102, label %185

185:                                              ; preds = %180
  %186 = load i32, i32* %65, align 4
  br label %187

187:                                              ; preds = %185, %86
  %188 = phi i32 [ %186, %185 ], [ %87, %86 ]
  %189 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %190 = load i64*, i64** %189, align 8
  %191 = add i32 %188, -1
  %192 = zext i32 %191 to i64
  %193 = getelementptr inbounds i64, i64* %190, i64 %192
  %194 = load i64, i64* %193, align 8
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %187
  store i32 %191, i32* %65, align 4
  br label %197

197:                                              ; preds = %187, %196, %61, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11BigUnsigned19divideWithRemainderERKS_RS_(%class.BigUnsigned*, %class.BigUnsigned* readonly dereferenceable(16), %class.BigUnsigned* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.BigUnsigned, align 8
  %5 = icmp eq %class.BigUnsigned* %0, %2
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @abort() #9
  unreachable

7:                                                ; preds = %3
  %8 = icmp eq %class.BigUnsigned* %0, %1
  %9 = icmp eq %class.BigUnsigned* %2, %1
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %59

11:                                               ; preds = %7
  %12 = bitcast %class.BigUnsigned* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #7
  %13 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %4, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %4, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %4, i64 0, i32 0, i32 2
  %16 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %14, align 4
  store i32 %17, i32* %13, align 8
  %18 = zext i32 %17 to i64
  %19 = shl nuw nsw i64 %18, 3
  %20 = tail call i8* @_Znam(i64 %19) #8
  %21 = bitcast i64** %15 to i8**
  store i8* %20, i8** %21, align 8
  %22 = icmp eq i32 %17, 0
  br i1 %22, label %53, label %23

23:                                               ; preds = %11
  %24 = bitcast i8* %20 to i64*
  %25 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 2
  %26 = load i64*, i64** %25, align 8
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %24, align 8
  %28 = icmp eq i32 %17, 1
  br i1 %28, label %53, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds i64, i64* %26, i64 1
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds i8, i8* %20, i64 8
  %33 = bitcast i8* %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = icmp ugt i32 %17, 2
  br i1 %34, label %35, label %53

35:                                               ; preds = %29
  %36 = getelementptr inbounds i64, i64* %26, i64 2
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds i8, i8* %20, i64 16
  %39 = bitcast i8* %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = load i32, i32* %14, align 4
  %41 = icmp ugt i32 %40, 3
  br i1 %41, label %42, label %53

42:                                               ; preds = %35, %42
  %43 = phi i64 [ %49, %42 ], [ 3, %35 ]
  %44 = load i64*, i64** %15, align 8
  %45 = load i64*, i64** %25, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 %43
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds i64, i64* %44, i64 %43
  store i64 %47, i64* %48, align 8
  %49 = add nuw nsw i64 %43, 1
  %50 = load i32, i32* %14, align 4
  %51 = zext i32 %50 to i64
  %52 = icmp ult i64 %49, %51
  br i1 %52, label %42, label %53

53:                                               ; preds = %42, %35, %29, %11, %23
  call void @_ZN11BigUnsigned19divideWithRemainderERKS_RS_(%class.BigUnsigned* %0, %class.BigUnsigned* nonnull dereferenceable(16) %4, %class.BigUnsigned* dereferenceable(16) %2)
  %54 = load i64*, i64** %15, align 8
  %55 = icmp eq i64* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  %57 = bitcast i64* %54 to i8*
  call void @_ZdaPv(i8* %57) #8
  br label %58

58:                                               ; preds = %53, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #7
  br label %331

59:                                               ; preds = %7
  %60 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %59
  %64 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %2, i64 0, i32 0, i32 1
  store i32 0, i32* %64, align 4
  br label %331

65:                                               ; preds = %59
  %66 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = icmp ult i32 %67, %61
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %2, i64 0, i32 0, i32 1
  store i32 0, i32* %70, align 4
  br label %331

71:                                               ; preds = %65
  %72 = add i32 %67, 1
  %73 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = icmp ult i32 %74, %72
  br i1 %75, label %76, label %111

76:                                               ; preds = %71
  %77 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %78 = load i64*, i64** %77, align 8
  store i32 %72, i32* %73, align 8
  %79 = zext i32 %72 to i64
  %80 = shl nuw nsw i64 %79, 3
  %81 = tail call i8* @_Znam(i64 %80) #8
  %82 = bitcast i64** %77 to i8**
  store i8* %81, i8** %82, align 8
  %83 = icmp eq i32 %67, 0
  br i1 %83, label %105, label %84

84:                                               ; preds = %76
  %85 = bitcast i8* %81 to i64*
  %86 = load i64, i64* %78, align 8
  store i64 %86, i64* %85, align 8
  %87 = icmp eq i32 %67, 1
  br i1 %87, label %105, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds i64, i64* %78, i64 1
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds i8, i8* %81, i64 8
  %92 = bitcast i8* %91 to i64*
  store i64 %90, i64* %92, align 8
  %93 = load i32, i32* %66, align 4
  %94 = icmp ugt i32 %93, 2
  br i1 %94, label %95, label %105

95:                                               ; preds = %88, %95
  %96 = phi i64 [ %101, %95 ], [ 2, %88 ]
  %97 = load i64*, i64** %77, align 8
  %98 = getelementptr inbounds i64, i64* %78, i64 %96
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds i64, i64* %97, i64 %96
  store i64 %99, i64* %100, align 8
  %101 = add nuw nsw i64 %96, 1
  %102 = load i32, i32* %66, align 4
  %103 = zext i32 %102 to i64
  %104 = icmp ult i64 %101, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88, %84, %76
  %106 = phi i32 [ 1, %84 ], [ 0, %76 ], [ %93, %88 ], [ %102, %95 ]
  %107 = icmp eq i64* %78, null
  br i1 %107, label %111, label %108

108:                                              ; preds = %105
  %109 = bitcast i64* %78 to i8*
  tail call void @_ZdaPv(i8* %109) #8
  %110 = load i32, i32* %66, align 4
  br label %111

111:                                              ; preds = %71, %105, %108
  %112 = phi i32 [ %67, %71 ], [ %106, %105 ], [ %110, %108 ]
  %113 = add i32 %112, 1
  store i32 %113, i32* %66, align 4
  %114 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %115 = load i64*, i64** %114, align 8
  %116 = zext i32 %67 to i64
  %117 = getelementptr inbounds i64, i64* %115, i64 %116
  store i64 0, i64* %117, align 8
  %118 = load i32, i32* %66, align 4
  %119 = zext i32 %118 to i64
  %120 = shl nuw nsw i64 %119, 3
  %121 = tail call i8* @_Znam(i64 %120) #8
  %122 = bitcast i8* %121 to i64*
  %123 = load i32, i32* %60, align 4
  %124 = sub i32 %67, %123
  %125 = add i32 %124, 1
  %126 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %2, i64 0, i32 0, i32 1
  store i32 %125, i32* %126, align 4
  %127 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %2, i64 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = icmp ult i32 %128, %125
  br i1 %129, label %130, label %143

130:                                              ; preds = %111
  %131 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %2, i64 0, i32 0, i32 2
  %132 = load i64*, i64** %131, align 8
  %133 = icmp eq i64* %132, null
  br i1 %133, label %137, label %134

134:                                              ; preds = %130
  %135 = bitcast i64* %132 to i8*
  tail call void @_ZdaPv(i8* %135) #8
  %136 = load i32, i32* %126, align 4
  br label %137

137:                                              ; preds = %134, %130
  %138 = phi i32 [ %136, %134 ], [ %125, %130 ]
  store i32 %125, i32* %127, align 8
  %139 = zext i32 %125 to i64
  %140 = shl nuw nsw i64 %139, 3
  %141 = tail call i8* @_Znam(i64 %140) #8
  %142 = bitcast i64** %131 to i8**
  store i8* %141, i8** %142, align 8
  br label %143

143:                                              ; preds = %111, %137
  %144 = phi i32 [ %125, %111 ], [ %138, %137 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %303, label %146

146:                                              ; preds = %143
  %147 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %2, i64 0, i32 0, i32 2
  br label %155

148:                                              ; preds = %155
  %149 = icmp eq i32 %160, 0
  br i1 %149, label %303, label %150

150:                                              ; preds = %148
  %151 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %2, i64 0, i32 0, i32 2
  %152 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 2
  %153 = zext i32 %160 to i64
  %154 = sub i32 1, %160
  br label %167

155:                                              ; preds = %146, %155
  %156 = phi i64 [ 0, %146 ], [ %159, %155 ]
  %157 = load i64*, i64** %147, align 8
  %158 = getelementptr inbounds i64, i64* %157, i64 %156
  store i64 0, i64* %158, align 8
  %159 = add nuw nsw i64 %156, 1
  %160 = load i32, i32* %126, align 4
  %161 = zext i32 %160 to i64
  %162 = icmp ult i64 %159, %161
  br i1 %162, label %155, label %148

163:                                              ; preds = %300
  %164 = icmp eq i32 %173, 0
  %165 = add nsw i64 %169, -1
  %166 = add i32 %168, 1
  br i1 %164, label %301, label %167

167:                                              ; preds = %150, %163
  %168 = phi i32 [ 0, %150 ], [ %166, %163 ]
  %169 = phi i64 [ %153, %150 ], [ %165, %163 ]
  %170 = add i32 %154, %168
  %171 = sub i32 %168, %160
  %172 = trunc i64 %169 to i32
  %173 = add i32 %172, -1
  %174 = load i64*, i64** %151, align 8
  %175 = zext i32 %173 to i64
  %176 = getelementptr inbounds i64, i64* %174, i64 %175
  store i64 0, i64* %176, align 8
  br label %177

177:                                              ; preds = %167, %300
  %178 = phi i64 [ 64, %167 ], [ %179, %300 ]
  %179 = add nsw i64 %178, -1
  %180 = load i32, i32* %60, align 4
  %181 = icmp eq i64 %179, 0
  %182 = sub nuw nsw i64 65, %178
  %183 = load i64*, i64** %114, align 8
  br label %189

184:                                              ; preds = %214
  %185 = icmp ult i32 %227, %67
  %186 = and i1 %185, %223
  br i1 %186, label %187, label %241

187:                                              ; preds = %184
  %188 = zext i32 %227 to i64
  br label %229

189:                                              ; preds = %177, %214
  %190 = phi i8 [ 0, %177 ], [ %225, %214 ]
  %191 = phi i32 [ %173, %177 ], [ %227, %214 ]
  %192 = phi i32 [ 0, %177 ], [ %226, %214 ]
  %193 = zext i32 %191 to i64
  %194 = getelementptr inbounds i64, i64* %183, i64 %193
  %195 = load i64, i64* %194, align 8
  %196 = icmp eq i32 %192, 0
  %197 = or i1 %181, %196
  br i1 %197, label %205, label %198

198:                                              ; preds = %189
  %199 = load i64*, i64** %152, align 8
  %200 = add i32 %192, -1
  %201 = zext i32 %200 to i64
  %202 = getelementptr inbounds i64, i64* %199, i64 %201
  %203 = load i64, i64* %202, align 8
  %204 = lshr i64 %203, %182
  br label %205

205:                                              ; preds = %198, %189
  %206 = phi i64 [ %204, %198 ], [ 0, %189 ]
  %207 = icmp eq i32 %180, %192
  br i1 %207, label %214, label %208

208:                                              ; preds = %205
  %209 = load i64*, i64** %152, align 8
  %210 = zext i32 %192 to i64
  %211 = getelementptr inbounds i64, i64* %209, i64 %210
  %212 = load i64, i64* %211, align 8
  %213 = shl i64 %212, %179
  br label %214

214:                                              ; preds = %205, %208
  %215 = phi i64 [ %213, %208 ], [ 0, %205 ]
  %216 = or i64 %215, %206
  %217 = sub i64 %195, %216
  %218 = icmp ult i64 %195, %216
  %219 = icmp eq i8 %190, 0
  %220 = add i64 %217, -1
  %221 = icmp uge i64 %220, %195
  %222 = select i1 %219, i64 %217, i64 %220
  %223 = select i1 %219, i1 %218, i1 %221
  %224 = getelementptr inbounds i64, i64* %122, i64 %193
  store i64 %222, i64* %224, align 8
  %225 = zext i1 %223 to i8
  %226 = add i32 %192, 1
  %227 = add i32 %191, 1
  %228 = icmp ugt i32 %226, %180
  br i1 %228, label %184, label %189

229:                                              ; preds = %187, %229
  %230 = phi i64 [ %188, %187 ], [ %236, %229 ]
  %231 = getelementptr inbounds i64, i64* %183, i64 %230
  %232 = load i64, i64* %231, align 8
  %233 = icmp eq i64 %232, 0
  %234 = add i64 %232, -1
  %235 = getelementptr inbounds i64, i64* %122, i64 %230
  store i64 %234, i64* %235, align 8
  %236 = add nuw nsw i64 %230, 1
  %237 = icmp ult i64 %236, %116
  %238 = and i1 %237, %233
  br i1 %238, label %229, label %239

239:                                              ; preds = %229
  %240 = trunc i64 %236 to i32
  br i1 %233, label %300, label %242

241:                                              ; preds = %184
  br i1 %223, label %300, label %242

242:                                              ; preds = %239, %241
  %243 = phi i32 [ %240, %239 ], [ %227, %241 ]
  %244 = shl i64 1, %179
  %245 = load i64*, i64** %151, align 8
  %246 = getelementptr inbounds i64, i64* %245, i64 %175
  %247 = load i64, i64* %246, align 8
  %248 = or i64 %247, %244
  store i64 %248, i64* %246, align 8
  %249 = icmp ugt i32 %243, %173
  br i1 %249, label %250, label %300

250:                                              ; preds = %242
  %251 = zext i32 %243 to i64
  %252 = add i32 %170, %243
  %253 = add i32 %171, %243
  %254 = and i32 %252, 3
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %268, label %256

256:                                              ; preds = %250, %256
  %257 = phi i64 [ %265, %256 ], [ %251, %250 ]
  %258 = phi i32 [ %266, %256 ], [ %254, %250 ]
  %259 = add i64 %257, 4294967295
  %260 = and i64 %259, 4294967295
  %261 = getelementptr inbounds i64, i64* %122, i64 %260
  %262 = load i64, i64* %261, align 8
  %263 = load i64*, i64** %114, align 8
  %264 = getelementptr inbounds i64, i64* %263, i64 %260
  store i64 %262, i64* %264, align 8
  %265 = add nsw i64 %257, -1
  %266 = add i32 %258, -1
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %256, !llvm.loop !5

268:                                              ; preds = %256, %250
  %269 = phi i64 [ %251, %250 ], [ %265, %256 ]
  %270 = icmp ult i32 %253, 3
  br i1 %270, label %300, label %271

271:                                              ; preds = %268, %271
  %272 = phi i64 [ %299, %271 ], [ %269, %268 ]
  %273 = add i64 %272, 4294967295
  %274 = and i64 %273, 4294967295
  %275 = getelementptr inbounds i64, i64* %122, i64 %274
  %276 = load i64, i64* %275, align 8
  %277 = load i64*, i64** %114, align 8
  %278 = getelementptr inbounds i64, i64* %277, i64 %274
  store i64 %276, i64* %278, align 8
  %279 = add i64 %272, 4294967294
  %280 = and i64 %279, 4294967295
  %281 = getelementptr inbounds i64, i64* %122, i64 %280
  %282 = load i64, i64* %281, align 8
  %283 = load i64*, i64** %114, align 8
  %284 = getelementptr inbounds i64, i64* %283, i64 %280
  store i64 %282, i64* %284, align 8
  %285 = add i64 %272, 4294967293
  %286 = and i64 %285, 4294967295
  %287 = getelementptr inbounds i64, i64* %122, i64 %286
  %288 = load i64, i64* %287, align 8
  %289 = load i64*, i64** %114, align 8
  %290 = getelementptr inbounds i64, i64* %289, i64 %286
  store i64 %288, i64* %290, align 8
  %291 = trunc i64 %272 to i32
  %292 = add i32 %291, -4
  %293 = zext i32 %292 to i64
  %294 = getelementptr inbounds i64, i64* %122, i64 %293
  %295 = load i64, i64* %294, align 8
  %296 = load i64*, i64** %114, align 8
  %297 = getelementptr inbounds i64, i64* %296, i64 %293
  store i64 %295, i64* %297, align 8
  %298 = icmp ugt i32 %292, %173
  %299 = add nsw i64 %272, -4
  br i1 %298, label %271, label %300

300:                                              ; preds = %268, %271, %239, %242, %241
  br i1 %181, label %163, label %177

301:                                              ; preds = %163
  %302 = load i32, i32* %126, align 4
  br label %303

303:                                              ; preds = %143, %301, %148
  %304 = phi i32 [ %302, %301 ], [ %160, %148 ], [ 0, %143 ]
  %305 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %2, i64 0, i32 0, i32 2
  %306 = load i64*, i64** %305, align 8
  %307 = add i32 %304, -1
  %308 = zext i32 %307 to i64
  %309 = getelementptr inbounds i64, i64* %306, i64 %308
  %310 = load i64, i64* %309, align 8
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %313

312:                                              ; preds = %303
  store i32 %307, i32* %126, align 4
  br label %313

313:                                              ; preds = %312, %303
  %314 = load i32, i32* %66, align 4
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %330, label %316

316:                                              ; preds = %313
  %317 = zext i32 %314 to i64
  %318 = load i64*, i64** %114, align 8
  br label %319

319:                                              ; preds = %327, %316
  %320 = phi i64 [ %317, %316 ], [ %329, %327 ]
  %321 = trunc i64 %320 to i32
  %322 = add i32 %321, -1
  %323 = zext i32 %322 to i64
  %324 = getelementptr inbounds i64, i64* %318, i64 %323
  %325 = load i64, i64* %324, align 8
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %327, label %330

327:                                              ; preds = %319
  store i32 %322, i32* %66, align 4
  %328 = icmp eq i32 %322, 0
  %329 = add nsw i64 %320, -1
  br i1 %328, label %330, label %319

330:                                              ; preds = %319, %327, %313
  tail call void @_ZdaPv(i8* nonnull %121) #8
  br label %331

331:                                              ; preds = %330, %69, %63, %58
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11BigUnsigned6bitAndERKS_S1_(%class.BigUnsigned*, %class.BigUnsigned* readonly dereferenceable(16), %class.BigUnsigned* readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.BigUnsigned, align 8
  %5 = icmp eq %class.BigUnsigned* %0, %1
  %6 = icmp eq %class.BigUnsigned* %0, %2
  %7 = or i1 %5, %6
  br i1 %7, label %8, label %53

8:                                                ; preds = %3
  %9 = bitcast %class.BigUnsigned* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #7
  %10 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %4, i64 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #7
  call void @_ZN11BigUnsigned6bitAndERKS_S1_(%class.BigUnsigned* nonnull %4, %class.BigUnsigned* dereferenceable(16) %1, %class.BigUnsigned* dereferenceable(16) %2)
  %11 = icmp eq %class.BigUnsigned* %4, %0
  br i1 %11, label %47, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %4, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %17, %14
  br i1 %18, label %19, label %31

19:                                               ; preds = %12
  %20 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %21 = load i64*, i64** %20, align 8
  %22 = icmp eq i64* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast i64* %21 to i8*
  call void @_ZdaPv(i8* %24) #8
  br label %25

25:                                               ; preds = %23, %19
  store i32 %14, i32* %16, align 8
  %26 = zext i32 %14 to i64
  %27 = shl nuw nsw i64 %26, 3
  %28 = call i8* @_Znam(i64 %27) #8
  %29 = bitcast i64** %20 to i8**
  store i8* %28, i8** %29, align 8
  %30 = load i32, i32* %15, align 4
  br label %31

31:                                               ; preds = %25, %12
  %32 = phi i32 [ %14, %12 ], [ %30, %25 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %47, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %43, %36 ]
  %38 = load i64*, i64** %10, align 8
  %39 = getelementptr inbounds i64, i64* %38, i64 %37
  %40 = load i64, i64* %39, align 8
  %41 = load i64*, i64** %35, align 8
  %42 = getelementptr inbounds i64, i64* %41, i64 %37
  store i64 %40, i64* %42, align 8
  %43 = add nuw nsw i64 %37, 1
  %44 = load i32, i32* %15, align 4
  %45 = zext i32 %44 to i64
  %46 = icmp ult i64 %43, %45
  br i1 %46, label %36, label %47

47:                                               ; preds = %36, %8, %31
  %48 = load i64*, i64** %10, align 8
  %49 = icmp eq i64* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = bitcast i64* %48 to i8*
  call void @_ZdaPv(i8* %51) #8
  br label %52

52:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #7
  br label %115

53:                                               ; preds = %3
  %54 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %2, i64 0, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp ult i32 %55, %57
  %59 = select i1 %58, i32 %55, i32 %57
  %60 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp ult i32 %62, %59
  br i1 %63, label %64, label %76

64:                                               ; preds = %53
  %65 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  %69 = bitcast i64* %66 to i8*
  tail call void @_ZdaPv(i8* %69) #8
  br label %70

70:                                               ; preds = %68, %64
  store i32 %59, i32* %61, align 8
  %71 = zext i32 %59 to i64
  %72 = shl nuw nsw i64 %71, 3
  %73 = tail call i8* @_Znam(i64 %72) #8
  %74 = bitcast i64** %65 to i8**
  store i8* %73, i8** %74, align 8
  %75 = load i32, i32* %60, align 4
  br label %76

76:                                               ; preds = %53, %70
  %77 = phi i32 [ %59, %53 ], [ %75, %70 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %115, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 2
  %81 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %2, i64 0, i32 0, i32 2
  %82 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  br label %83

83:                                               ; preds = %79, %83
  %84 = phi i64 [ 0, %79 ], [ %94, %83 ]
  %85 = load i64*, i64** %80, align 8
  %86 = getelementptr inbounds i64, i64* %85, i64 %84
  %87 = load i64, i64* %86, align 8
  %88 = load i64*, i64** %81, align 8
  %89 = getelementptr inbounds i64, i64* %88, i64 %84
  %90 = load i64, i64* %89, align 8
  %91 = and i64 %90, %87
  %92 = load i64*, i64** %82, align 8
  %93 = getelementptr inbounds i64, i64* %92, i64 %84
  store i64 %91, i64* %93, align 8
  %94 = add nuw nsw i64 %84, 1
  %95 = load i32, i32* %60, align 4
  %96 = zext i32 %95 to i64
  %97 = icmp ult i64 %94, %96
  br i1 %97, label %83, label %98

98:                                               ; preds = %83
  %99 = icmp eq i32 %95, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %102 = zext i32 %95 to i64
  %103 = load i64*, i64** %101, align 8
  br label %104

104:                                              ; preds = %112, %100
  %105 = phi i64 [ %102, %100 ], [ %114, %112 ]
  %106 = trunc i64 %105 to i32
  %107 = add i32 %106, -1
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i64, i64* %103, i64 %108
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %104
  store i32 %107, i32* %60, align 4
  %113 = icmp eq i32 %107, 0
  %114 = add nsw i64 %105, -1
  br i1 %113, label %115, label %104

115:                                              ; preds = %112, %104, %76, %98, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11BigUnsigned5bitOrERKS_S1_(%class.BigUnsigned*, %class.BigUnsigned* readonly dereferenceable(16), %class.BigUnsigned* readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.BigUnsigned, align 8
  %5 = icmp eq %class.BigUnsigned* %0, %1
  %6 = icmp eq %class.BigUnsigned* %0, %2
  %7 = or i1 %5, %6
  br i1 %7, label %8, label %53

8:                                                ; preds = %3
  %9 = bitcast %class.BigUnsigned* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #7
  %10 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %4, i64 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #7
  call void @_ZN11BigUnsigned5bitOrERKS_S1_(%class.BigUnsigned* nonnull %4, %class.BigUnsigned* dereferenceable(16) %1, %class.BigUnsigned* dereferenceable(16) %2)
  %11 = icmp eq %class.BigUnsigned* %4, %0
  br i1 %11, label %47, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %4, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %17, %14
  br i1 %18, label %19, label %31

19:                                               ; preds = %12
  %20 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %21 = load i64*, i64** %20, align 8
  %22 = icmp eq i64* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast i64* %21 to i8*
  call void @_ZdaPv(i8* %24) #8
  br label %25

25:                                               ; preds = %23, %19
  store i32 %14, i32* %16, align 8
  %26 = zext i32 %14 to i64
  %27 = shl nuw nsw i64 %26, 3
  %28 = call i8* @_Znam(i64 %27) #8
  %29 = bitcast i64** %20 to i8**
  store i8* %28, i8** %29, align 8
  %30 = load i32, i32* %15, align 4
  br label %31

31:                                               ; preds = %25, %12
  %32 = phi i32 [ %14, %12 ], [ %30, %25 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %47, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %43, %36 ]
  %38 = load i64*, i64** %10, align 8
  %39 = getelementptr inbounds i64, i64* %38, i64 %37
  %40 = load i64, i64* %39, align 8
  %41 = load i64*, i64** %35, align 8
  %42 = getelementptr inbounds i64, i64* %41, i64 %37
  store i64 %40, i64* %42, align 8
  %43 = add nuw nsw i64 %37, 1
  %44 = load i32, i32* %15, align 4
  %45 = zext i32 %44 to i64
  %46 = icmp ult i64 %43, %45
  br i1 %46, label %36, label %47

47:                                               ; preds = %36, %8, %31
  %48 = load i64*, i64** %10, align 8
  %49 = icmp eq i64* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = bitcast i64* %48 to i8*
  call void @_ZdaPv(i8* %51) #8
  br label %52

52:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #7
  br label %124

53:                                               ; preds = %3
  %54 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %2, i64 0, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp ult i32 %55, %57
  %59 = select i1 %58, %class.BigUnsigned* %2, %class.BigUnsigned* %1
  %60 = select i1 %58, %class.BigUnsigned* %1, %class.BigUnsigned* %2
  %61 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %59, i64 0, i32 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = icmp ult i32 %64, %62
  br i1 %65, label %66, label %77

66:                                               ; preds = %53
  %67 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %68 = load i64*, i64** %67, align 8
  %69 = icmp eq i64* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %66
  %71 = bitcast i64* %68 to i8*
  tail call void @_ZdaPv(i8* %71) #8
  br label %72

72:                                               ; preds = %70, %66
  store i32 %62, i32* %63, align 8
  %73 = zext i32 %62 to i64
  %74 = shl nuw nsw i64 %73, 3
  %75 = tail call i8* @_Znam(i64 %74) #8
  %76 = bitcast i64** %67 to i8**
  store i8* %75, i8** %76, align 8
  br label %77

77:                                               ; preds = %53, %72
  %78 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %60, i64 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %87, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %59, i64 0, i32 0, i32 2
  %83 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %60, i64 0, i32 0, i32 2
  %84 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  br label %95

85:                                               ; preds = %95
  %86 = trunc i64 %106 to i32
  br label %87

87:                                               ; preds = %85, %77
  %88 = phi i32 [ 0, %77 ], [ %86, %85 ]
  %89 = load i32, i32* %61, align 4
  %90 = icmp ult i32 %88, %89
  br i1 %90, label %91, label %121

91:                                               ; preds = %87
  %92 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %59, i64 0, i32 0, i32 2
  %93 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %94 = zext i32 %88 to i64
  br label %110

95:                                               ; preds = %81, %95
  %96 = phi i64 [ 0, %81 ], [ %106, %95 ]
  %97 = load i64*, i64** %82, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 %96
  %99 = load i64, i64* %98, align 8
  %100 = load i64*, i64** %83, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 %96
  %102 = load i64, i64* %101, align 8
  %103 = or i64 %102, %99
  %104 = load i64*, i64** %84, align 8
  %105 = getelementptr inbounds i64, i64* %104, i64 %96
  store i64 %103, i64* %105, align 8
  %106 = add nuw nsw i64 %96, 1
  %107 = load i32, i32* %78, align 4
  %108 = zext i32 %107 to i64
  %109 = icmp ult i64 %106, %108
  br i1 %109, label %95, label %85

110:                                              ; preds = %91, %110
  %111 = phi i64 [ %94, %91 ], [ %117, %110 ]
  %112 = load i64*, i64** %92, align 8
  %113 = getelementptr inbounds i64, i64* %112, i64 %111
  %114 = load i64, i64* %113, align 8
  %115 = load i64*, i64** %93, align 8
  %116 = getelementptr inbounds i64, i64* %115, i64 %111
  store i64 %114, i64* %116, align 8
  %117 = add nuw nsw i64 %111, 1
  %118 = load i32, i32* %61, align 4
  %119 = zext i32 %118 to i64
  %120 = icmp ult i64 %117, %119
  br i1 %120, label %110, label %121

121:                                              ; preds = %110, %87
  %122 = phi i32 [ %89, %87 ], [ %118, %110 ]
  %123 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 %122, i32* %123, align 4
  br label %124

124:                                              ; preds = %121, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11BigUnsigned6bitXorERKS_S1_(%class.BigUnsigned*, %class.BigUnsigned* readonly dereferenceable(16), %class.BigUnsigned* readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.BigUnsigned, align 8
  %5 = icmp eq %class.BigUnsigned* %0, %1
  %6 = icmp eq %class.BigUnsigned* %0, %2
  %7 = or i1 %5, %6
  br i1 %7, label %8, label %53

8:                                                ; preds = %3
  %9 = bitcast %class.BigUnsigned* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #7
  %10 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %4, i64 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #7
  call void @_ZN11BigUnsigned6bitXorERKS_S1_(%class.BigUnsigned* nonnull %4, %class.BigUnsigned* dereferenceable(16) %1, %class.BigUnsigned* dereferenceable(16) %2)
  %11 = icmp eq %class.BigUnsigned* %4, %0
  br i1 %11, label %47, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %4, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %17, %14
  br i1 %18, label %19, label %31

19:                                               ; preds = %12
  %20 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %21 = load i64*, i64** %20, align 8
  %22 = icmp eq i64* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast i64* %21 to i8*
  call void @_ZdaPv(i8* %24) #8
  br label %25

25:                                               ; preds = %23, %19
  store i32 %14, i32* %16, align 8
  %26 = zext i32 %14 to i64
  %27 = shl nuw nsw i64 %26, 3
  %28 = call i8* @_Znam(i64 %27) #8
  %29 = bitcast i64** %20 to i8**
  store i8* %28, i8** %29, align 8
  %30 = load i32, i32* %15, align 4
  br label %31

31:                                               ; preds = %25, %12
  %32 = phi i32 [ %14, %12 ], [ %30, %25 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %47, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %43, %36 ]
  %38 = load i64*, i64** %10, align 8
  %39 = getelementptr inbounds i64, i64* %38, i64 %37
  %40 = load i64, i64* %39, align 8
  %41 = load i64*, i64** %35, align 8
  %42 = getelementptr inbounds i64, i64* %41, i64 %37
  store i64 %40, i64* %42, align 8
  %43 = add nuw nsw i64 %37, 1
  %44 = load i32, i32* %15, align 4
  %45 = zext i32 %44 to i64
  %46 = icmp ult i64 %43, %45
  br i1 %46, label %36, label %47

47:                                               ; preds = %36, %8, %31
  %48 = load i64*, i64** %10, align 8
  %49 = icmp eq i64* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = bitcast i64* %48 to i8*
  call void @_ZdaPv(i8* %51) #8
  br label %52

52:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #7
  br label %140

53:                                               ; preds = %3
  %54 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %2, i64 0, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp ult i32 %55, %57
  %59 = select i1 %58, %class.BigUnsigned* %2, %class.BigUnsigned* %1
  %60 = select i1 %58, %class.BigUnsigned* %1, %class.BigUnsigned* %2
  %61 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %59, i64 0, i32 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = icmp ult i32 %64, %62
  br i1 %65, label %66, label %77

66:                                               ; preds = %53
  %67 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %68 = load i64*, i64** %67, align 8
  %69 = icmp eq i64* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %66
  %71 = bitcast i64* %68 to i8*
  tail call void @_ZdaPv(i8* %71) #8
  br label %72

72:                                               ; preds = %70, %66
  store i32 %62, i32* %63, align 8
  %73 = zext i32 %62 to i64
  %74 = shl nuw nsw i64 %73, 3
  %75 = tail call i8* @_Znam(i64 %74) #8
  %76 = bitcast i64** %67 to i8**
  store i8* %75, i8** %76, align 8
  br label %77

77:                                               ; preds = %53, %72
  %78 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %60, i64 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %87, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %59, i64 0, i32 0, i32 2
  %83 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %60, i64 0, i32 0, i32 2
  %84 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  br label %95

85:                                               ; preds = %95
  %86 = trunc i64 %106 to i32
  br label %87

87:                                               ; preds = %85, %77
  %88 = phi i32 [ 0, %77 ], [ %86, %85 ]
  %89 = load i32, i32* %61, align 4
  %90 = icmp ult i32 %88, %89
  br i1 %90, label %91, label %121

91:                                               ; preds = %87
  %92 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %59, i64 0, i32 0, i32 2
  %93 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %94 = zext i32 %88 to i64
  br label %110

95:                                               ; preds = %81, %95
  %96 = phi i64 [ 0, %81 ], [ %106, %95 ]
  %97 = load i64*, i64** %82, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 %96
  %99 = load i64, i64* %98, align 8
  %100 = load i64*, i64** %83, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 %96
  %102 = load i64, i64* %101, align 8
  %103 = xor i64 %102, %99
  %104 = load i64*, i64** %84, align 8
  %105 = getelementptr inbounds i64, i64* %104, i64 %96
  store i64 %103, i64* %105, align 8
  %106 = add nuw nsw i64 %96, 1
  %107 = load i32, i32* %78, align 4
  %108 = zext i32 %107 to i64
  %109 = icmp ult i64 %106, %108
  br i1 %109, label %95, label %85

110:                                              ; preds = %91, %110
  %111 = phi i64 [ %94, %91 ], [ %117, %110 ]
  %112 = load i64*, i64** %92, align 8
  %113 = getelementptr inbounds i64, i64* %112, i64 %111
  %114 = load i64, i64* %113, align 8
  %115 = load i64*, i64** %93, align 8
  %116 = getelementptr inbounds i64, i64* %115, i64 %111
  store i64 %114, i64* %116, align 8
  %117 = add nuw nsw i64 %111, 1
  %118 = load i32, i32* %61, align 4
  %119 = zext i32 %118 to i64
  %120 = icmp ult i64 %117, %119
  br i1 %120, label %110, label %121

121:                                              ; preds = %110, %87
  %122 = phi i32 [ %89, %87 ], [ %118, %110 ]
  %123 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 %122, i32* %123, align 4
  %124 = icmp eq i32 %122, 0
  br i1 %124, label %140, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %127 = zext i32 %122 to i64
  %128 = load i64*, i64** %126, align 8
  br label %129

129:                                              ; preds = %137, %125
  %130 = phi i64 [ %127, %125 ], [ %139, %137 ]
  %131 = trunc i64 %130 to i32
  %132 = add i32 %131, -1
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds i64, i64* %128, i64 %133
  %135 = load i64, i64* %134, align 8
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %140

137:                                              ; preds = %129
  store i32 %132, i32* %123, align 4
  %138 = icmp eq i32 %132, 0
  %139 = add nsw i64 %130, -1
  br i1 %138, label %140, label %129

140:                                              ; preds = %137, %129, %121, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11BigUnsigned12bitShiftLeftERKS_i(%class.BigUnsigned*, %class.BigUnsigned* dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.BigUnsigned, align 8
  %5 = icmp eq %class.BigUnsigned* %0, %1
  br i1 %5, label %6, label %51

6:                                                ; preds = %3
  %7 = bitcast %class.BigUnsigned* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #7
  %8 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %4, i64 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #7
  call void @_ZN11BigUnsigned12bitShiftLeftERKS_i(%class.BigUnsigned* nonnull %4, %class.BigUnsigned* dereferenceable(16) %0, i32 %2)
  %9 = icmp eq %class.BigUnsigned* %4, %0
  br i1 %9, label %45, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %4, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %15, %12
  br i1 %16, label %17, label %29

17:                                               ; preds = %10
  %18 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %19 = load i64*, i64** %18, align 8
  %20 = icmp eq i64* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = bitcast i64* %19 to i8*
  call void @_ZdaPv(i8* %22) #8
  br label %23

23:                                               ; preds = %21, %17
  store i32 %12, i32* %14, align 8
  %24 = zext i32 %12 to i64
  %25 = shl nuw nsw i64 %24, 3
  %26 = call i8* @_Znam(i64 %25) #8
  %27 = bitcast i64** %18 to i8**
  store i8* %26, i8** %27, align 8
  %28 = load i32, i32* %13, align 4
  br label %29

29:                                               ; preds = %23, %10
  %30 = phi i32 [ %12, %10 ], [ %28, %23 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %45, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  br label %34

34:                                               ; preds = %34, %32
  %35 = phi i64 [ 0, %32 ], [ %41, %34 ]
  %36 = load i64*, i64** %8, align 8
  %37 = getelementptr inbounds i64, i64* %36, i64 %35
  %38 = load i64, i64* %37, align 8
  %39 = load i64*, i64** %33, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 %35
  store i64 %38, i64* %40, align 8
  %41 = add nuw nsw i64 %35, 1
  %42 = load i32, i32* %13, align 4
  %43 = zext i32 %42 to i64
  %44 = icmp ult i64 %41, %43
  br i1 %44, label %34, label %45

45:                                               ; preds = %34, %6, %29
  %46 = load i64*, i64** %8, align 8
  %47 = icmp eq i64* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %45
  %49 = bitcast i64* %46 to i8*
  call void @_ZdaPv(i8* %49) #8
  br label %50

50:                                               ; preds = %45, %48
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7
  br label %168

51:                                               ; preds = %3
  %52 = icmp slt i32 %2, 0
  br i1 %52, label %53, label %59

53:                                               ; preds = %51
  %54 = and i32 %2, 2147483647
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @abort() #9
  unreachable

57:                                               ; preds = %53
  %58 = sub nsw i32 0, %2
  tail call void @_ZN11BigUnsigned13bitShiftRightERKS_i(%class.BigUnsigned* %0, %class.BigUnsigned* dereferenceable(16) %1, i32 %58)
  br label %168

59:                                               ; preds = %51
  %60 = lshr i32 %2, 6
  %61 = and i32 %2, 63
  %62 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = add nuw nsw i32 %60, 1
  %65 = add i32 %64, %63
  %66 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 %65, i32* %66, align 4
  %67 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = icmp ult i32 %68, %65
  br i1 %69, label %70, label %81

70:                                               ; preds = %59
  %71 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %72 = load i64*, i64** %71, align 8
  %73 = icmp eq i64* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %70
  %75 = bitcast i64* %72 to i8*
  tail call void @_ZdaPv(i8* %75) #8
  br label %76

76:                                               ; preds = %74, %70
  store i32 %65, i32* %67, align 8
  %77 = zext i32 %65 to i64
  %78 = shl nuw nsw i64 %77, 3
  %79 = tail call i8* @_Znam(i64 %78) #8
  %80 = bitcast i64** %71 to i8**
  store i8* %79, i8** %80, align 8
  br label %81

81:                                               ; preds = %59, %76
  %82 = icmp eq i32 %60, 0
  br i1 %82, label %102, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %85 = zext i32 %60 to i64
  %86 = add nsw i64 %85, -1
  %87 = and i64 %85, 3
  %88 = icmp ult i64 %86, 3
  br i1 %88, label %91, label %89

89:                                               ; preds = %83
  %90 = sub nsw i64 %85, %87
  br label %110

91:                                               ; preds = %110, %83
  %92 = phi i64 [ 0, %83 ], [ %124, %110 ]
  %93 = icmp eq i64 %87, 0
  br i1 %93, label %102, label %94

94:                                               ; preds = %91, %94
  %95 = phi i64 [ %99, %94 ], [ %92, %91 ]
  %96 = phi i64 [ %100, %94 ], [ %87, %91 ]
  %97 = load i64*, i64** %84, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 %95
  store i64 0, i64* %98, align 8
  %99 = add nuw nsw i64 %95, 1
  %100 = add i64 %96, -1
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %94, !llvm.loop !6

102:                                              ; preds = %91, %94, %81
  %103 = load i32, i32* %62, align 4
  %104 = icmp eq i32 %61, 0
  %105 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 2
  %106 = sub nuw nsw i32 64, %61
  %107 = zext i32 %106 to i64
  %108 = zext i32 %61 to i64
  %109 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  br label %127

110:                                              ; preds = %110, %89
  %111 = phi i64 [ 0, %89 ], [ %124, %110 ]
  %112 = phi i64 [ %90, %89 ], [ %125, %110 ]
  %113 = load i64*, i64** %84, align 8
  %114 = getelementptr inbounds i64, i64* %113, i64 %111
  store i64 0, i64* %114, align 8
  %115 = or i64 %111, 1
  %116 = load i64*, i64** %84, align 8
  %117 = getelementptr inbounds i64, i64* %116, i64 %115
  store i64 0, i64* %117, align 8
  %118 = or i64 %111, 2
  %119 = load i64*, i64** %84, align 8
  %120 = getelementptr inbounds i64, i64* %119, i64 %118
  store i64 0, i64* %120, align 8
  %121 = or i64 %111, 3
  %122 = load i64*, i64** %84, align 8
  %123 = getelementptr inbounds i64, i64* %122, i64 %121
  store i64 0, i64* %123, align 8
  %124 = add nuw nsw i64 %111, 4
  %125 = add i64 %112, -4
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %91, label %110

127:                                              ; preds = %102, %149
  %128 = phi i32 [ %103, %102 ], [ %157, %149 ]
  %129 = phi i32 [ 0, %102 ], [ %155, %149 ]
  %130 = phi i32 [ %60, %102 ], [ %156, %149 ]
  %131 = icmp eq i32 %129, 0
  %132 = or i1 %104, %131
  br i1 %132, label %140, label %133

133:                                              ; preds = %127
  %134 = load i64*, i64** %105, align 8
  %135 = add i32 %129, -1
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds i64, i64* %134, i64 %136
  %138 = load i64, i64* %137, align 8
  %139 = lshr i64 %138, %107
  br label %140

140:                                              ; preds = %133, %127
  %141 = phi i64 [ %139, %133 ], [ 0, %127 ]
  %142 = icmp eq i32 %128, %129
  br i1 %142, label %149, label %143

143:                                              ; preds = %140
  %144 = load i64*, i64** %105, align 8
  %145 = zext i32 %129 to i64
  %146 = getelementptr inbounds i64, i64* %144, i64 %145
  %147 = load i64, i64* %146, align 8
  %148 = shl i64 %147, %108
  br label %149

149:                                              ; preds = %140, %143
  %150 = phi i64 [ %148, %143 ], [ 0, %140 ]
  %151 = or i64 %150, %141
  %152 = load i64*, i64** %109, align 8
  %153 = zext i32 %130 to i64
  %154 = getelementptr inbounds i64, i64* %152, i64 %153
  store i64 %151, i64* %154, align 8
  %155 = add i32 %129, 1
  %156 = add i32 %130, 1
  %157 = load i32, i32* %62, align 4
  %158 = icmp ugt i32 %155, %157
  br i1 %158, label %159, label %127

159:                                              ; preds = %149
  %160 = load i64*, i64** %109, align 8
  %161 = load i32, i32* %66, align 4
  %162 = add i32 %161, -1
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds i64, i64* %160, i64 %163
  %165 = load i64, i64* %164, align 8
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %159
  store i32 %162, i32* %66, align 4
  br label %168

168:                                              ; preds = %159, %167, %57, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11BigUnsigned13bitShiftRightERKS_i(%class.BigUnsigned*, %class.BigUnsigned* dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.BigUnsigned, align 8
  %5 = icmp eq %class.BigUnsigned* %0, %1
  br i1 %5, label %6, label %51

6:                                                ; preds = %3
  %7 = bitcast %class.BigUnsigned* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #7
  %8 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %4, i64 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #7
  call void @_ZN11BigUnsigned13bitShiftRightERKS_i(%class.BigUnsigned* nonnull %4, %class.BigUnsigned* dereferenceable(16) %0, i32 %2)
  %9 = icmp eq %class.BigUnsigned* %4, %0
  br i1 %9, label %45, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %4, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %15, %12
  br i1 %16, label %17, label %29

17:                                               ; preds = %10
  %18 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %19 = load i64*, i64** %18, align 8
  %20 = icmp eq i64* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = bitcast i64* %19 to i8*
  call void @_ZdaPv(i8* %22) #8
  br label %23

23:                                               ; preds = %21, %17
  store i32 %12, i32* %14, align 8
  %24 = zext i32 %12 to i64
  %25 = shl nuw nsw i64 %24, 3
  %26 = call i8* @_Znam(i64 %25) #8
  %27 = bitcast i64** %18 to i8**
  store i8* %26, i8** %27, align 8
  %28 = load i32, i32* %13, align 4
  br label %29

29:                                               ; preds = %23, %10
  %30 = phi i32 [ %12, %10 ], [ %28, %23 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %45, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  br label %34

34:                                               ; preds = %34, %32
  %35 = phi i64 [ 0, %32 ], [ %41, %34 ]
  %36 = load i64*, i64** %8, align 8
  %37 = getelementptr inbounds i64, i64* %36, i64 %35
  %38 = load i64, i64* %37, align 8
  %39 = load i64*, i64** %33, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 %35
  store i64 %38, i64* %40, align 8
  %41 = add nuw nsw i64 %35, 1
  %42 = load i32, i32* %13, align 4
  %43 = zext i32 %42 to i64
  %44 = icmp ult i64 %41, %43
  br i1 %44, label %34, label %45

45:                                               ; preds = %34, %6, %29
  %46 = load i64*, i64** %8, align 8
  %47 = icmp eq i64* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %45
  %49 = bitcast i64* %46 to i8*
  call void @_ZdaPv(i8* %49) #8
  br label %50

50:                                               ; preds = %45, %48
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7
  br label %139

51:                                               ; preds = %3
  %52 = icmp slt i32 %2, 0
  br i1 %52, label %53, label %59

53:                                               ; preds = %51
  %54 = and i32 %2, 2147483647
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @abort() #9
  unreachable

57:                                               ; preds = %53
  %58 = sub nsw i32 0, %2
  tail call void @_ZN11BigUnsigned12bitShiftLeftERKS_i(%class.BigUnsigned* %0, %class.BigUnsigned* dereferenceable(16) %1, i32 %58)
  br label %139

59:                                               ; preds = %51
  %60 = add nuw i32 %2, 63
  %61 = lshr i32 %60, 6
  %62 = and i32 %60, -64
  %63 = sub i32 %62, %2
  %64 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = add i32 %65, 1
  %67 = icmp ugt i32 %66, %61
  br i1 %67, label %70, label %68

68:                                               ; preds = %59
  %69 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %69, align 4
  br label %139

70:                                               ; preds = %59
  %71 = sub i32 %66, %61
  %72 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  store i32 %71, i32* %72, align 4
  %73 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = icmp ult i32 %74, %71
  br i1 %75, label %76, label %87

76:                                               ; preds = %70
  %77 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %78 = load i64*, i64** %77, align 8
  %79 = icmp eq i64* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %76
  %81 = bitcast i64* %78 to i8*
  tail call void @_ZdaPv(i8* %81) #8
  br label %82

82:                                               ; preds = %80, %76
  store i32 %71, i32* %73, align 8
  %83 = zext i32 %71 to i64
  %84 = shl nuw nsw i64 %83, 3
  %85 = tail call i8* @_Znam(i64 %84) #8
  %86 = bitcast i64** %77 to i8**
  store i8* %85, i8** %86, align 8
  br label %87

87:                                               ; preds = %70, %82
  %88 = load i32, i32* %64, align 4
  %89 = icmp ugt i32 %61, %88
  br i1 %89, label %129, label %90

90:                                               ; preds = %87
  %91 = icmp eq i32 %63, 0
  %92 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 2
  %93 = sub i32 64, %63
  %94 = zext i32 %93 to i64
  %95 = zext i32 %63 to i64
  %96 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  br label %97

97:                                               ; preds = %90, %119
  %98 = phi i32 [ %88, %90 ], [ %127, %119 ]
  %99 = phi i32 [ %61, %90 ], [ %125, %119 ]
  %100 = phi i32 [ 0, %90 ], [ %126, %119 ]
  %101 = icmp eq i32 %99, 0
  %102 = or i1 %91, %101
  br i1 %102, label %110, label %103

103:                                              ; preds = %97
  %104 = load i64*, i64** %92, align 8
  %105 = add i32 %99, -1
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds i64, i64* %104, i64 %106
  %108 = load i64, i64* %107, align 8
  %109 = lshr i64 %108, %94
  br label %110

110:                                              ; preds = %103, %97
  %111 = phi i64 [ %109, %103 ], [ 0, %97 ]
  %112 = icmp eq i32 %98, %99
  br i1 %112, label %119, label %113

113:                                              ; preds = %110
  %114 = load i64*, i64** %92, align 8
  %115 = zext i32 %99 to i64
  %116 = getelementptr inbounds i64, i64* %114, i64 %115
  %117 = load i64, i64* %116, align 8
  %118 = shl i64 %117, %95
  br label %119

119:                                              ; preds = %110, %113
  %120 = phi i64 [ %118, %113 ], [ 0, %110 ]
  %121 = or i64 %120, %111
  %122 = load i64*, i64** %96, align 8
  %123 = zext i32 %100 to i64
  %124 = getelementptr inbounds i64, i64* %122, i64 %123
  store i64 %121, i64* %124, align 8
  %125 = add i32 %99, 1
  %126 = add i32 %100, 1
  %127 = load i32, i32* %64, align 4
  %128 = icmp ugt i32 %125, %127
  br i1 %128, label %129, label %97

129:                                              ; preds = %119, %87
  %130 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %131 = load i64*, i64** %130, align 8
  %132 = load i32, i32* %72, align 4
  %133 = add i32 %132, -1
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds i64, i64* %131, i64 %134
  %136 = load i64, i64* %135, align 8
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %129
  store i32 %133, i32* %72, align 4
  br label %139

139:                                              ; preds = %68, %138, %129, %50, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.BigUnsigned* @_ZN11BigUnsignedppEv(%class.BigUnsigned* returned) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %26, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %7 = load i64*, i64** %6, align 8
  br label %8

8:                                                ; preds = %5, %8
  %9 = phi i64* [ %7, %5 ], [ %14, %8 ]
  %10 = phi i64 [ 0, %5 ], [ %18, %8 ]
  %11 = getelementptr inbounds i64, i64* %9, i64 %10
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 1
  store i64 %13, i64* %11, align 8
  %14 = load i64*, i64** %6, align 8
  %15 = getelementptr inbounds i64, i64* %14, i64 %10
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  %18 = add nuw nsw i64 %10, 1
  %19 = load i32, i32* %2, align 4
  %20 = zext i32 %19 to i64
  %21 = icmp ult i64 %18, %20
  %22 = and i1 %17, %21
  br i1 %22, label %8, label %23

23:                                               ; preds = %8
  %24 = add i32 %19, 1
  %25 = and i64 %18, 4294967295
  br i1 %17, label %26, label %74

26:                                               ; preds = %1, %23
  %27 = phi i32 [ %24, %23 ], [ 1, %1 ]
  %28 = phi i64 [ %25, %23 ], [ 0, %1 ]
  %29 = phi i32 [ %19, %23 ], [ 0, %1 ]
  %30 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = icmp ult i32 %31, %27
  br i1 %32, label %33, label %68

33:                                               ; preds = %26
  %34 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %35 = load i64*, i64** %34, align 8
  store i32 %27, i32* %30, align 8
  %36 = zext i32 %27 to i64
  %37 = shl nuw nsw i64 %36, 3
  %38 = tail call i8* @_Znam(i64 %37) #8
  %39 = bitcast i64** %34 to i8**
  store i8* %38, i8** %39, align 8
  %40 = icmp eq i32 %29, 0
  br i1 %40, label %62, label %41

41:                                               ; preds = %33
  %42 = bitcast i8* %38 to i64*
  %43 = load i64, i64* %35, align 8
  store i64 %43, i64* %42, align 8
  %44 = icmp eq i32 %29, 1
  br i1 %44, label %62, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds i64, i64* %35, i64 1
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds i8, i8* %38, i64 8
  %49 = bitcast i8* %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = load i32, i32* %2, align 4
  %51 = icmp ugt i32 %50, 2
  br i1 %51, label %52, label %62

52:                                               ; preds = %45, %52
  %53 = phi i64 [ %58, %52 ], [ 2, %45 ]
  %54 = load i64*, i64** %34, align 8
  %55 = getelementptr inbounds i64, i64* %35, i64 %53
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds i64, i64* %54, i64 %53
  store i64 %56, i64* %57, align 8
  %58 = add nuw nsw i64 %53, 1
  %59 = load i32, i32* %2, align 4
  %60 = zext i32 %59 to i64
  %61 = icmp ult i64 %58, %60
  br i1 %61, label %52, label %62

62:                                               ; preds = %52, %45, %41, %33
  %63 = phi i32 [ 1, %41 ], [ 0, %33 ], [ %50, %45 ], [ %59, %52 ]
  %64 = icmp eq i64* %35, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %62
  %66 = bitcast i64* %35 to i8*
  tail call void @_ZdaPv(i8* %66) #8
  %67 = load i32, i32* %2, align 4
  br label %68

68:                                               ; preds = %26, %62, %65
  %69 = phi i32 [ %29, %26 ], [ %63, %62 ], [ %67, %65 ]
  %70 = add i32 %69, 1
  store i32 %70, i32* %2, align 4
  %71 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %28
  store i64 1, i64* %73, align 8
  br label %74

74:                                               ; preds = %68, %23
  ret %class.BigUnsigned* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11BigUnsignedppEi(%class.BigUnsigned* noalias nocapture sret, %class.BigUnsigned*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %7 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* %5, align 4
  store i32 %8, i32* %4, align 8
  %9 = zext i32 %8 to i64
  %10 = shl nuw nsw i64 %9, 3
  %11 = tail call i8* @_Znam(i64 %10) #8
  %12 = bitcast i64** %6 to i8**
  store i8* %11, i8** %12, align 8
  %13 = icmp eq i32 %8, 0
  %14 = bitcast i8* %11 to i64*
  br i1 %13, label %160, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 2
  %17 = load i64*, i64** %16, align 8
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %14, align 8
  %19 = icmp eq i32 %8, 1
  br i1 %19, label %160, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds i64, i64* %17, i64 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds i8, i8* %11, i64 8
  %24 = bitcast i8* %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = icmp ugt i32 %8, 2
  br i1 %25, label %26, label %160

26:                                               ; preds = %20
  %27 = add nsw i64 %9, -2
  %28 = icmp ult i64 %27, 4
  br i1 %28, label %122, label %29

29:                                               ; preds = %26
  %30 = getelementptr i8, i8* %11, i64 16
  %31 = shl nuw nsw i64 %9, 3
  %32 = getelementptr i8, i8* %11, i64 %31
  %33 = getelementptr i64, i64* %17, i64 2
  %34 = bitcast i64* %33 to i8*
  %35 = getelementptr i64, i64* %17, i64 %9
  %36 = bitcast i64* %35 to i8*
  %37 = icmp ult i8* %30, %36
  %38 = icmp ugt i8* %32, %34
  %39 = and i1 %37, %38
  br i1 %39, label %122, label %40

40:                                               ; preds = %29
  %41 = and i64 %27, -4
  %42 = or i64 %41, 2
  %43 = add nsw i64 %41, -4
  %44 = lshr exact i64 %43, 2
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 12
  br i1 %47, label %100, label %48

48:                                               ; preds = %40
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %97, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %98, %50 ]
  %53 = or i64 %51, 2
  %54 = getelementptr inbounds i64, i64* %17, i64 %53
  %55 = bitcast i64* %54 to <2 x i64>*
  %56 = load <2 x i64>, <2 x i64>* %55, align 8, !alias.scope !7
  %57 = getelementptr inbounds i64, i64* %54, i64 2
  %58 = bitcast i64* %57 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 8, !alias.scope !7
  %60 = getelementptr inbounds i64, i64* %14, i64 %53
  %61 = bitcast i64* %60 to <2 x i64>*
  store <2 x i64> %56, <2 x i64>* %61, align 8, !alias.scope !10, !noalias !7
  %62 = getelementptr inbounds i64, i64* %60, i64 2
  %63 = bitcast i64* %62 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %63, align 8, !alias.scope !10, !noalias !7
  %64 = or i64 %51, 6
  %65 = getelementptr inbounds i64, i64* %17, i64 %64
  %66 = bitcast i64* %65 to <2 x i64>*
  %67 = load <2 x i64>, <2 x i64>* %66, align 8, !alias.scope !7
  %68 = getelementptr inbounds i64, i64* %65, i64 2
  %69 = bitcast i64* %68 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 8, !alias.scope !7
  %71 = getelementptr inbounds i64, i64* %14, i64 %64
  %72 = bitcast i64* %71 to <2 x i64>*
  store <2 x i64> %67, <2 x i64>* %72, align 8, !alias.scope !10, !noalias !7
  %73 = getelementptr inbounds i64, i64* %71, i64 2
  %74 = bitcast i64* %73 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %74, align 8, !alias.scope !10, !noalias !7
  %75 = or i64 %51, 10
  %76 = getelementptr inbounds i64, i64* %17, i64 %75
  %77 = bitcast i64* %76 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 8, !alias.scope !7
  %79 = getelementptr inbounds i64, i64* %76, i64 2
  %80 = bitcast i64* %79 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 8, !alias.scope !7
  %82 = getelementptr inbounds i64, i64* %14, i64 %75
  %83 = bitcast i64* %82 to <2 x i64>*
  store <2 x i64> %78, <2 x i64>* %83, align 8, !alias.scope !10, !noalias !7
  %84 = getelementptr inbounds i64, i64* %82, i64 2
  %85 = bitcast i64* %84 to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %85, align 8, !alias.scope !10, !noalias !7
  %86 = or i64 %51, 14
  %87 = getelementptr inbounds i64, i64* %17, i64 %86
  %88 = bitcast i64* %87 to <2 x i64>*
  %89 = load <2 x i64>, <2 x i64>* %88, align 8, !alias.scope !7
  %90 = getelementptr inbounds i64, i64* %87, i64 2
  %91 = bitcast i64* %90 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 8, !alias.scope !7
  %93 = getelementptr inbounds i64, i64* %14, i64 %86
  %94 = bitcast i64* %93 to <2 x i64>*
  store <2 x i64> %89, <2 x i64>* %94, align 8, !alias.scope !10, !noalias !7
  %95 = getelementptr inbounds i64, i64* %93, i64 2
  %96 = bitcast i64* %95 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %96, align 8, !alias.scope !10, !noalias !7
  %97 = add i64 %51, 16
  %98 = add i64 %52, -4
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %50, !llvm.loop !12

100:                                              ; preds = %50, %40
  %101 = phi i64 [ 0, %40 ], [ %97, %50 ]
  %102 = icmp eq i64 %46, 0
  br i1 %102, label %120, label %103

103:                                              ; preds = %100, %103
  %104 = phi i64 [ %117, %103 ], [ %101, %100 ]
  %105 = phi i64 [ %118, %103 ], [ %46, %100 ]
  %106 = or i64 %104, 2
  %107 = getelementptr inbounds i64, i64* %17, i64 %106
  %108 = bitcast i64* %107 to <2 x i64>*
  %109 = load <2 x i64>, <2 x i64>* %108, align 8, !alias.scope !7
  %110 = getelementptr inbounds i64, i64* %107, i64 2
  %111 = bitcast i64* %110 to <2 x i64>*
  %112 = load <2 x i64>, <2 x i64>* %111, align 8, !alias.scope !7
  %113 = getelementptr inbounds i64, i64* %14, i64 %106
  %114 = bitcast i64* %113 to <2 x i64>*
  store <2 x i64> %109, <2 x i64>* %114, align 8, !alias.scope !10, !noalias !7
  %115 = getelementptr inbounds i64, i64* %113, i64 2
  %116 = bitcast i64* %115 to <2 x i64>*
  store <2 x i64> %112, <2 x i64>* %116, align 8, !alias.scope !10, !noalias !7
  %117 = add i64 %104, 4
  %118 = add i64 %105, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %103, !llvm.loop !14

120:                                              ; preds = %103, %100
  %121 = icmp eq i64 %27, %41
  br i1 %121, label %160, label %122

122:                                              ; preds = %120, %29, %26
  %123 = phi i64 [ 2, %29 ], [ 2, %26 ], [ %42, %120 ]
  %124 = sub nsw i64 %9, %123
  %125 = xor i64 %123, -1
  %126 = add nsw i64 %125, %9
  %127 = and i64 %124, 3
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %138, label %129

129:                                              ; preds = %122, %129
  %130 = phi i64 [ %135, %129 ], [ %123, %122 ]
  %131 = phi i64 [ %136, %129 ], [ %127, %122 ]
  %132 = getelementptr inbounds i64, i64* %17, i64 %130
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds i64, i64* %14, i64 %130
  store i64 %133, i64* %134, align 8
  %135 = add nuw nsw i64 %130, 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %129, !llvm.loop !15

138:                                              ; preds = %129, %122
  %139 = phi i64 [ %123, %122 ], [ %135, %129 ]
  %140 = icmp ult i64 %126, 3
  br i1 %140, label %160, label %141

141:                                              ; preds = %138, %141
  %142 = phi i64 [ %158, %141 ], [ %139, %138 ]
  %143 = getelementptr inbounds i64, i64* %17, i64 %142
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds i64, i64* %14, i64 %142
  store i64 %144, i64* %145, align 8
  %146 = add nuw nsw i64 %142, 1
  %147 = getelementptr inbounds i64, i64* %17, i64 %146
  %148 = load i64, i64* %147, align 8
  %149 = getelementptr inbounds i64, i64* %14, i64 %146
  store i64 %148, i64* %149, align 8
  %150 = add nuw nsw i64 %142, 2
  %151 = getelementptr inbounds i64, i64* %17, i64 %150
  %152 = load i64, i64* %151, align 8
  %153 = getelementptr inbounds i64, i64* %14, i64 %150
  store i64 %152, i64* %153, align 8
  %154 = add nuw nsw i64 %142, 3
  %155 = getelementptr inbounds i64, i64* %17, i64 %154
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds i64, i64* %14, i64 %154
  store i64 %156, i64* %157, align 8
  %158 = add nuw nsw i64 %142, 4
  %159 = icmp eq i64 %158, %9
  br i1 %159, label %160, label %141, !llvm.loop !16

160:                                              ; preds = %138, %141, %120, %20, %3, %15
  %161 = tail call dereferenceable(16) %class.BigUnsigned* @_ZN11BigUnsignedppEv(%class.BigUnsigned* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.BigUnsigned* @_ZN11BigUnsignedmmEv(%class.BigUnsigned* returned) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %7 = load i64*, i64** %6, align 8
  br label %9

8:                                                ; preds = %1
  tail call void @abort() #9
  unreachable

9:                                                ; preds = %5, %9
  %10 = phi i64* [ %7, %5 ], [ %18, %9 ]
  %11 = phi i32 [ 0, %5 ], [ %17, %9 ]
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i64, i64* %10, i64 %12
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  %16 = add i64 %14, -1
  store i64 %16, i64* %13, align 8
  %17 = add i32 %11, 1
  %18 = load i64*, i64** %6, align 8
  br i1 %15, label %9, label %19

19:                                               ; preds = %9
  %20 = load i32, i32* %2, align 4
  %21 = add i32 %20, -1
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i64, i64* %18, i64 %22
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %19
  store i32 %21, i32* %2, align 4
  br label %27

27:                                               ; preds = %26, %19
  ret %class.BigUnsigned* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11BigUnsignedmmEi(%class.BigUnsigned* noalias nocapture sret, %class.BigUnsigned* nocapture, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %0, i64 0, i32 0, i32 2
  %7 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* %5, align 4
  store i32 %8, i32* %4, align 8
  %9 = zext i32 %8 to i64
  %10 = shl nuw nsw i64 %9, 3
  %11 = tail call i8* @_Znam(i64 %10) #8
  %12 = bitcast i64** %6 to i8**
  store i8* %11, i8** %12, align 8
  %13 = icmp eq i32 %8, 0
  %14 = bitcast i8* %11 to i64*
  br i1 %13, label %164, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 2
  %17 = load i64*, i64** %16, align 8
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %14, align 8
  %19 = icmp eq i32 %8, 1
  br i1 %19, label %161, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds i64, i64* %17, i64 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds i8, i8* %11, i64 8
  %24 = bitcast i8* %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = icmp ugt i32 %8, 2
  br i1 %25, label %26, label %161

26:                                               ; preds = %20
  %27 = add nsw i64 %9, -2
  %28 = icmp ult i64 %27, 4
  br i1 %28, label %122, label %29

29:                                               ; preds = %26
  %30 = getelementptr i8, i8* %11, i64 16
  %31 = shl nuw nsw i64 %9, 3
  %32 = getelementptr i8, i8* %11, i64 %31
  %33 = getelementptr i64, i64* %17, i64 2
  %34 = bitcast i64* %33 to i8*
  %35 = getelementptr i64, i64* %17, i64 %9
  %36 = bitcast i64* %35 to i8*
  %37 = icmp ult i8* %30, %36
  %38 = icmp ugt i8* %32, %34
  %39 = and i1 %37, %38
  br i1 %39, label %122, label %40

40:                                               ; preds = %29
  %41 = and i64 %27, -4
  %42 = or i64 %41, 2
  %43 = add nsw i64 %41, -4
  %44 = lshr exact i64 %43, 2
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 12
  br i1 %47, label %100, label %48

48:                                               ; preds = %40
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %97, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %98, %50 ]
  %53 = or i64 %51, 2
  %54 = getelementptr inbounds i64, i64* %17, i64 %53
  %55 = bitcast i64* %54 to <2 x i64>*
  %56 = load <2 x i64>, <2 x i64>* %55, align 8, !alias.scope !17
  %57 = getelementptr inbounds i64, i64* %54, i64 2
  %58 = bitcast i64* %57 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 8, !alias.scope !17
  %60 = getelementptr inbounds i64, i64* %14, i64 %53
  %61 = bitcast i64* %60 to <2 x i64>*
  store <2 x i64> %56, <2 x i64>* %61, align 8, !alias.scope !20, !noalias !17
  %62 = getelementptr inbounds i64, i64* %60, i64 2
  %63 = bitcast i64* %62 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %63, align 8, !alias.scope !20, !noalias !17
  %64 = or i64 %51, 6
  %65 = getelementptr inbounds i64, i64* %17, i64 %64
  %66 = bitcast i64* %65 to <2 x i64>*
  %67 = load <2 x i64>, <2 x i64>* %66, align 8, !alias.scope !17
  %68 = getelementptr inbounds i64, i64* %65, i64 2
  %69 = bitcast i64* %68 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 8, !alias.scope !17
  %71 = getelementptr inbounds i64, i64* %14, i64 %64
  %72 = bitcast i64* %71 to <2 x i64>*
  store <2 x i64> %67, <2 x i64>* %72, align 8, !alias.scope !20, !noalias !17
  %73 = getelementptr inbounds i64, i64* %71, i64 2
  %74 = bitcast i64* %73 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %74, align 8, !alias.scope !20, !noalias !17
  %75 = or i64 %51, 10
  %76 = getelementptr inbounds i64, i64* %17, i64 %75
  %77 = bitcast i64* %76 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 8, !alias.scope !17
  %79 = getelementptr inbounds i64, i64* %76, i64 2
  %80 = bitcast i64* %79 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 8, !alias.scope !17
  %82 = getelementptr inbounds i64, i64* %14, i64 %75
  %83 = bitcast i64* %82 to <2 x i64>*
  store <2 x i64> %78, <2 x i64>* %83, align 8, !alias.scope !20, !noalias !17
  %84 = getelementptr inbounds i64, i64* %82, i64 2
  %85 = bitcast i64* %84 to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %85, align 8, !alias.scope !20, !noalias !17
  %86 = or i64 %51, 14
  %87 = getelementptr inbounds i64, i64* %17, i64 %86
  %88 = bitcast i64* %87 to <2 x i64>*
  %89 = load <2 x i64>, <2 x i64>* %88, align 8, !alias.scope !17
  %90 = getelementptr inbounds i64, i64* %87, i64 2
  %91 = bitcast i64* %90 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 8, !alias.scope !17
  %93 = getelementptr inbounds i64, i64* %14, i64 %86
  %94 = bitcast i64* %93 to <2 x i64>*
  store <2 x i64> %89, <2 x i64>* %94, align 8, !alias.scope !20, !noalias !17
  %95 = getelementptr inbounds i64, i64* %93, i64 2
  %96 = bitcast i64* %95 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %96, align 8, !alias.scope !20, !noalias !17
  %97 = add i64 %51, 16
  %98 = add i64 %52, -4
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %50, !llvm.loop !22

100:                                              ; preds = %50, %40
  %101 = phi i64 [ 0, %40 ], [ %97, %50 ]
  %102 = icmp eq i64 %46, 0
  br i1 %102, label %120, label %103

103:                                              ; preds = %100, %103
  %104 = phi i64 [ %117, %103 ], [ %101, %100 ]
  %105 = phi i64 [ %118, %103 ], [ %46, %100 ]
  %106 = or i64 %104, 2
  %107 = getelementptr inbounds i64, i64* %17, i64 %106
  %108 = bitcast i64* %107 to <2 x i64>*
  %109 = load <2 x i64>, <2 x i64>* %108, align 8, !alias.scope !17
  %110 = getelementptr inbounds i64, i64* %107, i64 2
  %111 = bitcast i64* %110 to <2 x i64>*
  %112 = load <2 x i64>, <2 x i64>* %111, align 8, !alias.scope !17
  %113 = getelementptr inbounds i64, i64* %14, i64 %106
  %114 = bitcast i64* %113 to <2 x i64>*
  store <2 x i64> %109, <2 x i64>* %114, align 8, !alias.scope !20, !noalias !17
  %115 = getelementptr inbounds i64, i64* %113, i64 2
  %116 = bitcast i64* %115 to <2 x i64>*
  store <2 x i64> %112, <2 x i64>* %116, align 8, !alias.scope !20, !noalias !17
  %117 = add i64 %104, 4
  %118 = add i64 %105, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %103, !llvm.loop !23

120:                                              ; preds = %103, %100
  %121 = icmp eq i64 %27, %41
  br i1 %121, label %160, label %122

122:                                              ; preds = %120, %29, %26
  %123 = phi i64 [ 2, %29 ], [ 2, %26 ], [ %42, %120 ]
  %124 = sub nsw i64 %9, %123
  %125 = xor i64 %123, -1
  %126 = add nsw i64 %125, %9
  %127 = and i64 %124, 3
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %138, label %129

129:                                              ; preds = %122, %129
  %130 = phi i64 [ %135, %129 ], [ %123, %122 ]
  %131 = phi i64 [ %136, %129 ], [ %127, %122 ]
  %132 = getelementptr inbounds i64, i64* %17, i64 %130
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds i64, i64* %14, i64 %130
  store i64 %133, i64* %134, align 8
  %135 = add nuw nsw i64 %130, 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %129, !llvm.loop !24

138:                                              ; preds = %129, %122
  %139 = phi i64 [ %123, %122 ], [ %135, %129 ]
  %140 = icmp ult i64 %126, 3
  br i1 %140, label %160, label %141

141:                                              ; preds = %138, %141
  %142 = phi i64 [ %158, %141 ], [ %139, %138 ]
  %143 = getelementptr inbounds i64, i64* %17, i64 %142
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds i64, i64* %14, i64 %142
  store i64 %144, i64* %145, align 8
  %146 = add nuw nsw i64 %142, 1
  %147 = getelementptr inbounds i64, i64* %17, i64 %146
  %148 = load i64, i64* %147, align 8
  %149 = getelementptr inbounds i64, i64* %14, i64 %146
  store i64 %148, i64* %149, align 8
  %150 = add nuw nsw i64 %142, 2
  %151 = getelementptr inbounds i64, i64* %17, i64 %150
  %152 = load i64, i64* %151, align 8
  %153 = getelementptr inbounds i64, i64* %14, i64 %150
  store i64 %152, i64* %153, align 8
  %154 = add nuw nsw i64 %142, 3
  %155 = getelementptr inbounds i64, i64* %17, i64 %154
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds i64, i64* %14, i64 %154
  store i64 %156, i64* %157, align 8
  %158 = add nuw nsw i64 %142, 4
  %159 = icmp eq i64 %158, %9
  br i1 %159, label %160, label %141, !llvm.loop !25

160:                                              ; preds = %138, %141, %120
  br i1 %13, label %164, label %161

161:                                              ; preds = %15, %20, %160
  %162 = getelementptr inbounds %class.BigUnsigned, %class.BigUnsigned* %1, i64 0, i32 0, i32 2
  %163 = load i64*, i64** %162, align 8
  br label %165

164:                                              ; preds = %3, %160
  tail call void @abort() #9
  unreachable

165:                                              ; preds = %165, %161
  %166 = phi i64* [ %163, %161 ], [ %174, %165 ]
  %167 = phi i32 [ 0, %161 ], [ %173, %165 ]
  %168 = zext i32 %167 to i64
  %169 = getelementptr inbounds i64, i64* %166, i64 %168
  %170 = load i64, i64* %169, align 8
  %171 = icmp eq i64 %170, 0
  %172 = add i64 %170, -1
  store i64 %172, i64* %169, align 8
  %173 = add i32 %167, 1
  %174 = load i64*, i64** %162, align 8
  br i1 %171, label %165, label %175

175:                                              ; preds = %165
  %176 = load i32, i32* %7, align 4
  %177 = add i32 %176, -1
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds i64, i64* %174, i64 %178
  %180 = load i64, i64* %179, align 8
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %175
  store i32 %177, i32* %7, align 4
  br label %183

183:                                              ; preds = %175, %182
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{i64 0, i64 65}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = !{!8}
!8 = distinct !{!8, !9}
!9 = distinct !{!9, !"LVerDomain"}
!10 = !{!11}
!11 = distinct !{!11, !9}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.isvectorized", i32 1}
!14 = distinct !{!14, !3}
!15 = distinct !{!15, !3}
!16 = distinct !{!16, !13}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !13}
!23 = distinct !{!23, !3}
!24 = distinct !{!24, !3}
!25 = distinct !{!25, !13}
