; ModuleID = '../../third_party/skia/src/core/SkIDChangeListener.cpp'
source_filename = "../../third_party/skia/src/core/SkIDChangeListener.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.1", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { i8 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp = type { %class.SkIDChangeListener* }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

@_ZTV18SkIDChangeListener = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkIDChangeListener*)* @_ZN18SkIDChangeListenerD2Ev to i8*), i8* bitcast (void (%class.SkIDChangeListener*)* @_ZN18SkIDChangeListenerD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [51 x i8] c"../../third_party/skia/include/private/SkTDArray.h\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"SkTFitsIn<int>(count)\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"SkTFitsIn<int>(reserve)\00", align 1

@_ZN18SkIDChangeListenerD1Ev = hidden unnamed_addr alias void (%class.SkIDChangeListener*), void (%class.SkIDChangeListener*)* @_ZN18SkIDChangeListenerD2Ev
@_ZN18SkIDChangeListener4ListC1Ev = hidden unnamed_addr alias void (%"class.SkIDChangeListener::List"*), void (%"class.SkIDChangeListener::List"*)* @_ZN18SkIDChangeListener4ListC2Ev
@_ZN18SkIDChangeListener4ListD1Ev = hidden unnamed_addr alias void (%"class.SkIDChangeListener::List"*), void (%"class.SkIDChangeListener::List"*)* @_ZN18SkIDChangeListener4ListD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN18SkIDChangeListenerC2Ev(%class.SkIDChangeListener* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %2, align 4
  %3 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV18SkIDChangeListener, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN18SkIDChangeListenerD2Ev(%class.SkIDChangeListener* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN18SkIDChangeListenerD0Ev(%class.SkIDChangeListener* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkIDChangeListener4ListC2Ev(%"class.SkIDChangeListener::List"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %2, align 4
  %3 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 0, i32 0, i32 2
  %5 = bitcast %"struct.SkSemaphore::OSSemaphore"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkIDChangeListener4ListD2Ev(%"class.SkIDChangeListener::List"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 1, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkTDArray, %class.SkTDArray* %2, i64 0, i32 0
  br label %12

8:                                                ; preds = %42, %1
  %9 = bitcast %class.SkTDArray* %2 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_Z7sk_freePv(i8* %10) #10
  %11 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %11) #10
  ret void

12:                                               ; preds = %6, %42
  %13 = phi i64 [ 0, %6 ], [ %43, %42 ]
  %14 = load %class.SkIDChangeListener**, %class.SkIDChangeListener*** %7, align 8
  %15 = getelementptr inbounds %class.SkIDChangeListener*, %class.SkIDChangeListener** %14, i64 %13
  %16 = load %class.SkIDChangeListener*, %class.SkIDChangeListener** %15, align 8
  %17 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i8, i8* %17 acquire, align 1
  %19 = and i8 %18, 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %29

21:                                               ; preds = %12
  %22 = load %class.SkIDChangeListener**, %class.SkIDChangeListener*** %7, align 8
  %23 = getelementptr inbounds %class.SkIDChangeListener*, %class.SkIDChangeListener** %22, i64 %13
  %24 = load %class.SkIDChangeListener*, %class.SkIDChangeListener** %23, align 8
  %25 = bitcast %class.SkIDChangeListener* %24 to void (%class.SkIDChangeListener*)***
  %26 = load void (%class.SkIDChangeListener*)**, void (%class.SkIDChangeListener*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.SkIDChangeListener*)*, void (%class.SkIDChangeListener*)** %26, i64 3
  %28 = load void (%class.SkIDChangeListener*)*, void (%class.SkIDChangeListener*)** %27, align 8
  tail call void %28(%class.SkIDChangeListener* %24) #10
  br label %29

29:                                               ; preds = %12, %21
  %30 = load %class.SkIDChangeListener**, %class.SkIDChangeListener*** %7, align 8
  %31 = getelementptr inbounds %class.SkIDChangeListener*, %class.SkIDChangeListener** %30, i64 %13
  %32 = bitcast %class.SkIDChangeListener** %31 to %class.SkRefCntBase**
  %33 = load %class.SkRefCntBase*, %class.SkRefCntBase** %32, align 8
  %34 = getelementptr inbounds %class.SkRefCntBase, %class.SkRefCntBase* %33, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %42

37:                                               ; preds = %29
  %38 = bitcast %class.SkRefCntBase* %33 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* %33) #10
  br label %42

42:                                               ; preds = %29, %37
  %43 = add nuw nsw i64 %13, 1
  %44 = load i32, i32* %3, align 4
  %45 = sext i32 %44 to i64
  %46 = icmp slt i64 %43, %45
  br i1 %46, label %12, label %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkIDChangeListener4List3addE5sk_spIS_E(%"class.SkIDChangeListener::List"*, %class.sk_sp* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %4 = load %class.SkIDChangeListener*, %class.SkIDChangeListener** %3, align 8
  %5 = icmp eq %class.SkIDChangeListener* %4, null
  br i1 %5, label %96, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acquire
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %11) #10
  br label %12

12:                                               ; preds = %6, %10
  %13 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 1, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.SkTDArray, %class.SkTDArray* %13, i64 0, i32 0
  br label %55

19:                                               ; preds = %91, %12
  %20 = bitcast %class.sk_sp* %1 to i64*
  %21 = load i64, i64* %20, align 8
  store %class.SkIDChangeListener* null, %class.SkIDChangeListener** %3, align 8
  %22 = load i32, i32* %14, align 4
  %23 = add i32 %22, 1
  %24 = icmp sgt i32 %23, -1
  br i1 %24, label %26, label %25

25:                                               ; preds = %19
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #9
  unreachable

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 1, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = icmp slt i32 %28, %23
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.SkTDArray, %class.SkTDArray* %13, i64 0, i32 0
  %32 = load %class.SkIDChangeListener**, %class.SkIDChangeListener*** %31, align 8
  br label %46

33:                                               ; preds = %26
  %34 = add i32 %22, 5
  %35 = lshr i32 %34, 2
  %36 = add nuw i32 %35, %34
  %37 = icmp sgt i32 %36, -1
  br i1 %37, label %39, label %38

38:                                               ; preds = %33
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #9
  unreachable

39:                                               ; preds = %33
  store i32 %36, i32* %27, align 8
  %40 = bitcast %class.SkTDArray* %13 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = sext i32 %36 to i64
  %43 = shl nsw i64 %42, 3
  %44 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %41, i64 %43) #10
  store i8* %44, i8** %40, align 8
  %45 = bitcast i8* %44 to %class.SkIDChangeListener**
  br label %46

46:                                               ; preds = %30, %39
  %47 = phi %class.SkIDChangeListener** [ %32, %30 ], [ %45, %39 ]
  store i32 %23, i32* %14, align 4
  %48 = sext i32 %22 to i64
  %49 = getelementptr inbounds %class.SkIDChangeListener*, %class.SkIDChangeListener** %47, i64 %48
  %50 = bitcast %class.SkIDChangeListener** %49 to i64*
  store i64 %21, i64* %50, align 8
  %51 = atomicrmw add i32* %7, i32 1 release
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %53, label %96

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %54, i32 1) #10
  br label %96

55:                                               ; preds = %17, %91
  %56 = phi i32 [ 0, %17 ], [ %93, %91 ]
  %57 = load %class.SkIDChangeListener**, %class.SkIDChangeListener*** %18, align 8
  %58 = sext i32 %56 to i64
  %59 = getelementptr inbounds %class.SkIDChangeListener*, %class.SkIDChangeListener** %57, i64 %58
  %60 = load %class.SkIDChangeListener*, %class.SkIDChangeListener** %59, align 8
  %61 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %60, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i8, i8* %61 acquire, align 1
  %63 = and i8 %62, 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %91, label %65

65:                                               ; preds = %55
  %66 = load %class.SkIDChangeListener**, %class.SkIDChangeListener*** %18, align 8
  %67 = getelementptr inbounds %class.SkIDChangeListener*, %class.SkIDChangeListener** %66, i64 %58
  %68 = bitcast %class.SkIDChangeListener** %67 to %class.SkRefCntBase**
  %69 = load %class.SkRefCntBase*, %class.SkRefCntBase** %68, align 8
  %70 = getelementptr inbounds %class.SkRefCntBase, %class.SkRefCntBase* %69, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = atomicrmw add i32* %70, i32 -1 acq_rel
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %78

73:                                               ; preds = %65
  %74 = bitcast %class.SkRefCntBase* %69 to void (%class.SkRefCntBase*)***
  %75 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %74, align 8
  %76 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, i64 2
  %77 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, align 8
  tail call void %77(%class.SkRefCntBase* %69) #10
  br label %78

78:                                               ; preds = %65, %73
  %79 = add nsw i32 %56, -1
  %80 = load i32, i32* %14, align 4
  %81 = add nsw i32 %80, -1
  store i32 %81, i32* %14, align 4
  %82 = icmp eq i32 %81, %56
  br i1 %82, label %91, label %83

83:                                               ; preds = %78
  %84 = load %class.SkIDChangeListener**, %class.SkIDChangeListener*** %18, align 8
  %85 = getelementptr inbounds %class.SkIDChangeListener*, %class.SkIDChangeListener** %84, i64 %58
  %86 = sext i32 %81 to i64
  %87 = getelementptr inbounds %class.SkIDChangeListener*, %class.SkIDChangeListener** %84, i64 %86
  %88 = bitcast %class.SkIDChangeListener** %87 to i64*
  %89 = bitcast %class.SkIDChangeListener** %85 to i64*
  %90 = load i64, i64* %88, align 8
  store i64 %90, i64* %89, align 8
  br label %91

91:                                               ; preds = %55, %83, %78
  %92 = phi i32 [ %56, %55 ], [ %79, %78 ], [ %79, %83 ]
  %93 = add nsw i32 %92, 1
  %94 = load i32, i32* %14, align 4
  %95 = icmp slt i32 %93, %94
  br i1 %95, label %55, label %19

96:                                               ; preds = %2, %53, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK18SkIDChangeListener4List5countEv(%"class.SkIDChangeListener::List"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw sub i32* %2, i32 1 acquire
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 1, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = atomicrmw add i32* %2, i32 1 release
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %13, i32 1) #10
  br label %14

14:                                               ; preds = %7, %12
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkIDChangeListener4List7changedEv(%"class.SkIDChangeListener::List"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw sub i32* %2, i32 1 acquire
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %class.SkTDArray, %class.SkTDArray* %8, i64 0, i32 0
  %10 = load %class.SkIDChangeListener**, %class.SkIDChangeListener*** %9, align 8
  %11 = icmp eq %class.SkIDChangeListener** %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 1, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %class.SkIDChangeListener*, %class.SkIDChangeListener** %10, i64 %15
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %21, label %31

18:                                               ; preds = %53
  %19 = load %class.SkIDChangeListener**, %class.SkIDChangeListener*** %9, align 8
  %20 = icmp eq %class.SkIDChangeListener** %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %12, %18
  %22 = phi %class.SkIDChangeListener** [ %19, %18 ], [ %10, %12 ]
  %23 = bitcast %class.SkIDChangeListener** %22 to i8*
  tail call void @_Z7sk_freePv(i8* nonnull %23) #10
  %24 = bitcast %class.SkTDArray* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #10
  br label %25

25:                                               ; preds = %7, %18, %21
  %26 = atomicrmw add i32* %2, i32 1 release
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %29, i32 1) #10
  br label %30

30:                                               ; preds = %25, %28
  ret void

31:                                               ; preds = %12, %53
  %32 = phi %class.SkIDChangeListener** [ %54, %53 ], [ %10, %12 ]
  %33 = load %class.SkIDChangeListener*, %class.SkIDChangeListener** %32, align 8
  %34 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %33, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i8, i8* %34 acquire, align 1
  %36 = and i8 %35, 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %31
  %39 = bitcast %class.SkIDChangeListener* %33 to void (%class.SkIDChangeListener*)***
  %40 = load void (%class.SkIDChangeListener*)**, void (%class.SkIDChangeListener*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.SkIDChangeListener*)*, void (%class.SkIDChangeListener*)** %40, i64 3
  %42 = load void (%class.SkIDChangeListener*)*, void (%class.SkIDChangeListener*)** %41, align 8
  tail call void %42(%class.SkIDChangeListener* %33) #10
  br label %43

43:                                               ; preds = %31, %38
  %44 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %33, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %53

47:                                               ; preds = %43
  %48 = bitcast %class.SkIDChangeListener* %33 to %class.SkRefCntBase*
  %49 = bitcast %class.SkIDChangeListener* %33 to void (%class.SkRefCntBase*)***
  %50 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, i64 2
  %52 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, align 8
  tail call void %52(%class.SkRefCntBase* %48) #10
  br label %53

53:                                               ; preds = %43, %47
  %54 = getelementptr inbounds %class.SkIDChangeListener*, %class.SkIDChangeListener** %32, i64 1
  %55 = icmp eq %class.SkIDChangeListener** %54, %16
  br i1 %55, label %18, label %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkIDChangeListener4List5resetEv(%"class.SkIDChangeListener::List"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw sub i32* %2, i32 1 acquire
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %class.SkTDArray, %class.SkTDArray* %8, i64 0, i32 0
  %10 = load %class.SkIDChangeListener**, %class.SkIDChangeListener*** %9, align 8
  %11 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 1, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %class.SkIDChangeListener*, %class.SkIDChangeListener** %10, i64 %13
  %15 = icmp sgt i32 %12, 0
  br i1 %15, label %16, label %33

16:                                               ; preds = %7, %28
  %17 = phi %class.SkIDChangeListener** [ %29, %28 ], [ %10, %7 ]
  %18 = bitcast %class.SkIDChangeListener** %17 to %class.SkRefCntBase**
  %19 = load %class.SkRefCntBase*, %class.SkRefCntBase** %18, align 8
  %20 = getelementptr inbounds %class.SkRefCntBase, %class.SkRefCntBase* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %28

23:                                               ; preds = %16
  %24 = bitcast %class.SkRefCntBase* %19 to void (%class.SkRefCntBase*)***
  %25 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, i64 2
  %27 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, align 8
  tail call void %27(%class.SkRefCntBase* %19) #10
  br label %28

28:                                               ; preds = %23, %16
  %29 = getelementptr inbounds %class.SkIDChangeListener*, %class.SkIDChangeListener** %17, i64 1
  %30 = icmp ult %class.SkIDChangeListener** %29, %14
  br i1 %30, label %16, label %31

31:                                               ; preds = %28
  %32 = load %class.SkIDChangeListener**, %class.SkIDChangeListener*** %9, align 8
  br label %33

33:                                               ; preds = %31, %7
  %34 = phi %class.SkIDChangeListener** [ %32, %31 ], [ %10, %7 ]
  %35 = icmp eq %class.SkIDChangeListener** %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = bitcast %class.SkIDChangeListener** %34 to i8*
  tail call void @_Z7sk_freePv(i8* nonnull %37) #10
  %38 = bitcast %class.SkTDArray* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #10
  br label %39

39:                                               ; preds = %33, %36
  %40 = atomicrmw add i32* %2, i32 1 release
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.SkIDChangeListener::List", %"class.SkIDChangeListener::List"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %43, i32 1) #10
  br label %44

44:                                               ; preds = %39, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #4 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #10
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore*) unnamed_addr #5

declare void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore*) local_unnamed_addr #6

declare void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore*, i32) local_unnamed_addr #6

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #7

declare i8* @_Z16sk_realloc_throwPvm(i8*, i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
