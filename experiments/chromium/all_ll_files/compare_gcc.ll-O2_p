; ModuleID = '../../third_party/libyuv/source/compare_gcc.cc'
source_filename = "../../third_party/libyuv/source/compare_gcc.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@_ZN6libyuvL11kNibbleMaskE = internal constant <16 x i8> <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>, align 16
@_ZN6libyuvL9kBitCountE = internal constant <16 x i8> <i8 0, i8 1, i8 1, i8 2, i8 1, i8 2, i8 2, i8 3, i8 1, i8 2, i8 2, i8 3, i8 2, i8 3, i8 3, i8 4>, align 16
@_ZN6libyuvL10kHash16x33E = internal constant <4 x i32> <i32 -1831214591, i32 0, i32 0, i32 0>, align 16
@_ZN6libyuvL9kHashMul0E = internal constant <4 x i32> <i32 204809697, i32 -1555599935, i32 994064801, i32 1331628417>, align 16
@_ZN6libyuvL9kHashMul1E = internal constant <4 x i32> <i32 821255521, i32 -2057521855, i32 67801377, i32 1954312449>, align 16
@_ZN6libyuvL9kHashMul2E = internal constant <4 x i32> <i32 -331229983, i32 1291467969, i32 39135393, i32 1185921>, align 16
@_ZN6libyuvL9kHashMul3E = internal constant <4 x i32> <i32 35937, i32 1089, i32 33, i32 1>, align 16

; Function Attrs: nounwind ssp uwtable
define hidden i32 @HammingDistance_SSE42(i8*, i8*, i32) local_unnamed_addr #0 {
  %4 = tail call { i8*, i8*, i32, i64 } asm sideeffect "xor         $3,$3                         \0Axor         %r8,%r8                     \0Axor         %r9,%r9                     \0Axor         %r10,%r10                   \0A1:                                        \0Amov         ($0),%rcx                    \0Amov         0x8($0),%rdx                 \0Axor         ($1),%rcx                    \0Axor         0x8($1),%rdx                 \0Apopcnt      %rcx,%rcx                   \0Apopcnt      %rdx,%rdx                   \0Amov         0x10($0),%rsi                \0Amov         0x18($0),%rdi                \0Axor         0x10($1),%rsi                \0Axor         0x18($1),%rdi                \0Apopcnt      %rsi,%rsi                   \0Apopcnt      %rdi,%rdi                   \0Aadd         $$0x20,$0                      \0Aadd         $$0x20,$1                      \0Aadd         %rcx,$3                      \0Aadd         %rdx,%r8                    \0Aadd         %rsi,%r9                    \0Aadd         %rdi,%r10                   \0Asub         $$0x20,$2                      \0Ajg          1b                            \0Aadd         %r8, $3                      \0Aadd         %r9, $3                      \0Aadd         %r10, $3                     \0A", "=r,=r,=r,=r,0,1,2,~{memory},~{cc},~{rcx},~{rdx},~{rsi},~{rdi},~{r8},~{r9},~{r10},~{dirflag},~{fpsr},~{flags}"(i8* %0, i8* %1, i32 %2) #2, !srcloc !2
  %5 = extractvalue { i8*, i8*, i32, i64 } %4, 3
  %6 = trunc i64 %5 to i32
  ret i32 %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @HammingDistance_SSSE3(i8*, i8*, i32) local_unnamed_addr #0 {
  %4 = tail call { i8*, i8*, i32, i32 } asm sideeffect "movdqa      $4,%xmm2                     \0Amovdqa      $5,%xmm3                     \0Apxor        %xmm0,%xmm0                 \0Apxor        %xmm1,%xmm1                 \0Asub         $0,$1                         \0A1:                                        \0Amovdqa      ($0),%xmm4                   \0Amovdqa      0x10($0), %xmm5              \0Apxor        ($0,$1), %xmm4               \0Amovdqa      %xmm4,%xmm6                 \0Apand        %xmm2,%xmm6                 \0Apsrlw       $$0x4,%xmm4                   \0Amovdqa      %xmm3,%xmm7                 \0Apshufb      %xmm6,%xmm7                 \0Apand        %xmm2,%xmm4                 \0Amovdqa      %xmm3,%xmm6                 \0Apshufb      %xmm4,%xmm6                 \0Apaddb       %xmm7,%xmm6                 \0Apxor        0x10($0,$1),%xmm5            \0Aadd         $$0x20,$0                      \0Amovdqa      %xmm5,%xmm4                 \0Apand        %xmm2,%xmm5                 \0Apsrlw       $$0x4,%xmm4                   \0Amovdqa      %xmm3,%xmm7                 \0Apshufb      %xmm5,%xmm7                 \0Apand        %xmm2,%xmm4                 \0Amovdqa      %xmm3,%xmm5                 \0Apshufb      %xmm4,%xmm5                 \0Apaddb       %xmm7,%xmm5                 \0Apaddb       %xmm5,%xmm6                 \0Apsadbw      %xmm1,%xmm6                 \0Apaddd       %xmm6,%xmm0                 \0Asub         $$0x20,$2                      \0Ajg          1b                            \0Apshufd      $$0xaa,%xmm0,%xmm1           \0Apaddd       %xmm1,%xmm0                 \0Amovd        %xmm0, $3                    \0A", "=r,=r,=r,=r,*m,*m,0,1,2,~{memory},~{cc},~{xmm0},~{xmm1},~{xmm2},~{xmm3},~{xmm4},~{xmm5},~{xmm6},~{xmm7},~{dirflag},~{fpsr},~{flags}"(<16 x i8>* nonnull @_ZN6libyuvL11kNibbleMaskE, <16 x i8>* nonnull @_ZN6libyuvL9kBitCountE, i8* %0, i8* %1, i32 %2) #2, !srcloc !3
  %5 = extractvalue { i8*, i8*, i32, i32 } %4, 3
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @HammingDistance_AVX2(i8*, i8*, i32) local_unnamed_addr #0 {
  %4 = tail call { i8*, i8*, i32, i32 } asm sideeffect "vbroadcastf128 $4,%ymm2                  \0Avbroadcastf128 $5,%ymm3                  \0Avpxor       %ymm0,%ymm0,%ymm0          \0Avpxor       %ymm1,%ymm1,%ymm1          \0Asub         $0,$1                         \0A1:                                        \0Avmovdqa     ($0),%ymm4                   \0Avmovdqa     0x20($0), %ymm5              \0Avpxor       ($0,$1), %ymm4, %ymm4       \0Avpand       %ymm2,%ymm4,%ymm6          \0Avpsrlw      $$0x4,%ymm4,%ymm4            \0Avpshufb     %ymm6,%ymm3,%ymm6          \0Avpand       %ymm2,%ymm4,%ymm4          \0Avpshufb     %ymm4,%ymm3,%ymm4          \0Avpaddb      %ymm4,%ymm6,%ymm6          \0Avpxor       0x20($0,$1),%ymm5,%ymm4     \0Aadd         $$0x40,$0                      \0Avpand       %ymm2,%ymm4,%ymm5          \0Avpsrlw      $$0x4,%ymm4,%ymm4            \0Avpshufb     %ymm5,%ymm3,%ymm5          \0Avpand       %ymm2,%ymm4,%ymm4          \0Avpshufb     %ymm4,%ymm3,%ymm4          \0Avpaddb      %ymm5,%ymm4,%ymm4          \0Avpaddb      %ymm6,%ymm4,%ymm4          \0Avpsadbw     %ymm1,%ymm4,%ymm4          \0Avpaddd      %ymm0,%ymm4,%ymm0          \0Asub         $$0x40,$2                      \0Ajg          1b                            \0Avpermq      $$0xb1,%ymm0,%ymm1           \0Avpaddd      %ymm1,%ymm0,%ymm0          \0Avpermq      $$0xaa,%ymm0,%ymm1           \0Avpaddd      %ymm1,%ymm0,%ymm0          \0Avmovd       %xmm0, $3                    \0Avzeroupper                                \0A", "=r,=r,=r,=r,*m,*m,0,1,2,~{memory},~{cc},~{xmm0},~{xmm1},~{xmm2},~{xmm3},~{xmm4},~{xmm5},~{xmm6},~{dirflag},~{fpsr},~{flags}"(<16 x i8>* nonnull @_ZN6libyuvL11kNibbleMaskE, <16 x i8>* nonnull @_ZN6libyuvL9kBitCountE, i8* %0, i8* %1, i32 %2) #2, !srcloc !4
  %5 = extractvalue { i8*, i8*, i32, i32 } %4, 3
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SumSquareError_SSE2(i8*, i8*, i32) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #2
  store i32 -1431655766, i32* %4, align 4
  %6 = call { i8*, i8*, i32 } asm sideeffect "pxor        %xmm0,%xmm0                 \0Apxor        %xmm5,%xmm5                 \0A1:                                        \0Amovdqu      ($0),%xmm1                   \0Alea         0x10($0),$0                   \0Amovdqu      ($1),%xmm2                   \0Alea         0x10($1),$1                   \0Amovdqa      %xmm1,%xmm3                 \0Apsubusb     %xmm2,%xmm1                 \0Apsubusb     %xmm3,%xmm2                 \0Apor         %xmm2,%xmm1                 \0Amovdqa      %xmm1,%xmm2                 \0Apunpcklbw   %xmm5,%xmm1                 \0Apunpckhbw   %xmm5,%xmm2                 \0Apmaddwd     %xmm1,%xmm1                 \0Apmaddwd     %xmm2,%xmm2                 \0Apaddd       %xmm1,%xmm0                 \0Apaddd       %xmm2,%xmm0                 \0Asub         $$0x10,$2                      \0Ajg          1b                            \0Apshufd      $$0xee,%xmm0,%xmm1           \0Apaddd       %xmm1,%xmm0                 \0Apshufd      $$0x1,%xmm0,%xmm1            \0Apaddd       %xmm1,%xmm0                 \0Amovd        %xmm0,$3                     \0A", "=r,=r,=r,=*imr,0,1,2,~{memory},~{cc},~{xmm0},~{xmm1},~{xmm2},~{xmm3},~{xmm5},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %4, i8* %0, i8* %1, i32 %2) #2, !srcloc !5
  %7 = load i32, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #2
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @HashDjb2_SSE41(i8*, i32, i32) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %2, i32* %4, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #2
  store i32 -1431655766, i32* %5, align 4
  %7 = call { i8*, i32 } asm sideeffect "movd        $2,%xmm0                     \0Apxor        %xmm7,%xmm7                 \0Amovdqa      $4,%xmm6                     \0A1:                                        \0Amovdqu      ($0),%xmm1                   \0Alea         0x10($0),$0                   \0Apmulld      %xmm6,%xmm0                 \0Amovdqa      $5,%xmm5                     \0Amovdqa      %xmm1,%xmm2                 \0Apunpcklbw   %xmm7,%xmm2                 \0Amovdqa      %xmm2,%xmm3                 \0Apunpcklwd   %xmm7,%xmm3                 \0Apmulld      %xmm5,%xmm3                 \0Amovdqa      $6,%xmm5                     \0Amovdqa      %xmm2,%xmm4                 \0Apunpckhwd   %xmm7,%xmm4                 \0Apmulld      %xmm5,%xmm4                 \0Amovdqa      $7,%xmm5                     \0Apunpckhbw   %xmm7,%xmm1                 \0Amovdqa      %xmm1,%xmm2                 \0Apunpcklwd   %xmm7,%xmm2                 \0Apmulld      %xmm5,%xmm2                 \0Amovdqa      $8,%xmm5                     \0Apunpckhwd   %xmm7,%xmm1                 \0Apmulld      %xmm5,%xmm1                 \0Apaddd       %xmm4,%xmm3                 \0Apaddd       %xmm2,%xmm1                 \0Apaddd       %xmm3,%xmm1                 \0Apshufd      $$0xe,%xmm1,%xmm2            \0Apaddd       %xmm2,%xmm1                 \0Apshufd      $$0x1,%xmm1,%xmm2            \0Apaddd       %xmm2,%xmm1                 \0Apaddd       %xmm1,%xmm0                 \0Asub         $$0x10,$1                      \0Ajg          1b                            \0Amovd        %xmm0,$3                     \0A", "=r,=r,=*rm,=*imr,*m,*m,*m,*m,*m,0,1,2,~{memory},~{cc},~{xmm0},~{xmm1},~{xmm2},~{xmm3},~{xmm4},~{xmm5},~{xmm6},~{xmm7},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %4, i32* nonnull %5, <4 x i32>* nonnull @_ZN6libyuvL10kHash16x33E, <4 x i32>* nonnull @_ZN6libyuvL9kHashMul0E, <4 x i32>* nonnull @_ZN6libyuvL9kHashMul1E, <4 x i32>* nonnull @_ZN6libyuvL9kHashMul2E, <4 x i32>* nonnull @_ZN6libyuvL9kHashMul3E, i8* %0, i32 %1, i32 %2) #2, !srcloc !6
  %8 = load i32, i32* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #2
  ret i32 %8
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 898, i32 952, i32 1005, i32 1058, i32 1165, i32 1218, i32 1271, i32 1324, i32 1377, i32 1430, i32 1483, i32 1536, i32 1589, i32 1642, i32 1695, i32 1748, i32 1801, i32 1854, i32 1907, i32 1960, i32 2013, i32 2066, i32 2119, i32 2172, i32 2225, i32 2279, i32 2332, i32 2385}
!3 = !{i32 4617, i32 4671, i32 4724, i32 4777, i32 4830, i32 4901, i32 4954, i32 5007, i32 5060, i32 5113, i32 5166, i32 5219, i32 5272, i32 5325, i32 5378, i32 5431, i32 5484, i32 5537, i32 5590, i32 5643, i32 5696, i32 5749, i32 5802, i32 5855, i32 5908, i32 5961, i32 6014, i32 6067, i32 6120, i32 6173, i32 6226, i32 6279, i32 6332, i32 6385, i32 6439, i32 6492, i32 6545}
!4 = !{i32 7129, i32 7183, i32 7236, i32 7289, i32 7342, i32 7413, i32 7466, i32 7519, i32 7572, i32 7625, i32 7678, i32 7731, i32 7784, i32 7837, i32 7890, i32 7943, i32 7996, i32 8049, i32 8102, i32 8155, i32 8208, i32 8261, i32 8314, i32 8367, i32 8420, i32 8473, i32 8526, i32 8579, i32 8633, i32 8686, i32 8739, i32 8792, i32 8845, i32 8898}
!5 = !{i32 9460, i32 9514, i32 9585, i32 9638, i32 9691, i32 9744, i32 9797, i32 9850, i32 9903, i32 9956, i32 10009, i32 10062, i32 10115, i32 10168, i32 10221, i32 10274, i32 10327, i32 10380, i32 10433, i32 10486, i32 10540, i32 10593, i32 10646, i32 10699, i32 10752}
!6 = !{i32 11769, i32 11823, i32 11876, i32 11947, i32 12000, i32 12053, i32 12106, i32 12159, i32 12212, i32 12265, i32 12318, i32 12371, i32 12424, i32 12477, i32 12530, i32 12583, i32 12636, i32 12689, i32 12742, i32 12795, i32 12848, i32 12901, i32 12954, i32 13007, i32 13060, i32 13113, i32 13166, i32 13219, i32 13272, i32 13325, i32 13378, i32 13431, i32 13484, i32 13537, i32 13590, i32 13643}
