; ModuleID = '../../third_party/skia/src/gpu/effects/generated/GrRRectBlurEffect.cpp'
source_filename = "../../third_party/skia/src/gpu/effects/generated/GrRRectBlurEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRGBA4f = type { float, float, float, float }
%class.GrStyle = type { %class.SkStrokeRec, %class.sk_sp.323, %"struct.GrStyle::DashInfo" }
%class.SkStrokeRec = type { float, float, float, i32 }
%class.sk_sp.323 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.GrStyle::DashInfo" = type { i32, float, %class.SkAutoSTArray }
%class.SkAutoSTArray = type { i32, float*, [16 x i8] }
%class.GrRRectBlurEffect = type { %class.GrFragmentProcessor.base, float, %struct.SkRect, float, [4 x i8] }
%class.GrFragmentProcessor.base = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage" }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.2", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.189" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.5, %class.SkTHashMap, %class.SkTHashMap.13, %class.SkTArray.22, %class.SkTArray.24, i32, i8, [3 x i8] }>
%class.SkTArray.5 = type { %"class.std::__1::unique_ptr.6"*, i64 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.24, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.25 }
%class.sk_sp.25 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.7" }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.13 = type { %class.SkTHashTable.14 }
%class.SkTHashTable.14 = type { i32, i32, %class.SkAutoTArray.15 }
%class.SkAutoTArray.15 = type { %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.223" }
%"struct.std::__1::pair.223" = type { i32, %class.SkTArray.224* }
%class.SkTArray.224 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.22 = type { %"class.std::__1::unique_ptr.23"*, i64 }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.224, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.24 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.38 }
%class.SkFibBlockSizes.38 = type { i32 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.45, %class.SkTArray.54, %class.GrOpsTask*, %class.SkSTArray.154, %class.SkSTArray.157, %"class.std::__1::unique_ptr.159", %class.sk_sp.175, %class.GrTokenTracker, i8, i8, %class.SkTArray.176, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.45 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.46", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.49, i8, [7 x i8] }>
%class.sk_sp.49 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.50, i8*, i64 }
%class.GrBuffer = type { i32 (...)** }
%class.GrNonAtomicRef.50 = type { i32 }
%class.SkTArray.54 = type { %class.sk_sp.55*, i64 }
%class.sk_sp.55 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray.56, %class.SkTArray.130, i32, i32, %class.SkSTArray.137, %class.SkSTArray.137, %class.GrTextureResolveRenderTask* }
%class.SkSTArray.56 = type { %class.SkAlignedSTStorage.57, %class.SkTArray.58 }
%class.SkAlignedSTStorage.57 = type { [8 x i8] }
%class.SkTArray.58 = type { %class.sk_sp.59*, i64 }
%class.sk_sp.59 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.60, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.125" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.60 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.63 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.61, i8* }
%class.sk_sp.61 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.62, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.62 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.63 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.64, void (i8*)*, i8* }
%class.SkNVRefCnt.64 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.65, i32, [4 x i8] }
%union.anon.65 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.60, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.122, %class.sk_sp.124, %class.sk_sp.124 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.97, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.113, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type { %class.SkTDynamicHash, %class.GrImageContext* }
%class.SkTDynamicHash = type { %class.SkTHashTable.67 }
%class.SkTHashTable.67 = type { i32, i32, %class.SkAutoTArray.68 }
%class.SkAutoTArray.68 = type { %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot" = type opaque
%class.GrImageContext = type <{ %class.GrContext_Base, %class.GrSingleOwner, [7 x i8] }>
%class.GrThreadSafeCache = type { %class.SkSpinlock, %class.SkTDynamicHash.79, %class.SkTInternalLList, [6656 x i8], %class.SkArenaAlloc, %"struct.GrThreadSafeCache::Entry"* }
%class.SkSpinlock = type { %"struct.std::__1::atomic.75" }
%"struct.std::__1::atomic.75" = type { %"struct.std::__1::__atomic_base.76" }
%"struct.std::__1::__atomic_base.76" = type { %"struct.std::__1::__cxx_atomic_impl.77" }
%"struct.std::__1::__cxx_atomic_impl.77" = type { %"struct.std::__1::__cxx_atomic_base_impl.78" }
%"struct.std::__1::__cxx_atomic_base_impl.78" = type { i8 }
%class.SkTDynamicHash.79 = type { %class.SkTHashTable.80 }
%class.SkTHashTable.80 = type { i32, i32, %class.SkAutoTArray.81 }
%class.SkAutoTArray.81 = type { %"class.std::__1::unique_ptr.82" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.SkTHashTable<GrThreadSafeCache::Entry *, GrUniqueKey, SkTDynamicHash<GrThreadSafeCache::Entry, GrUniqueKey, GrThreadSafeCache::Entry>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrThreadSafeCache::Entry *, GrUniqueKey, SkTDynamicHash<GrThreadSafeCache::Entry, GrUniqueKey, GrThreadSafeCache::Entry>::AdaptedTraits>::Slot" = type opaque
%class.SkTInternalLList = type { %"struct.GrThreadSafeCache::Entry"*, %"struct.GrThreadSafeCache::Entry"* }
%"struct.GrThreadSafeCache::Entry" = type <{ %"class.std::__1::chrono::time_point", %"struct.GrThreadSafeCache::Entry"*, %"struct.GrThreadSafeCache::Entry"*, %class.GrUniqueKey, %union.anon.195, i32, [4 x i8] }>
%union.anon.195 = type { %class.sk_sp.196, [8 x i8] }
%class.sk_sp.196 = type { %"class.GrThreadSafeCache::VertexData"* }
%"class.GrThreadSafeCache::VertexData" = type { %class.SkNVRefCnt.197, i8*, i32, i64, %class.sk_sp.198 }
%class.SkNVRefCnt.197 = type { %"struct.std::__1::atomic" }
%class.sk_sp.198 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash.88, i32, [4 x i8] }>
%class.SkTDynamicHash.88 = type { %class.SkTHashTable.89 }
%class.SkTHashTable.89 = type { i32, i32, %class.SkAutoTArray.90 }
%class.SkAutoTArray.90 = type { %"class.std::__1::unique_ptr.91" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.97 = type { %class.SkTHashTable.98 }
%class.SkTHashTable.98 = type { i32, i32, %class.SkAutoTArray.99 }
%class.SkAutoTArray.99 = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.106, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.106 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.107" }
%"struct.std::__1::atomic.107" = type { %"struct.std::__1::__atomic_base.108" }
%"struct.std::__1::__atomic_base.108" = type { %"struct.std::__1::__atomic_base.109" }
%"struct.std::__1::__atomic_base.109" = type { %"struct.std::__1::__cxx_atomic_impl.110" }
%"struct.std::__1::__cxx_atomic_impl.110" = type { %"struct.std::__1::__cxx_atomic_base_impl.111" }
%"struct.std::__1::__cxx_atomic_base_impl.111" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.112, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.112 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.113 = type { %class.SkTHashTable.114 }
%class.SkTHashTable.114 = type { i32, i32, %class.SkAutoTArray.115 }
%class.SkAutoTArray.115 = type { %"class.std::__1::unique_ptr.116" }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.122 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.123, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.123 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.124 = type { %class.GrGpuBuffer* }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.125" = type { %"struct.std::__1::__atomic_base.126" }
%"struct.std::__1::__atomic_base.126" = type { %"struct.std::__1::__atomic_base.127" }
%"struct.std::__1::__atomic_base.127" = type { %"struct.std::__1::__cxx_atomic_impl.128" }
%"struct.std::__1::__cxx_atomic_impl.128" = type { %"struct.std::__1::__cxx_atomic_base_impl.129" }
%"struct.std::__1::__cxx_atomic_base_impl.129" = type { i64 }
%class.SkTArray.130 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.131", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.137 = type { %class.SkAlignedSTStorage.138, %class.SkTArray.139 }
%class.SkAlignedSTStorage.138 = type { [8 x i8] }
%class.SkTArray.139 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.140, %class.sk_sp.151, %class.SkTArray.153, %struct.SkRect, %struct.SkIRect }
%class.GrSwizzle = type { i16 }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.140 = type { %class.SkAlignedSTStorage.141, %class.SkTArray.142 }
%class.SkAlignedSTStorage.141 = type { [2000 x i8] }
%class.SkTArray.142 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.143", %class.GrOp* }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.143", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.59, i32, %class.GrSwizzle, [2 x i8] }>
%struct.SkIPoint = type { i32, i32 }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.149 }
%union.anon.149 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.150, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.150 = type { i32 }
%class.sk_sp.151 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.152, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.152 = type { %"struct.std::__1::atomic" }
%class.SkTArray.153 = type { %class.GrSurfaceProxy**, i64 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkSTArray.154 = type { %class.SkAlignedSTStorage.155, %class.SkTArray.156 }
%class.SkAlignedSTStorage.155 = type { [32 x i8] }
%class.SkTArray.156 = type { i32*, i64 }
%class.SkSTArray.157 = type { %class.SkAlignedSTStorage.158, %class.SkTArray.54 }
%class.SkAlignedSTStorage.158 = type { [32 x i8] }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.162, %"class.std::__1::unique_ptr.166", %class.GrPathRenderer* }
%class.SkSTArray.162 = type { %class.SkAlignedSTStorage.163, %class.SkTArray.164 }
%class.SkAlignedSTStorage.163 = type { [64 x i8] }
%class.SkTArray.164 = type { %class.sk_sp.165*, i64 }
%class.sk_sp.165 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.175 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.176 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.177, i32, %class.GrRenderTask** }
%class.SkTHashMap.177 = type { %class.SkTHashTable.178 }
%class.SkTHashTable.178 = type { i32, i32, %class.SkAutoTArray.179 }
%class.SkAutoTArray.179 = type { %"class.std::__1::unique_ptr.180" }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %class.GrProxyProvider* }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%class.SkBitmap = type { %class.sk_sp.331, %class.SkPixmap, %class.sk_sp.332 }
%class.sk_sp.331 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.283, i32, i32 }
%class.sk_sp.283 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.284, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.284 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.sk_sp.332 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { float* }
%"class.std::__1::tuple.337" = type { %"struct.std::__1::__tuple_impl.338" }
%"struct.std::__1::__tuple_impl.338" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.339", [4 x i8] }
%"class.std::__1::__tuple_leaf" = type { %class.GrSurfaceProxyView }
%"class.std::__1::__tuple_leaf.339" = type { i32 }
%class.SkSurfaceProps = type { i32, i32 }
%class.GrPaint = type <{ %class.GrXPFactory*, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", i8, [3 x i8], %struct.SkRGBA4f, [4 x i8] }>
%class.GrXPFactory = type { i32 (...)** }
%class.SkMatrix = type { [9 x float], i32 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.277" }
%"class.std::__1::__tuple_leaf.277" = type { %class.sk_sp.278 }
%class.sk_sp.278 = type { %"class.GrThreadSafeCache::Trampoline"* }
%"class.GrThreadSafeCache::Trampoline" = type { %class.SkRefCnt.base, %class.sk_sp.279 }
%class.sk_sp.279 = type { %class.GrTextureProxy* }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.236", %class.sk_sp.242, %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.249", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.265", %"class.std::__1::unique_ptr.271" }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.242 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %class.GrResourceCache* }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %class.GrResourceProvider* }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type <{ %"class.SkMessageBus<GrClientMappedBufferManager::BufferFinishedMessage, GrDirectContext::DirectContextID, false>::Inbox", %"class.std::__1::forward_list", i8, [7 x i8] }>
%"class.SkMessageBus<GrClientMappedBufferManager::BufferFinishedMessage, GrDirectContext::DirectContextID, false>::Inbox" = type <{ %class.SkTArray.258, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.258 = type { %"struct.GrClientMappedBufferManager::BufferFinishedMessage"*, i64 }
%"struct.GrClientMappedBufferManager::BufferFinishedMessage" = type <{ %class.sk_sp.198, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type opaque
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.GrSurfaceDrawContext = type { %class.GrSurfaceFillContext.base, %class.SkSurfaceProps, i8, i8, i32, %class.SkGlyphRunListPainter }
%class.GrSurfaceFillContext.base = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.286, i8 }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.GrColorInfo = type { %class.sk_sp.283, %class.sk_sp.285, i32, i32 }
%class.sk_sp.285 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.sk_sp.286 = type { %class.GrOpsTask* }
%class.SkGlyphRunListPainter = type { %class.SkSurfaceProps, %class.SkSurfaceProps, i32, i32, %class.SkStrikeForGPUCacheInterface*, %class.SkDrawableGlyphBuffer, %class.SkSourceGlyphBuffer }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray.287, %class.SkAutoTMalloc }
%class.SkAutoTArray.287 = type { %"class.std::__1::unique_ptr.288" }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon.291 }
%union.anon.291 = type { %class.SkGlyph* }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.292, i32, %"struct.std::__1::atomic.107", %"struct.std::__1::atomic.107", i8, i8 }>
%class.sk_sp.292 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.293, %struct.SkRect, [4 x i8], %class.SkTDArray.294, %class.SkTDArray.295, %class.SkTDArray.296, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.293 = type { %"struct.std::__1::atomic" }
%class.SkTDArray.294 = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.295 = type { i8*, i32, i32 }
%class.SkTDArray.296 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.297 }
%class.SkTDArray.297 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.75", [3 x i8] }
%struct.SkPackedGlyphID = type { i32 }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.301" }
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %struct.SkPoint* }
%class.SkSourceGlyphBuffer = type { %class.SkZip, i64, i32, i32, %class.SkZip.309, %class.SkSTArray.314, %class.SkSTArray.317 }
%class.SkZip = type { %"class.std::__1::tuple.305", i64 }
%"class.std::__1::tuple.305" = type { %"struct.std::__1::__tuple_impl.306" }
%"struct.std::__1::__tuple_impl.306" = type { %"class.std::__1::__tuple_leaf.307", %"class.std::__1::__tuple_leaf.308" }
%"class.std::__1::__tuple_leaf.307" = type { i16* }
%"class.std::__1::__tuple_leaf.308" = type { %struct.SkPoint* }
%class.SkZip.309 = type { %"class.std::__1::tuple.310", i64 }
%"class.std::__1::tuple.310" = type { %"struct.std::__1::__tuple_impl.311" }
%"struct.std::__1::__tuple_impl.311" = type { %"class.std::__1::__tuple_leaf.312", %"class.std::__1::__tuple_leaf.313" }
%"class.std::__1::__tuple_leaf.312" = type { i16* }
%"class.std::__1::__tuple_leaf.313" = type { %struct.SkPoint* }
%class.SkSTArray.314 = type { %class.SkAlignedSTStorage.315, %class.SkTArray.316 }
%class.SkAlignedSTStorage.315 = type { [8 x i8] }
%class.SkTArray.316 = type { i16*, i64 }
%class.SkSTArray.317 = type { %class.SkAlignedSTStorage.318, %class.SkTArray.319 }
%class.SkAlignedSTStorage.318 = type { [32 x i8] }
%class.SkTArray.319 = type { %struct.SkPoint*, i64 }
%class.GrSurfaceFillContext = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.286, i8, [7 x i8] }>
%class.GrClip = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray.24, %class.SkTArray.202 }
%class.SkTArray.202 = type { %"class.std::__1::unique_ptr.199"*, i64 }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %class.GrGLSLFragmentProcessor* }
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.156*, i32, i32 }
%class.GrGLSLRRectBlurEffect = type <{ %class.GrGLSLFragmentProcessor, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, [4 x i8] }>
%class.GrResourceHandle = type { i32 }
%"struct.GrGLSLFragmentProcessor::EmitArgs" = type { %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrFragmentProcessor*, i8*, i8*, %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.350, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.352, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.361], i32, i8, [3 x i8], i32 }>
%class.GrGLSLProgramBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLVertexBuilder, %class.GrGLSLGeometryBuilder, %class.GrGLSLFragmentShaderBuilder, i32, %class.GrProgramDesc*, %class.GrProgramInfo*, %struct.GrGLSLBuiltinUniformHandles, %"class.std::__1::unique_ptr.376", %"class.std::__1::unique_ptr.383", %"class.std::__1::vector.389", i32, %class.SkSTArray.396 }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFragmentShaderBuilder = type <{ %class.GrGLSLFPFragmentBuilder.base, [4 x i8], %class.GrGLSLXPFragmentBuilder.base, %class.SkTArray.363, %class.SkString, %class.GrShaderVar*, i8, i8, i8, i8, [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLFPFragmentBuilder.base = type <{ i32 (...)**, [4 x i8] }>
%class.GrGLSLXPFragmentBuilder.base = type { i32 (...)** }
%class.SkTArray.363 = type { i32*, i64 }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.GrProgramDesc = type <{ %class.SkSTArray.364, i32, [4 x i8] }>
%class.SkSTArray.364 = type { %class.SkAlignedSTStorage.365, %class.SkTArray.156 }
%class.SkAlignedSTStorage.365 = type { [132 x i8] }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.366, %class.SkAutoSTArray.368, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.366 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.367, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef.367 = type { i32 }
%class.SkAutoSTArray.368 = type { i32, %"class.std::__1::unique_ptr.369"*, [24 x i8] }
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %class.GrFragmentProcessor* }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.375, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.375 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.379 }
%class.SkTArray.379 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%"class.std::__1::unique_ptr.383" = type { %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::vector.389" = type { %"class.std::__1::__vector_base.390" }
%"class.std::__1::__vector_base.390" = type { %"class.std::__1::unique_ptr.199"*, %"class.std::__1::unique_ptr.199"*, %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.std::__1::unique_ptr.199"* }
%class.SkSTArray.396 = type { %class.SkAlignedSTStorage.397, %class.SkTArray.398 }
%class.SkAlignedSTStorage.397 = type { [160 x i8] }
%class.SkTArray.398 = type { %class.GrShaderVar*, i64 }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.345 }
%union.anon.345 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray.350 = type { %class.SkAlignedSTStorage.351, %class.SkTArray.24 }
%class.SkAlignedSTStorage.351 = type { [120 x i8] }
%class.SkSTArray.352 = type { %class.SkAlignedSTStorage.353, %class.SkTArray.354 }
%class.SkAlignedSTStorage.353 = type { [16 x i8] }
%class.SkTArray.354 = type { %"class.std::__1::unique_ptr.355"*, i64 }
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.361 = type { %class.SkAlignedSTStorage.362, %class.SkTArray.24 }
%class.SkAlignedSTStorage.362 = type { [8 x i8] }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%"class.GrGLSLFragmentProcessor::BuilderInputProvider" = type opaque
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.350, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.352, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.361], i32, i8, [3 x i8], i32, [12 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.346 }
%struct.anon.346 = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN19GrFragmentProcessorD2Ev = comdat any

$_ZN17GrRRectBlurEffectD0Ev = comdat any

$_ZNK17GrRRectBlurEffect4nameEv = comdat any

$_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

$_ZN7GrStyleD2Ev = comdat any

$_ZN19GrFragmentProcessorD0Ev = comdat any

$_ZN21GrGLSLRRectBlurEffectD0Ev = comdat any

$_ZN21GrGLSLRRectBlurEffect8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE = comdat any

$_ZN21GrGLSLRRectBlurEffect9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN23GrGLSLFragmentProcessorD2Ev = comdat any

$_ZN23GrGLSLFragmentProcessorD0Ev = comdat any

$_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZZN7GrStyle10SimpleFillEvE5kFill = comdat any

$_ZGVZN7GrStyle10SimpleFillEvE5kFill = comdat any

$_ZTV19GrFragmentProcessor = comdat any

$_ZTV21GrGLSLRRectBlurEffect = comdat any

$_ZTV23GrGLSLFragmentProcessor = comdat any

@_ZTV17GrRRectBlurEffect = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrRRectBlurEffect*)* @_ZN17GrRRectBlurEffectD0Ev to i8*), i8* bitcast (i8* (%class.GrRRectBlurEffect*)* @_ZNK17GrRRectBlurEffect4nameEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.GrRRectBlurEffect*)* @_ZNK17GrRRectBlurEffect5cloneEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (%class.GrGLSLFragmentProcessor* (%class.GrRRectBlurEffect*)* @_ZNK17GrRRectBlurEffect17onMakeProgramImplEv to i8*), i8* bitcast (void (%class.GrRRectBlurEffect*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK17GrRRectBlurEffect21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (i1 (%class.GrRRectBlurEffect*, %class.GrFragmentProcessor*)* @_ZNK17GrRRectBlurEffect9onIsEqualERK19GrFragmentProcessor to i8*)] }, align 8
@_ZZL22make_blurred_rrect_keyP11GrUniqueKeyRK7SkRRectfE7kDomain = internal global i32 0, align 4
@_ZGVZL22make_blurred_rrect_keyP11GrUniqueKeyRK7SkRRectfE7kDomain = internal global i64 0, align 8
@.str = private unnamed_addr constant [20 x i8] c"RoundRect Blur Mask\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"rgba\00", align 1
@_ZL17SK_PMColor4fWHITE = internal unnamed_addr constant %struct.SkRGBA4f { float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00 }, align 4
@_ZZN7GrStyle10SimpleFillEvE5kFill = linkonce_odr hidden global %class.GrStyle zeroinitializer, comdat, align 8
@_ZGVZN7GrStyle10SimpleFillEvE5kFill = linkonce_odr hidden global i64 0, comdat, align 8
@__dso_handle = external hidden global i8
@_ZTV19GrFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.3 = private unnamed_addr constant [16 x i8] c"RRectBlurEffect\00", align 1
@.str.4 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrFragmentProcessor.h\00", align 1
@.str.5 = private unnamed_addr constant [62 x i8] c"Subclass must override this if advertising this optimization.\00", align 1
@_ZTV21GrGLSLRRectBlurEffect = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLRRectBlurEffect*)* @_ZN21GrGLSLRRectBlurEffectD0Ev to i8*), i8* bitcast (void (%class.GrGLSLRRectBlurEffect*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)* @_ZN21GrGLSLRRectBlurEffect8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE to i8*), i8* bitcast (void (%class.GrGLSLRRectBlurEffect*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN21GrGLSLRRectBlurEffect9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@_ZTV23GrGLSLFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@.str.6 = private unnamed_addr constant [13 x i8] c"cornerRadius\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"proxyRect\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"blurRadius\00", align 1
@.str.9 = private unnamed_addr constant [619 x i8] c"float2 translatedFragPosFloat = sk_FragCoord.xy - %s.xy;\0Afloat2 proxyCenter = (%s.zw - %s.xy) * 0.5;\0Ahalf edgeSize = (2.0 * %s + %s) + 0.5;\0AtranslatedFragPosFloat -= proxyCenter;\0Ahalf2 fragDirection = half2(sign(translatedFragPosFloat));\0AtranslatedFragPosFloat = abs(translatedFragPosFloat);\0Ahalf2 translatedFragPosHalf = half2(translatedFragPosFloat - (proxyCenter - float(edgeSize)));\0AtranslatedFragPosHalf = max(translatedFragPosHalf, 0.0);\0AtranslatedFragPosHalf *= fragDirection;\0AtranslatedFragPosHalf += half2(edgeSize);\0Ahalf2 proxyDims = half2(2.0 * edgeSize);\0Ahalf2 texCoord = translatedFragPosHalf / proxyDims;\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"float2(texCoord)\00", align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"\0Areturn %s * %s.w;\0A\00", align 1

@_ZN17GrRRectBlurEffectC1ERKS_ = hidden unnamed_addr alias void (%class.GrRRectBlurEffect*, %class.GrRRectBlurEffect*), void (%class.GrRRectBlurEffect*, %class.GrRRectBlurEffect*)* @_ZN17GrRRectBlurEffectC2ERKS_

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZN17GrRRectBlurEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextffRK7SkRRectSA_(%class.GrFragmentProcessor*, %class.GrRecordingContext*, float, float, %class.SkRRect* dereferenceable(52), %class.SkRRect* dereferenceable(52)) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.SkBitmap, align 8
  %8 = alloca %class.SkBitmap, align 8
  %9 = alloca %struct.SkImageInfo, align 16
  %10 = alloca %"class.std::__1::vector", align 8
  %11 = alloca %"class.std::__1::tuple.337", align 8
  %12 = alloca %class.SkSurfaceProps, align 4
  %13 = alloca %class.sk_sp.283, align 8
  %14 = alloca %class.GrPaint, align 8
  %15 = alloca %class.GrSurfaceProxyView, align 8
  %16 = alloca %class.sk_sp.283, align 8
  %17 = alloca { i64, i64 }, align 8
  %18 = alloca { i64, i64 }, align 8
  %19 = alloca %class.GrUniqueKey, align 8
  %20 = alloca %class.SkMatrix, align 16
  %21 = alloca %class.GrSurfaceProxyView, align 8
  %22 = alloca %"class.std::__1::tuple", align 8
  %23 = alloca %class.GrSurfaceProxyView, align 8
  %24 = alloca %class.GrSurfaceProxyView, align 8
  %25 = alloca %class.GrSurfaceProxyView, align 8
  %26 = alloca %class.GrSurfaceProxyView, align 8
  %27 = alloca %class.GrSurfaceProxyView, align 8
  %28 = alloca %class.GrSurfaceProxyView, align 8
  %29 = alloca %class.GrSurfaceProxyView, align 8
  %30 = alloca %class.SkRRect, align 4
  %31 = alloca i64, align 8
  %32 = bitcast i64* %31 to %struct.SkISize*
  %33 = alloca [6 x float], align 16
  %34 = ptrtoint %class.GrFragmentProcessor* %0 to i64
  %35 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %5, i64 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 3
  br i1 %37, label %38, label %1228

38:                                               ; preds = %6
  %39 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %5, i64 0, i32 1, i64 0, i32 0
  %40 = load float, float* %39, align 4
  %41 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %5, i64 0, i32 1, i64 0, i32 1
  %42 = load float, float* %41, align 4
  %43 = fsub float %40, %42
  %44 = tail call float @llvm.fabs.f32(float %43) #16
  %45 = fcmp ugt float %44, 0x3F30000000000000
  br i1 %45, label %1228, label %46

46:                                               ; preds = %38
  %47 = fcmp ugt float %3, 0x3F9EB851E0000000
  br i1 %47, label %48, label %1238

48:                                               ; preds = %46
  %49 = bitcast %class.SkRRect* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %49) #16
  %50 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %30, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %30, i64 0, i32 0, i32 1
  %52 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %30, i64 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %49, i8 0, i64 52, i1 false) #16
  %53 = bitcast i64* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #16
  %54 = bitcast i64* %31 to i32*
  store i32 -1431655766, i32* %54, align 8
  %55 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %32, i64 0, i32 1
  store i32 -1431655766, i32* %55, align 4
  %56 = bitcast [6 x float]* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #16
  %57 = getelementptr inbounds [6 x float], [6 x float]* %33, i64 0, i64 0
  %58 = bitcast [6 x float]* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %58, i8 -1, i64 24, i1 false)
  %59 = call zeroext i1 @_ZN14SkGpuBlurUtils25ComputeBlurredRRectParamsERK7SkRRectS2_ffPS0_P7SkISizePfS6_S6_S6_(%class.SkRRect* dereferenceable(52) %4, %class.SkRRect* dereferenceable(52) %5, float %2, float %3, %class.SkRRect* nonnull %30, %struct.SkISize* nonnull %32, float* nonnull %57, float* nonnull %57, float* nonnull %57, float* nonnull %57) #16
  br i1 %59, label %60, label %1225

60:                                               ; preds = %48
  %61 = bitcast %class.GrSurfaceProxyView* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61)
  %62 = bitcast %class.GrSurfaceProxyView* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62)
  %63 = bitcast %class.GrSurfaceProxyView* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63)
  %64 = bitcast %class.GrUniqueKey* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %64) #16
  %65 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %19, i64 0, i32 0, i32 0, i32 1, i32 0, i64 2
  %66 = bitcast i32* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 24, i1 false) #16
  %67 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %19, i64 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %19, i64 0, i32 0, i32 0, i32 1, i32 0, i64 0
  store i32* %68, i32** %67, align 8
  store i32 0, i32* %68, align 8
  %69 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %19, i64 0, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 0, i32* %69, align 4
  %70 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %19, i64 0, i32 1, i32 0
  %71 = bitcast %class.SkData** %70 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false) #16
  %72 = load atomic i8, i8* bitcast (i64* @_ZGVZL22make_blurred_rrect_keyP11GrUniqueKeyRK7SkRRectfE7kDomain to i8*) acquire, align 8
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %80, !prof !2

74:                                               ; preds = %60
  %75 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL22make_blurred_rrect_keyP11GrUniqueKeyRK7SkRRectfE7kDomain) #16
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %74
  %78 = call i32 @_ZN11GrUniqueKey14GenerateDomainEv() #16
  store i32 %78, i32* @_ZZL22make_blurred_rrect_keyP11GrUniqueKeyRK7SkRRectfE7kDomain, align 4
  %79 = call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (i32* @_ZZL22make_blurred_rrect_keyP11GrUniqueKeyRK7SkRRectfE7kDomain to i8*)) #16
  call void @__cxa_guard_release(i64* nonnull @_ZGVZL22make_blurred_rrect_keyP11GrUniqueKeyRK7SkRRectfE7kDomain) #16
  br label %80

80:                                               ; preds = %77, %74, %60
  %81 = load i32, i32* @_ZZL22make_blurred_rrect_keyP11GrUniqueKeyRK7SkRRectfE7kDomain, align 4
  %82 = load i32*, i32** %67, align 8
  %83 = icmp eq i32* %82, %68
  br i1 %83, label %86, label %84

84:                                               ; preds = %80
  %85 = bitcast i32* %82 to i8*
  call void @_Z7sk_freePv(i8* %85) #16
  br label %86

86:                                               ; preds = %84, %80
  %87 = call i8* @_Z15sk_malloc_throwmm(i64 11, i64 4) #16
  %88 = bitcast %class.GrUniqueKey* %19 to i8**
  store i8* %87, i8** %88, align 8
  %89 = or i32 %81, 2883584
  %90 = getelementptr inbounds i8, i8* %87, i64 4
  %91 = bitcast i8* %90 to i32*
  store i32 %89, i32* %91, align 4
  %92 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %19, i64 0, i32 2
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8** %92, align 8
  %93 = fadd float %3, 0xBFC5555560000000
  %94 = call float @llvm.ceil.f32(float %93) #16
  %95 = fcmp olt float %94, 0x41DFFFFFE0000000
  %96 = select i1 %95, float %94, float 0x41DFFFFFE0000000
  %97 = fcmp ogt float %96, 0xC1DFFFFFE0000000
  %98 = select i1 %97, float %96, float 0xC1DFFFFFE0000000
  %99 = fptosi float %98 to i32
  %100 = load i32*, i32** %67, align 8
  %101 = getelementptr inbounds i32, i32* %100, i64 2
  store i32 %99, i32* %101, align 4
  %102 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %30, i64 0, i32 1, i64 0
  %103 = bitcast %struct.SkPoint* %102 to <2 x float>*
  %104 = load <2 x float>, <2 x float>* %103, align 4
  %105 = extractelement <2 x float> %104, i32 0
  %106 = call float @llvm.ceil.f32(float %105) #16
  %107 = fcmp olt float %106, 0x41DFFFFFE0000000
  %108 = select i1 %107, float %106, float 0x41DFFFFFE0000000
  %109 = fcmp ogt float %108, 0xC1DFFFFFE0000000
  %110 = select i1 %109, float %108, float 0xC1DFFFFFE0000000
  %111 = fptosi float %110 to i32
  %112 = getelementptr inbounds i32, i32* %100, i64 3
  store i32 %111, i32* %112, align 4
  %113 = load <2 x float>, <2 x float>* %103, align 4
  %114 = extractelement <2 x float> %113, i32 1
  %115 = call float @llvm.ceil.f32(float %114) #16
  %116 = fcmp olt float %115, 0x41DFFFFFE0000000
  %117 = select i1 %116, float %115, float 0x41DFFFFFE0000000
  %118 = fcmp ogt float %117, 0xC1DFFFFFE0000000
  %119 = select i1 %118, float %117, float 0xC1DFFFFFE0000000
  %120 = fptosi float %119 to i32
  %121 = getelementptr inbounds i32, i32* %100, i64 4
  store i32 %120, i32* %121, align 4
  %122 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %30, i64 0, i32 1, i64 1
  %123 = bitcast %struct.SkPoint* %122 to <2 x float>*
  %124 = load <2 x float>, <2 x float>* %123, align 4
  %125 = extractelement <2 x float> %124, i32 0
  %126 = call float @llvm.ceil.f32(float %125) #16
  %127 = fcmp olt float %126, 0x41DFFFFFE0000000
  %128 = select i1 %127, float %126, float 0x41DFFFFFE0000000
  %129 = fcmp ogt float %128, 0xC1DFFFFFE0000000
  %130 = select i1 %129, float %128, float 0xC1DFFFFFE0000000
  %131 = fptosi float %130 to i32
  %132 = getelementptr inbounds i32, i32* %100, i64 5
  store i32 %131, i32* %132, align 4
  %133 = load <2 x float>, <2 x float>* %123, align 4
  %134 = extractelement <2 x float> %133, i32 1
  %135 = call float @llvm.ceil.f32(float %134) #16
  %136 = fcmp olt float %135, 0x41DFFFFFE0000000
  %137 = select i1 %136, float %135, float 0x41DFFFFFE0000000
  %138 = fcmp ogt float %137, 0xC1DFFFFFE0000000
  %139 = select i1 %138, float %137, float 0xC1DFFFFFE0000000
  %140 = fptosi float %139 to i32
  %141 = getelementptr inbounds i32, i32* %100, i64 6
  store i32 %140, i32* %141, align 4
  %142 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %30, i64 0, i32 1, i64 2
  %143 = bitcast %struct.SkPoint* %142 to <2 x float>*
  %144 = load <2 x float>, <2 x float>* %143, align 4
  %145 = extractelement <2 x float> %144, i32 0
  %146 = call float @llvm.ceil.f32(float %145) #16
  %147 = fcmp olt float %146, 0x41DFFFFFE0000000
  %148 = select i1 %147, float %146, float 0x41DFFFFFE0000000
  %149 = fcmp ogt float %148, 0xC1DFFFFFE0000000
  %150 = select i1 %149, float %148, float 0xC1DFFFFFE0000000
  %151 = fptosi float %150 to i32
  %152 = getelementptr inbounds i32, i32* %100, i64 7
  store i32 %151, i32* %152, align 4
  %153 = load <2 x float>, <2 x float>* %143, align 4
  %154 = extractelement <2 x float> %153, i32 1
  %155 = call float @llvm.ceil.f32(float %154) #16
  %156 = fcmp olt float %155, 0x41DFFFFFE0000000
  %157 = select i1 %156, float %155, float 0x41DFFFFFE0000000
  %158 = fcmp ogt float %157, 0xC1DFFFFFE0000000
  %159 = select i1 %158, float %157, float 0xC1DFFFFFE0000000
  %160 = fptosi float %159 to i32
  %161 = getelementptr inbounds i32, i32* %100, i64 8
  store i32 %160, i32* %161, align 4
  %162 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %30, i64 0, i32 1, i64 3
  %163 = bitcast %struct.SkPoint* %162 to <2 x float>*
  %164 = load <2 x float>, <2 x float>* %163, align 4
  %165 = extractelement <2 x float> %164, i32 0
  %166 = call float @llvm.ceil.f32(float %165) #16
  %167 = fcmp olt float %166, 0x41DFFFFFE0000000
  %168 = select i1 %167, float %166, float 0x41DFFFFFE0000000
  %169 = fcmp ogt float %168, 0xC1DFFFFFE0000000
  %170 = select i1 %169, float %168, float 0xC1DFFFFFE0000000
  %171 = fptosi float %170 to i32
  %172 = getelementptr inbounds i32, i32* %100, i64 9
  store i32 %171, i32* %172, align 4
  %173 = load <2 x float>, <2 x float>* %163, align 4
  %174 = extractelement <2 x float> %173, i32 1
  %175 = call float @llvm.ceil.f32(float %174) #16
  %176 = fcmp olt float %175, 0x41DFFFFFE0000000
  %177 = select i1 %176, float %175, float 0x41DFFFFFE0000000
  %178 = fcmp ogt float %177, 0xC1DFFFFFE0000000
  %179 = select i1 %178, float %177, float 0xC1DFFFFFE0000000
  %180 = fptosi float %179 to i32
  %181 = getelementptr inbounds i32, i32* %100, i64 10
  store i32 %180, i32* %181, align 4
  %182 = getelementptr inbounds i32, i32* %100, i64 1
  %183 = load i32, i32* %182, align 4
  %184 = lshr i32 %183, 16
  %185 = zext i32 %184 to i64
  %186 = add nsw i64 %185, -4
  %187 = call i32 @_Z17GrResourceKeyHashPKjm(i32* %182, i64 %186) #16
  store i32 %187, i32* %100, align 4
  %188 = call %class.GrThreadSafeCache* @_ZN18GrRecordingContext15threadSafeCacheEv(%class.GrRecordingContext* %1) #16
  %189 = bitcast %class.SkMatrix* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %189) #16
  %190 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %20, i64 0, i32 1
  %191 = load i32, i32* %54, align 8
  %192 = sitofp i32 %191 to float
  %193 = load i32, i32* %55, align 4
  %194 = sitofp i32 %193 to float
  %195 = bitcast %class.SkMatrix* %20 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %195, align 16, !alias.scope !3
  %196 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %20, i64 0, i32 0, i64 4
  %197 = bitcast float* %196 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %197, align 16, !alias.scope !3
  %198 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %20, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %198, align 16, !alias.scope !3
  store i32 16, i32* %190, align 4, !alias.scope !3
  %199 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %20, float %192, float %194) #16
  %200 = bitcast %class.GrSurfaceProxyView* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %200) #16
  %201 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %21, i64 0, i32 0, i32 0
  %202 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %21, i64 0, i32 1
  %203 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %21, i64 0, i32 2, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %200, i8 -86, i64 16, i1 false) #16
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %201, align 8
  store i32 0, i32* %202, align 8
  %204 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %21, i64 0, i32 2
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %204, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #16
  %205 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %1, i64 0, i32 0, i32 0
  %206 = bitcast %class.GrRecordingContext* %1 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %207 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %206, align 8
  %208 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %207, i64 3
  %209 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %208, align 8
  %210 = call %class.GrDirectContext* %209(%class.GrContext_Base* %205) #16
  %211 = icmp eq %class.GrDirectContext* %210, null
  br i1 %211, label %566, label %212

212:                                              ; preds = %86
  %213 = bitcast %"class.std::__1::tuple"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %213) #16
  %214 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %22, i64 0, i32 0, i32 0, i32 0, i32 1
  %216 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %22, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %217 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %22, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %213, i8 -86, i64 24, i1 false) #16
  %218 = load i64, i64* %31, align 8
  call void @_ZN17GrThreadSafeCache14CreateLazyViewEP15GrDirectContext11GrColorType7SkISize15GrSurfaceOrigin12SkBackingFit(%"class.std::__1::tuple"* nonnull sret %22, %class.GrDirectContext* nonnull %210, i32 1, i64 %218, i32 0, i32 1) #16
  %219 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %22, i64 0, i32 0, i32 1, i32 0
  %220 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %214, align 8
  %221 = icmp eq %class.GrSurfaceProxy* %220, null
  br i1 %221, label %532, label %222

222:                                              ; preds = %212
  %223 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %22, i64 0, i32 0, i32 0, i32 0
  %224 = bitcast %class.GrSurfaceProxyView* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %224) #16
  call void @_ZN17GrThreadSafeCache9findOrAddERK11GrUniqueKeyRK18GrSurfaceProxyView(%class.GrSurfaceProxyView* nonnull sret %23, %class.GrThreadSafeCache* %188, %class.GrUniqueKey* nonnull dereferenceable(56) %19, %class.GrSurfaceProxyView* nonnull dereferenceable(16) %223) #16
  %225 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %23, i64 0, i32 0, i32 0
  %226 = bitcast %class.GrSurfaceProxyView* %23 to i64*
  %227 = load i64, i64* %226, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %225, align 8
  %228 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %201, align 8
  %229 = bitcast %class.GrSurfaceProxyView* %21 to i64*
  store i64 %227, i64* %229, align 8
  %230 = icmp eq %class.GrSurfaceProxy* %228, null
  br i1 %230, label %245, label %231

231:                                              ; preds = %222
  %232 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %228, i64 0, i32 1
  %233 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %232, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = atomicrmw add i32* %233, i32 -1 acq_rel
  %235 = icmp eq i32 %234, 1
  br i1 %235, label %236, label %243

236:                                              ; preds = %231
  %237 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %232, i64 -2
  %238 = bitcast %class.SkNVRefCnt* %237 to %class.GrSurfaceProxy*
  %239 = bitcast %class.SkNVRefCnt* %237 to void (%class.GrSurfaceProxy*)***
  %240 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %239, align 8
  %241 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %240, i64 1
  %242 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %241, align 8
  call void %242(%class.GrSurfaceProxy* nonnull %238) #16
  br label %243

243:                                              ; preds = %236, %231
  %244 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %225, align 8
  br label %245

245:                                              ; preds = %243, %222
  %246 = phi %class.GrSurfaceProxy* [ %244, %243 ], [ null, %222 ]
  %247 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %23, i64 0, i32 1
  %248 = load i32, i32* %247, align 8
  store i32 %248, i32* %202, align 8
  %249 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %23, i64 0, i32 2, i32 0
  %250 = load i16, i16* %249, align 4
  store i16 %250, i16* %203, align 4
  %251 = icmp eq %class.GrSurfaceProxy* %246, null
  br i1 %251, label %264, label %252

252:                                              ; preds = %245
  %253 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %246, i64 0, i32 1
  %254 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %253, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = atomicrmw add i32* %254, i32 -1 acq_rel
  %256 = icmp eq i32 %255, 1
  br i1 %256, label %257, label %264

257:                                              ; preds = %252
  %258 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %253, i64 -2
  %259 = bitcast %class.SkNVRefCnt* %258 to %class.GrSurfaceProxy*
  %260 = bitcast %class.SkNVRefCnt* %258 to void (%class.GrSurfaceProxy*)***
  %261 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %260, align 8
  %262 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %261, i64 1
  %263 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %262, align 8
  call void %263(%class.GrSurfaceProxy* nonnull %259) #16
  br label %264

264:                                              ; preds = %257, %252, %245
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %224) #16
  %265 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %201, align 8
  %266 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %265, i64 0, i32 10, i32 0
  %267 = load i32, i32* %266, align 4
  %268 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %214, align 8
  %269 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %268, i64 0, i32 10, i32 0
  %270 = load i32, i32* %269, align 4
  %271 = icmp eq i32 %267, %270
  %272 = load i32, i32* %202, align 8
  %273 = load i32, i32* %215, align 8
  %274 = icmp eq i32 %272, %273
  %275 = and i1 %271, %274
  %276 = load i16, i16* %203, align 4
  %277 = load i16, i16* %216, align 4
  %278 = icmp eq i16 %276, %277
  %279 = and i1 %275, %278
  br i1 %279, label %302, label %280

280:                                              ; preds = %264
  %281 = ptrtoint %class.GrSurfaceProxy* %265 to i64
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %201, align 8
  %282 = bitcast %class.GrSurfaceProxyView* %24 to i64*
  store i64 %281, i64* %282, align 8
  %283 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %24, i64 0, i32 1
  store i32 %272, i32* %283, align 8
  %284 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %24, i64 0, i32 2, i32 0
  store i16 %276, i16* %284, align 4
  %285 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView* nonnull %24, i32 2, %class.SkMatrix* nonnull dereferenceable(40) %20, i32 0, i32 0) #16
  %286 = ptrtoint %class.GrFragmentProcessor* %285 to i64
  %287 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %24, i64 0, i32 0, i32 0
  %288 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %287, align 8
  %289 = icmp eq %class.GrSurfaceProxy* %288, null
  br i1 %289, label %532, label %290

290:                                              ; preds = %280
  %291 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %288, i64 0, i32 1
  %292 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %291, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = atomicrmw add i32* %292, i32 -1 acq_rel
  %294 = icmp eq i32 %293, 1
  br i1 %294, label %295, label %532

295:                                              ; preds = %290
  %296 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %291, i64 -2
  %297 = bitcast %class.SkNVRefCnt* %296 to %class.GrSurfaceProxy*
  %298 = bitcast %class.SkNVRefCnt* %296 to void (%class.GrSurfaceProxy*)***
  %299 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %298, align 8
  %300 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %299, i64 1
  %301 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %300, align 8
  call void %301(%class.GrSurfaceProxy* nonnull %297) #16
  br label %532

302:                                              ; preds = %264
  %303 = getelementptr inbounds %class.sk_sp.278, %class.sk_sp.278* %219, i64 0, i32 0
  %304 = bitcast %class.sk_sp.278* %219 to i64*
  %305 = load i64, i64* %304, align 8
  store %"class.GrThreadSafeCache::Trampoline"* null, %"class.GrThreadSafeCache::Trampoline"** %303, align 8
  %306 = bitcast %class.sk_sp.283* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %306) #16
  %307 = bitcast %class.GrSurfaceProxyView* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %307) #16
  %308 = bitcast %class.sk_sp.283* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %308) #16
  %309 = bitcast { i64, i64 }* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %309) #16
  %310 = bitcast { i64, i64 }* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %310) #16
  %311 = bitcast %class.SkSurfaceProps* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %311) #16
  %312 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %12, i64 0, i32 0
  store i32 -1431655766, i32* %312, align 4
  %313 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %12, i64 0, i32 1
  store i32 -1431655766, i32* %313, align 4
  call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* nonnull %12) #16
  %314 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %210, i64 0, i32 0
  %315 = getelementptr inbounds %class.sk_sp.283, %class.sk_sp.283* %13, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %315, align 8
  %316 = load i64, i64* %31, align 8
  %317 = call %class.GrSurfaceDrawContext* @_ZN20GrSurfaceDrawContext16MakeWithFallbackEP18GrRecordingContext11GrColorType5sk_spI12SkColorSpaceE12SkBackingFit7SkISizeRK14SkSurfacePropsi11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext* %314, i32 1, %class.sk_sp.283* nonnull %13, i32 1, i64 %316, %class.SkSurfaceProps* nonnull dereferenceable(8) %12, i32 1, i1 zeroext false, i1 zeroext false, i32 0, i1 zeroext true) #16
  %318 = load %class.SkColorSpace*, %class.SkColorSpace** %315, align 8
  %319 = icmp eq %class.SkColorSpace* %318, null
  br i1 %319, label %326, label %320

320:                                              ; preds = %302
  %321 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %318, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = atomicrmw add i32* %321, i32 -1 acq_rel
  %323 = icmp eq i32 %322, 1
  br i1 %323, label %324, label %326

324:                                              ; preds = %320
  %325 = bitcast %class.SkColorSpace* %318 to i8*
  call void @_ZdlPv(i8* %325) #18
  br label %326

326:                                              ; preds = %324, %320, %302
  %327 = icmp eq %class.GrSurfaceDrawContext* %317, null
  br i1 %327, label %516, label %328

328:                                              ; preds = %326
  %329 = bitcast { i64, i64 }* %18 to %struct.SkIRect*
  %330 = bitcast { i64, i64 }* %17 to %struct.SkIRect*
  %331 = bitcast %class.GrPaint* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %331) #16
  %332 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %333 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %14, i64 0, i32 2, i32 0, i32 0, i32 0
  %334 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %14, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %331, i8 -86, i64 28, i1 false) #16
  %335 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %14, i64 0, i32 6, i64 0
  %336 = bitcast i8* %335 to i32*
  store i32 -1431655766, i32* %336, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %331, i8 0, i64 24, i1 false) #16
  store i8 1, i8* %334, align 8
  %337 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %14, i64 0, i32 5
  %338 = bitcast %struct.SkRGBA4f* %337 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %338, i8* align 4 bitcast (%struct.SkRGBA4f* @_ZL17SK_PMColor4fWHITE to i8*), i64 16, i1 false) #16
  %339 = bitcast %class.GrSurfaceDrawContext* %317 to %class.GrSurfaceFillContext*
  call void @_ZN20GrSurfaceFillContext13internalClearEPK7SkIRectNSt3__15arrayIfLm4EEEb(%class.GrSurfaceFillContext* nonnull %339, %struct.SkIRect* null, <2 x float> zeroinitializer, <2 x float> zeroinitializer, i1 zeroext false) #16
  %340 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #16
  %341 = load atomic i8, i8* bitcast (i64* @_ZGVZN7GrStyle10SimpleFillEvE5kFill to i8*) acquire, align 8
  %342 = icmp eq i8 %341, 0
  br i1 %342, label %343, label %348, !prof !2

343:                                              ; preds = %328
  %344 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN7GrStyle10SimpleFillEvE5kFill) #16
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %348, label %346

346:                                              ; preds = %343
  call void @_ZN11SkStrokeRecC1ENS_9InitStyleE(%class.SkStrokeRec* getelementptr inbounds (%class.GrStyle, %class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill, i64 0, i32 0), i32 1) #16
  store float* null, float** getelementptr inbounds (%class.GrStyle, %class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill, i64 0, i32 2, i32 2, i32 1), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%class.SkPathEffect** getelementptr inbounds (%class.GrStyle, %class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill, i64 0, i32 1, i32 0) to i8*), i8 0, i64 20, i1 false) #16
  %347 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.GrStyle*)* @_ZN7GrStyleD2Ev to void (i8*)*), i8* bitcast (%class.GrStyle* @_ZZN7GrStyle10SimpleFillEvE5kFill to i8*), i8* nonnull @__dso_handle) #16
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN7GrStyle10SimpleFillEvE5kFill) #16
  br label %348

348:                                              ; preds = %346, %343, %328
  call void @_ZN20GrSurfaceDrawContext9drawRRectEPK6GrClipO7GrPaint4GrAARK8SkMatrixRK7SkRRectRK7GrStyle(%class.GrSurfaceDrawContext* nonnull %317, %class.GrClip* null, %class.GrPaint* nonnull dereferenceable(48) %14, i1 zeroext true, %class.SkMatrix* dereferenceable(40) %340, %class.SkRRect* nonnull dereferenceable(52) %30, %class.GrStyle* nonnull dereferenceable(64) @_ZZN7GrStyle10SimpleFillEvE5kFill) #16
  %349 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %317, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %350 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %349, align 8, !noalias !6
  %351 = icmp eq %class.GrSurfaceProxy* %350, null
  br i1 %351, label %355, label %352

352:                                              ; preds = %348
  %353 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %350, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %354 = atomicrmw add i32* %353, i32 1 monotonic, !noalias !6
  br label %355

355:                                              ; preds = %352, %348
  %356 = ptrtoint %class.GrSurfaceProxy* %350 to i64
  %357 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %317, i64 0, i32 0, i32 0, i32 2, i32 1
  %358 = load i32, i32* %357, align 8, !noalias !6
  %359 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %317, i64 0, i32 0, i32 0, i32 2, i32 2, i32 0
  %360 = load i16, i16* %359, align 2, !noalias !6
  %361 = bitcast %class.GrSurfaceProxyView* %15 to i64*
  store i64 %356, i64* %361, align 8
  %362 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %15, i64 0, i32 1
  store i32 %358, i32* %362, align 8
  %363 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %15, i64 0, i32 2, i32 0
  store i16 %360, i16* %363, align 4
  %364 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %317, i64 0, i32 0, i32 0, i32 3, i32 2
  %365 = load i32, i32* %364, align 8
  %366 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %317, i64 0, i32 0, i32 0, i32 3, i32 3
  %367 = load i32, i32* %366, align 4
  %368 = getelementptr inbounds %class.sk_sp.283, %class.sk_sp.283* %16, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %368, align 8
  %369 = load i32, i32* %54, align 8
  %370 = load i32, i32* %55, align 4
  %371 = zext i32 %370 to i64
  %372 = shl nuw i64 %371, 32
  %373 = zext i32 %369 to i64
  %374 = or i64 %372, %373
  %375 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 0
  store i64 0, i64* %375, align 8
  %376 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 1
  store i64 %374, i64* %376, align 8
  %377 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i64 0, i32 0
  store i64 0, i64* %377, align 8
  %378 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i64 0, i32 1
  store i64 %374, i64* %378, align 8
  %379 = call %class.GrSurfaceDrawContext* @_ZN14SkGpuBlurUtils12GaussianBlurEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE7SkIRectS8_ff10SkTileMode12SkBackingFit(%class.GrRecordingContext* %314, %class.GrSurfaceProxyView* nonnull %15, i32 %365, i32 %367, %class.sk_sp.283* nonnull %16, %struct.SkIRect* nonnull byval(%struct.SkIRect) align 8 %330, %struct.SkIRect* nonnull byval(%struct.SkIRect) align 8 %329, float %3, float %3, i32 0, i32 1) #16
  %380 = load %class.SkColorSpace*, %class.SkColorSpace** %368, align 8
  %381 = icmp eq %class.SkColorSpace* %380, null
  br i1 %381, label %388, label %382

382:                                              ; preds = %355
  %383 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %380, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = atomicrmw add i32* %383, i32 -1 acq_rel
  %385 = icmp eq i32 %384, 1
  br i1 %385, label %386, label %388

386:                                              ; preds = %382
  %387 = bitcast %class.SkColorSpace* %380 to i8*
  call void @_ZdlPv(i8* %387) #18
  br label %388

388:                                              ; preds = %386, %382, %355
  %389 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %15, i64 0, i32 0, i32 0
  %390 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %389, align 8
  %391 = icmp eq %class.GrSurfaceProxy* %390, null
  br i1 %391, label %404, label %392

392:                                              ; preds = %388
  %393 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %390, i64 0, i32 1
  %394 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %393, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %395 = atomicrmw add i32* %394, i32 -1 acq_rel
  %396 = icmp eq i32 %395, 1
  br i1 %396, label %397, label %404

397:                                              ; preds = %392
  %398 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %393, i64 -2
  %399 = bitcast %class.SkNVRefCnt* %398 to %class.GrSurfaceProxy*
  %400 = bitcast %class.SkNVRefCnt* %398 to void (%class.GrSurfaceProxy*)***
  %401 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %400, align 8
  %402 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %401, i64 1
  %403 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %402, align 8
  call void %403(%class.GrSurfaceProxy* nonnull %399) #16
  br label %404

404:                                              ; preds = %397, %392, %388
  %405 = icmp eq %class.GrSurfaceDrawContext* %379, null
  br i1 %405, label %494, label %406

406:                                              ; preds = %404
  %407 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %379, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %408 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %407, align 8, !noalias !9
  %409 = icmp eq %class.GrSurfaceProxy* %408, null
  br i1 %409, label %488, label %410

410:                                              ; preds = %406
  %411 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %408, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %412 = atomicrmw add i32* %411, i32 1 monotonic, !noalias !9
  %413 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %408, i64 0, i32 1
  %414 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %413, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %415 = atomicrmw add i32* %414, i32 -1 acq_rel
  %416 = icmp eq i32 %415, 1
  br i1 %416, label %417, label %424

417:                                              ; preds = %410
  %418 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %413, i64 -2
  %419 = bitcast %class.SkNVRefCnt* %418 to %class.GrSurfaceProxy*
  %420 = bitcast %class.SkNVRefCnt* %418 to void (%class.GrSurfaceProxy*)***
  %421 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %420, align 8
  %422 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %421, i64 1
  %423 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %422, align 8
  call void %423(%class.GrSurfaceProxy* nonnull %419) #16
  br label %424

424:                                              ; preds = %417, %410
  %425 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %407, align 8, !noalias !12
  %426 = icmp eq %class.GrSurfaceProxy* %425, null
  br i1 %426, label %448, label %427

427:                                              ; preds = %424
  %428 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %425, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %429 = atomicrmw add i32* %428, i32 1 monotonic, !noalias !12
  %430 = bitcast %class.GrSurfaceProxy* %425 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %431 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %430, align 8, !noalias !15
  %432 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %431, i64 3
  %433 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %432, align 8, !noalias !15
  %434 = call %class.GrTextureProxy* %433(%class.GrSurfaceProxy* nonnull %425) #16, !noalias !15
  %435 = icmp eq %class.GrTextureProxy* %434, null
  br i1 %435, label %448, label %436

436:                                              ; preds = %427
  %437 = bitcast %class.GrTextureProxy* %434 to i8**
  %438 = load i8*, i8** %437, align 8, !noalias !18
  %439 = getelementptr i8, i8* %438, i64 -24
  %440 = bitcast i8* %439 to i64*
  %441 = load i64, i64* %440, align 8, !noalias !18
  %442 = add i64 %441, 8
  %443 = bitcast %class.GrTextureProxy* %434 to i8*
  %444 = getelementptr inbounds i8, i8* %443, i64 %442
  %445 = bitcast i8* %444 to i32*
  %446 = atomicrmw add i32* %445, i32 1 monotonic, !noalias !18
  %447 = ptrtoint %class.GrTextureProxy* %434 to i64
  br label %448

448:                                              ; preds = %436, %427, %424
  %449 = phi i64 [ 0, %427 ], [ %447, %436 ], [ 0, %424 ]
  %450 = inttoptr i64 %305 to %"class.GrThreadSafeCache::Trampoline"*
  %451 = getelementptr inbounds %"class.GrThreadSafeCache::Trampoline", %"class.GrThreadSafeCache::Trampoline"* %450, i64 0, i32 1
  %452 = getelementptr inbounds %class.sk_sp.279, %class.sk_sp.279* %451, i64 0, i32 0
  %453 = load %class.GrTextureProxy*, %class.GrTextureProxy** %452, align 8
  %454 = bitcast %class.sk_sp.279* %451 to i64*
  store i64 %449, i64* %454, align 8
  %455 = icmp eq %class.GrTextureProxy* %453, null
  br i1 %455, label %475, label %456

456:                                              ; preds = %448
  %457 = bitcast %class.GrTextureProxy* %453 to i8**
  %458 = load i8*, i8** %457, align 8
  %459 = getelementptr i8, i8* %458, i64 -24
  %460 = bitcast i8* %459 to i64*
  %461 = load i64, i64* %460, align 8
  %462 = add i64 %461, 8
  %463 = bitcast %class.GrTextureProxy* %453 to i8*
  %464 = getelementptr inbounds i8, i8* %463, i64 %462
  %465 = bitcast i8* %464 to i32*
  %466 = atomicrmw add i32* %465, i32 -1 acq_rel
  %467 = icmp eq i32 %466, 1
  br i1 %467, label %468, label %475

468:                                              ; preds = %456
  %469 = getelementptr inbounds i8, i8* %463, i64 %461
  %470 = bitcast i8* %469 to %class.GrSurfaceProxy*
  %471 = bitcast i8* %469 to void (%class.GrSurfaceProxy*)***
  %472 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %471, align 8
  %473 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %472, i64 1
  %474 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %473, align 8
  call void %474(%class.GrSurfaceProxy* nonnull %470) #16
  br label %475

475:                                              ; preds = %468, %456, %448
  br i1 %426, label %488, label %476

476:                                              ; preds = %475
  %477 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %425, i64 0, i32 1
  %478 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %477, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %479 = atomicrmw add i32* %478, i32 -1 acq_rel
  %480 = icmp eq i32 %479, 1
  br i1 %480, label %481, label %488

481:                                              ; preds = %476
  %482 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %477, i64 -2
  %483 = bitcast %class.SkNVRefCnt* %482 to %class.GrSurfaceProxy*
  %484 = bitcast %class.SkNVRefCnt* %482 to void (%class.GrSurfaceProxy*)***
  %485 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %484, align 8
  %486 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %485, i64 1
  %487 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %486, align 8
  call void %487(%class.GrSurfaceProxy* nonnull %483) #16
  br label %488

488:                                              ; preds = %481, %476, %475, %406
  %489 = phi i1 [ true, %481 ], [ true, %476 ], [ true, %475 ], [ false, %406 ]
  %490 = bitcast %class.GrSurfaceDrawContext* %379 to void (%class.GrSurfaceDrawContext*)***
  %491 = load void (%class.GrSurfaceDrawContext*)**, void (%class.GrSurfaceDrawContext*)*** %490, align 8
  %492 = getelementptr inbounds void (%class.GrSurfaceDrawContext*)*, void (%class.GrSurfaceDrawContext*)** %491, i64 1
  %493 = load void (%class.GrSurfaceDrawContext*)*, void (%class.GrSurfaceDrawContext*)** %492, align 8
  call void %493(%class.GrSurfaceDrawContext* nonnull %379) #16
  br label %494

494:                                              ; preds = %488, %404
  %495 = phi i1 [ %489, %488 ], [ false, %404 ]
  %496 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %333, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %333, align 8
  %497 = icmp eq %class.GrFragmentProcessor* %496, null
  br i1 %497, label %503, label %498

498:                                              ; preds = %494
  %499 = bitcast %class.GrFragmentProcessor* %496 to void (%class.GrFragmentProcessor*)***
  %500 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %499, align 8
  %501 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %500, i64 1
  %502 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %501, align 8
  call void %502(%class.GrFragmentProcessor* nonnull %496) #16
  br label %503

503:                                              ; preds = %498, %494
  %504 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %332, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %332, align 8
  %505 = icmp eq %class.GrFragmentProcessor* %504, null
  br i1 %505, label %511, label %506

506:                                              ; preds = %503
  %507 = bitcast %class.GrFragmentProcessor* %504 to void (%class.GrFragmentProcessor*)***
  %508 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %507, align 8
  %509 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %508, i64 1
  %510 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %509, align 8
  call void %510(%class.GrFragmentProcessor* nonnull %504) #16
  br label %511

511:                                              ; preds = %506, %503
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %331) #16
  %512 = bitcast %class.GrSurfaceDrawContext* %317 to void (%class.GrSurfaceDrawContext*)***
  %513 = load void (%class.GrSurfaceDrawContext*)**, void (%class.GrSurfaceDrawContext*)*** %512, align 8
  %514 = getelementptr inbounds void (%class.GrSurfaceDrawContext*)*, void (%class.GrSurfaceDrawContext*)** %513, i64 1
  %515 = load void (%class.GrSurfaceDrawContext*)*, void (%class.GrSurfaceDrawContext*)** %514, align 8
  call void %515(%class.GrSurfaceDrawContext* nonnull %317) #16
  br label %516

516:                                              ; preds = %511, %326
  %517 = phi i1 [ %495, %511 ], [ false, %326 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %311) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %306) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %307) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %308) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %309) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %310) #16
  %518 = icmp eq i64 %305, 0
  br i1 %518, label %530, label %519

519:                                              ; preds = %516
  %520 = inttoptr i64 %305 to %"class.GrThreadSafeCache::Trampoline"*
  %521 = getelementptr inbounds %"class.GrThreadSafeCache::Trampoline", %"class.GrThreadSafeCache::Trampoline"* %520, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %522 = atomicrmw add i32* %521, i32 -1 acq_rel
  %523 = icmp eq i32 %522, 1
  br i1 %523, label %524, label %530

524:                                              ; preds = %519
  %525 = inttoptr i64 %305 to %class.SkRefCntBase*
  %526 = inttoptr i64 %305 to void (%class.SkRefCntBase*)***
  %527 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %526, align 8
  %528 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %527, i64 2
  %529 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %528, align 8
  call void %529(%class.SkRefCntBase* nonnull %525) #16
  br label %530

530:                                              ; preds = %524, %519, %516
  br i1 %517, label %532, label %531

531:                                              ; preds = %530
  call void @_ZN17GrThreadSafeCache6removeERK11GrUniqueKey(%class.GrThreadSafeCache* %188, %class.GrUniqueKey* nonnull dereferenceable(56) %19) #16
  br label %532

532:                                              ; preds = %531, %530, %295, %290, %280, %212
  %533 = phi i64 [ undef, %530 ], [ 0, %531 ], [ 0, %212 ], [ %286, %280 ], [ %286, %290 ], [ %286, %295 ]
  %534 = phi i32 [ 0, %530 ], [ 1, %531 ], [ 1, %212 ], [ 1, %280 ], [ 1, %290 ], [ 1, %295 ]
  %535 = load %"class.GrThreadSafeCache::Trampoline"*, %"class.GrThreadSafeCache::Trampoline"** %217, align 8
  %536 = icmp eq %"class.GrThreadSafeCache::Trampoline"* %535, null
  br i1 %536, label %547, label %537

537:                                              ; preds = %532
  %538 = getelementptr inbounds %"class.GrThreadSafeCache::Trampoline", %"class.GrThreadSafeCache::Trampoline"* %535, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %539 = atomicrmw add i32* %538, i32 -1 acq_rel
  %540 = icmp eq i32 %539, 1
  br i1 %540, label %541, label %547

541:                                              ; preds = %537
  %542 = bitcast %"class.GrThreadSafeCache::Trampoline"* %535 to %class.SkRefCntBase*
  %543 = bitcast %"class.GrThreadSafeCache::Trampoline"* %535 to void (%class.SkRefCntBase*)***
  %544 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %543, align 8
  %545 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %544, i64 2
  %546 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %545, align 8
  call void %546(%class.SkRefCntBase* nonnull %542) #16
  br label %547

547:                                              ; preds = %541, %537, %532
  %548 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %214, align 8
  %549 = icmp eq %class.GrSurfaceProxy* %548, null
  br i1 %549, label %562, label %550

550:                                              ; preds = %547
  %551 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %548, i64 0, i32 1
  %552 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %551, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %553 = atomicrmw add i32* %552, i32 -1 acq_rel
  %554 = icmp eq i32 %553, 1
  br i1 %554, label %555, label %562

555:                                              ; preds = %550
  %556 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %551, i64 -2
  %557 = bitcast %class.SkNVRefCnt* %556 to %class.GrSurfaceProxy*
  %558 = bitcast %class.SkNVRefCnt* %556 to void (%class.GrSurfaceProxy*)***
  %559 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %558, align 8
  %560 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %559, i64 1
  %561 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %560, align 8
  call void %561(%class.GrSurfaceProxy* nonnull %557) #16
  br label %562

562:                                              ; preds = %555, %550, %547
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %213) #16
  %563 = icmp eq i32 %534, 0
  br i1 %563, label %564, label %1151

564:                                              ; preds = %562
  %565 = bitcast %class.GrSurfaceProxyView* %21 to i64*
  br label %1126

566:                                              ; preds = %86
  %567 = bitcast %class.GrSurfaceProxyView* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %567) #16
  call void @_ZN17GrThreadSafeCache4findERK11GrUniqueKey(%class.GrSurfaceProxyView* nonnull sret %25, %class.GrThreadSafeCache* %188, %class.GrUniqueKey* nonnull dereferenceable(56) %19) #16
  %568 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %25, i64 0, i32 0, i32 0
  %569 = bitcast %class.GrSurfaceProxyView* %25 to i64*
  %570 = load i64, i64* %569, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %568, align 8
  %571 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %201, align 8
  %572 = bitcast %class.GrSurfaceProxyView* %21 to i64*
  store i64 %570, i64* %572, align 8
  %573 = icmp eq %class.GrSurfaceProxy* %571, null
  br i1 %573, label %588, label %574

574:                                              ; preds = %566
  %575 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %571, i64 0, i32 1
  %576 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %575, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %577 = atomicrmw add i32* %576, i32 -1 acq_rel
  %578 = icmp eq i32 %577, 1
  br i1 %578, label %579, label %586

579:                                              ; preds = %574
  %580 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %575, i64 -2
  %581 = bitcast %class.SkNVRefCnt* %580 to %class.GrSurfaceProxy*
  %582 = bitcast %class.SkNVRefCnt* %580 to void (%class.GrSurfaceProxy*)***
  %583 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %582, align 8
  %584 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %583, i64 1
  %585 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %584, align 8
  call void %585(%class.GrSurfaceProxy* nonnull %581) #16
  br label %586

586:                                              ; preds = %579, %574
  %587 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %568, align 8
  br label %588

588:                                              ; preds = %586, %566
  %589 = phi %class.GrSurfaceProxy* [ %587, %586 ], [ null, %566 ]
  %590 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %25, i64 0, i32 1
  %591 = load i32, i32* %590, align 8
  store i32 %591, i32* %202, align 8
  %592 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %25, i64 0, i32 2, i32 0
  %593 = load i16, i16* %592, align 4
  store i16 %593, i16* %203, align 4
  %594 = icmp eq %class.GrSurfaceProxy* %589, null
  br i1 %594, label %607, label %595

595:                                              ; preds = %588
  %596 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %589, i64 0, i32 1
  %597 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %596, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %598 = atomicrmw add i32* %597, i32 -1 acq_rel
  %599 = icmp eq i32 %598, 1
  br i1 %599, label %600, label %607

600:                                              ; preds = %595
  %601 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %596, i64 -2
  %602 = bitcast %class.SkNVRefCnt* %601 to %class.GrSurfaceProxy*
  %603 = bitcast %class.SkNVRefCnt* %601 to void (%class.GrSurfaceProxy*)***
  %604 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %603, align 8
  %605 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %604, i64 1
  %606 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %605, align 8
  call void %606(%class.GrSurfaceProxy* nonnull %602) #16
  br label %607

607:                                              ; preds = %600, %595, %588
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %567) #16
  %608 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %201, align 8
  %609 = icmp eq %class.GrSurfaceProxy* %608, null
  br i1 %609, label %634, label %610

610:                                              ; preds = %607
  %611 = ptrtoint %class.GrSurfaceProxy* %608 to i64
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %201, align 8
  %612 = bitcast %class.GrSurfaceProxyView* %26 to i64*
  store i64 %611, i64* %612, align 8
  %613 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %26, i64 0, i32 1
  %614 = load i32, i32* %202, align 8
  store i32 %614, i32* %613, align 8
  %615 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %26, i64 0, i32 2, i32 0
  %616 = load i16, i16* %203, align 4
  store i16 %616, i16* %615, align 4
  %617 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView* nonnull %26, i32 2, %class.SkMatrix* nonnull dereferenceable(40) %20, i32 0, i32 0) #16
  %618 = ptrtoint %class.GrFragmentProcessor* %617 to i64
  %619 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %26, i64 0, i32 0, i32 0
  %620 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %619, align 8
  %621 = icmp eq %class.GrSurfaceProxy* %620, null
  br i1 %621, label %1151, label %622

622:                                              ; preds = %610
  %623 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %620, i64 0, i32 1
  %624 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %623, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %625 = atomicrmw add i32* %624, i32 -1 acq_rel
  %626 = icmp eq i32 %625, 1
  br i1 %626, label %627, label %1151

627:                                              ; preds = %622
  %628 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %623, i64 -2
  %629 = bitcast %class.SkNVRefCnt* %628 to %class.GrSurfaceProxy*
  %630 = bitcast %class.SkNVRefCnt* %628 to void (%class.GrSurfaceProxy*)***
  %631 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %630, align 8
  %632 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %631, i64 1
  %633 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %632, align 8
  call void %633(%class.GrSurfaceProxy* nonnull %629) #16
  br label %1151

634:                                              ; preds = %607
  %635 = bitcast %class.GrSurfaceProxyView* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %635) #16
  %636 = fmul float %3, 3.000000e+00
  %637 = call float @llvm.ceil.f32(float %636) #16
  %638 = fptosi float %637 to i32
  %639 = shl nsw i32 %638, 1
  %640 = or i32 %639, 1
  %641 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %30, i64 0, i32 1
  %642 = bitcast [4 x %struct.SkPoint]* %641 to <2 x float>*
  %643 = load <2 x float>, <2 x float>* %642, align 4, !noalias !21
  %644 = load i32, i32* %54, align 8, !noalias !21
  %645 = sdiv i32 %644, 2
  %646 = load i32, i32* %55, align 4, !noalias !21
  %647 = sdiv i32 %646, 2
  %648 = sext i32 %640 to i64
  %649 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %648, i64 4) #16
  %650 = extractvalue { i64, i1 } %649, 1
  %651 = extractvalue { i64, i1 } %649, 0
  %652 = select i1 %650, i64 -1, i64 %651
  %653 = call i8* @_Znam(i64 %652) #18, !noalias !21
  %654 = bitcast i8* %653 to float*
  call void @_ZN14SkGpuBlurUtils23Compute1DGaussianKernelEPffi(float* nonnull %654, float %3, i32 %638) #16, !noalias !21
  %655 = bitcast %class.SkBitmap* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %655) #16, !noalias !21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %655, i8 -86, i64 56, i1 false) #16, !noalias !21
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %7) #16, !noalias !21
  %656 = fmul float %3, 6.000000e+00
  %657 = call i32 @_ZN14SkGpuBlurUtils19CreateIntegralTableEfP8SkBitmap(float %656, %class.SkBitmap* nonnull %7) #16, !noalias !21
  %658 = icmp eq i32 %657, 0
  br i1 %658, label %659, label %661

659:                                              ; preds = %634
  %660 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %27, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %635, i8 0, i64 16, i1 false) #16, !alias.scope !21
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %660, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #16
  br label %1043

661:                                              ; preds = %634
  %662 = bitcast %class.SkBitmap* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %662) #16, !noalias !21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %662, i8 -86, i64 56, i1 false) #16, !noalias !21
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %8) #16
  %663 = bitcast %struct.SkImageInfo* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %663) #16, !noalias !21
  %664 = load i32, i32* %54, align 8, !noalias !21
  %665 = load i32, i32* %55, align 4, !noalias !21
  %666 = zext i32 %665 to i64
  %667 = shl nuw i64 %666, 32
  %668 = zext i32 %664 to i64
  %669 = or i64 %667, %668
  %670 = bitcast %struct.SkImageInfo* %9 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934593>, <2 x i64>* %670, align 16, !alias.scope !24, !noalias !21
  %671 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %9, i64 0, i32 1
  %672 = bitcast %struct.SkISize* %671 to i64*
  store i64 %669, i64* %672, align 16, !alias.scope !24, !noalias !21
  %673 = sext i32 %664 to i64
  %674 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %9, i64 0, i32 0
  %675 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %674) #16
  %676 = sext i32 %675 to i64
  %677 = mul nsw i64 %676, %673
  %678 = icmp ult i64 %677, 2147483648
  %679 = select i1 %678, i64 %677, i64 0
  %680 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %8, %struct.SkImageInfo* nonnull dereferenceable(24) %9, i64 %679) #16
  %681 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %9, i64 0, i32 0, i32 0, i32 0
  %682 = load %class.SkColorSpace*, %class.SkColorSpace** %681, align 16, !noalias !21
  %683 = icmp eq %class.SkColorSpace* %682, null
  br i1 %683, label %690, label %684

684:                                              ; preds = %661
  %685 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %682, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %686 = atomicrmw add i32* %685, i32 -1 acq_rel
  %687 = icmp eq i32 %686, 1
  br i1 %687, label %688, label %690

688:                                              ; preds = %684
  %689 = bitcast %class.SkColorSpace* %682 to i8*
  call void @_ZdlPv(i8* %689) #18
  br label %690

690:                                              ; preds = %688, %684, %661
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %663) #16, !noalias !21
  br i1 %680, label %693, label %691

691:                                              ; preds = %690
  %692 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %27, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %635, i8 0, i64 16, i1 false) #16, !alias.scope !21
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %692, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #16
  br label %1042

693:                                              ; preds = %690
  %694 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %694) #16, !noalias !21
  %695 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %696 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %697 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %694, i8 0, i64 24, i1 false) #16, !noalias !21
  %698 = load i32, i32* %54, align 8, !noalias !21
  %699 = sext i32 %698 to i64
  %700 = bitcast float** %697 to i64*
  %701 = bitcast %"class.std::__1::vector"* %10 to i64*
  %702 = icmp eq i32 %698, 0
  br i1 %702, label %717, label %703

703:                                              ; preds = %693
  %704 = icmp slt i32 %698, 0
  br i1 %704, label %705, label %706

705:                                              ; preds = %703
  call void @abort() #19
  unreachable

706:                                              ; preds = %703
  %707 = bitcast float** %696 to i64*
  %708 = shl nsw i64 %699, 2
  %709 = call i8* @_Znwm(i64 %708) #18
  %710 = bitcast i8* %709 to float*
  %711 = ptrtoint i8* %709 to i64
  %712 = getelementptr inbounds float, float* %710, i64 %699
  %713 = ptrtoint float* %712 to i64
  store i64 %711, i64* %701, align 8, !noalias !21
  store i64 %711, i64* %707, align 8, !noalias !21
  store i64 %713, i64* %700, align 8, !noalias !21
  %714 = extractelement <2 x float> %643, i32 0
  %715 = fmul float %3, 3.000000e+00
  %716 = fmul float %714, %714
  br label %734

717:                                              ; preds = %912, %693
  %718 = icmp slt i32 %646, -1
  br i1 %718, label %916, label %719

719:                                              ; preds = %717
  %720 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 0
  %721 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 1
  %722 = icmp slt i32 %644, -1
  %723 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %7, i64 0, i32 1, i32 0
  %724 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %7, i64 0, i32 1, i32 2, i32 1, i32 0
  %725 = icmp sgt i32 %640, 0
  %726 = and i32 %638, 2147483647
  %727 = bitcast float** %696 to i64*
  %728 = zext i32 %640 to i64
  %729 = zext i32 %726 to i64
  %730 = add nsw i32 %645, 1
  %731 = add nsw i32 %647, 1
  %732 = zext i32 %731 to i64
  %733 = zext i32 %730 to i64
  br label %926

734:                                              ; preds = %912, %706
  %735 = phi i32 [ 0, %706 ], [ %913, %912 ]
  %736 = sitofp i32 %735 to float
  %737 = load float, float* %50, align 4, !noalias !21
  %738 = fcmp ogt float %737, %736
  %739 = load float, float* %52, align 4, !noalias !21
  %740 = fcmp olt float %739, %736
  %741 = or i1 %738, %740
  br i1 %741, label %742, label %795

742:                                              ; preds = %734
  %743 = load float*, float** %696, align 8, !noalias !21
  %744 = load float*, float** %697, align 8, !noalias !21
  %745 = icmp ult float* %743, %744
  %746 = ptrtoint float* %744 to i64
  br i1 %745, label %747, label %751

747:                                              ; preds = %742
  %748 = bitcast float* %743 to i32*
  store i32 -1082130432, i32* %748, align 4
  %749 = getelementptr inbounds float, float* %743, i64 1
  %750 = ptrtoint float* %749 to i64
  store i64 %750, i64* %707, align 8, !noalias !21
  br label %912

751:                                              ; preds = %742
  %752 = ptrtoint float* %743 to i64
  %753 = load i64, i64* %701, align 8, !noalias !21
  %754 = sub i64 %752, %753
  %755 = ashr exact i64 %754, 2
  %756 = add nsw i64 %755, 1
  %757 = icmp ugt i64 %756, 4611686018427387903
  br i1 %757, label %758, label %760

758:                                              ; preds = %751
  %759 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %759) #19
  unreachable

760:                                              ; preds = %751
  %761 = sub i64 %746, %753
  %762 = ashr exact i64 %761, 2
  %763 = icmp ult i64 %762, 2305843009213693951
  br i1 %763, label %764, label %772

764:                                              ; preds = %760
  %765 = ashr exact i64 %761, 1
  %766 = icmp ult i64 %765, %756
  %767 = select i1 %766, i64 %756, i64 %765
  %768 = icmp eq i64 %767, 0
  br i1 %768, label %777, label %769

769:                                              ; preds = %764
  %770 = icmp ugt i64 %767, 4611686018427387903
  br i1 %770, label %771, label %772

771:                                              ; preds = %769
  call void @abort() #19
  unreachable

772:                                              ; preds = %769, %760
  %773 = phi i64 [ %767, %769 ], [ 4611686018427387903, %760 ]
  %774 = shl i64 %773, 2
  %775 = call i8* @_Znwm(i64 %774) #18
  %776 = bitcast i8* %775 to float*
  br label %777

777:                                              ; preds = %772, %764
  %778 = phi i64 [ %773, %772 ], [ 0, %764 ]
  %779 = phi i8* [ %775, %772 ], [ null, %764 ]
  %780 = phi float* [ %776, %772 ], [ null, %764 ]
  %781 = getelementptr inbounds float, float* %780, i64 %755
  %782 = getelementptr inbounds float, float* %780, i64 %778
  %783 = ptrtoint float* %782 to i64
  %784 = bitcast float* %781 to i32*
  store i32 -1082130432, i32* %784, align 4, !noalias !21
  %785 = getelementptr inbounds float, float* %781, i64 1
  %786 = ptrtoint float* %785 to i64
  %787 = ptrtoint float* %780 to i64
  %788 = icmp sgt i64 %754, 0
  br i1 %788, label %789, label %791

789:                                              ; preds = %777
  %790 = inttoptr i64 %753 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %779, i8* align 4 %790, i64 %754, i1 false) #16
  br label %791

791:                                              ; preds = %789, %777
  store i64 %787, i64* %701, align 8, !noalias !21
  store i64 %786, i64* %707, align 8, !noalias !21
  store i64 %783, i64* %700, align 8, !noalias !21
  %792 = icmp eq i64 %753, 0
  br i1 %792, label %912, label %793

793:                                              ; preds = %791
  %794 = inttoptr i64 %753 to i8*
  call void @_ZdlPv(i8* %794) #18
  br label %912

795:                                              ; preds = %734
  %796 = fadd float %736, 5.000000e-01
  %797 = fadd float %714, %737
  %798 = fcmp olt float %796, %797
  br i1 %798, label %799, label %859

799:                                              ; preds = %795
  %800 = fsub float %797, %736
  %801 = fadd float %800, -5.000000e-01
  %802 = fmul float %801, %801
  %803 = fsub float %716, %802
  %804 = call float @sqrtf(float %803) #16
  %805 = load float, float* %51, align 4, !noalias !21
  %806 = fadd float %714, %805
  %807 = fsub float %806, %804
  %808 = fadd float %715, %807
  %809 = load float*, float** %696, align 8, !noalias !21
  %810 = load float*, float** %697, align 8, !noalias !21
  %811 = icmp ult float* %809, %810
  %812 = ptrtoint float* %810 to i64
  br i1 %811, label %813, label %816

813:                                              ; preds = %799
  store float %808, float* %809, align 4
  %814 = getelementptr inbounds float, float* %809, i64 1
  %815 = ptrtoint float* %814 to i64
  store i64 %815, i64* %707, align 8, !noalias !21
  br label %912

816:                                              ; preds = %799
  %817 = ptrtoint float* %809 to i64
  %818 = load i64, i64* %701, align 8, !noalias !21
  %819 = sub i64 %817, %818
  %820 = ashr exact i64 %819, 2
  %821 = add nsw i64 %820, 1
  %822 = icmp ugt i64 %821, 4611686018427387903
  br i1 %822, label %823, label %825

823:                                              ; preds = %816
  %824 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %824) #19
  unreachable

825:                                              ; preds = %816
  %826 = sub i64 %812, %818
  %827 = ashr exact i64 %826, 2
  %828 = icmp ult i64 %827, 2305843009213693951
  br i1 %828, label %829, label %837

829:                                              ; preds = %825
  %830 = ashr exact i64 %826, 1
  %831 = icmp ult i64 %830, %821
  %832 = select i1 %831, i64 %821, i64 %830
  %833 = icmp eq i64 %832, 0
  br i1 %833, label %842, label %834

834:                                              ; preds = %829
  %835 = icmp ugt i64 %832, 4611686018427387903
  br i1 %835, label %836, label %837

836:                                              ; preds = %834
  call void @abort() #19
  unreachable

837:                                              ; preds = %834, %825
  %838 = phi i64 [ %832, %834 ], [ 4611686018427387903, %825 ]
  %839 = shl i64 %838, 2
  %840 = call i8* @_Znwm(i64 %839) #18
  %841 = bitcast i8* %840 to float*
  br label %842

842:                                              ; preds = %837, %829
  %843 = phi i64 [ %838, %837 ], [ 0, %829 ]
  %844 = phi i8* [ %840, %837 ], [ null, %829 ]
  %845 = phi float* [ %841, %837 ], [ null, %829 ]
  %846 = getelementptr inbounds float, float* %845, i64 %820
  %847 = getelementptr inbounds float, float* %845, i64 %843
  %848 = ptrtoint float* %847 to i64
  store float %808, float* %846, align 4, !noalias !21
  %849 = getelementptr inbounds float, float* %846, i64 1
  %850 = ptrtoint float* %849 to i64
  %851 = ptrtoint float* %845 to i64
  %852 = icmp sgt i64 %819, 0
  br i1 %852, label %853, label %855

853:                                              ; preds = %842
  %854 = inttoptr i64 %818 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %844, i8* align 4 %854, i64 %819, i1 false) #16
  br label %855

855:                                              ; preds = %853, %842
  store i64 %851, i64* %701, align 8, !noalias !21
  store i64 %850, i64* %707, align 8, !noalias !21
  store i64 %848, i64* %700, align 8, !noalias !21
  %856 = icmp eq i64 %818, 0
  br i1 %856, label %912, label %857

857:                                              ; preds = %855
  %858 = inttoptr i64 %818 to i8*
  call void @_ZdlPv(i8* %858) #18
  br label %912

859:                                              ; preds = %795
  %860 = load float, float* %51, align 4, !noalias !21
  %861 = fadd float %715, %860
  %862 = load float*, float** %696, align 8, !noalias !21
  %863 = load float*, float** %697, align 8, !noalias !21
  %864 = icmp ult float* %862, %863
  %865 = ptrtoint float* %863 to i64
  br i1 %864, label %866, label %869

866:                                              ; preds = %859
  store float %861, float* %862, align 4
  %867 = getelementptr inbounds float, float* %862, i64 1
  %868 = ptrtoint float* %867 to i64
  store i64 %868, i64* %707, align 8, !noalias !21
  br label %912

869:                                              ; preds = %859
  %870 = ptrtoint float* %862 to i64
  %871 = load i64, i64* %701, align 8, !noalias !21
  %872 = sub i64 %870, %871
  %873 = ashr exact i64 %872, 2
  %874 = add nsw i64 %873, 1
  %875 = icmp ugt i64 %874, 4611686018427387903
  br i1 %875, label %876, label %878

876:                                              ; preds = %869
  %877 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %877) #19
  unreachable

878:                                              ; preds = %869
  %879 = sub i64 %865, %871
  %880 = ashr exact i64 %879, 2
  %881 = icmp ult i64 %880, 2305843009213693951
  br i1 %881, label %882, label %890

882:                                              ; preds = %878
  %883 = ashr exact i64 %879, 1
  %884 = icmp ult i64 %883, %874
  %885 = select i1 %884, i64 %874, i64 %883
  %886 = icmp eq i64 %885, 0
  br i1 %886, label %895, label %887

887:                                              ; preds = %882
  %888 = icmp ugt i64 %885, 4611686018427387903
  br i1 %888, label %889, label %890

889:                                              ; preds = %887
  call void @abort() #19
  unreachable

890:                                              ; preds = %887, %878
  %891 = phi i64 [ %885, %887 ], [ 4611686018427387903, %878 ]
  %892 = shl i64 %891, 2
  %893 = call i8* @_Znwm(i64 %892) #18
  %894 = bitcast i8* %893 to float*
  br label %895

895:                                              ; preds = %890, %882
  %896 = phi i64 [ %891, %890 ], [ 0, %882 ]
  %897 = phi i8* [ %893, %890 ], [ null, %882 ]
  %898 = phi float* [ %894, %890 ], [ null, %882 ]
  %899 = getelementptr inbounds float, float* %898, i64 %873
  %900 = getelementptr inbounds float, float* %898, i64 %896
  %901 = ptrtoint float* %900 to i64
  store float %861, float* %899, align 4, !noalias !21
  %902 = getelementptr inbounds float, float* %899, i64 1
  %903 = ptrtoint float* %902 to i64
  %904 = ptrtoint float* %898 to i64
  %905 = icmp sgt i64 %872, 0
  br i1 %905, label %906, label %908

906:                                              ; preds = %895
  %907 = inttoptr i64 %871 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %897, i8* align 4 %907, i64 %872, i1 false) #16
  br label %908

908:                                              ; preds = %906, %895
  store i64 %904, i64* %701, align 8, !noalias !21
  store i64 %903, i64* %707, align 8, !noalias !21
  store i64 %901, i64* %700, align 8, !noalias !21
  %909 = icmp eq i64 %871, 0
  br i1 %909, label %912, label %910

910:                                              ; preds = %908
  %911 = inttoptr i64 %871 to i8*
  call void @_ZdlPv(i8* %911) #18
  br label %912

912:                                              ; preds = %910, %908, %866, %857, %855, %813, %793, %791, %747
  %913 = add nuw nsw i32 %735, 1
  %914 = load i32, i32* %54, align 8, !noalias !21
  %915 = icmp slt i32 %913, %914
  br i1 %915, label %734, label %717

916:                                              ; preds = %939, %717
  call void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap* nonnull %8) #16
  %917 = bitcast %"class.std::__1::tuple.337"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %917) #16, !noalias !21
  call void @_Z29GrMakeUncachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped12SkBackingFit10SkBudgeted(%"class.std::__1::tuple.337"* nonnull sret %11, %class.GrRecordingContext* %1, %class.SkBitmap* nonnull dereferenceable(56) %8, i1 zeroext false, i32 1, i1 zeroext true) #16
  %918 = getelementptr inbounds %"class.std::__1::tuple.337", %"class.std::__1::tuple.337"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %919 = bitcast %"class.std::__1::tuple.337"* %11 to i64*
  %920 = load i64, i64* %919, align 8, !noalias !21
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %918, align 8, !noalias !21
  %921 = getelementptr inbounds %"class.std::__1::tuple.337", %"class.std::__1::tuple.337"* %11, i64 0, i32 0, i32 0, i32 0, i32 1
  %922 = load i32, i32* %921, align 8, !noalias !21
  %923 = getelementptr inbounds %"class.std::__1::tuple.337", %"class.std::__1::tuple.337"* %11, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %924 = load i16, i16* %923, align 4, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %917) #16, !noalias !21
  %925 = icmp eq i64 %920, 0
  br i1 %925, label %1032, label %1028

926:                                              ; preds = %939, %719
  %927 = phi i64 [ %948, %939 ], [ 0, %719 ]
  %928 = phi i32 [ %949, %939 ], [ 0, %719 ]
  %929 = load i8*, i8** %720, align 8, !noalias !21
  %930 = load i64, i64* %721, align 8, !noalias !21
  %931 = mul i64 %930, %927
  %932 = getelementptr inbounds i8, i8* %929, i64 %931
  br i1 %722, label %939, label %933

933:                                              ; preds = %926
  %934 = trunc i64 %927 to i32
  %935 = sitofp i32 %934 to float
  br label %951

936:                                              ; preds = %1015
  %937 = load i8*, i8** %720, align 8, !noalias !21
  %938 = load i64, i64* %721, align 8, !noalias !21
  br label %939

939:                                              ; preds = %936, %926
  %940 = phi i64 [ %938, %936 ], [ %930, %926 ]
  %941 = phi i8* [ %937, %936 ], [ %929, %926 ]
  %942 = load i32, i32* %55, align 4, !noalias !21
  %943 = xor i32 %928, -1
  %944 = add i32 %942, %943
  %945 = sext i32 %944 to i64
  %946 = mul i64 %940, %945
  %947 = getelementptr inbounds i8, i8* %941, i64 %946
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %947, i8* align 1 %932, i64 %940, i1 false) #16
  %948 = add nuw nsw i64 %927, 1
  %949 = add nuw nsw i32 %928, 1
  %950 = icmp eq i64 %948, %732
  br i1 %950, label %916, label %926

951:                                              ; preds = %1015, %933
  %952 = phi i64 [ %1026, %1015 ], [ 0, %933 ]
  %953 = load i8*, i8** %723, align 8, !noalias !21
  %954 = load i32, i32* %724, align 8, !noalias !21
  br i1 %725, label %955, label %1015

955:                                              ; preds = %951
  %956 = load i64, i64* %727, align 8, !noalias !21
  %957 = load i64, i64* %701, align 8, !noalias !21
  %958 = sub i64 %956, %957
  %959 = inttoptr i64 %957 to float*
  %960 = sitofp i32 %954 to float
  %961 = fdiv float %960, %656
  %962 = add nsw i32 %954, -1
  %963 = sitofp i32 %962 to float
  %964 = sub nsw i64 %952, %729
  %965 = shl i64 %958, 30
  %966 = ashr i64 %965, 32
  br label %967

967:                                              ; preds = %1010, %955
  %968 = phi i64 [ %964, %955 ], [ %1013, %1010 ]
  %969 = phi i64 [ 0, %955 ], [ %1012, %1010 ]
  %970 = phi float [ 0.000000e+00, %955 ], [ %1011, %1010 ]
  %971 = icmp sgt i64 %968, -1
  %972 = icmp slt i64 %968, %966
  %973 = and i1 %971, %972
  br i1 %973, label %974, label %1010

974:                                              ; preds = %967
  %975 = getelementptr inbounds float, float* %654, i64 %969
  %976 = load float, float* %975, align 4, !noalias !21
  %977 = getelementptr inbounds float, float* %959, i64 %968
  %978 = load float, float* %977, align 4
  %979 = fcmp olt float %978, 0.000000e+00
  br i1 %979, label %1005, label %980

980:                                              ; preds = %974
  %981 = fsub float %978, %935
  %982 = fadd float %981, -5.000000e-01
  %983 = fmul float %961, %982
  %984 = fcmp olt float %983, 0.000000e+00
  br i1 %984, label %1005, label %985

985:                                              ; preds = %980
  %986 = fcmp ult float %983, %963
  br i1 %986, label %987, label %1005

987:                                              ; preds = %985
  %988 = fptosi float %983 to i32
  %989 = sitofp i32 %988 to float
  %990 = fsub float %983, %989
  %991 = sext i32 %988 to i64
  %992 = getelementptr inbounds i8, i8* %953, i64 %991
  %993 = load i8, i8* %992, align 1
  %994 = uitofp i8 %993 to float
  %995 = fsub float 1.000000e+00, %990
  %996 = fmul float %995, %994
  %997 = add nsw i32 %988, 1
  %998 = sext i32 %997 to i64
  %999 = getelementptr inbounds i8, i8* %953, i64 %998
  %1000 = load i8, i8* %999, align 1
  %1001 = uitofp i8 %1000 to float
  %1002 = fmul float %990, %1001
  %1003 = fadd float %996, %1002
  %1004 = fptoui float %1003 to i8
  br label %1005

1005:                                             ; preds = %987, %985, %980, %974
  %1006 = phi i8 [ 0, %974 ], [ %1004, %987 ], [ -1, %980 ], [ 0, %985 ]
  %1007 = uitofp i8 %1006 to float
  %1008 = fmul float %976, %1007
  %1009 = fadd float %970, %1008
  br label %1010

1010:                                             ; preds = %1005, %967
  %1011 = phi float [ %970, %967 ], [ %1009, %1005 ]
  %1012 = add nuw nsw i64 %969, 1
  %1013 = add nsw i64 %968, 1
  %1014 = icmp eq i64 %1012, %728
  br i1 %1014, label %1015, label %967

1015:                                             ; preds = %1010, %951
  %1016 = phi float [ 0.000000e+00, %951 ], [ %1011, %1010 ]
  %1017 = fadd float %1016, 5.000000e-01
  %1018 = fptoui float %1017 to i8
  %1019 = getelementptr inbounds i8, i8* %932, i64 %952
  store i8 %1018, i8* %1019, align 1
  %1020 = load i32, i32* %54, align 8, !noalias !21
  %1021 = trunc i64 %952 to i32
  %1022 = xor i32 %1021, -1
  %1023 = add i32 %1020, %1022
  %1024 = sext i32 %1023 to i64
  %1025 = getelementptr inbounds i8, i8* %932, i64 %1024
  store i8 %1018, i8* %1025, align 1
  %1026 = add nuw nsw i64 %952, 1
  %1027 = icmp eq i64 %1026, %733
  br i1 %1027, label %936, label %951

1028:                                             ; preds = %916
  %1029 = bitcast %class.GrSurfaceProxyView* %27 to i64*
  store i64 %920, i64* %1029, align 8, !alias.scope !21
  %1030 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %27, i64 0, i32 1
  store i32 %922, i32* %1030, align 8, !alias.scope !21
  %1031 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %27, i64 0, i32 2, i32 0
  store i16 %924, i16* %1031, align 4, !alias.scope !21
  br label %1034

1032:                                             ; preds = %916
  %1033 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %27, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %635, i8 0, i64 16, i1 false) #16, !alias.scope !21
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %1033, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #16
  br label %1034

1034:                                             ; preds = %1032, %1028
  %1035 = load float*, float** %695, align 8, !noalias !21
  %1036 = icmp eq float* %1035, null
  br i1 %1036, label %1041, label %1037

1037:                                             ; preds = %1034
  %1038 = ptrtoint float* %1035 to i64
  %1039 = bitcast float** %696 to i64*
  store i64 %1038, i64* %1039, align 8, !noalias !21
  %1040 = bitcast float* %1035 to i8*
  call void @_ZdlPv(i8* %1040) #18
  br label %1041

1041:                                             ; preds = %1037, %1034
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %694) #16, !noalias !21
  br label %1042

1042:                                             ; preds = %1041, %691
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %662) #16, !noalias !21
  br label %1043

1043:                                             ; preds = %1042, %659
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %655) #16, !noalias !21
  call void @_ZdaPv(i8* nonnull %653) #18
  %1044 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %27, i64 0, i32 0, i32 0
  %1045 = bitcast %class.GrSurfaceProxyView* %27 to i64*
  %1046 = load i64, i64* %1045, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %1044, align 8
  %1047 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %201, align 8
  store i64 %1046, i64* %572, align 8
  %1048 = icmp eq %class.GrSurfaceProxy* %1047, null
  br i1 %1048, label %1063, label %1049

1049:                                             ; preds = %1043
  %1050 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %1047, i64 0, i32 1
  %1051 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1050, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1052 = atomicrmw add i32* %1051, i32 -1 acq_rel
  %1053 = icmp eq i32 %1052, 1
  br i1 %1053, label %1054, label %1061

1054:                                             ; preds = %1049
  %1055 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1050, i64 -2
  %1056 = bitcast %class.SkNVRefCnt* %1055 to %class.GrSurfaceProxy*
  %1057 = bitcast %class.SkNVRefCnt* %1055 to void (%class.GrSurfaceProxy*)***
  %1058 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %1057, align 8
  %1059 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1058, i64 1
  %1060 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1059, align 8
  call void %1060(%class.GrSurfaceProxy* nonnull %1056) #16
  br label %1061

1061:                                             ; preds = %1054, %1049
  %1062 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %1044, align 8
  br label %1063

1063:                                             ; preds = %1061, %1043
  %1064 = phi %class.GrSurfaceProxy* [ %1062, %1061 ], [ null, %1043 ]
  %1065 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %27, i64 0, i32 1
  %1066 = load i32, i32* %1065, align 8
  store i32 %1066, i32* %202, align 8
  %1067 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %27, i64 0, i32 2, i32 0
  %1068 = load i16, i16* %1067, align 4
  store i16 %1068, i16* %203, align 4
  %1069 = icmp eq %class.GrSurfaceProxy* %1064, null
  br i1 %1069, label %1082, label %1070

1070:                                             ; preds = %1063
  %1071 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %1064, i64 0, i32 1
  %1072 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1071, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1073 = atomicrmw add i32* %1072, i32 -1 acq_rel
  %1074 = icmp eq i32 %1073, 1
  br i1 %1074, label %1075, label %1082

1075:                                             ; preds = %1070
  %1076 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1071, i64 -2
  %1077 = bitcast %class.SkNVRefCnt* %1076 to %class.GrSurfaceProxy*
  %1078 = bitcast %class.SkNVRefCnt* %1076 to void (%class.GrSurfaceProxy*)***
  %1079 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %1078, align 8
  %1080 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1079, i64 1
  %1081 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1080, align 8
  call void %1081(%class.GrSurfaceProxy* nonnull %1077) #16
  br label %1082

1082:                                             ; preds = %1075, %1070, %1063
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %635) #16
  %1083 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %201, align 8
  %1084 = icmp eq %class.GrSurfaceProxy* %1083, null
  br i1 %1084, label %1167, label %1085

1085:                                             ; preds = %1082
  %1086 = bitcast %class.GrSurfaceProxyView* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1086) #16
  call void @_ZN17GrThreadSafeCache3addERK11GrUniqueKeyRK18GrSurfaceProxyView(%class.GrSurfaceProxyView* nonnull sret %28, %class.GrThreadSafeCache* %188, %class.GrUniqueKey* nonnull dereferenceable(56) %19, %class.GrSurfaceProxyView* nonnull dereferenceable(16) %21) #16
  %1087 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %28, i64 0, i32 0, i32 0
  %1088 = bitcast %class.GrSurfaceProxyView* %28 to i64*
  %1089 = load i64, i64* %1088, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %1087, align 8
  %1090 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %201, align 8
  store i64 %1089, i64* %572, align 8
  %1091 = icmp eq %class.GrSurfaceProxy* %1090, null
  br i1 %1091, label %1106, label %1092

1092:                                             ; preds = %1085
  %1093 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %1090, i64 0, i32 1
  %1094 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1093, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1095 = atomicrmw add i32* %1094, i32 -1 acq_rel
  %1096 = icmp eq i32 %1095, 1
  br i1 %1096, label %1097, label %1104

1097:                                             ; preds = %1092
  %1098 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1093, i64 -2
  %1099 = bitcast %class.SkNVRefCnt* %1098 to %class.GrSurfaceProxy*
  %1100 = bitcast %class.SkNVRefCnt* %1098 to void (%class.GrSurfaceProxy*)***
  %1101 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %1100, align 8
  %1102 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1101, i64 1
  %1103 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1102, align 8
  call void %1103(%class.GrSurfaceProxy* nonnull %1099) #16
  br label %1104

1104:                                             ; preds = %1097, %1092
  %1105 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %1087, align 8
  br label %1106

1106:                                             ; preds = %1104, %1085
  %1107 = phi %class.GrSurfaceProxy* [ %1105, %1104 ], [ null, %1085 ]
  %1108 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %28, i64 0, i32 1
  %1109 = load i32, i32* %1108, align 8
  store i32 %1109, i32* %202, align 8
  %1110 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %28, i64 0, i32 2, i32 0
  %1111 = load i16, i16* %1110, align 4
  store i16 %1111, i16* %203, align 4
  %1112 = icmp eq %class.GrSurfaceProxy* %1107, null
  br i1 %1112, label %1125, label %1113

1113:                                             ; preds = %1106
  %1114 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %1107, i64 0, i32 1
  %1115 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1116 = atomicrmw add i32* %1115, i32 -1 acq_rel
  %1117 = icmp eq i32 %1116, 1
  br i1 %1117, label %1118, label %1125

1118:                                             ; preds = %1113
  %1119 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1114, i64 -2
  %1120 = bitcast %class.SkNVRefCnt* %1119 to %class.GrSurfaceProxy*
  %1121 = bitcast %class.SkNVRefCnt* %1119 to void (%class.GrSurfaceProxy*)***
  %1122 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %1121, align 8
  %1123 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1122, i64 1
  %1124 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1123, align 8
  call void %1124(%class.GrSurfaceProxy* nonnull %1120) #16
  br label %1125

1125:                                             ; preds = %1118, %1113, %1106
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1086) #16
  br label %1126

1126:                                             ; preds = %1125, %564
  %1127 = phi i64* [ %565, %564 ], [ %572, %1125 ]
  %1128 = load i64, i64* %1127, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %201, align 8
  %1129 = bitcast %class.GrSurfaceProxyView* %29 to i64*
  store i64 %1128, i64* %1129, align 8
  %1130 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %29, i64 0, i32 1
  %1131 = load i32, i32* %202, align 8
  store i32 %1131, i32* %1130, align 8
  %1132 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %29, i64 0, i32 2, i32 0
  %1133 = load i16, i16* %203, align 4
  store i16 %1133, i16* %1132, align 4
  %1134 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView* nonnull %29, i32 2, %class.SkMatrix* nonnull dereferenceable(40) %20, i32 0, i32 0) #16
  %1135 = ptrtoint %class.GrFragmentProcessor* %1134 to i64
  %1136 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %29, i64 0, i32 0, i32 0
  %1137 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %1136, align 8
  %1138 = icmp eq %class.GrSurfaceProxy* %1137, null
  br i1 %1138, label %1151, label %1139

1139:                                             ; preds = %1126
  %1140 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %1137, i64 0, i32 1
  %1141 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1140, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1142 = atomicrmw add i32* %1141, i32 -1 acq_rel
  %1143 = icmp eq i32 %1142, 1
  br i1 %1143, label %1144, label %1151

1144:                                             ; preds = %1139
  %1145 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1140, i64 -2
  %1146 = bitcast %class.SkNVRefCnt* %1145 to %class.GrSurfaceProxy*
  %1147 = bitcast %class.SkNVRefCnt* %1145 to void (%class.GrSurfaceProxy*)***
  %1148 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %1147, align 8
  %1149 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1148, i64 1
  %1150 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1149, align 8
  call void %1150(%class.GrSurfaceProxy* nonnull %1146) #16
  br label %1151

1151:                                             ; preds = %1144, %1139, %1126, %627, %622, %610, %562
  %1152 = phi i64 [ %533, %562 ], [ %618, %610 ], [ %618, %622 ], [ %618, %627 ], [ %1135, %1144 ], [ %1135, %1139 ], [ %1135, %1126 ]
  %1153 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %201, align 8
  %1154 = icmp eq %class.GrSurfaceProxy* %1153, null
  br i1 %1154, label %1167, label %1155

1155:                                             ; preds = %1151
  %1156 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %1153, i64 0, i32 1
  %1157 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1156, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1158 = atomicrmw add i32* %1157, i32 -1 acq_rel
  %1159 = icmp eq i32 %1158, 1
  br i1 %1159, label %1160, label %1167

1160:                                             ; preds = %1155
  %1161 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %1156, i64 -2
  %1162 = bitcast %class.SkNVRefCnt* %1161 to %class.GrSurfaceProxy*
  %1163 = bitcast %class.SkNVRefCnt* %1161 to void (%class.GrSurfaceProxy*)***
  %1164 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %1163, align 8
  %1165 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1164, i64 1
  %1166 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %1165, align 8
  call void %1166(%class.GrSurfaceProxy* nonnull %1162) #16
  br label %1167

1167:                                             ; preds = %1160, %1155, %1151, %1082
  %1168 = phi i64 [ %1152, %1151 ], [ %1152, %1155 ], [ %1152, %1160 ], [ 0, %1082 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %200) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %189) #16
  %1169 = load %class.SkData*, %class.SkData** %70, align 8
  %1170 = icmp eq %class.SkData* %1169, null
  br i1 %1170, label %1177, label %1171

1171:                                             ; preds = %1167
  %1172 = getelementptr inbounds %class.SkData, %class.SkData* %1169, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1173 = atomicrmw add i32* %1172, i32 -1 acq_rel
  %1174 = icmp eq i32 %1173, 1
  br i1 %1174, label %1175, label %1177

1175:                                             ; preds = %1171
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %1169) #16
  %1176 = bitcast %class.SkData* %1169 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %1176) #16
  br label %1177

1177:                                             ; preds = %1175, %1171, %1167
  %1178 = load i32*, i32** %67, align 8
  %1179 = icmp eq i32* %1178, %68
  br i1 %1179, label %1182, label %1180

1180:                                             ; preds = %1177
  %1181 = bitcast i32* %1178 to i8*
  call void @_Z7sk_freePv(i8* %1181) #16
  br label %1182

1182:                                             ; preds = %1177, %1180
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %64) #16
  %1183 = inttoptr i64 %1168 to %class.GrFragmentProcessor*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63)
  %1184 = icmp eq i64 %1168, 0
  br i1 %1184, label %1225, label %1185

1185:                                             ; preds = %1182
  %1186 = call i8* @_ZN11GrProcessornwEm(i64 88) #16
  %1187 = bitcast %class.SkRRect* %5 to <2 x i64>*
  %1188 = load <2 x i64>, <2 x i64>* %1187, align 4
  %1189 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %5, i64 0, i32 1
  %1190 = bitcast [4 x %struct.SkPoint]* %1189 to <2 x float>*
  %1191 = load <2 x float>, <2 x float>* %1190, align 4
  %1192 = extractelement <2 x float> %1191, i32 0
  %1193 = bitcast i8* %1186 to %class.GrFragmentProcessor*
  %1194 = icmp eq %class.GrFragmentProcessor* %0, null
  br i1 %1194, label %1199, label %1195

1195:                                             ; preds = %1185
  %1196 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 3
  %1197 = load i32, i32* %1196, align 8
  %1198 = and i32 %1197, 1
  br label %1199

1199:                                             ; preds = %1195, %1185
  %1200 = phi i32 [ %1198, %1195 ], [ 1, %1185 ]
  %1201 = bitcast i8* %1186 to i32 (...)***
  %1202 = getelementptr inbounds i8, i8* %1186, i64 8
  %1203 = bitcast i8* %1202 to i32*
  store i32 73, i32* %1203, align 8
  %1204 = getelementptr inbounds i8, i8* %1186, i64 12
  %1205 = bitcast i8* %1204 to i32*
  store i32 0, i32* %1205, align 4
  %1206 = getelementptr inbounds i8, i8* %1186, i64 24
  %1207 = getelementptr inbounds i8, i8* %1186, i64 16
  %1208 = getelementptr inbounds i8, i8* %1186, i64 32
  %1209 = bitcast i8* %1208 to i64*
  %1210 = bitcast i8* %1206 to i8**
  store i8* %1207, i8** %1210, align 8
  store i64 8589934592, i64* %1209, align 8
  %1211 = getelementptr inbounds i8, i8* %1186, i64 40
  %1212 = bitcast i8* %1211 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %1212, align 8
  %1213 = getelementptr inbounds i8, i8* %1186, i64 48
  %1214 = bitcast i8* %1213 to i32*
  store i32 %1200, i32* %1214, align 8
  %1215 = getelementptr inbounds i8, i8* %1186, i64 52
  %1216 = bitcast i8* %1215 to i32*
  store i32 0, i32* %1216, align 4
  %1217 = getelementptr inbounds i8, i8* %1186, i64 56
  store i8 0, i8* %1217, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV17GrRRectBlurEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1201, align 8
  %1218 = getelementptr inbounds i8, i8* %1186, i64 60
  %1219 = bitcast i8* %1218 to float*
  store float %3, float* %1219, align 4
  %1220 = getelementptr inbounds i8, i8* %1186, i64 64
  %1221 = bitcast i8* %1220 to <2 x i64>*
  store <2 x i64> %1188, <2 x i64>* %1221, align 8
  %1222 = getelementptr inbounds i8, i8* %1186, i64 80
  %1223 = bitcast i8* %1222 to float*
  store float %1192, float* %1223, align 8
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %1193, %class.GrFragmentProcessor* %0, i64 1) #16
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %1193, %class.GrFragmentProcessor* nonnull %1183, i64 3) #16
  %1224 = ptrtoint i8* %1186 to i64
  br label %1225

1225:                                             ; preds = %1182, %1199, %48
  %1226 = phi i64 [ %34, %48 ], [ 0, %1199 ], [ %34, %1182 ]
  %1227 = phi i64 [ 0, %48 ], [ %1224, %1199 ], [ 0, %1182 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #16
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %49) #16
  br label %1228

1228:                                             ; preds = %38, %6, %1225
  %1229 = phi i64 [ %1226, %1225 ], [ %34, %38 ], [ %34, %6 ]
  %1230 = phi i64 [ %1227, %1225 ], [ 0, %38 ], [ 0, %6 ]
  %1231 = icmp eq i64 %1229, 0
  br i1 %1231, label %1238, label %1232

1232:                                             ; preds = %1228
  %1233 = inttoptr i64 %1229 to %class.GrFragmentProcessor*
  %1234 = inttoptr i64 %1229 to void (%class.GrFragmentProcessor*)***
  %1235 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %1234, align 8
  %1236 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %1235, i64 1
  %1237 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %1236, align 8
  call void %1237(%class.GrFragmentProcessor* nonnull %1233) #16
  br label %1238

1238:                                             ; preds = %46, %1228, %1232
  %1239 = phi i64 [ %1230, %1228 ], [ %1230, %1232 ], [ %34, %46 ]
  %1240 = inttoptr i64 %1239 to %class.GrFragmentProcessor*
  ret %class.GrFragmentProcessor* %1240
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN14SkGpuBlurUtils25ComputeBlurredRRectParamsERK7SkRRectS2_ffPS0_P7SkISizePfS6_S6_S6_(%class.SkRRect* dereferenceable(52), %class.SkRRect* dereferenceable(52), float, float, %class.SkRRect*, %struct.SkISize*, float*, float*, float*, float*) local_unnamed_addr #2

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGLSLFragmentProcessor* @_ZNK17GrRRectBlurEffect17onMakeProgramImplEv(%class.GrRRectBlurEffect* nocapture readnone) unnamed_addr #3 align 2 {
  %2 = tail call i8* @_Znwm(i64 56) #18
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = bitcast i8* %6 to %class.SkString**
  store %class.SkString* null, %class.SkString** %7, align 8
  store i64 1, i64* %5, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 32
  %9 = bitcast i8* %8 to i64*
  %10 = getelementptr inbounds i8, i8* %2, i64 24
  %11 = bitcast i8* %10 to %"class.std::__1::unique_ptr.199"**
  store %"class.std::__1::unique_ptr.199"* null, %"class.std::__1::unique_ptr.199"** %11, align 8
  store i64 1, i64* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV21GrGLSLRRectBlurEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 40
  %13 = bitcast i8* %12 to i32*
  store i32 -1, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %2, i64 44
  %15 = bitcast i8* %14 to i32*
  store i32 -1, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %2, i64 48
  %17 = bitcast i8* %16 to i32*
  store i32 -1, i32* %17, align 4
  %18 = bitcast i8* %2 to %class.GrGLSLFragmentProcessor*
  ret %class.GrGLSLFragmentProcessor* %18
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK17GrRRectBlurEffect21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrRRectBlurEffect* nocapture, %class.GrShaderCaps* nocapture dereferenceable(144), %class.GrProcessorKeyBuilder* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK17GrRRectBlurEffect9onIsEqualERK19GrFragmentProcessor(%class.GrRRectBlurEffect* nocapture readonly, %class.GrFragmentProcessor* nocapture readonly dereferenceable(64)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 1
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 0, i32 5
  %6 = bitcast [4 x i8]* %5 to float*
  %7 = load float, float* %6, align 4
  %8 = fcmp une float %4, %7
  br i1 %8, label %43, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1
  %11 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 2, i32 0
  %12 = bitcast %class.GrFragmentProcessor* %10 to float*
  %13 = load float, float* %11, align 4
  %14 = load float, float* %12, align 4
  %15 = fcmp une float %13, %14
  br i1 %15, label %43, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds float, float* %11, i64 1
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds float, float* %12, i64 1
  %20 = load float, float* %19, align 4
  %21 = fcmp une float %18, %20
  br i1 %21, label %43, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds float, float* %11, i64 2
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 0, i32 1
  %26 = bitcast i32* %25 to float*
  %27 = load float, float* %26, align 4
  %28 = fcmp une float %24, %27
  br i1 %28, label %43, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds float, float* %11, i64 3
  %31 = load float, float* %30, align 4
  %32 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 0, i32 2
  %33 = bitcast i32* %32 to float*
  %34 = load float, float* %33, align 4
  %35 = fcmp une float %31, %34
  br i1 %35, label %43, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 3
  %38 = load float, float* %37, align 8
  %39 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 1
  %40 = bitcast %class.SkSTArray* %39 to float*
  %41 = load float, float* %40, align 8
  %42 = fcmp oeq float %38, %41
  br label %43

43:                                               ; preds = %29, %22, %16, %9, %36, %2
  %44 = phi i1 [ false, %2 ], [ %42, %36 ], [ false, %9 ], [ false, %16 ], [ false, %22 ], [ false, %29 ]
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrRRectBlurEffectC2ERKS_(%class.GrRRectBlurEffect*, %class.GrRRectBlurEffect* dereferenceable(88)) unnamed_addr #3 align 2 {
  %3 = bitcast %class.GrRRectBlurEffect* %0 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrRRectBlurEffect* %1 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %1, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 0, i32 0, i32 1
  store i32 73, i32* %9, align 8
  %10 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 0, i32 1, i32 1
  %12 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %13 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %14 = bitcast %class.SkTArray* %11 to i8**
  store i8* %12, i8** %14, align 8
  store i64 8589934592, i64* %13, align 8
  %15 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %15, align 8
  %16 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 0, i32 3
  store i32 %7, i32* %16, align 8
  %17 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 0, i32 4, i32 0
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 0, i32 4, i32 1
  store i8 0, i8* %18, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV17GrRRectBlurEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %19 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 1
  %20 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %1, i64 0, i32 1
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = bitcast float* %19 to i32*
  store i32 %22, i32* %23, align 4
  %24 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 2
  %25 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %1, i64 0, i32 2
  %26 = bitcast %struct.SkRect* %24 to i8*
  %27 = bitcast %struct.SkRect* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 3
  %29 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %1, i64 0, i32 3
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 8
  %32 = bitcast float* %28 to i32*
  store i32 %31, i32* %32, align 8
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #16
  ret void
}

declare void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor*, %class.GrFragmentProcessor* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK17GrRRectBlurEffect5cloneEv(%class.GrRRectBlurEffect*) unnamed_addr #3 align 2 {
  %2 = tail call i8* @_ZN11GrProcessornwEm(i64 88) #16
  %3 = bitcast i8* %2 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrRRectBlurEffect* %0 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = bitcast i8* %2 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 73, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 24
  %14 = getelementptr inbounds i8, i8* %2, i64 16
  %15 = getelementptr inbounds i8, i8* %2, i64 32
  %16 = bitcast i8* %15 to i64*
  %17 = bitcast i8* %13 to i8**
  store i8* %14, i8** %17, align 8
  store i64 8589934592, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %2, i64 40
  %19 = bitcast i8* %18 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %19, align 8
  %20 = getelementptr inbounds i8, i8* %2, i64 48
  %21 = bitcast i8* %20 to i32*
  store i32 %7, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %2, i64 52
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %2, i64 56
  store i8 0, i8* %24, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV17GrRRectBlurEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %25 = getelementptr inbounds i8, i8* %2, i64 60
  %26 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 1
  %27 = bitcast float* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = bitcast i8* %25 to i32*
  store i32 %28, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %2, i64 64
  %31 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 2
  %32 = bitcast %struct.SkRect* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %32, i64 16, i1 false) #16
  %33 = getelementptr inbounds i8, i8* %2, i64 80
  %34 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 3
  %35 = bitcast float* %34 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = bitcast i8* %33 to i32*
  store i32 %36, i32* %37, align 8
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #16
  ret %class.GrFragmentProcessor* %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD2Ev(%class.GrFragmentProcessor*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 8
  %4 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %18, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %18, align 8
  %20 = icmp eq %class.GrFragmentProcessor* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %class.GrFragmentProcessor* %19 to void (%class.GrFragmentProcessor*)***
  %23 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, i64 1
  %25 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %24, align 8
  tail call void %25(%class.GrFragmentProcessor* nonnull %19) #16
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #16
  br label %35

35:                                               ; preds = %11, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17GrRRectBlurEffectD0Ev(%class.GrRRectBlurEffect*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 0, i32 1, i32 1
  %4 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %17, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrFragmentProcessor* %18 to void (%class.GrFragmentProcessor*)***
  %22 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrFragmentProcessor* nonnull %18) #16
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #16
  br label %34

34:                                               ; preds = %10, %31
  %35 = bitcast %class.GrRRectBlurEffect* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %35) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK17GrRRectBlurEffect4nameEv(%class.GrRRectBlurEffect*) unnamed_addr #3 comdat align 2 {
  ret i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor*, %struct.SkRGBA4f* dereferenceable(16)) unnamed_addr #3 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.4, i64 0, i64 0), i32 397, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.5, i64 0, i64 0)) #19
  unreachable
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN17GrThreadSafeCache14CreateLazyViewEP15GrDirectContext11GrColorType7SkISize15GrSurfaceOrigin12SkBackingFit(%"class.std::__1::tuple"* sret, %class.GrDirectContext*, i32, i64, i32, i32) local_unnamed_addr #2

declare void @_ZN17GrThreadSafeCache9findOrAddERK11GrUniqueKeyRK18GrSurfaceProxyView(%class.GrSurfaceProxyView* sret, %class.GrThreadSafeCache*, %class.GrUniqueKey* dereferenceable(56), %class.GrSurfaceProxyView* dereferenceable(16)) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i32, i32) local_unnamed_addr #2

declare void @_ZN17GrThreadSafeCache6removeERK11GrUniqueKey(%class.GrThreadSafeCache*, %class.GrUniqueKey* dereferenceable(56)) local_unnamed_addr #2

declare void @_ZN17GrThreadSafeCache4findERK11GrUniqueKey(%class.GrSurfaceProxyView* sret, %class.GrThreadSafeCache*, %class.GrUniqueKey* dereferenceable(56)) local_unnamed_addr #2

declare void @_ZN17GrThreadSafeCache3addERK11GrUniqueKeyRK18GrSurfaceProxyView(%class.GrSurfaceProxyView* sret, %class.GrThreadSafeCache*, %class.GrUniqueKey* dereferenceable(56), %class.GrSurfaceProxyView* dereferenceable(16)) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #8

declare i32 @_ZN11GrUniqueKey14GenerateDomainEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

declare i32 @_Z17GrResourceKeyHashPKjm(i32*, i64) local_unnamed_addr #2

declare %class.GrThreadSafeCache* @_ZN18GrRecordingContext15threadSafeCacheEv(%class.GrRecordingContext*) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #16
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #16
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #16
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #16
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps*) unnamed_addr #2

declare %class.GrSurfaceDrawContext* @_ZN20GrSurfaceDrawContext16MakeWithFallbackEP18GrRecordingContext11GrColorType5sk_spI12SkColorSpaceE12SkBackingFit7SkISizeRK14SkSurfacePropsi11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext*, i32, %class.sk_sp.283*, i32, i64, %class.SkSurfaceProps* dereferenceable(8), i32, i1 zeroext, i1 zeroext, i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN20GrSurfaceDrawContext9drawRRectEPK6GrClipO7GrPaint4GrAARK8SkMatrixRK7SkRRectRK7GrStyle(%class.GrSurfaceDrawContext*, %class.GrClip*, %class.GrPaint* dereferenceable(48), i1 zeroext, %class.SkMatrix* dereferenceable(40), %class.SkRRect* dereferenceable(52), %class.GrStyle* dereferenceable(64)) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

declare %class.GrSurfaceDrawContext* @_ZN14SkGpuBlurUtils12GaussianBlurEP18GrRecordingContext18GrSurfaceProxyView11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE7SkIRectS8_ff10SkTileMode12SkBackingFit(%class.GrRecordingContext*, %class.GrSurfaceProxyView*, i32, i32, %class.sk_sp.283*, %struct.SkIRect* byval(%struct.SkIRect) align 8, %struct.SkIRect* byval(%struct.SkIRect) align 8, float, float, i32, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZN20GrSurfaceFillContext13internalClearEPK7SkIRectNSt3__15arrayIfLm4EEEb(%class.GrSurfaceFillContext*, %struct.SkIRect*, <2 x float>, <2 x float>, i1 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7GrStyleD2Ev(%class.GrStyle*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 2, i32 2, i32 1
  %3 = load float*, float** %2, align 8
  %4 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 2, i32 2, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds float, float* %3, i64 %6
  br label %8

8:                                                ; preds = %8, %1
  %9 = phi float* [ %7, %1 ], [ %11, %8 ]
  %10 = icmp ugt float* %9, %3
  %11 = getelementptr inbounds float, float* %9, i64 -1
  br i1 %10, label %8, label %12

12:                                               ; preds = %8
  %13 = bitcast float* %3 to i8*
  %14 = icmp eq i32 %5, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %12
  %16 = icmp sgt i32 %5, 4
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @_Z7sk_freePv(i8* %13) #16
  br label %18

18:                                               ; preds = %17, %15
  store float* null, float** %2, align 8
  store i32 0, i32* %4, align 8
  br label %19

19:                                               ; preds = %12, %18
  %20 = getelementptr inbounds %class.GrStyle, %class.GrStyle* %0, i64 0, i32 1, i32 0
  %21 = load %class.SkPathEffect*, %class.SkPathEffect** %20, align 8
  %22 = icmp eq %class.SkPathEffect* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = bitcast %class.SkPathEffect* %21 to %class.SkRefCntBase*
  %29 = bitcast %class.SkPathEffect* %21 to void (%class.SkRefCntBase*)***
  %30 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, i64 2
  %32 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, align 8
  tail call void %32(%class.SkRefCntBase* nonnull %28) #16
  br label %33

33:                                               ; preds = %19, %23, %27
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #8

declare void @_ZN11SkStrokeRecC1ENS_9InitStyleE(%class.SkStrokeRec*, i32) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #11

declare void @_ZN14SkGpuBlurUtils23Compute1DGaussianKernelEPffi(float*, float, i32) local_unnamed_addr #2

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare i32 @_ZN14SkGpuBlurUtils19CreateIntegralTableEfP8SkBitmap(float, %class.SkBitmap*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #12

declare void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap*) local_unnamed_addr #2

declare void @_Z29GrMakeUncachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped12SkBackingFit10SkBudgeted(%"class.std::__1::tuple.337"* sret, %class.GrRecordingContext*, %class.SkBitmap* dereferenceable(56), i1 zeroext, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #13

declare zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #2

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #14

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #15

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #13

declare void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD0Ev(%class.GrFragmentProcessor*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #15

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21GrGLSLRRectBlurEffectD0Ev(%class.GrGLSLRRectBlurEffect*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLRRectBlurEffect, %class.GrGLSLRRectBlurEffect* %0, i64 0, i32 0
  tail call void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor* %2) #16
  %3 = bitcast %class.GrGLSLRRectBlurEffect* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21GrGLSLRRectBlurEffect8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE(%class.GrGLSLRRectBlurEffect*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56)) unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %class.SkString, align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %class.SkString, align 8
  %8 = alloca %class.SkString, align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 0
  %11 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %10, align 8
  %12 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 3
  %13 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %12, align 8
  %14 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 1
  %15 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %16 = bitcast %class.GrGLSLUniformHandler* %15 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %17 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %16, align 8
  %18 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %17, i64 13
  %19 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %18, align 8
  %20 = tail call i32 %19(%class.GrGLSLUniformHandler* %15, %class.GrFragmentProcessor* %13, i32 16, i32 28, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #16
  %21 = getelementptr inbounds %class.GrGLSLRRectBlurEffect, %class.GrGLSLRRectBlurEffect* %0, i64 0, i32 3, i32 0
  store i32 %20, i32* %21, align 8
  %22 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %23 = bitcast %class.GrGLSLUniformHandler* %22 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %24 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %23, align 8
  %25 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %24, i64 13
  %26 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %25, align 8
  %27 = tail call i32 %26(%class.GrGLSLUniformHandler* %22, %class.GrFragmentProcessor* %13, i32 16, i32 24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #16
  %28 = getelementptr inbounds %class.GrGLSLRRectBlurEffect, %class.GrGLSLRRectBlurEffect* %0, i64 0, i32 1, i32 0
  store i32 %27, i32* %28, align 8
  %29 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %30 = bitcast %class.GrGLSLUniformHandler* %29 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %31 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %30, align 8
  %32 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %31, i64 13
  %33 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %32, align 8
  %34 = tail call i32 %33(%class.GrGLSLUniformHandler* %29, %class.GrFragmentProcessor* %13, i32 16, i32 28, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #16
  %35 = getelementptr inbounds %class.GrGLSLRRectBlurEffect, %class.GrGLSLRRectBlurEffect* %0, i64 0, i32 2, i32 0
  store i32 %34, i32* %35, align 4
  %36 = bitcast %class.GrGLSLFPFragmentBuilder* %11 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr i8, i8* %37, i64 -24
  %39 = bitcast i8* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %class.GrGLSLFPFragmentBuilder* %11 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 %40
  %43 = bitcast i8* %42 to %class.GrGLSLShaderBuilder*
  %44 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %45 = load i32, i32* %28, align 8
  %46 = bitcast %class.GrGLSLUniformHandler* %44 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %47 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %46, align 8
  %48 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %47, i64 3
  %49 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %48, align 8
  %50 = tail call i8* %49(%class.GrGLSLUniformHandler* %44, i32 %45) #16
  %51 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %52 = load i32, i32* %28, align 8
  %53 = bitcast %class.GrGLSLUniformHandler* %51 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %54 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %53, align 8
  %55 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %54, i64 3
  %56 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %55, align 8
  %57 = tail call i8* %56(%class.GrGLSLUniformHandler* %51, i32 %52) #16
  %58 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %59 = load i32, i32* %28, align 8
  %60 = bitcast %class.GrGLSLUniformHandler* %58 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %61 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %60, align 8
  %62 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %61, i64 3
  %63 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %62, align 8
  %64 = tail call i8* %63(%class.GrGLSLUniformHandler* %58, i32 %59) #16
  %65 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %66 = load i32, i32* %35, align 4
  %67 = bitcast %class.GrGLSLUniformHandler* %65 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %68 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %67, align 8
  %69 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %68, i64 3
  %70 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %69, align 8
  %71 = tail call i8* %70(%class.GrGLSLUniformHandler* %65, i32 %66) #16
  %72 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %73 = load i32, i32* %21, align 8
  %74 = bitcast %class.GrGLSLUniformHandler* %72 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %75 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %74, align 8
  %76 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %75, i64 3
  %77 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %76, align 8
  %78 = tail call i8* %77(%class.GrGLSLUniformHandler* %72, i32 %73) #16
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %43, i8* getelementptr inbounds ([619 x i8], [619 x i8]* @.str.9, i64 0, i64 0), i8* %50, i8* %57, i8* %64, i8* %71, i8* %78)
  %79 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #16
  %80 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %80, align 8
  %81 = getelementptr inbounds %class.GrGLSLRRectBlurEffect, %class.GrGLSLRRectBlurEffect* %0, i64 0, i32 0
  %82 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  store i8 0, i8* %83, align 1
  %84 = bitcast %"class.SkSL::String"* %6 to i8*
  store i8 0, i8* %84, align 8
  %85 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %85, i8* nonnull align 8 %84, i64 24, i1 false) #16, !noalias !29
  call void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* nonnull sret %5, %class.GrGLSLFragmentProcessor* %81, i32 0, i8* null, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %1, %"class.SkSL::String"* nonnull %4) #16
  %86 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1, !noalias !29
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %2
  %91 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8, !noalias !29
  call void @_ZdlPv(i8* %92) #18
  br label %93

93:                                               ; preds = %90, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85)
  %94 = bitcast %class.SkString* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #16
  %95 = getelementptr inbounds %class.SkString, %class.SkString* %7, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %95, align 8
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0)) #16
  %96 = bitcast %class.SkString* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #16
  %97 = getelementptr inbounds %class.SkString, %class.SkString* %8, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %97, align 8
  %98 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %95, align 8
  %99 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %98, i64 0, i32 2
  %100 = call i64 @strlen(i8* %99) #16
  %101 = icmp ugt i64 %100, -17
  br i1 %101, label %102, label %104

102:                                              ; preds = %93
  %103 = bitcast %"class.SkSL::String"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %103) #19
  unreachable

104:                                              ; preds = %93
  %105 = icmp ult i64 %100, 23
  br i1 %105, label %115, label %106

106:                                              ; preds = %104
  %107 = add nuw i64 %100, 16
  %108 = and i64 %107, -16
  %109 = call i8* @_Znwm(i64 %108) #18
  %110 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %109, i8** %110, align 8
  %111 = or i64 %108, -9223372036854775808
  %112 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %100, i64* %113, align 8
  %114 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %121

115:                                              ; preds = %104
  %116 = trunc i64 %100 to i8
  %117 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  store i8 %116, i8* %118, align 1
  %119 = bitcast %"class.SkSL::String"* %9 to i8*
  %120 = icmp eq i64 %100, 0
  br i1 %120, label %124, label %121

121:                                              ; preds = %115, %106
  %122 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %117, %115 ], [ %114, %106 ]
  %123 = phi i8* [ %119, %115 ], [ %109, %106 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %123, i8* align 1 %99, i64 %100, i1 false) #16
  br label %124

124:                                              ; preds = %115, %121
  %125 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %117, %115 ], [ %122, %121 ]
  %126 = phi i8* [ %119, %115 ], [ %123, %121 ]
  %127 = getelementptr inbounds i8, i8* %126, i64 %100
  store i8 0, i8* %127, align 1
  %128 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128)
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %130 = load i8, i8* %129, align 1, !noalias !32
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %134, label %132

132:                                              ; preds = %124
  %133 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %128, i8* nonnull align 8 %133, i64 24, i1 false) #16, !noalias !32
  br label %140

134:                                              ; preds = %124
  %135 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0
  %136 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8, !noalias !32
  %138 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %139 = load i64, i64* %138, align 8, !noalias !32
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %135, i8* %137, i64 %139) #16
  br label %140

140:                                              ; preds = %134, %132
  call void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* nonnull sret %8, %class.GrGLSLFragmentProcessor* %81, i32 1, i8* null, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %1, %"class.SkSL::String"* nonnull %3) #16
  %141 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %141, i64 0, i32 1, i32 0
  %143 = load i8, i8* %142, align 1, !noalias !32
  %144 = icmp slt i8 %143, 0
  br i1 %144, label %145, label %148

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8, !noalias !32
  call void @_ZdlPv(i8* %147) #18
  br label %148

148:                                              ; preds = %140, %145
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128)
  %149 = load i8, i8* %129, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %148
  %152 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  call void @_ZdlPv(i8* %153) #18
  br label %154

154:                                              ; preds = %148, %151
  %155 = load i8*, i8** %36, align 8
  %156 = getelementptr i8, i8* %155, i64 -24
  %157 = bitcast i8* %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = getelementptr inbounds i8, i8* %41, i64 %158
  %160 = bitcast i8* %159 to %class.GrGLSLShaderBuilder*
  %161 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %80, align 8
  %162 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %161, i64 0, i32 2
  %163 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %97, align 8
  %164 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %163, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %160, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0), i8* %162, i8* %164)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #16
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #16
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21GrGLSLRRectBlurEffect9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLRRectBlurEffect*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #3 comdat align 2 {
  %4 = bitcast %class.GrFragmentProcessor* %2 to %class.GrRRectBlurEffect*
  %5 = getelementptr inbounds %class.GrGLSLRRectBlurEffect, %class.GrGLSLRRectBlurEffect* %0, i64 0, i32 3, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 1
  %8 = bitcast %class.SkSTArray* %7 to float*
  %9 = load float, float* %8, align 8
  %10 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float)***
  %11 = load void (%class.GrGLSLProgramDataManager*, i32, float)**, void (%class.GrGLSLProgramDataManager*, i32, float)*** %10, align 8
  %12 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %11, i64 4
  %13 = load void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %12, align 8
  tail call void %13(%class.GrGLSLProgramDataManager* %1, i32 %6, float %9) #16
  %14 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 0, i32 5
  %15 = bitcast [4 x i8]* %14 to float*
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1
  %18 = bitcast %class.GrFragmentProcessor* %17 to float*
  %19 = load float, float* %18, align 8
  %20 = getelementptr inbounds %class.GrRRectBlurEffect, %class.GrRRectBlurEffect* %4, i64 0, i32 2, i32 1
  %21 = load float, float* %20, align 4
  %22 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 0, i32 1
  %23 = bitcast i32* %22 to float*
  %24 = load float, float* %23, align 8
  %25 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 0, i32 2
  %26 = bitcast i32* %25 to float*
  %27 = load float, float* %26, align 4
  %28 = fadd float %16, 0xBFC5555560000000
  %29 = tail call float @llvm.ceil.f32(float %28)
  %30 = fmul float %29, 3.000000e+00
  %31 = getelementptr inbounds %class.GrGLSLRRectBlurEffect, %class.GrGLSLRRectBlurEffect* %0, i64 0, i32 2, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = load void (%class.GrGLSLProgramDataManager*, i32, float)**, void (%class.GrGLSLProgramDataManager*, i32, float)*** %10, align 8
  %34 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %33, i64 4
  %35 = load void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %34, align 8
  tail call void %35(%class.GrGLSLProgramDataManager* %1, i32 %32, float %30) #16
  %36 = fsub float %19, %30
  %37 = fsub float %21, %30
  %38 = fadd float %24, %30
  %39 = fadd float %30, %27
  %40 = getelementptr inbounds %class.GrGLSLRRectBlurEffect, %class.GrGLSLRRectBlurEffect* %0, i64 0, i32 1, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)***
  %43 = load void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)**, void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)*** %42, align 8
  %44 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)** %43, i64 16
  %45 = load void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)** %44, align 8
  tail call void %45(%class.GrGLSLProgramDataManager* %1, i32 %41, float %36, float %37, float %38, float %39) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV23GrGLSLFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2
  %4 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.202, %class.SkTArray.202* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr.199"*, %"class.std::__1::unique_ptr.199"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %17, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrGLSLFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrGLSLFragmentProcessor* %18 to void (%class.GrGLSLFragmentProcessor*)***
  %22 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrGLSLFragmentProcessor* nonnull %18) #16
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.202* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #16
  br label %34

34:                                               ; preds = %10, %31
  %35 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1
  %36 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 4294967294
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %class.SkTArray.24, %class.SkTArray.24* %35, i64 0, i32 0
  br label %46

42:                                               ; preds = %46, %34
  %43 = phi i64 [ %37, %34 ], [ %51, %46 ]
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %58, label %55

46:                                               ; preds = %46, %40
  %47 = phi i64 [ 0, %40 ], [ %50, %46 ]
  %48 = load %class.SkString*, %class.SkString** %41, align 8
  %49 = getelementptr inbounds %class.SkString, %class.SkString* %48, i64 %47
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %49) #16
  %50 = add nuw nsw i64 %47, 1
  %51 = load i64, i64* %36, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = icmp ult i64 %50, %53
  br i1 %54, label %46, label %42

55:                                               ; preds = %42
  %56 = bitcast %class.SkTArray.24* %35 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_Z7sk_freePv(i8* %57) #16
  br label %58

58:                                               ; preds = %42, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD0Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #16
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret void
}

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #16

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #16

declare void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* sret, %class.GrGLSLFragmentProcessor*, i32, i8*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56), %"class.SkSL::String"*) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #15

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #17

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nofree nounwind }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN8SkMatrix5ScaleEff: argument 0"}
!5 = distinct !{!5, !"_ZN8SkMatrix5ScaleEff"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN16GrSurfaceContext15readSurfaceViewEv: argument 0"}
!8 = distinct !{!8, !"_ZN16GrSurfaceContext15readSurfaceViewEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN16GrSurfaceContext15readSurfaceViewEv: argument 0"}
!11 = distinct !{!11, !"_ZN16GrSurfaceContext15readSurfaceViewEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN16GrSurfaceContext15readSurfaceViewEv: argument 0"}
!14 = distinct !{!14, !"_ZN16GrSurfaceContext15readSurfaceViewEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK18GrSurfaceProxyView17asTextureProxyRefEv: argument 0"}
!17 = distinct !{!17, !"_ZNK18GrSurfaceProxyView17asTextureProxyRefEv"}
!18 = !{!19, !16}
!19 = distinct !{!19, !20, !"_Z9sk_ref_spI14GrTextureProxyE5sk_spIT_EPS2_: argument 0"}
!20 = distinct !{!20, !"_Z9sk_ref_spI14GrTextureProxyE5sk_spIT_EPS2_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZL18create_mask_on_cpuP18GrRecordingContextRK7SkRRectRK7SkISizef: argument 0"}
!23 = distinct !{!23, !"_ZL18create_mask_on_cpuP18GrRecordingContextRK7SkRRectRK7SkISizef"}
!24 = !{!25, !27}
!25 = distinct !{!25, !26, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!26 = distinct !{!26, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!27 = distinct !{!27, !28, !"_ZN11SkImageInfo6MakeA8Eii: argument 0"}
!28 = distinct !{!28, !"_ZN11SkImageInfo6MakeA8Eii"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE: argument 0"}
!31 = distinct !{!31, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE: argument 0"}
!34 = distinct !{!34, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE"}
