; ModuleID = '../../third_party/pdfium/third_party/libtiff/tif_lzw.c'
source_filename = "../../third_party/pdfium/third_party/libtiff/tif_lzw.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.tiff = type { i8*, i32, i32, i32, i64, i64, i64*, i16, i16, %struct.TIFFDirectory, %struct.TIFFDirectory, %union.anon.0, i16, i32, i16, i32, i64, i64, i16, i64, i32, i32, i64, i32, i32 (%struct.tiff*)*, i32 (%struct.tiff*)*, i32 (%struct.tiff*, i16)*, i32 (%struct.tiff*)*, i32, i32 (%struct.tiff*, i16)*, i32 (%struct.tiff*)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, void (%struct.tiff*)*, i32 (%struct.tiff*, i32)*, void (%struct.tiff*)*, i32 (%struct.tiff*, i32)*, void (%struct.tiff*, i32*, i32*)*, i8*, i64, i64, i8*, i64, i64, i64, i8*, i64, i8*, i64, i32 (i8*, i8**, i64*)*, void (i8*, i8*, i64)*, i8*, i64 (i8*, i8*, i64)*, i64 (i8*, i8*, i64)*, i64 (i8*, i64, i32)*, i32 (i8*)*, i64 (i8*)*, void (%struct.tiff*, i8*, i64)*, %struct._TIFFField**, i64, %struct._TIFFField*, %struct.TIFFTagMethods, %struct.client_info*, %struct._TIFFFieldArray*, i64 }
%struct.TIFFDirectory = type { [4 x i64], i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, double*, double*, float, float, i16, i16, float, float, [2 x i16], [3 x i16*], [2 x i16], i16, i16*, i32, i32, i64*, i64*, i32, %struct.TIFFDirEntry, %struct.TIFFDirEntry, i16, i64*, [2 x i16], i16, [3 x i16*], float*, i32, i8*, i32, %struct.TIFFTagValue*, i8 }
%struct.TIFFDirEntry = type { i16, i16, i64, %union.anon, i8 }
%union.anon = type { i64 }
%struct.TIFFTagValue = type { %struct._TIFFField*, i32, i8* }
%union.anon.0 = type { %struct.TIFFHeaderBig }
%struct.TIFFHeaderBig = type { i16, i16, i16, i16, i64 }
%struct._TIFFField = type { i32, i16, i16, i32, i32, i32, i32, i16, i8, i8, i8*, %struct._TIFFFieldArray* }
%struct.TIFFTagMethods = type { i32 (%struct.tiff*, i32, %struct.__va_list_tag*)*, i32 (%struct.tiff*, i32, %struct.__va_list_tag*)*, void (%struct.tiff*, %struct._IO_FILE*, i64)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.client_info = type { %struct.client_info*, i8*, i8* }
%struct._TIFFFieldArray = type { i32, i32, i32, %struct._TIFFField* }
%struct.code_ent = type { %struct.code_ent*, i16, i8, i8 }
%struct.LZWCodecState = type { %struct.LZWBaseState, i64, i64, i64, i64, i32 (%struct.tiff*, i8*, i64, i16)*, %struct.code_ent*, %struct.code_ent*, %struct.code_ent*, %struct.code_ent*, %struct.code_ent*, i32, i64, i64, i64, i64, i8*, %struct.hash_t* }
%struct.LZWBaseState = type { %struct.TIFFPredictorState, i16, i16, i16, i64, i64, i32 }
%struct.TIFFPredictorState = type { i32, i64, i64, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64)*, i32 (%struct.tiff*, i32, %struct.__va_list_tag*)*, i32 (%struct.tiff*, i32, %struct.__va_list_tag*)*, void (%struct.tiff*, %struct._IO_FILE*, i64)*, i32 (%struct.tiff*)*, i32 (%struct.tiff*)* }
%struct.hash_t = type { i64, i16 }

@TIFFInitLZW.module = internal constant [12 x i8] c"TIFFInitLZW\00", align 1
@.str = private unnamed_addr constant [29 x i8] c"No space for LZW state block\00", align 1
@LZWSetupDecode.module = internal constant [15 x i8] c"LZWSetupDecode\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"No space for LZW code table\00", align 1
@LZWPreDecode.module = internal constant [13 x i8] c"LZWPreDecode\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"Old-style LZW codes, convert file\00", align 1
@LZWDecodeCompat.module = internal constant [16 x i8] c"LZWDecodeCompat\00", align 16
@.str.3 = private unnamed_addr constant [49 x i8] c"LZWDecode: Strip %d not terminated with EOI code\00", align 1
@.str.4 = private unnamed_addr constant [46 x i8] c"LZWDecode: Corrupted LZW table at scanline %d\00", align 1
@.str.5 = private unnamed_addr constant [35 x i8] c"Corrupted LZW table at scanline %d\00", align 1
@.str.6 = private unnamed_addr constant [71 x i8] c"Wrong length of decoded string: data probably corrupted at scanline %d\00", align 1
@.str.7 = private unnamed_addr constant [50 x i8] c"Not enough data at scanline %d (short %llu bytes)\00", align 1
@LZWDecode.module = internal constant [10 x i8] c"LZWDecode\00", align 1
@.str.8 = private unnamed_addr constant [52 x i8] c"Bogus encoding, loop in the code table; scanline %d\00", align 1
@LZWSetupEncode.module = internal constant [15 x i8] c"LZWSetupEncode\00", align 1
@.str.9 = private unnamed_addr constant [28 x i8] c"No space for LZW hash table\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @TIFFInitLZW(%struct.tiff*, i32) local_unnamed_addr #0 {
  %3 = tail call i8* @_TIFFmalloc(i64 296) #4
  %4 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  store i8* %3, i8** %4, align 8
  %5 = icmp eq i8* %3, null
  br i1 %5, label %33, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %3, i64 232
  %8 = bitcast i8* %7 to %struct.code_ent**
  store %struct.code_ent* null, %struct.code_ent** %8, align 8
  %9 = bitcast i8** %4 to %struct.LZWCodecState**
  %10 = load %struct.LZWCodecState*, %struct.LZWCodecState** %9, align 8
  %11 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %10, i64 0, i32 5
  store i32 (%struct.tiff*, i8*, i64, i16)* null, i32 (%struct.tiff*, i8*, i64, i16)** %11, align 8
  %12 = load %struct.LZWCodecState*, %struct.LZWCodecState** %9, align 8
  %13 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %12, i64 0, i32 17
  store %struct.hash_t* null, %struct.hash_t** %13, align 8
  %14 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = bitcast i8** %4 to %struct.LZWBaseState**
  %17 = load %struct.LZWBaseState*, %struct.LZWBaseState** %16, align 8
  %18 = getelementptr inbounds %struct.LZWBaseState, %struct.LZWBaseState* %17, i64 0, i32 6
  store i32 %15, i32* %18, align 8
  %19 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 24
  %20 = bitcast i32 (%struct.tiff*)** %19 to <2 x i32 (%struct.tiff*)*>*
  store <2 x i32 (%struct.tiff*)*> <i32 (%struct.tiff*)* @LZWFixupTags, i32 (%struct.tiff*)* @LZWSetupDecode>, <2 x i32 (%struct.tiff*)*>* %20, align 8
  %21 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 26
  store i32 (%struct.tiff*, i16)* @LZWPreDecode, i32 (%struct.tiff*, i16)** %21, align 8
  %22 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 31
  %23 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 33
  %24 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 35
  %25 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 27
  store i32 (%struct.tiff*)* @LZWSetupEncode, i32 (%struct.tiff*)** %25, align 8
  %26 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 29
  store i32 (%struct.tiff*, i16)* @LZWPreEncode, i32 (%struct.tiff*, i16)** %26, align 8
  %27 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 30
  store i32 (%struct.tiff*)* @LZWPostEncode, i32 (%struct.tiff*)** %27, align 8
  %28 = bitcast i32 (%struct.tiff*, i8*, i64, i16)** %22 to <2 x i32 (%struct.tiff*, i8*, i64, i16)*>*
  store <2 x i32 (%struct.tiff*, i8*, i64, i16)*> <i32 (%struct.tiff*, i8*, i64, i16)* @LZWDecode, i32 (%struct.tiff*, i8*, i64, i16)* @LZWEncode>, <2 x i32 (%struct.tiff*, i8*, i64, i16)*>* %28, align 8
  %29 = bitcast i32 (%struct.tiff*, i8*, i64, i16)** %23 to <2 x i32 (%struct.tiff*, i8*, i64, i16)*>*
  store <2 x i32 (%struct.tiff*, i8*, i64, i16)*> <i32 (%struct.tiff*, i8*, i64, i16)* @LZWDecode, i32 (%struct.tiff*, i8*, i64, i16)* @LZWEncode>, <2 x i32 (%struct.tiff*, i8*, i64, i16)*>* %29, align 8
  %30 = bitcast i32 (%struct.tiff*, i8*, i64, i16)** %24 to <2 x i32 (%struct.tiff*, i8*, i64, i16)*>*
  store <2 x i32 (%struct.tiff*, i8*, i64, i16)*> <i32 (%struct.tiff*, i8*, i64, i16)* @LZWDecode, i32 (%struct.tiff*, i8*, i64, i16)* @LZWEncode>, <2 x i32 (%struct.tiff*, i8*, i64, i16)*>* %30, align 8
  %31 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 39
  store void (%struct.tiff*)* @LZWCleanup, void (%struct.tiff*)** %31, align 8
  %32 = tail call i32 @TIFFPredictorInit(%struct.tiff* %0) #4
  br label %36

33:                                               ; preds = %2
  %34 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %35 = load i8*, i8** %34, align 8
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %35, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @TIFFInitLZW.module, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #4
  br label %36

36:                                               ; preds = %33, %6
  %37 = phi i32 [ 0, %33 ], [ 1, %6 ]
  ret i32 %37
}

declare i8* @_TIFFmalloc(i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @LZWFixupTags(%struct.tiff* nocapture readnone) #2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @LZWSetupDecode(%struct.tiff*) #0 {
  %2 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %3 = bitcast i8** %2 to %struct.LZWCodecState**
  %4 = load %struct.LZWCodecState*, %struct.LZWCodecState** %3, align 8
  %5 = icmp eq %struct.LZWCodecState* %4, null
  br i1 %5, label %6, label %19

6:                                                ; preds = %1
  %7 = tail call i8* @_TIFFmalloc(i64 296) #4
  store i8* %7, i8** %2, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %11 = load i8*, i8** %10, align 8
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %11, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @LZWSetupDecode.module, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #4
  br label %54

12:                                               ; preds = %6
  %13 = getelementptr inbounds i8, i8* %7, i64 232
  %14 = bitcast i8* %13 to %struct.code_ent**
  store %struct.code_ent* null, %struct.code_ent** %14, align 8
  %15 = load %struct.LZWCodecState*, %struct.LZWCodecState** %3, align 8
  %16 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %15, i64 0, i32 5
  store i32 (%struct.tiff*, i8*, i64, i16)* null, i32 (%struct.tiff*, i8*, i64, i16)** %16, align 8
  %17 = tail call i32 @TIFFPredictorInit(%struct.tiff* %0) #4
  %18 = load %struct.LZWCodecState*, %struct.LZWCodecState** %3, align 8
  br label %19

19:                                               ; preds = %12, %1
  %20 = phi %struct.LZWCodecState* [ %18, %12 ], [ %4, %1 ]
  %21 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %20, i64 0, i32 10
  %22 = load %struct.code_ent*, %struct.code_ent** %21, align 8
  %23 = icmp eq %struct.code_ent* %22, null
  br i1 %23, label %24, label %54

24:                                               ; preds = %19
  %25 = tail call i8* @_TIFFmalloc(i64 81904) #4
  %26 = bitcast %struct.code_ent** %21 to i8**
  store i8* %25, i8** %26, align 8
  %27 = icmp eq i8* %25, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast i8* %25 to %struct.code_ent*
  br label %33

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %32 = load i8*, i8** %31, align 8
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @LZWSetupDecode.module, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0)) #4
  br label %54

33:                                               ; preds = %46, %28
  %34 = phi %struct.code_ent* [ %29, %28 ], [ %49, %46 ]
  %35 = phi i64 [ 255, %28 ], [ %48, %46 ]
  %36 = phi i32 [ 255, %28 ], [ %47, %46 ]
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %34, i64 %35, i32 2
  store i8 %37, i8* %38, align 2
  %39 = load %struct.code_ent*, %struct.code_ent** %21, align 8
  %40 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %39, i64 %35, i32 3
  store i8 %37, i8* %40, align 1
  %41 = load %struct.code_ent*, %struct.code_ent** %21, align 8
  %42 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %41, i64 %35, i32 1
  store i16 1, i16* %42, align 8
  %43 = load %struct.code_ent*, %struct.code_ent** %21, align 8
  %44 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %43, i64 %35, i32 0
  store %struct.code_ent* null, %struct.code_ent** %44, align 8
  %45 = icmp eq i64 %35, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %33
  %47 = add nsw i32 %36, -1
  %48 = add nsw i64 %35, -1
  %49 = load %struct.code_ent*, %struct.code_ent** %21, align 8
  br label %33

50:                                               ; preds = %33
  %51 = load %struct.code_ent*, %struct.code_ent** %21, align 8
  %52 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %51, i64 256
  %53 = bitcast %struct.code_ent* %52 to i8*
  tail call void @_TIFFmemset(i8* %53, i32 0, i64 32) #4
  br label %54

54:                                               ; preds = %19, %50, %30, %9
  %55 = phi i32 [ 0, %9 ], [ 0, %30 ], [ 1, %50 ], [ 1, %19 ]
  ret i32 %55
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @LZWPreDecode(%struct.tiff*, i16 zeroext) #0 {
  %3 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %4 = bitcast i8** %3 to %struct.LZWCodecState**
  %5 = load %struct.LZWCodecState*, %struct.LZWCodecState** %4, align 8
  %6 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 10
  %7 = load %struct.code_ent*, %struct.code_ent** %6, align 8
  %8 = icmp eq %struct.code_ent* %7, null
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 25
  %11 = load i32 (%struct.tiff*)*, i32 (%struct.tiff*)** %10, align 8
  %12 = tail call i32 %11(%struct.tiff* %0) #4
  %13 = load %struct.code_ent*, %struct.code_ent** %6, align 8
  %14 = icmp eq %struct.code_ent* %13, null
  br i1 %14, label %69, label %15

15:                                               ; preds = %9, %2
  %16 = phi %struct.code_ent* [ %13, %9 ], [ %7, %2 ]
  %17 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %18 = load i64, i64* %17, align 8
  %19 = icmp sgt i64 %18, 1
  br i1 %19, label %20, label %47

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 45
  %22 = load i8*, i8** %21, align 8
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %47

25:                                               ; preds = %20
  %26 = getelementptr inbounds i8, i8* %22, i64 1
  %27 = load i8, i8* %26, align 1
  %28 = and i8 %27, 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %47, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 5
  %32 = load i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)** %31, align 8
  %33 = icmp eq i32 (%struct.tiff*, i8*, i64, i16)* %32, null
  br i1 %33, label %34, label %44

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %36 = load i8*, i8** %35, align 8
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %36, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @LZWPreDecode.module, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0)) #4
  %37 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 31
  store i32 (%struct.tiff*, i8*, i64, i16)* @LZWDecodeCompat, i32 (%struct.tiff*, i8*, i64, i16)** %37, align 8
  %38 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 33
  store i32 (%struct.tiff*, i8*, i64, i16)* @LZWDecodeCompat, i32 (%struct.tiff*, i8*, i64, i16)** %38, align 8
  %39 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 35
  store i32 (%struct.tiff*, i8*, i64, i16)* @LZWDecodeCompat, i32 (%struct.tiff*, i8*, i64, i16)** %39, align 8
  %40 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 25
  %41 = load i32 (%struct.tiff*)*, i32 (%struct.tiff*)** %40, align 8
  %42 = tail call i32 %41(%struct.tiff* %0) #4
  store i32 (%struct.tiff*, i8*, i64, i16)* @LZWDecodeCompat, i32 (%struct.tiff*, i8*, i64, i16)** %31, align 8
  %43 = load %struct.code_ent*, %struct.code_ent** %6, align 8
  br label %44

44:                                               ; preds = %30, %34
  %45 = phi %struct.code_ent* [ %16, %30 ], [ %43, %34 ]
  %46 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 0, i32 2
  store i16 511, i16* %46, align 2
  br label %50

47:                                               ; preds = %25, %20, %15
  %48 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 0, i32 2
  store i16 510, i16* %48, align 2
  %49 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 5
  store i32 (%struct.tiff*, i8*, i64, i16)* @LZWDecode, i32 (%struct.tiff*, i8*, i64, i16)** %49, align 8
  br label %50

50:                                               ; preds = %47, %44
  %51 = phi %struct.code_ent* [ %16, %47 ], [ %45, %44 ]
  %52 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 0, i32 1
  store i16 9, i16* %52, align 8
  %53 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 0, i32 4
  %54 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 2
  store i64 0, i64* %54, align 8
  %55 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 1
  %56 = bitcast i64* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 16, i1 false)
  store i64 511, i64* %55, align 8
  %57 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 3
  %58 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %51, i64 258
  %59 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 8
  %60 = bitcast i64* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false)
  store %struct.code_ent* %58, %struct.code_ent** %59, align 8
  %61 = bitcast %struct.code_ent* %58 to i8*
  tail call void @_TIFFmemset(i8* %61, i32 0, i64 77776) #4
  %62 = load %struct.code_ent*, %struct.code_ent** %6, align 8
  %63 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %62, i64 -1
  %64 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 7
  store %struct.code_ent* %63, %struct.code_ent** %64, align 8
  %65 = load i64, i64* %55, align 8
  %66 = add nsw i64 %65, -1
  %67 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %62, i64 %66
  %68 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 9
  store %struct.code_ent* %67, %struct.code_ent** %68, align 8
  br label %69

69:                                               ; preds = %9, %50
  %70 = phi i32 [ 1, %50 ], [ 0, %9 ]
  ret i32 %70
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @LZWDecode(%struct.tiff*, i8*, i64, i16 zeroext) #0 {
  %5 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %6 = bitcast i8** %5 to %struct.LZWCodecState**
  %7 = load %struct.LZWCodecState*, %struct.LZWCodecState** %6, align 8
  %8 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %63, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 6
  %13 = load %struct.code_ent*, %struct.code_ent** %12, align 8
  %14 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %13, i64 0, i32 1
  %15 = load i16, i16* %14, align 8
  %16 = zext i16 %15 to i64
  %17 = sub nsw i64 %16, %9
  %18 = icmp sgt i64 %17, %2
  br i1 %18, label %19, label %46

19:                                               ; preds = %11
  %20 = add nsw i64 %9, %2
  store i64 %20, i64* %8, align 8
  br label %21

21:                                               ; preds = %21, %19
  %22 = phi %struct.code_ent* [ %13, %19 ], [ %25, %21 ]
  %23 = phi i64 [ %17, %19 ], [ %26, %21 ]
  %24 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %22, i64 0, i32 0
  %25 = load %struct.code_ent*, %struct.code_ent** %24, align 8
  %26 = add nsw i64 %23, -1
  %27 = icmp sgt i64 %26, %2
  %28 = icmp ne %struct.code_ent* %25, null
  %29 = and i1 %27, %28
  br i1 %29, label %21, label %30

30:                                               ; preds = %21
  br i1 %28, label %31, label %368

31:                                               ; preds = %30
  %32 = getelementptr inbounds i8, i8* %1, i64 %2
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi i64 [ %2, %31 ], [ %42, %33 ]
  %35 = phi i8* [ %32, %31 ], [ %39, %33 ]
  %36 = phi %struct.code_ent* [ %25, %31 ], [ %41, %33 ]
  %37 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %36, i64 0, i32 2
  %38 = load i8, i8* %37, align 2
  %39 = getelementptr inbounds i8, i8* %35, i64 -1
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %36, i64 0, i32 0
  %41 = load %struct.code_ent*, %struct.code_ent** %40, align 8
  %42 = add nsw i64 %34, -1
  %43 = icmp ne i64 %42, 0
  %44 = icmp ne %struct.code_ent* %41, null
  %45 = and i1 %43, %44
  br i1 %45, label %33, label %368

46:                                               ; preds = %11
  %47 = getelementptr inbounds i8, i8* %1, i64 %17
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi i8* [ %47, %46 ], [ %52, %48 ]
  %50 = phi %struct.code_ent* [ %13, %46 ], [ %56, %48 ]
  %51 = phi i64 [ %17, %46 ], [ %57, %48 ]
  %52 = getelementptr inbounds i8, i8* %49, i64 -1
  %53 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %50, i64 0, i32 2
  %54 = load i8, i8* %53, align 2
  %55 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %50, i64 0, i32 0
  %56 = load %struct.code_ent*, %struct.code_ent** %55, align 8
  store i8 %54, i8* %52, align 1
  %57 = add nsw i64 %51, -1
  %58 = icmp ne i64 %57, 0
  %59 = icmp ne %struct.code_ent* %56, null
  %60 = and i1 %58, %59
  br i1 %60, label %48, label %61

61:                                               ; preds = %48
  %62 = sub nsw i64 %2, %17
  store i64 0, i64* %8, align 8
  br label %63

63:                                               ; preds = %61, %4
  %64 = phi i8* [ %47, %61 ], [ %1, %4 ]
  %65 = phi i64 [ %62, %61 ], [ %2, %4 ]
  %66 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %67 = load i8*, i8** %66, align 8
  %68 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 4
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %69, %71
  %73 = shl i64 %72, 3
  %74 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 3
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %73, %75
  store i64 %76, i64* %74, align 8
  %77 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 0, i32 1
  %78 = load i16, i16* %77, align 8
  %79 = zext i16 %78 to i64
  %80 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 0, i32 4
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 0, i32 5
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 7
  %87 = load %struct.code_ent*, %struct.code_ent** %86, align 8
  %88 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 8
  %89 = load %struct.code_ent*, %struct.code_ent** %88, align 8
  %90 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 9
  %91 = load %struct.code_ent*, %struct.code_ent** %90, align 8
  %92 = icmp sgt i64 %65, 0
  br i1 %92, label %93, label %345

93:                                               ; preds = %63
  %94 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 10
  %95 = icmp ult i64 %76, %79
  br i1 %95, label %96, label %110

96:                                               ; preds = %216, %93
  %97 = phi %struct.code_ent* [ %87, %93 ], [ %214, %216 ]
  %98 = phi %struct.code_ent* [ %91, %93 ], [ %213, %216 ]
  %99 = phi %struct.code_ent* [ %89, %93 ], [ %212, %216 ]
  %100 = phi i64 [ %81, %93 ], [ %211, %216 ]
  %101 = phi i64 [ %85, %93 ], [ %210, %216 ]
  %102 = phi i64 [ %83, %93 ], [ %209, %216 ]
  %103 = phi i64 [ %79, %93 ], [ %208, %216 ]
  %104 = phi i8* [ %67, %93 ], [ %207, %216 ]
  %105 = phi i64 [ %65, %93 ], [ %206, %216 ]
  %106 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %107 = load i8*, i8** %106, align 8
  %108 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 15
  %109 = load i32, i32* %108, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %107, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @LZWDecode.module, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0), i32 %109) #4
  br label %345

110:                                              ; preds = %93, %216
  %111 = phi i8* [ %205, %216 ], [ %64, %93 ]
  %112 = phi i64 [ %206, %216 ], [ %65, %93 ]
  %113 = phi i8* [ %207, %216 ], [ %67, %93 ]
  %114 = phi i64 [ %208, %216 ], [ %79, %93 ]
  %115 = phi i64 [ %209, %216 ], [ %83, %93 ]
  %116 = phi i64 [ %210, %216 ], [ %85, %93 ]
  %117 = phi i64 [ %211, %216 ], [ %81, %93 ]
  %118 = phi %struct.code_ent* [ %212, %216 ], [ %89, %93 ]
  %119 = phi %struct.code_ent* [ %213, %216 ], [ %91, %93 ]
  %120 = phi %struct.code_ent* [ %214, %216 ], [ %87, %93 ]
  %121 = phi i64 [ %217, %216 ], [ %76, %93 ]
  %122 = shl i64 %117, 8
  %123 = getelementptr inbounds i8, i8* %113, i64 1
  %124 = load i8, i8* %113, align 1
  %125 = zext i8 %124 to i64
  %126 = or i64 %122, %125
  %127 = add nsw i64 %115, 8
  %128 = icmp slt i64 %127, %114
  br i1 %128, label %129, label %136

129:                                              ; preds = %110
  %130 = shl i64 %126, 8
  %131 = getelementptr inbounds i8, i8* %113, i64 2
  %132 = load i8, i8* %123, align 1
  %133 = zext i8 %132 to i64
  %134 = or i64 %130, %133
  %135 = add nsw i64 %115, 16
  br label %136

136:                                              ; preds = %110, %129
  %137 = phi i8* [ %131, %129 ], [ %123, %110 ]
  %138 = phi i64 [ %135, %129 ], [ %127, %110 ]
  %139 = phi i64 [ %134, %129 ], [ %126, %110 ]
  %140 = sub nsw i64 %138, %114
  %141 = lshr i64 %139, %140
  %142 = and i64 %141, %116
  %143 = trunc i64 %142 to i16
  %144 = sub i64 %121, %114
  store i64 %144, i64* %74, align 8
  switch i16 %143, label %219 [
    i16 257, label %345
    i16 256, label %145
  ]

145:                                              ; preds = %136
  %146 = load %struct.code_ent*, %struct.code_ent** %94, align 8
  br label %147

147:                                              ; preds = %145, %178
  %148 = phi %struct.code_ent* [ %154, %178 ], [ %146, %145 ]
  %149 = phi i8* [ %179, %178 ], [ %137, %145 ]
  %150 = phi i64 [ %182, %178 ], [ %140, %145 ]
  %151 = phi i64 [ %181, %178 ], [ %139, %145 ]
  %152 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %148, i64 258
  %153 = bitcast %struct.code_ent* %152 to i8*
  tail call void @_TIFFmemset(i8* %153, i32 0, i64 77776) #4
  %154 = load %struct.code_ent*, %struct.code_ent** %94, align 8
  %155 = load i64, i64* %74, align 8
  %156 = icmp ult i64 %155, 9
  br i1 %156, label %157, label %163

157:                                              ; preds = %147
  %158 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %154, i64 510
  %159 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %160 = load i8*, i8** %159, align 8
  %161 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 15
  %162 = load i32, i32* %161, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %160, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @LZWDecode.module, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0), i32 %162) #4
  br label %345

163:                                              ; preds = %147
  %164 = shl i64 %151, 8
  %165 = getelementptr inbounds i8, i8* %149, i64 1
  %166 = load i8, i8* %149, align 1
  %167 = zext i8 %166 to i64
  %168 = or i64 %164, %167
  %169 = add nsw i64 %150, 8
  %170 = icmp slt i64 %169, 9
  br i1 %170, label %171, label %178

171:                                              ; preds = %163
  %172 = shl i64 %168, 8
  %173 = getelementptr inbounds i8, i8* %149, i64 2
  %174 = load i8, i8* %165, align 1
  %175 = zext i8 %174 to i64
  %176 = or i64 %172, %175
  %177 = add nsw i64 %150, 16
  br label %178

178:                                              ; preds = %163, %171
  %179 = phi i8* [ %173, %171 ], [ %165, %163 ]
  %180 = phi i64 [ %177, %171 ], [ %169, %163 ]
  %181 = phi i64 [ %176, %171 ], [ %168, %163 ]
  %182 = add nsw i64 %180, -9
  %183 = lshr i64 %181, %182
  %184 = trunc i64 %183 to i16
  %185 = and i16 %184, 511
  %186 = add i64 %155, -9
  store i64 %186, i64* %74, align 8
  switch i16 %185, label %187 [
    i16 256, label %147
    i16 257, label %343
  ]

187:                                              ; preds = %178
  %188 = icmp ugt i16 %185, 256
  br i1 %188, label %189, label %196

189:                                              ; preds = %187
  %190 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %191 = load i8*, i8** %190, align 8
  %192 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 0
  %193 = load i8*, i8** %192, align 8
  %194 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 13
  %195 = load i32, i32* %194, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %191, i8* %193, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i64 0, i64 0), i32 %195) #4
  br label %368

196:                                              ; preds = %187
  %197 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %154, i64 510
  %198 = trunc i64 %183 to i8
  %199 = getelementptr inbounds i8, i8* %111, i64 1
  store i8 %198, i8* %111, align 1
  %200 = add nsw i64 %112, -1
  %201 = load %struct.code_ent*, %struct.code_ent** %94, align 8
  %202 = zext i16 %185 to i64
  %203 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %201, i64 %202
  br label %204

204:                                              ; preds = %337, %339, %196
  %205 = phi i8* [ %199, %196 ], [ %319, %337 ], [ %341, %339 ]
  %206 = phi i64 [ %200, %196 ], [ %338, %337 ], [ %342, %339 ]
  %207 = phi i8* [ %179, %196 ], [ %137, %337 ], [ %137, %339 ]
  %208 = phi i64 [ 9, %196 ], [ %269, %337 ], [ %269, %339 ]
  %209 = phi i64 [ %182, %196 ], [ %140, %337 ], [ %140, %339 ]
  %210 = phi i64 [ 511, %196 ], [ %270, %337 ], [ %270, %339 ]
  %211 = phi i64 [ %181, %196 ], [ %139, %337 ], [ %139, %339 ]
  %212 = phi %struct.code_ent* [ %152, %196 ], [ %257, %337 ], [ %257, %339 ]
  %213 = phi %struct.code_ent* [ %197, %196 ], [ %271, %337 ], [ %271, %339 ]
  %214 = phi %struct.code_ent* [ %203, %196 ], [ %222, %337 ], [ %222, %339 ]
  %215 = icmp sgt i64 %206, 0
  br i1 %215, label %216, label %345

216:                                              ; preds = %204
  %217 = load i64, i64* %74, align 8
  %218 = icmp ult i64 %217, %208
  br i1 %218, label %96, label %110

219:                                              ; preds = %136
  %220 = load %struct.code_ent*, %struct.code_ent** %94, align 8
  %221 = and i64 %142, 65535
  %222 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %220, i64 %221
  %223 = icmp uge %struct.code_ent* %118, %220
  %224 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %220, i64 5119
  %225 = icmp ult %struct.code_ent* %118, %224
  %226 = and i1 %223, %225
  br i1 %226, label %232, label %227

227:                                              ; preds = %219
  %228 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %229 = load i8*, i8** %228, align 8
  %230 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 13
  %231 = load i32, i32* %230, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %229, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @LZWDecode.module, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.5, i64 0, i64 0), i32 %231) #4
  br label %368

232:                                              ; preds = %219
  %233 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %118, i64 0, i32 0
  store %struct.code_ent* %120, %struct.code_ent** %233, align 8
  %234 = load %struct.code_ent*, %struct.code_ent** %94, align 8
  %235 = icmp uge %struct.code_ent* %120, %234
  %236 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %234, i64 5119
  %237 = icmp ult %struct.code_ent* %120, %236
  %238 = and i1 %235, %237
  br i1 %238, label %244, label %239

239:                                              ; preds = %232
  %240 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %241 = load i8*, i8** %240, align 8
  %242 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 13
  %243 = load i32, i32* %242, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %241, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @LZWDecode.module, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.5, i64 0, i64 0), i32 %243) #4
  br label %368

244:                                              ; preds = %232
  %245 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %120, i64 0, i32 3
  %246 = load i8, i8* %245, align 1
  %247 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %118, i64 0, i32 3
  store i8 %246, i8* %247, align 1
  %248 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %120, i64 0, i32 1
  %249 = load i16, i16* %248, align 8
  %250 = add i16 %249, 1
  %251 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %118, i64 0, i32 1
  store i16 %250, i16* %251, align 8
  %252 = icmp ult %struct.code_ent* %222, %118
  %253 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %220, i64 %221, i32 3
  %254 = select i1 %252, i8* %253, i8* %247
  %255 = load i8, i8* %254, align 1
  %256 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %118, i64 0, i32 2
  store i8 %255, i8* %256, align 2
  %257 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %118, i64 1
  %258 = icmp ugt %struct.code_ent* %257, %119
  br i1 %258, label %259, label %268

259:                                              ; preds = %244
  %260 = icmp slt i64 %114, 11
  %261 = select i1 %260, i64 %114, i64 11
  %262 = add nsw i64 %261, 1
  %263 = shl nsw i64 -1, %262
  %264 = xor i64 %263, -1
  %265 = load %struct.code_ent*, %struct.code_ent** %94, align 8
  %266 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %265, i64 -1
  %267 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %266, i64 %264
  br label %268

268:                                              ; preds = %259, %244
  %269 = phi i64 [ %262, %259 ], [ %114, %244 ]
  %270 = phi i64 [ %264, %259 ], [ %116, %244 ]
  %271 = phi %struct.code_ent* [ %267, %259 ], [ %119, %244 ]
  %272 = icmp ugt i16 %143, 255
  br i1 %272, label %273, label %339

273:                                              ; preds = %268
  %274 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %220, i64 %221, i32 1
  %275 = load i16, i16* %274, align 8
  %276 = icmp eq i16 %275, 0
  br i1 %276, label %277, label %282

277:                                              ; preds = %273
  %278 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %279 = load i8*, i8** %278, align 8
  %280 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 13
  %281 = load i32, i32* %280, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %279, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @LZWDecode.module, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.6, i64 0, i64 0), i32 %281) #4
  br label %368

282:                                              ; preds = %273
  %283 = zext i16 %275 to i64
  %284 = icmp slt i64 %112, %283
  br i1 %284, label %285, label %318

285:                                              ; preds = %282
  %286 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 6
  store %struct.code_ent* %222, %struct.code_ent** %286, align 8
  br label %287

287:                                              ; preds = %292, %285
  %288 = phi %struct.code_ent* [ %222, %285 ], [ %290, %292 ]
  %289 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %288, i64 0, i32 0
  %290 = load %struct.code_ent*, %struct.code_ent** %289, align 8
  %291 = icmp eq %struct.code_ent* %290, null
  br i1 %291, label %345, label %292

292:                                              ; preds = %287
  %293 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %290, i64 0, i32 1
  %294 = load i16, i16* %293, align 8
  %295 = zext i16 %294 to i64
  %296 = icmp slt i64 %112, %295
  br i1 %296, label %287, label %297

297:                                              ; preds = %292
  store i64 %112, i64* %8, align 8
  %298 = getelementptr inbounds i8, i8* %111, i64 %112
  br label %299

299:                                              ; preds = %299, %297
  %300 = phi i64 [ %112, %297 ], [ %308, %299 ]
  %301 = phi i8* [ %298, %297 ], [ %305, %299 ]
  %302 = phi %struct.code_ent* [ %290, %297 ], [ %307, %299 ]
  %303 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %302, i64 0, i32 2
  %304 = load i8, i8* %303, align 2
  %305 = getelementptr inbounds i8, i8* %301, i64 -1
  store i8 %304, i8* %305, align 1
  %306 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %302, i64 0, i32 0
  %307 = load %struct.code_ent*, %struct.code_ent** %306, align 8
  %308 = add nsw i64 %300, -1
  %309 = icmp ne i64 %308, 0
  %310 = icmp ne %struct.code_ent* %307, null
  %311 = and i1 %309, %310
  br i1 %311, label %299, label %312

312:                                              ; preds = %299
  br i1 %310, label %313, label %345

313:                                              ; preds = %312
  %314 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %315 = load i8*, i8** %314, align 8
  %316 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 13
  %317 = load i32, i32* %316, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %315, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @LZWDecode.module, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.8, i64 0, i64 0), i32 %317) #4
  br label %345

318:                                              ; preds = %282
  %319 = getelementptr inbounds i8, i8* %111, i64 %283
  br label %320

320:                                              ; preds = %320, %318
  %321 = phi i8* [ %319, %318 ], [ %323, %320 ]
  %322 = phi %struct.code_ent* [ %222, %318 ], [ %327, %320 ]
  %323 = getelementptr inbounds i8, i8* %321, i64 -1
  %324 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %322, i64 0, i32 2
  %325 = load i8, i8* %324, align 2
  %326 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %322, i64 0, i32 0
  %327 = load %struct.code_ent*, %struct.code_ent** %326, align 8
  store i8 %325, i8* %323, align 1
  %328 = icmp ne %struct.code_ent* %327, null
  %329 = icmp ugt i8* %323, %111
  %330 = and i1 %329, %328
  br i1 %330, label %320, label %331

331:                                              ; preds = %320
  br i1 %328, label %332, label %337

332:                                              ; preds = %331
  %333 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %334 = load i8*, i8** %333, align 8
  %335 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 13
  %336 = load i32, i32* %335, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %334, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @LZWDecode.module, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.8, i64 0, i64 0), i32 %336) #4
  br label %345

337:                                              ; preds = %331
  %338 = sub nsw i64 %112, %283
  br label %204

339:                                              ; preds = %268
  %340 = trunc i64 %142 to i8
  %341 = getelementptr inbounds i8, i8* %111, i64 1
  store i8 %340, i8* %111, align 1
  %342 = add nsw i64 %112, -1
  br label %204

343:                                              ; preds = %178
  %344 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %154, i64 510
  br label %345

345:                                              ; preds = %204, %136, %287, %63, %343, %157, %96, %313, %312, %332
  %346 = phi i64 [ %308, %313 ], [ %308, %312 ], [ %112, %332 ], [ %105, %96 ], [ %112, %157 ], [ %112, %343 ], [ %65, %63 ], [ %112, %287 ], [ %206, %204 ], [ %112, %136 ]
  %347 = phi i8* [ %137, %313 ], [ %137, %312 ], [ %137, %332 ], [ %104, %96 ], [ %149, %157 ], [ %179, %343 ], [ %67, %63 ], [ %137, %287 ], [ %207, %204 ], [ %137, %136 ]
  %348 = phi i64 [ %269, %313 ], [ %269, %312 ], [ %269, %332 ], [ %103, %96 ], [ 9, %157 ], [ 9, %343 ], [ %79, %63 ], [ %269, %287 ], [ %208, %204 ], [ %114, %136 ]
  %349 = phi i64 [ %140, %313 ], [ %140, %312 ], [ %140, %332 ], [ %102, %96 ], [ %150, %157 ], [ %182, %343 ], [ %83, %63 ], [ %140, %287 ], [ %209, %204 ], [ %140, %136 ]
  %350 = phi i64 [ %270, %313 ], [ %270, %312 ], [ %270, %332 ], [ %101, %96 ], [ 511, %157 ], [ 511, %343 ], [ %85, %63 ], [ %270, %287 ], [ %210, %204 ], [ %116, %136 ]
  %351 = phi i64 [ %139, %313 ], [ %139, %312 ], [ %139, %332 ], [ %100, %96 ], [ %151, %157 ], [ %181, %343 ], [ %81, %63 ], [ %139, %287 ], [ %211, %204 ], [ %139, %136 ]
  %352 = phi %struct.code_ent* [ %257, %313 ], [ %257, %312 ], [ %257, %332 ], [ %99, %96 ], [ %152, %157 ], [ %152, %343 ], [ %89, %63 ], [ %257, %287 ], [ %212, %204 ], [ %118, %136 ]
  %353 = phi %struct.code_ent* [ %271, %313 ], [ %271, %312 ], [ %271, %332 ], [ %98, %96 ], [ %158, %157 ], [ %344, %343 ], [ %91, %63 ], [ %271, %287 ], [ %213, %204 ], [ %119, %136 ]
  %354 = phi %struct.code_ent* [ %222, %313 ], [ %222, %312 ], [ %222, %332 ], [ %97, %96 ], [ %120, %157 ], [ %120, %343 ], [ %87, %63 ], [ %222, %287 ], [ %214, %204 ], [ %120, %136 ]
  %355 = bitcast i8** %66 to i64*
  %356 = load i64, i64* %355, align 8
  %357 = ptrtoint i8* %347 to i64
  %358 = load i64, i64* %68, align 8
  %359 = sub i64 %356, %357
  %360 = add i64 %358, %359
  store i64 %360, i64* %68, align 8
  store i8* %347, i8** %66, align 8
  store i64 %360, i64* %70, align 8
  %361 = trunc i64 %348 to i16
  store i16 %361, i16* %77, align 8
  store i64 %351, i64* %80, align 8
  store i64 %349, i64* %82, align 8
  store i64 %350, i64* %84, align 8
  store %struct.code_ent* %354, %struct.code_ent** %86, align 8
  store %struct.code_ent* %352, %struct.code_ent** %88, align 8
  store %struct.code_ent* %353, %struct.code_ent** %90, align 8
  %362 = icmp sgt i64 %346, 0
  br i1 %362, label %363, label %368

363:                                              ; preds = %345
  %364 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %365 = load i8*, i8** %364, align 8
  %366 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 13
  %367 = load i32, i32* %366, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %365, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @LZWDecode.module, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.7, i64 0, i64 0), i32 %367, i64 %346) #4
  br label %368

368:                                              ; preds = %33, %30, %345, %363, %277, %239, %227, %189
  %369 = phi i32 [ 0, %363 ], [ 0, %189 ], [ 0, %227 ], [ 0, %239 ], [ 0, %277 ], [ 1, %345 ], [ 1, %30 ], [ 1, %33 ]
  ret i32 %369
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @LZWSetupEncode(%struct.tiff* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %3 = bitcast i8** %2 to %struct.LZWCodecState**
  %4 = load %struct.LZWCodecState*, %struct.LZWCodecState** %3, align 8
  %5 = tail call i8* @_TIFFmalloc(i64 144016) #4
  %6 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %4, i64 0, i32 17
  %7 = bitcast %struct.hash_t** %6 to i8**
  store i8* %5, i8** %7, align 8
  %8 = icmp eq i8* %5, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %11 = load i8*, i8** %10, align 8
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %11, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @LZWSetupEncode.module, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9, i64 0, i64 0)) #4
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi i32 [ 0, %9 ], [ 1, %1 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @LZWPreEncode(%struct.tiff*, i16 zeroext) #0 {
  %3 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %4 = bitcast i8** %3 to %struct.LZWCodecState**
  %5 = load %struct.LZWCodecState*, %struct.LZWCodecState** %4, align 8
  %6 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 17
  %7 = load %struct.hash_t*, %struct.hash_t** %6, align 8
  %8 = icmp eq %struct.hash_t* %7, null
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 27
  %11 = load i32 (%struct.tiff*)*, i32 (%struct.tiff*)** %10, align 8
  %12 = tail call i32 %11(%struct.tiff* %0) #4
  %13 = load %struct.hash_t*, %struct.hash_t** %6, align 8
  br label %14

14:                                               ; preds = %9, %2
  %15 = phi %struct.hash_t* [ %13, %9 ], [ %7, %2 ]
  %16 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 0, i32 1
  store i16 9, i16* %16, align 8
  %17 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 0, i32 2
  store i16 511, i16* %17, align 2
  %18 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 0, i32 3
  store i16 258, i16* %18, align 4
  %19 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 0, i32 4
  %20 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 12
  %21 = bitcast i64* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false)
  store i64 10000, i64* %20, align 8
  %22 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 13
  %23 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 45
  %24 = bitcast i64* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false)
  %25 = load i8*, i8** %23, align 8
  %26 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 46
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %25, i64 %27
  %29 = getelementptr inbounds i8, i8* %28, i64 -1
  %30 = getelementptr inbounds i8, i8* %29, i64 -4
  %31 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 16
  store i8* %30, i8** %31, align 8
  %32 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %15, i64 9000
  br label %33

33:                                               ; preds = %48, %14
  %34 = phi %struct.hash_t* [ %32, %14 ], [ %58, %48 ]
  %35 = phi i64 [ 8993, %14 ], [ %49, %48 ]
  %36 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %34, i64 -7, i32 0
  store i64 -1, i64* %36, align 8
  %37 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %34, i64 -6, i32 0
  store i64 -1, i64* %37, align 8
  %38 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %34, i64 -5, i32 0
  store i64 -1, i64* %38, align 8
  %39 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %34, i64 -4, i32 0
  store i64 -1, i64* %39, align 8
  %40 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %34, i64 -3, i32 0
  store i64 -1, i64* %40, align 8
  %41 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %34, i64 -2, i32 0
  store i64 -1, i64* %41, align 8
  %42 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %34, i64 -1, i32 0
  store i64 -1, i64* %42, align 8
  %43 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %34, i64 0, i32 0
  store i64 -1, i64* %43, align 8
  %44 = icmp sgt i64 %35, 7
  br i1 %44, label %48, label %45

45:                                               ; preds = %33
  %46 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %15, i64 0, i32 0
  store i64 -1, i64* %46, align 8
  %47 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 11
  store i32 65535, i32* %47, align 8
  ret i32 1

48:                                               ; preds = %33
  %49 = add nsw i64 %35, -16
  %50 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %34, i64 -15, i32 0
  store i64 -1, i64* %50, align 8
  %51 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %34, i64 -14, i32 0
  store i64 -1, i64* %51, align 8
  %52 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %34, i64 -13, i32 0
  store i64 -1, i64* %52, align 8
  %53 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %34, i64 -12, i32 0
  store i64 -1, i64* %53, align 8
  %54 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %34, i64 -11, i32 0
  store i64 -1, i64* %54, align 8
  %55 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %34, i64 -10, i32 0
  store i64 -1, i64* %55, align 8
  %56 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %34, i64 -9, i32 0
  store i64 -1, i64* %56, align 8
  %57 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %34, i64 -8, i32 0
  store i64 -1, i64* %57, align 8
  %58 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %34, i64 -16
  br label %33
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @LZWPostEncode(%struct.tiff*) #0 {
  %2 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %3 = bitcast i8** %2 to %struct.LZWCodecState**
  %4 = load %struct.LZWCodecState*, %struct.LZWCodecState** %3, align 8
  %5 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %4, i64 0, i32 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %4, i64 0, i32 0, i32 4
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %4, i64 0, i32 0, i32 1
  %12 = load i16, i16* %11, align 8
  %13 = zext i16 %12 to i32
  %14 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %4, i64 0, i32 16
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ugt i8* %6, %15
  br i1 %16, label %17, label %28

17:                                               ; preds = %1
  %18 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 45
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = ptrtoint i8* %6 to i64
  %22 = sub i64 %21, %20
  %23 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  store i64 %22, i64* %23, align 8
  %24 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %112, label %26

26:                                               ; preds = %17
  %27 = load i8*, i8** %18, align 8
  br label %28

28:                                               ; preds = %26, %1
  %29 = phi i8* [ %27, %26 ], [ %6, %1 ]
  %30 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %4, i64 0, i32 11
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 65535
  br i1 %32, label %75, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %4, i64 0, i32 0, i32 3
  %35 = load i16, i16* %34, align 4
  %36 = zext i16 %12 to i64
  %37 = shl i64 %10, %36
  %38 = sext i32 %31 to i64
  %39 = or i64 %37, %38
  %40 = add nsw i64 %8, %36
  %41 = add nsw i64 %40, -8
  %42 = lshr i64 %39, %41
  %43 = trunc i64 %42 to i8
  %44 = getelementptr inbounds i8, i8* %29, i64 1
  store i8 %43, i8* %29, align 1
  %45 = icmp sgt i64 %41, 7
  br i1 %45, label %46, label %51

46:                                               ; preds = %33
  %47 = add nsw i64 %40, -16
  %48 = lshr i64 %39, %47
  %49 = trunc i64 %48 to i8
  %50 = getelementptr inbounds i8, i8* %29, i64 2
  store i8 %49, i8* %44, align 1
  br label %51

51:                                               ; preds = %46, %33
  %52 = phi i8* [ %50, %46 ], [ %44, %33 ]
  %53 = phi i64 [ %47, %46 ], [ %41, %33 ]
  store i32 65535, i32* %30, align 8
  %54 = icmp eq i16 %35, 4093
  br i1 %54, label %55, label %69

55:                                               ; preds = %51
  %56 = shl i64 %39, %36
  %57 = or i64 %56, 256
  %58 = add nsw i64 %53, %36
  %59 = add nsw i64 %58, -8
  %60 = lshr i64 %57, %59
  %61 = trunc i64 %60 to i8
  %62 = getelementptr inbounds i8, i8* %52, i64 1
  store i8 %61, i8* %52, align 1
  %63 = icmp sgt i64 %59, 7
  br i1 %63, label %64, label %75

64:                                               ; preds = %55
  %65 = add nsw i64 %58, -16
  %66 = lshr i64 %57, %65
  %67 = trunc i64 %66 to i8
  %68 = getelementptr inbounds i8, i8* %52, i64 2
  store i8 %67, i8* %62, align 1
  br label %75

69:                                               ; preds = %51
  %70 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %4, i64 0, i32 0, i32 2
  %71 = load i16, i16* %70, align 2
  %72 = icmp uge i16 %35, %71
  %73 = zext i1 %72 to i32
  %74 = add nuw nsw i32 %73, %13
  br label %75

75:                                               ; preds = %69, %64, %55, %28
  %76 = phi i8* [ %29, %28 ], [ %68, %64 ], [ %62, %55 ], [ %52, %69 ]
  %77 = phi i64 [ %8, %28 ], [ %65, %64 ], [ %59, %55 ], [ %53, %69 ]
  %78 = phi i64 [ %10, %28 ], [ %57, %64 ], [ %57, %55 ], [ %39, %69 ]
  %79 = phi i32 [ %13, %28 ], [ 9, %64 ], [ 9, %55 ], [ %74, %69 ]
  %80 = zext i32 %79 to i64
  %81 = shl i64 %78, %80
  %82 = or i64 %81, 257
  %83 = sext i32 %79 to i64
  %84 = add nsw i64 %77, %83
  %85 = add nsw i64 %84, -8
  %86 = lshr i64 %82, %85
  %87 = trunc i64 %86 to i8
  %88 = getelementptr inbounds i8, i8* %76, i64 1
  store i8 %87, i8* %76, align 1
  %89 = icmp sgt i64 %85, 7
  br i1 %89, label %90, label %95

90:                                               ; preds = %75
  %91 = add nsw i64 %84, -16
  %92 = lshr i64 %82, %91
  %93 = trunc i64 %92 to i8
  %94 = getelementptr inbounds i8, i8* %76, i64 2
  store i8 %93, i8* %88, align 1
  br label %95

95:                                               ; preds = %90, %75
  %96 = phi i8* [ %94, %90 ], [ %88, %75 ]
  %97 = phi i64 [ %91, %90 ], [ %85, %75 ]
  %98 = icmp sgt i64 %97, 0
  br i1 %98, label %99, label %104

99:                                               ; preds = %95
  %100 = sub nsw i64 8, %97
  %101 = shl i64 %82, %100
  %102 = trunc i64 %101 to i8
  %103 = getelementptr inbounds i8, i8* %96, i64 1
  store i8 %102, i8* %96, align 1
  br label %104

104:                                              ; preds = %99, %95
  %105 = phi i8* [ %103, %99 ], [ %96, %95 ]
  %106 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 45
  %107 = bitcast i8** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = ptrtoint i8* %105 to i64
  %110 = sub i64 %109, %108
  %111 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  store i64 %110, i64* %111, align 8
  br label %112

112:                                              ; preds = %17, %104
  %113 = phi i32 [ 1, %104 ], [ 0, %17 ]
  ret i32 %113
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @LZWEncode(%struct.tiff*, i8* nocapture readonly, i64, i16 zeroext) #0 {
  %5 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %6 = bitcast i8** %5 to %struct.LZWCodecState**
  %7 = load %struct.LZWCodecState*, %struct.LZWCodecState** %6, align 8
  %8 = icmp eq %struct.LZWCodecState* %7, null
  br i1 %8, label %293, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 14
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 15
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 12
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 0, i32 5
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 0, i32 3
  %21 = load i16, i16* %20, align 4
  %22 = zext i16 %21 to i32
  %23 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 0, i32 2
  %24 = load i16, i16* %23, align 2
  %25 = zext i16 %24 to i32
  %26 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 0, i32 1
  %27 = load i16, i16* %26, align 8
  %28 = zext i16 %27 to i32
  %29 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 16
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 11
  %34 = load i32, i32* %33, align 8
  %35 = trunc i32 %34 to i16
  %36 = and i32 %34, 65535
  %37 = icmp eq i32 %36, 65535
  %38 = icmp sgt i64 %2, 0
  %39 = and i1 %38, %37
  br i1 %39, label %40, label %64

40:                                               ; preds = %9
  %41 = zext i16 %27 to i64
  %42 = shl i64 %17, %41
  %43 = or i64 %42, 256
  %44 = add nsw i64 %19, %41
  %45 = add nsw i64 %44, -8
  %46 = lshr i64 %43, %45
  %47 = trunc i64 %46 to i8
  %48 = getelementptr inbounds i8, i8* %30, i64 1
  store i8 %47, i8* %30, align 1
  %49 = icmp sgt i64 %45, 7
  br i1 %49, label %50, label %55

50:                                               ; preds = %40
  %51 = add nsw i64 %44, -16
  %52 = lshr i64 %43, %51
  %53 = trunc i64 %52 to i8
  %54 = getelementptr inbounds i8, i8* %30, i64 2
  store i8 %53, i8* %48, align 1
  br label %55

55:                                               ; preds = %50, %40
  %56 = phi i64 [ %51, %50 ], [ %45, %40 ]
  %57 = phi i8* [ %54, %50 ], [ %48, %40 ]
  %58 = add nsw i64 %13, %41
  %59 = getelementptr inbounds i8, i8* %1, i64 1
  %60 = load i8, i8* %1, align 1
  %61 = zext i8 %60 to i16
  %62 = add nsw i64 %2, -1
  %63 = add nsw i64 %11, 1
  br label %64

64:                                               ; preds = %55, %9
  %65 = phi i8* [ %59, %55 ], [ %1, %9 ]
  %66 = phi i64 [ %62, %55 ], [ %2, %9 ]
  %67 = phi i16 [ %61, %55 ], [ %35, %9 ]
  %68 = phi i64 [ %63, %55 ], [ %11, %9 ]
  %69 = phi i64 [ %58, %55 ], [ %13, %9 ]
  %70 = phi i64 [ %43, %55 ], [ %17, %9 ]
  %71 = phi i64 [ %56, %55 ], [ %19, %9 ]
  %72 = phi i8* [ %57, %55 ], [ %30, %9 ]
  %73 = icmp sgt i64 %66, 0
  br i1 %73, label %74, label %278

74:                                               ; preds = %64
  %75 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 17
  %76 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 45
  %77 = bitcast i8** %76 to i64*
  %78 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %79 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 13
  br label %80

80:                                               ; preds = %74, %266
  %81 = phi i8* [ %72, %74 ], [ %276, %266 ]
  %82 = phi i32 [ %28, %74 ], [ %275, %266 ]
  %83 = phi i32 [ %25, %74 ], [ %274, %266 ]
  %84 = phi i32 [ %22, %74 ], [ %273, %266 ]
  %85 = phi i64 [ %71, %74 ], [ %272, %266 ]
  %86 = phi i64 [ %70, %74 ], [ %271, %266 ]
  %87 = phi i64 [ %15, %74 ], [ %270, %266 ]
  %88 = phi i64 [ %69, %74 ], [ %269, %266 ]
  %89 = phi i64 [ %68, %74 ], [ %268, %266 ]
  %90 = phi i16 [ %67, %74 ], [ %267, %266 ]
  %91 = phi i64 [ %66, %74 ], [ %102, %266 ]
  %92 = phi i8* [ %65, %74 ], [ %99, %266 ]
  %93 = load %struct.hash_t*, %struct.hash_t** %75, align 8
  br label %94

94:                                               ; preds = %80, %116
  %95 = phi i64 [ %89, %80 ], [ %103, %116 ]
  %96 = phi i16 [ %90, %80 ], [ %118, %116 ]
  %97 = phi i64 [ %91, %80 ], [ %102, %116 ]
  %98 = phi i8* [ %92, %80 ], [ %99, %116 ]
  %99 = getelementptr inbounds i8, i8* %98, i64 1
  %100 = load i8, i8* %98, align 1
  %101 = zext i8 %100 to i32
  %102 = add nsw i64 %97, -1
  %103 = add nsw i64 %95, 1
  %104 = zext i8 %100 to i64
  %105 = shl nuw nsw i64 %104, 12
  %106 = zext i16 %96 to i64
  %107 = add nuw nsw i64 %105, %106
  %108 = shl nuw nsw i32 %101, 5
  %109 = zext i16 %96 to i32
  %110 = xor i32 %108, %109
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %93, i64 %111
  %113 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %112, i64 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = icmp eq i64 %114, %107
  br i1 %115, label %116, label %120

116:                                              ; preds = %94
  %117 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %93, i64 %111, i32 1
  %118 = load i16, i16* %117, align 8
  %119 = icmp sgt i64 %102, 0
  br i1 %119, label %94, label %278

120:                                              ; preds = %94
  %121 = icmp sgt i64 %114, -1
  br i1 %121, label %122, label %142

122:                                              ; preds = %120
  %123 = sub nsw i32 9001, %110
  %124 = icmp eq i32 %110, 0
  %125 = select i1 %124, i32 1, i32 %123
  br label %126

126:                                              ; preds = %140, %122
  %127 = phi i32 [ %110, %122 ], [ %131, %140 ]
  %128 = sub i32 %127, %125
  %129 = icmp slt i32 %128, 0
  %130 = add i32 %128, 9001
  %131 = select i1 %129, i32 %130, i32 %128
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %93, i64 %132
  %134 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %133, i64 0, i32 0
  %135 = load i64, i64* %134, align 8
  %136 = icmp eq i64 %135, %107
  br i1 %136, label %137, label %140

137:                                              ; preds = %126
  %138 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %93, i64 %132, i32 1
  %139 = load i16, i16* %138, align 8
  br label %266

140:                                              ; preds = %126
  %141 = icmp sgt i64 %135, -1
  br i1 %141, label %126, label %142

142:                                              ; preds = %140, %120
  %143 = phi %struct.hash_t* [ %112, %120 ], [ %133, %140 ]
  %144 = icmp ugt i8* %81, %32
  br i1 %144, label %145, label %153

145:                                              ; preds = %142
  %146 = load i64, i64* %77, align 8
  %147 = ptrtoint i8* %81 to i64
  %148 = sub i64 %147, %146
  store i64 %148, i64* %78, align 8
  %149 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %293, label %151

151:                                              ; preds = %145
  %152 = load i8*, i8** %76, align 8
  br label %153

153:                                              ; preds = %151, %142
  %154 = phi i8* [ %152, %151 ], [ %81, %142 ]
  %155 = zext i32 %82 to i64
  %156 = shl i64 %86, %155
  %157 = or i64 %156, %106
  %158 = sext i32 %82 to i64
  %159 = add nsw i64 %85, %158
  %160 = add nsw i64 %159, -8
  %161 = lshr i64 %157, %160
  %162 = trunc i64 %161 to i8
  %163 = getelementptr inbounds i8, i8* %154, i64 1
  store i8 %162, i8* %154, align 1
  %164 = icmp sgt i64 %160, 7
  br i1 %164, label %165, label %170

165:                                              ; preds = %153
  %166 = add nsw i64 %159, -16
  %167 = lshr i64 %157, %166
  %168 = trunc i64 %167 to i8
  %169 = getelementptr inbounds i8, i8* %154, i64 2
  store i8 %168, i8* %163, align 1
  br label %170

170:                                              ; preds = %165, %153
  %171 = phi i64 [ %166, %165 ], [ %160, %153 ]
  %172 = phi i8* [ %169, %165 ], [ %163, %153 ]
  %173 = add nsw i64 %88, %158
  %174 = zext i8 %100 to i16
  %175 = add nsw i32 %84, 1
  %176 = trunc i32 %84 to i16
  %177 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %143, i64 0, i32 1
  store i16 %176, i16* %177, align 8
  %178 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %143, i64 0, i32 0
  store i64 %107, i64* %178, align 8
  %179 = icmp eq i32 %175, 4094
  br i1 %179, label %180, label %210

180:                                              ; preds = %170
  %181 = load %struct.hash_t*, %struct.hash_t** %75, align 8
  %182 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %181, i64 9000
  br label %183

183:                                              ; preds = %306, %180
  %184 = phi %struct.hash_t* [ %182, %180 ], [ %316, %306 ]
  %185 = phi i64 [ 8993, %180 ], [ %307, %306 ]
  %186 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %184, i64 -7, i32 0
  store i64 -1, i64* %186, align 8
  %187 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %184, i64 -6, i32 0
  store i64 -1, i64* %187, align 8
  %188 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %184, i64 -5, i32 0
  store i64 -1, i64* %188, align 8
  %189 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %184, i64 -4, i32 0
  store i64 -1, i64* %189, align 8
  %190 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %184, i64 -3, i32 0
  store i64 -1, i64* %190, align 8
  %191 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %184, i64 -2, i32 0
  store i64 -1, i64* %191, align 8
  %192 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %184, i64 -1, i32 0
  store i64 -1, i64* %192, align 8
  %193 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %184, i64 0, i32 0
  store i64 -1, i64* %193, align 8
  %194 = icmp sgt i64 %185, 7
  br i1 %194, label %306, label %195

195:                                              ; preds = %183
  %196 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %181, i64 0, i32 0
  store i64 -1, i64* %196, align 8
  store i64 0, i64* %79, align 8
  %197 = shl i64 %157, %155
  %198 = or i64 %197, 256
  %199 = add nsw i64 %171, %158
  %200 = add nsw i64 %199, -8
  %201 = lshr i64 %198, %200
  %202 = trunc i64 %201 to i8
  %203 = getelementptr inbounds i8, i8* %172, i64 1
  store i8 %202, i8* %172, align 1
  %204 = icmp sgt i64 %200, 7
  br i1 %204, label %205, label %266

205:                                              ; preds = %195
  %206 = add nsw i64 %199, -16
  %207 = lshr i64 %198, %206
  %208 = trunc i64 %207 to i8
  %209 = getelementptr inbounds i8, i8* %172, i64 2
  store i8 %208, i8* %203, align 1
  br label %266

210:                                              ; preds = %170
  %211 = icmp slt i32 %84, %83
  br i1 %211, label %218, label %212

212:                                              ; preds = %210
  %213 = add nsw i32 %82, 1
  %214 = zext i32 %213 to i64
  %215 = shl nsw i64 -1, %214
  %216 = trunc i64 %215 to i32
  %217 = xor i32 %216, -1
  br label %266

218:                                              ; preds = %210
  %219 = icmp slt i64 %103, %87
  br i1 %219, label %266, label %220

220:                                              ; preds = %218
  %221 = add nsw i64 %95, 10001
  %222 = icmp sgt i64 %95, 8388606
  br i1 %222, label %223, label %228

223:                                              ; preds = %220
  %224 = ashr i64 %173, 8
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %231, label %226

226:                                              ; preds = %223
  %227 = sdiv i64 %103, %224
  br label %231

228:                                              ; preds = %220
  %229 = shl i64 %103, 8
  %230 = sdiv i64 %229, %173
  br label %231

231:                                              ; preds = %226, %223, %228
  %232 = phi i64 [ %230, %228 ], [ %227, %226 ], [ 2147483647, %223 ]
  %233 = load i64, i64* %79, align 8
  %234 = icmp sgt i64 %232, %233
  br i1 %234, label %265, label %235

235:                                              ; preds = %231
  %236 = load %struct.hash_t*, %struct.hash_t** %75, align 8
  %237 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %236, i64 9000
  br label %238

238:                                              ; preds = %295, %235
  %239 = phi %struct.hash_t* [ %237, %235 ], [ %305, %295 ]
  %240 = phi i64 [ 8993, %235 ], [ %296, %295 ]
  %241 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %239, i64 -7, i32 0
  store i64 -1, i64* %241, align 8
  %242 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %239, i64 -6, i32 0
  store i64 -1, i64* %242, align 8
  %243 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %239, i64 -5, i32 0
  store i64 -1, i64* %243, align 8
  %244 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %239, i64 -4, i32 0
  store i64 -1, i64* %244, align 8
  %245 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %239, i64 -3, i32 0
  store i64 -1, i64* %245, align 8
  %246 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %239, i64 -2, i32 0
  store i64 -1, i64* %246, align 8
  %247 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %239, i64 -1, i32 0
  store i64 -1, i64* %247, align 8
  %248 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %239, i64 0, i32 0
  store i64 -1, i64* %248, align 8
  %249 = icmp sgt i64 %240, 7
  br i1 %249, label %295, label %250

250:                                              ; preds = %238
  %251 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %236, i64 0, i32 0
  store i64 -1, i64* %251, align 8
  store i64 0, i64* %79, align 8
  %252 = shl i64 %157, %155
  %253 = or i64 %252, 256
  %254 = add nsw i64 %171, %158
  %255 = add nsw i64 %254, -8
  %256 = lshr i64 %253, %255
  %257 = trunc i64 %256 to i8
  %258 = getelementptr inbounds i8, i8* %172, i64 1
  store i8 %257, i8* %172, align 1
  %259 = icmp sgt i64 %255, 7
  br i1 %259, label %260, label %266

260:                                              ; preds = %250
  %261 = add nsw i64 %254, -16
  %262 = lshr i64 %253, %261
  %263 = trunc i64 %262 to i8
  %264 = getelementptr inbounds i8, i8* %172, i64 2
  store i8 %263, i8* %258, align 1
  br label %266

265:                                              ; preds = %231
  store i64 %232, i64* %79, align 8
  br label %266

266:                                              ; preds = %265, %260, %250, %195, %205, %218, %212, %137
  %267 = phi i16 [ %139, %137 ], [ %174, %212 ], [ %174, %218 ], [ %174, %205 ], [ %174, %195 ], [ %174, %250 ], [ %174, %260 ], [ %174, %265 ]
  %268 = phi i64 [ %103, %137 ], [ %103, %212 ], [ %103, %218 ], [ 0, %205 ], [ 0, %195 ], [ 0, %250 ], [ 0, %260 ], [ %103, %265 ]
  %269 = phi i64 [ %88, %137 ], [ %173, %212 ], [ %173, %218 ], [ %158, %205 ], [ %158, %195 ], [ %158, %250 ], [ %158, %260 ], [ %173, %265 ]
  %270 = phi i64 [ %87, %137 ], [ %87, %212 ], [ %87, %218 ], [ %87, %205 ], [ %87, %195 ], [ %221, %250 ], [ %221, %260 ], [ %221, %265 ]
  %271 = phi i64 [ %86, %137 ], [ %157, %212 ], [ %157, %218 ], [ %198, %205 ], [ %198, %195 ], [ %253, %250 ], [ %253, %260 ], [ %157, %265 ]
  %272 = phi i64 [ %85, %137 ], [ %171, %212 ], [ %171, %218 ], [ %206, %205 ], [ %200, %195 ], [ %255, %250 ], [ %261, %260 ], [ %171, %265 ]
  %273 = phi i32 [ %84, %137 ], [ %175, %212 ], [ %175, %218 ], [ 258, %205 ], [ 258, %195 ], [ 258, %250 ], [ 258, %260 ], [ %175, %265 ]
  %274 = phi i32 [ %83, %137 ], [ %217, %212 ], [ %83, %218 ], [ 511, %205 ], [ 511, %195 ], [ 511, %250 ], [ 511, %260 ], [ %83, %265 ]
  %275 = phi i32 [ %82, %137 ], [ %213, %212 ], [ %82, %218 ], [ 9, %205 ], [ 9, %195 ], [ 9, %250 ], [ 9, %260 ], [ %82, %265 ]
  %276 = phi i8* [ %81, %137 ], [ %172, %212 ], [ %172, %218 ], [ %209, %205 ], [ %203, %195 ], [ %258, %250 ], [ %264, %260 ], [ %172, %265 ]
  %277 = icmp sgt i64 %102, 0
  br i1 %277, label %80, label %278

278:                                              ; preds = %266, %116, %64
  %279 = phi i64 [ %69, %64 ], [ %88, %116 ], [ %269, %266 ]
  %280 = phi i64 [ %15, %64 ], [ %87, %116 ], [ %270, %266 ]
  %281 = phi i64 [ %70, %64 ], [ %86, %116 ], [ %271, %266 ]
  %282 = phi i64 [ %71, %64 ], [ %85, %116 ], [ %272, %266 ]
  %283 = phi i32 [ %22, %64 ], [ %84, %116 ], [ %273, %266 ]
  %284 = phi i32 [ %25, %64 ], [ %83, %116 ], [ %274, %266 ]
  %285 = phi i32 [ %28, %64 ], [ %82, %116 ], [ %275, %266 ]
  %286 = phi i8* [ %72, %64 ], [ %81, %116 ], [ %276, %266 ]
  %287 = phi i16 [ %67, %64 ], [ %118, %116 ], [ %267, %266 ]
  %288 = phi i64 [ %68, %64 ], [ %103, %116 ], [ %268, %266 ]
  store i64 %288, i64* %10, align 8
  store i64 %279, i64* %12, align 8
  store i64 %280, i64* %14, align 8
  %289 = zext i16 %287 to i32
  store i32 %289, i32* %33, align 8
  store i64 %281, i64* %16, align 8
  store i64 %282, i64* %18, align 8
  %290 = trunc i32 %283 to i16
  store i16 %290, i16* %20, align 4
  %291 = trunc i32 %284 to i16
  store i16 %291, i16* %23, align 2
  %292 = trunc i32 %285 to i16
  store i16 %292, i16* %26, align 8
  store i8* %286, i8** %29, align 8
  br label %293

293:                                              ; preds = %145, %4, %278
  %294 = phi i32 [ 1, %278 ], [ 0, %4 ], [ 0, %145 ]
  ret i32 %294

295:                                              ; preds = %238
  %296 = add nsw i64 %240, -16
  %297 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %239, i64 -15, i32 0
  store i64 -1, i64* %297, align 8
  %298 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %239, i64 -14, i32 0
  store i64 -1, i64* %298, align 8
  %299 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %239, i64 -13, i32 0
  store i64 -1, i64* %299, align 8
  %300 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %239, i64 -12, i32 0
  store i64 -1, i64* %300, align 8
  %301 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %239, i64 -11, i32 0
  store i64 -1, i64* %301, align 8
  %302 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %239, i64 -10, i32 0
  store i64 -1, i64* %302, align 8
  %303 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %239, i64 -9, i32 0
  store i64 -1, i64* %303, align 8
  %304 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %239, i64 -8, i32 0
  store i64 -1, i64* %304, align 8
  %305 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %239, i64 -16
  br label %238

306:                                              ; preds = %183
  %307 = add nsw i64 %185, -16
  %308 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %184, i64 -15, i32 0
  store i64 -1, i64* %308, align 8
  %309 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %184, i64 -14, i32 0
  store i64 -1, i64* %309, align 8
  %310 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %184, i64 -13, i32 0
  store i64 -1, i64* %310, align 8
  %311 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %184, i64 -12, i32 0
  store i64 -1, i64* %311, align 8
  %312 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %184, i64 -11, i32 0
  store i64 -1, i64* %312, align 8
  %313 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %184, i64 -10, i32 0
  store i64 -1, i64* %313, align 8
  %314 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %184, i64 -9, i32 0
  store i64 -1, i64* %314, align 8
  %315 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %184, i64 -8, i32 0
  store i64 -1, i64* %315, align 8
  %316 = getelementptr inbounds %struct.hash_t, %struct.hash_t* %184, i64 -16
  br label %183
}

; Function Attrs: nounwind ssp uwtable
define internal void @LZWCleanup(%struct.tiff*) #0 {
  %2 = tail call i32 @TIFFPredictorCleanup(%struct.tiff* %0) #4
  %3 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %4 = bitcast i8** %3 to %struct.LZWCodecState**
  %5 = load %struct.LZWCodecState*, %struct.LZWCodecState** %4, align 8
  %6 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %5, i64 0, i32 10
  %7 = load %struct.code_ent*, %struct.code_ent** %6, align 8
  %8 = icmp eq %struct.code_ent* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = bitcast %struct.code_ent* %7 to i8*
  tail call void @_TIFFfree(i8* nonnull %10) #4
  %11 = load %struct.LZWCodecState*, %struct.LZWCodecState** %4, align 8
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi %struct.LZWCodecState* [ %5, %1 ], [ %11, %9 ]
  %14 = bitcast %struct.LZWCodecState* %13 to i8*
  %15 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %13, i64 0, i32 17
  %16 = load %struct.hash_t*, %struct.hash_t** %15, align 8
  %17 = icmp eq %struct.hash_t* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %struct.hash_t* %16 to i8*
  tail call void @_TIFFfree(i8* nonnull %19) #4
  %20 = load i8*, i8** %3, align 8
  br label %21

21:                                               ; preds = %12, %18
  %22 = phi i8* [ %14, %12 ], [ %20, %18 ]
  tail call void @_TIFFfree(i8* %22) #4
  store i8* null, i8** %3, align 8
  tail call void @_TIFFSetDefaultCompressionState(%struct.tiff* %0) #4
  ret void
}

declare i32 @TIFFPredictorInit(%struct.tiff*) local_unnamed_addr #1

declare void @TIFFErrorExt(i8*, i8*, i8*, ...) local_unnamed_addr #1

declare void @_TIFFmemset(i8*, i32, i64) local_unnamed_addr #1

declare void @TIFFWarningExt(i8*, i8*, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @LZWDecodeCompat(%struct.tiff* nocapture, i8*, i64, i16 zeroext) #0 {
  %5 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %6 = bitcast i8** %5 to %struct.LZWCodecState**
  %7 = load %struct.LZWCodecState*, %struct.LZWCodecState** %6, align 8
  %8 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %166, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 6
  %13 = load %struct.code_ent*, %struct.code_ent** %12, align 8
  %14 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %13, i64 0, i32 1
  %15 = load i16, i16* %14, align 8
  %16 = zext i16 %15 to i64
  %17 = sub nsw i64 %16, %9
  %18 = icmp sgt i64 %17, %2
  br i1 %18, label %19, label %113

19:                                               ; preds = %11
  %20 = add nsw i64 %9, %2
  store i64 %20, i64* %8, align 8
  %21 = sub i64 %16, %9
  %22 = sub i64 %21, %2
  %23 = xor i64 %9, -1
  %24 = add i64 %23, %16
  %25 = sub i64 %24, %2
  %26 = and i64 %22, 7
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %37, label %28

28:                                               ; preds = %19, %28
  %29 = phi %struct.code_ent* [ %33, %28 ], [ %13, %19 ]
  %30 = phi i64 [ %34, %28 ], [ %17, %19 ]
  %31 = phi i64 [ %35, %28 ], [ %26, %19 ]
  %32 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %29, i64 0, i32 0
  %33 = load %struct.code_ent*, %struct.code_ent** %32, align 8
  %34 = add nsw i64 %30, -1
  %35 = add i64 %31, -1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %28, !llvm.loop !2

37:                                               ; preds = %28, %19
  %38 = phi %struct.code_ent* [ %13, %19 ], [ %33, %28 ]
  %39 = phi i64 [ %17, %19 ], [ %34, %28 ]
  %40 = phi %struct.code_ent* [ undef, %19 ], [ %33, %28 ]
  %41 = icmp ult i64 %25, 7
  br i1 %41, label %63, label %42

42:                                               ; preds = %37, %42
  %43 = phi %struct.code_ent* [ %60, %42 ], [ %38, %37 ]
  %44 = phi i64 [ %61, %42 ], [ %39, %37 ]
  %45 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %43, i64 0, i32 0
  %46 = load %struct.code_ent*, %struct.code_ent** %45, align 8
  %47 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %46, i64 0, i32 0
  %48 = load %struct.code_ent*, %struct.code_ent** %47, align 8
  %49 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %48, i64 0, i32 0
  %50 = load %struct.code_ent*, %struct.code_ent** %49, align 8
  %51 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %50, i64 0, i32 0
  %52 = load %struct.code_ent*, %struct.code_ent** %51, align 8
  %53 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %52, i64 0, i32 0
  %54 = load %struct.code_ent*, %struct.code_ent** %53, align 8
  %55 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %54, i64 0, i32 0
  %56 = load %struct.code_ent*, %struct.code_ent** %55, align 8
  %57 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %56, i64 0, i32 0
  %58 = load %struct.code_ent*, %struct.code_ent** %57, align 8
  %59 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %58, i64 0, i32 0
  %60 = load %struct.code_ent*, %struct.code_ent** %59, align 8
  %61 = add nsw i64 %44, -8
  %62 = icmp sgt i64 %61, %2
  br i1 %62, label %42, label %63

63:                                               ; preds = %42, %37
  %64 = phi %struct.code_ent* [ %40, %37 ], [ %60, %42 ]
  %65 = getelementptr inbounds i8, i8* %1, i64 %2
  %66 = add nsw i64 %2, -1
  %67 = and i64 %2, 3
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %82, label %69

69:                                               ; preds = %63, %69
  %70 = phi i64 [ %79, %69 ], [ %2, %63 ]
  %71 = phi i8* [ %76, %69 ], [ %65, %63 ]
  %72 = phi %struct.code_ent* [ %78, %69 ], [ %64, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %72, i64 0, i32 2
  %75 = load i8, i8* %74, align 2
  %76 = getelementptr inbounds i8, i8* %71, i64 -1
  store i8 %75, i8* %76, align 1
  %77 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %72, i64 0, i32 0
  %78 = load %struct.code_ent*, %struct.code_ent** %77, align 8
  %79 = add nsw i64 %70, -1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !4

82:                                               ; preds = %69, %63
  %83 = phi i64 [ %2, %63 ], [ %79, %69 ]
  %84 = phi i8* [ %65, %63 ], [ %76, %69 ]
  %85 = phi %struct.code_ent* [ %64, %63 ], [ %78, %69 ]
  %86 = icmp ult i64 %66, 3
  br i1 %86, label %497, label %87

87:                                               ; preds = %82, %87
  %88 = phi i64 [ %111, %87 ], [ %83, %82 ]
  %89 = phi i8* [ %108, %87 ], [ %84, %82 ]
  %90 = phi %struct.code_ent* [ %110, %87 ], [ %85, %82 ]
  %91 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %90, i64 0, i32 2
  %92 = load i8, i8* %91, align 2
  %93 = getelementptr inbounds i8, i8* %89, i64 -1
  store i8 %92, i8* %93, align 1
  %94 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %90, i64 0, i32 0
  %95 = load %struct.code_ent*, %struct.code_ent** %94, align 8
  %96 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %95, i64 0, i32 2
  %97 = load i8, i8* %96, align 2
  %98 = getelementptr inbounds i8, i8* %89, i64 -2
  store i8 %97, i8* %98, align 1
  %99 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %95, i64 0, i32 0
  %100 = load %struct.code_ent*, %struct.code_ent** %99, align 8
  %101 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %100, i64 0, i32 2
  %102 = load i8, i8* %101, align 2
  %103 = getelementptr inbounds i8, i8* %89, i64 -3
  store i8 %102, i8* %103, align 1
  %104 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %100, i64 0, i32 0
  %105 = load %struct.code_ent*, %struct.code_ent** %104, align 8
  %106 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %105, i64 0, i32 2
  %107 = load i8, i8* %106, align 2
  %108 = getelementptr inbounds i8, i8* %89, i64 -4
  store i8 %107, i8* %108, align 1
  %109 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %105, i64 0, i32 0
  %110 = load %struct.code_ent*, %struct.code_ent** %109, align 8
  %111 = add nsw i64 %88, -4
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %497, label %87

113:                                              ; preds = %11
  %114 = getelementptr inbounds i8, i8* %1, i64 %17
  %115 = sub i64 %16, %9
  %116 = xor i64 %9, -1
  %117 = add i64 %116, %16
  %118 = and i64 %115, 3
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %133, label %120

120:                                              ; preds = %113, %120
  %121 = phi i8* [ %127, %120 ], [ %114, %113 ]
  %122 = phi %struct.code_ent* [ %129, %120 ], [ %13, %113 ]
  %123 = phi i64 [ %130, %120 ], [ %17, %113 ]
  %124 = phi i64 [ %131, %120 ], [ %118, %113 ]
  %125 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %122, i64 0, i32 2
  %126 = load i8, i8* %125, align 2
  %127 = getelementptr inbounds i8, i8* %121, i64 -1
  store i8 %126, i8* %127, align 1
  %128 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %122, i64 0, i32 0
  %129 = load %struct.code_ent*, %struct.code_ent** %128, align 8
  %130 = add nsw i64 %123, -1
  %131 = add i64 %124, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %120, !llvm.loop !5

133:                                              ; preds = %120, %113
  %134 = phi i8* [ %114, %113 ], [ %127, %120 ]
  %135 = phi %struct.code_ent* [ %13, %113 ], [ %129, %120 ]
  %136 = phi i64 [ %17, %113 ], [ %130, %120 ]
  %137 = icmp ult i64 %117, 3
  br i1 %137, label %164, label %138

138:                                              ; preds = %133, %138
  %139 = phi i8* [ %159, %138 ], [ %134, %133 ]
  %140 = phi %struct.code_ent* [ %161, %138 ], [ %135, %133 ]
  %141 = phi i64 [ %162, %138 ], [ %136, %133 ]
  %142 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %140, i64 0, i32 2
  %143 = load i8, i8* %142, align 2
  %144 = getelementptr inbounds i8, i8* %139, i64 -1
  store i8 %143, i8* %144, align 1
  %145 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %140, i64 0, i32 0
  %146 = load %struct.code_ent*, %struct.code_ent** %145, align 8
  %147 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %146, i64 0, i32 2
  %148 = load i8, i8* %147, align 2
  %149 = getelementptr inbounds i8, i8* %139, i64 -2
  store i8 %148, i8* %149, align 1
  %150 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %146, i64 0, i32 0
  %151 = load %struct.code_ent*, %struct.code_ent** %150, align 8
  %152 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %151, i64 0, i32 2
  %153 = load i8, i8* %152, align 2
  %154 = getelementptr inbounds i8, i8* %139, i64 -3
  store i8 %153, i8* %154, align 1
  %155 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %151, i64 0, i32 0
  %156 = load %struct.code_ent*, %struct.code_ent** %155, align 8
  %157 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %156, i64 0, i32 2
  %158 = load i8, i8* %157, align 2
  %159 = getelementptr inbounds i8, i8* %139, i64 -4
  store i8 %158, i8* %159, align 1
  %160 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %156, i64 0, i32 0
  %161 = load %struct.code_ent*, %struct.code_ent** %160, align 8
  %162 = add nsw i64 %141, -4
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %138

164:                                              ; preds = %138, %133
  %165 = sub nsw i64 %2, %17
  store i64 0, i64* %8, align 8
  br label %166

166:                                              ; preds = %164, %4
  %167 = phi i8* [ %1, %4 ], [ %114, %164 ]
  %168 = phi i64 [ %2, %4 ], [ %165, %164 ]
  %169 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %170 = load i8*, i8** %169, align 8
  %171 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 4
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %172, %174
  %176 = shl i64 %175, 3
  %177 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 3
  %178 = load i64, i64* %177, align 8
  %179 = add i64 %176, %178
  store i64 %179, i64* %177, align 8
  %180 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 0, i32 1
  %181 = load i16, i16* %180, align 8
  %182 = zext i16 %181 to i32
  %183 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 0, i32 4
  %184 = load i64, i64* %183, align 8
  %185 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 0, i32 5
  %186 = load i64, i64* %185, align 8
  %187 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 1
  %188 = load i64, i64* %187, align 8
  %189 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 7
  %190 = load %struct.code_ent*, %struct.code_ent** %189, align 8
  %191 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 8
  %192 = load %struct.code_ent*, %struct.code_ent** %191, align 8
  %193 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 9
  %194 = load %struct.code_ent*, %struct.code_ent** %193, align 8
  %195 = icmp sgt i64 %168, 0
  br i1 %195, label %196, label %474

196:                                              ; preds = %166
  %197 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 10
  %198 = zext i16 %181 to i64
  %199 = icmp ult i64 %179, %198
  br i1 %199, label %200, label %214

200:                                              ; preds = %324, %196
  %201 = phi %struct.code_ent* [ %190, %196 ], [ %322, %324 ]
  %202 = phi %struct.code_ent* [ %194, %196 ], [ %321, %324 ]
  %203 = phi %struct.code_ent* [ %192, %196 ], [ %320, %324 ]
  %204 = phi i64 [ %188, %196 ], [ %319, %324 ]
  %205 = phi i64 [ %184, %196 ], [ %318, %324 ]
  %206 = phi i64 [ %186, %196 ], [ %317, %324 ]
  %207 = phi i32 [ %182, %196 ], [ %316, %324 ]
  %208 = phi i8* [ %170, %196 ], [ %315, %324 ]
  %209 = phi i64 [ %168, %196 ], [ %314, %324 ]
  %210 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %211 = load i8*, i8** %210, align 8
  %212 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 15
  %213 = load i32, i32* %212, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %211, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @LZWDecodeCompat.module, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0), i32 %213) #4
  br label %474

214:                                              ; preds = %196, %324
  %215 = phi i64 [ %326, %324 ], [ %198, %196 ]
  %216 = phi i8* [ %313, %324 ], [ %167, %196 ]
  %217 = phi i64 [ %314, %324 ], [ %168, %196 ]
  %218 = phi i8* [ %315, %324 ], [ %170, %196 ]
  %219 = phi i32 [ %316, %324 ], [ %182, %196 ]
  %220 = phi i64 [ %317, %324 ], [ %186, %196 ]
  %221 = phi i64 [ %318, %324 ], [ %184, %196 ]
  %222 = phi i64 [ %319, %324 ], [ %188, %196 ]
  %223 = phi %struct.code_ent* [ %320, %324 ], [ %192, %196 ]
  %224 = phi %struct.code_ent* [ %321, %324 ], [ %194, %196 ]
  %225 = phi %struct.code_ent* [ %322, %324 ], [ %190, %196 ]
  %226 = phi i64 [ %325, %324 ], [ %179, %196 ]
  %227 = getelementptr inbounds i8, i8* %218, i64 1
  %228 = load i8, i8* %218, align 1
  %229 = zext i8 %228 to i64
  %230 = shl i64 %229, %220
  %231 = or i64 %230, %221
  %232 = add nsw i64 %220, 8
  %233 = icmp slt i64 %232, %215
  br i1 %233, label %234, label %241

234:                                              ; preds = %214
  %235 = getelementptr inbounds i8, i8* %218, i64 2
  %236 = load i8, i8* %227, align 1
  %237 = zext i8 %236 to i64
  %238 = shl i64 %237, %232
  %239 = or i64 %238, %231
  %240 = add nsw i64 %220, 16
  br label %241

241:                                              ; preds = %214, %234
  %242 = phi i8* [ %235, %234 ], [ %227, %214 ]
  %243 = phi i64 [ %240, %234 ], [ %232, %214 ]
  %244 = phi i64 [ %239, %234 ], [ %231, %214 ]
  %245 = and i64 %244, %222
  %246 = trunc i64 %245 to i32
  %247 = and i32 %246, 65535
  %248 = zext i32 %219 to i64
  %249 = ashr i64 %244, %248
  %250 = sub nsw i64 %243, %215
  %251 = sub i64 %226, %215
  store i64 %251, i64* %177, align 8
  %252 = trunc i64 %245 to i16
  switch i16 %252, label %328 [
    i16 257, label %474
    i16 256, label %253
  ]

253:                                              ; preds = %241
  %254 = load %struct.code_ent*, %struct.code_ent** %197, align 8
  br label %255

255:                                              ; preds = %253, %286
  %256 = phi %struct.code_ent* [ %262, %286 ], [ %254, %253 ]
  %257 = phi i8* [ %287, %286 ], [ %242, %253 ]
  %258 = phi i64 [ %293, %286 ], [ %250, %253 ]
  %259 = phi i64 [ %292, %286 ], [ %249, %253 ]
  %260 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %256, i64 258
  %261 = bitcast %struct.code_ent* %260 to i8*
  tail call void @_TIFFmemset(i8* %261, i32 0, i64 77776) #4
  %262 = load %struct.code_ent*, %struct.code_ent** %197, align 8
  %263 = load i64, i64* %177, align 8
  %264 = icmp ult i64 %263, 9
  br i1 %264, label %265, label %271

265:                                              ; preds = %255
  %266 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %262, i64 511
  %267 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %268 = load i8*, i8** %267, align 8
  %269 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 15
  %270 = load i32, i32* %269, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %268, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @LZWDecodeCompat.module, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0), i32 %270) #4
  br label %474

271:                                              ; preds = %255
  %272 = getelementptr inbounds i8, i8* %257, i64 1
  %273 = load i8, i8* %257, align 1
  %274 = zext i8 %273 to i64
  %275 = shl i64 %274, %258
  %276 = or i64 %275, %259
  %277 = add nsw i64 %258, 8
  %278 = icmp slt i64 %277, 9
  br i1 %278, label %279, label %286

279:                                              ; preds = %271
  %280 = getelementptr inbounds i8, i8* %257, i64 2
  %281 = load i8, i8* %272, align 1
  %282 = zext i8 %281 to i64
  %283 = shl i64 %282, %277
  %284 = or i64 %283, %276
  %285 = add nsw i64 %258, 16
  br label %286

286:                                              ; preds = %271, %279
  %287 = phi i8* [ %280, %279 ], [ %272, %271 ]
  %288 = phi i64 [ %285, %279 ], [ %277, %271 ]
  %289 = phi i64 [ %284, %279 ], [ %276, %271 ]
  %290 = trunc i64 %289 to i32
  %291 = and i32 %290, 511
  %292 = ashr i64 %289, 9
  %293 = add nsw i64 %288, -9
  %294 = add i64 %263, -9
  store i64 %294, i64* %177, align 8
  switch i32 %291, label %295 [
    i32 256, label %255
    i32 257, label %472
  ]

295:                                              ; preds = %286
  %296 = icmp ugt i32 %291, 256
  br i1 %296, label %297, label %304

297:                                              ; preds = %295
  %298 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %299 = load i8*, i8** %298, align 8
  %300 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 0
  %301 = load i8*, i8** %300, align 8
  %302 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 13
  %303 = load i32, i32* %302, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %299, i8* %301, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i64 0, i64 0), i32 %303) #4
  br label %497

304:                                              ; preds = %295
  %305 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %262, i64 511
  %306 = trunc i64 %289 to i8
  %307 = getelementptr inbounds i8, i8* %216, i64 1
  store i8 %306, i8* %216, align 1
  %308 = add nsw i64 %217, -1
  %309 = load %struct.code_ent*, %struct.code_ent** %197, align 8
  %310 = zext i32 %291 to i64
  %311 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %309, i64 %310
  br label %312

312:                                              ; preds = %466, %468, %304
  %313 = phi i8* [ %307, %304 ], [ %454, %466 ], [ %470, %468 ]
  %314 = phi i64 [ %308, %304 ], [ %467, %466 ], [ %471, %468 ]
  %315 = phi i8* [ %287, %304 ], [ %242, %466 ], [ %242, %468 ]
  %316 = phi i32 [ 9, %304 ], [ %378, %466 ], [ %378, %468 ]
  %317 = phi i64 [ %293, %304 ], [ %250, %466 ], [ %250, %468 ]
  %318 = phi i64 [ %292, %304 ], [ %249, %466 ], [ %249, %468 ]
  %319 = phi i64 [ 511, %304 ], [ %379, %466 ], [ %379, %468 ]
  %320 = phi %struct.code_ent* [ %260, %304 ], [ %366, %466 ], [ %366, %468 ]
  %321 = phi %struct.code_ent* [ %305, %304 ], [ %380, %466 ], [ %380, %468 ]
  %322 = phi %struct.code_ent* [ %311, %304 ], [ %331, %466 ], [ %331, %468 ]
  %323 = icmp sgt i64 %314, 0
  br i1 %323, label %324, label %474

324:                                              ; preds = %312
  %325 = load i64, i64* %177, align 8
  %326 = sext i32 %316 to i64
  %327 = icmp ult i64 %325, %326
  br i1 %327, label %200, label %214

328:                                              ; preds = %241
  %329 = load %struct.code_ent*, %struct.code_ent** %197, align 8
  %330 = zext i32 %247 to i64
  %331 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %329, i64 %330
  %332 = icmp uge %struct.code_ent* %223, %329
  %333 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %329, i64 5119
  %334 = icmp ult %struct.code_ent* %223, %333
  %335 = and i1 %332, %334
  br i1 %335, label %341, label %336

336:                                              ; preds = %328
  %337 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %338 = load i8*, i8** %337, align 8
  %339 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 13
  %340 = load i32, i32* %339, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %338, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @LZWDecodeCompat.module, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.5, i64 0, i64 0), i32 %340) #4
  br label %497

341:                                              ; preds = %328
  %342 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %223, i64 0, i32 0
  store %struct.code_ent* %225, %struct.code_ent** %342, align 8
  %343 = load %struct.code_ent*, %struct.code_ent** %197, align 8
  %344 = icmp uge %struct.code_ent* %225, %343
  %345 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %343, i64 5119
  %346 = icmp ult %struct.code_ent* %225, %345
  %347 = and i1 %344, %346
  br i1 %347, label %353, label %348

348:                                              ; preds = %341
  %349 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %350 = load i8*, i8** %349, align 8
  %351 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 13
  %352 = load i32, i32* %351, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %350, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @LZWDecodeCompat.module, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.5, i64 0, i64 0), i32 %352) #4
  br label %497

353:                                              ; preds = %341
  %354 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %225, i64 0, i32 3
  %355 = load i8, i8* %354, align 1
  %356 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %223, i64 0, i32 3
  store i8 %355, i8* %356, align 1
  %357 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %225, i64 0, i32 1
  %358 = load i16, i16* %357, align 8
  %359 = add i16 %358, 1
  %360 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %223, i64 0, i32 1
  store i16 %359, i16* %360, align 8
  %361 = icmp ult %struct.code_ent* %331, %223
  %362 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %329, i64 %330, i32 3
  %363 = select i1 %361, i8* %362, i8* %356
  %364 = load i8, i8* %363, align 1
  %365 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %223, i64 0, i32 2
  store i8 %364, i8* %365, align 2
  %366 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %223, i64 1
  %367 = icmp ugt %struct.code_ent* %366, %224
  br i1 %367, label %368, label %377

368:                                              ; preds = %353
  %369 = icmp slt i32 %219, 11
  %370 = select i1 %369, i32 %219, i32 11
  %371 = add nsw i32 %370, 1
  %372 = zext i32 %371 to i64
  %373 = shl nsw i64 -1, %372
  %374 = xor i64 %373, -1
  %375 = load %struct.code_ent*, %struct.code_ent** %197, align 8
  %376 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %375, i64 %374
  br label %377

377:                                              ; preds = %368, %353
  %378 = phi i32 [ %371, %368 ], [ %219, %353 ]
  %379 = phi i64 [ %374, %368 ], [ %222, %353 ]
  %380 = phi %struct.code_ent* [ %376, %368 ], [ %224, %353 ]
  %381 = icmp ugt i32 %247, 255
  br i1 %381, label %382, label %468

382:                                              ; preds = %377
  %383 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %329, i64 %330, i32 1
  %384 = load i16, i16* %383, align 8
  %385 = icmp eq i16 %384, 0
  br i1 %385, label %386, label %391

386:                                              ; preds = %382
  %387 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %388 = load i8*, i8** %387, align 8
  %389 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 13
  %390 = load i32, i32* %389, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %388, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @LZWDecodeCompat.module, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.6, i64 0, i64 0), i32 %390) #4
  br label %497

391:                                              ; preds = %382
  %392 = zext i16 %384 to i64
  %393 = icmp slt i64 %217, %392
  br i1 %393, label %394, label %453

394:                                              ; preds = %391
  %395 = getelementptr inbounds %struct.LZWCodecState, %struct.LZWCodecState* %7, i64 0, i32 6
  store %struct.code_ent* %331, %struct.code_ent** %395, align 8
  br label %396

396:                                              ; preds = %396, %394
  %397 = phi %struct.code_ent* [ %331, %394 ], [ %399, %396 ]
  %398 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %397, i64 0, i32 0
  %399 = load %struct.code_ent*, %struct.code_ent** %398, align 8
  %400 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %399, i64 0, i32 1
  %401 = load i16, i16* %400, align 8
  %402 = zext i16 %401 to i64
  %403 = icmp slt i64 %217, %402
  br i1 %403, label %396, label %404

404:                                              ; preds = %396
  store i64 %217, i64* %8, align 8
  %405 = getelementptr inbounds i8, i8* %216, i64 %217
  %406 = add nsw i64 %217, -1
  %407 = and i64 %217, 3
  %408 = icmp eq i64 %407, 0
  br i1 %408, label %422, label %409

409:                                              ; preds = %404, %409
  %410 = phi i64 [ %419, %409 ], [ %217, %404 ]
  %411 = phi i8* [ %416, %409 ], [ %405, %404 ]
  %412 = phi %struct.code_ent* [ %418, %409 ], [ %399, %404 ]
  %413 = phi i64 [ %420, %409 ], [ %407, %404 ]
  %414 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %412, i64 0, i32 2
  %415 = load i8, i8* %414, align 2
  %416 = getelementptr inbounds i8, i8* %411, i64 -1
  store i8 %415, i8* %416, align 1
  %417 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %412, i64 0, i32 0
  %418 = load %struct.code_ent*, %struct.code_ent** %417, align 8
  %419 = add nsw i64 %410, -1
  %420 = add i64 %413, -1
  %421 = icmp eq i64 %420, 0
  br i1 %421, label %422, label %409, !llvm.loop !6

422:                                              ; preds = %409, %404
  %423 = phi i64 [ %217, %404 ], [ %419, %409 ]
  %424 = phi i8* [ %405, %404 ], [ %416, %409 ]
  %425 = phi %struct.code_ent* [ %399, %404 ], [ %418, %409 ]
  %426 = icmp ult i64 %406, 3
  br i1 %426, label %474, label %427

427:                                              ; preds = %422, %427
  %428 = phi i64 [ %451, %427 ], [ %423, %422 ]
  %429 = phi i8* [ %448, %427 ], [ %424, %422 ]
  %430 = phi %struct.code_ent* [ %450, %427 ], [ %425, %422 ]
  %431 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %430, i64 0, i32 2
  %432 = load i8, i8* %431, align 2
  %433 = getelementptr inbounds i8, i8* %429, i64 -1
  store i8 %432, i8* %433, align 1
  %434 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %430, i64 0, i32 0
  %435 = load %struct.code_ent*, %struct.code_ent** %434, align 8
  %436 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %435, i64 0, i32 2
  %437 = load i8, i8* %436, align 2
  %438 = getelementptr inbounds i8, i8* %429, i64 -2
  store i8 %437, i8* %438, align 1
  %439 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %435, i64 0, i32 0
  %440 = load %struct.code_ent*, %struct.code_ent** %439, align 8
  %441 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %440, i64 0, i32 2
  %442 = load i8, i8* %441, align 2
  %443 = getelementptr inbounds i8, i8* %429, i64 -3
  store i8 %442, i8* %443, align 1
  %444 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %440, i64 0, i32 0
  %445 = load %struct.code_ent*, %struct.code_ent** %444, align 8
  %446 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %445, i64 0, i32 2
  %447 = load i8, i8* %446, align 2
  %448 = getelementptr inbounds i8, i8* %429, i64 -4
  store i8 %447, i8* %448, align 1
  %449 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %445, i64 0, i32 0
  %450 = load %struct.code_ent*, %struct.code_ent** %449, align 8
  %451 = add nsw i64 %428, -4
  %452 = icmp eq i64 %451, 0
  br i1 %452, label %474, label %427

453:                                              ; preds = %391
  %454 = getelementptr inbounds i8, i8* %216, i64 %392
  br label %455

455:                                              ; preds = %455, %453
  %456 = phi i8* [ %454, %453 ], [ %458, %455 ]
  %457 = phi %struct.code_ent* [ %331, %453 ], [ %462, %455 ]
  %458 = getelementptr inbounds i8, i8* %456, i64 -1
  %459 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %457, i64 0, i32 2
  %460 = load i8, i8* %459, align 2
  %461 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %457, i64 0, i32 0
  %462 = load %struct.code_ent*, %struct.code_ent** %461, align 8
  store i8 %460, i8* %458, align 1
  %463 = icmp ne %struct.code_ent* %462, null
  %464 = icmp ugt i8* %458, %216
  %465 = and i1 %464, %463
  br i1 %465, label %455, label %466

466:                                              ; preds = %455
  %467 = sub nsw i64 %217, %392
  br label %312

468:                                              ; preds = %377
  %469 = trunc i64 %245 to i8
  %470 = getelementptr inbounds i8, i8* %216, i64 1
  store i8 %469, i8* %216, align 1
  %471 = add nsw i64 %217, -1
  br label %312

472:                                              ; preds = %286
  %473 = getelementptr inbounds %struct.code_ent, %struct.code_ent* %262, i64 511
  br label %474

474:                                              ; preds = %312, %241, %422, %427, %166, %472, %265, %200
  %475 = phi i64 [ %209, %200 ], [ %217, %265 ], [ %217, %472 ], [ %168, %166 ], [ 0, %427 ], [ 0, %422 ], [ %314, %312 ], [ %217, %241 ]
  %476 = phi i8* [ %208, %200 ], [ %257, %265 ], [ %287, %472 ], [ %170, %166 ], [ %242, %427 ], [ %242, %422 ], [ %315, %312 ], [ %242, %241 ]
  %477 = phi i32 [ %207, %200 ], [ 9, %265 ], [ 9, %472 ], [ %182, %166 ], [ %378, %427 ], [ %378, %422 ], [ %316, %312 ], [ %219, %241 ]
  %478 = phi i64 [ %206, %200 ], [ %258, %265 ], [ %293, %472 ], [ %186, %166 ], [ %250, %427 ], [ %250, %422 ], [ %317, %312 ], [ %250, %241 ]
  %479 = phi i64 [ %205, %200 ], [ %259, %265 ], [ %292, %472 ], [ %184, %166 ], [ %249, %427 ], [ %249, %422 ], [ %318, %312 ], [ %249, %241 ]
  %480 = phi i64 [ %204, %200 ], [ 511, %265 ], [ 511, %472 ], [ %188, %166 ], [ %379, %427 ], [ %379, %422 ], [ %319, %312 ], [ %222, %241 ]
  %481 = phi %struct.code_ent* [ %203, %200 ], [ %260, %265 ], [ %260, %472 ], [ %192, %166 ], [ %366, %427 ], [ %366, %422 ], [ %320, %312 ], [ %223, %241 ]
  %482 = phi %struct.code_ent* [ %202, %200 ], [ %266, %265 ], [ %473, %472 ], [ %194, %166 ], [ %380, %427 ], [ %380, %422 ], [ %321, %312 ], [ %224, %241 ]
  %483 = phi %struct.code_ent* [ %201, %200 ], [ %225, %265 ], [ %225, %472 ], [ %190, %166 ], [ %331, %427 ], [ %331, %422 ], [ %322, %312 ], [ %225, %241 ]
  %484 = bitcast i8** %169 to i64*
  %485 = load i64, i64* %484, align 8
  %486 = ptrtoint i8* %476 to i64
  %487 = load i64, i64* %171, align 8
  %488 = sub i64 %485, %486
  %489 = add i64 %487, %488
  store i64 %489, i64* %171, align 8
  store i8* %476, i8** %169, align 8
  store i64 %489, i64* %173, align 8
  %490 = trunc i32 %477 to i16
  store i16 %490, i16* %180, align 8
  store i64 %479, i64* %183, align 8
  store i64 %478, i64* %185, align 8
  store i64 %480, i64* %187, align 8
  store %struct.code_ent* %483, %struct.code_ent** %189, align 8
  store %struct.code_ent* %481, %struct.code_ent** %191, align 8
  store %struct.code_ent* %482, %struct.code_ent** %193, align 8
  %491 = icmp sgt i64 %475, 0
  br i1 %491, label %492, label %497

492:                                              ; preds = %474
  %493 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %494 = load i8*, i8** %493, align 8
  %495 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 13
  %496 = load i32, i32* %495, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %494, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @LZWDecodeCompat.module, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.7, i64 0, i64 0), i32 %496, i64 %475) #4
  br label %497

497:                                              ; preds = %82, %87, %474, %492, %386, %348, %336, %297
  %498 = phi i32 [ 0, %492 ], [ 0, %297 ], [ 0, %336 ], [ 0, %348 ], [ 0, %386 ], [ 1, %474 ], [ 1, %87 ], [ 1, %82 ]
  ret i32 %498
}

declare i32 @TIFFFlushData1(%struct.tiff*) local_unnamed_addr #1

declare i32 @TIFFPredictorCleanup(%struct.tiff*) local_unnamed_addr #1

declare void @_TIFFfree(i8*) local_unnamed_addr #1

declare void @_TIFFSetDefaultCompressionState(%struct.tiff*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
