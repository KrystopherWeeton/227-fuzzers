; ModuleID = '../../components/viz/common/quads/compositor_frame_metadata.cc'
source_filename = "../../components/viz/common/quads/compositor_frame_metadata.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Vector2dF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"*, %"class.std::__1::__compressed_pair.3" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.0" }
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.ui::LatencyInfo"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.10" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional", %"class.viz::SurfaceId" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.viz::SurfaceRange"* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.viz::SurfaceId"* }
%"class.viz::FrameDeadline" = type <{ %"class.base::TimeTicks", i32, [4 x i8], %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.viz::BeginFrameAck" = type <{ %"struct.viz::BeginFrameId", i64, i8, [7 x i8] }>
%"struct.viz::BeginFrameId" = type { i64, i64 }
%union.anon.26 = type { float }
%union.anon.31 = type { %"class.base::TimeDelta" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.gfx::PointF" = type { float, float }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.viz::CompositorFrameTransitionDirective"*, %"class.viz::CompositorFrameTransitionDirective"*, %"class.std::__1::__compressed_pair.44" }
%"class.viz::CompositorFrameTransitionDirective" = type { i32, i32, i32, %"class.std::__1::vector.37" }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.util::IdType"*, %"class.util::IdType"*, %"class.std::__1::__compressed_pair.39" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.util::IdType"* }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.viz::CompositorFrameTransitionDirective"* }
%"class.viz::CompositorFrameMetadata" = type { float, %"class.gfx::Vector2dF", float, %"class.gfx::SizeF", i8, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.8", %"class.std::__1::vector.15", %"class.viz::FrameDeadline", %"struct.viz::BeginFrameAck", i32, i8, float, %"class.absl::optional.22", %"class.absl::optional.27", i32, %"class.std::__1::unique_ptr", %"class.std::__1::vector.35" }
%"class.absl::optional.22" = type { %"class.absl::optional_internal::optional_data.23" }
%"class.absl::optional_internal::optional_data.23" = type { %"class.absl::optional_internal::optional_data_base.24" }
%"class.absl::optional_internal::optional_data_base.24" = type { %"class.absl::optional_internal::optional_data_dtor_base.25" }
%"class.absl::optional_internal::optional_data_dtor_base.25" = type { i8, %union.anon.26 }
%"class.absl::optional.27" = type { %"class.absl::optional_internal::optional_data.28" }
%"class.absl::optional_internal::optional_data.28" = type { %"class.absl::optional_internal::optional_data_base.29" }
%"class.absl::optional_internal::optional_data_base.29" = type { %"class.absl::optional_internal::optional_data_dtor_base.30" }
%"class.absl::optional_internal::optional_data_dtor_base.30" = type { i8, %union.anon.31 }
%"class.std::__1::__vector_base_common" = type { i8 }

@__const._ZNK3viz23CompositorFrameMetadata5CloneEv.metadata = private unnamed_addr constant { float, %"class.gfx::Vector2dF", float, %"class.gfx::SizeF", i8, i8, i8, [1 x i8], i32, %"class.std::__1::vector", %"class.std::__1::vector.8", %"class.std::__1::vector.15", %"class.viz::FrameDeadline", %"struct.viz::BeginFrameAck", i32, i8, [3 x i8], float, { { { { i8, [3 x i8], %union.anon.26 } } } }, [4 x i8], { { { { i8, [7 x i8], %union.anon.31 } } } }, i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::vector.35" } { float 0xFFFFFFFFE0000000, %"class.gfx::Vector2dF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, %"class.gfx::SizeF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766, %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"class.ui::LatencyInfo"* inttoptr (i64 -6148914691236517206 to %"class.ui::LatencyInfo"*), %"class.ui::LatencyInfo"* inttoptr (i64 -6148914691236517206 to %"class.ui::LatencyInfo"*), %"class.std::__1::__compressed_pair.3" { %"struct.std::__1::__compressed_pair_elem.4" { %"class.ui::LatencyInfo"* inttoptr (i64 -6148914691236517206 to %"class.ui::LatencyInfo"*) } } } }, %"class.std::__1::vector.8" { %"class.std::__1::__vector_base.9" { %"class.viz::SurfaceRange"* inttoptr (i64 -6148914691236517206 to %"class.viz::SurfaceRange"*), %"class.viz::SurfaceRange"* inttoptr (i64 -6148914691236517206 to %"class.viz::SurfaceRange"*), %"class.std::__1::__compressed_pair.10" { %"struct.std::__1::__compressed_pair_elem.11" { %"class.viz::SurfaceRange"* inttoptr (i64 -6148914691236517206 to %"class.viz::SurfaceRange"*) } } } }, %"class.std::__1::vector.15" { %"class.std::__1::__vector_base.16" { %"class.viz::SurfaceId"* inttoptr (i64 -6148914691236517206 to %"class.viz::SurfaceId"*), %"class.viz::SurfaceId"* inttoptr (i64 -6148914691236517206 to %"class.viz::SurfaceId"*), %"class.std::__1::__compressed_pair.17" { %"struct.std::__1::__compressed_pair_elem.18" { %"class.viz::SurfaceId"* inttoptr (i64 -6148914691236517206 to %"class.viz::SurfaceId"*) } } } }, %"class.viz::FrameDeadline" <{ %"class.base::TimeTicks" { %"class.base::time_internal::TimeBase" { i64 -6148914691236517206 } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.base::TimeDelta" { i64 -6148914691236517206 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %"struct.viz::BeginFrameAck" <{ %"struct.viz::BeginFrameId" { i64 -6148914691236517206, i64 -6148914691236517206 }, i64 -6148914691236517206, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", float 0xFFFFFFFFE0000000, { { { { i8, [3 x i8], %union.anon.26 } } } } { { { { i8, [3 x i8], %union.anon.26 } } } { { { i8, [3 x i8], %union.anon.26 } } { { i8, [3 x i8], %union.anon.26 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.26 { float 0xFFFFFFFFE0000000 } } } } }, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.31 } } } } { { { { i8, [7 x i8], %union.anon.31 } } } { { { i8, [7 x i8], %union.anon.31 } } { { i8, [7 x i8], %union.anon.31 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.31 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.32" { %"struct.std::__1::__compressed_pair_elem.33" { %"class.gfx::DelegatedInkMetadata"* inttoptr (i64 -6148914691236517206 to %"class.gfx::DelegatedInkMetadata"*) } } }, %"class.std::__1::vector.35" { %"class.std::__1::__vector_base.36" { %"class.viz::CompositorFrameTransitionDirective"* inttoptr (i64 -6148914691236517206 to %"class.viz::CompositorFrameTransitionDirective"*), %"class.viz::CompositorFrameTransitionDirective"* inttoptr (i64 -6148914691236517206 to %"class.viz::CompositorFrameTransitionDirective"*), %"class.std::__1::__compressed_pair.44" { %"struct.std::__1::__compressed_pair_elem.45" { %"class.viz::CompositorFrameTransitionDirective"* inttoptr (i64 -6148914691236517206 to %"class.viz::CompositorFrameTransitionDirective"*) } } } } }, align 8

@_ZN3viz23CompositorFrameMetadataC1Ev = hidden unnamed_addr alias void (%"class.viz::CompositorFrameMetadata"*), void (%"class.viz::CompositorFrameMetadata"*)* @_ZN3viz23CompositorFrameMetadataC2Ev
@_ZN3viz23CompositorFrameMetadataC1EOS0_ = hidden unnamed_addr alias void (%"class.viz::CompositorFrameMetadata"*, %"class.viz::CompositorFrameMetadata"*), void (%"class.viz::CompositorFrameMetadata"*, %"class.viz::CompositorFrameMetadata"*)* @_ZN3viz23CompositorFrameMetadataC2EOS0_
@_ZN3viz23CompositorFrameMetadataD1Ev = hidden unnamed_addr alias void (%"class.viz::CompositorFrameMetadata"*), void (%"class.viz::CompositorFrameMetadata"*)* @_ZN3viz23CompositorFrameMetadataD2Ev
@_ZN3viz23CompositorFrameMetadataC1ERKS0_ = hidden unnamed_addr alias void (%"class.viz::CompositorFrameMetadata"*, %"class.viz::CompositorFrameMetadata"*), void (%"class.viz::CompositorFrameMetadata"*, %"class.viz::CompositorFrameMetadata"*)* @_ZN3viz23CompositorFrameMetadataC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz23CompositorFrameMetadataC2Ev(%"class.viz::CompositorFrameMetadata"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 7
  %3 = bitcast %"class.viz::CompositorFrameMetadata"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 27, i1 false)
  store i32 -1, i32* %2, align 4
  %4 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 8
  %5 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 11, i32 3, i32 0
  %6 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 84, i1 false)
  store i64 16666, i64* %5, align 8
  %7 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 11, i32 4
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 12, i32 0
  tail call void @_ZN3viz12BeginFrameIdC1Ev(%"struct.viz::BeginFrameId"* %8) #7
  %9 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 12, i32 1
  store i64 -1, i64* %9, align 8
  %10 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 12, i32 2
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 13
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 14
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 15
  store float 0.000000e+00, float* %13, align 8
  %14 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 18
  store i32 1, i32* %16, align 8
  %17 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 19
  %18 = bitcast %"class.std::__1::unique_ptr"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz23CompositorFrameMetadataC2EOS0_(%"class.viz::CompositorFrameMetadata"*, %"class.viz::CompositorFrameMetadata"* dereferenceable(248)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::CompositorFrameMetadata"* %0 to i8*
  %4 = bitcast %"class.viz::CompositorFrameMetadata"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false)
  %5 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 8
  %6 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 8
  %7 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #7
  %8 = bitcast %"class.std::__1::vector"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %5 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 8, i32 0, i32 1
  %12 = bitcast %"class.ui::LatencyInfo"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 8, i32 0, i32 1
  %15 = bitcast %"class.ui::LatencyInfo"** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.ui::LatencyInfo"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.ui::LatencyInfo"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #7
  %22 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 9
  %23 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 9
  %24 = bitcast %"class.std::__1::vector.8"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #7
  %25 = bitcast %"class.std::__1::vector.8"* %23 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::vector.8"* %22 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 9, i32 0, i32 1
  %29 = bitcast %"class.viz::SurfaceRange"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 9, i32 0, i32 1
  %32 = bitcast %"class.viz::SurfaceRange"** %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast %"class.viz::SurfaceRange"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"class.viz::SurfaceRange"** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast %"class.std::__1::vector.8"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #7
  %39 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 10
  %40 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 10
  %41 = bitcast %"class.std::__1::vector.15"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #7
  %42 = bitcast %"class.std::__1::vector.15"* %40 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::vector.15"* %39 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 10, i32 0, i32 1
  %46 = bitcast %"class.viz::SurfaceId"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 10, i32 0, i32 1
  %49 = bitcast %"class.viz::SurfaceId"** %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %51 = bitcast %"class.viz::SurfaceId"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %54 = bitcast %"class.viz::SurfaceId"** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast %"class.std::__1::vector.15"* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #7
  %56 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 11
  %57 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 11
  %58 = bitcast %"class.viz::FrameDeadline"* %56 to i8*
  %59 = bitcast %"class.viz::FrameDeadline"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 32, i1 false)
  %60 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 12, i32 0
  %61 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 12, i32 0
  tail call void @_ZN3viz12BeginFrameIdC1ERKS0_(%"struct.viz::BeginFrameId"* %60, %"struct.viz::BeginFrameId"* dereferenceable(16) %61) #7
  %62 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 12, i32 1
  %63 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 12, i32 1
  %64 = bitcast i64* %62 to i8*
  %65 = bitcast i64* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 9, i1 false) #7
  %66 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 13
  %67 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 13
  %68 = bitcast i32* %66 to i8*
  %69 = bitcast i32* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 44, i1 false)
  %70 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 19
  %71 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 19
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %71, i64 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.std::__1::unique_ptr"* %71 to i64*
  %74 = load i64, i64* %73, align 8
  store %"class.gfx::DelegatedInkMetadata"* null, %"class.gfx::DelegatedInkMetadata"** %72, align 8
  %75 = bitcast %"class.std::__1::unique_ptr"* %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 20
  %77 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 20
  %78 = bitcast %"class.std::__1::vector.35"* %76 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false) #7
  %79 = bitcast %"class.std::__1::vector.35"* %77 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.std::__1::vector.35"* %76 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 20, i32 0, i32 1
  %83 = bitcast %"class.viz::CompositorFrameTransitionDirective"** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 20, i32 0, i32 1
  %86 = bitcast %"class.viz::CompositorFrameTransitionDirective"** %85 to i64*
  store i64 %84, i64* %86, align 8
  %87 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 20, i32 0, i32 2, i32 0, i32 0
  %88 = bitcast %"class.viz::CompositorFrameTransitionDirective"** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 20, i32 0, i32 2, i32 0, i32 0
  %91 = bitcast %"class.viz::CompositorFrameTransitionDirective"** %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = bitcast %"class.std::__1::vector.35"* %77 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 24, i1 false) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz23CompositorFrameMetadataD2Ev(%"class.viz::CompositorFrameMetadata"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 20
  %3 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.viz::CompositorFrameTransitionDirective"*, %"class.viz::CompositorFrameTransitionDirective"** %3, align 8
  %5 = icmp eq %"class.viz::CompositorFrameTransitionDirective"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.viz::CompositorFrameTransitionDirective"* %4 to i8*
  %8 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 20, i32 0, i32 1
  %9 = load %"class.viz::CompositorFrameTransitionDirective"*, %"class.viz::CompositorFrameTransitionDirective"** %8, align 8
  %10 = icmp eq %"class.viz::CompositorFrameTransitionDirective"* %9, %4
  br i1 %10, label %18, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"class.viz::CompositorFrameTransitionDirective"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %12, i64 -1
  tail call void @_ZN3viz34CompositorFrameTransitionDirectiveD1Ev(%"class.viz::CompositorFrameTransitionDirective"* %13) #7
  %14 = icmp eq %"class.viz::CompositorFrameTransitionDirective"* %13, %4
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = bitcast %"class.std::__1::vector.35"* %2 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i8* [ %17, %15 ], [ %7, %6 ]
  store %"class.viz::CompositorFrameTransitionDirective"* %4, %"class.viz::CompositorFrameTransitionDirective"** %8, align 8
  tail call void @_ZdlPv(i8* %19) #8
  br label %20

20:                                               ; preds = %1, %18
  %21 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %22 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %21, align 8
  store %"class.gfx::DelegatedInkMetadata"* null, %"class.gfx::DelegatedInkMetadata"** %21, align 8
  %23 = icmp eq %"class.gfx::DelegatedInkMetadata"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.gfx::DelegatedInkMetadata"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #8
  br label %26

26:                                               ; preds = %20, %24
  %27 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 10, i32 0, i32 0
  %28 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %27, align 8
  %29 = icmp eq %"class.viz::SurfaceId"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint %"class.viz::SurfaceId"* %28 to i64
  %32 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 10, i32 0, i32 1
  %33 = bitcast %"class.viz::SurfaceId"** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast %"class.viz::SurfaceId"* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #8
  br label %35

35:                                               ; preds = %26, %30
  %36 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 9, i32 0, i32 0
  %37 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %36, align 8
  %38 = icmp eq %"class.viz::SurfaceRange"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = ptrtoint %"class.viz::SurfaceRange"* %37 to i64
  %41 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 9, i32 0, i32 1
  %42 = bitcast %"class.viz::SurfaceRange"** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %43) #8
  br label %44

44:                                               ; preds = %35, %39
  %45 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 8
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %46, align 8
  %48 = icmp eq %"class.ui::LatencyInfo"* %47, null
  br i1 %48, label %63, label %49

49:                                               ; preds = %44
  %50 = bitcast %"class.ui::LatencyInfo"* %47 to i8*
  %51 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 8, i32 0, i32 1
  %52 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %51, align 8
  %53 = icmp eq %"class.ui::LatencyInfo"* %52, %47
  br i1 %53, label %61, label %54

54:                                               ; preds = %49, %54
  %55 = phi %"class.ui::LatencyInfo"* [ %56, %54 ], [ %52, %49 ]
  %56 = getelementptr inbounds %"class.ui::LatencyInfo", %"class.ui::LatencyInfo"* %55, i64 -1
  tail call void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"* %56) #7
  %57 = icmp eq %"class.ui::LatencyInfo"* %56, %47
  br i1 %57, label %58, label %54

58:                                               ; preds = %54
  %59 = bitcast %"class.std::__1::vector"* %45 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %58, %49
  %62 = phi i8* [ %60, %58 ], [ %50, %49 ]
  store %"class.ui::LatencyInfo"* %47, %"class.ui::LatencyInfo"** %51, align 8
  tail call void @_ZdlPv(i8* %62) #8
  br label %63

63:                                               ; preds = %44, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(248) %"class.viz::CompositorFrameMetadata"* @_ZN3viz23CompositorFrameMetadataaSEOS0_(%"class.viz::CompositorFrameMetadata"* returned, %"class.viz::CompositorFrameMetadata"* dereferenceable(248)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::CompositorFrameMetadata"* %0 to i8*
  %4 = bitcast %"class.viz::CompositorFrameMetadata"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false)
  %5 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 8
  %6 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %8 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %7, align 8
  %9 = icmp eq %"class.ui::LatencyInfo"* %8, null
  br i1 %9, label %25, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.ui::LatencyInfo"* %8 to i8*
  %12 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 8, i32 0, i32 1
  %13 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %12, align 8
  %14 = icmp eq %"class.ui::LatencyInfo"* %13, %8
  br i1 %14, label %22, label %15

15:                                               ; preds = %10, %15
  %16 = phi %"class.ui::LatencyInfo"* [ %17, %15 ], [ %13, %10 ]
  %17 = getelementptr inbounds %"class.ui::LatencyInfo", %"class.ui::LatencyInfo"* %16, i64 -1
  tail call void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"* %17) #7
  %18 = icmp eq %"class.ui::LatencyInfo"* %17, %8
  br i1 %18, label %19, label %15

19:                                               ; preds = %15
  %20 = bitcast %"class.std::__1::vector"* %5 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %10
  %23 = phi i8* [ %21, %19 ], [ %11, %10 ]
  store %"class.ui::LatencyInfo"* %8, %"class.ui::LatencyInfo"** %12, align 8
  tail call void @_ZdlPv(i8* %23) #8
  %24 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #7
  br label %25

25:                                               ; preds = %2, %22
  %26 = bitcast %"class.std::__1::vector"* %6 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::vector"* %5 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 8, i32 0, i32 1
  %30 = bitcast %"class.ui::LatencyInfo"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 8, i32 0, i32 1
  %33 = bitcast %"class.ui::LatencyInfo"** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast %"class.ui::LatencyInfo"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"class.ui::LatencyInfo"** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #7
  %40 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 9
  %41 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 9
  %42 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %40, i64 0, i32 0, i32 0
  %43 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %42, align 8
  %44 = icmp eq %"class.viz::SurfaceRange"* %43, null
  br i1 %44, label %51, label %45

45:                                               ; preds = %25
  %46 = ptrtoint %"class.viz::SurfaceRange"* %43 to i64
  %47 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 9, i32 0, i32 1
  %48 = bitcast %"class.viz::SurfaceRange"** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %49) #8
  %50 = bitcast %"class.std::__1::vector.8"* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #7
  br label %51

51:                                               ; preds = %25, %45
  %52 = bitcast %"class.std::__1::vector.8"* %41 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.std::__1::vector.8"* %40 to i64*
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 9, i32 0, i32 1
  %56 = bitcast %"class.viz::SurfaceRange"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 9, i32 0, i32 1
  %59 = bitcast %"class.viz::SurfaceRange"** %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %61 = bitcast %"class.viz::SurfaceRange"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %64 = bitcast %"class.viz::SurfaceRange"** %63 to i64*
  store i64 %62, i64* %64, align 8
  %65 = bitcast %"class.std::__1::vector.8"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #7
  %66 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 10
  %67 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 10
  %68 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %66, i64 0, i32 0, i32 0
  %69 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %68, align 8
  %70 = icmp eq %"class.viz::SurfaceId"* %69, null
  br i1 %70, label %77, label %71

71:                                               ; preds = %51
  %72 = ptrtoint %"class.viz::SurfaceId"* %69 to i64
  %73 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 10, i32 0, i32 1
  %74 = bitcast %"class.viz::SurfaceId"** %73 to i64*
  store i64 %72, i64* %74, align 8
  %75 = bitcast %"class.viz::SurfaceId"* %69 to i8*
  tail call void @_ZdlPv(i8* %75) #8
  %76 = bitcast %"class.std::__1::vector.15"* %66 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #7
  br label %77

77:                                               ; preds = %51, %71
  %78 = bitcast %"class.std::__1::vector.15"* %67 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.std::__1::vector.15"* %66 to i64*
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 10, i32 0, i32 1
  %82 = bitcast %"class.viz::SurfaceId"** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 10, i32 0, i32 1
  %85 = bitcast %"class.viz::SurfaceId"** %84 to i64*
  store i64 %83, i64* %85, align 8
  %86 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %87 = bitcast %"class.viz::SurfaceId"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %90 = bitcast %"class.viz::SurfaceId"** %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = bitcast %"class.std::__1::vector.15"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 24, i1 false) #7
  %92 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 11
  %93 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 11
  %94 = bitcast %"class.viz::FrameDeadline"* %92 to i8*
  %95 = bitcast %"class.viz::FrameDeadline"* %93 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 25, i1 false)
  %96 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 12, i32 0
  %97 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 12, i32 0
  %98 = tail call dereferenceable(16) %"struct.viz::BeginFrameId"* @_ZN3viz12BeginFrameIdaSERKS0_(%"struct.viz::BeginFrameId"* %96, %"struct.viz::BeginFrameId"* dereferenceable(16) %97) #7
  %99 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 12, i32 1
  %100 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 12, i32 1
  %101 = bitcast i64* %99 to i8*
  %102 = bitcast i64* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %102, i64 9, i1 false) #7
  %103 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 13
  %104 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 13
  %105 = bitcast i32* %103 to i8*
  %106 = bitcast i32* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 44, i1 false)
  %107 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 19
  %108 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 19
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %108, i64 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.std::__1::unique_ptr"* %108 to i64*
  %111 = load i64, i64* %110, align 8
  store %"class.gfx::DelegatedInkMetadata"* null, %"class.gfx::DelegatedInkMetadata"** %109, align 8
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %107, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %112, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %107 to i64*
  store i64 %111, i64* %114, align 8
  %115 = icmp eq %"class.gfx::DelegatedInkMetadata"* %113, null
  br i1 %115, label %118, label %116

116:                                              ; preds = %77
  %117 = bitcast %"class.gfx::DelegatedInkMetadata"* %113 to i8*
  tail call void @_ZdlPv(i8* %117) #8
  br label %118

118:                                              ; preds = %77, %116
  %119 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 20
  %120 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 20
  %121 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %119, i64 0, i32 0, i32 0
  %122 = load %"class.viz::CompositorFrameTransitionDirective"*, %"class.viz::CompositorFrameTransitionDirective"** %121, align 8
  %123 = icmp eq %"class.viz::CompositorFrameTransitionDirective"* %122, null
  br i1 %123, label %139, label %124

124:                                              ; preds = %118
  %125 = bitcast %"class.viz::CompositorFrameTransitionDirective"* %122 to i8*
  %126 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 20, i32 0, i32 1
  %127 = load %"class.viz::CompositorFrameTransitionDirective"*, %"class.viz::CompositorFrameTransitionDirective"** %126, align 8
  %128 = icmp eq %"class.viz::CompositorFrameTransitionDirective"* %127, %122
  br i1 %128, label %136, label %129

129:                                              ; preds = %124, %129
  %130 = phi %"class.viz::CompositorFrameTransitionDirective"* [ %131, %129 ], [ %127, %124 ]
  %131 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %130, i64 -1
  tail call void @_ZN3viz34CompositorFrameTransitionDirectiveD1Ev(%"class.viz::CompositorFrameTransitionDirective"* %131) #7
  %132 = icmp eq %"class.viz::CompositorFrameTransitionDirective"* %131, %122
  br i1 %132, label %133, label %129

133:                                              ; preds = %129
  %134 = bitcast %"class.std::__1::vector.35"* %119 to i8**
  %135 = load i8*, i8** %134, align 8
  br label %136

136:                                              ; preds = %133, %124
  %137 = phi i8* [ %135, %133 ], [ %125, %124 ]
  store %"class.viz::CompositorFrameTransitionDirective"* %122, %"class.viz::CompositorFrameTransitionDirective"** %126, align 8
  tail call void @_ZdlPv(i8* %137) #8
  %138 = bitcast %"class.std::__1::vector.35"* %119 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %138, i8 0, i64 24, i1 false) #7
  br label %139

139:                                              ; preds = %118, %136
  %140 = bitcast %"class.std::__1::vector.35"* %120 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.std::__1::vector.35"* %119 to i64*
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 20, i32 0, i32 1
  %144 = bitcast %"class.viz::CompositorFrameTransitionDirective"** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 20, i32 0, i32 1
  %147 = bitcast %"class.viz::CompositorFrameTransitionDirective"** %146 to i64*
  store i64 %145, i64* %147, align 8
  %148 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 20, i32 0, i32 2, i32 0, i32 0
  %149 = bitcast %"class.viz::CompositorFrameTransitionDirective"** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 20, i32 0, i32 2, i32 0, i32 0
  %152 = bitcast %"class.viz::CompositorFrameTransitionDirective"** %151 to i64*
  store i64 %150, i64* %152, align 8
  %153 = bitcast %"class.std::__1::vector.35"* %120 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 24, i1 false) #7
  ret %"class.viz::CompositorFrameMetadata"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3viz23CompositorFrameMetadata5CloneEv(%"class.viz::CompositorFrameMetadata"* noalias sret, %"class.viz::CompositorFrameMetadata"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::CompositorFrameMetadata"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 bitcast ({ float, %"class.gfx::Vector2dF", float, %"class.gfx::SizeF", i8, i8, i8, [1 x i8], i32, %"class.std::__1::vector", %"class.std::__1::vector.8", %"class.std::__1::vector.15", %"class.viz::FrameDeadline", %"struct.viz::BeginFrameAck", i32, i8, [3 x i8], float, { { { { i8, [3 x i8], %union.anon.26 } } } }, [4 x i8], { { { { i8, [7 x i8], %union.anon.31 } } } }, i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::vector.35" }* @__const._ZNK3viz23CompositorFrameMetadata5CloneEv.metadata to i8*), i64 248, i1 false)
  tail call void @_ZN3viz23CompositorFrameMetadataC2ERKS0_(%"class.viz::CompositorFrameMetadata"* %0, %"class.viz::CompositorFrameMetadata"* dereferenceable(248) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz23CompositorFrameMetadataC2ERKS0_(%"class.viz::CompositorFrameMetadata"*, %"class.viz::CompositorFrameMetadata"* dereferenceable(248)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::CompositorFrameMetadata"* %1 to i32*
  %4 = load i32, i32* %3, align 8
  %5 = bitcast %"class.viz::CompositorFrameMetadata"* %0 to i32*
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 1
  %8 = bitcast %"class.gfx::Vector2dF"* %7 to i64*
  %9 = bitcast %"class.gfx::Vector2dF"* %6 to i64*
  %10 = load i64, i64* %8, align 4
  store i64 %10, i64* %9, align 4
  %11 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 2
  %13 = bitcast float* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = bitcast float* %11 to i32*
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 3
  %18 = bitcast %"class.gfx::SizeF"* %17 to i64*
  %19 = bitcast %"class.gfx::SizeF"* %16 to i64*
  %20 = load i64, i64* %18, align 8
  store i64 %20, i64* %19, align 8
  %21 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 4
  %22 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 4
  %23 = load i8, i8* %22, align 8
  store i8 %23, i8* %21, align 8
  %24 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 5
  %25 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 5
  %26 = load i8, i8* %25, align 1, !range !2
  store i8 %26, i8* %24, align 1
  %27 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 6
  %28 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 6
  %29 = load i8, i8* %28, align 2, !range !2
  store i8 %29, i8* %27, align 2
  %30 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 7
  %31 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 7
  %32 = load i32, i32* %31, align 4
  store i32 %32, i32* %30, align 4
  %33 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 8
  %34 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 8
  %35 = bitcast %"class.std::__1::vector"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #7
  %36 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 8, i32 0, i32 1
  %37 = bitcast %"class.ui::LatencyInfo"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::vector"* %34 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = ashr exact i64 %41, 6
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %72, label %44

44:                                               ; preds = %2
  %45 = icmp ugt i64 %42, 288230376151711743
  br i1 %45, label %46, label %48

46:                                               ; preds = %44
  %47 = bitcast %"class.std::__1::vector"* %33 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %47) #9
  unreachable

48:                                               ; preds = %44
  %49 = tail call i8* @_Znwm(i64 %41) #8
  %50 = bitcast i8* %49 to %"class.ui::LatencyInfo"*
  %51 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 8, i32 0, i32 1
  %52 = bitcast %"class.ui::LatencyInfo"** %51 to i8**
  store i8* %49, i8** %52, align 8
  %53 = bitcast %"class.std::__1::vector"* %33 to i8**
  store i8* %49, i8** %53, align 8
  %54 = getelementptr inbounds %"class.ui::LatencyInfo", %"class.ui::LatencyInfo"* %50, i64 %42
  %55 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  store %"class.ui::LatencyInfo"* %54, %"class.ui::LatencyInfo"** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %34, i64 0, i32 0, i32 0
  %57 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %56, align 8
  %58 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %36, align 8
  %59 = bitcast %"class.ui::LatencyInfo"** %51 to i64*
  %60 = ptrtoint i8* %49 to i64
  %61 = icmp eq %"class.ui::LatencyInfo"* %57, %58
  br i1 %61, label %70, label %62

62:                                               ; preds = %48, %62
  %63 = phi %"class.ui::LatencyInfo"* [ %66, %62 ], [ %50, %48 ]
  %64 = phi %"class.ui::LatencyInfo"* [ %65, %62 ], [ %57, %48 ]
  tail call void @_ZN2ui11LatencyInfoC1ERKS0_(%"class.ui::LatencyInfo"* %63, %"class.ui::LatencyInfo"* dereferenceable(64) %64) #7
  %65 = getelementptr inbounds %"class.ui::LatencyInfo", %"class.ui::LatencyInfo"* %64, i64 1
  %66 = getelementptr inbounds %"class.ui::LatencyInfo", %"class.ui::LatencyInfo"* %63, i64 1
  %67 = icmp eq %"class.ui::LatencyInfo"* %65, %58
  br i1 %67, label %68, label %62

68:                                               ; preds = %62
  %69 = ptrtoint %"class.ui::LatencyInfo"* %66 to i64
  br label %70

70:                                               ; preds = %68, %48
  %71 = phi i64 [ %60, %48 ], [ %69, %68 ]
  store i64 %71, i64* %59, align 8
  br label %72

72:                                               ; preds = %2, %70
  %73 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 9
  %74 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 9
  %75 = bitcast %"class.std::__1::vector.8"* %73 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #7
  %76 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 9, i32 0, i32 1
  %77 = bitcast %"class.viz::SurfaceRange"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.std::__1::vector.8"* %74 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %78, %80
  %82 = sdiv exact i64 %81, 72
  %83 = icmp eq i64 %81, 0
  br i1 %83, label %112, label %84

84:                                               ; preds = %72
  %85 = icmp ugt i64 %82, 256204778801521550
  br i1 %85, label %86, label %88

86:                                               ; preds = %84
  %87 = bitcast %"class.std::__1::vector.8"* %73 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %87) #9
  unreachable

88:                                               ; preds = %84
  %89 = tail call i8* @_Znwm(i64 %81) #8
  %90 = bitcast i8* %89 to %"class.viz::SurfaceRange"*
  %91 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 9, i32 0, i32 1
  %92 = bitcast %"class.viz::SurfaceRange"** %91 to i8**
  store i8* %89, i8** %92, align 8
  %93 = bitcast %"class.std::__1::vector.8"* %73 to i8**
  store i8* %89, i8** %93, align 8
  %94 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %90, i64 %82
  %95 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  store %"class.viz::SurfaceRange"* %94, %"class.viz::SurfaceRange"** %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %74, i64 0, i32 0, i32 0
  %97 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %96, align 8
  %98 = load %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"** %76, align 8
  %99 = bitcast %"class.viz::SurfaceRange"** %91 to i64*
  %100 = ptrtoint i8* %89 to i64
  %101 = icmp eq %"class.viz::SurfaceRange"* %97, %98
  br i1 %101, label %110, label %102

102:                                              ; preds = %88, %102
  %103 = phi %"class.viz::SurfaceRange"* [ %106, %102 ], [ %90, %88 ]
  %104 = phi %"class.viz::SurfaceRange"* [ %105, %102 ], [ %97, %88 ]
  tail call void @_ZN3viz12SurfaceRangeC1ERKS0_(%"class.viz::SurfaceRange"* %103, %"class.viz::SurfaceRange"* dereferenceable(72) %104) #7
  %105 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %104, i64 1
  %106 = getelementptr inbounds %"class.viz::SurfaceRange", %"class.viz::SurfaceRange"* %103, i64 1
  %107 = icmp eq %"class.viz::SurfaceRange"* %105, %98
  br i1 %107, label %108, label %102

108:                                              ; preds = %102
  %109 = ptrtoint %"class.viz::SurfaceRange"* %106 to i64
  br label %110

110:                                              ; preds = %108, %88
  %111 = phi i64 [ %100, %88 ], [ %109, %108 ]
  store i64 %111, i64* %99, align 8
  br label %112

112:                                              ; preds = %72, %110
  %113 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 10
  %114 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 10
  %115 = bitcast %"class.std::__1::vector.15"* %113 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 24, i1 false) #7
  %116 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 10, i32 0, i32 1
  %117 = bitcast %"class.viz::SurfaceId"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.std::__1::vector.15"* %114 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = sub i64 %118, %120
  %122 = ashr exact i64 %121, 5
  %123 = icmp eq i64 %121, 0
  br i1 %123, label %219, label %124

124:                                              ; preds = %112
  %125 = icmp ugt i64 %122, 576460752303423487
  br i1 %125, label %126, label %128

126:                                              ; preds = %124
  %127 = bitcast %"class.std::__1::vector.15"* %113 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %127) #9
  unreachable

128:                                              ; preds = %124
  %129 = tail call i8* @_Znwm(i64 %121) #8
  %130 = bitcast i8* %129 to %"class.viz::SurfaceId"*
  %131 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 10, i32 0, i32 1
  %132 = bitcast %"class.viz::SurfaceId"** %131 to i8**
  store i8* %129, i8** %132, align 8
  %133 = bitcast %"class.std::__1::vector.15"* %113 to i8**
  store i8* %129, i8** %133, align 8
  %134 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %130, i64 %122
  %135 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  store %"class.viz::SurfaceId"* %134, %"class.viz::SurfaceId"** %135, align 8
  %136 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %114, i64 0, i32 0, i32 0
  %137 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %136, align 8
  %138 = load %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"** %116, align 8
  %139 = bitcast %"class.viz::SurfaceId"** %131 to i64*
  %140 = ptrtoint i8* %129 to i64
  %141 = icmp eq %"class.viz::SurfaceId"* %137, %138
  br i1 %141, label %217, label %142

142:                                              ; preds = %128
  %143 = ptrtoint %"class.viz::SurfaceId"* %137 to i64
  %144 = getelementptr %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %138, i64 -1, i32 0, i32 0
  %145 = ptrtoint i32* %144 to i64
  %146 = sub i64 %145, %143
  %147 = and i64 %146, 32
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %171

149:                                              ; preds = %142
  %150 = bitcast i8* %129 to i32*
  %151 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %137, i64 0, i32 0, i32 0
  %152 = load i32, i32* %151, align 4
  store i32 %152, i32* %150, align 4
  %153 = getelementptr inbounds i8, i8* %129, i64 4
  %154 = bitcast i8* %153 to i32*
  %155 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %137, i64 0, i32 0, i32 1
  %156 = load i32, i32* %155, align 4
  store i32 %156, i32* %154, align 4
  %157 = getelementptr inbounds i8, i8* %129, i64 8
  %158 = bitcast i8* %157 to i32*
  %159 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %137, i64 0, i32 1, i32 0
  %160 = load i32, i32* %159, align 8
  store i32 %160, i32* %158, align 8
  %161 = getelementptr inbounds i8, i8* %129, i64 12
  %162 = bitcast i8* %161 to i32*
  %163 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %137, i64 0, i32 1, i32 1
  %164 = load i32, i32* %163, align 4
  store i32 %164, i32* %162, align 4
  %165 = getelementptr inbounds i8, i8* %129, i64 16
  %166 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %137, i64 0, i32 1, i32 2
  %167 = bitcast %"class.base::UnguessableToken"* %166 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %167, i64 16, i1 false) #7
  %168 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %137, i64 1
  %169 = getelementptr inbounds i8, i8* %129, i64 32
  %170 = bitcast i8* %169 to %"class.viz::SurfaceId"*
  br label %171

171:                                              ; preds = %149, %142
  %172 = phi %"class.viz::SurfaceId"* [ undef, %142 ], [ %170, %149 ]
  %173 = phi %"class.viz::SurfaceId"* [ %130, %142 ], [ %170, %149 ]
  %174 = phi %"class.viz::SurfaceId"* [ %137, %142 ], [ %168, %149 ]
  %175 = icmp ult i64 %146, 32
  br i1 %175, label %214, label %176

176:                                              ; preds = %171, %176
  %177 = phi %"class.viz::SurfaceId"* [ %212, %176 ], [ %173, %171 ]
  %178 = phi %"class.viz::SurfaceId"* [ %211, %176 ], [ %174, %171 ]
  %179 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %177, i64 0, i32 0, i32 0
  %180 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %178, i64 0, i32 0, i32 0
  %181 = load i32, i32* %180, align 4
  store i32 %181, i32* %179, align 4
  %182 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %177, i64 0, i32 0, i32 1
  %183 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %178, i64 0, i32 0, i32 1
  %184 = load i32, i32* %183, align 4
  store i32 %184, i32* %182, align 4
  %185 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %177, i64 0, i32 1, i32 0
  %186 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %178, i64 0, i32 1, i32 0
  %187 = load i32, i32* %186, align 8
  store i32 %187, i32* %185, align 8
  %188 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %177, i64 0, i32 1, i32 1
  %189 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %178, i64 0, i32 1, i32 1
  %190 = load i32, i32* %189, align 4
  store i32 %190, i32* %188, align 4
  %191 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %177, i64 0, i32 1, i32 2
  %192 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %178, i64 0, i32 1, i32 2
  %193 = bitcast %"class.base::UnguessableToken"* %191 to i8*
  %194 = bitcast %"class.base::UnguessableToken"* %192 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 8 %194, i64 16, i1 false) #7
  %195 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %177, i64 1, i32 0, i32 0
  %196 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %178, i64 1, i32 0, i32 0
  %197 = load i32, i32* %196, align 4
  store i32 %197, i32* %195, align 4
  %198 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %177, i64 1, i32 0, i32 1
  %199 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %178, i64 1, i32 0, i32 1
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* %198, align 4
  %201 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %177, i64 1, i32 1, i32 0
  %202 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %178, i64 1, i32 1, i32 0
  %203 = load i32, i32* %202, align 8
  store i32 %203, i32* %201, align 8
  %204 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %177, i64 1, i32 1, i32 1
  %205 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %178, i64 1, i32 1, i32 1
  %206 = load i32, i32* %205, align 4
  store i32 %206, i32* %204, align 4
  %207 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %177, i64 1, i32 1, i32 2
  %208 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %178, i64 1, i32 1, i32 2
  %209 = bitcast %"class.base::UnguessableToken"* %207 to i8*
  %210 = bitcast %"class.base::UnguessableToken"* %208 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %209, i8* align 8 %210, i64 16, i1 false) #7
  %211 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %178, i64 2
  %212 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %177, i64 2
  %213 = icmp eq %"class.viz::SurfaceId"* %211, %138
  br i1 %213, label %214, label %176

214:                                              ; preds = %176, %171
  %215 = phi %"class.viz::SurfaceId"* [ %172, %171 ], [ %212, %176 ]
  %216 = ptrtoint %"class.viz::SurfaceId"* %215 to i64
  br label %217

217:                                              ; preds = %214, %128
  %218 = phi i64 [ %140, %128 ], [ %216, %214 ]
  store i64 %218, i64* %139, align 8
  br label %219

219:                                              ; preds = %112, %217
  %220 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 11
  %221 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 11
  %222 = bitcast %"class.viz::FrameDeadline"* %220 to i8*
  %223 = bitcast %"class.viz::FrameDeadline"* %221 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %223, i64 32, i1 false)
  %224 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 12, i32 0
  %225 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 12, i32 0
  tail call void @_ZN3viz12BeginFrameIdC1ERKS0_(%"struct.viz::BeginFrameId"* %224, %"struct.viz::BeginFrameId"* dereferenceable(16) %225) #7
  %226 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 12, i32 1
  %227 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 12, i32 1
  %228 = bitcast i64* %226 to i8*
  %229 = bitcast i64* %227 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %228, i8* align 8 %229, i64 9, i1 false) #7
  %230 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 13
  %231 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 13
  %232 = load i32, i32* %231, align 8
  store i32 %232, i32* %230, align 8
  %233 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 14
  %234 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 14
  %235 = load i8, i8* %234, align 4, !range !2
  store i8 %235, i8* %233, align 4
  %236 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 15
  %237 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 15
  %238 = bitcast float* %237 to i32*
  %239 = load i32, i32* %238, align 8
  %240 = bitcast float* %236 to i32*
  store i32 %239, i32* %240, align 8
  %241 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %242 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %243 = bitcast i8* %242 to i64*
  %244 = bitcast i8* %241 to i64*
  %245 = load i64, i64* %243, align 4
  store i64 %245, i64* %244, align 4
  %246 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %247 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %246, i8* align 8 %247, i64 16, i1 false)
  %248 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 18
  %249 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 18
  %250 = load i32, i32* %249, align 8
  store i32 %250, i32* %248, align 8
  %251 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 19
  %252 = bitcast %"class.std::__1::unique_ptr"* %251 to i64*
  %253 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 20
  %254 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 20
  %255 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 20, i32 0, i32 1
  %256 = bitcast %"class.viz::CompositorFrameTransitionDirective"** %255 to i64*
  %257 = bitcast %"class.std::__1::unique_ptr"* %251 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %257, i8 0, i64 32, i1 false)
  %258 = load i64, i64* %256, align 8
  %259 = bitcast %"class.std::__1::vector.35"* %254 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = sub i64 %258, %260
  %262 = sdiv exact i64 %261, 40
  %263 = icmp eq i64 %261, 0
  br i1 %263, label %292, label %264

264:                                              ; preds = %219
  %265 = icmp ugt i64 %262, 461168601842738790
  br i1 %265, label %266, label %268

266:                                              ; preds = %264
  %267 = bitcast %"class.std::__1::vector.35"* %253 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %267) #9
  unreachable

268:                                              ; preds = %264
  %269 = tail call i8* @_Znwm(i64 %261) #8
  %270 = bitcast i8* %269 to %"class.viz::CompositorFrameTransitionDirective"*
  %271 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 20, i32 0, i32 1
  %272 = bitcast %"class.viz::CompositorFrameTransitionDirective"** %271 to i8**
  store i8* %269, i8** %272, align 8
  %273 = bitcast %"class.std::__1::vector.35"* %253 to i8**
  store i8* %269, i8** %273, align 8
  %274 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %270, i64 %262
  %275 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %0, i64 0, i32 20, i32 0, i32 2, i32 0, i32 0
  store %"class.viz::CompositorFrameTransitionDirective"* %274, %"class.viz::CompositorFrameTransitionDirective"** %275, align 8
  %276 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %254, i64 0, i32 0, i32 0
  %277 = load %"class.viz::CompositorFrameTransitionDirective"*, %"class.viz::CompositorFrameTransitionDirective"** %276, align 8
  %278 = load %"class.viz::CompositorFrameTransitionDirective"*, %"class.viz::CompositorFrameTransitionDirective"** %255, align 8
  %279 = bitcast %"class.viz::CompositorFrameTransitionDirective"** %271 to i64*
  %280 = ptrtoint i8* %269 to i64
  %281 = icmp eq %"class.viz::CompositorFrameTransitionDirective"* %277, %278
  br i1 %281, label %290, label %282

282:                                              ; preds = %268, %282
  %283 = phi %"class.viz::CompositorFrameTransitionDirective"* [ %286, %282 ], [ %270, %268 ]
  %284 = phi %"class.viz::CompositorFrameTransitionDirective"* [ %285, %282 ], [ %277, %268 ]
  tail call void @_ZN3viz34CompositorFrameTransitionDirectiveC1ERKS0_(%"class.viz::CompositorFrameTransitionDirective"* %283, %"class.viz::CompositorFrameTransitionDirective"* dereferenceable(40) %284) #7
  %285 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %284, i64 1
  %286 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %283, i64 1
  %287 = icmp eq %"class.viz::CompositorFrameTransitionDirective"* %285, %278
  br i1 %287, label %288, label %282

288:                                              ; preds = %282
  %289 = ptrtoint %"class.viz::CompositorFrameTransitionDirective"* %286 to i64
  br label %290

290:                                              ; preds = %288, %268
  %291 = phi i64 [ %280, %268 ], [ %289, %288 ]
  store i64 %291, i64* %279, align 8
  br label %292

292:                                              ; preds = %219, %290
  %293 = getelementptr inbounds %"class.viz::CompositorFrameMetadata", %"class.viz::CompositorFrameMetadata"* %1, i64 0, i32 19, i32 0, i32 0, i32 0
  %294 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %293, align 8
  %295 = icmp eq %"class.gfx::DelegatedInkMetadata"* %294, null
  br i1 %295, label %305, label %296

296:                                              ; preds = %292
  %297 = tail call i8* @_Znwm(i64 64) #8
  %298 = bitcast %"class.gfx::DelegatedInkMetadata"* %294 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %297, i8* nonnull align 8 %298, i64 64, i1 false) #7
  %299 = ptrtoint i8* %297 to i64
  %300 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %251, i64 0, i32 0, i32 0, i32 0
  %301 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %300, align 8
  store i64 %299, i64* %252, align 8
  %302 = icmp eq %"class.gfx::DelegatedInkMetadata"* %301, null
  br i1 %302, label %305, label %303

303:                                              ; preds = %296
  %304 = bitcast %"class.gfx::DelegatedInkMetadata"* %301 to i8*
  tail call void @_ZdlPv(i8* %304) #8
  br label %305

305:                                              ; preds = %292, %296, %303
  ret void
}

declare void @_ZN3viz12BeginFrameIdC1Ev(%"struct.viz::BeginFrameId"*) unnamed_addr #2

declare void @_ZN3viz12BeginFrameIdC1ERKS0_(%"struct.viz::BeginFrameId"*, %"struct.viz::BeginFrameId"* dereferenceable(16)) unnamed_addr #2

declare dereferenceable(16) %"struct.viz::BeginFrameId"* @_ZN3viz12BeginFrameIdaSERKS0_(%"struct.viz::BeginFrameId"*, %"struct.viz::BeginFrameId"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3viz34CompositorFrameTransitionDirectiveD1Ev(%"class.viz::CompositorFrameTransitionDirective"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN2ui11LatencyInfoC1ERKS0_(%"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"* dereferenceable(64)) unnamed_addr #2

declare void @_ZN3viz12SurfaceRangeC1ERKS0_(%"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"* dereferenceable(72)) unnamed_addr #2

declare void @_ZN3viz34CompositorFrameTransitionDirectiveC1ERKS0_(%"class.viz::CompositorFrameTransitionDirective"*, %"class.viz::CompositorFrameTransitionDirective"* dereferenceable(40)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
