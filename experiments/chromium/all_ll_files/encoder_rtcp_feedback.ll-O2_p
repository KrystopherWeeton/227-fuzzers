; ModuleID = '../../third_party/webrtc/video/encoder_rtcp_feedback.cc'
source_filename = "../../third_party/webrtc/video/encoder_rtcp_feedback.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::EncoderRtcpFeedback" = type <{ %"class.webrtc::RtcpIntraFrameObserver", %"class.webrtc::RtcpLossNotificationObserver", %"class.webrtc::Clock"*, %"class.std::__1::vector", %"class.webrtc::RtpVideoSenderInterface"*, %"class.webrtc::VideoStreamEncoderInterface"*, %"class.webrtc::Mutex", i64, i32, [4 x i8] }>
%"class.webrtc::RtcpIntraFrameObserver" = type { i32 (...)** }
%"class.webrtc::RtcpLossNotificationObserver" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.webrtc::RtpVideoSenderInterface" = type { %"class.webrtc::EncodedImageCallback", %"class.webrtc::FecControllerOverride" }
%"class.webrtc::EncodedImageCallback" = type { i32 (...)** }
%"class.webrtc::FecControllerOverride" = type { i32 (...)** }
%"class.webrtc::Mutex" = type { %"class.webrtc::MutexImpl" }
%"class.webrtc::MutexImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.webrtc::Clock" = type { i32 (...)** }
%"class.webrtc::VideoStreamEncoderInterface" = type { %"class.rtc::VideoSinkInterface" }
%"class.rtc::VideoSinkInterface" = type { i32 (...)** }
%union.pthread_mutexattr_t = type { i32 }
%"class.webrtc::KeyframeIntervalSettings" = type { %"class.webrtc::FieldTrialOptional" }
%"class.webrtc::FieldTrialOptional" = type { %"class.webrtc::FieldTrialParameterInterface.base", %"class.absl::optional", [4 x i8] }
%"class.webrtc::FieldTrialParameterInterface.base" = type <{ i32 (...)**, %"class.std::__1::vector.1", %"class.std::__1::basic_string", i8 }>
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.webrtc::FieldTrialParameterInterface"**, %"class.webrtc::FieldTrialParameterInterface"**, %"class.std::__1::__compressed_pair.3" }
%"class.webrtc::FieldTrialParameterInterface" = type <{ i32 (...)**, %"class.std::__1::vector.1", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.webrtc::FieldTrialParameterInterface"** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.10 }
%union.anon.10 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"struct.webrtc::RtpSequenceNumberMap::Info"*, %"struct.webrtc::RtpSequenceNumberMap::Info"*, %"class.std::__1::__compressed_pair.23" }
%"struct.webrtc::RtpSequenceNumberMap::Info" = type <{ i32, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.webrtc::RtpSequenceNumberMap::Info"* }
%"struct.webrtc::VideoEncoder::LossNotification" = type { i32, i32, %"class.absl::optional.28", %"class.absl::optional.28" }
%"class.absl::optional.28" = type { %"class.absl::optional_internal::optional_data.29" }
%"class.absl::optional_internal::optional_data.29" = type { %"class.absl::optional_internal::optional_data_base.30" }
%"class.absl::optional_internal::optional_data_base.30" = type { %"class.absl::optional_internal::optional_data_dtor_base.31" }
%"class.absl::optional_internal::optional_data_dtor_base.31" = type { i8, %union.anon.32 }
%union.anon.32 = type { i8 }

$_ZN6webrtc19EncoderRtcpFeedbackD2Ev = comdat any

$_ZN6webrtc19EncoderRtcpFeedbackD0Ev = comdat any

$_ZThn8_N6webrtc19EncoderRtcpFeedbackD1Ev = comdat any

$_ZThn8_N6webrtc19EncoderRtcpFeedbackD0Ev = comdat any

@_ZTVN6webrtc19EncoderRtcpFeedbackE = hidden unnamed_addr constant { [6 x i8*], [5 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::EncoderRtcpFeedback"*)* @_ZN6webrtc19EncoderRtcpFeedbackD2Ev to i8*), i8* bitcast (void (%"class.webrtc::EncoderRtcpFeedback"*)* @_ZN6webrtc19EncoderRtcpFeedbackD0Ev to i8*), i8* bitcast (void (%"class.webrtc::EncoderRtcpFeedback"*, i32)* @_ZN6webrtc19EncoderRtcpFeedback27OnReceivedIntraFrameRequestEj to i8*), i8* bitcast (void (%"class.webrtc::EncoderRtcpFeedback"*, i32, i16, i16, i1)* @_ZN6webrtc19EncoderRtcpFeedback26OnReceivedLossNotificationEjttb to i8*)], [5 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.webrtc::EncoderRtcpFeedback"*)* @_ZThn8_N6webrtc19EncoderRtcpFeedbackD1Ev to i8*), i8* bitcast (void (%"class.webrtc::EncoderRtcpFeedback"*)* @_ZThn8_N6webrtc19EncoderRtcpFeedbackD0Ev to i8*), i8* bitcast (void (%"class.webrtc::EncoderRtcpFeedback"*, i32, i16, i16, i1)* @_ZThn8_N6webrtc19EncoderRtcpFeedback26OnReceivedLossNotificationEjttb to i8*)] }, align 8

@_ZN6webrtc19EncoderRtcpFeedbackC1EPNS_5ClockERKNSt3__16vectorIjNS3_9allocatorIjEEEEPNS_27VideoStreamEncoderInterfaceE = hidden unnamed_addr alias void (%"class.webrtc::EncoderRtcpFeedback"*, %"class.webrtc::Clock"*, %"class.std::__1::vector"*, %"class.webrtc::VideoStreamEncoderInterface"*), void (%"class.webrtc::EncoderRtcpFeedback"*, %"class.webrtc::Clock"*, %"class.std::__1::vector"*, %"class.webrtc::VideoStreamEncoderInterface"*)* @_ZN6webrtc19EncoderRtcpFeedbackC2EPNS_5ClockERKNSt3__16vectorIjNS3_9allocatorIjEEEEPNS_27VideoStreamEncoderInterfaceE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc19EncoderRtcpFeedbackC2EPNS_5ClockERKNSt3__16vectorIjNS3_9allocatorIjEEEEPNS_27VideoStreamEncoderInterfaceE(%"class.webrtc::EncoderRtcpFeedback"*, %"class.webrtc::Clock"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.webrtc::VideoStreamEncoderInterface"*) unnamed_addr #0 align 2 {
  %5 = alloca %union.pthread_mutexattr_t, align 4
  %6 = alloca %"class.webrtc::KeyframeIntervalSettings", align 8
  %7 = bitcast %"class.webrtc::EncoderRtcpFeedback"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN6webrtc19EncoderRtcpFeedbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN6webrtc19EncoderRtcpFeedbackE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 2
  store %"class.webrtc::Clock"* %1, %"class.webrtc::Clock"** %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 3
  %10 = bitcast %"class.std::__1::vector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #9
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 2
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %46, label %19

19:                                               ; preds = %4
  %20 = icmp ugt i64 %17, 4611686018427387903
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector"* %9 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %22) #10
  unreachable

23:                                               ; preds = %19
  %24 = tail call i8* @_Znwm(i64 %16) #11
  %25 = bitcast i8* %24 to i32*
  %26 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 3, i32 0, i32 1
  %27 = bitcast i32** %26 to i8**
  store i8* %24, i8** %27, align 8
  %28 = bitcast %"class.std::__1::vector"* %9 to i8**
  store i8* %24, i8** %28, align 8
  %29 = getelementptr inbounds i32, i32* %25, i64 %17
  %30 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store i32* %29, i32** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = load i64, i64* %12, align 8
  %34 = bitcast i32** %26 to i64*
  %35 = ptrtoint i8* %24 to i64
  %36 = ptrtoint i32* %32 to i64
  %37 = sub i64 %33, %36
  %38 = icmp sgt i64 %37, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %23
  %40 = lshr exact i64 %37, 2
  %41 = bitcast i32* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %24, i8* align 4 %41, i64 %37, i1 false) #9
  %42 = getelementptr inbounds i32, i32* %25, i64 %40
  %43 = ptrtoint i32* %42 to i64
  br label %44

44:                                               ; preds = %39, %23
  %45 = phi i64 [ %43, %39 ], [ %35, %23 ]
  store i64 %45, i64* %34, align 8
  br label %46

46:                                               ; preds = %4, %44
  %47 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 4
  store %"class.webrtc::RtpVideoSenderInterface"* null, %"class.webrtc::RtpVideoSenderInterface"** %47, align 8
  %48 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 5
  store %"class.webrtc::VideoStreamEncoderInterface"* %3, %"class.webrtc::VideoStreamEncoderInterface"** %48, align 8
  %49 = bitcast %union.pthread_mutexattr_t* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #9
  %50 = getelementptr inbounds %union.pthread_mutexattr_t, %union.pthread_mutexattr_t* %5, i64 0, i32 0
  store i32 -1431655766, i32* %50, align 4
  %51 = call i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t* nonnull %5) #9
  %52 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 6, i32 0, i32 0
  %53 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %52, %union.pthread_mutexattr_t* nonnull %5) #9
  %54 = call i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #9
  %55 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 7
  store i64 -1, i64* %55, align 8
  %56 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 8
  %57 = bitcast %"class.webrtc::KeyframeIntervalSettings"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %57) #9
  call void @_ZN6webrtc24KeyframeIntervalSettings20ParseFromFieldTrialsEv(%"class.webrtc::KeyframeIntervalSettings"* nonnull sret %6) #9
  %58 = call i64 @_ZNK6webrtc24KeyframeIntervalSettings25MinKeyframeSendIntervalMsEv(%"class.webrtc::KeyframeIntervalSettings"* nonnull %6) #9
  %59 = trunc i64 %58 to i8
  %60 = lshr i64 %58, 32
  %61 = trunc i64 %60 to i32
  %62 = icmp eq i8 %59, 0
  %63 = select i1 %62, i32 300, i32 %61
  %64 = bitcast %"class.webrtc::KeyframeIntervalSettings"* %6 to %"class.webrtc::FieldTrialParameterInterface"*
  call void @_ZN6webrtc28FieldTrialParameterInterfaceD2Ev(%"class.webrtc::FieldTrialParameterInterface"* nonnull %64) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %57) #9
  store i32 %63, i32* %56, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN6webrtc24KeyframeIntervalSettings20ParseFromFieldTrialsEv(%"class.webrtc::KeyframeIntervalSettings"* sret) local_unnamed_addr #2

declare i64 @_ZNK6webrtc24KeyframeIntervalSettings25MinKeyframeSendIntervalMsEv(%"class.webrtc::KeyframeIntervalSettings"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc19EncoderRtcpFeedback17SetRtpVideoSenderEPKNS_23RtpVideoSenderInterfaceE(%"class.webrtc::EncoderRtcpFeedback"* nocapture, %"class.webrtc::RtpVideoSenderInterface"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 4
  store %"class.webrtc::RtpVideoSenderInterface"* %1, %"class.webrtc::RtpVideoSenderInterface"** %3, align 8
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN6webrtc19EncoderRtcpFeedback7HasSsrcEj(%"class.webrtc::EncoderRtcpFeedback"* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 3, i32 0, i32 1
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  br i1 %7, label %15, label %10

8:                                                ; preds = %10
  %9 = icmp eq i32* %14, %6
  br i1 %9, label %15, label %10

10:                                               ; preds = %2, %8
  %11 = phi i32* [ %14, %8 ], [ %4, %2 ]
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, %1
  %14 = getelementptr inbounds i32, i32* %11, i64 1
  br i1 %13, label %15, label %8

15:                                               ; preds = %8, %10, %2
  %16 = phi i1 [ false, %2 ], [ true, %10 ], [ false, %8 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc19EncoderRtcpFeedback27OnReceivedIntraFrameRequestEj(%"class.webrtc::EncoderRtcpFeedback"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 2
  %4 = load %"class.webrtc::Clock"*, %"class.webrtc::Clock"** %3, align 8
  %5 = bitcast %"class.webrtc::Clock"* %4 to i64 (%"class.webrtc::Clock"*)***
  %6 = load i64 (%"class.webrtc::Clock"*)**, i64 (%"class.webrtc::Clock"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %6, i64 2
  %8 = load i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %7, align 8
  %9 = tail call i64 %8(%"class.webrtc::Clock"* %4) #9
  %10 = add nsw i64 %9, 500
  %11 = sdiv i64 %10, 1000
  %12 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 6, i32 0, i32 0
  %13 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %12) #9
  %14 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 7
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 8
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  %19 = add nsw i64 %15, %18
  %20 = icmp sgt i64 %19, %11
  br i1 %20, label %29, label %21

21:                                               ; preds = %2
  store i64 %11, i64* %14, align 8
  %22 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %12) #9
  %23 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 5
  %24 = load %"class.webrtc::VideoStreamEncoderInterface"*, %"class.webrtc::VideoStreamEncoderInterface"** %23, align 8
  %25 = bitcast %"class.webrtc::VideoStreamEncoderInterface"* %24 to void (%"class.webrtc::VideoStreamEncoderInterface"*)***
  %26 = load void (%"class.webrtc::VideoStreamEncoderInterface"*)**, void (%"class.webrtc::VideoStreamEncoderInterface"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.webrtc::VideoStreamEncoderInterface"*)*, void (%"class.webrtc::VideoStreamEncoderInterface"*)** %26, i64 9
  %28 = load void (%"class.webrtc::VideoStreamEncoderInterface"*)*, void (%"class.webrtc::VideoStreamEncoderInterface"*)** %27, align 8
  tail call void %28(%"class.webrtc::VideoStreamEncoderInterface"* %24) #9
  br label %31

29:                                               ; preds = %2
  %30 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %12) #9
  br label %31

31:                                               ; preds = %29, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc19EncoderRtcpFeedback26OnReceivedLossNotificationEjttb(%"class.webrtc::EncoderRtcpFeedback"* nocapture readonly, i32, i16 zeroext, i16 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::vector.21", align 8
  %7 = alloca %"struct.webrtc::VideoEncoder::LossNotification", align 4
  %8 = tail call i8* @_Znwm(i64 4) #11
  %9 = bitcast i8* %8 to i16*
  store i16 %2, i16* %9, align 2
  %10 = getelementptr inbounds i8, i8* %8, i64 2
  %11 = bitcast i8* %10 to i16*
  store i16 %3, i16* %11, align 2
  %12 = bitcast %"class.std::__1::vector.21"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %6, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %6, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 4
  %16 = bitcast %"class.std::__1::vector.21"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  %17 = load %"class.webrtc::RtpVideoSenderInterface"*, %"class.webrtc::RtpVideoSenderInterface"** %15, align 8
  %18 = bitcast %"class.webrtc::RtpVideoSenderInterface"* %17 to void (%"class.std::__1::vector.21"*, %"class.webrtc::RtpVideoSenderInterface"*, i32, i16*, i64)***
  %19 = load void (%"class.std::__1::vector.21"*, %"class.webrtc::RtpVideoSenderInterface"*, i32, i16*, i64)**, void (%"class.std::__1::vector.21"*, %"class.webrtc::RtpVideoSenderInterface"*, i32, i16*, i64)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.std::__1::vector.21"*, %"class.webrtc::RtpVideoSenderInterface"*, i32, i16*, i64)*, void (%"class.std::__1::vector.21"*, %"class.webrtc::RtpVideoSenderInterface"*, i32, i16*, i64)** %19, i64 20
  %21 = load void (%"class.std::__1::vector.21"*, %"class.webrtc::RtpVideoSenderInterface"*, i32, i16*, i64)*, void (%"class.std::__1::vector.21"*, %"class.webrtc::RtpVideoSenderInterface"*, i32, i16*, i64)** %20, align 8
  call void %21(%"class.std::__1::vector.21"* nonnull sret %6, %"class.webrtc::RtpVideoSenderInterface"* %17, i32 %1, i16* nonnull %9, i64 2) #9
  %22 = load %"struct.webrtc::RtpSequenceNumberMap::Info"*, %"struct.webrtc::RtpSequenceNumberMap::Info"** %13, align 8
  %23 = load %"struct.webrtc::RtpSequenceNumberMap::Info"*, %"struct.webrtc::RtpSequenceNumberMap::Info"** %14, align 8
  %24 = icmp eq %"struct.webrtc::RtpSequenceNumberMap::Info"* %22, %23
  br i1 %24, label %77, label %25

25:                                               ; preds = %5
  %26 = bitcast %"struct.webrtc::VideoEncoder::LossNotification"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"struct.webrtc::VideoEncoder::LossNotification", %"struct.webrtc::VideoEncoder::LossNotification"* %7, i64 0, i32 0
  %28 = getelementptr inbounds %"struct.webrtc::VideoEncoder::LossNotification", %"struct.webrtc::VideoEncoder::LossNotification"* %7, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.webrtc::VideoEncoder::LossNotification", %"struct.webrtc::VideoEncoder::LossNotification"* %7, i64 0, i32 2
  %30 = getelementptr inbounds %"class.absl::optional.28", %"class.absl::optional.28"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.webrtc::VideoEncoder::LossNotification", %"struct.webrtc::VideoEncoder::LossNotification"* %7, i64 0, i32 3
  %32 = getelementptr inbounds %"class.absl::optional.28", %"class.absl::optional.28"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.webrtc::VideoEncoder::LossNotification", %"struct.webrtc::VideoEncoder::LossNotification"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast %"struct.webrtc::VideoEncoder::LossNotification"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %34, i8 -86, i64 12, i1 false)
  store i8 0, i8* %33, align 4
  %35 = getelementptr inbounds %"struct.webrtc::VideoEncoder::LossNotification", %"struct.webrtc::VideoEncoder::LossNotification"* %7, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %35, align 2
  %36 = getelementptr inbounds %"struct.webrtc::RtpSequenceNumberMap::Info", %"struct.webrtc::RtpSequenceNumberMap::Info"* %22, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %27, align 4
  %38 = getelementptr inbounds %"struct.webrtc::RtpSequenceNumberMap::Info", %"struct.webrtc::RtpSequenceNumberMap::Info"* %22, i64 1, i32 0
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %28, align 4
  %40 = getelementptr inbounds %"struct.webrtc::RtpSequenceNumberMap::Info", %"struct.webrtc::RtpSequenceNumberMap::Info"* %22, i64 1, i32 1
  %41 = load i8, i8* %40, align 4, !range !2
  %42 = icmp eq i8 %41, 0
  %43 = getelementptr inbounds %"struct.webrtc::RtpSequenceNumberMap::Info", %"struct.webrtc::RtpSequenceNumberMap::Info"* %22, i64 1, i32 2
  %44 = load i8, i8* %43, align 1, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %42, label %57, label %46

46:                                               ; preds = %25
  %47 = bitcast %"class.absl::optional.28"* %29 to i16*
  %48 = zext i1 %4 to i16
  %49 = shl nuw nsw i16 %48, 8
  %50 = or i16 %49, 1
  store i16 %50, i16* %47, align 4
  br i1 %45, label %53, label %51

51:                                               ; preds = %46
  %52 = bitcast %"class.absl::optional.28"* %31 to i16*
  store i16 %50, i16* %52, align 2
  br label %69

53:                                               ; preds = %46
  %54 = xor i1 %4, true
  %55 = bitcast %"class.absl::optional.28"* %31 to i16*
  %56 = zext i1 %54 to i16
  store i16 %56, i16* %55, align 2
  br label %69

57:                                               ; preds = %25
  br i1 %45, label %64, label %58

58:                                               ; preds = %57
  br i1 %4, label %59, label %62

59:                                               ; preds = %58
  %60 = bitcast %"class.absl::optional.28"* %29 to i16*
  store i16 257, i16* %60, align 4
  %61 = bitcast %"class.absl::optional.28"* %31 to i16*
  store i16 257, i16* %61, align 2
  br label %69

62:                                               ; preds = %58
  store i8 0, i8* %30, align 4
  %63 = bitcast %"class.absl::optional.28"* %31 to i16*
  store i16 1, i16* %63, align 2
  br label %69

64:                                               ; preds = %57
  br i1 %4, label %65, label %67

65:                                               ; preds = %64
  %66 = bitcast %"class.absl::optional.28"* %29 to i16*
  store i16 257, i16* %66, align 4
  store i8 0, i8* %32, align 2
  br label %69

67:                                               ; preds = %64
  store i8 0, i8* %30, align 4
  %68 = bitcast %"class.absl::optional.28"* %31 to i16*
  store i16 1, i16* %68, align 2
  br label %69

69:                                               ; preds = %53, %65, %67, %59, %62, %51
  %70 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 5
  %71 = load %"class.webrtc::VideoStreamEncoderInterface"*, %"class.webrtc::VideoStreamEncoderInterface"** %70, align 8
  %72 = bitcast %"class.webrtc::VideoStreamEncoderInterface"* %71 to void (%"class.webrtc::VideoStreamEncoderInterface"*, %"struct.webrtc::VideoEncoder::LossNotification"*)***
  %73 = load void (%"class.webrtc::VideoStreamEncoderInterface"*, %"struct.webrtc::VideoEncoder::LossNotification"*)**, void (%"class.webrtc::VideoStreamEncoderInterface"*, %"struct.webrtc::VideoEncoder::LossNotification"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.webrtc::VideoStreamEncoderInterface"*, %"struct.webrtc::VideoEncoder::LossNotification"*)*, void (%"class.webrtc::VideoStreamEncoderInterface"*, %"struct.webrtc::VideoEncoder::LossNotification"*)** %73, i64 10
  %75 = load void (%"class.webrtc::VideoStreamEncoderInterface"*, %"struct.webrtc::VideoEncoder::LossNotification"*)*, void (%"class.webrtc::VideoStreamEncoderInterface"*, %"struct.webrtc::VideoEncoder::LossNotification"*)** %74, align 8
  call void %75(%"class.webrtc::VideoStreamEncoderInterface"* %71, %"struct.webrtc::VideoEncoder::LossNotification"* nonnull dereferenceable(12) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %26) #9
  %76 = load %"struct.webrtc::RtpSequenceNumberMap::Info"*, %"struct.webrtc::RtpSequenceNumberMap::Info"** %13, align 8
  br label %77

77:                                               ; preds = %5, %69
  %78 = phi %"struct.webrtc::RtpSequenceNumberMap::Info"* [ %22, %5 ], [ %76, %69 ]
  %79 = icmp eq %"struct.webrtc::RtpSequenceNumberMap::Info"* %78, null
  br i1 %79, label %84, label %80

80:                                               ; preds = %77
  %81 = ptrtoint %"struct.webrtc::RtpSequenceNumberMap::Info"* %78 to i64
  %82 = bitcast %"struct.webrtc::RtpSequenceNumberMap::Info"** %14 to i64*
  store i64 %81, i64* %82, align 8
  %83 = bitcast %"struct.webrtc::RtpSequenceNumberMap::Info"* %78 to i8*
  call void @_ZdlPv(i8* %83) #11
  br label %84

84:                                               ; preds = %77, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9
  call void @_ZdlPv(i8* nonnull %8) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N6webrtc19EncoderRtcpFeedback26OnReceivedLossNotificationEjttb(%"class.webrtc::EncoderRtcpFeedback"* nocapture readonly, i32, i16 zeroext, i16 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 -1, i32 8
  %7 = bitcast i32* %6 to %"class.webrtc::EncoderRtcpFeedback"*
  tail call void @_ZN6webrtc19EncoderRtcpFeedback26OnReceivedLossNotificationEjttb(%"class.webrtc::EncoderRtcpFeedback"* %7, i32 %1, i16 zeroext %2, i16 zeroext %3, i1 zeroext %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc19EncoderRtcpFeedbackD2Ev(%"class.webrtc::EncoderRtcpFeedback"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.webrtc::EncoderRtcpFeedback"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN6webrtc19EncoderRtcpFeedbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN6webrtc19EncoderRtcpFeedbackE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %3) #9
  %5 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = ptrtoint i32* %6 to i64
  %10 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 3, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = bitcast i32* %6 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  br label %13

13:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc19EncoderRtcpFeedbackD0Ev(%"class.webrtc::EncoderRtcpFeedback"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.webrtc::EncoderRtcpFeedback"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN6webrtc19EncoderRtcpFeedbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN6webrtc19EncoderRtcpFeedbackE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %3) #9
  %5 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = ptrtoint i32* %6 to i64
  %10 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 0, i32 3, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = bitcast i32* %6 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  br label %13

13:                                               ; preds = %1, %8
  %14 = bitcast %"class.webrtc::EncoderRtcpFeedback"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N6webrtc19EncoderRtcpFeedbackD1Ev(%"class.webrtc::EncoderRtcpFeedback"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 -1, i32 8
  %3 = bitcast i32* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN6webrtc19EncoderRtcpFeedbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN6webrtc19EncoderRtcpFeedbackE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 16
  %5 = bitcast i32* %4 to %union.pthread_mutex_t*
  %6 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %5) #9
  %7 = getelementptr inbounds i32, i32* %2, i64 6
  %8 = bitcast i32* %7 to i32**
  %9 = load i32*, i32** %8, align 8
  %10 = icmp eq i32* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %1
  %12 = ptrtoint i32* %9 to i64
  %13 = getelementptr inbounds i32, i32* %2, i64 8
  %14 = bitcast i32* %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = bitcast i32* %9 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %1, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N6webrtc19EncoderRtcpFeedbackD0Ev(%"class.webrtc::EncoderRtcpFeedback"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::EncoderRtcpFeedback", %"class.webrtc::EncoderRtcpFeedback"* %0, i64 -1, i32 8
  %3 = bitcast i32* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN6webrtc19EncoderRtcpFeedbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN6webrtc19EncoderRtcpFeedbackE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 16
  %5 = bitcast i32* %4 to %union.pthread_mutex_t*
  %6 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %5) #9
  %7 = getelementptr inbounds i32, i32* %2, i64 6
  %8 = bitcast i32* %7 to i32**
  %9 = load i32*, i32** %8, align 8
  %10 = icmp eq i32* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %1
  %12 = ptrtoint i32* %9 to i64
  %13 = getelementptr inbounds i32, i32* %2, i64 8
  %14 = bitcast i32* %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = bitcast i32* %9 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %1, %11
  %17 = bitcast i32* %2 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6webrtc28FieldTrialParameterInterfaceD2Ev(%"class.webrtc::FieldTrialParameterInterface"*) unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_destroy(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
