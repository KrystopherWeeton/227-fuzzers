; ModuleID = '../../net/socket/udp_socket_posix.cc'
source_filename = "../../net/socket/udp_socket_posix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"struct.base::Feature" = type { i8*, i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array.85" }
%"struct.std::__1::array.85" = type { [8 x i8] }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.net::UDPSocketPosix" = type { i32 (...)**, %"class.std::__1::unique_ptr", %class.scoped_refptr, %"class.std::__1::unique_ptr.2", %"class.std::__1::list", i32, i32, i32, i8, i32, i32, i32, i32, i32, %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11", %"class.base::MessagePumpLibevent::FdWatchController", %"class.base::MessagePumpLibevent::FdWatchController", %"class.net::UDPSocketPosix::ReadWatcher", %"class.net::UDPSocketPosix::WriteWatcher", i8, i8, i8, i32, i32, i32, %"class.base::RepeatingTimer", i8, i32, %class.scoped_refptr.23, %class.scoped_refptr.34, i32, %"class.net::IPEndPoint"*, %class.scoped_refptr.34, i32, %"class.std::__1::unique_ptr.11", %"class.base::OnceCallback", %"class.base::OnceCallback", %"class.net::NetLogWithSource", i64, i8, %"class.net::UDPSocketPosix::ReceivedActivityMonitor", %"class.net::SocketTag", i8, %"class.net::OwnedUDPSocketCount", %"class.base::WeakPtrFactory.48" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::UDPSocketPosix::WriteAsyncWatcher"* }
%"class.net::UDPSocketPosix::WriteAsyncWatcher" = type <{ %"class.base::WatchableIOMessagePumpPosix::FdWatcher", %"class.net::UDPSocketPosix"*, i8, [7 x i8] }>
%"class.base::WatchableIOMessagePumpPosix::FdWatcher" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.net::UDPSocketPosixSender"* }
%"class.net::UDPSocketPosixSender" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", i8, [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.net::DatagramBufferPool"* }
%"class.net::DatagramBufferPool" = type { i32 (...)**, i64, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.5" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i64 }
%"class.base::MessagePumpLibevent::FdWatchController" = type { %"class.base::WatchableIOMessagePumpPosix::FdWatchControllerInterface", %"class.std::__1::unique_ptr.17", %"class.base::MessagePumpLibevent"*, %"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i8* }
%"class.base::WatchableIOMessagePumpPosix::FdWatchControllerInterface" = type { i32 (...)**, %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %struct.event* }
%struct.event = type opaque
%"class.base::MessagePumpLibevent" = type <{ %"class.base::MessagePump", %"struct.base::MessagePumpLibevent::RunState"*, i8, [7 x i8], %struct.event_base*, i32, i32, %struct.event*, %"class.base::ThreadChecker", [7 x i8] }>
%"class.base::MessagePump" = type { i32 (...)** }
%"struct.base::MessagePumpLibevent::RunState" = type <{ %"class.base::MessagePump::Delegate"*, i8, [7 x i8] }>
%"class.base::MessagePump::Delegate" = type { i32 (...)** }
%struct.event_base = type opaque
%"class.base::ThreadChecker" = type { i8 }
%"class.net::UDPSocketPosix::ReadWatcher" = type { %"class.base::WatchableIOMessagePumpPosix::FdWatcher", %"class.net::UDPSocketPosix"* }
%"class.net::UDPSocketPosix::WriteWatcher" = type { %"class.base::WatchableIOMessagePumpPosix::FdWatcher", %"class.net::UDPSocketPosix"* }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.23, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.25 }
%class.scoped_refptr.25 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.26", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.26" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.27" }
%"struct.std::__1::atomic.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__cxx_atomic_impl.30" }
%"struct.std::__1::__cxx_atomic_impl.30" = type { %"struct.std::__1::__cxx_atomic_base_impl.31" }
%"struct.std::__1::__cxx_atomic_base_impl.31" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.33", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.33" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.23 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.24" }>
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%class.scoped_refptr.34 = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.35", i8* }
%"class.base::RefCountedThreadSafe.35" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.net::IPEndPoint"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.net::UDPSocketPosix::ReceivedActivityMonitor" = type { i32, i32, %"class.base::RepeatingTimer" }
%"class.net::SocketTag" = type { i8 }
%"class.net::OwnedUDPSocketCount" = type { i8 }
%"class.base::WeakPtrFactory.48" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.41" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.36" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.43" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"struct.net::SendResult" = type { i32, i32, %"class.std::__1::list" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.24", [4 x i8] }>
%"class.net::DatagramBuffer" = type { %"class.std::__1::unique_ptr.59", i64 }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { i8* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.net::SockaddrStorage" = type { %struct.sockaddr_storage, i32, %struct.sockaddr* }
%struct.sockaddr_storage = type { i16, [118 x i8], i64 }
%struct.sockaddr = type { i16, [14 x i8] }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.111" }
%"union.absl::variant_internal::DestructibleUnionImpl.111" = type { %"union.absl::variant_internal::DestructibleUnionImpl.112" }
%"union.absl::variant_internal::DestructibleUnionImpl.112" = type { %"union.absl::variant_internal::DestructibleUnionImpl.113" }
%"union.absl::variant_internal::DestructibleUnionImpl.113" = type { %"union.absl::variant_internal::DestructibleUnionImpl.114" }
%"union.absl::variant_internal::DestructibleUnionImpl.114" = type { %"class.std::__1::basic_string" }
%"class.base::CurrentIOThread" = type { %"class.base::CurrentThread" }
%"class.base::CurrentThread" = type { %"class.base::sequence_manager::internal::SequenceManagerImpl"* }
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type opaque
%"class.logging::ErrnoLogMessage" = type <{ %"class.logging::LogMessage", i32, [4 x i8] }>
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%struct.ip_mreqn = type { %struct.in_addr, %struct.in_addr, i32 }
%struct.in_addr = type { i32 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%struct.iovec = type { i8*, i64 }
%struct.msghdr = type { i8*, i32, %struct.iovec*, i64, i8*, i64, i32 }
%struct.ipv6_mreq = type { %struct.in6_addr, i32 }
%struct.in6_addr = type { %union.anon.55 }
%union.anon.55 = type { [4 x i32] }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::unique_ptr.56" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.net::DatagramBuffer"* }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<iovec, 17>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.70" }
%"struct.base::StackAllocator<iovec, 17>::Source" = type { [272 x i8], i8, [7 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<iovec, 17>::Source"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %struct.iovec*, %struct.iovec*, %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73", %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %struct.iovec* }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.base::StackAllocator" }
%"class.base::StackVector.75" = type { %"class.base::StackContainer.76" }
%"class.base::StackContainer.76" = type { %"struct.base::StackAllocator<mmsghdr, 17>::Source", %"class.base::StackAllocator.77", %"class.std::__1::vector.80" }
%"struct.base::StackAllocator<mmsghdr, 17>::Source" = type { [1088 x i8], i8, [7 x i8] }
%"class.base::StackAllocator.77" = type { %"struct.base::StackAllocator<mmsghdr, 17>::Source"* }
%"class.std::__1::vector.80" = type { %"class.std::__1::__vector_base.81" }
%"class.std::__1::__vector_base.81" = type { %struct.mmsghdr*, %struct.mmsghdr*, %"class.std::__1::__compressed_pair.82" }
%struct.mmsghdr = type { %struct.msghdr, i32 }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83", %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %struct.mmsghdr* }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.base::StackAllocator.77" }
%"class.base::OnceCallback.171" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.88 }
%class.scoped_refptr.88 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::OnceCallback.86" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.87" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.base::internal::BindState.151" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple.152" }
%"class.std::__1::tuple.152" = type { %"struct.std::__1::__tuple_impl.153" }
%"struct.std::__1::__tuple_impl.153" = type { %"class.std::__1::__tuple_leaf.154", %"class.std::__1::__tuple_leaf.155", %"class.std::__1::__tuple_leaf.156" }
%"class.std::__1::__tuple_leaf.154" = type { %class.scoped_refptr }
%"class.std::__1::__tuple_leaf.155" = type { i32 }
%"class.std::__1::__tuple_leaf.156" = type { %"class.std::__1::list" }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.net::SendResult"* }

$_ZN3net14UDPSocketPosix17WriteAsyncWatcher28OnFileCanReadWithoutBlockingEi = comdat any

$_ZN3net14UDPSocketPosix17WriteAsyncWatcherD0Ev = comdat any

$_ZN3net14UDPSocketPosix11ReadWatcher29OnFileCanWriteWithoutBlockingEi = comdat any

$_ZN3net14UDPSocketPosix11ReadWatcherD0Ev = comdat any

$_ZN3net14UDPSocketPosix12WriteWatcher28OnFileCanReadWithoutBlockingEi = comdat any

$_ZN3net14UDPSocketPosix12WriteWatcherD0Ev = comdat any

$_ZN4base27WatchableIOMessagePumpPosix9FdWatcherD2Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net14UDPSocketPosix23ReceivedActivityMonitorEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net14UDPSocketPosix23ReceivedActivityMonitorEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16vectorI5iovecN4base14StackAllocatorIS1_Lm17EEEE21__push_back_slow_pathIS1_EEvOT_ = comdat any

$_ZNSt3__16vectorI7mmsghdrN4base14StackAllocatorIS1_Lm17EEEE21__push_back_slow_pathIS1_EEvOT_ = comdat any

$_ZNSt3__14listINS_10unique_ptrIN3net14DatagramBufferENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE13__move_assignERS9_NS_17integral_constantIbLb1EEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net14UDPSocketPosixEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net14UDPSocketPosixEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net20UDPSocketPosixSenderEFNS3_10SendResultEiNSt3__14listINS6_10unique_ptrINS3_14DatagramBufferENS6_14default_deleteIS9_EEEENS6_9allocatorISC_EEEEEJ13scoped_refptrIS4_EiSF_EEEFS5_vEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal13FunctorTraitsIMN3net20UDPSocketPosixSenderEFNS2_10SendResultEiNSt3__14listINS5_10unique_ptrINS2_14DatagramBufferENS5_14default_deleteIS8_EEEENS5_9allocatorISB_EEEEEvE6InvokeISG_13scoped_refptrIS3_EJiSE_EEES4_T_OT0_DpOT1_ = comdat any

$_ZN4base8internal9BindStateIMN3net20UDPSocketPosixSenderEFNS2_10SendResultEiNSt3__14listINS5_10unique_ptrINS2_14DatagramBufferENS5_14default_deleteIS8_EEEENS5_9allocatorISB_EEEEEJ13scoped_refptrIS3_EiSE_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net20UDPSocketPosixSenderEFNS2_10SendResultEiNSt3__14listINS5_10unique_ptrINS2_14DatagramBufferENS5_14default_deleteIS8_EEEENS5_9allocatorISB_EEEEEJ13scoped_refptrIS3_EiSE_EED2Ev = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net14UDPSocketPosixEFvNS3_10SendResultEEJNS_7WeakPtrIS4_EEEEEFvS5_EE7RunOnceEPNS0_13BindStateBaseEOS5_ = comdat any

$_ZN4base8internal13FunctorTraitsIMN3net14UDPSocketPosixEFvNS2_10SendResultEEvE6InvokeIS6_NS_7WeakPtrIS3_EEJS4_EEEvT_OT0_DpOT1_ = comdat any

$_ZN4base8internal9BindStateIMN3net14UDPSocketPosixEFvNS2_10SendResultEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net14UDPSocketPosixEFvNS3_10SendResultEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE = comdat any

$_ZN4base8internal20ReturnAsParamAdapterIN3net10SendResultEEEvNS_12OnceCallbackIFT_vEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEE = comdat any

$_ZN4base8internal12ReplyAdapterIN3net10SendResultES3_EEvNS_12OnceCallbackIFvT0_EEEPNSt3__110unique_ptrIT_NS8_14default_deleteISA_EEEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFN3net10SendResultEvEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEJS7_SD_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFN3net10SendResultEvEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_SC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__110unique_ptrIN3net10SendResultENS_14default_deleteIS2_EEE5resetEPS2_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvN3net10SendResultEEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEJS7_NS0_12OwnedWrapperISC_NSA_ISC_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvN3net10SendResultEEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_NS0_12OwnedWrapperISB_NS9_ISB_EEEEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN3net14UDPSocketPosixE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::UDPSocketPosix"*)* @_ZN3net14UDPSocketPosixD2Ev to i8*), i8* bitcast (void (%"class.net::UDPSocketPosix"*)* @_ZN3net14UDPSocketPosixD0Ev to i8*), i8* bitcast (i1 (%"class.net::UDPSocketPosix"*)* @_ZN3net14UDPSocketPosix27InternalWatchFileDescriptorEv to i8*), i8* bitcast (void (%"class.net::UDPSocketPosix"*)* @_ZN3net14UDPSocketPosix34InternalStopWatchingFileDescriptorEv to i8*)] }, align 8
@.str = private unnamed_addr constant [15 x i8] c"UDPSocketPosix\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"../../net/socket/udp_socket_posix.cc\00", align 1
@_ZN3net21NetworkChangeNotifier21kInvalidNetworkHandleE = external local_unnamed_addr constant i64, align 8
@_ZN3net8features40kUdpSocketPosixAlwaysUpdateBytesReceivedE = external global %"struct.base::Feature", align 8
@.str.2 = private unnamed_addr constant [10 x i8] c"Increment\00", align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"socket_hash_ == GetSocketFDHash(socket_)\00", align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"IGNORE_EINTR(close(socket_)) == 0\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"read_callback_.is_null()\00", align 1
@.str.6 = private unnamed_addr constant [35 x i8] c"WatchFileDescriptor failed on read\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"write_callback_.is_null()\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"Net.UdpSocketRandomBindErrorCode\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.9 = private unnamed_addr constant [58 x i8] c"UDPSocketPosix::ReadWatcher::OnFileCanReadWithoutBlocking\00", align 1
@_ZTVN3net20UDPSocketPosixSenderE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::UDPSocketPosixSender"*)* @_ZN3net20UDPSocketPosixSenderD2Ev to i8*), i8* bitcast (void (%"class.net::UDPSocketPosixSender"*)* @_ZN3net20UDPSocketPosixSenderD0Ev to i8*), i8* bitcast (i64 (%"class.net::UDPSocketPosixSender"*, i32, i8*, i64, i32)* @_ZNK3net20UDPSocketPosixSender4SendEiPKvmi to i8*), i8* bitcast (i32 (%"class.net::UDPSocketPosixSender"*, i32, %struct.mmsghdr*, i32, i32)* @_ZNK3net20UDPSocketPosixSender8SendmmsgEiP7mmsghdrjj to i8*)] }, align 8
@.str.10 = private unnamed_addr constant [19 x i8] c"InternalWriteAsync\00", align 1
@.ref.tmp = private constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 2, i8 1, i8 0, i8 0, i8 0, i8 0 }, align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"PostSendBuffers\00", align 1
@_ZTVN3net14UDPSocketPosix17WriteAsyncWatcherE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::UDPSocketPosix::WriteAsyncWatcher"*, i32)* @_ZN3net14UDPSocketPosix17WriteAsyncWatcher28OnFileCanReadWithoutBlockingEi to i8*), i8* bitcast (void (%"class.net::UDPSocketPosix::WriteAsyncWatcher"*, i32)* @_ZN3net14UDPSocketPosix17WriteAsyncWatcher29OnFileCanWriteWithoutBlockingEi to i8*), i8* bitcast (void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*)* @_ZN4base27WatchableIOMessagePumpPosix9FdWatcherD2Ev to i8*), i8* bitcast (void (%"class.net::UDPSocketPosix::WriteAsyncWatcher"*)* @_ZN3net14UDPSocketPosix17WriteAsyncWatcherD0Ev to i8*)] }, align 8
@_ZTVN3net14UDPSocketPosix11ReadWatcherE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::UDPSocketPosix::ReadWatcher"*, i32)* @_ZN3net14UDPSocketPosix11ReadWatcher28OnFileCanReadWithoutBlockingEi to i8*), i8* bitcast (void (%"class.net::UDPSocketPosix::ReadWatcher"*, i32)* @_ZN3net14UDPSocketPosix11ReadWatcher29OnFileCanWriteWithoutBlockingEi to i8*), i8* bitcast (void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*)* @_ZN4base27WatchableIOMessagePumpPosix9FdWatcherD2Ev to i8*), i8* bitcast (void (%"class.net::UDPSocketPosix::ReadWatcher"*)* @_ZN3net14UDPSocketPosix11ReadWatcherD0Ev to i8*)] }, align 8
@_ZTVN3net14UDPSocketPosix12WriteWatcherE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::UDPSocketPosix::WriteWatcher"*, i32)* @_ZN3net14UDPSocketPosix12WriteWatcher28OnFileCanReadWithoutBlockingEi to i8*), i8* bitcast (void (%"class.net::UDPSocketPosix::WriteWatcher"*, i32)* @_ZN3net14UDPSocketPosix12WriteWatcher29OnFileCanWriteWithoutBlockingEi to i8*), i8* bitcast (void (%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*)* @_ZN4base27WatchableIOMessagePumpPosix9FdWatcherD2Ev to i8*), i8* bitcast (void (%"class.net::UDPSocketPosix::WriteWatcher"*)* @_ZN3net14UDPSocketPosix12WriteWatcherD0Ev to i8*)] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.13 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN3net14UDPSocketPosixC1ENS_14DatagramSocket8BindTypeEPNS_6NetLogERKNS_12NetLogSourceE = hidden unnamed_addr alias void (%"class.net::UDPSocketPosix"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*), void (%"class.net::UDPSocketPosix"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)* @_ZN3net14UDPSocketPosixC2ENS_14DatagramSocket8BindTypeEPNS_6NetLogERKNS_12NetLogSourceE
@_ZN3net14UDPSocketPosixD1Ev = hidden unnamed_addr alias void (%"class.net::UDPSocketPosix"*), void (%"class.net::UDPSocketPosix"*)* @_ZN3net14UDPSocketPosixD2Ev
@_ZN3net20UDPSocketPosixSenderC1Ev = hidden unnamed_addr alias void (%"class.net::UDPSocketPosixSender"*), void (%"class.net::UDPSocketPosixSender"*)* @_ZN3net20UDPSocketPosixSenderC2Ev
@_ZN3net20UDPSocketPosixSenderD1Ev = hidden unnamed_addr alias void (%"class.net::UDPSocketPosixSender"*), void (%"class.net::UDPSocketPosixSender"*)* @_ZN3net20UDPSocketPosixSenderD2Ev
@_ZN3net10SendResultC1Ev = hidden unnamed_addr alias void (%"struct.net::SendResult"*), void (%"struct.net::SendResult"*)* @_ZN3net10SendResultC2Ev
@_ZN3net10SendResultD1Ev = hidden unnamed_addr alias void (%"struct.net::SendResult"*), void (%"struct.net::SendResult"*)* @_ZN3net10SendResultD2Ev
@_ZN3net10SendResultC1EiiNSt3__14listINS1_10unique_ptrINS_14DatagramBufferENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE = hidden unnamed_addr alias void (%"struct.net::SendResult"*, i32, i32, %"class.std::__1::list"*), void (%"struct.net::SendResult"*, i32, i32, %"class.std::__1::list"*)* @_ZN3net10SendResultC2EiiNSt3__14listINS1_10unique_ptrINS_14DatagramBufferENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE
@_ZN3net10SendResultC1EOS0_ = hidden unnamed_addr alias void (%"struct.net::SendResult"*, %"struct.net::SendResult"*), void (%"struct.net::SendResult"*, %"struct.net::SendResult"*)* @_ZN3net10SendResultC2EOS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosixC2ENS_14DatagramSocket8BindTypeEPNS_6NetLogERKNS_12NetLogSourceE(%"class.net::UDPSocketPosix"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14UDPSocketPosixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = ptrtoint %"class.net::UDPSocketPosix"* %0 to i64
  %9 = tail call i8* @_Znwm(i64 24) #14
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14UDPSocketPosix17WriteAsyncWatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i64*
  store i64 %8, i64* %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 16
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = bitcast %"class.net::UDPSocketPosix::WriteAsyncWatcher"** %14 to i8**
  store i8* %9, i8** %15, align 8
  %16 = tail call i8* @_Znwm(i64 16) #14
  %17 = getelementptr inbounds i8, i8* %16, i64 8
  %18 = bitcast i8* %17 to i32*
  store i32 0, i32* %18, align 4
  %19 = bitcast i8* %16 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net20UDPSocketPosixSenderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds i8, i8* %16, i64 12
  store i8 0, i8* %20, align 4
  %21 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 2, i32 0
  %22 = bitcast %"class.net::UDPSocketPosixSender"** %21 to i8**
  store i8* %16, i8** %22, align 8
  %23 = atomicrmw add i32* %18, i32 1 monotonic
  %24 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 3
  %25 = bitcast %"class.std::__1::unique_ptr.2"* %24 to i64*
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 4
  %27 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %26, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %26, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %27, %"struct.std::__1::__list_node_base"** %28, align 8
  %29 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %27, %"struct.std::__1::__list_node_base"** %29, align 8
  %30 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  store i32 -1, i32* %31, align 8
  %32 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 6
  %33 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 9
  %34 = bitcast i32* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %34, i8 0, i64 9, i1 false)
  %35 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> <i32 1, i32 0, i32 0, i32 1>, <4 x i32>* %35, align 8
  %36 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 13
  store i32 %1, i32* %36, align 8
  %37 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 14
  %38 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 16
  %39 = bitcast %"class.base::Location"* %5 to i8*
  %40 = bitcast %"class.std::__1::unique_ptr.11"* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #15
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 167) #15
  call void @_ZN4base19MessagePumpLibevent17FdWatchControllerC1ERKNS_8LocationE(%"class.base::MessagePumpLibevent::FdWatchController"* %38, %"class.base::Location"* nonnull dereferenceable(32) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #15
  %41 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 17
  %42 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #15
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 168) #15
  call void @_ZN4base19MessagePumpLibevent17FdWatchControllerC1ERKNS_8LocationE(%"class.base::MessagePumpLibevent::FdWatchController"* %41, %"class.base::Location"* nonnull dereferenceable(32) %6) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #15
  %43 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 18, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14UDPSocketPosix11ReadWatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 18, i32 1
  store %"class.net::UDPSocketPosix"* %0, %"class.net::UDPSocketPosix"** %44, align 8
  %45 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 19, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14UDPSocketPosix12WriteWatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 19, i32 1
  store %"class.net::UDPSocketPosix"* %0, %"class.net::UDPSocketPosix"** %46, align 8
  %47 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 20
  store i8 0, i8* %47, align 8
  %48 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 21
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 22
  store i8 0, i8* %49, align 2
  %50 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 23
  store i32 16, i32* %50, align 4
  %51 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 24
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 25
  store i32 0, i32* %52, align 4
  %53 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 26
  call void @_ZN4base14RepeatingTimerC1Ev(%"class.base::RepeatingTimer"* %53) #15
  %54 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 27
  store i8 0, i8* %54, align 8
  %55 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 28
  %56 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 32
  %57 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 35
  %58 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 38
  %59 = bitcast i32* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 24, i1 false)
  %60 = bitcast %"class.net::IPEndPoint"** %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 20, i1 false)
  %61 = bitcast %"class.std::__1::unique_ptr.11"* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false)
  call void @_ZN3net16NetLogWithSource4MakeEPNS_6NetLogENS_16NetLogSourceTypeE(%"class.net::NetLogWithSource"* sret %58, %"class.net::NetLog"* %2, i32 17) #15
  %62 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 39
  %63 = load i64, i64* @_ZN3net21NetworkChangeNotifier21kInvalidNetworkHandleE, align 8
  store i64 %63, i64* %62, align 8
  %64 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 40
  %65 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features40kUdpSocketPosixAlwaysUpdateBytesReceivedE) #15
  %66 = zext i1 %65 to i8
  store i8 %66, i8* %64, align 8
  %67 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 41, i32 0
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 41, i32 1
  store i32 0, i32* %68, align 4
  %69 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 41, i32 2
  call void @_ZN4base14RepeatingTimerC1Ev(%"class.base::RepeatingTimer"* %69) #15
  %70 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 43
  store i8 0, i8* %70, align 1
  %71 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 44
  call void @_ZN3net19OwnedUDPSocketCountC1Ev(%"class.net::OwnedUDPSocketCount"* %71) #15
  %72 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 45, i32 0
  call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %72, i64 %8) #15
  call void @_ZNK3net16NetLogWithSource27BeginEventReferencingSourceENS_15NetLogEventTypeERKNS_12NetLogSourceE(%"class.net::NetLogWithSource"* %58, i32 34, %"struct.net::NetLogSource"* dereferenceable(16) %3) #15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

declare void @_ZN4base19MessagePumpLibevent17FdWatchControllerC1ERKNS_8LocationE(%"class.base::MessagePumpLibevent::FdWatchController"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #3

declare void @_ZN4base14RepeatingTimerC1Ev(%"class.base::RepeatingTimer"*) unnamed_addr #3

declare void @_ZN3net16NetLogWithSource4MakeEPNS_6NetLogENS_16NetLogSourceTypeE(%"class.net::NetLogWithSource"* sret, %"class.net::NetLog"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN3net19OwnedUDPSocketCountC1Ev(%"class.net::OwnedUDPSocketCount"*) unnamed_addr #3

declare void @_ZNK3net16NetLogWithSource27BeginEventReferencingSourceENS_15NetLogEventTypeERKNS_12NetLogSourceE(%"class.net::NetLogWithSource"*, i32, %"struct.net::NetLogSource"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosixD2Ev(%"class.net::UDPSocketPosix"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14UDPSocketPosixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN3net14UDPSocketPosix5CloseEv(%"class.net::UDPSocketPosix"* %0)
  %3 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 38
  tail call void @_ZNK3net16NetLogWithSource8EndEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %3, i32 34) #15
  %4 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 45, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %4) #15
  %5 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 44
  tail call void @_ZN3net19OwnedUDPSocketCountD1Ev(%"class.net::OwnedUDPSocketCount"* %5) #15
  %6 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 41, i32 2
  tail call void @_ZN4base14RepeatingTimerD1Ev(%"class.base::RepeatingTimer"* %6) #15
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %3) #15
  %7 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 37, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %7) #15
  %8 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 36, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %8) #15
  %9 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 35, i32 0, i32 0, i32 0
  %10 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %9, align 8
  store %"class.net::IPEndPoint"* null, %"class.net::IPEndPoint"** %9, align 8
  %11 = icmp eq %"class.net::IPEndPoint"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %10) #15
  %13 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %13) #14
  br label %14

14:                                               ; preds = %1, %12
  %15 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 33, i32 0
  %16 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %15, align 8
  %17 = icmp eq %"class.net::IOBuffer"* %16, null
  br i1 %17, label %30, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %16, i64 0, i32 1
  %20 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %30

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %19, i64 -2
  %25 = bitcast %"class.base::RefCountedThreadSafe.35"* %24 to %"class.net::IOBuffer"*
  %26 = bitcast %"class.base::RefCountedThreadSafe.35"* %24 to void (%"class.net::IOBuffer"*)***
  %27 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %27, i64 1
  %29 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %28, align 8
  tail call void %29(%"class.net::IOBuffer"* nonnull %25) #15
  br label %30

30:                                               ; preds = %14, %18, %23
  %31 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 30, i32 0
  %32 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %31, align 8
  %33 = icmp eq %"class.net::IOBuffer"* %32, null
  br i1 %33, label %46, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %32, i64 0, i32 1
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw sub i32* %36, i32 1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %46

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %35, i64 -2
  %41 = bitcast %"class.base::RefCountedThreadSafe.35"* %40 to %"class.net::IOBuffer"*
  %42 = bitcast %"class.base::RefCountedThreadSafe.35"* %40 to void (%"class.net::IOBuffer"*)***
  %43 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %43, i64 1
  %45 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %44, align 8
  tail call void %45(%"class.net::IOBuffer"* nonnull %41) #15
  br label %46

46:                                               ; preds = %30, %34, %39
  %47 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 29, i32 0
  %48 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %47, align 8
  %49 = icmp eq %"class.base::SequencedTaskRunner"* %48, null
  br i1 %49, label %58, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %48, i64 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.base::RefCountedThreadSafe.24", %"class.base::RefCountedThreadSafe.24"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw sub i32* %52, i32 1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %58

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe.24", %"class.base::RefCountedThreadSafe.24"* %51, i64 -2
  %57 = bitcast %"class.base::RefCountedThreadSafe.24"* %56 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %57) #15
  br label %58

58:                                               ; preds = %46, %50, %55
  %59 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 26
  tail call void @_ZN4base14RepeatingTimerD1Ev(%"class.base::RepeatingTimer"* %59) #15
  %60 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 17
  tail call void @_ZN4base19MessagePumpLibevent17FdWatchControllerD1Ev(%"class.base::MessagePumpLibevent::FdWatchController"* %60) #15
  %61 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 16
  tail call void @_ZN4base19MessagePumpLibevent17FdWatchControllerD1Ev(%"class.base::MessagePumpLibevent::FdWatchController"* %61) #15
  %62 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %63 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %62, align 8
  store %"class.net::IPEndPoint"* null, %"class.net::IPEndPoint"** %62, align 8
  %64 = icmp eq %"class.net::IPEndPoint"* %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %58
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %63) #15
  %66 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %66) #14
  br label %67

67:                                               ; preds = %58, %65
  %68 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %69 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %68, align 8
  store %"class.net::IPEndPoint"* null, %"class.net::IPEndPoint"** %68, align 8
  %70 = icmp eq %"class.net::IPEndPoint"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %69) #15
  %72 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %72) #14
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 4, i32 0
  %75 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %109, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %80 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %74, i64 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %74, i64 0, i32 0, i32 0
  %83 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %82, align 8
  %84 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %83, i64 0, i32 1
  %85 = bitcast %"struct.std::__1::__list_node_base"** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %80, i64 0, i32 0
  %88 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %87, align 8
  %89 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %88, i64 0, i32 1
  %90 = bitcast %"struct.std::__1::__list_node_base"** %89 to i64*
  store i64 %86, i64* %90, align 8
  %91 = bitcast %"struct.std::__1::__list_node_base"* %80 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"struct.std::__1::__list_node_base"** %84 to i64**
  %94 = load i64*, i64** %93, align 8
  store i64 %92, i64* %94, align 8
  store i64 0, i64* %75, align 8
  %95 = icmp eq %"struct.std::__1::__list_node_base"* %80, %81
  br i1 %95, label %109, label %96

96:                                               ; preds = %78, %106
  %97 = phi %"struct.std::__1::__list_node_base"* [ %99, %106 ], [ %80, %78 ]
  %98 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %97, i64 0, i32 1
  %99 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %97, i64 1
  %101 = bitcast %"struct.std::__1::__list_node_base"* %100 to %"class.net::DatagramBuffer"**
  %102 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %101, align 8
  store %"class.net::DatagramBuffer"* null, %"class.net::DatagramBuffer"** %101, align 8
  %103 = icmp eq %"class.net::DatagramBuffer"* %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %96
  tail call void @_ZN3net14DatagramBufferD1Ev(%"class.net::DatagramBuffer"* nonnull %102) #15
  %105 = bitcast %"class.net::DatagramBuffer"* %102 to i8*
  tail call void @_ZdlPv(i8* %105) #14
  br label %106

106:                                              ; preds = %104, %96
  %107 = bitcast %"struct.std::__1::__list_node_base"* %97 to i8*
  tail call void @_ZdlPv(i8* %107) #14
  %108 = icmp eq %"struct.std::__1::__list_node_base"* %99, %81
  br i1 %108, label %109, label %96

109:                                              ; preds = %106, %73, %78
  %110 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %111 = load %"class.net::DatagramBufferPool"*, %"class.net::DatagramBufferPool"** %110, align 8
  store %"class.net::DatagramBufferPool"* null, %"class.net::DatagramBufferPool"** %110, align 8
  %112 = icmp eq %"class.net::DatagramBufferPool"* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %109
  %114 = bitcast %"class.net::DatagramBufferPool"* %111 to void (%"class.net::DatagramBufferPool"*)***
  %115 = load void (%"class.net::DatagramBufferPool"*)**, void (%"class.net::DatagramBufferPool"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.net::DatagramBufferPool"*)*, void (%"class.net::DatagramBufferPool"*)** %115, i64 1
  %117 = load void (%"class.net::DatagramBufferPool"*)*, void (%"class.net::DatagramBufferPool"*)** %116, align 8
  tail call void %117(%"class.net::DatagramBufferPool"* nonnull %111) #15
  br label %118

118:                                              ; preds = %109, %113
  %119 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 2, i32 0
  %120 = load %"class.net::UDPSocketPosixSender"*, %"class.net::UDPSocketPosixSender"** %119, align 8
  %121 = icmp eq %"class.net::UDPSocketPosixSender"* %120, null
  br i1 %121, label %134, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.net::UDPSocketPosixSender", %"class.net::UDPSocketPosixSender"* %120, i64 0, i32 1
  %124 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = atomicrmw sub i32* %124, i32 1 acq_rel
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %134

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %123, i64 -2
  %129 = bitcast %"class.base::RefCountedThreadSafe"* %128 to %"class.net::UDPSocketPosixSender"*
  %130 = bitcast %"class.base::RefCountedThreadSafe"* %128 to void (%"class.net::UDPSocketPosixSender"*)***
  %131 = load void (%"class.net::UDPSocketPosixSender"*)**, void (%"class.net::UDPSocketPosixSender"*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.net::UDPSocketPosixSender"*)*, void (%"class.net::UDPSocketPosixSender"*)** %131, i64 1
  %133 = load void (%"class.net::UDPSocketPosixSender"*)*, void (%"class.net::UDPSocketPosixSender"*)** %132, align 8
  tail call void %133(%"class.net::UDPSocketPosixSender"* nonnull %129) #15
  br label %134

134:                                              ; preds = %118, %122, %127
  %135 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %136 = load %"class.net::UDPSocketPosix::WriteAsyncWatcher"*, %"class.net::UDPSocketPosix::WriteAsyncWatcher"** %135, align 8
  store %"class.net::UDPSocketPosix::WriteAsyncWatcher"* null, %"class.net::UDPSocketPosix::WriteAsyncWatcher"** %135, align 8
  %137 = icmp eq %"class.net::UDPSocketPosix::WriteAsyncWatcher"* %136, null
  br i1 %137, label %143, label %138

138:                                              ; preds = %134
  %139 = bitcast %"class.net::UDPSocketPosix::WriteAsyncWatcher"* %136 to void (%"class.net::UDPSocketPosix::WriteAsyncWatcher"*)***
  %140 = load void (%"class.net::UDPSocketPosix::WriteAsyncWatcher"*)**, void (%"class.net::UDPSocketPosix::WriteAsyncWatcher"*)*** %139, align 8
  %141 = getelementptr inbounds void (%"class.net::UDPSocketPosix::WriteAsyncWatcher"*)*, void (%"class.net::UDPSocketPosix::WriteAsyncWatcher"*)** %140, i64 3
  %142 = load void (%"class.net::UDPSocketPosix::WriteAsyncWatcher"*)*, void (%"class.net::UDPSocketPosix::WriteAsyncWatcher"*)** %141, align 8
  tail call void %142(%"class.net::UDPSocketPosix::WriteAsyncWatcher"* nonnull %136) #15
  br label %143

143:                                              ; preds = %134, %138
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix5CloseEv(%"class.net::UDPSocketPosix"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 44
  tail call void @_ZN3net19OwnedUDPSocketCount5ResetEv(%"class.net::OwnedUDPSocketCount"* %6) #15
  %7 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %100, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 30
  %12 = bitcast %class.scoped_refptr.34* %11 to i64*
  %13 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %11, i64 0, i32 0
  %14 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %13, align 8
  store i64 0, i64* %12, align 8
  %15 = icmp eq %"class.net::IOBuffer"* %14, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %14, i64 0, i32 1
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %28

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %17, i64 -2
  %23 = bitcast %"class.base::RefCountedThreadSafe.35"* %22 to %"class.net::IOBuffer"*
  %24 = bitcast %"class.base::RefCountedThreadSafe.35"* %22 to void (%"class.net::IOBuffer"*)***
  %25 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %25, i64 1
  %27 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %26, align 8
  tail call void %27(%"class.net::IOBuffer"* nonnull %23) #15
  br label %28

28:                                               ; preds = %10, %16, %21
  %29 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 31
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 36, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %30) #15
  %31 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 32
  store %"class.net::IPEndPoint"* null, %"class.net::IPEndPoint"** %31, align 8
  %32 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 33
  %33 = bitcast %class.scoped_refptr.34* %32 to i64*
  %34 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %32, i64 0, i32 0
  %35 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %34, align 8
  store i64 0, i64* %33, align 8
  %36 = icmp eq %"class.net::IOBuffer"* %35, null
  br i1 %36, label %49, label %37

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %35, i64 0, i32 1
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw sub i32* %39, i32 1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %49

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %38, i64 -2
  %44 = bitcast %"class.base::RefCountedThreadSafe.35"* %43 to %"class.net::IOBuffer"*
  %45 = bitcast %"class.base::RefCountedThreadSafe.35"* %43 to void (%"class.net::IOBuffer"*)***
  %46 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %46, i64 1
  %48 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %47, align 8
  tail call void %48(%"class.net::IOBuffer"* nonnull %44) #15
  br label %49

49:                                               ; preds = %28, %37, %42
  %50 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 34
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 37, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %51) #15
  %52 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 35, i32 0, i32 0, i32 0
  %53 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %52, align 8
  store %"class.net::IPEndPoint"* null, %"class.net::IPEndPoint"** %52, align 8
  %54 = icmp eq %"class.net::IPEndPoint"* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %49
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %53) #15
  %56 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %56) #14
  br label %57

57:                                               ; preds = %49, %55
  %58 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 16
  %59 = tail call zeroext i1 @_ZN4base19MessagePumpLibevent17FdWatchController26StopWatchingFileDescriptorEv(%"class.base::MessagePumpLibevent::FdWatchController"* %58) #15
  %60 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 17
  %61 = tail call zeroext i1 @_ZN4base19MessagePumpLibevent17FdWatchController26StopWatchingFileDescriptorEv(%"class.base::MessagePumpLibevent::FdWatchController"* %60) #15
  %62 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #15
  %63 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %63, align 8
  %64 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 6
  %65 = load i32, i32* %64, align 4
  %66 = load i32, i32* %7, align 8
  %67 = xor i32 %66, 1595649551
  %68 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68)
  %69 = icmp eq i32 %65, %67
  br i1 %69, label %70, label %71

70:                                               ; preds = %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68)
  store i8* null, i8** %63, align 8
  br label %80

71:                                               ; preds = %57
  %72 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %65) #15
  %73 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %67) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0), i8* %72, i8* %73) #15
  %74 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %75 = load i8*, i8** %74, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68)
  store i8* %75, i8** %63, align 8
  %76 = icmp eq i8* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %71
  %78 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 290, %"class.logging::CheckOpResult"* nonnull %3) #15
  %79 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #15
  br label %80

80:                                               ; preds = %70, %71, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #15
  %81 = load i32, i32* %7, align 8
  %82 = call i32 @close(i32 %81) #15
  switch i32 %82, label %87 [
    i32 -1, label %83
    i32 0, label %90
  ]

83:                                               ; preds = %80
  %84 = tail call i32* @__errno_location() #16
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 4
  br i1 %86, label %90, label %87

87:                                               ; preds = %80, %83
  %88 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #15
  call void @_ZN7logging10CheckError6PCheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 301, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0)) #15
  %89 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #15
  br label %90

90:                                               ; preds = %80, %83, %87
  store i32 -1, i32* %7, align 8
  %91 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 7
  store i32 0, i32* %91, align 8
  %92 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 8
  store i8 0, i8* %92, align 4
  %93 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 26, i32 0
  call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %93) #15
  %94 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 41, i32 2, i32 0
  call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %94) #15
  %95 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 41, i32 0
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %100, label %98

98:                                               ; preds = %90
  %99 = zext i32 %96 to i64
  call void @_ZN3net16activity_monitor22IncrementBytesReceivedEm(i64 %99) #15
  store i32 0, i32* %95, align 8
  br label %100

100:                                              ; preds = %98, %90, %1
  ret void
}

declare void @_ZNK3net16NetLogWithSource8EndEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3net19OwnedUDPSocketCountD1Ev(%"class.net::OwnedUDPSocketCount"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base14RepeatingTimerD1Ev(%"class.base::RepeatingTimer"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base19MessagePumpLibevent17FdWatchControllerD1Ev(%"class.base::MessagePumpLibevent::FdWatchController"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosixD0Ev(%"class.net::UDPSocketPosix"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net14UDPSocketPosixD2Ev(%"class.net::UDPSocketPosix"* %0) #15
  %2 = bitcast %"class.net::UDPSocketPosix"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix4OpenENS_13AddressFamilyE(%"class.net::UDPSocketPosix"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.net::OwnedUDPSocketCount", align 1
  %4 = alloca %"class.net::SocketTag", align 1
  %5 = getelementptr inbounds %"class.net::OwnedUDPSocketCount", %"class.net::OwnedUDPSocketCount"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #15
  store i8 -86, i8* %5, align 1
  call void @_ZN3net30TryAcquireGlobalUDPSocketCountEv(%"class.net::OwnedUDPSocketCount"* nonnull sret %3) #15
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = call i32 @_ZN3net20ConvertAddressFamilyENS_13AddressFamilyE(i32 %1) #15
  %10 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 7
  store i32 %9, i32* %10, align 8
  %11 = call i32 @_ZN3net20CreatePlatformSocketEiii(i32 %9, i32 2, i32 0) #15
  %12 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  store i32 %11, i32* %12, align 8
  %13 = icmp eq i32 %11, -1
  br i1 %13, label %14, label %18

14:                                               ; preds = %8
  %15 = tail call i32* @__errno_location() #16
  %16 = load i32, i32* %15, align 4
  %17 = call i32 @_ZN3net14MapSystemErrorEi(i32 %16) #15
  br label %35

18:                                               ; preds = %8
  %19 = xor i32 %11, 1595649551
  %20 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 6
  store i32 %19, i32* %20, align 4
  %21 = call zeroext i1 @_ZN4base14SetNonBlockingEi(i32 %11) #15
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = tail call i32* @__errno_location() #16
  %24 = load i32, i32* %23, align 4
  %25 = call i32 @_ZN3net14MapSystemErrorEi(i32 %24) #15
  call void @_ZN3net14UDPSocketPosix5CloseEv(%"class.net::UDPSocketPosix"* %0)
  br label %35

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 42
  %28 = getelementptr inbounds %"class.net::SocketTag", %"class.net::SocketTag"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %28) #15
  %29 = call zeroext i1 @_ZNK3net9SocketTageqERKS0_(%"class.net::SocketTag"* %27, %"class.net::SocketTag"* nonnull dereferenceable(1) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %28) #15
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = load i32, i32* %12, align 8
  call void @_ZNK3net9SocketTag5ApplyEi(%"class.net::SocketTag"* %27, i32 %31) #15
  br label %32

32:                                               ; preds = %26, %30
  %33 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 44
  %34 = call dereferenceable(1) %"class.net::OwnedUDPSocketCount"* @_ZN3net19OwnedUDPSocketCountaSEOS0_(%"class.net::OwnedUDPSocketCount"* %33, %"class.net::OwnedUDPSocketCount"* nonnull dereferenceable(1) %3) #15
  br label %35

35:                                               ; preds = %2, %32, %22, %14
  %36 = phi i32 [ %17, %14 ], [ 0, %32 ], [ %25, %22 ], [ -12, %2 ]
  call void @_ZN3net19OwnedUDPSocketCountD1Ev(%"class.net::OwnedUDPSocketCount"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #15
  ret i32 %36
}

declare void @_ZN3net30TryAcquireGlobalUDPSocketCountEv(%"class.net::OwnedUDPSocketCount"* sret) local_unnamed_addr #3

declare i32 @_ZN3net20ConvertAddressFamilyENS_13AddressFamilyE(i32) local_unnamed_addr #3

declare i32 @_ZN3net20CreatePlatformSocketEiii(i32, i32, i32) local_unnamed_addr #3

declare i32 @_ZN3net14MapSystemErrorEi(i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #6

declare zeroext i1 @_ZN4base14SetNonBlockingEi(i32) local_unnamed_addr #3

declare void @_ZNK3net9SocketTag5ApplyEi(%"class.net::SocketTag"*, i32) local_unnamed_addr #3

declare dereferenceable(1) %"class.net::OwnedUDPSocketCount"* @_ZN3net19OwnedUDPSocketCountaSEOS0_(%"class.net::OwnedUDPSocketCount"*, %"class.net::OwnedUDPSocketCount"* dereferenceable(1)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix23ReceivedActivityMonitor9IncrementEj(%"class.net::UDPSocketPosix::ReceivedActivityMonitor"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %42, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::UDPSocketPosix::ReceivedActivityMonitor", %"class.net::UDPSocketPosix::ReceivedActivityMonitor"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.base::RepeatingTimer", %"class.base::RepeatingTimer"* %7, i64 0, i32 0
  %9 = tail call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %8) #15
  %10 = getelementptr inbounds %"class.net::UDPSocketPosix::ReceivedActivityMonitor", %"class.net::UDPSocketPosix::ReceivedActivityMonitor"* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, %1
  store i32 %12, i32* %10, align 8
  %13 = getelementptr inbounds %"class.net::UDPSocketPosix::ReceivedActivityMonitor", %"class.net::UDPSocketPosix::ReceivedActivityMonitor"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %13, align 4
  %16 = icmp ult i32 %15, 2
  br i1 %16, label %19, label %17

17:                                               ; preds = %6
  %18 = icmp ugt i32 %12, 65535
  br i1 %18, label %21, label %25

19:                                               ; preds = %6
  %20 = icmp eq i32 %12, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %17, %19
  %22 = zext i32 %12 to i64
  tail call void @_ZN3net16activity_monitor22IncrementBytesReceivedEm(i64 %22) #15
  store i32 0, i32* %10, align 8
  br label %23

23:                                               ; preds = %19, %21
  br i1 %9, label %24, label %26

24:                                               ; preds = %23
  tail call void @_ZN4base8internal9TimerBase5ResetEv(%"class.base::internal::TimerBase"* %8) #15
  br label %42

25:                                               ; preds = %17
  br i1 %9, label %42, label %26

26:                                               ; preds = %23, %25
  %27 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #15
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 236) #15
  %28 = bitcast %"class.base::RepeatingCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  %29 = ptrtoint %"class.net::UDPSocketPosix::ReceivedActivityMonitor"* %0 to i64
  %30 = call i8* @_Znwm(i64 56) #14, !noalias !3
  %31 = bitcast i8* %30 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %31, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14UDPSocketPosix23ReceivedActivityMonitorEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14UDPSocketPosix23ReceivedActivityMonitorEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #15, !noalias !3
  %32 = getelementptr inbounds i8, i8* %30, i64 32
  %33 = bitcast i8* %32 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::UDPSocketPosix::ReceivedActivityMonitor"*)* @_ZN3net14UDPSocketPosix23ReceivedActivityMonitor12OnTimerFiredEv to i64), i64 0>, <2 x i64>* %33, align 8, !noalias !3
  %34 = getelementptr inbounds i8, i8* %30, i64 48
  %35 = bitcast i8* %34 to i64*
  store i64 %29, i64* %35, align 8, !noalias !3
  %36 = bitcast %"class.base::RepeatingCallback"* %3 to i8**
  store i8* %30, i8** %36, align 8, !alias.scope !3
  %37 = bitcast %"class.base::RepeatingTimer"* %7 to void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)***
  %38 = load void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)**, void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)*, void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)** %38, i64 7
  %40 = load void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)*, void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)** %39, align 8
  call void %40(%"class.base::RepeatingTimer"* %7, %"class.base::Location"* nonnull dereferenceable(32) %4, i64 100000, %"class.base::RepeatingCallback"* nonnull %3) #15
  %41 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #15
  br label %42

42:                                               ; preds = %24, %25, %26, %2
  ret void
}

declare zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix23ReceivedActivityMonitor6UpdateEv(%"class.net::UDPSocketPosix::ReceivedActivityMonitor"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPSocketPosix::ReceivedActivityMonitor", %"class.net::UDPSocketPosix::ReceivedActivityMonitor"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = zext i32 %3 to i64
  tail call void @_ZN3net16activity_monitor22IncrementBytesReceivedEm(i64 %6) #15
  store i32 0, i32* %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN4base8internal9TimerBase5ResetEv(%"class.base::internal::TimerBase"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix23ReceivedActivityMonitor12OnTimerFiredEv(%"class.net::UDPSocketPosix::ReceivedActivityMonitor"*) #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPSocketPosix::ReceivedActivityMonitor", %"class.net::UDPSocketPosix::ReceivedActivityMonitor"* %0, i64 0, i32 1
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.net::UDPSocketPosix::ReceivedActivityMonitor", %"class.net::UDPSocketPosix::ReceivedActivityMonitor"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::UDPSocketPosix::ReceivedActivityMonitor", %"class.net::UDPSocketPosix::ReceivedActivityMonitor"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %7) #15
  br label %10

8:                                                ; preds = %1
  %9 = zext i32 %4 to i64
  tail call void @_ZN3net16activity_monitor22IncrementBytesReceivedEm(i64 %9) #15
  store i32 0, i32* %3, align 8
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

declare void @_ZN3net16activity_monitor22IncrementBytesReceivedEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix23ReceivedActivityMonitor7OnCloseEv(%"class.net::UDPSocketPosix::ReceivedActivityMonitor"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPSocketPosix::ReceivedActivityMonitor", %"class.net::UDPSocketPosix::ReceivedActivityMonitor"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %2) #15
  %3 = getelementptr inbounds %"class.net::UDPSocketPosix::ReceivedActivityMonitor", %"class.net::UDPSocketPosix::ReceivedActivityMonitor"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = zext i32 %4 to i64
  tail call void @_ZN3net16activity_monitor22IncrementBytesReceivedEm(i64 %7) #15
  store i32 0, i32* %3, align 8
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

declare void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"*) unnamed_addr #3

declare void @_ZN3net19OwnedUDPSocketCount5ResetEv(%"class.net::OwnedUDPSocketCount"*) local_unnamed_addr #3

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #3

declare zeroext i1 @_ZN4base19MessagePumpLibevent17FdWatchController26StopWatchingFileDescriptorEv(%"class.base::MessagePumpLibevent::FdWatchController"*) unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i32 @close(i32) local_unnamed_addr #3

declare void @_ZN7logging10CheckError6PCheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net14UDPSocketPosix14GetPeerAddressEPNS_10IPEndPointE(%"class.net::UDPSocketPosix"* nocapture, %"class.net::IPEndPoint"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.net::SockaddrStorage", align 8
  %4 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 8
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %49, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 15
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %9, align 8
  %11 = icmp eq %"class.net::IPEndPoint"* %10, null
  br i1 %11, label %12, label %45

12:                                               ; preds = %7
  %13 = bitcast %"struct.net::SockaddrStorage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %13) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 144, i1 false)
  call void @_ZN3net15SockaddrStorageC1Ev(%"struct.net::SockaddrStorage"* nonnull %3) #15
  %14 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %3, i64 0, i32 2
  %17 = load %struct.sockaddr*, %struct.sockaddr** %16, align 8
  %18 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %3, i64 0, i32 1
  %19 = call i32 @getpeername(i32 %15, %struct.sockaddr* %17, i32* %18) #15
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %12
  %22 = tail call i32* @__errno_location() #16
  %23 = load i32, i32* %22, align 4
  %24 = call i32 @_ZN3net14MapSystemErrorEi(i32 %23) #15
  br label %41

25:                                               ; preds = %12
  %26 = call i8* @_Znwm(i64 20) #14
  %27 = bitcast i8* %26 to %"class.net::IPEndPoint"*
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %27) #15
  %28 = load %struct.sockaddr*, %struct.sockaddr** %16, align 8
  %29 = load i32, i32* %18, align 8
  %30 = call zeroext i1 @_ZN3net10IPEndPoint12FromSockAddrEPK8sockaddrj(%"class.net::IPEndPoint"* nonnull %27, %struct.sockaddr* %28, i32 %29) #15
  br i1 %30, label %31, label %40

31:                                               ; preds = %25
  %32 = ptrtoint i8* %26 to i64
  %33 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %9, align 8
  %34 = bitcast %"class.std::__1::unique_ptr.11"* %8 to i64*
  store i64 %32, i64* %34, align 8
  %35 = icmp eq %"class.net::IPEndPoint"* %33, null
  %36 = bitcast i8* %26 to %"class.net::IPEndPoint"*
  br i1 %35, label %43, label %37

37:                                               ; preds = %31
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %33) #15
  %38 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %38) #14
  %39 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %9, align 8
  br label %43

40:                                               ; preds = %25
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %27) #15
  call void @_ZdlPv(i8* nonnull %26) #14
  br label %41

41:                                               ; preds = %21, %40
  %42 = phi i32 [ -108, %40 ], [ %24, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %13) #15
  br label %49

43:                                               ; preds = %31, %37
  %44 = phi %"class.net::IPEndPoint"* [ %36, %31 ], [ %39, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %13) #15
  br label %45

45:                                               ; preds = %43, %7
  %46 = phi %"class.net::IPEndPoint"* [ %44, %43 ], [ %10, %7 ]
  %47 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %48 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %47, i8* align 2 %48, i64 20, i1 false)
  br label %49

49:                                               ; preds = %2, %41, %45
  %50 = phi i32 [ 0, %45 ], [ -15, %2 ], [ %42, %41 ]
  ret i32 %50
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3net15SockaddrStorageC1Ev(%"struct.net::SockaddrStorage"*) unnamed_addr #3

; Function Attrs: nounwind
declare i32 @getpeername(i32, %struct.sockaddr*, i32*) local_unnamed_addr #4

declare void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"*) unnamed_addr #3

declare zeroext i1 @_ZN3net10IPEndPoint12FromSockAddrEPK8sockaddrj(%"class.net::IPEndPoint"*, %struct.sockaddr*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net14UDPSocketPosix15GetLocalAddressEPNS_10IPEndPointE(%"class.net::UDPSocketPosix"*, %"class.net::IPEndPoint"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Value", align 8
  %4 = alloca %"struct.net::SockaddrStorage", align 8
  %5 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 8
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %61, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 14
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %10, align 8
  %12 = icmp eq %"class.net::IPEndPoint"* %11, null
  br i1 %12, label %13, label %57

13:                                               ; preds = %8
  %14 = bitcast %"struct.net::SockaddrStorage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %14) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 144, i1 false)
  call void @_ZN3net15SockaddrStorageC1Ev(%"struct.net::SockaddrStorage"* nonnull %4) #15
  %15 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %4, i64 0, i32 2
  %18 = load %struct.sockaddr*, %struct.sockaddr** %17, align 8
  %19 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %4, i64 0, i32 1
  %20 = call i32 @getsockname(i32 %16, %struct.sockaddr* %18, i32* %19) #15
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %13
  %23 = tail call i32* @__errno_location() #16
  %24 = load i32, i32* %23, align 4
  %25 = call i32 @_ZN3net14MapSystemErrorEi(i32 %24) #15
  br label %53

26:                                               ; preds = %13
  %27 = call i8* @_Znwm(i64 20) #14
  %28 = bitcast i8* %27 to %"class.net::IPEndPoint"*
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %28) #15
  %29 = load %struct.sockaddr*, %struct.sockaddr** %17, align 8
  %30 = load i32, i32* %19, align 8
  %31 = call zeroext i1 @_ZN3net10IPEndPoint12FromSockAddrEPK8sockaddrj(%"class.net::IPEndPoint"* nonnull %28, %struct.sockaddr* %29, i32 %30) #15
  br i1 %31, label %32, label %52

32:                                               ; preds = %26
  %33 = ptrtoint i8* %27 to i64
  %34 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %10, align 8
  %35 = bitcast %"class.std::__1::unique_ptr.11"* %9 to i64*
  store i64 %33, i64* %35, align 8
  %36 = icmp eq %"class.net::IPEndPoint"* %34, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %34) #15
  %38 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %38) #14
  br label %39

39:                                               ; preds = %32, %37
  %40 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 38, i32 1
  %41 = load %"class.net::NetLog"*, %"class.net::NetLog"** %40, align 8
  %42 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %41, i64 0, i32 3
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %55, label %45, !prof !8

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 38, i32 0
  %47 = bitcast %"class.base::Value"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %47) #15
  %48 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %49 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %48, align 8, !noalias !9
  %50 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 39
  %51 = load i64, i64* %50, align 8, !noalias !9
  call void @_ZN3net28CreateNetLogUDPConnectParamsERKNS_10IPEndPointEl(%"class.base::Value"* nonnull sret %3, %"class.net::IPEndPoint"* dereferenceable(20) %49, i64 %51) #15
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %41, i32 76, %"struct.net::NetLogSource"* dereferenceable(16) %46, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %3) #15
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #15
  br label %55

52:                                               ; preds = %26
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %28) #15
  call void @_ZdlPv(i8* nonnull %27) #14
  br label %53

53:                                               ; preds = %22, %52
  %54 = phi i32 [ -108, %52 ], [ %25, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %14) #15
  br label %61

55:                                               ; preds = %39, %45
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %14) #15
  %56 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %10, align 8
  br label %57

57:                                               ; preds = %55, %8
  %58 = phi %"class.net::IPEndPoint"* [ %56, %55 ], [ %11, %8 ]
  %59 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %60 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %59, i8* align 2 %60, i64 20, i1 false)
  br label %61

61:                                               ; preds = %2, %53, %57
  %62 = phi i32 [ 0, %57 ], [ -15, %2 ], [ %54, %53 ]
  ret i32 %62
}

; Function Attrs: nounwind
declare i32 @getsockname(i32, %struct.sockaddr*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::UDPSocketPosix"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = call i32 @_ZN3net14UDPSocketPosix8RecvFromEPNS_8IOBufferEiPNS_10IPEndPointEN4base12OnceCallbackIFviEEE(%"class.net::UDPSocketPosix"* %0, %"class.net::IOBuffer"* %1, i32 %2, %"class.net::IPEndPoint"* null, %"class.base::OnceCallback"* nonnull %5)
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #15
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix8RecvFromEPNS_8IOBufferEiPNS_10IPEndPointEN4base12OnceCallbackIFviEEE(%"class.net::UDPSocketPosix"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.base::CurrentIOThread", align 8
  %8 = alloca %"class.logging::ErrnoLogMessage", align 8
  %9 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 36, i32 0
  %10 = getelementptr inbounds %"class.base::internal::CallbackBase", %"class.base::internal::CallbackBase"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %10, align 8
  %12 = icmp eq %"class.base::internal::BindStateBase"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %5
  %14 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 368, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0)) #15
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  br label %16

16:                                               ; preds = %5, %13
  %17 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 43
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 8
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %26 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %25, align 8
  %27 = icmp eq %"class.net::IPEndPoint"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = call i32 @_ZN3net14UDPSocketPosix31InternalRecvFromConnectedSocketEPNS_8IOBufferEiPNS_10IPEndPointE(%"class.net::UDPSocketPosix"* %0, %"class.net::IOBuffer"* %1, i32 %2, %"class.net::IPEndPoint"* %3) #15
  br label %32

30:                                               ; preds = %24, %20, %16
  %31 = call i32 @_ZN3net14UDPSocketPosix34InternalRecvFromNonConnectedSocketEPNS_8IOBufferEiPNS_10IPEndPointE(%"class.net::UDPSocketPosix"* %0, %"class.net::IOBuffer"* %1, i32 %2, %"class.net::IPEndPoint"* %3) #15
  br label %32

32:                                               ; preds = %28, %30
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %35, label %85

35:                                               ; preds = %32
  %36 = bitcast %"class.base::CurrentIOThread"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  %37 = call %"class.base::sequence_manager::internal::SequenceManagerImpl"* @_ZN4base15CurrentIOThread3GetEv() #15
  %38 = getelementptr inbounds %"class.base::CurrentIOThread", %"class.base::CurrentIOThread"* %7, i64 0, i32 0, i32 0
  store %"class.base::sequence_manager::internal::SequenceManagerImpl"* %37, %"class.base::sequence_manager::internal::SequenceManagerImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 16
  %42 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 18, i32 0
  %43 = call zeroext i1 @_ZN4base15CurrentIOThread19WatchFileDescriptorEibNS_27WatchableIOMessagePumpPosix4ModeEPNS_19MessagePumpLibevent17FdWatchControllerEPNS1_9FdWatcherE(%"class.base::CurrentIOThread"* nonnull %7, i32 %40, i1 zeroext true, i32 1, %"class.base::MessagePumpLibevent::FdWatchController"* %41, %"class.base::WatchableIOMessagePumpPosix::FdWatcher"* %42) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  br i1 %43, label %56, label %44

44:                                               ; preds = %35
  %45 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #15
  br i1 %45, label %46, label %52

46:                                               ; preds = %44
  %47 = bitcast %"class.logging::ErrnoLogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 312, i8* nonnull %47) #15
  %48 = call i32 @_ZN7logging22GetLastSystemErrorCodeEv() #15
  call void @_ZN7logging15ErrnoLogMessageC1EPKciii(%"class.logging::ErrnoLogMessage"* nonnull %8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 380, i32 2, i32 %48) #15
  %49 = getelementptr inbounds %"class.logging::ErrnoLogMessage", %"class.logging::ErrnoLogMessage"* %8, i64 0, i32 0, i32 2
  %50 = bitcast %"class.std::__1::basic_ostringstream"* %49 to %"class.std::__1::basic_ostream"*
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %50, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i64 0, i64 0), i64 34) #15
  call void @_ZN7logging15ErrnoLogMessageD1Ev(%"class.logging::ErrnoLogMessage"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 312, i8* nonnull %47) #15
  br label %52

52:                                               ; preds = %44, %46
  %53 = tail call i32* @__errno_location() #16
  %54 = load i32, i32* %53, align 4
  %55 = call i32 @_ZN3net14MapSystemErrorEi(i32 %54) #15
  call void @_ZN3net14UDPSocketPosix7LogReadEiPKcjPK8sockaddr(%"class.net::UDPSocketPosix"* %0, i32 %55, i8* null, i32 0, %struct.sockaddr* null)
  br label %85

56:                                               ; preds = %35
  %57 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 30
  %58 = icmp eq %"class.net::IOBuffer"* %1, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 1 monotonic
  br label %62

62:                                               ; preds = %59, %56
  %63 = ptrtoint %"class.net::IOBuffer"* %1 to i64
  %64 = bitcast %class.scoped_refptr.34* %57 to i64*
  %65 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %57, i64 0, i32 0
  %66 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %65, align 8
  store i64 %63, i64* %64, align 8
  %67 = icmp eq %"class.net::IOBuffer"* %66, null
  br i1 %67, label %80, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %66, i64 0, i32 1
  %70 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = atomicrmw sub i32* %70, i32 1 acq_rel
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %80

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %69, i64 -2
  %75 = bitcast %"class.base::RefCountedThreadSafe.35"* %74 to %"class.net::IOBuffer"*
  %76 = bitcast %"class.base::RefCountedThreadSafe.35"* %74 to void (%"class.net::IOBuffer"*)***
  %77 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %77, i64 1
  %79 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %78, align 8
  call void %79(%"class.net::IOBuffer"* nonnull %75) #15
  br label %80

80:                                               ; preds = %62, %68, %73
  %81 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 31
  store i32 %2, i32* %81, align 8
  %82 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 32
  store %"class.net::IPEndPoint"* %3, %"class.net::IPEndPoint"** %82, align 8
  %83 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %84 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %9, %"class.base::internal::CallbackBase"* dereferenceable(8) %83) #15
  br label %85

85:                                               ; preds = %32, %80, %52
  %86 = phi i32 [ %55, %52 ], [ -1, %80 ], [ %33, %32 ]
  ret i32 %86
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix16InternalRecvFromEPNS_8IOBufferEiPNS_10IPEndPointE(%"class.net::UDPSocketPosix"*, %"class.net::IOBuffer"* nocapture readonly, i32, %"class.net::IPEndPoint"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 43
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %18, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 8
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %14 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %13, align 8
  %15 = icmp eq %"class.net::IPEndPoint"* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = tail call i32 @_ZN3net14UDPSocketPosix31InternalRecvFromConnectedSocketEPNS_8IOBufferEiPNS_10IPEndPointE(%"class.net::UDPSocketPosix"* %0, %"class.net::IOBuffer"* %1, i32 %2, %"class.net::IPEndPoint"* %3)
  br label %20

18:                                               ; preds = %12, %8, %4
  %19 = tail call i32 @_ZN3net14UDPSocketPosix34InternalRecvFromNonConnectedSocketEPNS_8IOBufferEiPNS_10IPEndPointE(%"class.net::UDPSocketPosix"* %0, %"class.net::IOBuffer"* %1, i32 %2, %"class.net::IPEndPoint"* %3)
  br label %20

20:                                               ; preds = %18, %16
  %21 = phi i32 [ %17, %16 ], [ %19, %18 ]
  ret i32 %21
}

declare %"class.base::sequence_manager::internal::SequenceManagerImpl"* @_ZN4base15CurrentIOThread3GetEv() local_unnamed_addr #3

declare zeroext i1 @_ZN4base15CurrentIOThread19WatchFileDescriptorEibNS_27WatchableIOMessagePumpPosix4ModeEPNS_19MessagePumpLibevent17FdWatchControllerEPNS1_9FdWatcherE(%"class.base::CurrentIOThread"*, i32, i1 zeroext, i32, %"class.base::MessagePumpLibevent::FdWatchController"*, %"class.base::WatchableIOMessagePumpPosix::FdWatcher"*) local_unnamed_addr #3

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #3

declare i32 @_ZN7logging22GetLastSystemErrorCodeEv() local_unnamed_addr #3

declare void @_ZN7logging15ErrnoLogMessageC1EPKciii(%"class.logging::ErrnoLogMessage"*, i8*, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging15ErrnoLogMessageD1Ev(%"class.logging::ErrnoLogMessage"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix7LogReadEiPKcjPK8sockaddr(%"class.net::UDPSocketPosix"*, i32, i8*, i32, %struct.sockaddr*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.net::IPEndPoint", align 2
  %7 = icmp slt i32 %1, 0
  %8 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 38
  br i1 %7, label %9, label %10

9:                                                ; preds = %5
  tail call void @_ZNK3net16NetLogWithSource24AddEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %8, i32 79, i32 %1) #15
  br label %28

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 38, i32 1
  %12 = load %"class.net::NetLog"*, %"class.net::NetLog"** %11, align 8
  %13 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %12, i64 0, i32 3
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %17) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %17, i8 -86, i64 20, i1 false)
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %6) #15
  %18 = call zeroext i1 @_ZN3net10IPEndPoint12FromSockAddrEPK8sockaddrj(%"class.net::IPEndPoint"* nonnull %6, %struct.sockaddr* %4, i32 %3) #15
  %19 = select i1 %18, %"class.net::IPEndPoint"* %6, %"class.net::IPEndPoint"* null
  call void @_ZN3net21NetLogUDPDataTransferERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiPKcPKNS_10IPEndPointE(%"class.net::NetLogWithSource"* dereferenceable(24) %8, i32 77, i32 %1, i8* %2, %"class.net::IPEndPoint"* %19) #15
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %17) #15
  br label %20

20:                                               ; preds = %10, %16
  %21 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 40
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = sext i32 %1 to i64
  call void @_ZN3net16activity_monitor22IncrementBytesReceivedEm(i64 %25) #15
  br label %28

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 41
  call void @_ZN3net14UDPSocketPosix23ReceivedActivityMonitor9IncrementEj(%"class.net::UDPSocketPosix::ReceivedActivityMonitor"* %27, i32 %1)
  br label %28

28:                                               ; preds = %9, %26, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix5WriteEPNS_8IOBufferEiN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::UDPSocketPosix"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"* nocapture, %"struct.net::NetworkTrafficAnnotationTag"* nocapture readnone dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = call i32 @_ZN3net14UDPSocketPosix13SendToOrWriteEPNS_8IOBufferEiPKNS_10IPEndPointEN4base12OnceCallbackIFviEEE(%"class.net::UDPSocketPosix"* %0, %"class.net::IOBuffer"* %1, i32 %2, %"class.net::IPEndPoint"* null, %"class.base::OnceCallback"* nonnull %6)
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #15
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix13SendToOrWriteEPNS_8IOBufferEiPKNS_10IPEndPointEN4base12OnceCallbackIFviEEE(%"class.net::UDPSocketPosix"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"*, %"class.base::OnceCallback"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.base::CurrentIOThread", align 8
  %8 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 37, i32 0
  %9 = getelementptr inbounds %"class.base::internal::CallbackBase", %"class.base::internal::CallbackBase"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %9, align 8
  %11 = icmp eq %"class.base::internal::BindStateBase"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 414, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0)) #15
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  br label %15

15:                                               ; preds = %5, %12
  %16 = call i32 @_ZN3net14UDPSocketPosix14InternalSendToEPNS_8IOBufferEiPKNS_10IPEndPointE(%"class.net::UDPSocketPosix"* %0, %"class.net::IOBuffer"* %1, i32 %2, %"class.net::IPEndPoint"* %3)
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %18, label %82

18:                                               ; preds = %15
  %19 = bitcast %"class.base::CurrentIOThread"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #15
  %20 = call %"class.base::sequence_manager::internal::SequenceManagerImpl"* @_ZN4base15CurrentIOThread3GetEv() #15
  %21 = getelementptr inbounds %"class.base::CurrentIOThread", %"class.base::CurrentIOThread"* %7, i64 0, i32 0, i32 0
  store %"class.base::sequence_manager::internal::SequenceManagerImpl"* %20, %"class.base::sequence_manager::internal::SequenceManagerImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 17
  %25 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 19, i32 0
  %26 = call zeroext i1 @_ZN4base15CurrentIOThread19WatchFileDescriptorEibNS_27WatchableIOMessagePumpPosix4ModeEPNS_19MessagePumpLibevent17FdWatchControllerEPNS1_9FdWatcherE(%"class.base::CurrentIOThread"* nonnull %7, i32 %23, i1 zeroext true, i32 2, %"class.base::MessagePumpLibevent::FdWatchController"* %24, %"class.base::WatchableIOMessagePumpPosix::FdWatcher"* %25) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #15
  br i1 %26, label %41, label %27

27:                                               ; preds = %18
  %28 = tail call i32* @__errno_location() #16
  %29 = load i32, i32* %28, align 4
  %30 = call i32 @_ZN3net14MapSystemErrorEi(i32 %29) #15
  %31 = icmp slt i32 %30, 0
  %32 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 38
  br i1 %31, label %33, label %34

33:                                               ; preds = %27
  call void @_ZNK3net16NetLogWithSource24AddEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %32, i32 80, i32 %30) #15
  br label %82

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 38, i32 1
  %36 = load %"class.net::NetLog"*, %"class.net::NetLog"** %35, align 8
  %37 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %36, i64 0, i32 3
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %82, label %40

40:                                               ; preds = %34
  call void @_ZN3net21NetLogUDPDataTransferERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiPKcPKNS_10IPEndPointE(%"class.net::NetLogWithSource"* dereferenceable(24) %32, i32 78, i32 %30, i8* null, %"class.net::IPEndPoint"* null) #15
  br label %82

41:                                               ; preds = %18
  %42 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 33
  %43 = icmp eq %"class.net::IOBuffer"* %1, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 1 monotonic
  br label %47

47:                                               ; preds = %44, %41
  %48 = ptrtoint %"class.net::IOBuffer"* %1 to i64
  %49 = bitcast %class.scoped_refptr.34* %42 to i64*
  %50 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %42, i64 0, i32 0
  %51 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.net::IOBuffer"* %51, null
  br i1 %52, label %65, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %51, i64 0, i32 1
  %55 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw sub i32* %55, i32 1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %65

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %54, i64 -2
  %60 = bitcast %"class.base::RefCountedThreadSafe.35"* %59 to %"class.net::IOBuffer"*
  %61 = bitcast %"class.base::RefCountedThreadSafe.35"* %59 to void (%"class.net::IOBuffer"*)***
  %62 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %62, i64 1
  %64 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %63, align 8
  call void %64(%"class.net::IOBuffer"* nonnull %60) #15
  br label %65

65:                                               ; preds = %47, %53, %58
  %66 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 34
  store i32 %2, i32* %66, align 8
  %67 = icmp eq %"class.net::IPEndPoint"* %3, null
  br i1 %67, label %79, label %68

68:                                               ; preds = %65
  %69 = call i8* @_Znwm(i64 20) #14
  %70 = bitcast i8* %69 to %"class.net::IPEndPoint"*
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %70, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %3) #15
  %71 = ptrtoint i8* %69 to i64
  %72 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 35
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %73, align 8
  %75 = bitcast %"class.std::__1::unique_ptr.11"* %72 to i64*
  store i64 %71, i64* %75, align 8
  %76 = icmp eq %"class.net::IPEndPoint"* %74, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %68
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %74) #15
  %78 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %78) #14
  br label %79

79:                                               ; preds = %68, %77, %65
  %80 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %81 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %8, %"class.base::internal::CallbackBase"* dereferenceable(8) %80) #15
  br label %82

82:                                               ; preds = %40, %34, %33, %15, %79
  %83 = phi i32 [ -1, %79 ], [ %16, %15 ], [ %30, %33 ], [ %30, %34 ], [ %30, %40 ]
  ret i32 %83
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix6SendToEPNS_8IOBufferEiRKNS_10IPEndPointEN4base12OnceCallbackIFviEEE(%"class.net::UDPSocketPosix"*, %"class.net::IOBuffer"*, i32, %"class.net::IPEndPoint"* dereferenceable(20), %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = call i32 @_ZN3net14UDPSocketPosix13SendToOrWriteEPNS_8IOBufferEiPKNS_10IPEndPointEN4base12OnceCallbackIFviEEE(%"class.net::UDPSocketPosix"* %0, %"class.net::IOBuffer"* %1, i32 %2, %"class.net::IPEndPoint"* %3, %"class.base::OnceCallback"* nonnull %6)
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #15
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix14InternalSendToEPNS_8IOBufferEiPKNS_10IPEndPointE(%"class.net::UDPSocketPosix"*, %"class.net::IOBuffer"* nocapture readonly, i32, %"class.net::IPEndPoint"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.net::SockaddrStorage", align 8
  %6 = bitcast %"struct.net::SockaddrStorage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %6) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 144, i1 false)
  call void @_ZN3net15SockaddrStorageC1Ev(%"struct.net::SockaddrStorage"* nonnull %5) #15
  %7 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %5, i64 0, i32 2
  %8 = load %struct.sockaddr*, %struct.sockaddr** %7, align 8
  %9 = icmp eq %"class.net::IPEndPoint"* %3, null
  %10 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %5, i64 0, i32 1
  br i1 %9, label %11, label %12

11:                                               ; preds = %4
  store i32 0, i32* %10, align 8
  br label %16

12:                                               ; preds = %4
  %13 = call zeroext i1 @_ZNK3net10IPEndPoint10ToSockAddrEP8sockaddrPj(%"class.net::IPEndPoint"* nonnull %3, %struct.sockaddr* %8, i32* %10) #15
  br i1 %13, label %16, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 38
  call void @_ZNK3net16NetLogWithSource24AddEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %15, i32 80, i32 -108) #15
  br label %57

16:                                               ; preds = %12, %11
  %17 = phi %struct.sockaddr* [ %8, %12 ], [ null, %11 ]
  %18 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %19 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 2
  %20 = sext i32 %2 to i64
  %21 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 10
  br label %22

22:                                               ; preds = %29, %16
  %23 = load i32, i32* %18, align 8
  %24 = load i8*, i8** %19, align 8
  %25 = load i32, i32* %21, align 4
  %26 = load i32, i32* %10, align 8
  %27 = call i64 @sendto(i32 %23, i8* %24, i64 %20, i32 %25, %struct.sockaddr* %17, i32 %26) #15
  %28 = icmp eq i64 %27, -1
  br i1 %28, label %29, label %33

29:                                               ; preds = %22
  %30 = tail call i32* @__errno_location() #16
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 4
  br i1 %32, label %22, label %38

33:                                               ; preds = %22
  %34 = trunc i64 %27 to i32
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 38
  br label %47

38:                                               ; preds = %29, %33
  %39 = tail call i32* @__errno_location() #16
  %40 = load i32, i32* %39, align 4
  %41 = call i32 @_ZN3net14MapSystemErrorEi(i32 %40) #15
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %57, label %43

43:                                               ; preds = %38
  %44 = icmp slt i32 %41, 0
  %45 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 38
  br i1 %44, label %46, label %47

46:                                               ; preds = %43
  call void @_ZNK3net16NetLogWithSource24AddEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %45, i32 80, i32 %41) #15
  br label %57

47:                                               ; preds = %36, %43
  %48 = phi %"class.net::NetLogWithSource"* [ %37, %36 ], [ %45, %43 ]
  %49 = phi i32 [ %34, %36 ], [ %41, %43 ]
  %50 = load i8*, i8** %19, align 8
  %51 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 38, i32 1
  %52 = load %"class.net::NetLog"*, %"class.net::NetLog"** %51, align 8
  %53 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %52, i64 0, i32 3
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %47
  call void @_ZN3net21NetLogUDPDataTransferERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiPKcPKNS_10IPEndPointE(%"class.net::NetLogWithSource"* dereferenceable(24) %48, i32 78, i32 %49, i8* %50, %"class.net::IPEndPoint"* %3) #15
  br label %57

57:                                               ; preds = %56, %47, %46, %38, %14
  %58 = phi i32 [ -108, %14 ], [ -1, %38 ], [ %41, %46 ], [ %49, %47 ], [ %49, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %6) #15
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix8LogWriteEiPKcPKNS_10IPEndPointE(%"class.net::UDPSocketPosix"*, i32, i8*, %"class.net::IPEndPoint"*) local_unnamed_addr #0 align 2 {
  %5 = icmp slt i32 %1, 0
  %6 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 38
  br i1 %5, label %7, label %8

7:                                                ; preds = %4
  tail call void @_ZNK3net16NetLogWithSource24AddEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %6, i32 80, i32 %1) #15
  br label %15

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 38, i32 1
  %10 = load %"class.net::NetLog"*, %"class.net::NetLog"** %9, align 8
  %11 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %10, i64 0, i32 3
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %8
  tail call void @_ZN3net21NetLogUDPDataTransferERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiPKcPKNS_10IPEndPointE(%"class.net::NetLogWithSource"* dereferenceable(24) %6, i32 78, i32 %1, i8* %2, %"class.net::IPEndPoint"* %3) #15
  br label %15

15:                                               ; preds = %8, %7, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix7ConnectERKNS_10IPEndPointE(%"class.net::UDPSocketPosix"*, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Value", align 8
  %4 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 38
  %5 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 38, i32 1
  %6 = load %"class.net::NetLog"*, %"class.net::NetLog"** %5, align 8
  %7 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %6, i64 0, i32 3
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !8

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %4, i64 0, i32 0
  %12 = bitcast %"class.base::Value"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 39
  %14 = load i64, i64* %13, align 8, !noalias !12
  call void @_ZN3net28CreateNetLogUDPConnectParamsERKNS_10IPEndPointEl(%"class.base::Value"* nonnull sret %3, %"class.net::IPEndPoint"* dereferenceable(20) %1, i64 %14) #15
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %6, i32 75, %"struct.net::NetLogSource"* dereferenceable(16) %11, i32 1, %"class.base::Value"* nonnull dereferenceable(32) %3) #15
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #15
  br label %15

15:                                               ; preds = %2, %10
  %16 = call i32 @_ZN3net14UDPSocketPosix19SetMulticastOptionsEv(%"class.net::UDPSocketPosix"* %0)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %23

18:                                               ; preds = %15
  %19 = call i32 @_ZN3net14UDPSocketPosix15InternalConnectERKNS_10IPEndPointE(%"class.net::UDPSocketPosix"* %0, %"class.net::IPEndPoint"* dereferenceable(20) %1)
  call void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %4, i32 75, i32 %19) #15
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 8
  %22 = zext i1 %20 to i8
  store i8 %22, i8* %21, align 4
  br label %23

23:                                               ; preds = %18, %15
  %24 = phi i32 [ %16, %15 ], [ %19, %18 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix19SetMulticastOptionsEv(%"class.net::UDPSocketPosix"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca %struct.ip_mreqn, align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 9
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %32

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 7
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 2
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #15
  store i8 0, i8* %2, align 1
  %17 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %18 = load i32, i32* %17, align 8
  %19 = call i32 @setsockopt(i32 %18, i32 0, i32 34, i8* nonnull %2, i32 1) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #15
  br label %25

20:                                               ; preds = %12
  %21 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #15
  store i32 0, i32* %3, align 4
  %22 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %23 = load i32, i32* %22, align 8
  %24 = call i32 @setsockopt(i32 %23, i32 41, i32 19, i8* nonnull %21, i32 4) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #15
  br label %25

25:                                               ; preds = %20, %16
  %26 = phi i32 [ %19, %16 ], [ %24, %20 ]
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %25
  %29 = tail call i32* @__errno_location() #16
  %30 = load i32, i32* %29, align 4
  %31 = call i32 @_ZN3net14MapSystemErrorEi(i32 %30) #15
  br label %89

32:                                               ; preds = %25, %1
  %33 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 12
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %57, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 7
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 2
  br i1 %39, label %40, label %45

40:                                               ; preds = %36
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #15
  %41 = trunc i32 %34 to i8
  store i8 %41, i8* %4, align 1
  %42 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %43 = load i32, i32* %42, align 8
  %44 = call i32 @setsockopt(i32 %43, i32 0, i32 33, i8* nonnull %4, i32 1) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #15
  br label %50

45:                                               ; preds = %36
  %46 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #15
  store i32 %34, i32* %5, align 4
  %47 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %48 = load i32, i32* %47, align 8
  %49 = call i32 @setsockopt(i32 %48, i32 41, i32 18, i8* nonnull %46, i32 4) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #15
  br label %50

50:                                               ; preds = %45, %40
  %51 = phi i32 [ %44, %40 ], [ %49, %45 ]
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %53, label %57

53:                                               ; preds = %50
  %54 = tail call i32* @__errno_location() #16
  %55 = load i32, i32* %54, align 4
  %56 = call i32 @_ZN3net14MapSystemErrorEi(i32 %55) #15
  br label %89

57:                                               ; preds = %50, %32
  %58 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 11
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %89, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 7
  %63 = load i32, i32* %62, align 8
  switch i32 %63, label %89 [
    i32 2, label %64
    i32 10, label %78
  ]

64:                                               ; preds = %61
  %65 = bitcast %struct.ip_mreqn* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %65) #15
  %66 = getelementptr inbounds %struct.ip_mreqn, %struct.ip_mreqn* %6, i64 0, i32 0, i32 0
  store i32 0, i32* %66, align 4
  %67 = getelementptr inbounds %struct.ip_mreqn, %struct.ip_mreqn* %6, i64 0, i32 2
  store i32 %59, i32* %67, align 4
  %68 = getelementptr inbounds %struct.ip_mreqn, %struct.ip_mreqn* %6, i64 0, i32 1, i32 0
  store i32 0, i32* %68, align 4
  %69 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %70 = load i32, i32* %69, align 8
  %71 = call i32 @setsockopt(i32 %70, i32 0, i32 32, i8* nonnull %65, i32 12) #15
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %77, label %73

73:                                               ; preds = %64
  %74 = tail call i32* @__errno_location() #16
  %75 = load i32, i32* %74, align 4
  %76 = call i32 @_ZN3net14MapSystemErrorEi(i32 %75) #15
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %65) #15
  br label %89

77:                                               ; preds = %64
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %65) #15
  br label %89

78:                                               ; preds = %61
  %79 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79) #15
  store i32 %59, i32* %7, align 4
  %80 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %81 = load i32, i32* %80, align 8
  %82 = call i32 @setsockopt(i32 %81, i32 41, i32 17, i8* nonnull %79, i32 4) #15
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %88, label %84

84:                                               ; preds = %78
  %85 = tail call i32* @__errno_location() #16
  %86 = load i32, i32* %85, align 4
  %87 = call i32 @_ZN3net14MapSystemErrorEi(i32 %86) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #15
  br label %89

88:                                               ; preds = %78
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #15
  br label %89

89:                                               ; preds = %57, %77, %88, %84, %73, %53, %28, %61
  %90 = phi i32 [ %56, %53 ], [ %31, %28 ], [ -108, %61 ], [ %76, %73 ], [ %87, %84 ], [ 0, %88 ], [ 0, %77 ], [ 0, %57 ]
  ret i32 %90
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix15InternalConnectERKNS_10IPEndPointE(%"class.net::UDPSocketPosix"* nocapture, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.net::IPAddress", align 1
  %4 = alloca %"struct.net::SockaddrStorage", align 8
  %5 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 13
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %17

8:                                                ; preds = %2
  %9 = tail call i32 @_ZNK3net10IPEndPoint17GetSockAddrFamilyEv(%"class.net::IPEndPoint"* %1) #15
  %10 = icmp eq i32 %9, 2
  %11 = select i1 %10, i64 4, i64 16
  %12 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %3, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %12) #15
  call void @_ZN3net9IPAddress8AllZerosEm(%"class.net::IPAddress"* nonnull sret %3, i64 %11) #15
  %13 = call i32 @_ZN3net14UDPSocketPosix10RandomBindERKNS_9IPAddressE(%"class.net::UDPSocketPosix"* %0, %"class.net::IPAddress"* nonnull dereferenceable(17) %3)
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %12) #15
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %8
  %16 = sub nsw i32 0, %13
  call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0), i32 %16) #15
  br label %56

17:                                               ; preds = %2, %8
  %18 = bitcast %"struct.net::SockaddrStorage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %18) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 144, i1 false)
  call void @_ZN3net15SockaddrStorageC1Ev(%"struct.net::SockaddrStorage"* nonnull %4) #15
  %19 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %4, i64 0, i32 2
  %20 = load %struct.sockaddr*, %struct.sockaddr** %19, align 8
  %21 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %4, i64 0, i32 1
  %22 = call zeroext i1 @_ZNK3net10IPEndPoint10ToSockAddrEP8sockaddrPj(%"class.net::IPEndPoint"* %1, %struct.sockaddr* %20, i32* %21) #15
  br i1 %22, label %23, label %54

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  br label %25

25:                                               ; preds = %23, %31
  %26 = load i32, i32* %24, align 8
  %27 = load %struct.sockaddr*, %struct.sockaddr** %19, align 8
  %28 = load i32, i32* %21, align 8
  %29 = call i32 @connect(i32 %26, %struct.sockaddr* %27, i32 %28) #15
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %31, label %35

31:                                               ; preds = %25
  %32 = tail call i32* @__errno_location() #16
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 4
  br i1 %34, label %25, label %39

35:                                               ; preds = %25
  %36 = icmp slt i32 %29, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %35
  %38 = tail call i32* @__errno_location() #16
  br label %39

39:                                               ; preds = %31, %37
  %40 = phi i32* [ %38, %37 ], [ %32, %31 ]
  %41 = load i32, i32* %40, align 4
  %42 = call i32 @_ZN3net14MapSystemErrorEi(i32 %41) #15
  br label %54

43:                                               ; preds = %35
  %44 = call i8* @_Znwm(i64 20) #14
  %45 = bitcast i8* %44 to %"class.net::IPEndPoint"*
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %45, %"class.net::IPEndPoint"* dereferenceable(20) %1) #15
  %46 = ptrtoint i8* %44 to i64
  %47 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 15
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %48, align 8
  %50 = bitcast %"class.std::__1::unique_ptr.11"* %47 to i64*
  store i64 %46, i64* %50, align 8
  %51 = icmp eq %"class.net::IPEndPoint"* %49, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %43
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %49) #15
  %53 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %53) #14
  br label %54

54:                                               ; preds = %43, %52, %17, %39
  %55 = phi i32 [ %42, %39 ], [ -108, %17 ], [ %29, %52 ], [ %29, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %18) #15
  br label %56

56:                                               ; preds = %54, %15
  %57 = phi i32 [ %13, %15 ], [ %55, %54 ]
  ret i32 %57
}

declare void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"*, i32, i32) local_unnamed_addr #3

declare i32 @_ZNK3net10IPEndPoint17GetSockAddrFamilyEv(%"class.net::IPEndPoint"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix10RandomBindERKNS_9IPAddressE(%"class.net::UDPSocketPosix"* nocapture readonly, %"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.net::SockaddrStorage", align 8
  %4 = alloca %"struct.net::SockaddrStorage", align 8
  %5 = alloca %"class.net::IPEndPoint", align 2
  %6 = alloca %"class.net::IPEndPoint", align 2
  %7 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %8 = bitcast %"struct.net::SockaddrStorage"* %4 to i8*
  %9 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %4, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  br label %14

12:                                               ; preds = %30
  %13 = icmp eq i32 %33, 10
  br i1 %13, label %34, label %14

14:                                               ; preds = %12, %2
  %15 = phi i32 [ 0, %2 ], [ %33, %12 ]
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #15
  %16 = call i32 @_ZN4base7RandIntEii(i32 1024, i32 65535) #15
  %17 = trunc i32 %16 to i16
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %5, %"class.net::IPAddress"* dereferenceable(17) %1, i16 zeroext %17) #15
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %8) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 144, i1 false) #15
  call void @_ZN3net15SockaddrStorageC1Ev(%"struct.net::SockaddrStorage"* nonnull %4) #15
  %18 = load %struct.sockaddr*, %struct.sockaddr** %9, align 8
  %19 = call zeroext i1 @_ZNK3net10IPEndPoint10ToSockAddrEP8sockaddrPj(%"class.net::IPEndPoint"* nonnull %5, %struct.sockaddr* %18, i32* %10) #15
  br i1 %19, label %20, label %30

20:                                               ; preds = %14
  %21 = load i32, i32* %11, align 8
  %22 = load %struct.sockaddr*, %struct.sockaddr** %9, align 8
  %23 = load i32, i32* %10, align 8
  %24 = call i32 @bind(i32 %21, %struct.sockaddr* %22, i32 %23) #15
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %20
  %27 = tail call i32* @__errno_location() #16
  %28 = load i32, i32* %27, align 4
  %29 = call i32 @_ZN3net14MapSystemErrorEi(i32 %28) #15
  br label %30

30:                                               ; preds = %14, %20, %26
  %31 = phi i32 [ -108, %14 ], [ %29, %26 ], [ 0, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %8) #15
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #15
  %32 = icmp eq i32 %31, -147
  %33 = add nuw nsw i32 %15, 1
  br i1 %32, label %12, label %53

34:                                               ; preds = %12
  %35 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %35) #15
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %6, %"class.net::IPAddress"* dereferenceable(17) %1, i16 zeroext 0) #15
  %36 = bitcast %"struct.net::SockaddrStorage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %36) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 144, i1 false) #15
  call void @_ZN3net15SockaddrStorageC1Ev(%"struct.net::SockaddrStorage"* nonnull %3) #15
  %37 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %3, i64 0, i32 2
  %38 = load %struct.sockaddr*, %struct.sockaddr** %37, align 8
  %39 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %3, i64 0, i32 1
  %40 = call zeroext i1 @_ZNK3net10IPEndPoint10ToSockAddrEP8sockaddrPj(%"class.net::IPEndPoint"* nonnull %6, %struct.sockaddr* %38, i32* %39) #15
  br i1 %40, label %41, label %51

41:                                               ; preds = %34
  %42 = load i32, i32* %11, align 8
  %43 = load %struct.sockaddr*, %struct.sockaddr** %37, align 8
  %44 = load i32, i32* %39, align 8
  %45 = call i32 @bind(i32 %42, %struct.sockaddr* %43, i32 %44) #15
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %41
  %48 = tail call i32* @__errno_location() #16
  %49 = load i32, i32* %48, align 4
  %50 = call i32 @_ZN3net14MapSystemErrorEi(i32 %49) #15
  br label %51

51:                                               ; preds = %34, %41, %47
  %52 = phi i32 [ -108, %34 ], [ %50, %47 ], [ 0, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %36) #15
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %35) #15
  br label %53

53:                                               ; preds = %30, %51
  %54 = phi i32 [ %52, %51 ], [ %31, %30 ]
  ret i32 %54
}

declare void @_ZN3net9IPAddress8AllZerosEm(%"class.net::IPAddress"* sret, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #4

declare void @_ZN4base18UmaHistogramSparseEPKci(i8*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK3net10IPEndPoint10ToSockAddrEP8sockaddrPj(%"class.net::IPEndPoint"*, %struct.sockaddr*, i32*) local_unnamed_addr #3

declare i32 @connect(i32, %struct.sockaddr*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix4BindERKNS_10IPEndPointE(%"class.net::UDPSocketPosix"* nocapture, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.net::SockaddrStorage", align 8
  %4 = tail call i32 @_ZN3net14UDPSocketPosix19SetMulticastOptionsEv(%"class.net::UDPSocketPosix"* %0)
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %34, label %6

6:                                                ; preds = %2
  %7 = bitcast %"struct.net::SockaddrStorage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %7) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 144, i1 false) #15
  call void @_ZN3net15SockaddrStorageC1Ev(%"struct.net::SockaddrStorage"* nonnull %3) #15
  %8 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %3, i64 0, i32 2
  %9 = load %struct.sockaddr*, %struct.sockaddr** %8, align 8
  %10 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %3, i64 0, i32 1
  %11 = call zeroext i1 @_ZNK3net10IPEndPoint10ToSockAddrEP8sockaddrPj(%"class.net::IPEndPoint"* %1, %struct.sockaddr* %9, i32* %10) #15
  br i1 %11, label %13, label %12

12:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %7) #15
  br label %34

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = load %struct.sockaddr*, %struct.sockaddr** %8, align 8
  %17 = load i32, i32* %10, align 8
  %18 = call i32 @bind(i32 %15, %struct.sockaddr* %16, i32 %17) #15
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %13
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %7) #15
  br label %26

21:                                               ; preds = %13
  %22 = tail call i32* @__errno_location() #16
  %23 = load i32, i32* %22, align 4
  %24 = call i32 @_ZN3net14MapSystemErrorEi(i32 %23) #15
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %7) #15
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %20, %21
  %27 = phi i32 [ 0, %20 ], [ %24, %21 ]
  %28 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 8
  store i8 1, i8* %28, align 4
  %29 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %30 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %29, align 8
  store %"class.net::IPEndPoint"* null, %"class.net::IPEndPoint"** %29, align 8
  %31 = icmp eq %"class.net::IPEndPoint"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %26
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %30) #15
  %33 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %33) #14
  br label %34

34:                                               ; preds = %32, %26, %12, %21, %2
  %35 = phi i32 [ %4, %2 ], [ %24, %21 ], [ -108, %12 ], [ %27, %26 ], [ %27, %32 ]
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix6DoBindERKNS_10IPEndPointE(%"class.net::UDPSocketPosix"* nocapture readonly, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.net::SockaddrStorage", align 8
  %4 = bitcast %"struct.net::SockaddrStorage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %4) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 144, i1 false)
  call void @_ZN3net15SockaddrStorageC1Ev(%"struct.net::SockaddrStorage"* nonnull %3) #15
  %5 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %3, i64 0, i32 2
  %6 = load %struct.sockaddr*, %struct.sockaddr** %5, align 8
  %7 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %3, i64 0, i32 1
  %8 = call zeroext i1 @_ZNK3net10IPEndPoint10ToSockAddrEP8sockaddrPj(%"class.net::IPEndPoint"* %1, %struct.sockaddr* %6, i32* %7) #15
  br i1 %8, label %9, label %20

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %11 = load i32, i32* %10, align 8
  %12 = load %struct.sockaddr*, %struct.sockaddr** %5, align 8
  %13 = load i32, i32* %7, align 8
  %14 = call i32 @bind(i32 %11, %struct.sockaddr* %12, i32 %13) #15
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %9
  %17 = tail call i32* @__errno_location() #16
  %18 = load i32, i32* %17, align 4
  %19 = call i32 @_ZN3net14MapSystemErrorEi(i32 %18) #15
  br label %20

20:                                               ; preds = %16, %9, %2
  %21 = phi i32 [ -108, %2 ], [ %19, %16 ], [ 0, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %4) #15
  ret i32 %21
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix13BindToNetworkEl(%"class.net::UDPSocketPosix"* nocapture readnone, i64) local_unnamed_addr #7 align 2 {
  %3 = load i64, i64* @_ZN3net21NetworkChangeNotifier21kInvalidNetworkHandleE, align 8
  %4 = icmp eq i64 %3, %1
  %5 = select i1 %4, i32 -4, i32 -11
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix20SetReceiveBufferSizeEi(%"class.net::UDPSocketPosix"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = tail call i32 @_ZN3net26SetSocketReceiveBufferSizeEii(i32 %4, i32 %1) #15
  ret i32 %5
}

declare i32 @_ZN3net26SetSocketReceiveBufferSizeEii(i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix17SetSendBufferSizeEi(%"class.net::UDPSocketPosix"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = tail call i32 @_ZN3net23SetSocketSendBufferSizeEii(i32 %4, i32 %1) #15
  ret i32 %5
}

declare i32 @_ZN3net23SetSocketSendBufferSizeEii(i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix16SetDoNotFragmentEv(%"class.net::UDPSocketPosix"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 7
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 10
  br i1 %8, label %9, label %32

9:                                                ; preds = %1
  %10 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #15
  store i32 2, i32* %2, align 4
  %11 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %12 = load i32, i32* %11, align 8
  %13 = call i32 @setsockopt(i32 %12, i32 41, i32 23, i8* nonnull %10, i32 4) #15
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %9
  %16 = tail call i32* @__errno_location() #16
  %17 = load i32, i32* %16, align 4
  %18 = call i32 @_ZN3net14MapSystemErrorEi(i32 %17) #15
  br label %42

19:                                               ; preds = %9
  %20 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #15
  store i32 0, i32* %3, align 4
  %21 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #15
  store i32 4, i32* %4, align 4
  %22 = load i32, i32* %11, align 8
  %23 = call i32 @getsockopt(i32 %22, i32 41, i32 26, i8* nonnull %20, i32* nonnull %4) #15
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = tail call i32* @__errno_location() #16
  %27 = load i32, i32* %26, align 4
  %28 = call i32 @_ZN3net14MapSystemErrorEi(i32 %27) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #15
  br label %42

29:                                               ; preds = %19
  %30 = load i32, i32* %3, align 4
  %31 = icmp eq i32 %30, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #15
  br i1 %31, label %32, label %45

32:                                               ; preds = %29, %1
  %33 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #15
  store i32 2, i32* %5, align 4
  %34 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %35 = load i32, i32* %34, align 8
  %36 = call i32 @setsockopt(i32 %35, i32 0, i32 10, i8* nonnull %33, i32 4) #15
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %32
  %39 = tail call i32* @__errno_location() #16
  %40 = load i32, i32* %39, align 4
  %41 = call i32 @_ZN3net14MapSystemErrorEi(i32 %40) #15
  br label %42

42:                                               ; preds = %38, %32, %15, %25
  %43 = phi i8* [ %10, %25 ], [ %10, %15 ], [ %33, %32 ], [ %33, %38 ]
  %44 = phi i32 [ %28, %25 ], [ %18, %15 ], [ 0, %32 ], [ %41, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #15
  br label %45

45:                                               ; preds = %42, %29
  %46 = phi i32 [ 0, %29 ], [ %44, %42 ]
  ret i32 %46
}

; Function Attrs: nounwind
declare i32 @setsockopt(i32, i32, i32, i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @getsockopt(i32, i32, i32, i8*, i32*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix13SetMsgConfirmEb(%"class.net::UDPSocketPosix"* nocapture, i1 zeroext) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 10
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, -2049
  %6 = or i32 %4, 2048
  %7 = select i1 %1, i32 %6, i32 %5
  store i32 %7, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix17AllowAddressReuseEv(%"class.net::UDPSocketPosix"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = tail call i32 @_ZN3net12SetReuseAddrEib(i32 %3, i1 zeroext true) #15
  ret i32 %4
}

declare i32 @_ZN3net12SetReuseAddrEib(i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix12SetBroadcastEb(%"class.net::UDPSocketPosix"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #15
  %5 = zext i1 %1 to i32
  store i32 %5, i32* %3, align 4
  %6 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 8
  %8 = call i32 @setsockopt(i32 %7, i32 1, i32 6, i8* nonnull %4, i32 4) #15
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = tail call i32* @__errno_location() #16
  %12 = load i32, i32* %11, align 4
  %13 = call i32 @_ZN3net14MapSystemErrorEi(i32 %12) #15
  br label %14

14:                                               ; preds = %2, %10
  %15 = phi i32 [ %13, %10 ], [ 0, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #15
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix31AllowAddressSharingForMulticastEv(%"class.net::UDPSocketPosix"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = tail call i32 @_ZN3net12SetReuseAddrEib(i32 %4, i1 zeroext true) #15
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %20

7:                                                ; preds = %1
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #15
  store i32 1, i32* %2, align 4
  %9 = load i32, i32* %3, align 8
  %10 = call i32 @setsockopt(i32 %9, i32 1, i32 15, i8* nonnull %8, i32 4) #15
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %7
  %13 = tail call i32* @__errno_location() #16
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 92
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = call i32 @_ZN3net14MapSystemErrorEi(i32 %14) #15
  br label %18

18:                                               ; preds = %7, %12, %16
  %19 = phi i32 [ %17, %16 ], [ 0, %12 ], [ 0, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #15
  br label %20

20:                                               ; preds = %1, %18
  %21 = phi i32 [ %19, %18 ], [ %5, %1 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix11ReadWatcher28OnFileCanReadWithoutBlockingEi(%"class.net::UDPSocketPosix::ReadWatcher"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 193, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7, !prof !8

7:                                                ; preds = %2
  %8 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #15
  %9 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %11 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #15
  store i64 %11, i64* %10, align 8
  %12 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 193, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.9, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %8, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  br label %13

13:                                               ; preds = %2, %7
  %14 = phi i64 [ -6148914691236517206, %2 ], [ %12, %7 ]
  %15 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([58 x i8], [58 x i8]* @.str.9, i64 0, i64 0), %7 ]
  %16 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 193, i32 0), %7 ]
  %17 = getelementptr inbounds %"class.net::UDPSocketPosix::ReadWatcher", %"class.net::UDPSocketPosix::ReadWatcher"* %0, i64 0, i32 1
  %18 = load %"class.net::UDPSocketPosix"*, %"class.net::UDPSocketPosix"** %17, align 8
  %19 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %18, i64 0, i32 36, i32 0, i32 0, i32 0
  %20 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %19, align 8
  %21 = icmp eq %"class.base::internal::BindStateBase"* %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %13
  call void @_ZN3net14UDPSocketPosix15DidCompleteReadEv(%"class.net::UDPSocketPosix"* %18)
  br label %23

23:                                               ; preds = %22, %13
  %24 = icmp eq i8* %16, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %23
  %26 = load i8, i8* %16, align 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %25
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %16, i8* %15, i64 %14) #15
  br label %29

29:                                               ; preds = %23, %25, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix15DidCompleteReadEv(%"class.net::UDPSocketPosix"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 30
  %4 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %3, i64 0, i32 0
  %5 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %4, align 8
  %6 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 31
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 32
  %9 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %8, align 8
  %10 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 43
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 8
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %19 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %18, align 8
  %20 = icmp eq %"class.net::IPEndPoint"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = tail call i32 @_ZN3net14UDPSocketPosix31InternalRecvFromConnectedSocketEPNS_8IOBufferEiPNS_10IPEndPointE(%"class.net::UDPSocketPosix"* %0, %"class.net::IOBuffer"* %5, i32 %7, %"class.net::IPEndPoint"* %9) #15
  br label %25

23:                                               ; preds = %17, %13, %1
  %24 = tail call i32 @_ZN3net14UDPSocketPosix34InternalRecvFromNonConnectedSocketEPNS_8IOBufferEiPNS_10IPEndPointE(%"class.net::UDPSocketPosix"* %0, %"class.net::IOBuffer"* %5, i32 %7, %"class.net::IPEndPoint"* %9) #15
  br label %25

25:                                               ; preds = %21, %23
  %26 = phi i32 [ %22, %21 ], [ %24, %23 ]
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %58, label %28

28:                                               ; preds = %25
  %29 = bitcast %class.scoped_refptr.34* %3 to i64*
  %30 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %4, align 8
  store i64 0, i64* %29, align 8
  %31 = icmp eq %"class.net::IOBuffer"* %30, null
  br i1 %31, label %44, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %30, i64 0, i32 1
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw sub i32* %34, i32 1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %44

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %33, i64 -2
  %39 = bitcast %"class.base::RefCountedThreadSafe.35"* %38 to %"class.net::IOBuffer"*
  %40 = bitcast %"class.base::RefCountedThreadSafe.35"* %38 to void (%"class.net::IOBuffer"*)***
  %41 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %41, i64 1
  %43 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %42, align 8
  tail call void %43(%"class.net::IOBuffer"* nonnull %39) #15
  br label %44

44:                                               ; preds = %28, %32, %37
  store i32 0, i32* %6, align 8
  store %"class.net::IPEndPoint"* null, %"class.net::IPEndPoint"** %8, align 8
  %45 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 16
  %46 = tail call zeroext i1 @_ZN4base19MessagePumpLibevent17FdWatchController26StopWatchingFileDescriptorEv(%"class.base::MessagePumpLibevent::FdWatchController"* %45) #15
  %47 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 36
  %48 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #15
  %49 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %47, i64 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.base::OnceCallback"* %47 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %51, i64* %52, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %49, align 8
  %53 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %54 = inttoptr i64 %51 to %"class.base::internal::BindStateBase"*
  %55 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %54, i64 0, i32 1
  %56 = bitcast void ()** %55 to void (%"class.base::internal::BindStateBase"*, i32)**
  %57 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %56, align 8
  tail call void %57(%"class.base::internal::BindStateBase"* %54, i32 %26) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %53) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #15
  br label %58

58:                                               ; preds = %25, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix12WriteWatcher29OnFileCanWriteWithoutBlockingEi(%"class.net::UDPSocketPosix::WriteWatcher"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPSocketPosix::WriteWatcher", %"class.net::UDPSocketPosix::WriteWatcher"* %0, i64 0, i32 1
  %4 = load %"class.net::UDPSocketPosix"*, %"class.net::UDPSocketPosix"** %3, align 8
  %5 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %4, i64 0, i32 37, i32 0, i32 0, i32 0
  %6 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %5, align 8
  %7 = icmp eq %"class.base::internal::BindStateBase"* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void @_ZN3net14UDPSocketPosix16DidCompleteWriteEv(%"class.net::UDPSocketPosix"* %4)
  br label %9

9:                                                ; preds = %8, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix16DidCompleteWriteEv(%"class.net::UDPSocketPosix"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 33
  %4 = getelementptr inbounds %class.scoped_refptr.34, %class.scoped_refptr.34* %3, i64 0, i32 0
  %5 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %4, align 8
  %6 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 34
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 35, i32 0, i32 0, i32 0
  %9 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %8, align 8
  %10 = tail call i32 @_ZN3net14UDPSocketPosix14InternalSendToEPNS_8IOBufferEiPKNS_10IPEndPointE(%"class.net::UDPSocketPosix"* %0, %"class.net::IOBuffer"* %5, i32 %7, %"class.net::IPEndPoint"* %9)
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %47, label %12

12:                                               ; preds = %1
  %13 = bitcast %class.scoped_refptr.34* %3 to i64*
  %14 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %4, align 8
  store i64 0, i64* %13, align 8
  %15 = icmp eq %"class.net::IOBuffer"* %14, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %14, i64 0, i32 1
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %28

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe.35", %"class.base::RefCountedThreadSafe.35"* %17, i64 -2
  %23 = bitcast %"class.base::RefCountedThreadSafe.35"* %22 to %"class.net::IOBuffer"*
  %24 = bitcast %"class.base::RefCountedThreadSafe.35"* %22 to void (%"class.net::IOBuffer"*)***
  %25 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %25, i64 1
  %27 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %26, align 8
  tail call void %27(%"class.net::IOBuffer"* nonnull %23) #15
  br label %28

28:                                               ; preds = %12, %16, %21
  store i32 0, i32* %6, align 8
  %29 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %8, align 8
  store %"class.net::IPEndPoint"* null, %"class.net::IPEndPoint"** %8, align 8
  %30 = icmp eq %"class.net::IPEndPoint"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %28
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %29) #15
  %32 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %32) #14
  br label %33

33:                                               ; preds = %28, %31
  %34 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 17
  %35 = tail call zeroext i1 @_ZN4base19MessagePumpLibevent17FdWatchController26StopWatchingFileDescriptorEv(%"class.base::MessagePumpLibevent::FdWatchController"* %34) #15
  %36 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 37
  %37 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #15
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %36, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.base::OnceCallback"* %36 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %40, i64* %41, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %38, align 8
  %42 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %43 = inttoptr i64 %40 to %"class.base::internal::BindStateBase"*
  %44 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %43, i64 0, i32 1
  %45 = bitcast void ()** %44 to void (%"class.base::internal::BindStateBase"*, i32)**
  %46 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %45, align 8
  tail call void %46(%"class.base::internal::BindStateBase"* %43, i32 %10) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %42) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #15
  br label %47

47:                                               ; preds = %1, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix14DoReadCallbackEi(%"class.net::UDPSocketPosix"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 36
  %5 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %11 = inttoptr i64 %8 to %"class.base::internal::BindStateBase"*
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %11, i64 0, i32 1
  %13 = bitcast void ()** %12 to void (%"class.base::internal::BindStateBase"*, i32)**
  %14 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %13, align 8
  tail call void %14(%"class.base::internal::BindStateBase"* %11, i32 %1) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %10) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix15DoWriteCallbackEi(%"class.net::UDPSocketPosix"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 37
  %5 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %11 = inttoptr i64 %8 to %"class.base::internal::BindStateBase"*
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %11, i64 0, i32 1
  %13 = bitcast void ()** %12 to void (%"class.base::internal::BindStateBase"*, i32)**
  %14 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %13, align 8
  tail call void %14(%"class.base::internal::BindStateBase"* %11, i32 %1) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %10) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret void
}

declare void @_ZNK3net16NetLogWithSource24AddEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"*, i32, i32) local_unnamed_addr #3

declare void @_ZN3net21NetLogUDPDataTransferERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiPKcPKNS_10IPEndPointE(%"class.net::NetLogWithSource"* dereferenceable(24), i32, i32, i8*, %"class.net::IPEndPoint"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix31InternalRecvFromConnectedSocketEPNS_8IOBufferEiPNS_10IPEndPointE(%"class.net::UDPSocketPosix"*, %"class.net::IOBuffer"* nocapture readonly, i32, %"class.net::IPEndPoint"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.net::SockaddrStorage", align 8
  %6 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %7 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 2
  %8 = sext i32 %2 to i64
  br label %9

9:                                                ; preds = %14, %4
  %10 = load i32, i32* %6, align 8
  %11 = load i8*, i8** %7, align 8
  %12 = tail call i64 @read(i32 %10, i8* %11, i64 %8) #15
  %13 = icmp eq i64 %12, -1
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = tail call i32* @__errno_location() #16
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 4
  br i1 %17, label %9, label %21

18:                                               ; preds = %9
  %19 = trunc i64 %12 to i32
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %14, %18
  %22 = tail call i32* @__errno_location() #16
  %23 = load i32, i32* %22, align 4
  %24 = tail call i32 @_ZN3net14MapSystemErrorEi(i32 %23) #15
  %25 = icmp eq i32 %24, -1
  br i1 %25, label %47, label %35

26:                                               ; preds = %18
  %27 = icmp eq i32 %19, %2
  br i1 %27, label %35, label %28

28:                                               ; preds = %26
  %29 = icmp eq %"class.net::IPEndPoint"* %3, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %32 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %31, align 8
  %33 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %34 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %33, i8* align 2 %34, i64 20, i1 false)
  br label %35

35:                                               ; preds = %26, %28, %30, %21
  %36 = phi i32 [ %24, %21 ], [ %19, %30 ], [ %19, %28 ], [ -142, %26 ]
  %37 = bitcast %"struct.net::SockaddrStorage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %37) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 144, i1 false)
  call void @_ZN3net15SockaddrStorageC1Ev(%"struct.net::SockaddrStorage"* nonnull %5) #15
  %38 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %39 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %38, align 8
  %40 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %5, i64 0, i32 2
  %41 = load %struct.sockaddr*, %struct.sockaddr** %40, align 8
  %42 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %5, i64 0, i32 1
  %43 = call zeroext i1 @_ZNK3net10IPEndPoint10ToSockAddrEP8sockaddrPj(%"class.net::IPEndPoint"* %39, %struct.sockaddr* %41, i32* %42) #15
  %44 = load i8*, i8** %7, align 8
  %45 = load i32, i32* %42, align 8
  %46 = load %struct.sockaddr*, %struct.sockaddr** %40, align 8
  call void @_ZN3net14UDPSocketPosix7LogReadEiPKcjPK8sockaddr(%"class.net::UDPSocketPosix"* %0, i32 %36, i8* %44, i32 %45, %struct.sockaddr* %46)
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %37) #15
  br label %47

47:                                               ; preds = %21, %35
  %48 = phi i32 [ %36, %35 ], [ -1, %21 ]
  ret i32 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix34InternalRecvFromNonConnectedSocketEPNS_8IOBufferEiPNS_10IPEndPointE(%"class.net::UDPSocketPosix"*, %"class.net::IOBuffer"* nocapture readonly, i32, %"class.net::IPEndPoint"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.net::SockaddrStorage", align 8
  %6 = alloca %struct.iovec, align 8
  %7 = alloca %struct.msghdr, align 8
  %8 = bitcast %"struct.net::SockaddrStorage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %8) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 144, i1 false)
  call void @_ZN3net15SockaddrStorageC1Ev(%"struct.net::SockaddrStorage"* nonnull %5) #15
  %9 = bitcast %struct.iovec* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #15
  %10 = getelementptr inbounds %struct.iovec, %struct.iovec* %6, i64 0, i32 1
  %11 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 2
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %struct.iovec* %6 to i64*
  store i64 %13, i64* %14, align 8
  %15 = sext i32 %2 to i64
  store i64 %15, i64* %10, align 8
  %16 = bitcast %struct.msghdr* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %16) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 56, i1 false)
  %17 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %5, i64 0, i32 2
  %18 = bitcast %struct.sockaddr** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %struct.msghdr* %7 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %7, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %5, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %21, align 8
  %24 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %7, i64 0, i32 2
  store %struct.iovec* %6, %struct.iovec** %24, align 8
  %25 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %7, i64 0, i32 3
  store i64 1, i64* %25, align 8
  %26 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %7, i64 0, i32 4
  %27 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %7, i64 0, i32 6
  %28 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %29 = bitcast i8** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 20, i1 false)
  br label %30

30:                                               ; preds = %34, %4
  %31 = load i32, i32* %28, align 8
  %32 = call i64 @recvmsg(i32 %31, %struct.msghdr* nonnull %7, i32 0) #15
  %33 = icmp eq i64 %32, -1
  br i1 %33, label %34, label %38

34:                                               ; preds = %30
  %35 = tail call i32* @__errno_location() #16
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 4
  br i1 %37, label %30, label %41

38:                                               ; preds = %30
  %39 = trunc i64 %32 to i32
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %34, %38
  %42 = tail call i32* @__errno_location() #16
  %43 = load i32, i32* %42, align 4
  %44 = call i32 @_ZN3net14MapSystemErrorEi(i32 %43) #15
  %45 = icmp eq i32 %44, -1
  br i1 %45, label %62, label %57

46:                                               ; preds = %38
  %47 = load i32, i32* %21, align 8
  store i32 %47, i32* %22, align 8
  %48 = load i32, i32* %27, align 8
  %49 = and i32 %48, 32
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %57

51:                                               ; preds = %46
  %52 = icmp eq %"class.net::IPEndPoint"* %3, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %51
  %54 = load %struct.sockaddr*, %struct.sockaddr** %17, align 8
  %55 = call zeroext i1 @_ZN3net10IPEndPoint12FromSockAddrEPK8sockaddrj(%"class.net::IPEndPoint"* nonnull %3, %struct.sockaddr* %54, i32 %47) #15
  br i1 %55, label %56, label %57

56:                                               ; preds = %51, %53
  br label %57

57:                                               ; preds = %53, %46, %56, %41
  %58 = phi i32 [ %44, %41 ], [ %39, %56 ], [ -142, %46 ], [ -108, %53 ]
  %59 = load i8*, i8** %11, align 8
  %60 = load i32, i32* %22, align 8
  %61 = load %struct.sockaddr*, %struct.sockaddr** %17, align 8
  call void @_ZN3net14UDPSocketPosix7LogReadEiPKcjPK8sockaddr(%"class.net::UDPSocketPosix"* %0, i32 %58, i8* %59, i32 %60, %struct.sockaddr* %61)
  br label %62

62:                                               ; preds = %41, %57
  %63 = phi i32 [ %58, %57 ], [ -1, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %16) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %8) #15
  ret i32 %63
}

; Function Attrs: nofree
declare i64 @read(i32, i8* nocapture, i64) local_unnamed_addr #9

declare i64 @recvmsg(i32, %struct.msghdr*, i32) local_unnamed_addr #3

declare i64 @sendto(i32, i8*, i64, i32, %struct.sockaddr*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @bind(i32, %struct.sockaddr*, i32) local_unnamed_addr #4

declare i32 @_ZN4base7RandIntEii(i32, i32) local_unnamed_addr #3

declare void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"*, %"class.net::IPAddress"* dereferenceable(17), i16 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net14UDPSocketPosix9JoinGroupERKNS_9IPAddressE(%"class.net::UDPSocketPosix"* nocapture readonly, %"class.net::IPAddress"* nocapture readonly dereferenceable(17)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.ip_mreqn, align 4
  %4 = alloca %struct.ipv6_mreq, align 4
  %5 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 8
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %55, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %1, i64 0, i32 0, i32 1
  %10 = load i8, i8* %9, align 1
  switch i8 %10, label %55 [
    i8 4, label %11
    i8 16, label %34
  ]

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 7
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %15, label %55

15:                                               ; preds = %11
  %16 = bitcast %struct.ip_mreqn* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 11
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %struct.ip_mreqn, %struct.ip_mreqn* %3, i64 0, i32 2
  store i32 %18, i32* %19, align 4
  %20 = getelementptr inbounds %struct.ip_mreqn, %struct.ip_mreqn* %3, i64 0, i32 1, i32 0
  store i32 0, i32* %20, align 4
  %21 = bitcast %"class.net::IPAddress"* %1 to i32*
  %22 = getelementptr inbounds %struct.ip_mreqn, %struct.ip_mreqn* %3, i64 0, i32 0, i32 0
  %23 = load i32, i32* %21, align 1
  store i32 %23, i32* %22, align 4
  %24 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %25 = load i32, i32* %24, align 8
  %26 = call i32 @setsockopt(i32 %25, i32 0, i32 35, i8* nonnull %16, i32 12) #15
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %15
  %29 = tail call i32* @__errno_location() #16
  %30 = load i32, i32* %29, align 4
  %31 = call i32 @_ZN3net14MapSystemErrorEi(i32 %30) #15
  br label %32

32:                                               ; preds = %15, %28
  %33 = phi i32 [ %31, %28 ], [ 0, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %16) #15
  br label %55

34:                                               ; preds = %8
  %35 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 7
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 10
  br i1 %37, label %38, label %55

38:                                               ; preds = %34
  %39 = bitcast %struct.ipv6_mreq* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %39) #15
  %40 = getelementptr inbounds %struct.ipv6_mreq, %struct.ipv6_mreq* %4, i64 0, i32 1
  %41 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 11
  %42 = bitcast %struct.ipv6_mreq* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %42, i8 -86, i64 16, i1 false)
  %43 = load i32, i32* %41, align 8
  store i32 %43, i32* %40, align 4
  %44 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %1, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %39, i8* align 1 %44, i64 16, i1 false)
  %45 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %46 = load i32, i32* %45, align 8
  %47 = call i32 @setsockopt(i32 %46, i32 41, i32 20, i8* nonnull %39, i32 20) #15
  %48 = icmp slt i32 %47, 0
  br i1 %48, label %49, label %53

49:                                               ; preds = %38
  %50 = tail call i32* @__errno_location() #16
  %51 = load i32, i32* %50, align 4
  %52 = call i32 @_ZN3net14MapSystemErrorEi(i32 %51) #15
  br label %53

53:                                               ; preds = %38, %49
  %54 = phi i32 [ %52, %49 ], [ 0, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %39) #15
  br label %55

55:                                               ; preds = %2, %8, %34, %11, %53, %32
  %56 = phi i32 [ %54, %53 ], [ %33, %32 ], [ -15, %2 ], [ -108, %11 ], [ -108, %34 ], [ -108, %8 ]
  ret i32 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net14UDPSocketPosix10LeaveGroupERKNS_9IPAddressE(%"class.net::UDPSocketPosix"* nocapture readonly, %"class.net::IPAddress"* nocapture readonly dereferenceable(17)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.ip_mreqn, align 4
  %4 = alloca %struct.ipv6_mreq, align 4
  %5 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 8
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %52, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %1, i64 0, i32 0, i32 1
  %10 = load i8, i8* %9, align 1
  switch i8 %10, label %52 [
    i8 4, label %11
    i8 16, label %34
  ]

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 7
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %15, label %52

15:                                               ; preds = %11
  %16 = bitcast %struct.ip_mreqn* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 11
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %struct.ip_mreqn, %struct.ip_mreqn* %3, i64 0, i32 2
  store i32 %18, i32* %19, align 4
  %20 = getelementptr inbounds %struct.ip_mreqn, %struct.ip_mreqn* %3, i64 0, i32 1, i32 0
  store i32 0, i32* %20, align 4
  %21 = bitcast %"class.net::IPAddress"* %1 to i32*
  %22 = getelementptr inbounds %struct.ip_mreqn, %struct.ip_mreqn* %3, i64 0, i32 0, i32 0
  %23 = load i32, i32* %21, align 1
  store i32 %23, i32* %22, align 4
  %24 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %25 = load i32, i32* %24, align 8
  %26 = call i32 @setsockopt(i32 %25, i32 0, i32 36, i8* nonnull %16, i32 12) #15
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %15
  %29 = tail call i32* @__errno_location() #16
  %30 = load i32, i32* %29, align 4
  %31 = call i32 @_ZN3net14MapSystemErrorEi(i32 %30) #15
  br label %32

32:                                               ; preds = %15, %28
  %33 = phi i32 [ %31, %28 ], [ 0, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %16) #15
  br label %52

34:                                               ; preds = %8
  %35 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 7
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 10
  br i1 %37, label %38, label %52

38:                                               ; preds = %34
  %39 = bitcast %struct.ipv6_mreq* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %39) #15
  %40 = getelementptr inbounds %struct.ipv6_mreq, %struct.ipv6_mreq* %4, i64 0, i32 1
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %1, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %39, i8* align 1 %41, i64 16, i1 false)
  %42 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %43 = load i32, i32* %42, align 8
  %44 = call i32 @setsockopt(i32 %43, i32 41, i32 21, i8* nonnull %39, i32 20) #15
  %45 = icmp slt i32 %44, 0
  br i1 %45, label %46, label %50

46:                                               ; preds = %38
  %47 = tail call i32* @__errno_location() #16
  %48 = load i32, i32* %47, align 4
  %49 = call i32 @_ZN3net14MapSystemErrorEi(i32 %48) #15
  br label %50

50:                                               ; preds = %38, %46
  %51 = phi i32 [ %49, %46 ], [ 0, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %39) #15
  br label %52

52:                                               ; preds = %2, %8, %34, %11, %50, %32
  %53 = phi i32 [ %51, %50 ], [ %33, %32 ], [ -15, %2 ], [ -108, %11 ], [ -108, %34 ], [ -108, %8 ]
  ret i32 %53
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix21SetMulticastInterfaceEj(%"class.net::UDPSocketPosix"* nocapture, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 8
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 11
  store i32 %1, i32* %7, align 8
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i32 [ 0, %6 ], [ -23, %2 ]
  ret i32 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix22SetMulticastTimeToLiveEi(%"class.net::UDPSocketPosix"* nocapture, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 8
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = icmp ugt i32 %1, 255
  br i1 %7, label %10, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 12
  store i32 %1, i32* %9, align 4
  br label %10

10:                                               ; preds = %2, %6, %8
  %11 = phi i32 [ 0, %8 ], [ -23, %2 ], [ -4, %6 ]
  ret i32 %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix24SetMulticastLoopbackModeEb(%"class.net::UDPSocketPosix"* nocapture, i1 zeroext) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 8
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 9
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, -2
  %10 = or i32 %8, 1
  %11 = select i1 %1, i32 %10, i32 %9
  store i32 %11, i32* %7, align 8
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi i32 [ 0, %6 ], [ -23, %2 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix20SetDiffServCodePointENS_17DiffServCodePointE(%"class.net::UDPSocketPosix"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = icmp eq i32 %1, -1
  br i1 %4, label %26, label %5

5:                                                ; preds = %2
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #15
  %7 = shl i32 %1, 2
  store i32 %7, i32* %3, align 4
  %8 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = call i32 @setsockopt(i32 %9, i32 0, i32 1, i8* nonnull %6, i32 4) #15
  %11 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 7
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 10
  br i1 %13, label %14, label %17

14:                                               ; preds = %5
  %15 = load i32, i32* %8, align 8
  %16 = call i32 @setsockopt(i32 %15, i32 41, i32 67, i8* nonnull %6, i32 4) #15
  br label %17

17:                                               ; preds = %14, %5
  %18 = phi i32 [ %16, %14 ], [ %10, %5 ]
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %20, label %24

20:                                               ; preds = %17
  %21 = tail call i32* @__errno_location() #16
  %22 = load i32, i32* %21, align 4
  %23 = call i32 @_ZN3net14MapSystemErrorEi(i32 %22) #15
  br label %24

24:                                               ; preds = %17, %20
  %25 = phi i32 [ %23, %20 ], [ 0, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #15
  br label %26

26:                                               ; preds = %2, %24
  %27 = phi i32 [ %25, %24 ], [ 0, %2 ]
  ret i32 %27
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix16DetachFromThreadEv(%"class.net::UDPSocketPosix"* nocapture) local_unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix14ApplySocketTagERKNS_9SocketTagE(%"class.net::UDPSocketPosix"*, %"class.net::SocketTag"* dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 42
  %8 = tail call zeroext i1 @_ZNK3net9SocketTageqERKS0_(%"class.net::SocketTag"* %1, %"class.net::SocketTag"* dereferenceable(1) %7) #15
  br i1 %8, label %11, label %9

9:                                                ; preds = %6
  %10 = load i32, i32* %3, align 8
  tail call void @_ZNK3net9SocketTag5ApplyEi(%"class.net::SocketTag"* %1, i32 %10) #15
  br label %11

11:                                               ; preds = %6, %2, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net20UDPSocketPosixSenderC2Ev(%"class.net::UDPSocketPosixSender"* nocapture) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPSocketPosixSender", %"class.net::UDPSocketPosixSender"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.net::UDPSocketPosixSender", %"class.net::UDPSocketPosixSender"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net20UDPSocketPosixSenderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::UDPSocketPosixSender", %"class.net::UDPSocketPosixSender"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net20UDPSocketPosixSenderD2Ev(%"class.net::UDPSocketPosixSender"* nocapture) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20UDPSocketPosixSenderD0Ev(%"class.net::UDPSocketPosixSender"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.net::UDPSocketPosixSender"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net10SendResultC2Ev(%"struct.net::SendResult"*) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %4, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %4, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %5, %"struct.std::__1::__list_node_base"** %6, align 8
  %7 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %5, %"struct.std::__1::__list_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10SendResultD2Ev(%"struct.net::SendResult"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 2, i32 0
  %3 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %37, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %8 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %2, i64 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %2, i64 0, i32 0, i32 0
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %11, i64 0, i32 1
  %13 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %8, i64 0, i32 0
  %16 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 1
  %18 = bitcast %"struct.std::__1::__list_node_base"** %17 to i64*
  store i64 %14, i64* %18, align 8
  %19 = bitcast %"struct.std::__1::__list_node_base"* %8 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64**
  %22 = load i64*, i64** %21, align 8
  store i64 %20, i64* %22, align 8
  store i64 0, i64* %3, align 8
  %23 = icmp eq %"struct.std::__1::__list_node_base"* %8, %9
  br i1 %23, label %37, label %24

24:                                               ; preds = %6, %34
  %25 = phi %"struct.std::__1::__list_node_base"* [ %27, %34 ], [ %8, %6 ]
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 0, i32 1
  %27 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 1
  %29 = bitcast %"struct.std::__1::__list_node_base"* %28 to %"class.net::DatagramBuffer"**
  %30 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %29, align 8
  store %"class.net::DatagramBuffer"* null, %"class.net::DatagramBuffer"** %29, align 8
  %31 = icmp eq %"class.net::DatagramBuffer"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  tail call void @_ZN3net14DatagramBufferD1Ev(%"class.net::DatagramBuffer"* nonnull %30) #15
  %33 = bitcast %"class.net::DatagramBuffer"* %30 to i8*
  tail call void @_ZdlPv(i8* %33) #14
  br label %34

34:                                               ; preds = %32, %24
  %35 = bitcast %"struct.std::__1::__list_node_base"* %25 to i8*
  tail call void @_ZdlPv(i8* %35) #14
  %36 = icmp eq %"struct.std::__1::__list_node_base"* %27, %9
  br i1 %36, label %37, label %24

37:                                               ; preds = %34, %1, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net10SendResultC2EiiNSt3__14listINS1_10unique_ptrINS_14DatagramBufferENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE(%"struct.net::SendResult"*, i32, i32, %"class.std::__1::list"* nocapture) unnamed_addr #8 align 2 {
  %5 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 0
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 1
  store i32 %2, i32* %6, align 4
  %7 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %7, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %7, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %8, %"struct.std::__1::__list_node_base"** %9, align 8
  %10 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %8, %"struct.std::__1::__list_node_base"** %10, align 8
  %11 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %38, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 1
  %17 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %19, i64 0, i32 1
  %21 = bitcast %"struct.std::__1::__list_node_base"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 0, i32 0
  %24 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__list_node_base"** %25 to i64*
  store i64 %22, i64* %26, align 8
  %27 = bitcast %"struct.std::__1::__list_node_base"* %17 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"struct.std::__1::__list_node_base"** %20 to i64**
  %30 = load i64*, i64** %29, align 8
  store i64 %28, i64* %30, align 8
  %31 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %9, align 8
  %32 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %31, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %17, %"struct.std::__1::__list_node_base"** %32, align 8
  %33 = bitcast %"class.std::__1::list"* %7 to i64*
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %27, align 8
  store %"struct.std::__1::__list_node_base"* %19, %"struct.std::__1::__list_node_base"** %9, align 8
  store %"struct.std::__1::__list_node_base"* %8, %"struct.std::__1::__list_node_base"** %20, align 8
  %35 = load i64, i64* %12, align 8
  %36 = load i64, i64* %11, align 8
  %37 = add i64 %36, %35
  store i64 %37, i64* %11, align 8
  store i64 0, i64* %12, align 8
  br label %38

38:                                               ; preds = %4, %15
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net10SendResultC2EOS0_(%"struct.net::SendResult"*, %"struct.net::SendResult"* nocapture dereferenceable(32)) unnamed_addr #8 align 2 {
  %3 = bitcast %"struct.net::SendResult"* %1 to i64*
  %4 = bitcast %"struct.net::SendResult"* %0 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %6, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %6, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %7, %"struct.std::__1::__list_node_base"** %8, align 8
  %9 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %7, %"struct.std::__1::__list_node_base"** %9, align 8
  %10 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %37, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %16 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8
  %17 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %17, align 8
  %19 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %18, i64 0, i32 1
  %20 = bitcast %"struct.std::__1::__list_node_base"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 0
  %23 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %23, i64 0, i32 1
  %25 = bitcast %"struct.std::__1::__list_node_base"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"struct.std::__1::__list_node_base"* %16 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"struct.std::__1::__list_node_base"** %19 to i64**
  %29 = load i64*, i64** %28, align 8
  store i64 %27, i64* %29, align 8
  %30 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %8, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %30, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %16, %"struct.std::__1::__list_node_base"** %31, align 8
  %32 = bitcast %"class.std::__1::list"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %26, align 8
  store %"struct.std::__1::__list_node_base"* %18, %"struct.std::__1::__list_node_base"** %8, align 8
  store %"struct.std::__1::__list_node_base"* %7, %"struct.std::__1::__list_node_base"** %19, align 8
  %34 = load i64, i64* %11, align 8
  %35 = load i64, i64* %10, align 8
  %36 = add i64 %35, %34
  store i64 %36, i64* %10, align 8
  store i64 0, i64* %11, align 8
  br label %37

37:                                               ; preds = %2, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net20UDPSocketPosixSender19InternalSendBuffersEiNSt3__14listINS1_10unique_ptrINS_14DatagramBufferENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE(%"struct.net::SendResult"* noalias sret, %"class.net::UDPSocketPosixSender"*, i32, %"class.std::__1::list"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::list", align 8
  %6 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0
  %8 = bitcast %"struct.std::__1::__list_node_base"** %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = inttoptr i64 %9 to %"struct.std::__1::__list_node_base"*
  %11 = icmp eq %"struct.std::__1::__list_node_base"* %7, %10
  br i1 %11, label %48, label %12

12:                                               ; preds = %4
  %13 = bitcast %"class.net::UDPSocketPosixSender"* %1 to i64 (%"class.net::UDPSocketPosixSender"*, i32, i8*, i64, i32)***
  br label %14

14:                                               ; preds = %12, %41
  %15 = phi %"struct.std::__1::__list_node_base"* [ %10, %12 ], [ %46, %41 ]
  %16 = phi i64 [ %9, %12 ], [ %45, %41 ]
  %17 = phi i32 [ 0, %12 ], [ %42, %41 ]
  %18 = inttoptr i64 %16 to %"struct.std::__1::__list_node"*
  %19 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %18, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %20

20:                                               ; preds = %30, %14
  %21 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %19, align 8
  %22 = tail call i8* @_ZNK3net14DatagramBuffer4dataEv(%"class.net::DatagramBuffer"* %21) #15
  %23 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %19, align 8
  %24 = tail call i64 @_ZNK3net14DatagramBuffer6lengthEv(%"class.net::DatagramBuffer"* %23) #15
  %25 = load i64 (%"class.net::UDPSocketPosixSender"*, i32, i8*, i64, i32)**, i64 (%"class.net::UDPSocketPosixSender"*, i32, i8*, i64, i32)*** %13, align 8
  %26 = getelementptr inbounds i64 (%"class.net::UDPSocketPosixSender"*, i32, i8*, i64, i32)*, i64 (%"class.net::UDPSocketPosixSender"*, i32, i8*, i64, i32)** %25, i64 2
  %27 = load i64 (%"class.net::UDPSocketPosixSender"*, i32, i8*, i64, i32)*, i64 (%"class.net::UDPSocketPosixSender"*, i32, i8*, i64, i32)** %26, align 8
  %28 = tail call i64 %27(%"class.net::UDPSocketPosixSender"* %1, i32 %2, i8* %22, i64 %24, i32 0) #15
  %29 = icmp eq i64 %28, -1
  br i1 %29, label %30, label %34

30:                                               ; preds = %20
  %31 = tail call i32* @__errno_location() #16
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 4
  br i1 %33, label %20, label %37

34:                                               ; preds = %20
  %35 = trunc i64 %28 to i32
  %36 = icmp slt i32 %35, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %34, %30
  %38 = tail call i32* @__errno_location() #16
  %39 = load i32, i32* %38, align 4
  %40 = tail call i32 @_ZN3net14MapSystemErrorEi(i32 %39) #15
  br label %48

41:                                               ; preds = %34
  %42 = add nuw nsw i32 %17, 1
  %43 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %15, i64 0, i32 1
  %44 = bitcast %"struct.std::__1::__list_node_base"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = inttoptr i64 %45 to %"struct.std::__1::__list_node_base"*
  %47 = icmp eq %"struct.std::__1::__list_node_base"* %7, %46
  br i1 %47, label %48, label %14

48:                                               ; preds = %41, %4, %37
  %49 = phi i32 [ %17, %37 ], [ 0, %4 ], [ %42, %41 ]
  %50 = phi i32 [ %40, %37 ], [ 0, %4 ], [ 0, %41 ]
  %51 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %51, %"struct.std::__1::__list_node_base"** %52, align 8
  %53 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %51, %"struct.std::__1::__list_node_base"** %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %80, label %58

58:                                               ; preds = %48
  %59 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %6, align 8
  %60 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %60, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %61, i64 0, i32 1
  %63 = bitcast %"struct.std::__1::__list_node_base"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %59, i64 0, i32 0
  %66 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %65, align 8
  %67 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %66, i64 0, i32 1
  %68 = bitcast %"struct.std::__1::__list_node_base"** %67 to i64*
  store i64 %64, i64* %68, align 8
  %69 = bitcast %"struct.std::__1::__list_node_base"* %59 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"struct.std::__1::__list_node_base"** %62 to i64**
  %72 = load i64*, i64** %71, align 8
  store i64 %70, i64* %72, align 8
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %52, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %59, %"struct.std::__1::__list_node_base"** %74, align 8
  %75 = ptrtoint %"struct.std::__1::__list_node_base"* %73 to i64
  store i64 %75, i64* %69, align 8
  store %"struct.std::__1::__list_node_base"* %61, %"struct.std::__1::__list_node_base"** %52, align 8
  store %"struct.std::__1::__list_node_base"* %51, %"struct.std::__1::__list_node_base"** %62, align 8
  %76 = load i64, i64* %55, align 8
  %77 = load i64, i64* %54, align 8
  %78 = add i64 %77, %76
  store i64 %78, i64* %54, align 8
  store i64 0, i64* %55, align 8
  %79 = icmp eq i64 %78, 0
  br label %80

80:                                               ; preds = %48, %58
  %81 = phi %"struct.std::__1::__list_node_base"* [ %51, %48 ], [ %61, %58 ]
  %82 = phi i1 [ true, %48 ], [ %79, %58 ]
  %83 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 0
  store i32 %50, i32* %83, align 8
  %84 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 1
  store i32 %49, i32* %84, align 4
  %85 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 2
  %86 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %85, i64 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %85, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %86, %"struct.std::__1::__list_node_base"** %87, align 8
  %88 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %86, %"struct.std::__1::__list_node_base"** %88, align 8
  %89 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %89, align 8
  br i1 %82, label %110, label %90

90:                                               ; preds = %80
  %91 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %53, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %81, i64 0, i32 1
  %93 = bitcast %"struct.std::__1::__list_node_base"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %91, i64 0, i32 0
  %96 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %95, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %96, i64 0, i32 1
  %98 = bitcast %"struct.std::__1::__list_node_base"** %97 to i64*
  store i64 %94, i64* %98, align 8
  %99 = bitcast %"struct.std::__1::__list_node_base"* %91 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"struct.std::__1::__list_node_base"** %92 to i64**
  %102 = load i64*, i64** %101, align 8
  store i64 %100, i64* %102, align 8
  %103 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %87, align 8
  %104 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %103, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %91, %"struct.std::__1::__list_node_base"** %104, align 8
  %105 = bitcast %"class.std::__1::list"* %85 to i64*
  %106 = load i64, i64* %105, align 8
  store i64 %106, i64* %99, align 8
  store %"struct.std::__1::__list_node_base"* %81, %"struct.std::__1::__list_node_base"** %87, align 8
  store %"struct.std::__1::__list_node_base"* %86, %"struct.std::__1::__list_node_base"** %92, align 8
  %107 = load i64, i64* %54, align 8
  %108 = load i64, i64* %89, align 8
  %109 = add i64 %108, %107
  store i64 %109, i64* %89, align 8
  store i64 0, i64* %54, align 8
  br label %110

110:                                              ; preds = %90, %80
  ret void
}

declare i8* @_ZNK3net14DatagramBuffer4dataEv(%"class.net::DatagramBuffer"*) local_unnamed_addr #3

declare i64 @_ZNK3net14DatagramBuffer6lengthEv(%"class.net::DatagramBuffer"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net20UDPSocketPosixSender23InternalSendmmsgBuffersEiNSt3__14listINS1_10unique_ptrINS_14DatagramBufferENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE(%"struct.net::SendResult"* noalias sret, %"class.net::UDPSocketPosixSender"*, i32, %"class.std::__1::list"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::StackVector", align 8
  %6 = alloca %"class.base::StackVector.75", align 8
  %7 = alloca %struct.iovec, align 8
  %8 = alloca %struct.mmsghdr, align 8
  %9 = alloca %"class.std::__1::list", align 8
  %10 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %5, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 320, i8* nonnull %10) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 280, i1 false)
  %11 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %5, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %5, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %5, i64 0, i32 0, i32 1, i32 0
  store %"struct.base::StackAllocator<iovec, 17>::Source"* %11, %"struct.base::StackAllocator<iovec, 17>::Source"** %13, align 8
  %14 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %5, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %5, i64 0, i32 0, i32 2, i32 0, i32 2, i32 1
  %16 = ptrtoint %"class.base::StackVector"* %5 to i64
  %17 = bitcast %"struct.std::__1::__compressed_pair_elem.74"* %15 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %5, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %struct.iovec** %18 to i64*
  %20 = bitcast %"class.std::__1::vector.70"* %14 to i64*
  %21 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %5, i64 0, i32 0, i32 2, i32 0, i32 1
  %22 = bitcast %struct.iovec** %21 to i64*
  store i8 1, i8* %12, align 8
  %23 = ptrtoint i8* %12 to i64
  store i64 %16, i64* %20, align 8
  store i64 %16, i64* %22, align 8
  store i64 %23, i64* %19, align 8
  %24 = getelementptr inbounds %"class.base::StackVector.75", %"class.base::StackVector.75"* %6, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1136, i8* nonnull %24) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 1096, i1 false)
  %25 = getelementptr inbounds %"class.base::StackVector.75", %"class.base::StackVector.75"* %6, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.base::StackVector.75", %"class.base::StackVector.75"* %6, i64 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.base::StackVector.75", %"class.base::StackVector.75"* %6, i64 0, i32 0, i32 1, i32 0
  store %"struct.base::StackAllocator<mmsghdr, 17>::Source"* %25, %"struct.base::StackAllocator<mmsghdr, 17>::Source"** %27, align 8
  %28 = getelementptr inbounds %"class.base::StackVector.75", %"class.base::StackVector.75"* %6, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.base::StackVector.75", %"class.base::StackVector.75"* %6, i64 0, i32 0, i32 2, i32 0, i32 2, i32 1
  %30 = ptrtoint %"class.base::StackVector.75"* %6 to i64
  %31 = bitcast %"struct.std::__1::__compressed_pair_elem.84"* %29 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.base::StackVector.75", %"class.base::StackVector.75"* %6, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %struct.mmsghdr** %32 to i64*
  %34 = bitcast %"class.std::__1::vector.80"* %28 to i64*
  %35 = getelementptr inbounds %"class.base::StackVector.75", %"class.base::StackVector.75"* %6, i64 0, i32 0, i32 2, i32 0, i32 1
  %36 = bitcast %struct.mmsghdr** %35 to i64*
  store i8 1, i8* %26, align 8
  %37 = ptrtoint i8* %26 to i64
  store i64 %30, i64* %34, align 8
  store i64 %30, i64* %36, align 8
  store i64 %37, i64* %33, align 8
  %38 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp ugt i64 %39, 17
  br i1 %40, label %41, label %61

41:                                               ; preds = %4
  %42 = icmp ugt i64 %39, 1152921504606846975
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  call void @abort() #17
  unreachable

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %5, i64 0, i32 0, i32 2, i32 0, i32 2, i32 1, i32 0, i32 0
  %46 = shl i64 %39, 4
  %47 = call i8* @_Znwm(i64 %46) #14
  %48 = ptrtoint i8* %47 to i64
  %49 = bitcast i8* %47 to %struct.iovec*
  %50 = getelementptr inbounds %struct.iovec, %struct.iovec* %49, i64 %39
  %51 = ptrtoint %struct.iovec* %50 to i64
  store i64 %48, i64* %20, align 8
  store i64 %48, i64* %22, align 8
  store i64 %51, i64* %19, align 8
  %52 = load %"struct.base::StackAllocator<iovec, 17>::Source"*, %"struct.base::StackAllocator<iovec, 17>::Source"** %45, align 8
  %53 = icmp ne %"struct.base::StackAllocator<iovec, 17>::Source"* %52, null
  %54 = bitcast %"struct.base::StackAllocator<iovec, 17>::Source"* %52 to %"class.base::StackVector"*
  %55 = icmp eq %"class.base::StackVector"* %5, %54
  %56 = and i1 %53, %55
  br i1 %56, label %57, label %59

57:                                               ; preds = %44
  %58 = getelementptr inbounds %"struct.base::StackAllocator<iovec, 17>::Source", %"struct.base::StackAllocator<iovec, 17>::Source"* %52, i64 0, i32 1
  store i8 0, i8* %58, align 8
  br label %61

59:                                               ; preds = %44
  %60 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %5, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %60) #14
  br label %61

61:                                               ; preds = %4, %57, %59
  %62 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 1
  %63 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0
  %64 = bitcast %"struct.std::__1::__list_node_base"** %62 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = inttoptr i64 %65 to %"struct.std::__1::__list_node_base"*
  %67 = icmp eq %"struct.std::__1::__list_node_base"* %63, %66
  br i1 %67, label %72, label %68

68:                                               ; preds = %61
  %69 = bitcast %struct.iovec* %7 to i8*
  %70 = getelementptr inbounds %struct.iovec, %struct.iovec* %7, i64 0, i32 0
  %71 = getelementptr inbounds %struct.iovec, %struct.iovec* %7, i64 0, i32 1
  br label %195

72:                                               ; preds = %212, %61
  %73 = load i64, i64* %38, align 8
  %74 = load i64, i64* %33, align 8
  %75 = load i64, i64* %34, align 8
  %76 = sub i64 %74, %75
  %77 = ashr exact i64 %76, 6
  %78 = icmp ult i64 %77, %73
  %79 = inttoptr i64 %75 to %struct.mmsghdr*
  br i1 %78, label %80, label %182

80:                                               ; preds = %72
  %81 = getelementptr inbounds %"class.base::StackVector.75", %"class.base::StackVector.75"* %6, i64 0, i32 0, i32 2, i32 0, i32 2, i32 1, i32 0
  %82 = load i64, i64* %36, align 8
  %83 = sub i64 %82, %75
  %84 = ashr exact i64 %83, 6
  %85 = getelementptr inbounds %"class.base::StackAllocator.77", %"class.base::StackAllocator.77"* %81, i64 0, i32 0
  %86 = load %"struct.base::StackAllocator<mmsghdr, 17>::Source"*, %"struct.base::StackAllocator<mmsghdr, 17>::Source"** %85, align 8
  %87 = icmp eq %"struct.base::StackAllocator<mmsghdr, 17>::Source"* %86, null
  %88 = inttoptr i64 %82 to %struct.mmsghdr*
  br i1 %87, label %101, label %89

89:                                               ; preds = %80
  %90 = getelementptr inbounds %"struct.base::StackAllocator<mmsghdr, 17>::Source", %"struct.base::StackAllocator<mmsghdr, 17>::Source"* %86, i64 0, i32 1
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  %93 = icmp ult i64 %73, 18
  %94 = and i1 %93, %92
  br i1 %94, label %95, label %101

95:                                               ; preds = %89
  store i8 1, i8* %90, align 8
  %96 = bitcast %"class.base::StackAllocator.77"* %81 to %struct.mmsghdr**
  %97 = load %struct.mmsghdr*, %struct.mmsghdr** %96, align 8
  %98 = getelementptr inbounds %"class.std::__1::vector.80", %"class.std::__1::vector.80"* %28, i64 0, i32 0, i32 0
  %99 = load %struct.mmsghdr*, %struct.mmsghdr** %98, align 8
  %100 = load %struct.mmsghdr*, %struct.mmsghdr** %35, align 8
  br label %108

101:                                              ; preds = %89, %80
  %102 = icmp ugt i64 %73, 288230376151711743
  br i1 %102, label %103, label %104

103:                                              ; preds = %101
  call void @abort() #17
  unreachable

104:                                              ; preds = %101
  %105 = shl i64 %73, 6
  %106 = call i8* @_Znwm(i64 %105) #14
  %107 = bitcast i8* %106 to %struct.mmsghdr*
  br label %108

108:                                              ; preds = %104, %95
  %109 = phi %struct.mmsghdr* [ %100, %95 ], [ %88, %104 ]
  %110 = phi %struct.mmsghdr* [ %99, %95 ], [ %79, %104 ]
  %111 = phi %struct.mmsghdr* [ %97, %95 ], [ %107, %104 ]
  %112 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %111, i64 %84
  %113 = ptrtoint %struct.mmsghdr* %112 to i64
  %114 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %111, i64 %73
  %115 = ptrtoint %struct.mmsghdr* %114 to i64
  %116 = icmp eq %struct.mmsghdr* %109, %110
  br i1 %116, label %141, label %117

117:                                              ; preds = %108
  %118 = ptrtoint %struct.mmsghdr* %110 to i64
  %119 = getelementptr %struct.mmsghdr, %struct.mmsghdr* %109, i64 -1, i32 0, i32 0
  %120 = ptrtoint i8** %119 to i64
  %121 = sub i64 %120, %118
  %122 = lshr i64 %121, 6
  %123 = add nuw nsw i64 %122, 1
  %124 = and i64 %123, 3
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %136, label %126

126:                                              ; preds = %117, %126
  %127 = phi %struct.mmsghdr* [ %130, %126 ], [ %112, %117 ]
  %128 = phi %struct.mmsghdr* [ %131, %126 ], [ %109, %117 ]
  %129 = phi i64 [ %134, %126 ], [ %124, %117 ]
  %130 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %127, i64 -1
  %131 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %128, i64 -1
  %132 = bitcast %struct.mmsghdr* %130 to i8*
  %133 = bitcast %struct.mmsghdr* %131 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %133, i64 64, i1 false) #15
  %134 = add i64 %129, -1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %126, !llvm.loop !15

136:                                              ; preds = %126, %117
  %137 = phi %struct.mmsghdr* [ undef, %117 ], [ %130, %126 ]
  %138 = phi %struct.mmsghdr* [ %112, %117 ], [ %130, %126 ]
  %139 = phi %struct.mmsghdr* [ %109, %117 ], [ %131, %126 ]
  %140 = icmp ult i64 %121, 192
  br i1 %140, label %163, label %143

141:                                              ; preds = %108
  %142 = ptrtoint %struct.mmsghdr* %109 to i64
  br label %167

143:                                              ; preds = %136, %143
  %144 = phi %struct.mmsghdr* [ %158, %143 ], [ %138, %136 ]
  %145 = phi %struct.mmsghdr* [ %159, %143 ], [ %139, %136 ]
  %146 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %144, i64 -1
  %147 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %145, i64 -1
  %148 = bitcast %struct.mmsghdr* %146 to i8*
  %149 = bitcast %struct.mmsghdr* %147 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 64, i1 false) #15
  %150 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %144, i64 -2
  %151 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %145, i64 -2
  %152 = bitcast %struct.mmsghdr* %150 to i8*
  %153 = bitcast %struct.mmsghdr* %151 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 64, i1 false) #15
  %154 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %144, i64 -3
  %155 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %145, i64 -3
  %156 = bitcast %struct.mmsghdr* %154 to i8*
  %157 = bitcast %struct.mmsghdr* %155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* align 8 %157, i64 64, i1 false) #15
  %158 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %144, i64 -4
  %159 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %145, i64 -4
  %160 = bitcast %struct.mmsghdr* %158 to i8*
  %161 = bitcast %struct.mmsghdr* %159 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %160, i8* align 8 %161, i64 64, i1 false) #15
  %162 = icmp eq %struct.mmsghdr* %159, %110
  br i1 %162, label %163, label %143

163:                                              ; preds = %143, %136
  %164 = phi %struct.mmsghdr* [ %137, %136 ], [ %158, %143 ]
  %165 = ptrtoint %struct.mmsghdr* %164 to i64
  %166 = load i64, i64* %34, align 8
  br label %167

167:                                              ; preds = %163, %141
  %168 = phi i64 [ %113, %141 ], [ %165, %163 ]
  %169 = phi i64 [ %142, %141 ], [ %166, %163 ]
  store i64 %168, i64* %34, align 8
  store i64 %113, i64* %36, align 8
  store i64 %115, i64* %33, align 8
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %182, label %171

171:                                              ; preds = %167
  %172 = inttoptr i64 %169 to %struct.mmsghdr*
  %173 = load %"struct.base::StackAllocator<mmsghdr, 17>::Source"*, %"struct.base::StackAllocator<mmsghdr, 17>::Source"** %85, align 8
  %174 = icmp ne %"struct.base::StackAllocator<mmsghdr, 17>::Source"* %173, null
  %175 = bitcast %"struct.base::StackAllocator<mmsghdr, 17>::Source"* %173 to %struct.mmsghdr*
  %176 = icmp eq %struct.mmsghdr* %172, %175
  %177 = and i1 %174, %176
  br i1 %177, label %178, label %180

178:                                              ; preds = %171
  %179 = getelementptr inbounds %"struct.base::StackAllocator<mmsghdr, 17>::Source", %"struct.base::StackAllocator<mmsghdr, 17>::Source"* %173, i64 0, i32 1
  store i8 0, i8* %179, align 8
  br label %182

180:                                              ; preds = %171
  %181 = inttoptr i64 %169 to i8*
  call void @_ZdlPv(i8* %181) #14
  br label %182

182:                                              ; preds = %72, %167, %178, %180
  %183 = load i64, i64* %38, align 8
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %220, label %185

185:                                              ; preds = %182
  %186 = bitcast %struct.mmsghdr* %8 to i8*
  %187 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %8, i64 0, i32 0, i32 0
  %188 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %8, i64 0, i32 0, i32 1
  %189 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %8, i64 0, i32 0, i32 2
  %190 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %191 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %8, i64 0, i32 0, i32 3
  %192 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %8, i64 0, i32 0, i32 4
  %193 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %8, i64 0, i32 1
  %194 = bitcast i8** %192 to i8*
  br label %232

195:                                              ; preds = %68, %212
  %196 = phi %"struct.std::__1::__list_node_base"* [ %66, %68 ], [ %216, %212 ]
  %197 = phi i64 [ %65, %68 ], [ %215, %212 ]
  %198 = inttoptr i64 %197 to %"struct.std::__1::__list_node"*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #15
  %199 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %198, i64 0, i32 1, i32 0, i32 0, i32 0
  %200 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %199, align 8
  %201 = call i8* @_ZNK3net14DatagramBuffer4dataEv(%"class.net::DatagramBuffer"* %200) #15
  store i8* %201, i8** %70, align 8
  %202 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %199, align 8
  %203 = call i64 @_ZNK3net14DatagramBuffer6lengthEv(%"class.net::DatagramBuffer"* %202) #15
  store i64 %203, i64* %71, align 8
  %204 = load %struct.iovec*, %struct.iovec** %21, align 8
  %205 = load %struct.iovec*, %struct.iovec** %18, align 8
  %206 = icmp ult %struct.iovec* %204, %205
  br i1 %206, label %207, label %211

207:                                              ; preds = %195
  %208 = bitcast %struct.iovec* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %208, i8* nonnull align 8 %69, i64 16, i1 false) #15
  %209 = getelementptr inbounds %struct.iovec, %struct.iovec* %204, i64 1
  %210 = ptrtoint %struct.iovec* %209 to i64
  store i64 %210, i64* %22, align 8
  br label %212

211:                                              ; preds = %195
  call void @_ZNSt3__16vectorI5iovecN4base14StackAllocatorIS1_Lm17EEEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector.70"* %14, %struct.iovec* nonnull dereferenceable(16) %7) #15
  br label %212

212:                                              ; preds = %207, %211
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #15
  %213 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %214 = bitcast %"struct.std::__1::__list_node_base"** %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = inttoptr i64 %215 to %"struct.std::__1::__list_node_base"*
  %217 = icmp eq %"struct.std::__1::__list_node_base"* %63, %216
  br i1 %217, label %72, label %195

218:                                              ; preds = %244
  %219 = trunc i64 %246 to i32
  br label %220

220:                                              ; preds = %218, %182
  %221 = phi i32 [ 0, %182 ], [ %219, %218 ]
  %222 = getelementptr inbounds %"class.base::StackVector.75", %"class.base::StackVector.75"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %223 = bitcast %"class.net::UDPSocketPosixSender"* %1 to i32 (%"class.net::UDPSocketPosixSender"*, i32, %struct.mmsghdr*, i32, i32)***
  %224 = load %struct.mmsghdr*, %struct.mmsghdr** %222, align 8
  %225 = load i32 (%"class.net::UDPSocketPosixSender"*, i32, %struct.mmsghdr*, i32, i32)**, i32 (%"class.net::UDPSocketPosixSender"*, i32, %struct.mmsghdr*, i32, i32)*** %223, align 8
  %226 = getelementptr inbounds i32 (%"class.net::UDPSocketPosixSender"*, i32, %struct.mmsghdr*, i32, i32)*, i32 (%"class.net::UDPSocketPosixSender"*, i32, %struct.mmsghdr*, i32, i32)** %225, i64 3
  %227 = load i32 (%"class.net::UDPSocketPosixSender"*, i32, %struct.mmsghdr*, i32, i32)*, i32 (%"class.net::UDPSocketPosixSender"*, i32, %struct.mmsghdr*, i32, i32)** %226, align 8
  %228 = call i32 %227(%"class.net::UDPSocketPosixSender"* %1, i32 %2, %struct.mmsghdr* %224, i32 %221, i32 0) #15
  %229 = icmp eq i32 %228, -1
  br i1 %229, label %230, label %261

230:                                              ; preds = %220
  %231 = tail call i32* @__errno_location() #16
  br label %248

232:                                              ; preds = %185, %244
  %233 = phi i64 [ 0, %185 ], [ %245, %244 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %186) #15
  store i8* null, i8** %187, align 8
  store i32 0, i32* %188, align 8
  %234 = load %struct.iovec*, %struct.iovec** %190, align 8
  %235 = getelementptr inbounds %struct.iovec, %struct.iovec* %234, i64 %233
  store %struct.iovec* %235, %struct.iovec** %189, align 8
  store i64 1, i64* %191, align 8
  store i32 0, i32* %193, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %194, i8 0, i64 20, i1 false)
  %236 = load %struct.mmsghdr*, %struct.mmsghdr** %35, align 8
  %237 = load %struct.mmsghdr*, %struct.mmsghdr** %32, align 8
  %238 = icmp ult %struct.mmsghdr* %236, %237
  br i1 %238, label %239, label %243

239:                                              ; preds = %232
  %240 = bitcast %struct.mmsghdr* %236 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %240, i8* nonnull align 8 %186, i64 64, i1 false) #15
  %241 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %236, i64 1
  %242 = ptrtoint %struct.mmsghdr* %241 to i64
  store i64 %242, i64* %36, align 8
  br label %244

243:                                              ; preds = %232
  call void @_ZNSt3__16vectorI7mmsghdrN4base14StackAllocatorIS1_Lm17EEEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector.80"* %28, %struct.mmsghdr* nonnull dereferenceable(64) %8) #15
  br label %244

244:                                              ; preds = %239, %243
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %186) #15
  %245 = add nuw i64 %233, 1
  %246 = load i64, i64* %38, align 8
  %247 = icmp ult i64 %245, %246
  br i1 %247, label %232, label %218

248:                                              ; preds = %230, %252
  %249 = phi i32 [ %259, %252 ], [ %228, %230 ]
  %250 = load i32, i32* %231, align 4
  %251 = icmp eq i32 %250, 4
  br i1 %251, label %252, label %261

252:                                              ; preds = %248
  %253 = load i64, i64* %38, align 8
  %254 = load %struct.mmsghdr*, %struct.mmsghdr** %222, align 8
  %255 = trunc i64 %253 to i32
  %256 = load i32 (%"class.net::UDPSocketPosixSender"*, i32, %struct.mmsghdr*, i32, i32)**, i32 (%"class.net::UDPSocketPosixSender"*, i32, %struct.mmsghdr*, i32, i32)*** %223, align 8
  %257 = getelementptr inbounds i32 (%"class.net::UDPSocketPosixSender"*, i32, %struct.mmsghdr*, i32, i32)*, i32 (%"class.net::UDPSocketPosixSender"*, i32, %struct.mmsghdr*, i32, i32)** %256, i64 3
  %258 = load i32 (%"class.net::UDPSocketPosixSender"*, i32, %struct.mmsghdr*, i32, i32)*, i32 (%"class.net::UDPSocketPosixSender"*, i32, %struct.mmsghdr*, i32, i32)** %257, align 8
  %259 = call i32 %258(%"class.net::UDPSocketPosixSender"* %1, i32 %2, %struct.mmsghdr* %254, i32 %255, i32 0) #15
  %260 = icmp eq i32 %259, -1
  br i1 %260, label %248, label %261

261:                                              ; preds = %248, %252, %220
  %262 = phi i32 [ %228, %220 ], [ %249, %248 ], [ %259, %252 ]
  %263 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 0
  %264 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 1
  %265 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %266 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %267 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %9, i64 0, i32 0, i32 0
  %268 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %9, i64 0, i32 0, i32 0, i32 0
  %269 = bitcast %"struct.net::SendResult"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %269, i8 -86, i64 32, i1 false)
  store %"struct.std::__1::__list_node_base"* %267, %"struct.std::__1::__list_node_base"** %268, align 8
  %270 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %9, i64 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %267, %"struct.std::__1::__list_node_base"** %270, align 8
  %271 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %271, align 8
  %272 = load i64, i64* %38, align 8
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %296, label %274

274:                                              ; preds = %261
  %275 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %276 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 0
  %277 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %276, align 8
  %278 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %277, i64 0, i32 1
  %279 = bitcast %"struct.std::__1::__list_node_base"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %275, i64 0, i32 0
  %282 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %281, align 8
  %283 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %282, i64 0, i32 1
  %284 = bitcast %"struct.std::__1::__list_node_base"** %283 to i64*
  store i64 %280, i64* %284, align 8
  %285 = bitcast %"struct.std::__1::__list_node_base"* %275 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = bitcast %"struct.std::__1::__list_node_base"** %278 to i64**
  %288 = load i64*, i64** %287, align 8
  store i64 %286, i64* %288, align 8
  %289 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %268, align 8
  %290 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %289, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %275, %"struct.std::__1::__list_node_base"** %290, align 8
  %291 = ptrtoint %"struct.std::__1::__list_node_base"* %289 to i64
  store i64 %291, i64* %285, align 8
  store %"struct.std::__1::__list_node_base"* %277, %"struct.std::__1::__list_node_base"** %268, align 8
  store %"struct.std::__1::__list_node_base"* %267, %"struct.std::__1::__list_node_base"** %278, align 8
  %292 = load i64, i64* %38, align 8
  %293 = load i64, i64* %271, align 8
  %294 = add i64 %293, %292
  store i64 %294, i64* %271, align 8
  store i64 0, i64* %38, align 8
  %295 = icmp eq i64 %294, 0
  br label %296

296:                                              ; preds = %261, %274
  %297 = phi %"struct.std::__1::__list_node_base"* [ %267, %261 ], [ %277, %274 ]
  %298 = phi i1 [ true, %261 ], [ %295, %274 ]
  store i32 0, i32* %263, align 8
  store i32 0, i32* %264, align 4
  %299 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 2
  %300 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %299, i64 0, i32 0, i32 0
  %301 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %299, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %300, %"struct.std::__1::__list_node_base"** %301, align 8
  store %"struct.std::__1::__list_node_base"* %300, %"struct.std::__1::__list_node_base"** %265, align 8
  store i64 0, i64* %266, align 8
  br i1 %298, label %322, label %302

302:                                              ; preds = %296
  %303 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %270, align 8
  %304 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %297, i64 0, i32 1
  %305 = bitcast %"struct.std::__1::__list_node_base"** %304 to i64*
  %306 = load i64, i64* %305, align 8
  %307 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %303, i64 0, i32 0
  %308 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %307, align 8
  %309 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %308, i64 0, i32 1
  %310 = bitcast %"struct.std::__1::__list_node_base"** %309 to i64*
  store i64 %306, i64* %310, align 8
  %311 = bitcast %"struct.std::__1::__list_node_base"* %303 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = bitcast %"struct.std::__1::__list_node_base"** %304 to i64**
  %314 = load i64*, i64** %313, align 8
  store i64 %312, i64* %314, align 8
  %315 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %301, align 8
  %316 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %315, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %303, %"struct.std::__1::__list_node_base"** %316, align 8
  %317 = bitcast %"class.std::__1::list"* %299 to i64*
  %318 = load i64, i64* %317, align 8
  store i64 %318, i64* %311, align 8
  store %"struct.std::__1::__list_node_base"* %297, %"struct.std::__1::__list_node_base"** %301, align 8
  store %"struct.std::__1::__list_node_base"* %300, %"struct.std::__1::__list_node_base"** %304, align 8
  %319 = load i64, i64* %271, align 8
  %320 = load i64, i64* %266, align 8
  %321 = add i64 %320, %319
  store i64 %321, i64* %266, align 8
  store i64 0, i64* %271, align 8
  br label %322

322:                                              ; preds = %302, %296
  %323 = icmp slt i32 %262, 0
  br i1 %323, label %324, label %328

324:                                              ; preds = %322
  %325 = tail call i32* @__errno_location() #16
  %326 = load i32, i32* %325, align 4
  %327 = call i32 @_ZN3net14MapSystemErrorEi(i32 %326) #15
  store i32 %327, i32* %263, align 8
  br label %329

328:                                              ; preds = %322
  store i32 %262, i32* %264, align 4
  br label %329

329:                                              ; preds = %324, %328
  %330 = load %struct.mmsghdr*, %struct.mmsghdr** %222, align 8
  %331 = icmp eq %struct.mmsghdr* %330, null
  br i1 %331, label %344, label %332

332:                                              ; preds = %329
  %333 = ptrtoint %struct.mmsghdr* %330 to i64
  store i64 %333, i64* %36, align 8
  %334 = getelementptr inbounds %"class.base::StackVector.75", %"class.base::StackVector.75"* %6, i64 0, i32 0, i32 2, i32 0, i32 2, i32 1, i32 0, i32 0
  %335 = load %"struct.base::StackAllocator<mmsghdr, 17>::Source"*, %"struct.base::StackAllocator<mmsghdr, 17>::Source"** %334, align 8
  %336 = icmp ne %"struct.base::StackAllocator<mmsghdr, 17>::Source"* %335, null
  %337 = bitcast %"struct.base::StackAllocator<mmsghdr, 17>::Source"* %335 to %struct.mmsghdr*
  %338 = icmp eq %struct.mmsghdr* %330, %337
  %339 = and i1 %336, %338
  br i1 %339, label %340, label %342

340:                                              ; preds = %332
  %341 = getelementptr inbounds %"struct.base::StackAllocator<mmsghdr, 17>::Source", %"struct.base::StackAllocator<mmsghdr, 17>::Source"* %335, i64 0, i32 1
  store i8 0, i8* %341, align 8
  br label %344

342:                                              ; preds = %332
  %343 = bitcast %struct.mmsghdr* %330 to i8*
  call void @_ZdlPv(i8* %343) #14
  br label %344

344:                                              ; preds = %329, %340, %342
  call void @llvm.lifetime.end.p0i8(i64 1136, i8* nonnull %24) #15
  %345 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %346 = load %struct.iovec*, %struct.iovec** %345, align 8
  %347 = icmp eq %struct.iovec* %346, null
  br i1 %347, label %360, label %348

348:                                              ; preds = %344
  %349 = ptrtoint %struct.iovec* %346 to i64
  store i64 %349, i64* %22, align 8
  %350 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %5, i64 0, i32 0, i32 2, i32 0, i32 2, i32 1, i32 0, i32 0
  %351 = load %"struct.base::StackAllocator<iovec, 17>::Source"*, %"struct.base::StackAllocator<iovec, 17>::Source"** %350, align 8
  %352 = icmp ne %"struct.base::StackAllocator<iovec, 17>::Source"* %351, null
  %353 = bitcast %"struct.base::StackAllocator<iovec, 17>::Source"* %351 to %struct.iovec*
  %354 = icmp eq %struct.iovec* %346, %353
  %355 = and i1 %352, %354
  br i1 %355, label %356, label %358

356:                                              ; preds = %348
  %357 = getelementptr inbounds %"struct.base::StackAllocator<iovec, 17>::Source", %"struct.base::StackAllocator<iovec, 17>::Source"* %351, i64 0, i32 1
  store i8 0, i8* %357, align 8
  br label %360

358:                                              ; preds = %348
  %359 = bitcast %struct.iovec* %346 to i8*
  call void @_ZdlPv(i8* %359) #14
  br label %360

360:                                              ; preds = %344, %356, %358
  call void @llvm.lifetime.end.p0i8(i64 320, i8* nonnull %10) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20UDPSocketPosixSender11SendBuffersEiNSt3__14listINS1_10unique_ptrINS_14DatagramBufferENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE(%"struct.net::SendResult"* noalias sret, %"class.net::UDPSocketPosixSender"*, i32, %"class.std::__1::list"*) #0 align 2 {
  %5 = alloca %"class.std::__1::list", align 8
  %6 = alloca %"class.std::__1::list", align 8
  %7 = getelementptr inbounds %"class.net::UDPSocketPosixSender", %"class.net::UDPSocketPosixSender"* %1, i64 0, i32 2
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %113, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"struct.net::SendResult"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 -86, i64 32, i1 false)
  store %"struct.std::__1::__list_node_base"* %15, %"struct.std::__1::__list_node_base"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %15, %"struct.std::__1::__list_node_base"** %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %45, label %23

23:                                               ; preds = %10
  %24 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 1
  %25 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 0
  %27 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %27, i64 0, i32 1
  %29 = bitcast %"struct.std::__1::__list_node_base"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 0, i32 0
  %32 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %32, i64 0, i32 1
  %34 = bitcast %"struct.std::__1::__list_node_base"** %33 to i64*
  store i64 %30, i64* %34, align 8
  %35 = bitcast %"struct.std::__1::__list_node_base"* %25 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"struct.std::__1::__list_node_base"** %28 to i64**
  %38 = load i64*, i64** %37, align 8
  store i64 %36, i64* %38, align 8
  %39 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %16, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %39, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %25, %"struct.std::__1::__list_node_base"** %40, align 8
  %41 = ptrtoint %"struct.std::__1::__list_node_base"* %39 to i64
  store i64 %41, i64* %35, align 8
  store %"struct.std::__1::__list_node_base"* %27, %"struct.std::__1::__list_node_base"** %16, align 8
  store %"struct.std::__1::__list_node_base"* %15, %"struct.std::__1::__list_node_base"** %28, align 8
  %42 = load i64, i64* %20, align 8
  %43 = load i64, i64* %19, align 8
  %44 = add i64 %43, %42
  store i64 %44, i64* %19, align 8
  store i64 0, i64* %20, align 8
  br label %45

45:                                               ; preds = %10, %23
  call void @_ZNK3net20UDPSocketPosixSender23InternalSendmmsgBuffersEiNSt3__14listINS1_10unique_ptrINS_14DatagramBufferENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE(%"struct.net::SendResult"* sret %0, %"class.net::UDPSocketPosixSender"* %1, i32 %2, %"class.std::__1::list"* nonnull %5)
  %46 = load i64, i64* %19, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %76, label %48

48:                                               ; preds = %45
  %49 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %18, align 8
  %50 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %16, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %50, i64 0, i32 1
  %52 = bitcast %"struct.std::__1::__list_node_base"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %49, i64 0, i32 0
  %55 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %54, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %55, i64 0, i32 1
  %57 = bitcast %"struct.std::__1::__list_node_base"** %56 to i64*
  store i64 %53, i64* %57, align 8
  %58 = bitcast %"struct.std::__1::__list_node_base"* %49 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"struct.std::__1::__list_node_base"** %51 to i64**
  %61 = load i64*, i64** %60, align 8
  store i64 %59, i64* %61, align 8
  store i64 0, i64* %19, align 8
  %62 = icmp eq %"struct.std::__1::__list_node_base"* %49, %15
  br i1 %62, label %76, label %63

63:                                               ; preds = %48, %73
  %64 = phi %"struct.std::__1::__list_node_base"* [ %66, %73 ], [ %49, %48 ]
  %65 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %64, i64 0, i32 1
  %66 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %65, align 8
  %67 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %64, i64 1
  %68 = bitcast %"struct.std::__1::__list_node_base"* %67 to %"class.net::DatagramBuffer"**
  %69 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %68, align 8
  store %"class.net::DatagramBuffer"* null, %"class.net::DatagramBuffer"** %68, align 8
  %70 = icmp eq %"class.net::DatagramBuffer"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %63
  call void @_ZN3net14DatagramBufferD1Ev(%"class.net::DatagramBuffer"* nonnull %69) #15
  %72 = bitcast %"class.net::DatagramBuffer"* %69 to i8*
  call void @_ZdlPv(i8* %72) #14
  br label %73

73:                                               ; preds = %71, %63
  %74 = bitcast %"struct.std::__1::__list_node_base"* %64 to i8*
  call void @_ZdlPv(i8* %74) #14
  %75 = icmp eq %"struct.std::__1::__list_node_base"* %66, %15
  br i1 %75, label %76, label %63

76:                                               ; preds = %73, %45, %48
  %77 = load i32, i32* %11, align 8
  %78 = icmp eq i32 %77, -11
  br i1 %78, label %79, label %174, !prof !17

79:                                               ; preds = %76
  store i8 0, i8* %7, align 4
  call void @_ZNSt3__14listINS_10unique_ptrIN3net14DatagramBufferENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE13__move_assignERS9_NS_17integral_constantIbLb1EEE(%"class.std::__1::list"* %3, %"class.std::__1::list"* dereferenceable(24) %12) #15
  %80 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %0, i64 0, i32 2, i32 0
  %81 = load i64, i64* %14, align 8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %113, label %83

83:                                               ; preds = %79
  %84 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %13, align 8
  %85 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %80, i64 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %80, i64 0, i32 0, i32 0
  %87 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %86, align 8
  %88 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %87, i64 0, i32 1
  %89 = bitcast %"struct.std::__1::__list_node_base"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %84, i64 0, i32 0
  %92 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %91, align 8
  %93 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %92, i64 0, i32 1
  %94 = bitcast %"struct.std::__1::__list_node_base"** %93 to i64*
  store i64 %90, i64* %94, align 8
  %95 = bitcast %"struct.std::__1::__list_node_base"* %84 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"struct.std::__1::__list_node_base"** %88 to i64**
  %98 = load i64*, i64** %97, align 8
  store i64 %96, i64* %98, align 8
  store i64 0, i64* %14, align 8
  %99 = icmp eq %"struct.std::__1::__list_node_base"* %84, %85
  br i1 %99, label %113, label %100

100:                                              ; preds = %83, %110
  %101 = phi %"struct.std::__1::__list_node_base"* [ %103, %110 ], [ %84, %83 ]
  %102 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %101, i64 0, i32 1
  %103 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %102, align 8
  %104 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %101, i64 1
  %105 = bitcast %"struct.std::__1::__list_node_base"* %104 to %"class.net::DatagramBuffer"**
  %106 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %105, align 8
  store %"class.net::DatagramBuffer"* null, %"class.net::DatagramBuffer"** %105, align 8
  %107 = icmp eq %"class.net::DatagramBuffer"* %106, null
  br i1 %107, label %110, label %108

108:                                              ; preds = %100
  call void @_ZN3net14DatagramBufferD1Ev(%"class.net::DatagramBuffer"* nonnull %106) #15
  %109 = bitcast %"class.net::DatagramBuffer"* %106 to i8*
  call void @_ZdlPv(i8* %109) #14
  br label %110

110:                                              ; preds = %108, %100
  %111 = bitcast %"struct.std::__1::__list_node_base"* %101 to i8*
  call void @_ZdlPv(i8* %111) #14
  %112 = icmp eq %"struct.std::__1::__list_node_base"* %103, %85
  br i1 %112, label %113, label %100

113:                                              ; preds = %110, %83, %79, %4
  %114 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %6, i64 0, i32 0, i32 0
  %115 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %6, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %114, %"struct.std::__1::__list_node_base"** %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %6, i64 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %114, %"struct.std::__1::__list_node_base"** %116, align 8
  %117 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %117, align 8
  %118 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %119 = load i64, i64* %118, align 8
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %143, label %121

121:                                              ; preds = %113
  %122 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 1
  %123 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %122, align 8
  %124 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 0
  %125 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %124, align 8
  %126 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %125, i64 0, i32 1
  %127 = bitcast %"struct.std::__1::__list_node_base"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %123, i64 0, i32 0
  %130 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %129, align 8
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %130, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  store i64 %128, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__list_node_base"* %123 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"struct.std::__1::__list_node_base"** %126 to i64**
  %136 = load i64*, i64** %135, align 8
  store i64 %134, i64* %136, align 8
  %137 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %115, align 8
  %138 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %137, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %123, %"struct.std::__1::__list_node_base"** %138, align 8
  %139 = ptrtoint %"struct.std::__1::__list_node_base"* %137 to i64
  store i64 %139, i64* %133, align 8
  store %"struct.std::__1::__list_node_base"* %125, %"struct.std::__1::__list_node_base"** %115, align 8
  store %"struct.std::__1::__list_node_base"* %114, %"struct.std::__1::__list_node_base"** %126, align 8
  %140 = load i64, i64* %118, align 8
  %141 = load i64, i64* %117, align 8
  %142 = add i64 %141, %140
  store i64 %142, i64* %117, align 8
  store i64 0, i64* %118, align 8
  br label %143

143:                                              ; preds = %113, %121
  call void @_ZNK3net20UDPSocketPosixSender19InternalSendBuffersEiNSt3__14listINS1_10unique_ptrINS_14DatagramBufferENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE(%"struct.net::SendResult"* sret %0, %"class.net::UDPSocketPosixSender"* %1, i32 %2, %"class.std::__1::list"* nonnull %6)
  %144 = load i64, i64* %117, align 8
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %174, label %146

146:                                              ; preds = %143
  %147 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %116, align 8
  %148 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %115, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %148, i64 0, i32 1
  %150 = bitcast %"struct.std::__1::__list_node_base"** %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %147, i64 0, i32 0
  %153 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %152, align 8
  %154 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %153, i64 0, i32 1
  %155 = bitcast %"struct.std::__1::__list_node_base"** %154 to i64*
  store i64 %151, i64* %155, align 8
  %156 = bitcast %"struct.std::__1::__list_node_base"* %147 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"struct.std::__1::__list_node_base"** %149 to i64**
  %159 = load i64*, i64** %158, align 8
  store i64 %157, i64* %159, align 8
  store i64 0, i64* %117, align 8
  %160 = icmp eq %"struct.std::__1::__list_node_base"* %147, %114
  br i1 %160, label %174, label %161

161:                                              ; preds = %146, %171
  %162 = phi %"struct.std::__1::__list_node_base"* [ %164, %171 ], [ %147, %146 ]
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %162, i64 0, i32 1
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %162, i64 1
  %166 = bitcast %"struct.std::__1::__list_node_base"* %165 to %"class.net::DatagramBuffer"**
  %167 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %166, align 8
  store %"class.net::DatagramBuffer"* null, %"class.net::DatagramBuffer"** %166, align 8
  %168 = icmp eq %"class.net::DatagramBuffer"* %167, null
  br i1 %168, label %171, label %169

169:                                              ; preds = %161
  call void @_ZN3net14DatagramBufferD1Ev(%"class.net::DatagramBuffer"* nonnull %167) #15
  %170 = bitcast %"class.net::DatagramBuffer"* %167 to i8*
  call void @_ZdlPv(i8* %170) #14
  br label %171

171:                                              ; preds = %169, %161
  %172 = bitcast %"struct.std::__1::__list_node_base"* %162 to i8*
  call void @_ZdlPv(i8* %172) #14
  %173 = icmp eq %"struct.std::__1::__list_node_base"* %164, %114
  br i1 %173, label %174, label %161

174:                                              ; preds = %171, %146, %143, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3net20UDPSocketPosixSender4SendEiPKvmi(%"class.net::UDPSocketPosixSender"* nocapture readnone, i32, i8*, i64, i32) unnamed_addr #0 align 2 {
  %6 = tail call i64 @send(i32 %1, i8* %2, i64 %3, i32 %4) #15
  ret i64 %6
}

declare i64 @send(i32, i8*, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net20UDPSocketPosixSender8SendmmsgEiP7mmsghdrjj(%"class.net::UDPSocketPosixSender"* nocapture readnone, i32, %struct.mmsghdr*, i32, i32) unnamed_addr #0 align 2 {
  %6 = tail call i32 @sendmmsg(i32 %1, %struct.mmsghdr* %2, i32 %3, i32 %4) #15
  ret i32 %6
}

declare i32 @sendmmsg(i32, %struct.mmsghdr*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix10WriteAsyncEPKcmN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::UDPSocketPosix"*, i8*, i64, %"class.base::OnceCallback"* nocapture, %"struct.net::NetworkTrafficAnnotationTag"* nocapture readnone dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 28
  %8 = load i32, i32* %7, align 4
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %7, align 4
  %10 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.net::DatagramBufferPool"*, %"class.net::DatagramBufferPool"** %10, align 8
  %12 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 4
  tail call void @_ZN3net18DatagramBufferPool7EnqueueEPKcmPNSt3__14listINS3_10unique_ptrINS_14DatagramBufferENS3_14default_deleteIS6_EEEENS3_9allocatorIS9_EEEE(%"class.net::DatagramBufferPool"* %11, i8* %1, i64 %2, %"class.std::__1::list"* %12) #15
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %17 = call i32 @_ZN3net14UDPSocketPosix18InternalWriteAsyncEN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::UDPSocketPosix"* %0, %"class.base::OnceCallback"* nonnull %6, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4) undef)
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #15
  ret i32 %17
}

declare void @_ZN3net18DatagramBufferPool7EnqueueEPKcmPNSt3__14listINS3_10unique_ptrINS_14DatagramBufferENS3_14default_deleteIS6_EEEENS3_9allocatorIS9_EEEE(%"class.net::DatagramBufferPool"*, i8*, i64, %"class.std::__1::list"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix18InternalWriteAsyncEN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::UDPSocketPosix"*, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"* nocapture readnone dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RepeatingCallback", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 37, i32 0
  %8 = getelementptr inbounds %"class.base::internal::CallbackBase", %"class.base::internal::CallbackBase"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 1231, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0)) #15
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  br label %14

14:                                               ; preds = %3, %11
  %15 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 25
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  store i32 0, i32* %15, align 4
  br label %94

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 21
  %21 = load i8, i8* %20, align 1, !range !2
  %22 = icmp eq i8 %21, 0
  %23 = select i1 %22, i64 1, i64 8
  %24 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp ult i64 %25, %23
  br i1 %26, label %60, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %"class.net::UDPSocketPosix::WriteAsyncWatcher"*, %"class.net::UDPSocketPosix::WriteAsyncWatcher"** %28, align 8
  %30 = getelementptr inbounds %"class.net::UDPSocketPosix::WriteAsyncWatcher", %"class.net::UDPSocketPosix::WriteAsyncWatcher"* %29, i64 0, i32 2
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp ne i8 %31, 0
  %33 = icmp eq i64 %25, 0
  %34 = or i1 %32, %33
  br i1 %34, label %56, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 27
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 26, i32 0
  call void @_ZN4base8internal9TimerBase5ResetEv(%"class.base::internal::TimerBase"* %40) #15
  %41 = load i64, i64* %24, align 8
  br label %42

42:                                               ; preds = %39, %35
  %43 = phi i64 [ %25, %35 ], [ %41, %39 ]
  %44 = trunc i64 %43 to i32
  %45 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 22
  %46 = load i8, i8* %45, align 2, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %54, label %48

48:                                               ; preds = %42
  %49 = icmp slt i32 %44, 3
  br i1 %49, label %50, label %55

50:                                               ; preds = %48
  %51 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 28
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %44
  br i1 %53, label %54, label %55

54:                                               ; preds = %50, %42
  call void @_ZN3net14UDPSocketPosix16LocalSendBuffersEv(%"class.net::UDPSocketPosix"* %0) #15
  br label %56

55:                                               ; preds = %50, %48
  call void @_ZN3net14UDPSocketPosix15PostSendBuffersEv(%"class.net::UDPSocketPosix"* %0) #15
  br label %56

56:                                               ; preds = %27, %54, %55
  %57 = load i32, i32* %15, align 4
  %58 = icmp slt i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  store i32 0, i32* %15, align 4
  br label %94

60:                                               ; preds = %19, %56
  %61 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 27
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %81

64:                                               ; preds = %60
  store i8 1, i8* %61, align 8
  %65 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 26
  %66 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %66) #15
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 1250) #15
  %67 = bitcast %"class.base::RepeatingCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67)
  %68 = ptrtoint %"class.net::UDPSocketPosix"* %0 to i64
  %69 = call i8* @_Znwm(i64 56) #14, !noalias !18
  %70 = bitcast i8* %69 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %70, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14UDPSocketPosixEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14UDPSocketPosixEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #15, !noalias !18
  %71 = getelementptr inbounds i8, i8* %69, i64 32
  %72 = bitcast i8* %71 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::UDPSocketPosix"*)* @_ZN3net14UDPSocketPosix22OnWriteAsyncTimerFiredEv to i64), i64 0>, <2 x i64>* %72, align 8, !noalias !18
  %73 = getelementptr inbounds i8, i8* %69, i64 48
  %74 = bitcast i8* %73 to i64*
  store i64 %68, i64* %74, align 8, !noalias !18
  %75 = bitcast %"class.base::RepeatingCallback"* %4 to i8**
  store i8* %69, i8** %75, align 8, !alias.scope !18
  %76 = bitcast %"class.base::RepeatingTimer"* %65 to void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)***
  %77 = load void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)**, void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)*, void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)** %77, i64 7
  %79 = load void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)*, void (%"class.base::RepeatingTimer"*, %"class.base::Location"*, i64, %"class.base::RepeatingCallback"*)** %78, align 8
  call void %79(%"class.base::RepeatingTimer"* %65, %"class.base::Location"* nonnull dereferenceable(32) %6, i64 1000, %"class.base::RepeatingCallback"* nonnull %4) #15
  %80 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %80) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %66) #15
  br label %81

81:                                               ; preds = %60, %64
  %82 = load i8, i8* %20, align 1, !range !2
  %83 = icmp eq i8 %82, 0
  %84 = select i1 %83, i32 1, i32 16
  %85 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 28
  %86 = load i32, i32* %85, align 4
  %87 = icmp slt i32 %86, %84
  br i1 %87, label %91, label %88

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0
  %90 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %7, %"class.base::internal::CallbackBase"* dereferenceable(8) %89) #15
  br label %94

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 24
  %93 = load i32, i32* %92, align 8
  store i32 0, i32* %92, align 8
  br label %94

94:                                               ; preds = %59, %91, %88, %18
  %95 = phi i32 [ %16, %18 ], [ %57, %59 ], [ -1, %88 ], [ %93, %91 ]
  ret i32 %95
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix10WriteAsyncENSt3__14listINS1_10unique_ptrINS_14DatagramBufferENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::UDPSocketPosix"*, %"class.std::__1::list"* nocapture, %"class.base::OnceCallback"* nocapture, %"struct.net::NetworkTrafficAnnotationTag"* nocapture readnone dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 28
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, %8
  store i32 %11, i32* %9, align 4
  %12 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 4
  %13 = load i64, i64* %6, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %41, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %12, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %1, i64 0, i32 0, i32 0, i32 1
  %18 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %1, i64 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %20, i64 0, i32 1
  %22 = bitcast %"struct.std::__1::__list_node_base"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %18, i64 0, i32 0
  %25 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 0, i32 1
  %27 = bitcast %"struct.std::__1::__list_node_base"** %26 to i64*
  store i64 %23, i64* %27, align 8
  %28 = bitcast %"struct.std::__1::__list_node_base"* %18 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"struct.std::__1::__list_node_base"** %21 to i64**
  %31 = load i64*, i64** %30, align 8
  store i64 %29, i64* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %12, i64 0, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %33, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %18, %"struct.std::__1::__list_node_base"** %34, align 8
  %35 = bitcast %"class.std::__1::list"* %12 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %28, align 8
  store %"struct.std::__1::__list_node_base"* %20, %"struct.std::__1::__list_node_base"** %32, align 8
  store %"struct.std::__1::__list_node_base"* %16, %"struct.std::__1::__list_node_base"** %21, align 8
  %37 = load i64, i64* %6, align 8
  %38 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, %37
  store i64 %40, i64* %38, align 8
  store i64 0, i64* %6, align 8
  br label %41

41:                                               ; preds = %4, %15
  %42 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %44, i64* %45, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %42, align 8
  %46 = call i32 @_ZN3net14UDPSocketPosix18InternalWriteAsyncEN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::UDPSocketPosix"* %0, %"class.base::OnceCallback"* nonnull %5, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4) undef)
  %47 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %47) #15
  ret i32 %46
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix20ResetLastAsyncResultEv(%"class.net::UDPSocketPosix"* nocapture) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 25
  %3 = load i32, i32* %2, align 4
  store i32 0, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix12FlushPendingEv(%"class.net::UDPSocketPosix"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.net::UDPSocketPosix::WriteAsyncWatcher"*, %"class.net::UDPSocketPosix::WriteAsyncWatcher"** %2, align 8
  %4 = getelementptr inbounds %"class.net::UDPSocketPosix::WriteAsyncWatcher", %"class.net::UDPSocketPosix::WriteAsyncWatcher"* %3, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %32

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %32, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 27
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 26, i32 0
  tail call void @_ZN4base8internal9TimerBase5ResetEv(%"class.base::internal::TimerBase"* %16) #15
  %17 = load i64, i64* %8, align 8
  br label %18

18:                                               ; preds = %11, %15
  %19 = phi i64 [ %9, %11 ], [ %17, %15 ]
  %20 = trunc i64 %19 to i32
  %21 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 22
  %22 = load i8, i8* %21, align 2, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = icmp slt i32 %20, 3
  br i1 %25, label %26, label %31

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 28
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, %20
  br i1 %29, label %30, label %31

30:                                               ; preds = %18, %26
  tail call void @_ZN3net14UDPSocketPosix16LocalSendBuffersEv(%"class.net::UDPSocketPosix"* %0)
  br label %32

31:                                               ; preds = %26, %24
  tail call void @_ZN3net14UDPSocketPosix15PostSendBuffersEv(%"class.net::UDPSocketPosix"* %0)
  br label %32

32:                                               ; preds = %1, %30, %31, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix22OnWriteAsyncTimerFiredEv(%"class.net::UDPSocketPosix"*) #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 26, i32 0
  tail call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %6) #15
  %7 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 27
  store i8 0, i8* %7, align 8
  br label %39

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 25
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %39, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.net::UDPSocketPosix::WriteAsyncWatcher"*, %"class.net::UDPSocketPosix::WriteAsyncWatcher"** %13, align 8
  %15 = getelementptr inbounds %"class.net::UDPSocketPosix::WriteAsyncWatcher", %"class.net::UDPSocketPosix::WriteAsyncWatcher"* %14, i64 0, i32 2
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %39

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 27
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 26, i32 0
  tail call void @_ZN4base8internal9TimerBase5ResetEv(%"class.base::internal::TimerBase"* %23) #15
  %24 = load i64, i64* %2, align 8
  br label %25

25:                                               ; preds = %22, %18
  %26 = phi i64 [ %3, %18 ], [ %24, %22 ]
  %27 = trunc i64 %26 to i32
  %28 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 22
  %29 = load i8, i8* %28, align 2, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %25
  %32 = icmp slt i32 %27, 3
  br i1 %32, label %33, label %38

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 28
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, %27
  br i1 %36, label %37, label %38

37:                                               ; preds = %33, %25
  tail call void @_ZN3net14UDPSocketPosix16LocalSendBuffersEv(%"class.net::UDPSocketPosix"* %0) #15
  br label %39

38:                                               ; preds = %33, %31
  tail call void @_ZN3net14UDPSocketPosix15PostSendBuffersEv(%"class.net::UDPSocketPosix"* %0) #15
  br label %39

39:                                               ; preds = %38, %37, %12, %8, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix17ResetWrittenBytesEv(%"class.net::UDPSocketPosix"* nocapture) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 24
  %3 = load i32, i32* %2, align 8
  store i32 0, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix19GetUnwrittenBuffersEv(%"class.std::__1::list"* noalias sret, %"class.net::UDPSocketPosix"* nocapture) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %1, i64 0, i32 28
  %6 = load i32, i32* %5, align 4
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  store i32 %8, i32* %5, align 4
  %9 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %9, %"struct.std::__1::__list_node_base"** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %9, %"struct.std::__1::__list_node_base"** %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %12, align 8
  %13 = icmp eq i64 %4, 0
  br i1 %13, label %37, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %1, i64 0, i32 4, i32 0, i32 0, i32 1
  %16 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8
  %17 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %17, align 8
  %19 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %18, i64 0, i32 1
  %20 = bitcast %"struct.std::__1::__list_node_base"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 0
  %23 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %23, i64 0, i32 1
  %25 = bitcast %"struct.std::__1::__list_node_base"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"struct.std::__1::__list_node_base"* %16 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"struct.std::__1::__list_node_base"** %19 to i64**
  %29 = load i64*, i64** %28, align 8
  store i64 %27, i64* %29, align 8
  %30 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %30, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %16, %"struct.std::__1::__list_node_base"** %31, align 8
  %32 = bitcast %"class.std::__1::list"* %0 to i64*
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %26, align 8
  store %"struct.std::__1::__list_node_base"* %18, %"struct.std::__1::__list_node_base"** %10, align 8
  store %"struct.std::__1::__list_node_base"* %9, %"struct.std::__1::__list_node_base"** %19, align 8
  %34 = load i64, i64* %3, align 8
  %35 = load i64, i64* %12, align 8
  %36 = add i64 %35, %34
  store i64 %36, i64* %12, align 8
  store i64 0, i64* %3, align 8
  br label %37

37:                                               ; preds = %2, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix16LocalSendBuffersEv(%"class.net::UDPSocketPosix"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.net::SendResult", align 8
  %3 = alloca %"class.std::__1::list", align 8
  %4 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 2, i32 0
  %5 = load %"class.net::UDPSocketPosixSender"*, %"class.net::UDPSocketPosixSender"** %4, align 8
  %6 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %8, %"struct.std::__1::__list_node_base"** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %8, %"struct.std::__1::__list_node_base"** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %37, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %17 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %16, align 8
  %18 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %19, i64 0, i32 1
  %21 = bitcast %"struct.std::__1::__list_node_base"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 0, i32 0
  %24 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__list_node_base"** %25 to i64*
  store i64 %22, i64* %26, align 8
  %27 = bitcast %"struct.std::__1::__list_node_base"* %17 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"struct.std::__1::__list_node_base"** %20 to i64**
  %30 = load i64*, i64** %29, align 8
  store i64 %28, i64* %30, align 8
  %31 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %9, align 8
  %32 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %31, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %17, %"struct.std::__1::__list_node_base"** %32, align 8
  %33 = ptrtoint %"struct.std::__1::__list_node_base"* %31 to i64
  store i64 %33, i64* %27, align 8
  store %"struct.std::__1::__list_node_base"* %19, %"struct.std::__1::__list_node_base"** %9, align 8
  store %"struct.std::__1::__list_node_base"* %8, %"struct.std::__1::__list_node_base"** %20, align 8
  %34 = load i64, i64* %12, align 8
  %35 = load i64, i64* %11, align 8
  %36 = add i64 %35, %34
  store i64 %36, i64* %11, align 8
  store i64 0, i64* %12, align 8
  br label %37

37:                                               ; preds = %1, %15
  call void @_ZN3net20UDPSocketPosixSender11SendBuffersEiNSt3__14listINS1_10unique_ptrINS_14DatagramBufferENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE(%"struct.net::SendResult"* nonnull sret %2, %"class.net::UDPSocketPosixSender"* %5, i32 %7, %"class.std::__1::list"* nonnull %3)
  call void @_ZN3net14UDPSocketPosix14DidSendBuffersENS_10SendResultE(%"class.net::UDPSocketPosix"* %0, %"struct.net::SendResult"* nonnull %2)
  %38 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %2, i64 0, i32 2, i32 0
  %39 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %2, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %73, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  %44 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %38, i64 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %38, i64 0, i32 0, i32 0
  %47 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %46, align 8
  %48 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %47, i64 0, i32 1
  %49 = bitcast %"struct.std::__1::__list_node_base"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %44, i64 0, i32 0
  %52 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %52, i64 0, i32 1
  %54 = bitcast %"struct.std::__1::__list_node_base"** %53 to i64*
  store i64 %50, i64* %54, align 8
  %55 = bitcast %"struct.std::__1::__list_node_base"* %44 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.std::__1::__list_node_base"** %48 to i64**
  %58 = load i64*, i64** %57, align 8
  store i64 %56, i64* %58, align 8
  store i64 0, i64* %39, align 8
  %59 = icmp eq %"struct.std::__1::__list_node_base"* %44, %45
  br i1 %59, label %73, label %60

60:                                               ; preds = %42, %70
  %61 = phi %"struct.std::__1::__list_node_base"* [ %63, %70 ], [ %44, %42 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %61, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %61, i64 1
  %65 = bitcast %"struct.std::__1::__list_node_base"* %64 to %"class.net::DatagramBuffer"**
  %66 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %65, align 8
  store %"class.net::DatagramBuffer"* null, %"class.net::DatagramBuffer"** %65, align 8
  %67 = icmp eq %"class.net::DatagramBuffer"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %60
  call void @_ZN3net14DatagramBufferD1Ev(%"class.net::DatagramBuffer"* nonnull %66) #15
  %69 = bitcast %"class.net::DatagramBuffer"* %66 to i8*
  call void @_ZdlPv(i8* %69) #14
  br label %70

70:                                               ; preds = %68, %60
  %71 = bitcast %"struct.std::__1::__list_node_base"* %61 to i8*
  call void @_ZdlPv(i8* %71) #14
  %72 = icmp eq %"struct.std::__1::__list_node_base"* %63, %45
  br i1 %72, label %73, label %60

73:                                               ; preds = %70, %37, %42
  %74 = load i64, i64* %11, align 8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %104, label %76

76:                                               ; preds = %73
  %77 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %78 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %9, align 8
  %79 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %78, i64 0, i32 1
  %80 = bitcast %"struct.std::__1::__list_node_base"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %77, i64 0, i32 0
  %83 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %82, align 8
  %84 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %83, i64 0, i32 1
  %85 = bitcast %"struct.std::__1::__list_node_base"** %84 to i64*
  store i64 %81, i64* %85, align 8
  %86 = bitcast %"struct.std::__1::__list_node_base"* %77 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"struct.std::__1::__list_node_base"** %79 to i64**
  %89 = load i64*, i64** %88, align 8
  store i64 %87, i64* %89, align 8
  store i64 0, i64* %11, align 8
  %90 = icmp eq %"struct.std::__1::__list_node_base"* %77, %8
  br i1 %90, label %104, label %91

91:                                               ; preds = %76, %101
  %92 = phi %"struct.std::__1::__list_node_base"* [ %94, %101 ], [ %77, %76 ]
  %93 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %92, i64 0, i32 1
  %94 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %93, align 8
  %95 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %92, i64 1
  %96 = bitcast %"struct.std::__1::__list_node_base"* %95 to %"class.net::DatagramBuffer"**
  %97 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %96, align 8
  store %"class.net::DatagramBuffer"* null, %"class.net::DatagramBuffer"** %96, align 8
  %98 = icmp eq %"class.net::DatagramBuffer"* %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %91
  call void @_ZN3net14DatagramBufferD1Ev(%"class.net::DatagramBuffer"* nonnull %97) #15
  %100 = bitcast %"class.net::DatagramBuffer"* %97 to i8*
  call void @_ZdlPv(i8* %100) #14
  br label %101

101:                                              ; preds = %99, %91
  %102 = bitcast %"struct.std::__1::__list_node_base"* %92 to i8*
  call void @_ZdlPv(i8* %102) #14
  %103 = icmp eq %"struct.std::__1::__list_node_base"* %94, %8
  br i1 %103, label %104, label %91

104:                                              ; preds = %101, %73, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix15PostSendBuffersEv(%"class.net::UDPSocketPosix"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.171", align 8
  %3 = alloca %"class.base::OnceCallback.171", align 8
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::OnceCallback.86", align 8
  %7 = alloca %"class.base::OnceCallback.87", align 8
  %8 = alloca %"class.base::WeakPtr", align 8
  %9 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 29
  %10 = getelementptr inbounds %class.scoped_refptr.23, %class.scoped_refptr.23* %9, i64 0, i32 0
  %11 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %10, align 8
  %12 = icmp eq %"class.base::SequencedTaskRunner"* %11, null
  br i1 %12, label %13, label %27

13:                                               ; preds = %1
  %14 = tail call %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp) #15
  %15 = ptrtoint %"class.base::SequencedTaskRunner"* %14 to i64
  %16 = bitcast %class.scoped_refptr.23* %9 to i64*
  %17 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %10, align 8
  store i64 %15, i64* %16, align 8
  %18 = icmp eq %"class.base::SequencedTaskRunner"* %17, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %17, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.24", %"class.base::RefCountedThreadSafe.24"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.24", %"class.base::RefCountedThreadSafe.24"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe.24"* %25 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %26) #15
  br label %27

27:                                               ; preds = %1, %13, %19, %24
  %28 = bitcast %class.scoped_refptr.23* %9 to %"class.base::TaskRunner"**
  %29 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %28, align 8
  %30 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #15
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 1331) #15
  %31 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %32 = call i8* @_Znwm(i64 88) #14, !noalias !23
  %33 = bitcast i8* %32 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %33, void ()* bitcast (void (%"struct.net::SendResult"*, %"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net20UDPSocketPosixSenderEFNS3_10SendResultEiNSt3__14listINS6_10unique_ptrINS3_14DatagramBufferENS6_14default_deleteIS9_EEEENS6_9allocatorISC_EEEEEJ13scoped_refptrIS4_EiSF_EEEFS5_vEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net20UDPSocketPosixSenderEFNS2_10SendResultEiNSt3__14listINS5_10unique_ptrINS2_14DatagramBufferENS5_14default_deleteIS8_EEEENS5_9allocatorISB_EEEEEJ13scoped_refptrIS3_EiSE_EE7DestroyEPKNS0_13BindStateBaseE) #15, !noalias !23
  %34 = getelementptr inbounds i8, i8* %32, i64 32
  %35 = bitcast i8* %34 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"struct.net::SendResult"*, %"class.net::UDPSocketPosixSender"*, i32, %"class.std::__1::list"*)* @_ZN3net20UDPSocketPosixSender11SendBuffersEiNSt3__14listINS1_10unique_ptrINS_14DatagramBufferENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE to i64), i64 0>, <2 x i64>* %35, align 8, !noalias !23
  %36 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 2, i32 0
  %37 = load %"class.net::UDPSocketPosixSender"*, %"class.net::UDPSocketPosixSender"** %36, align 8, !noalias !23
  %38 = getelementptr inbounds i8, i8* %32, i64 48
  %39 = bitcast i8* %38 to %"class.net::UDPSocketPosixSender"**
  store %"class.net::UDPSocketPosixSender"* %37, %"class.net::UDPSocketPosixSender"** %39, align 8, !noalias !23
  %40 = icmp eq %"class.net::UDPSocketPosixSender"* %37, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %27
  %42 = getelementptr inbounds %"class.net::UDPSocketPosixSender", %"class.net::UDPSocketPosixSender"* %37, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 1 monotonic, !noalias !23
  br label %44

44:                                               ; preds = %41, %27
  %45 = getelementptr inbounds i8, i8* %32, i64 56
  %46 = bitcast i8* %45 to i32*
  %47 = load i32, i32* %31, align 4, !noalias !23
  store i32 %47, i32* %46, align 4, !noalias !23
  %48 = getelementptr inbounds i8, i8* %32, i64 64
  %49 = bitcast i8* %48 to %"struct.std::__1::__list_node_base"**
  %50 = bitcast i8* %48 to i8**
  store i8* %48, i8** %50, align 8, !noalias !23
  %51 = getelementptr inbounds i8, i8* %32, i64 72
  %52 = bitcast i8* %51 to i8**
  store i8* %48, i8** %52, align 8, !noalias !23
  %53 = getelementptr inbounds i8, i8* %32, i64 80
  %54 = bitcast i8* %53 to i64*
  store i64 0, i64* %54, align 8, !noalias !23
  %55 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %56 = load i64, i64* %55, align 8, !noalias !23
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %82, label %58

58:                                               ; preds = %44
  %59 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %60 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %59, align 8, !noalias !23
  %61 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %61, align 8, !noalias !23
  %63 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %62, i64 0, i32 1
  %64 = bitcast %"struct.std::__1::__list_node_base"** %63 to i64*
  %65 = load i64, i64* %64, align 8, !noalias !23
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 0
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8, !noalias !23
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = bitcast %"struct.std::__1::__list_node_base"** %68 to i64*
  store i64 %65, i64* %69, align 8, !noalias !23
  %70 = bitcast %"struct.std::__1::__list_node_base"* %60 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !23
  %72 = bitcast %"struct.std::__1::__list_node_base"** %63 to i64**
  %73 = load i64*, i64** %72, align 8, !noalias !23
  store i64 %71, i64* %73, align 8, !noalias !23
  %74 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %49, align 8, !noalias !23
  %75 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %74, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %60, %"struct.std::__1::__list_node_base"** %75, align 8, !noalias !23
  %76 = bitcast i8* %48 to i64*
  %77 = load i64, i64* %76, align 8, !noalias !23
  store i64 %77, i64* %70, align 8, !noalias !23
  store %"struct.std::__1::__list_node_base"* %62, %"struct.std::__1::__list_node_base"** %49, align 8, !noalias !23
  %78 = bitcast %"struct.std::__1::__list_node_base"** %63 to i8**
  store i8* %48, i8** %78, align 8, !noalias !23
  %79 = load i64, i64* %55, align 8, !noalias !23
  %80 = load i64, i64* %54, align 8, !noalias !23
  %81 = add i64 %80, %79
  store i64 %81, i64* %54, align 8, !noalias !23
  store i64 0, i64* %55, align 8, !noalias !23
  br label %82

82:                                               ; preds = %44, %58
  %83 = bitcast %"class.base::WeakPtr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #15
  %84 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #15, !noalias !28
  %85 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 45, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %85) #15, !noalias !28
  %86 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 45, i32 0, i32 1
  %87 = load i64, i64* %86, align 8, !noalias !28
  %88 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %88, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %87) #15
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #15, !noalias !28
  %89 = call i8* @_Znwm(i64 64) #14, !noalias !31
  %90 = bitcast i8* %89 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %90, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"struct.net::SendResult"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14UDPSocketPosixEFvNS3_10SendResultEEJNS_7WeakPtrIS4_EEEEEFvS5_EE7RunOnceEPNS0_13BindStateBaseEOS5_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net14UDPSocketPosixEFvNS2_10SendResultEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net14UDPSocketPosixEFvNS3_10SendResultEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE) #15, !noalias !31
  %91 = getelementptr inbounds i8, i8* %89, i64 32
  %92 = bitcast i8* %91 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::UDPSocketPosix"*, %"struct.net::SendResult"*)* @_ZN3net14UDPSocketPosix14DidSendBuffersENS_10SendResultE to i64), i64 0>, <2 x i64>* %92, align 8, !noalias !31
  %93 = getelementptr inbounds i8, i8* %89, i64 48
  %94 = bitcast i8* %93 to %"class.base::internal::WeakReference"*
  %95 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %94, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %95) #15, !noalias !31
  %96 = getelementptr inbounds i8, i8* %89, i64 56
  %97 = bitcast i8* %96 to i64*
  %98 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 1
  %99 = load i64, i64* %98, align 8, !noalias !31
  store i64 %99, i64* %97, align 8, !noalias !31
  %100 = bitcast %"class.base::OnceCallback.171"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100)
  %101 = bitcast %"class.base::OnceCallback.171"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101)
  %102 = call i8* @_Znwm(i64 8) #14
  %103 = bitcast i8* %102 to i64*
  store i64 0, i64* %103, align 8
  %104 = ptrtoint i8* %102 to i64
  %105 = call i8* @_Znwm(i64 56) #14, !noalias !36
  %106 = bitcast i8* %105 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %106, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFN3net10SendResultEvEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEJS7_SD_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFN3net10SendResultEvEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_SC_EE7DestroyEPKNS0_13BindStateBaseE) #15, !noalias !36
  %107 = getelementptr inbounds i8, i8* %105, i64 32
  %108 = bitcast i8* %107 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.86"*, %"class.std::__1::unique_ptr.165"*)* @_ZN4base8internal20ReturnAsParamAdapterIN3net10SendResultEEEvNS_12OnceCallbackIFT_vEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEE to i64), i64* %108, align 8, !noalias !36
  %109 = getelementptr inbounds i8, i8* %105, i64 40
  %110 = getelementptr inbounds %"class.base::OnceCallback.86", %"class.base::OnceCallback.86"* %6, i64 0, i32 0, i32 0, i32 0
  %111 = ptrtoint i8* %32 to i64
  %112 = bitcast i8* %109 to i64*
  store i64 %111, i64* %112, align 8, !noalias !36
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %110, align 8, !noalias !36
  %113 = getelementptr inbounds i8, i8* %105, i64 48
  %114 = bitcast i8* %113 to i64*
  store i64 %104, i64* %114, align 8, !noalias !36
  %115 = bitcast %"class.base::OnceCallback.171"* %2 to i8**
  store i8* %105, i8** %115, align 8, !alias.scope !36
  %116 = call i8* @_Znwm(i64 56) #14, !noalias !41
  %117 = bitcast i8* %116 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %117, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvN3net10SendResultEEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEJS7_NS0_12OwnedWrapperISC_NSA_ISC_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvN3net10SendResultEEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_NS0_12OwnedWrapperISB_NS9_ISB_EEEEEE7DestroyEPKNS0_13BindStateBaseE) #15, !noalias !41
  %118 = getelementptr inbounds i8, i8* %116, i64 32
  %119 = bitcast i8* %118 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.87"*, %"class.std::__1::unique_ptr.165"*)* @_ZN4base8internal12ReplyAdapterIN3net10SendResultES3_EEvNS_12OnceCallbackIFvT0_EEEPNSt3__110unique_ptrIT_NS8_14default_deleteISA_EEEE to i64), i64* %119, align 8, !noalias !41
  %120 = getelementptr inbounds i8, i8* %116, i64 40
  %121 = getelementptr inbounds %"class.base::OnceCallback.87", %"class.base::OnceCallback.87"* %7, i64 0, i32 0, i32 0, i32 0
  %122 = ptrtoint i8* %89 to i64
  %123 = bitcast i8* %120 to i64*
  store i64 %122, i64* %123, align 8, !noalias !41
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %121, align 8, !noalias !41
  %124 = getelementptr inbounds i8, i8* %116, i64 48
  %125 = bitcast i8* %124 to i64*
  store i64 %104, i64* %125, align 8, !noalias !41
  %126 = bitcast %"class.base::OnceCallback.171"* %3 to i8**
  store i8* %116, i8** %126, align 8, !alias.scope !41
  %127 = call zeroext i1 @_ZN4base10TaskRunner16PostTaskAndReplyERKNS_8LocationENS_12OnceCallbackIFvvEEES6_(%"class.base::TaskRunner"* %29, %"class.base::Location"* nonnull dereferenceable(32) %5, %"class.base::OnceCallback.171"* nonnull %2, %"class.base::OnceCallback.171"* nonnull %3) #15
  %128 = getelementptr inbounds %"class.base::OnceCallback.171", %"class.base::OnceCallback.171"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %128) #15
  %129 = getelementptr inbounds %"class.base::OnceCallback.171", %"class.base::OnceCallback.171"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %129) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101)
  %130 = getelementptr inbounds %"class.base::OnceCallback.87", %"class.base::OnceCallback.87"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %130) #15
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %88) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #15
  %131 = getelementptr inbounds %"class.base::OnceCallback.86", %"class.base::OnceCallback.86"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %131) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SequencedTaskRunner"* @_ZN3net14UDPSocketPosix13GetTaskRunnerEv(%"class.net::UDPSocketPosix"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 29
  %3 = getelementptr inbounds %class.scoped_refptr.23, %class.scoped_refptr.23* %2, i64 0, i32 0
  %4 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SequencedTaskRunner"* %4, null
  br i1 %5, label %6, label %20

6:                                                ; preds = %1
  %7 = tail call %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp) #15
  %8 = ptrtoint %"class.base::SequencedTaskRunner"* %7 to i64
  %9 = bitcast %class.scoped_refptr.23* %2 to i64*
  %10 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %3, align 8
  store i64 %8, i64* %9, align 8
  %11 = icmp eq %"class.base::SequencedTaskRunner"* %10, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %10, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe.24", %"class.base::RefCountedThreadSafe.24"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe.24", %"class.base::RefCountedThreadSafe.24"* %13, i64 -2
  %19 = bitcast %"class.base::RefCountedThreadSafe.24"* %18 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %19) #15
  br label %20

20:                                               ; preds = %17, %12, %6, %1
  %21 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %3, align 8
  ret %"class.base::SequencedTaskRunner"* %21
}

declare %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* dereferenceable(15)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix14DidSendBuffersENS_10SendResultE(%"class.net::UDPSocketPosix"*, %"struct.net::SendResult"*) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.std::__1::list", align 8
  %6 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %1, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = icmp sgt i32 %7, 0
  br i1 %12, label %13, label %180

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 28
  %15 = load i32, i32* %14, align 4
  %16 = sub nsw i32 %15, %7
  store i32 %16, i32* %14, align 4
  %17 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 38
  %19 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 38, i32 1
  %20 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 24
  br label %37

21:                                               ; preds = %57
  %22 = bitcast %"class.std::__1::list"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #15
  %23 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %26, %"struct.std::__1::__list_node_base"** %23, align 8
  store %"struct.std::__1::__list_node_base"* %26, %"struct.std::__1::__list_node_base"** %24, align 8
  store i64 0, i64* %25, align 8
  %27 = icmp eq i32 %7, %11
  br i1 %27, label %67, label %28

28:                                               ; preds = %21
  %29 = bitcast %"struct.std::__1::__list_node_base"** %17 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = inttoptr i64 %30 to %"struct.std::__1::__list_node_base"*
  %32 = add i32 %7, -1
  %33 = and i32 %7, 7
  %34 = icmp ult i32 %32, 7
  br i1 %34, label %93, label %35

35:                                               ; preds = %28
  %36 = sub i32 %7, %33
  br label %70

37:                                               ; preds = %57, %13
  %38 = phi %"struct.std::__1::__list_node_base"** [ %17, %13 ], [ %65, %57 ]
  %39 = phi i32 [ 0, %13 ], [ %63, %57 ]
  %40 = bitcast %"struct.std::__1::__list_node_base"** %38 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = inttoptr i64 %41 to %"struct.std::__1::__list_node"*
  %43 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %42, i64 0, i32 1, i32 0, i32 0, i32 0
  %44 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %43, align 8
  %45 = tail call i64 @_ZNK3net14DatagramBuffer6lengthEv(%"class.net::DatagramBuffer"* %44) #15
  %46 = trunc i64 %45 to i32
  %47 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %43, align 8
  %48 = tail call i8* @_ZNK3net14DatagramBuffer4dataEv(%"class.net::DatagramBuffer"* %47) #15
  %49 = icmp slt i32 %46, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %37
  tail call void @_ZNK3net16NetLogWithSource24AddEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %18, i32 80, i32 %46) #15
  br label %57

51:                                               ; preds = %37
  %52 = load %"class.net::NetLog"*, %"class.net::NetLog"** %19, align 8
  %53 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %52, i64 0, i32 3
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %51
  tail call void @_ZN3net21NetLogUDPDataTransferERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiPKcPKNS_10IPEndPointE(%"class.net::NetLogWithSource"* dereferenceable(24) %18, i32 78, i32 %46, i8* %48, %"class.net::IPEndPoint"* null) #15
  br label %57

57:                                               ; preds = %50, %51, %56
  %58 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %43, align 8
  %59 = tail call i64 @_ZNK3net14DatagramBuffer6lengthEv(%"class.net::DatagramBuffer"* %58) #15
  %60 = load i32, i32* %20, align 8
  %61 = trunc i64 %59 to i32
  %62 = add i32 %60, %61
  store i32 %62, i32* %20, align 8
  %63 = add nuw nsw i32 %39, 1
  %64 = inttoptr i64 %41 to %"struct.std::__1::__list_node_base"*
  %65 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %64, i64 0, i32 1
  %66 = icmp eq i32 %63, %7
  br i1 %66, label %21, label %37

67:                                               ; preds = %21
  %68 = ptrtoint %"class.std::__1::list"* %8 to i64
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %17, align 8
  br label %106

70:                                               ; preds = %70, %35
  %71 = phi i64 [ %30, %35 ], [ %90, %70 ]
  %72 = phi i32 [ %36, %35 ], [ %91, %70 ]
  %73 = inttoptr i64 %71 to %"struct.std::__1::__list_node_base"*
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %76, align 8
  %78 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %77, i64 0, i32 1
  %79 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %78, align 8
  %80 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %79, i64 0, i32 1
  %81 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %80, align 8
  %82 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %81, i64 0, i32 1
  %83 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %82, align 8
  %84 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %83, i64 0, i32 1
  %85 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %84, align 8
  %86 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %85, i64 0, i32 1
  %87 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %86, align 8
  %88 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %87, i64 0, i32 1
  %89 = bitcast %"struct.std::__1::__list_node_base"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = add i32 %72, -8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %70

93:                                               ; preds = %70, %28
  %94 = phi i64 [ undef, %28 ], [ %90, %70 ]
  %95 = phi i64 [ %30, %28 ], [ %90, %70 ]
  %96 = icmp eq i32 %33, 0
  br i1 %96, label %106, label %97

97:                                               ; preds = %93, %97
  %98 = phi i64 [ %103, %97 ], [ %95, %93 ]
  %99 = phi i32 [ %104, %97 ], [ %33, %93 ]
  %100 = inttoptr i64 %98 to %"struct.std::__1::__list_node_base"*
  %101 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %100, i64 0, i32 1
  %102 = bitcast %"struct.std::__1::__list_node_base"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = add i32 %99, -1
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %97, !llvm.loop !46

106:                                              ; preds = %93, %97, %67
  %107 = phi %"struct.std::__1::__list_node_base"* [ %69, %67 ], [ %31, %97 ], [ %31, %93 ]
  %108 = phi i64 [ %68, %67 ], [ %94, %93 ], [ %103, %97 ]
  %109 = inttoptr i64 %108 to %"struct.std::__1::__list_node_base"*
  %110 = icmp eq %"struct.std::__1::__list_node_base"* %107, %109
  br i1 %110, label %145, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %109, i64 0, i32 0
  %113 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %112, align 8
  %114 = icmp eq %"class.std::__1::list"* %5, %8
  br i1 %114, label %130, label %115

115:                                              ; preds = %111
  %116 = icmp eq %"struct.std::__1::__list_node_base"* %113, %107
  br i1 %116, label %126, label %117

117:                                              ; preds = %115, %117
  %118 = phi i64 [ %120, %117 ], [ 0, %115 ]
  %119 = phi %"struct.std::__1::__list_node_base"* [ %122, %117 ], [ %107, %115 ]
  %120 = add nuw nsw i64 %118, 1
  %121 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %119, i64 0, i32 1
  %122 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %121, align 8
  %123 = icmp eq %"struct.std::__1::__list_node_base"* %122, %113
  br i1 %123, label %124, label %117

124:                                              ; preds = %117
  %125 = add nuw i64 %118, 2
  br label %126

126:                                              ; preds = %124, %115
  %127 = phi i64 [ 1, %115 ], [ %125, %124 ]
  %128 = load i64, i64* %9, align 8
  %129 = sub i64 %128, %127
  store i64 %129, i64* %9, align 8
  store i64 %127, i64* %25, align 8
  br label %130

130:                                              ; preds = %126, %111
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %113, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %107, i64 0, i32 0
  %135 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %134, align 8
  %136 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %135, i64 0, i32 1
  %137 = bitcast %"struct.std::__1::__list_node_base"** %136 to i64*
  store i64 %133, i64* %137, align 8
  %138 = bitcast %"struct.std::__1::__list_node_base"* %107 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64**
  %141 = load i64*, i64** %140, align 8
  store i64 %139, i64* %141, align 8
  %142 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %23, align 8
  %143 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %142, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %107, %"struct.std::__1::__list_node_base"** %143, align 8
  %144 = ptrtoint %"struct.std::__1::__list_node_base"* %142 to i64
  store i64 %144, i64* %138, align 8
  store %"struct.std::__1::__list_node_base"* %113, %"struct.std::__1::__list_node_base"** %23, align 8
  store %"struct.std::__1::__list_node_base"* %26, %"struct.std::__1::__list_node_base"** %131, align 8
  br label %145

145:                                              ; preds = %106, %130
  %146 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %147 = load %"class.net::DatagramBufferPool"*, %"class.net::DatagramBufferPool"** %146, align 8
  call void @_ZN3net18DatagramBufferPool7DequeueEPNSt3__14listINS1_10unique_ptrINS_14DatagramBufferENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE(%"class.net::DatagramBufferPool"* %147, %"class.std::__1::list"* nonnull %5) #15
  %148 = load i64, i64* %25, align 8
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %178, label %150

150:                                              ; preds = %145
  %151 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %24, align 8
  %152 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %23, align 8
  %153 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %152, i64 0, i32 1
  %154 = bitcast %"struct.std::__1::__list_node_base"** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %151, i64 0, i32 0
  %157 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %156, align 8
  %158 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %157, i64 0, i32 1
  %159 = bitcast %"struct.std::__1::__list_node_base"** %158 to i64*
  store i64 %155, i64* %159, align 8
  %160 = bitcast %"struct.std::__1::__list_node_base"* %151 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"struct.std::__1::__list_node_base"** %153 to i64**
  %163 = load i64*, i64** %162, align 8
  store i64 %161, i64* %163, align 8
  store i64 0, i64* %25, align 8
  %164 = icmp eq %"struct.std::__1::__list_node_base"* %151, %26
  br i1 %164, label %178, label %165

165:                                              ; preds = %150, %175
  %166 = phi %"struct.std::__1::__list_node_base"* [ %168, %175 ], [ %151, %150 ]
  %167 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %166, i64 0, i32 1
  %168 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %167, align 8
  %169 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %166, i64 1
  %170 = bitcast %"struct.std::__1::__list_node_base"* %169 to %"class.net::DatagramBuffer"**
  %171 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %170, align 8
  store %"class.net::DatagramBuffer"* null, %"class.net::DatagramBuffer"** %170, align 8
  %172 = icmp eq %"class.net::DatagramBuffer"* %171, null
  br i1 %172, label %175, label %173

173:                                              ; preds = %165
  call void @_ZN3net14DatagramBufferD1Ev(%"class.net::DatagramBuffer"* nonnull %171) #15
  %174 = bitcast %"class.net::DatagramBuffer"* %171 to i8*
  call void @_ZdlPv(i8* %174) #14
  br label %175

175:                                              ; preds = %173, %165
  %176 = bitcast %"struct.std::__1::__list_node_base"* %166 to i8*
  call void @_ZdlPv(i8* %176) #14
  %177 = icmp eq %"struct.std::__1::__list_node_base"* %168, %26
  br i1 %177, label %178, label %165

178:                                              ; preds = %175, %145, %150
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #15
  %179 = load i64, i64* %9, align 8
  br label %180

180:                                              ; preds = %178, %2
  %181 = phi i64 [ %179, %178 ], [ %10, %2 ]
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %210, label %183

183:                                              ; preds = %180
  %184 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %185 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %184, align 8
  %186 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %187 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %186, align 8
  %188 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %8, i64 0, i32 0, i32 0, i32 0
  %189 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %188, align 8
  %190 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %189, i64 0, i32 1
  %191 = bitcast %"struct.std::__1::__list_node_base"** %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %187, i64 0, i32 0
  %194 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %193, align 8
  %195 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %194, i64 0, i32 1
  %196 = bitcast %"struct.std::__1::__list_node_base"** %195 to i64*
  store i64 %192, i64* %196, align 8
  %197 = bitcast %"struct.std::__1::__list_node_base"* %187 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"struct.std::__1::__list_node_base"** %190 to i64**
  %200 = load i64*, i64** %199, align 8
  store i64 %198, i64* %200, align 8
  %201 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %185, i64 0, i32 0
  %202 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %201, align 8
  %203 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %202, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %187, %"struct.std::__1::__list_node_base"** %203, align 8
  %204 = bitcast %"struct.std::__1::__list_node_base"* %185 to i64*
  %205 = load i64, i64* %204, align 8
  store i64 %205, i64* %197, align 8
  store %"struct.std::__1::__list_node_base"* %189, %"struct.std::__1::__list_node_base"** %201, align 8
  store %"struct.std::__1::__list_node_base"* %185, %"struct.std::__1::__list_node_base"** %190, align 8
  %206 = load i64, i64* %9, align 8
  %207 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %208 = load i64, i64* %207, align 8
  %209 = add i64 %208, %206
  store i64 %209, i64* %207, align 8
  store i64 0, i64* %9, align 8
  br label %210

210:                                              ; preds = %183, %180
  %211 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %1, i64 0, i32 0
  %212 = load i32, i32* %211, align 8
  %213 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 25
  store i32 %212, i32* %213, align 4
  %214 = icmp eq i32 %212, -1
  br i1 %214, label %215, label %245

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %217 = load %"class.net::UDPSocketPosix::WriteAsyncWatcher"*, %"class.net::UDPSocketPosix::WriteAsyncWatcher"** %216, align 8
  %218 = getelementptr inbounds %"class.net::UDPSocketPosix::WriteAsyncWatcher", %"class.net::UDPSocketPosix::WriteAsyncWatcher"* %217, i64 0, i32 2
  %219 = load i8, i8* %218, align 8, !range !2
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %221, label %244

221:                                              ; preds = %215
  %222 = bitcast %"class.net::UDPSocketPosix"* %0 to i1 (%"class.net::UDPSocketPosix"*)***
  %223 = load i1 (%"class.net::UDPSocketPosix"*)**, i1 (%"class.net::UDPSocketPosix"*)*** %222, align 8
  %224 = getelementptr inbounds i1 (%"class.net::UDPSocketPosix"*)*, i1 (%"class.net::UDPSocketPosix"*)** %223, i64 2
  %225 = load i1 (%"class.net::UDPSocketPosix"*)*, i1 (%"class.net::UDPSocketPosix"*)** %224, align 8
  %226 = call zeroext i1 %225(%"class.net::UDPSocketPosix"* %0) #15
  br i1 %226, label %227, label %230

227:                                              ; preds = %221
  %228 = load %"class.net::UDPSocketPosix::WriteAsyncWatcher"*, %"class.net::UDPSocketPosix::WriteAsyncWatcher"** %216, align 8
  %229 = getelementptr inbounds %"class.net::UDPSocketPosix::WriteAsyncWatcher", %"class.net::UDPSocketPosix::WriteAsyncWatcher"* %228, i64 0, i32 2
  store i8 1, i8* %229, align 8
  br label %244

230:                                              ; preds = %221
  %231 = tail call i32* @__errno_location() #16
  %232 = load i32, i32* %231, align 4
  %233 = call i32 @_ZN3net14MapSystemErrorEi(i32 %232) #15
  store i32 %233, i32* %213, align 4
  %234 = icmp slt i32 %233, 0
  %235 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 38
  br i1 %234, label %236, label %237

236:                                              ; preds = %230
  call void @_ZNK3net16NetLogWithSource24AddEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %235, i32 80, i32 %233) #15
  br label %264

237:                                              ; preds = %230
  %238 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 38, i32 1
  %239 = load %"class.net::NetLog"*, %"class.net::NetLog"** %238, align 8
  %240 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %239, i64 0, i32 3
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %264, label %243

243:                                              ; preds = %237
  call void @_ZN3net21NetLogUDPDataTransferERKNS_16NetLogWithSourceENS_15NetLogEventTypeEiPKcPKNS_10IPEndPointE(%"class.net::NetLogWithSource"* dereferenceable(24) %235, i32 78, i32 %233, i8* null, %"class.net::IPEndPoint"* null) #15
  br label %264

244:                                              ; preds = %215, %227
  store i32 0, i32* %213, align 4
  br label %264

245:                                              ; preds = %210
  %246 = icmp slt i32 %212, 0
  br i1 %246, label %251, label %247

247:                                              ; preds = %245
  %248 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %249 = load i64, i64* %248, align 8
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %264

251:                                              ; preds = %247, %245
  %252 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %253 = load %"class.net::UDPSocketPosix::WriteAsyncWatcher"*, %"class.net::UDPSocketPosix::WriteAsyncWatcher"** %252, align 8
  %254 = getelementptr inbounds %"class.net::UDPSocketPosix::WriteAsyncWatcher", %"class.net::UDPSocketPosix::WriteAsyncWatcher"* %253, i64 0, i32 2
  %255 = load i8, i8* %254, align 8, !range !2
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %264, label %257

257:                                              ; preds = %251
  %258 = bitcast %"class.net::UDPSocketPosix"* %0 to void (%"class.net::UDPSocketPosix"*)***
  %259 = load void (%"class.net::UDPSocketPosix"*)**, void (%"class.net::UDPSocketPosix"*)*** %258, align 8
  %260 = getelementptr inbounds void (%"class.net::UDPSocketPosix"*)*, void (%"class.net::UDPSocketPosix"*)** %259, i64 3
  %261 = load void (%"class.net::UDPSocketPosix"*)*, void (%"class.net::UDPSocketPosix"*)** %260, align 8
  call void %261(%"class.net::UDPSocketPosix"* %0) #15
  %262 = load %"class.net::UDPSocketPosix::WriteAsyncWatcher"*, %"class.net::UDPSocketPosix::WriteAsyncWatcher"** %252, align 8
  %263 = getelementptr inbounds %"class.net::UDPSocketPosix::WriteAsyncWatcher", %"class.net::UDPSocketPosix::WriteAsyncWatcher"* %262, i64 0, i32 2
  store i8 0, i8* %263, align 8
  br label %264

264:                                              ; preds = %257, %251, %243, %237, %236, %247, %244
  %265 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %266 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %265, align 8
  %267 = icmp eq %"class.base::internal::BindStateBase"* %266, null
  %268 = ptrtoint %"class.base::internal::BindStateBase"* %266 to i64
  br i1 %267, label %294, label %269

269:                                              ; preds = %264
  %270 = load i32, i32* %213, align 4
  %271 = icmp slt i32 %270, 0
  br i1 %271, label %272, label %280

272:                                              ; preds = %269
  store i32 0, i32* %213, align 4
  %273 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %273) #15
  %274 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %275 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %268, i64* %275, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %274, align 8
  %276 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %277 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %266, i64 0, i32 1
  %278 = bitcast void ()** %277 to void (%"class.base::internal::BindStateBase"*, i32)**
  %279 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %278, align 8
  call void %279(%"class.base::internal::BindStateBase"* nonnull %266, i32 %270) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %276) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %273) #15
  br label %294

280:                                              ; preds = %269
  %281 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 28
  %282 = load i32, i32* %281, align 4
  %283 = icmp slt i32 %282, 16
  br i1 %283, label %284, label %294

284:                                              ; preds = %280
  %285 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 24
  %286 = load i32, i32* %285, align 8
  store i32 0, i32* %285, align 8
  %287 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %287) #15
  %288 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %289 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %268, i64* %289, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %288, align 8
  %290 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %291 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %266, i64 0, i32 1
  %292 = bitcast void ()** %291 to void (%"class.base::internal::BindStateBase"*, i32)**
  %293 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %292, align 8
  call void %293(%"class.base::internal::BindStateBase"* nonnull %266, i32 %286) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %290) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %287) #15
  br label %294

294:                                              ; preds = %272, %284, %280, %264
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #4

declare void @_ZN3net18DatagramBufferPool7DequeueEPNSt3__14listINS1_10unique_ptrINS_14DatagramBufferENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE(%"class.net::DatagramBufferPool"*, %"class.std::__1::list"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net14UDPSocketPosix19WatchFileDescriptorEv(%"class.net::UDPSocketPosix"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.net::UDPSocketPosix::WriteAsyncWatcher"*, %"class.net::UDPSocketPosix::WriteAsyncWatcher"** %2, align 8
  %4 = getelementptr inbounds %"class.net::UDPSocketPosix::WriteAsyncWatcher", %"class.net::UDPSocketPosix::WriteAsyncWatcher"* %3, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %16

7:                                                ; preds = %1
  %8 = bitcast %"class.net::UDPSocketPosix"* %0 to i1 (%"class.net::UDPSocketPosix"*)***
  %9 = load i1 (%"class.net::UDPSocketPosix"*)**, i1 (%"class.net::UDPSocketPosix"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.net::UDPSocketPosix"*)*, i1 (%"class.net::UDPSocketPosix"*)** %9, i64 2
  %11 = load i1 (%"class.net::UDPSocketPosix"*)*, i1 (%"class.net::UDPSocketPosix"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.net::UDPSocketPosix"* %0) #15
  br i1 %12, label %13, label %16

13:                                               ; preds = %7
  %14 = load %"class.net::UDPSocketPosix::WriteAsyncWatcher"*, %"class.net::UDPSocketPosix::WriteAsyncWatcher"** %2, align 8
  %15 = getelementptr inbounds %"class.net::UDPSocketPosix::WriteAsyncWatcher", %"class.net::UDPSocketPosix::WriteAsyncWatcher"* %14, i64 0, i32 2
  store i8 1, i8* %15, align 8
  br label %16

16:                                               ; preds = %1, %7, %13
  %17 = phi i1 [ true, %1 ], [ true, %13 ], [ false, %7 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix26StopWatchingFileDescriptorEv(%"class.net::UDPSocketPosix"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.net::UDPSocketPosix::WriteAsyncWatcher"*, %"class.net::UDPSocketPosix::WriteAsyncWatcher"** %2, align 8
  %4 = getelementptr inbounds %"class.net::UDPSocketPosix::WriteAsyncWatcher", %"class.net::UDPSocketPosix::WriteAsyncWatcher"* %3, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.net::UDPSocketPosix"* %0 to void (%"class.net::UDPSocketPosix"*)***
  %9 = load void (%"class.net::UDPSocketPosix"*)**, void (%"class.net::UDPSocketPosix"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.net::UDPSocketPosix"*)*, void (%"class.net::UDPSocketPosix"*)** %9, i64 3
  %11 = load void (%"class.net::UDPSocketPosix"*)*, void (%"class.net::UDPSocketPosix"*)** %10, align 8
  tail call void %11(%"class.net::UDPSocketPosix"* %0) #15
  %12 = load %"class.net::UDPSocketPosix::WriteAsyncWatcher"*, %"class.net::UDPSocketPosix::WriteAsyncWatcher"** %2, align 8
  %13 = getelementptr inbounds %"class.net::UDPSocketPosix::WriteAsyncWatcher", %"class.net::UDPSocketPosix::WriteAsyncWatcher"* %12, i64 0, i32 2
  store i8 0, i8* %13, align 8
  br label %14

14:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix17WriteAsyncWatcher29OnFileCanWriteWithoutBlockingEi(%"class.net::UDPSocketPosix::WriteAsyncWatcher"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPSocketPosix::WriteAsyncWatcher", %"class.net::UDPSocketPosix::WriteAsyncWatcher"* %0, i64 0, i32 1
  %4 = load %"class.net::UDPSocketPosix"*, %"class.net::UDPSocketPosix"** %3, align 8
  %5 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.net::UDPSocketPosix::WriteAsyncWatcher"*, %"class.net::UDPSocketPosix::WriteAsyncWatcher"** %5, align 8
  %7 = getelementptr inbounds %"class.net::UDPSocketPosix::WriteAsyncWatcher", %"class.net::UDPSocketPosix::WriteAsyncWatcher"* %6, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.net::UDPSocketPosix"* %4 to void (%"class.net::UDPSocketPosix"*)***
  %12 = load void (%"class.net::UDPSocketPosix"*)**, void (%"class.net::UDPSocketPosix"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.net::UDPSocketPosix"*)*, void (%"class.net::UDPSocketPosix"*)** %12, i64 3
  %14 = load void (%"class.net::UDPSocketPosix"*)*, void (%"class.net::UDPSocketPosix"*)** %13, align 8
  tail call void %14(%"class.net::UDPSocketPosix"* %4) #15
  %15 = load %"class.net::UDPSocketPosix::WriteAsyncWatcher"*, %"class.net::UDPSocketPosix::WriteAsyncWatcher"** %5, align 8
  %16 = getelementptr inbounds %"class.net::UDPSocketPosix::WriteAsyncWatcher", %"class.net::UDPSocketPosix::WriteAsyncWatcher"* %15, i64 0, i32 2
  store i8 0, i8* %16, align 8
  %17 = load %"class.net::UDPSocketPosix"*, %"class.net::UDPSocketPosix"** %3, align 8
  %18 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %17, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.net::UDPSocketPosix::WriteAsyncWatcher"*, %"class.net::UDPSocketPosix::WriteAsyncWatcher"** %18, align 8
  %20 = getelementptr inbounds %"class.net::UDPSocketPosix::WriteAsyncWatcher", %"class.net::UDPSocketPosix::WriteAsyncWatcher"* %19, i64 0, i32 2
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %49

23:                                               ; preds = %2, %10
  %24 = phi %"class.net::UDPSocketPosix"* [ %17, %10 ], [ %4, %2 ]
  %25 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %24, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %49, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %24, i64 0, i32 27
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %24, i64 0, i32 26, i32 0
  tail call void @_ZN4base8internal9TimerBase5ResetEv(%"class.base::internal::TimerBase"* %33) #15
  %34 = load i64, i64* %25, align 8
  br label %35

35:                                               ; preds = %32, %28
  %36 = phi i64 [ %26, %28 ], [ %34, %32 ]
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %24, i64 0, i32 22
  %39 = load i8, i8* %38, align 2, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %35
  %42 = icmp slt i32 %37, 3
  br i1 %42, label %43, label %48

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %24, i64 0, i32 28
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, %37
  br i1 %46, label %47, label %48

47:                                               ; preds = %43, %35
  tail call void @_ZN3net14UDPSocketPosix16LocalSendBuffersEv(%"class.net::UDPSocketPosix"* %24) #15
  br label %49

48:                                               ; preds = %43, %41
  tail call void @_ZN3net14UDPSocketPosix15PostSendBuffersEv(%"class.net::UDPSocketPosix"* %24) #15
  br label %49

49:                                               ; preds = %10, %23, %47, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net14UDPSocketPosix27InternalWatchFileDescriptorEv(%"class.net::UDPSocketPosix"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::CurrentIOThread", align 8
  %3 = bitcast %"class.base::CurrentIOThread"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #15
  %4 = tail call %"class.base::sequence_manager::internal::SequenceManagerImpl"* @_ZN4base15CurrentIOThread3GetEv() #15
  %5 = getelementptr inbounds %"class.base::CurrentIOThread", %"class.base::CurrentIOThread"* %2, i64 0, i32 0, i32 0
  store %"class.base::sequence_manager::internal::SequenceManagerImpl"* %4, %"class.base::sequence_manager::internal::SequenceManagerImpl"** %5, align 8
  %6 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 17
  %9 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.net::UDPSocketPosix::WriteAsyncWatcher"*, %"class.net::UDPSocketPosix::WriteAsyncWatcher"** %9, align 8
  %11 = getelementptr inbounds %"class.net::UDPSocketPosix::WriteAsyncWatcher", %"class.net::UDPSocketPosix::WriteAsyncWatcher"* %10, i64 0, i32 0
  %12 = call zeroext i1 @_ZN4base15CurrentIOThread19WatchFileDescriptorEibNS_27WatchableIOMessagePumpPosix4ModeEPNS_19MessagePumpLibevent17FdWatchControllerEPNS1_9FdWatcherE(%"class.base::CurrentIOThread"* nonnull %2, i32 %7, i1 zeroext true, i32 2, %"class.base::MessagePumpLibevent::FdWatchController"* %8, %"class.base::WatchableIOMessagePumpPosix::FdWatcher"* %11) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #15
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix34InternalStopWatchingFileDescriptorEv(%"class.net::UDPSocketPosix"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 17
  %3 = tail call zeroext i1 @_ZN4base19MessagePumpLibevent17FdWatchController26StopWatchingFileDescriptorEv(%"class.base::MessagePumpLibevent::FdWatchController"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14UDPSocketPosix16SetMaxPacketSizeEm(%"class.net::UDPSocketPosix"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 40) #14
  %4 = bitcast i8* %3 to %"class.net::DatagramBufferPool"*
  tail call void @_ZN3net18DatagramBufferPoolC1Em(%"class.net::DatagramBufferPool"* nonnull %4, i64 %1) #15
  %5 = ptrtoint i8* %3 to i64
  %6 = getelementptr inbounds %"class.net::UDPSocketPosix", %"class.net::UDPSocketPosix"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.net::DatagramBufferPool"*, %"class.net::DatagramBufferPool"** %7, align 8
  %9 = bitcast %"class.std::__1::unique_ptr.2"* %6 to i64*
  store i64 %5, i64* %9, align 8
  %10 = icmp eq %"class.net::DatagramBufferPool"* %8, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.net::DatagramBufferPool"* %8 to void (%"class.net::DatagramBufferPool"*)***
  %13 = load void (%"class.net::DatagramBufferPool"*)**, void (%"class.net::DatagramBufferPool"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.net::DatagramBufferPool"*)*, void (%"class.net::DatagramBufferPool"*)** %13, i64 1
  %15 = load void (%"class.net::DatagramBufferPool"*)*, void (%"class.net::DatagramBufferPool"*)** %14, align 8
  tail call void %15(%"class.net::DatagramBufferPool"* nonnull %8) #15
  br label %16

16:                                               ; preds = %11, %2
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN3net14UDPSocketPosix24SetIOSNetworkServiceTypeEi(%"class.net::UDPSocketPosix"* nocapture readnone, i32) local_unnamed_addr #7 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net14UDPSocketPosix17WriteAsyncWatcher28OnFileCanReadWithoutBlockingEi(%"class.net::UDPSocketPosix::WriteAsyncWatcher"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net14UDPSocketPosix17WriteAsyncWatcherD0Ev(%"class.net::UDPSocketPosix::WriteAsyncWatcher"*) unnamed_addr #11 comdat align 2 {
  %2 = bitcast %"class.net::UDPSocketPosix::WriteAsyncWatcher"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net14UDPSocketPosix11ReadWatcher29OnFileCanWriteWithoutBlockingEi(%"class.net::UDPSocketPosix::ReadWatcher"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net14UDPSocketPosix11ReadWatcherD0Ev(%"class.net::UDPSocketPosix::ReadWatcher"*) unnamed_addr #11 comdat align 2 {
  %2 = bitcast %"class.net::UDPSocketPosix::ReadWatcher"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net14UDPSocketPosix12WriteWatcher28OnFileCanReadWithoutBlockingEi(%"class.net::UDPSocketPosix::WriteWatcher"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net14UDPSocketPosix12WriteWatcherD0Ev(%"class.net::UDPSocketPosix::WriteWatcher"*) unnamed_addr #11 comdat align 2 {
  %2 = bitcast %"class.net::UDPSocketPosix::WriteWatcher"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base27WatchableIOMessagePumpPosix9FdWatcherD2Ev(%"class.base::WatchableIOMessagePumpPosix::FdWatcher"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net14DatagramBufferD1Ev(%"class.net::DatagramBuffer"*) unnamed_addr #4

declare zeroext i1 @_ZNK3net9SocketTageqERKS0_(%"class.net::SocketTag"*, %"class.net::SocketTag"* dereferenceable(1)) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #4

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #3

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #3

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #3

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #15
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #15
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #15
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #15
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #15
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #15
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #15
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #15
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #15
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #15
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #15
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #15
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #15
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14UDPSocketPosix23ReceivedActivityMonitorEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.net::UDPSocketPosix::ReceivedActivityMonitor"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.net::UDPSocketPosix::ReceivedActivityMonitor"*)**
  %21 = load void (%"class.net::UDPSocketPosix::ReceivedActivityMonitor"*)*, void (%"class.net::UDPSocketPosix::ReceivedActivityMonitor"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.net::UDPSocketPosix::ReceivedActivityMonitor"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.net::UDPSocketPosix::ReceivedActivityMonitor"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.net::UDPSocketPosix::ReceivedActivityMonitor"* %12) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net14UDPSocketPosix23ReceivedActivityMonitorEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

declare void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #4

declare void @_ZN3net28CreateNetLogUDPConnectParamsERKNS_10IPEndPointEl(%"class.base::Value"* sret, %"class.net::IPEndPoint"* dereferenceable(20), i64) local_unnamed_addr #3

declare void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5iovecN4base14StackAllocatorIS1_Lm17EEEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector.70"*, %struct.iovec* dereferenceable(16)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %4 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %struct.iovec** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.70"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 4
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 1152921504606846975
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::vector.70"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #17
  unreachable

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %struct.iovec** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 4
  %21 = icmp ult i64 %20, 576460752303423487
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 3
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %48, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 1152921504606846975, %15 ]
  %29 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %3, i64 0, i32 0
  %30 = load %"struct.base::StackAllocator<iovec, 17>::Source"*, %"struct.base::StackAllocator<iovec, 17>::Source"** %29, align 8
  %31 = icmp eq %"struct.base::StackAllocator<iovec, 17>::Source"* %30, null
  br i1 %31, label %41, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.base::StackAllocator<iovec, 17>::Source", %"struct.base::StackAllocator<iovec, 17>::Source"* %30, i64 0, i32 1
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  %36 = icmp ult i64 %28, 18
  %37 = and i1 %36, %35
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  store i8 1, i8* %33, align 8
  %39 = bitcast %"class.base::StackAllocator"* %3 to %struct.iovec**
  %40 = load %struct.iovec*, %struct.iovec** %39, align 8
  br label %48

41:                                               ; preds = %32, %27
  %42 = icmp ugt i64 %28, 1152921504606846975
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  tail call void @abort() #17
  unreachable

44:                                               ; preds = %41
  %45 = shl i64 %28, 4
  %46 = tail call i8* @_Znwm(i64 %45) #14
  %47 = bitcast i8* %46 to %struct.iovec*
  br label %48

48:                                               ; preds = %22, %38, %44
  %49 = phi i64 [ 0, %22 ], [ %28, %38 ], [ %28, %44 ]
  %50 = phi %struct.iovec* [ null, %22 ], [ %40, %38 ], [ %47, %44 ]
  %51 = getelementptr inbounds %struct.iovec, %struct.iovec* %50, i64 %10
  %52 = getelementptr inbounds %struct.iovec, %struct.iovec* %50, i64 %49
  %53 = ptrtoint %struct.iovec* %52 to i64
  %54 = bitcast %struct.iovec* %51 to i8*
  %55 = bitcast %struct.iovec* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 16, i1 false) #15
  %56 = getelementptr inbounds %struct.iovec, %struct.iovec* %51, i64 1
  %57 = ptrtoint %struct.iovec* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 0
  %59 = load %struct.iovec*, %struct.iovec** %58, align 8
  %60 = ptrtoint %struct.iovec* %59 to i64
  %61 = load %struct.iovec*, %struct.iovec** %4, align 8
  %62 = icmp eq %struct.iovec* %61, %59
  br i1 %62, label %109, label %63

63:                                               ; preds = %48
  %64 = getelementptr %struct.iovec, %struct.iovec* %61, i64 -1, i32 0
  %65 = ptrtoint i8** %64 to i64
  %66 = sub i64 %65, %60
  %67 = lshr i64 %66, 4
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %81, label %71

71:                                               ; preds = %63, %71
  %72 = phi %struct.iovec* [ %75, %71 ], [ %51, %63 ]
  %73 = phi %struct.iovec* [ %76, %71 ], [ %61, %63 ]
  %74 = phi i64 [ %79, %71 ], [ %69, %63 ]
  %75 = getelementptr inbounds %struct.iovec, %struct.iovec* %72, i64 -1
  %76 = getelementptr inbounds %struct.iovec, %struct.iovec* %73, i64 -1
  %77 = bitcast %struct.iovec* %75 to i8*
  %78 = bitcast %struct.iovec* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 16, i1 false) #15
  %79 = add i64 %74, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %71, !llvm.loop !47

81:                                               ; preds = %71, %63
  %82 = phi %struct.iovec* [ undef, %63 ], [ %75, %71 ]
  %83 = phi %struct.iovec* [ %51, %63 ], [ %75, %71 ]
  %84 = phi %struct.iovec* [ %61, %63 ], [ %76, %71 ]
  %85 = icmp ult i64 %66, 48
  br i1 %85, label %106, label %86

86:                                               ; preds = %81, %86
  %87 = phi %struct.iovec* [ %101, %86 ], [ %83, %81 ]
  %88 = phi %struct.iovec* [ %102, %86 ], [ %84, %81 ]
  %89 = getelementptr inbounds %struct.iovec, %struct.iovec* %87, i64 -1
  %90 = getelementptr inbounds %struct.iovec, %struct.iovec* %88, i64 -1
  %91 = bitcast %struct.iovec* %89 to i8*
  %92 = bitcast %struct.iovec* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 16, i1 false) #15
  %93 = getelementptr inbounds %struct.iovec, %struct.iovec* %87, i64 -2
  %94 = getelementptr inbounds %struct.iovec, %struct.iovec* %88, i64 -2
  %95 = bitcast %struct.iovec* %93 to i8*
  %96 = bitcast %struct.iovec* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 16, i1 false) #15
  %97 = getelementptr inbounds %struct.iovec, %struct.iovec* %87, i64 -3
  %98 = getelementptr inbounds %struct.iovec, %struct.iovec* %88, i64 -3
  %99 = bitcast %struct.iovec* %97 to i8*
  %100 = bitcast %struct.iovec* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 16, i1 false) #15
  %101 = getelementptr inbounds %struct.iovec, %struct.iovec* %87, i64 -4
  %102 = getelementptr inbounds %struct.iovec, %struct.iovec* %88, i64 -4
  %103 = bitcast %struct.iovec* %101 to i8*
  %104 = bitcast %struct.iovec* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 16, i1 false) #15
  %105 = icmp eq %struct.iovec* %102, %59
  br i1 %105, label %106, label %86

106:                                              ; preds = %86, %81
  %107 = phi %struct.iovec* [ %82, %81 ], [ %101, %86 ]
  %108 = load i64, i64* %7, align 8
  br label %109

109:                                              ; preds = %48, %106
  %110 = phi %struct.iovec* [ %107, %106 ], [ %51, %48 ]
  %111 = phi i64 [ %108, %106 ], [ %60, %48 ]
  %112 = ptrtoint %struct.iovec* %110 to i64
  store i64 %112, i64* %7, align 8
  store i64 %57, i64* %5, align 8
  store i64 %53, i64* %17, align 8
  %113 = icmp eq i64 %111, 0
  br i1 %113, label %126, label %114

114:                                              ; preds = %109
  %115 = inttoptr i64 %111 to %struct.iovec*
  %116 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %3, i64 0, i32 0
  %117 = load %"struct.base::StackAllocator<iovec, 17>::Source"*, %"struct.base::StackAllocator<iovec, 17>::Source"** %116, align 8
  %118 = icmp ne %"struct.base::StackAllocator<iovec, 17>::Source"* %117, null
  %119 = bitcast %"struct.base::StackAllocator<iovec, 17>::Source"* %117 to %struct.iovec*
  %120 = icmp eq %struct.iovec* %115, %119
  %121 = and i1 %118, %120
  br i1 %121, label %122, label %124

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"struct.base::StackAllocator<iovec, 17>::Source", %"struct.base::StackAllocator<iovec, 17>::Source"* %117, i64 0, i32 1
  store i8 0, i8* %123, align 8
  br label %126

124:                                              ; preds = %114
  %125 = inttoptr i64 %111 to i8*
  tail call void @_ZdlPv(i8* %125) #14
  br label %126

126:                                              ; preds = %109, %122, %124
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI7mmsghdrN4base14StackAllocatorIS1_Lm17EEEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector.80"*, %struct.mmsghdr* dereferenceable(64)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.80", %"class.std::__1::vector.80"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %4 = getelementptr inbounds %"class.std::__1::vector.80", %"class.std::__1::vector.80"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %struct.mmsghdr** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.80"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 6
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 288230376151711743
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::vector.80"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #17
  unreachable

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::vector.80", %"class.std::__1::vector.80"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %struct.mmsghdr** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 6
  %21 = icmp ult i64 %20, 144115188075855871
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 5
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %48, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 288230376151711743, %15 ]
  %29 = getelementptr inbounds %"class.base::StackAllocator.77", %"class.base::StackAllocator.77"* %3, i64 0, i32 0
  %30 = load %"struct.base::StackAllocator<mmsghdr, 17>::Source"*, %"struct.base::StackAllocator<mmsghdr, 17>::Source"** %29, align 8
  %31 = icmp eq %"struct.base::StackAllocator<mmsghdr, 17>::Source"* %30, null
  br i1 %31, label %41, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.base::StackAllocator<mmsghdr, 17>::Source", %"struct.base::StackAllocator<mmsghdr, 17>::Source"* %30, i64 0, i32 1
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  %36 = icmp ult i64 %28, 18
  %37 = and i1 %36, %35
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  store i8 1, i8* %33, align 8
  %39 = bitcast %"class.base::StackAllocator.77"* %3 to %struct.mmsghdr**
  %40 = load %struct.mmsghdr*, %struct.mmsghdr** %39, align 8
  br label %48

41:                                               ; preds = %32, %27
  %42 = icmp ugt i64 %28, 288230376151711743
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  tail call void @abort() #17
  unreachable

44:                                               ; preds = %41
  %45 = shl i64 %28, 6
  %46 = tail call i8* @_Znwm(i64 %45) #14
  %47 = bitcast i8* %46 to %struct.mmsghdr*
  br label %48

48:                                               ; preds = %22, %38, %44
  %49 = phi i64 [ 0, %22 ], [ %28, %38 ], [ %28, %44 ]
  %50 = phi %struct.mmsghdr* [ null, %22 ], [ %40, %38 ], [ %47, %44 ]
  %51 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %50, i64 %10
  %52 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %50, i64 %49
  %53 = ptrtoint %struct.mmsghdr* %52 to i64
  %54 = bitcast %struct.mmsghdr* %51 to i8*
  %55 = bitcast %struct.mmsghdr* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 64, i1 false) #15
  %56 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %51, i64 1
  %57 = ptrtoint %struct.mmsghdr* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.80", %"class.std::__1::vector.80"* %0, i64 0, i32 0, i32 0
  %59 = load %struct.mmsghdr*, %struct.mmsghdr** %58, align 8
  %60 = ptrtoint %struct.mmsghdr* %59 to i64
  %61 = load %struct.mmsghdr*, %struct.mmsghdr** %4, align 8
  %62 = icmp eq %struct.mmsghdr* %61, %59
  br i1 %62, label %109, label %63

63:                                               ; preds = %48
  %64 = getelementptr %struct.mmsghdr, %struct.mmsghdr* %61, i64 -1, i32 0, i32 0
  %65 = ptrtoint i8** %64 to i64
  %66 = sub i64 %65, %60
  %67 = lshr i64 %66, 6
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %81, label %71

71:                                               ; preds = %63, %71
  %72 = phi %struct.mmsghdr* [ %75, %71 ], [ %51, %63 ]
  %73 = phi %struct.mmsghdr* [ %76, %71 ], [ %61, %63 ]
  %74 = phi i64 [ %79, %71 ], [ %69, %63 ]
  %75 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %72, i64 -1
  %76 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %73, i64 -1
  %77 = bitcast %struct.mmsghdr* %75 to i8*
  %78 = bitcast %struct.mmsghdr* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 64, i1 false) #15
  %79 = add i64 %74, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %71, !llvm.loop !48

81:                                               ; preds = %71, %63
  %82 = phi %struct.mmsghdr* [ undef, %63 ], [ %75, %71 ]
  %83 = phi %struct.mmsghdr* [ %51, %63 ], [ %75, %71 ]
  %84 = phi %struct.mmsghdr* [ %61, %63 ], [ %76, %71 ]
  %85 = icmp ult i64 %66, 192
  br i1 %85, label %106, label %86

86:                                               ; preds = %81, %86
  %87 = phi %struct.mmsghdr* [ %101, %86 ], [ %83, %81 ]
  %88 = phi %struct.mmsghdr* [ %102, %86 ], [ %84, %81 ]
  %89 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %87, i64 -1
  %90 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %88, i64 -1
  %91 = bitcast %struct.mmsghdr* %89 to i8*
  %92 = bitcast %struct.mmsghdr* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 64, i1 false) #15
  %93 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %87, i64 -2
  %94 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %88, i64 -2
  %95 = bitcast %struct.mmsghdr* %93 to i8*
  %96 = bitcast %struct.mmsghdr* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 64, i1 false) #15
  %97 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %87, i64 -3
  %98 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %88, i64 -3
  %99 = bitcast %struct.mmsghdr* %97 to i8*
  %100 = bitcast %struct.mmsghdr* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 64, i1 false) #15
  %101 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %87, i64 -4
  %102 = getelementptr inbounds %struct.mmsghdr, %struct.mmsghdr* %88, i64 -4
  %103 = bitcast %struct.mmsghdr* %101 to i8*
  %104 = bitcast %struct.mmsghdr* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 64, i1 false) #15
  %105 = icmp eq %struct.mmsghdr* %102, %59
  br i1 %105, label %106, label %86

106:                                              ; preds = %86, %81
  %107 = phi %struct.mmsghdr* [ %82, %81 ], [ %101, %86 ]
  %108 = load i64, i64* %7, align 8
  br label %109

109:                                              ; preds = %48, %106
  %110 = phi %struct.mmsghdr* [ %107, %106 ], [ %51, %48 ]
  %111 = phi i64 [ %108, %106 ], [ %60, %48 ]
  %112 = ptrtoint %struct.mmsghdr* %110 to i64
  store i64 %112, i64* %7, align 8
  store i64 %57, i64* %5, align 8
  store i64 %53, i64* %17, align 8
  %113 = icmp eq i64 %111, 0
  br i1 %113, label %126, label %114

114:                                              ; preds = %109
  %115 = inttoptr i64 %111 to %struct.mmsghdr*
  %116 = getelementptr inbounds %"class.base::StackAllocator.77", %"class.base::StackAllocator.77"* %3, i64 0, i32 0
  %117 = load %"struct.base::StackAllocator<mmsghdr, 17>::Source"*, %"struct.base::StackAllocator<mmsghdr, 17>::Source"** %116, align 8
  %118 = icmp ne %"struct.base::StackAllocator<mmsghdr, 17>::Source"* %117, null
  %119 = bitcast %"struct.base::StackAllocator<mmsghdr, 17>::Source"* %117 to %struct.mmsghdr*
  %120 = icmp eq %struct.mmsghdr* %115, %119
  %121 = and i1 %118, %120
  br i1 %121, label %122, label %124

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"struct.base::StackAllocator<mmsghdr, 17>::Source", %"struct.base::StackAllocator<mmsghdr, 17>::Source"* %117, i64 0, i32 1
  store i8 0, i8* %123, align 8
  br label %126

124:                                              ; preds = %114
  %125 = inttoptr i64 %111 to i8*
  tail call void @_ZdlPv(i8* %125) #14
  br label %126

126:                                              ; preds = %109, %122, %124
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listINS_10unique_ptrIN3net14DatagramBufferENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE13__move_assignERS9_NS_17integral_constantIbLb1EEE(%"class.std::__1::list"*, %"class.std::__1::list"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %37, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %11, i64 0, i32 1
  %13 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %8, i64 0, i32 0
  %16 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 1
  %18 = bitcast %"struct.std::__1::__list_node_base"** %17 to i64*
  store i64 %14, i64* %18, align 8
  %19 = bitcast %"struct.std::__1::__list_node_base"* %8 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64**
  %22 = load i64*, i64** %21, align 8
  store i64 %20, i64* %22, align 8
  store i64 0, i64* %3, align 8
  %23 = icmp eq %"struct.std::__1::__list_node_base"* %8, %9
  br i1 %23, label %37, label %24

24:                                               ; preds = %6, %34
  %25 = phi %"struct.std::__1::__list_node_base"* [ %27, %34 ], [ %8, %6 ]
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 0, i32 1
  %27 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 1
  %29 = bitcast %"struct.std::__1::__list_node_base"* %28 to %"class.net::DatagramBuffer"**
  %30 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %29, align 8
  store %"class.net::DatagramBuffer"* null, %"class.net::DatagramBuffer"** %29, align 8
  %31 = icmp eq %"class.net::DatagramBuffer"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  tail call void @_ZN3net14DatagramBufferD1Ev(%"class.net::DatagramBuffer"* nonnull %30) #15
  %33 = bitcast %"class.net::DatagramBuffer"* %30 to i8*
  tail call void @_ZdlPv(i8* %33) #14
  br label %34

34:                                               ; preds = %32, %24
  %35 = bitcast %"struct.std::__1::__list_node_base"* %25 to i8*
  tail call void @_ZdlPv(i8* %35) #14
  %36 = icmp eq %"struct.std::__1::__list_node_base"* %27, %9
  br i1 %36, label %37, label %24

37:                                               ; preds = %34, %2, %6
  %38 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %66, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %1, i64 0, i32 0, i32 0, i32 1
  %44 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %1, i64 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %45, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %46, i64 0, i32 1
  %48 = bitcast %"struct.std::__1::__list_node_base"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %44, i64 0, i32 0
  %51 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %51, i64 0, i32 1
  %53 = bitcast %"struct.std::__1::__list_node_base"** %52 to i64*
  store i64 %49, i64* %53, align 8
  %54 = bitcast %"struct.std::__1::__list_node_base"* %44 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.std::__1::__list_node_base"** %47 to i64**
  %57 = load i64*, i64** %56, align 8
  store i64 %55, i64* %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %59 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %59, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %44, %"struct.std::__1::__list_node_base"** %60, align 8
  %61 = bitcast %"class.std::__1::list"* %0 to i64*
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %54, align 8
  store %"struct.std::__1::__list_node_base"* %46, %"struct.std::__1::__list_node_base"** %58, align 8
  store %"struct.std::__1::__list_node_base"* %42, %"struct.std::__1::__list_node_base"** %47, align 8
  %63 = load i64, i64* %38, align 8
  %64 = load i64, i64* %3, align 8
  %65 = add i64 %64, %63
  store i64 %65, i64* %3, align 8
  store i64 0, i64* %38, align 8
  br label %66

66:                                               ; preds = %37, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14UDPSocketPosixEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.net::UDPSocketPosix"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.net::UDPSocketPosix"*)**
  %21 = load void (%"class.net::UDPSocketPosix"*)*, void (%"class.net::UDPSocketPosix"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.net::UDPSocketPosix"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.net::UDPSocketPosix"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.net::UDPSocketPosix"* %12) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net14UDPSocketPosixEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net20UDPSocketPosixSenderEFNS3_10SendResultEiNSt3__14listINS6_10unique_ptrINS3_14DatagramBufferENS6_14default_deleteIS9_EEEENS6_9allocatorISC_EEEEEJ13scoped_refptrIS4_EiSF_EEEFS5_vEE7RunOnceEPNS0_13BindStateBaseE(%"struct.net::SendResult"* noalias sret, %"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %class.scoped_refptr*
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i32*
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.std::__1::list"*
  %10 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %11 = load i64, i64* %10, align 8, !noalias !49
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1, i32 1
  %13 = bitcast void ()** %12 to i64*
  %14 = load i64, i64* %13, align 8, !noalias !49
  tail call void @_ZN4base8internal13FunctorTraitsIMN3net20UDPSocketPosixSenderEFNS2_10SendResultEiNSt3__14listINS5_10unique_ptrINS2_14DatagramBufferENS5_14default_deleteIS8_EEEENS5_9allocatorISB_EEEEEvE6InvokeISG_13scoped_refptrIS3_EJiSE_EEES4_T_OT0_DpOT1_(%"struct.net::SendResult"* sret %0, i64 %11, i64 %14, %class.scoped_refptr* dereferenceable(8) %5, i32* dereferenceable(4) %7, %"class.std::__1::list"* dereferenceable(24) %9) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal13FunctorTraitsIMN3net20UDPSocketPosixSenderEFNS2_10SendResultEiNSt3__14listINS5_10unique_ptrINS2_14DatagramBufferENS5_14default_deleteIS8_EEEENS5_9allocatorISB_EEEEEvE6InvokeISG_13scoped_refptrIS3_EJiSE_EEES4_T_OT0_DpOT1_(%"struct.net::SendResult"* noalias sret, i64, i64, %class.scoped_refptr* dereferenceable(8), i32* dereferenceable(4), %"class.std::__1::list"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.std::__1::list", align 8
  %8 = bitcast %class.scoped_refptr* %3 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 %2
  %11 = bitcast i8* %10 to %"class.net::UDPSocketPosixSender"*
  %12 = and i64 %1, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %6
  %15 = bitcast i8* %10 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = add i64 %1, -1
  %18 = getelementptr i8, i8* %16, i64 %17
  %19 = bitcast i8* %18 to void (%"struct.net::SendResult"*, %"class.net::UDPSocketPosixSender"*, i32, %"class.std::__1::list"*)**
  %20 = load void (%"struct.net::SendResult"*, %"class.net::UDPSocketPosixSender"*, i32, %"class.std::__1::list"*)*, void (%"struct.net::SendResult"*, %"class.net::UDPSocketPosixSender"*, i32, %"class.std::__1::list"*)** %19, align 8
  br label %23

21:                                               ; preds = %6
  %22 = inttoptr i64 %1 to void (%"struct.net::SendResult"*, %"class.net::UDPSocketPosixSender"*, i32, %"class.std::__1::list"*)*
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi void (%"struct.net::SendResult"*, %"class.net::UDPSocketPosixSender"*, i32, %"class.std::__1::list"*)* [ %20, %14 ], [ %22, %21 ]
  %25 = load i32, i32* %4, align 4
  %26 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %7, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %7, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %26, %"struct.std::__1::__list_node_base"** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %7, i64 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %26, %"struct.std::__1::__list_node_base"** %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %55, label %33

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0, i32 1
  %35 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %37, i64 0, i32 1
  %39 = bitcast %"struct.std::__1::__list_node_base"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %35, i64 0, i32 0
  %42 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %44 = bitcast %"struct.std::__1::__list_node_base"** %43 to i64*
  store i64 %40, i64* %44, align 8
  %45 = bitcast %"struct.std::__1::__list_node_base"* %35 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"struct.std::__1::__list_node_base"** %38 to i64**
  %48 = load i64*, i64** %47, align 8
  store i64 %46, i64* %48, align 8
  %49 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %27, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %49, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %35, %"struct.std::__1::__list_node_base"** %50, align 8
  %51 = ptrtoint %"struct.std::__1::__list_node_base"* %49 to i64
  store i64 %51, i64* %45, align 8
  store %"struct.std::__1::__list_node_base"* %37, %"struct.std::__1::__list_node_base"** %27, align 8
  store %"struct.std::__1::__list_node_base"* %26, %"struct.std::__1::__list_node_base"** %38, align 8
  %52 = load i64, i64* %30, align 8
  %53 = load i64, i64* %29, align 8
  %54 = add i64 %53, %52
  store i64 %54, i64* %29, align 8
  store i64 0, i64* %30, align 8
  br label %55

55:                                               ; preds = %23, %33
  call void %24(%"struct.net::SendResult"* sret %0, %"class.net::UDPSocketPosixSender"* %11, i32 %25, %"class.std::__1::list"* nonnull %7) #15
  %56 = load i64, i64* %29, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %86, label %58

58:                                               ; preds = %55
  %59 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %28, align 8
  %60 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %27, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %62 = bitcast %"struct.std::__1::__list_node_base"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %59, i64 0, i32 0
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = bitcast %"struct.std::__1::__list_node_base"** %66 to i64*
  store i64 %63, i64* %67, align 8
  %68 = bitcast %"struct.std::__1::__list_node_base"* %59 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"struct.std::__1::__list_node_base"** %61 to i64**
  %71 = load i64*, i64** %70, align 8
  store i64 %69, i64* %71, align 8
  store i64 0, i64* %29, align 8
  %72 = icmp eq %"struct.std::__1::__list_node_base"* %59, %26
  br i1 %72, label %86, label %73

73:                                               ; preds = %58, %83
  %74 = phi %"struct.std::__1::__list_node_base"* [ %76, %83 ], [ %59, %58 ]
  %75 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %74, i64 0, i32 1
  %76 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %74, i64 1
  %78 = bitcast %"struct.std::__1::__list_node_base"* %77 to %"class.net::DatagramBuffer"**
  %79 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %78, align 8
  store %"class.net::DatagramBuffer"* null, %"class.net::DatagramBuffer"** %78, align 8
  %80 = icmp eq %"class.net::DatagramBuffer"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %73
  call void @_ZN3net14DatagramBufferD1Ev(%"class.net::DatagramBuffer"* nonnull %79) #15
  %82 = bitcast %"class.net::DatagramBuffer"* %79 to i8*
  call void @_ZdlPv(i8* %82) #14
  br label %83

83:                                               ; preds = %81, %73
  %84 = bitcast %"struct.std::__1::__list_node_base"* %74 to i8*
  call void @_ZdlPv(i8* %84) #14
  %85 = icmp eq %"struct.std::__1::__list_node_base"* %76, %26
  br i1 %85, label %86, label %73

86:                                               ; preds = %83, %55, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net20UDPSocketPosixSenderEFNS2_10SendResultEiNSt3__14listINS5_10unique_ptrINS2_14DatagramBufferENS5_14default_deleteIS8_EEEENS5_9allocatorISB_EEEEEJ13scoped_refptrIS3_EiSE_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to %"struct.base::internal::BindState.151"*
  tail call void @_ZN4base8internal9BindStateIMN3net20UDPSocketPosixSenderEFNS2_10SendResultEiNSt3__14listINS5_10unique_ptrINS2_14DatagramBufferENS5_14default_deleteIS8_EEEENS5_9allocatorISB_EEEEEJ13scoped_refptrIS3_EiSE_EED2Ev(%"struct.base::internal::BindState.151"* nonnull %4) #15
  %5 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #14
  br label %6

6:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net20UDPSocketPosixSenderEFNS2_10SendResultEiNSt3__14listINS5_10unique_ptrINS2_14DatagramBufferENS5_14default_deleteIS8_EEEENS5_9allocatorISB_EEEEEJ13scoped_refptrIS3_EiSE_EED2Ev(%"struct.base::internal::BindState.151"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::internal::BindState.151", %"struct.base::internal::BindState.151"* %0, i64 0, i32 2, i32 0, i32 2
  %3 = getelementptr inbounds %"struct.base::internal::BindState.151", %"struct.base::internal::BindState.151"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %37, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.base::internal::BindState.151", %"struct.base::internal::BindState.151"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %8 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__tuple_leaf.156", %"class.std::__1::__tuple_leaf.156"* %2, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::__tuple_leaf.156", %"class.std::__1::__tuple_leaf.156"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %11, i64 0, i32 1
  %13 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %8, i64 0, i32 0
  %16 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 1
  %18 = bitcast %"struct.std::__1::__list_node_base"** %17 to i64*
  store i64 %14, i64* %18, align 8
  %19 = bitcast %"struct.std::__1::__list_node_base"* %8 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64**
  %22 = load i64*, i64** %21, align 8
  store i64 %20, i64* %22, align 8
  store i64 0, i64* %3, align 8
  %23 = icmp eq %"struct.std::__1::__list_node_base"* %8, %9
  br i1 %23, label %37, label %24

24:                                               ; preds = %6, %34
  %25 = phi %"struct.std::__1::__list_node_base"* [ %27, %34 ], [ %8, %6 ]
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 0, i32 1
  %27 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 1
  %29 = bitcast %"struct.std::__1::__list_node_base"* %28 to %"class.net::DatagramBuffer"**
  %30 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %29, align 8
  store %"class.net::DatagramBuffer"* null, %"class.net::DatagramBuffer"** %29, align 8
  %31 = icmp eq %"class.net::DatagramBuffer"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  tail call void @_ZN3net14DatagramBufferD1Ev(%"class.net::DatagramBuffer"* nonnull %30) #15
  %33 = bitcast %"class.net::DatagramBuffer"* %30 to i8*
  tail call void @_ZdlPv(i8* %33) #14
  br label %34

34:                                               ; preds = %32, %24
  %35 = bitcast %"struct.std::__1::__list_node_base"* %25 to i8*
  tail call void @_ZdlPv(i8* %35) #14
  %36 = icmp eq %"struct.std::__1::__list_node_base"* %27, %9
  br i1 %36, label %37, label %24

37:                                               ; preds = %34, %6, %1
  %38 = getelementptr inbounds %"struct.base::internal::BindState.151", %"struct.base::internal::BindState.151"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.net::UDPSocketPosixSender"*, %"class.net::UDPSocketPosixSender"** %38, align 8
  %40 = icmp eq %"class.net::UDPSocketPosixSender"* %39, null
  br i1 %40, label %53, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.net::UDPSocketPosixSender", %"class.net::UDPSocketPosixSender"* %39, i64 0, i32 1
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw sub i32* %43, i32 1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %53

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %42, i64 -2
  %48 = bitcast %"class.base::RefCountedThreadSafe"* %47 to %"class.net::UDPSocketPosixSender"*
  %49 = bitcast %"class.base::RefCountedThreadSafe"* %47 to void (%"class.net::UDPSocketPosixSender"*)***
  %50 = load void (%"class.net::UDPSocketPosixSender"*)**, void (%"class.net::UDPSocketPosixSender"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.net::UDPSocketPosixSender"*)*, void (%"class.net::UDPSocketPosixSender"*)** %50, i64 1
  %52 = load void (%"class.net::UDPSocketPosixSender"*)*, void (%"class.net::UDPSocketPosixSender"*)** %51, align 8
  tail call void %52(%"class.net::UDPSocketPosixSender"* nonnull %48) #15
  br label %53

53:                                               ; preds = %37, %41, %46
  ret void
}

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #4

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net14UDPSocketPosixEFvNS3_10SendResultEEJNS_7WeakPtrIS4_EEEEEFvS5_EE7RunOnceEPNS0_13BindStateBaseEOS5_(%"class.base::internal::BindStateBase"*, %"struct.net::SendResult"* dereferenceable(32)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::WeakPtr"*
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #15
  br i1 %7, label %8, label %19

8:                                                ; preds = %2
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.net::UDPSocketPosix"**
  %11 = load %"class.net::UDPSocketPosix"*, %"class.net::UDPSocketPosix"** %10, align 8
  %12 = icmp eq %"class.net::UDPSocketPosix"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %17 = bitcast void ()** %16 to i64*
  %18 = load i64, i64* %17, align 8
  tail call void @_ZN4base8internal13FunctorTraitsIMN3net14UDPSocketPosixEFvNS2_10SendResultEEvE6InvokeIS6_NS_7WeakPtrIS3_EEJS4_EEEvT_OT0_DpOT1_(i64 %15, i64 %18, %"class.base::WeakPtr"* dereferenceable(16) %5, %"struct.net::SendResult"* dereferenceable(32) %1) #15
  br label %19

19:                                               ; preds = %2, %8, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal13FunctorTraitsIMN3net14UDPSocketPosixEFvNS2_10SendResultEEvE6InvokeIS6_NS_7WeakPtrIS3_EEJS4_EEEvT_OT0_DpOT1_(i64, i64, %"class.base::WeakPtr"* dereferenceable(16), %"struct.net::SendResult"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"struct.net::SendResult", align 8
  %7 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #15
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.13, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0)) #15
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #15
  br label %12

12:                                               ; preds = %9, %4
  %13 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #15
  %14 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %15 = bitcast i64* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = select i1 %13, i8* %16, i8* null
  %18 = getelementptr inbounds i8, i8* %17, i64 %1
  %19 = bitcast i8* %18 to %"class.net::UDPSocketPosix"*
  %20 = and i64 %0, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %12
  %23 = bitcast i8* %18 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = add i64 %0, -1
  %26 = getelementptr i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to void (%"class.net::UDPSocketPosix"*, %"struct.net::SendResult"*)**
  %28 = load void (%"class.net::UDPSocketPosix"*, %"struct.net::SendResult"*)*, void (%"class.net::UDPSocketPosix"*, %"struct.net::SendResult"*)** %27, align 8
  br label %31

29:                                               ; preds = %12
  %30 = inttoptr i64 %0 to void (%"class.net::UDPSocketPosix"*, %"struct.net::SendResult"*)*
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi void (%"class.net::UDPSocketPosix"*, %"struct.net::SendResult"*)* [ %28, %22 ], [ %30, %29 ]
  %33 = bitcast %"struct.net::SendResult"* %3 to i64*
  %34 = bitcast %"struct.net::SendResult"* %6 to i64*
  %35 = load i64, i64* %33, align 8
  store i64 %35, i64* %34, align 8
  %36 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %6, i64 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %36, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %36, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %37, %"struct.std::__1::__list_node_base"** %38, align 8
  %39 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %6, i64 0, i32 2, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %37, %"struct.std::__1::__list_node_base"** %39, align 8
  %40 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %6, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %3, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %67, label %44

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %3, i64 0, i32 2, i32 0, i32 0, i32 1
  %46 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %45, align 8
  %47 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %48 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %47, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %48, i64 0, i32 1
  %50 = bitcast %"struct.std::__1::__list_node_base"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %46, i64 0, i32 0
  %53 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %53, i64 0, i32 1
  %55 = bitcast %"struct.std::__1::__list_node_base"** %54 to i64*
  store i64 %51, i64* %55, align 8
  %56 = bitcast %"struct.std::__1::__list_node_base"* %46 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.std::__1::__list_node_base"** %49 to i64**
  %59 = load i64*, i64** %58, align 8
  store i64 %57, i64* %59, align 8
  %60 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %38, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %46, %"struct.std::__1::__list_node_base"** %61, align 8
  %62 = bitcast %"class.std::__1::list"* %36 to i64*
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %56, align 8
  store %"struct.std::__1::__list_node_base"* %48, %"struct.std::__1::__list_node_base"** %38, align 8
  store %"struct.std::__1::__list_node_base"* %37, %"struct.std::__1::__list_node_base"** %49, align 8
  %64 = load i64, i64* %41, align 8
  %65 = load i64, i64* %40, align 8
  %66 = add i64 %65, %64
  store i64 %66, i64* %40, align 8
  store i64 0, i64* %41, align 8
  br label %67

67:                                               ; preds = %31, %44
  call void %32(%"class.net::UDPSocketPosix"* %19, %"struct.net::SendResult"* nonnull %6) #15
  %68 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %6, i64 0, i32 2, i32 0
  %69 = load i64, i64* %40, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %101, label %71

71:                                               ; preds = %67
  %72 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %39, align 8
  %73 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %68, i64 0, i32 0
  %74 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %68, i64 0, i32 0, i32 0
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %72, i64 0, i32 0
  %80 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %79, align 8
  %81 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %80, i64 0, i32 1
  %82 = bitcast %"struct.std::__1::__list_node_base"** %81 to i64*
  store i64 %78, i64* %82, align 8
  %83 = bitcast %"struct.std::__1::__list_node_base"* %72 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64**
  %86 = load i64*, i64** %85, align 8
  store i64 %84, i64* %86, align 8
  store i64 0, i64* %40, align 8
  %87 = icmp eq %"struct.std::__1::__list_node_base"* %72, %73
  br i1 %87, label %101, label %88

88:                                               ; preds = %71, %98
  %89 = phi %"struct.std::__1::__list_node_base"* [ %91, %98 ], [ %72, %71 ]
  %90 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %89, i64 0, i32 1
  %91 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %90, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %89, i64 1
  %93 = bitcast %"struct.std::__1::__list_node_base"* %92 to %"class.net::DatagramBuffer"**
  %94 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %93, align 8
  store %"class.net::DatagramBuffer"* null, %"class.net::DatagramBuffer"** %93, align 8
  %95 = icmp eq %"class.net::DatagramBuffer"* %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %88
  call void @_ZN3net14DatagramBufferD1Ev(%"class.net::DatagramBuffer"* nonnull %94) #15
  %97 = bitcast %"class.net::DatagramBuffer"* %94 to i8*
  call void @_ZdlPv(i8* %97) #14
  br label %98

98:                                               ; preds = %96, %88
  %99 = bitcast %"struct.std::__1::__list_node_base"* %89 to i8*
  call void @_ZdlPv(i8* %99) #14
  %100 = icmp eq %"struct.std::__1::__list_node_base"* %91, %73
  br i1 %100, label %101, label %88

101:                                              ; preds = %98, %67, %71
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net14UDPSocketPosixEFvNS2_10SendResultEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #15
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net14UDPSocketPosixEFvNS3_10SendResultEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #15
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::UDPSocketPosix"**
  %9 = load %"class.net::UDPSocketPosix"*, %"class.net::UDPSocketPosix"** %8, align 8
  %10 = icmp ne %"class.net::UDPSocketPosix"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #15
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #3

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #4

declare zeroext i1 @_ZN4base10TaskRunner16PostTaskAndReplyERKNS_8LocationENS_12OnceCallbackIFvvEEES6_(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.171"*, %"class.base::OnceCallback.171"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal20ReturnAsParamAdapterIN3net10SendResultEEEvNS_12OnceCallbackIFT_vEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEE(%"class.base::OnceCallback.86"*, %"class.std::__1::unique_ptr.165"*) #0 comdat {
  %3 = alloca %"class.base::OnceCallback.86", align 8
  %4 = tail call i8* @_Znwm(i64 32) #14
  %5 = bitcast i8* %4 to %"struct.net::SendResult"*
  %6 = bitcast %"class.base::OnceCallback.86"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15, !noalias !54
  %7 = getelementptr inbounds %"class.base::OnceCallback.86", %"class.base::OnceCallback.86"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback.86"* %0 to i64*
  %9 = load i64, i64* %8, align 8, !noalias !54
  %10 = bitcast %"class.base::OnceCallback.86"* %3 to i64*
  store i64 %9, i64* %10, align 8, !noalias !54
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8, !noalias !54
  %11 = getelementptr inbounds %"class.base::OnceCallback.86", %"class.base::OnceCallback.86"* %3, i64 0, i32 0
  %12 = inttoptr i64 %9 to %"class.base::internal::BindStateBase"*
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"struct.net::SendResult"*, %"class.base::internal::BindStateBase"*)**
  %15 = load void (%"struct.net::SendResult"*, %"class.base::internal::BindStateBase"*)*, void (%"struct.net::SendResult"*, %"class.base::internal::BindStateBase"*)** %14, align 8, !noalias !54
  tail call void %15(%"struct.net::SendResult"* nonnull sret %5, %"class.base::internal::BindStateBase"* %12) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15, !noalias !54
  call void @_ZNSt3__110unique_ptrIN3net10SendResultENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.165"* %1, %"struct.net::SendResult"* nonnull %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12ReplyAdapterIN3net10SendResultES3_EEvNS_12OnceCallbackIFvT0_EEEPNSt3__110unique_ptrIT_NS8_14default_deleteISA_EEEE(%"class.base::OnceCallback.87"*, %"class.std::__1::unique_ptr.165"*) #0 comdat {
  %3 = alloca %"class.base::OnceCallback.87", align 8
  %4 = alloca %"struct.net::SendResult", align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.net::SendResult"*, %"struct.net::SendResult"** %5, align 8
  %7 = bitcast %"struct.net::SendResult"* %6 to i64*
  %8 = bitcast %"struct.net::SendResult"* %4 to i64*
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %4, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %10, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %10, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %11, %"struct.std::__1::__list_node_base"** %12, align 8
  %13 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %4, i64 0, i32 2, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %11, %"struct.std::__1::__list_node_base"** %13, align 8
  %14 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %4, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %6, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %41, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %6, i64 0, i32 2, i32 0, i32 0, i32 1
  %20 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %19, align 8
  %21 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__list_node_base"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %20, i64 0, i32 0
  %27 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %27, i64 0, i32 1
  %29 = bitcast %"struct.std::__1::__list_node_base"** %28 to i64*
  store i64 %25, i64* %29, align 8
  %30 = bitcast %"struct.std::__1::__list_node_base"* %20 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"struct.std::__1::__list_node_base"** %23 to i64**
  %33 = load i64*, i64** %32, align 8
  store i64 %31, i64* %33, align 8
  %34 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %12, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %34, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %20, %"struct.std::__1::__list_node_base"** %35, align 8
  %36 = bitcast %"class.std::__1::list"* %10 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %30, align 8
  store %"struct.std::__1::__list_node_base"* %22, %"struct.std::__1::__list_node_base"** %12, align 8
  store %"struct.std::__1::__list_node_base"* %11, %"struct.std::__1::__list_node_base"** %23, align 8
  %38 = load i64, i64* %15, align 8
  %39 = load i64, i64* %14, align 8
  %40 = add i64 %39, %38
  store i64 %40, i64* %14, align 8
  store i64 0, i64* %15, align 8
  br label %41

41:                                               ; preds = %2, %18
  %42 = bitcast %"class.base::OnceCallback.87"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #15
  %43 = getelementptr inbounds %"class.base::OnceCallback.87", %"class.base::OnceCallback.87"* %0, i64 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.base::OnceCallback.87"* %0 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.base::OnceCallback.87"* %3 to i64*
  store i64 %45, i64* %46, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %43, align 8
  %47 = getelementptr inbounds %"class.base::OnceCallback.87", %"class.base::OnceCallback.87"* %3, i64 0, i32 0
  %48 = inttoptr i64 %45 to %"class.base::internal::BindStateBase"*
  %49 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %48, i64 0, i32 1
  %50 = bitcast void ()** %49 to void (%"class.base::internal::BindStateBase"*, %"struct.net::SendResult"*)**
  %51 = load void (%"class.base::internal::BindStateBase"*, %"struct.net::SendResult"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.net::SendResult"*)** %50, align 8
  call void %51(%"class.base::internal::BindStateBase"* %48, %"struct.net::SendResult"* nonnull dereferenceable(32) %4) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %47) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #15
  %52 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %4, i64 0, i32 2, i32 0
  %53 = load i64, i64* %14, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %85, label %55

55:                                               ; preds = %41
  %56 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %13, align 8
  %57 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %52, i64 0, i32 0
  %58 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %52, i64 0, i32 0, i32 0
  %59 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %59, i64 0, i32 1
  %61 = bitcast %"struct.std::__1::__list_node_base"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %56, i64 0, i32 0
  %64 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %64, i64 0, i32 1
  %66 = bitcast %"struct.std::__1::__list_node_base"** %65 to i64*
  store i64 %62, i64* %66, align 8
  %67 = bitcast %"struct.std::__1::__list_node_base"* %56 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"struct.std::__1::__list_node_base"** %60 to i64**
  %70 = load i64*, i64** %69, align 8
  store i64 %68, i64* %70, align 8
  store i64 0, i64* %14, align 8
  %71 = icmp eq %"struct.std::__1::__list_node_base"* %56, %57
  br i1 %71, label %85, label %72

72:                                               ; preds = %55, %82
  %73 = phi %"struct.std::__1::__list_node_base"* [ %75, %82 ], [ %56, %55 ]
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 1
  %77 = bitcast %"struct.std::__1::__list_node_base"* %76 to %"class.net::DatagramBuffer"**
  %78 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %77, align 8
  store %"class.net::DatagramBuffer"* null, %"class.net::DatagramBuffer"** %77, align 8
  %79 = icmp eq %"class.net::DatagramBuffer"* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %72
  call void @_ZN3net14DatagramBufferD1Ev(%"class.net::DatagramBuffer"* nonnull %78) #15
  %81 = bitcast %"class.net::DatagramBuffer"* %78 to i8*
  call void @_ZdlPv(i8* %81) #14
  br label %82

82:                                               ; preds = %80, %72
  %83 = bitcast %"struct.std::__1::__list_node_base"* %73 to i8*
  call void @_ZdlPv(i8* %83) #14
  %84 = icmp eq %"struct.std::__1::__list_node_base"* %75, %57
  br i1 %84, label %85, label %72

85:                                               ; preds = %82, %41, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFN3net10SendResultEvEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEJS7_SD_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.86", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::OnceCallback.86"*, %"class.std::__1::unique_ptr.165"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %7 = bitcast void ()** %6 to %"class.std::__1::unique_ptr.165"**
  %8 = bitcast %"class.base::OnceCallback.86"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = load void (%"class.base::OnceCallback.86"*, %"class.std::__1::unique_ptr.165"*)*, void (%"class.base::OnceCallback.86"*, %"class.std::__1::unique_ptr.165"*)** %4, align 8
  %10 = bitcast void ()** %5 to %"class.base::internal::BindStateBase"**
  %11 = bitcast void ()** %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.86"* %2 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %7, align 8
  call void %9(%"class.base::OnceCallback.86"* nonnull %2, %"class.std::__1::unique_ptr.165"* %14) #15
  %15 = getelementptr inbounds %"class.base::OnceCallback.86", %"class.base::OnceCallback.86"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFN3net10SendResultEvEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_SC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #15
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN3net10SendResultENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.165"*, %"struct.net::SendResult"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.net::SendResult"*, %"struct.net::SendResult"** %3, align 8
  store %"struct.net::SendResult"* %1, %"struct.net::SendResult"** %3, align 8
  %5 = icmp eq %"struct.net::SendResult"* %4, null
  br i1 %5, label %44, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %4, i64 0, i32 2, i32 0
  %8 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %4, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %42, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"struct.net::SendResult", %"struct.net::SendResult"* %4, i64 0, i32 2, i32 0, i32 0, i32 1
  %13 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %7, i64 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %7, i64 0, i32 0, i32 0
  %16 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 1
  %18 = bitcast %"struct.std::__1::__list_node_base"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %13, i64 0, i32 0
  %21 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %21, i64 0, i32 1
  %23 = bitcast %"struct.std::__1::__list_node_base"** %22 to i64*
  store i64 %19, i64* %23, align 8
  %24 = bitcast %"struct.std::__1::__list_node_base"* %13 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"struct.std::__1::__list_node_base"** %17 to i64**
  %27 = load i64*, i64** %26, align 8
  store i64 %25, i64* %27, align 8
  store i64 0, i64* %8, align 8
  %28 = icmp eq %"struct.std::__1::__list_node_base"* %13, %14
  br i1 %28, label %42, label %29

29:                                               ; preds = %11, %39
  %30 = phi %"struct.std::__1::__list_node_base"* [ %32, %39 ], [ %13, %11 ]
  %31 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %30, i64 0, i32 1
  %32 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %30, i64 1
  %34 = bitcast %"struct.std::__1::__list_node_base"* %33 to %"class.net::DatagramBuffer"**
  %35 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %34, align 8
  store %"class.net::DatagramBuffer"* null, %"class.net::DatagramBuffer"** %34, align 8
  %36 = icmp eq %"class.net::DatagramBuffer"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %29
  tail call void @_ZN3net14DatagramBufferD1Ev(%"class.net::DatagramBuffer"* nonnull %35) #15
  %38 = bitcast %"class.net::DatagramBuffer"* %35 to i8*
  tail call void @_ZdlPv(i8* %38) #14
  br label %39

39:                                               ; preds = %37, %29
  %40 = bitcast %"struct.std::__1::__list_node_base"* %30 to i8*
  tail call void @_ZdlPv(i8* %40) #14
  %41 = icmp eq %"struct.std::__1::__list_node_base"* %32, %14
  br i1 %41, label %42, label %29

42:                                               ; preds = %39, %6, %11
  %43 = bitcast %"struct.net::SendResult"* %4 to i8*
  tail call void @_ZdlPv(i8* %43) #14
  br label %44

44:                                               ; preds = %2, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvN3net10SendResultEEEEPNSt3__110unique_ptrIS5_NS8_14default_deleteIS5_EEEEEJS7_NS0_12OwnedWrapperISC_NSA_ISC_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.87", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::OnceCallback.87"*, %"class.std::__1::unique_ptr.165"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %7 = bitcast void ()** %6 to %"class.std::__1::unique_ptr.165"**
  %8 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %7, align 8
  %9 = bitcast %"class.base::OnceCallback.87"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = load void (%"class.base::OnceCallback.87"*, %"class.std::__1::unique_ptr.165"*)*, void (%"class.base::OnceCallback.87"*, %"class.std::__1::unique_ptr.165"*)** %4, align 8
  %11 = bitcast void ()** %5 to %"class.base::internal::BindStateBase"**
  %12 = bitcast void ()** %5 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.87"* %2 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  call void %10(%"class.base::OnceCallback.87"* nonnull %2, %"class.std::__1::unique_ptr.165"* %8) #15
  %15 = getelementptr inbounds %"class.base::OnceCallback.87", %"class.base::OnceCallback.87"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvN3net10SendResultEEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_NS0_12OwnedWrapperISB_NS9_ISB_EEEEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.std::__1::unique_ptr.165"**
  %6 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %5, align 8
  store %"class.std::__1::unique_ptr.165"* null, %"class.std::__1::unique_ptr.165"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.165"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  tail call void @_ZNSt3__110unique_ptrIN3net10SendResultENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.165"* nonnull %6, %"struct.net::SendResult"* null) #15
  %9 = bitcast %"class.std::__1::unique_ptr.165"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #14
  br label %10

10:                                               ; preds = %3, %8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = bitcast void ()** %11 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %12) #15
  %13 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #14
  br label %14

14:                                               ; preds = %10, %1
  ret void
}

declare void @_ZN3net18DatagramBufferPoolC1Em(%"class.net::DatagramBufferPool"*, i64) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind }
attributes #16 = { nounwind readnone }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN3net14UDPSocketPosix23ReceivedActivityMonitorEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN3net14UDPSocketPosix23ReceivedActivityMonitorEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base13BindRepeatingIRMN3net14UDPSocketPosix23ReceivedActivityMonitorEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!7 = distinct !{!7, !"_ZN4base13BindRepeatingIRMN3net14UDPSocketPosix23ReceivedActivityMonitorEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS7_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!8 = !{!"branch_weights", i32 2000, i32 1}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZZNK3net14UDPSocketPosix15GetLocalAddressEPNS_10IPEndPointEENK3$_0clEv: argument 0"}
!11 = distinct !{!11, !"_ZZNK3net14UDPSocketPosix15GetLocalAddressEPNS_10IPEndPointEENK3$_0clEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZZN3net14UDPSocketPosix7ConnectERKNS_10IPEndPointEENK3$_1clEv: argument 0"}
!14 = distinct !{!14, !"_ZZN3net14UDPSocketPosix7ConnectERKNS_10IPEndPointEENK3$_1clEv"}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
!17 = !{!"branch_weights", i32 1, i32 2000}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN3net14UDPSocketPosixEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN3net14UDPSocketPosixEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!21 = distinct !{!21, !22, !"_ZN4base13BindRepeatingIRMN3net14UDPSocketPosixEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!22 = distinct !{!22, !"_ZN4base13BindRepeatingIRMN3net14UDPSocketPosixEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net20UDPSocketPosixSenderEFNS3_10SendResultEiNSt3__14listINS6_10unique_ptrINS3_14DatagramBufferENS6_14default_deleteIS9_EEEENS6_9allocatorISC_EEEEEJR13scoped_refptrIS4_ERiSF_EEEDcOT0_DpOT1_: argument 0"}
!25 = distinct !{!25, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net20UDPSocketPosixSenderEFNS3_10SendResultEiNSt3__14listINS6_10unique_ptrINS3_14DatagramBufferENS6_14default_deleteIS9_EEEENS6_9allocatorISC_EEEEEJR13scoped_refptrIS4_ERiSF_EEEDcOT0_DpOT1_"}
!26 = distinct !{!26, !27, !"_ZN4base8BindOnceIMN3net20UDPSocketPosixSenderEFNS1_10SendResultEiNSt3__14listINS4_10unique_ptrINS1_14DatagramBufferENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEEEJR13scoped_refptrIS2_ERiSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_: argument 0"}
!27 = distinct !{!27, !"_ZN4base8BindOnceIMN3net20UDPSocketPosixSenderEFNS1_10SendResultEiNSt3__14listINS4_10unique_ptrINS1_14DatagramBufferENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEEEJR13scoped_refptrIS2_ERiSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK4base14WeakPtrFactoryIN3net14UDPSocketPosixEE10GetWeakPtrEv: argument 0"}
!30 = distinct !{!30, !"_ZNK4base14WeakPtrFactoryIN3net14UDPSocketPosixEE10GetWeakPtrEv"}
!31 = !{!32, !34}
!32 = distinct !{!32, !33, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14UDPSocketPosixEFvNS3_10SendResultEEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!33 = distinct !{!33, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net14UDPSocketPosixEFvNS3_10SendResultEEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!34 = distinct !{!34, !35, !"_ZN4base8BindOnceIMN3net14UDPSocketPosixEFvNS1_10SendResultEEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!35 = distinct !{!35, !"_ZN4base8BindOnceIMN3net14UDPSocketPosixEFvNS1_10SendResultEEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!36 = !{!37, !39}
!37 = distinct !{!37, !38, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFN3net10SendResultEvEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_RSC_EEEDcOT0_DpOT1_: argument 0"}
!38 = distinct !{!38, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFN3net10SendResultEvEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_RSC_EEEDcOT0_DpOT1_"}
!39 = distinct !{!39, !40, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFN3net10SendResultEvEEEPNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEJS5_RSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!40 = distinct !{!40, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFN3net10SendResultEvEEEPNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEJS5_RSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!41 = !{!42, !44}
!42 = distinct !{!42, !43, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvN3net10SendResultEEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_NS0_12OwnedWrapperISB_NS9_ISB_EEEEEEEDcOT0_DpOT1_: argument 0"}
!43 = distinct !{!43, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvN3net10SendResultEEEEPNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEJS6_NS0_12OwnedWrapperISB_NS9_ISB_EEEEEEEDcOT0_DpOT1_"}
!44 = distinct !{!44, !45, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvN3net10SendResultEEEEPNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEJS5_NS_8internal12OwnedWrapperISA_NS8_ISA_EEEEEEENS1_INSE_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!45 = distinct !{!45, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvN3net10SendResultEEEEPNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEJS5_NS_8internal12OwnedWrapperISA_NS8_ISA_EEEEEEENS1_INSE_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!46 = distinct !{!46, !16}
!47 = distinct !{!47, !16}
!48 = distinct !{!48, !16}
!49 = !{!50, !52}
!50 = distinct !{!50, !51, !"_ZN4base8internal12InvokeHelperILb0EN3net10SendResultEE8MakeItSoIMNS2_20UDPSocketPosixSenderEFS3_iNSt3__14listINS7_10unique_ptrINS2_14DatagramBufferENS7_14default_deleteISA_EEEENS7_9allocatorISD_EEEEEJ13scoped_refptrIS6_EiSG_EEES3_OT_DpOT0_: argument 0"}
!51 = distinct !{!51, !"_ZN4base8internal12InvokeHelperILb0EN3net10SendResultEE8MakeItSoIMNS2_20UDPSocketPosixSenderEFS3_iNSt3__14listINS7_10unique_ptrINS2_14DatagramBufferENS7_14default_deleteISA_EEEENS7_9allocatorISD_EEEEEJ13scoped_refptrIS6_EiSG_EEES3_OT_DpOT0_"}
!52 = distinct !{!52, !53, !"_ZN4base8internal7InvokerINS0_9BindStateIMN3net20UDPSocketPosixSenderEFNS3_10SendResultEiNSt3__14listINS6_10unique_ptrINS3_14DatagramBufferENS6_14default_deleteIS9_EEEENS6_9allocatorISC_EEEEEJ13scoped_refptrIS4_EiSF_EEEFS5_vEE7RunImplISH_NS6_5tupleIJSJ_iSF_EEEJLm0ELm1ELm2EEEES5_OT_OT0_NS6_16integer_sequenceImJXspT1_EEEE: argument 0"}
!53 = distinct !{!53, !"_ZN4base8internal7InvokerINS0_9BindStateIMN3net20UDPSocketPosixSenderEFNS3_10SendResultEiNSt3__14listINS6_10unique_ptrINS3_14DatagramBufferENS6_14default_deleteIS9_EEEENS6_9allocatorISC_EEEEEJ13scoped_refptrIS4_EiSF_EEEFS5_vEE7RunImplISH_NS6_5tupleIJSJ_iSF_EEEJLm0ELm1ELm2EEEES5_OT_OT0_NS6_16integer_sequenceImJXspT1_EEEE"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNO4base12OnceCallbackIFN3net10SendResultEvEE3RunEv: argument 0"}
!56 = distinct !{!56, !"_ZNO4base12OnceCallbackIFN3net10SendResultEvEE3RunEv"}
