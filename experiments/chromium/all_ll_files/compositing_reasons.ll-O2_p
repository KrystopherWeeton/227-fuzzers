; ModuleID = '../../third_party/blink/renderer/platform/graphics/compositing_reasons.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/compositing_reasons.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::(anonymous namespace)::CompositingReasonStringMap" = type { i64, i8*, i8* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8**, i8**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon, i32, i8, i8, [2 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%union.anon = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [16 x i8] }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::Vector.2" = type { %"class.WTF::VectorBuffer.3" }
%"class.WTF::VectorBuffer.3" = type { %"class.WTF::VectorBufferBase.4", [16 x i8] }
%"class.WTF::VectorBufferBase.4" = type { i16*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.9 }
%union.anon.9 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

@_ZN5blink12_GLOBAL__N_128kCompositingReasonsStringMapE = internal constant [51 x %"struct.blink::(anonymous namespace)::CompositingReasonStringMap"] [%"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([124 x i8], [124 x i8]* @.str.7, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 16, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 64, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 128, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 256, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.17, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 512, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.19, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 1024, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.21, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 2048, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.23, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 134217728, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.25, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 8192, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.27, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 16384, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.29, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 32768, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.31, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 65536, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.33, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 131072, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 262144, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.37, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 524288, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.39, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 1048576, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.41, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 2097152, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.43, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 8388608, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.45, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 16777216, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.47, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 33554432, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 67108864, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.51, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 536870912, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.53, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 1073741824, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.55, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 2147483648, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.57, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 4294967296, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.59, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 8589934592, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.61, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 17179869184, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.63, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 34359738368, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.65, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 68719476736, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.67, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 137438953472, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.69, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 274877906944, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.71, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 549755813888, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.73, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 1099511627776, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.75, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 2199023255552, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.77, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 4398046511104, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.79, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 8796093022208, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.81, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 17592186044416, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.83, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 35184372088832, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.85, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 70368744177664, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.87, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 140737488355328, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.89, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 281474976710656, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str.91, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 562949953421312, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.93, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 1125899906842624, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.95, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 2251799813685248, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.97, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 4194304, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.99, i32 0, i32 0) }, %"struct.blink::(anonymous namespace)::CompositingReasonStringMap" { i64 4503599627370496, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.101, i32 0, i32 0) }], align 16
@.str = private unnamed_addr constant [12 x i8] c"transform3D\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"Has a 3d transform\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"trivialTransform3D\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"Has a trivial 3d transform\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"video\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"Is an accelerated video\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"canvas\00", align 1
@.str.7 = private unnamed_addr constant [124 x i8] c"Is an accelerated canvas, or is a display list backed canvas that was promoted to a layer based on a performance heuristic.\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"plugin\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c"Is an accelerated plugin\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"iFrame\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"Is an accelerated iFrame\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"SVGRoot\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"Is an accelerated SVG root\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c"backfaceVisibilityHidden\00", align 1
@.str.15 = private unnamed_addr constant [32 x i8] c"Has backface-visibility: hidden\00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"activeTransformAnimation\00", align 1
@.str.17 = private unnamed_addr constant [60 x i8] c"Has an active accelerated transform animation or transition\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"activeOpacityAnimation\00", align 1
@.str.19 = private unnamed_addr constant [58 x i8] c"Has an active accelerated opacity animation or transition\00", align 1
@.str.20 = private unnamed_addr constant [22 x i8] c"activeFilterAnimation\00", align 1
@.str.21 = private unnamed_addr constant [57 x i8] c"Has an active accelerated filter animation or transition\00", align 1
@.str.22 = private unnamed_addr constant [30 x i8] c"activeBackdropFilterAnimation\00", align 1
@.str.23 = private unnamed_addr constant [66 x i8] c"Has an active accelerated backdrop filter animation or transition\00", align 1
@.str.24 = private unnamed_addr constant [10 x i8] c"xrOverlay\00", align 1
@.str.25 = private unnamed_addr constant [43 x i8] c"Is DOM overlay for WebXR immersive-ar mode\00", align 1
@.str.26 = private unnamed_addr constant [24 x i8] c"scrollDependentPosition\00", align 1
@.str.27 = private unnamed_addr constant [28 x i8] c"Is fixed or sticky position\00", align 1
@.str.28 = private unnamed_addr constant [18 x i8] c"overflowScrolling\00", align 1
@.str.29 = private unnamed_addr constant [33 x i8] c"Is a scrollable overflow element\00", align 1
@.str.30 = private unnamed_addr constant [24 x i8] c"overflowScrollingParent\00", align 1
@.str.31 = private unnamed_addr constant [33 x i8] c"Scroll parent is not an ancestor\00", align 1
@.str.32 = private unnamed_addr constant [18 x i8] c"outOfFlowClipping\00", align 1
@.str.33 = private unnamed_addr constant [22 x i8] c"Has clipping ancestor\00", align 1
@.str.34 = private unnamed_addr constant [13 x i8] c"videoOverlay\00", align 1
@.str.35 = private unnamed_addr constant [30 x i8] c"Is overlay controls for video\00", align 1
@.str.36 = private unnamed_addr constant [20 x i8] c"willChangeTransform\00", align 1
@.str.37 = private unnamed_addr constant [46 x i8] c"Has a will-change: transform compositing hint\00", align 1
@.str.38 = private unnamed_addr constant [18 x i8] c"willChangeOpacity\00", align 1
@.str.39 = private unnamed_addr constant [44 x i8] c"Has a will-change: opacity compositing hint\00", align 1
@.str.40 = private unnamed_addr constant [17 x i8] c"willChangeFilter\00", align 1
@.str.41 = private unnamed_addr constant [43 x i8] c"Has a will-change: filter compositing hint\00", align 1
@.str.42 = private unnamed_addr constant [25 x i8] c"willChangeBackdropFilter\00", align 1
@.str.43 = private unnamed_addr constant [52 x i8] c"Has a will-change: backdrop-filter compositing hint\00", align 1
@.str.44 = private unnamed_addr constant [16 x i8] c"willChangeOther\00", align 1
@.str.45 = private unnamed_addr constant [68 x i8] c"Has a will-change compositing hint other than transform and opacity\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"backdropFilter\00", align 1
@.str.47 = private unnamed_addr constant [22 x i8] c"Has a backdrop filter\00", align 1
@.str.48 = private unnamed_addr constant [19 x i8] c"backdropFilterMask\00", align 1
@.str.49 = private unnamed_addr constant [30 x i8] c"Is a mask for backdrop filter\00", align 1
@.str.50 = private unnamed_addr constant [13 x i8] c"rootScroller\00", align 1
@.str.51 = private unnamed_addr constant [29 x i8] c"Is the document.rootScroller\00", align 1
@.str.52 = private unnamed_addr constant [15 x i8] c"assumedOverlap\00", align 1
@.str.53 = private unnamed_addr constant [39 x i8] c"Might overlap other composited content\00", align 1
@.str.54 = private unnamed_addr constant [8 x i8] c"overlap\00", align 1
@.str.55 = private unnamed_addr constant [34 x i8] c"Overlaps other composited content\00", align 1
@.str.56 = private unnamed_addr constant [23 x i8] c"negativeZIndexChildren\00", align 1
@.str.57 = private unnamed_addr constant [48 x i8] c"Parent with composited negative z-index content\00", align 1
@.str.58 = private unnamed_addr constant [20 x i8] c"squashingDisallowed\00", align 1
@.str.59 = private unnamed_addr constant [66 x i8] c"Layer was separately composited because it could not be squashed.\00", align 1
@.str.60 = private unnamed_addr constant [33 x i8] c"opacityWithCompositedDescendants\00", align 1
@.str.61 = private unnamed_addr constant [85 x i8] c"Has opacity that needs to be applied by compositor because of composited descendants\00", align 1
@.str.62 = private unnamed_addr constant [30 x i8] c"maskWithCompositedDescendants\00", align 1
@.str.63 = private unnamed_addr constant [82 x i8] c"Has a mask that needs to be known by compositor because of composited descendants\00", align 1
@.str.64 = private unnamed_addr constant [36 x i8] c"reflectionWithCompositedDescendants\00", align 1
@.str.65 = private unnamed_addr constant [88 x i8] c"Has a reflection that needs to be known by compositor because of composited descendants\00", align 1
@.str.66 = private unnamed_addr constant [32 x i8] c"filterWithCompositedDescendants\00", align 1
@.str.67 = private unnamed_addr constant [91 x i8] c"Has a filter effect that needs to be known by compositor because of composited descendants\00", align 1
@.str.68 = private unnamed_addr constant [34 x i8] c"blendingWithCompositedDescendants\00", align 1
@.str.69 = private unnamed_addr constant [93 x i8] c"Has a blending effect that needs to be known by compositor because of composited descendants\00", align 1
@.str.70 = private unnamed_addr constant [29 x i8] c"perspectiveWith3DDescendants\00", align 1
@.str.71 = private unnamed_addr constant [91 x i8] c"Has a perspective transform that needs to be known by compositor because of 3d descendants\00", align 1
@.str.72 = private unnamed_addr constant [28 x i8] c"preserve3DWith3DDescendants\00", align 1
@.str.73 = private unnamed_addr constant [91 x i8] c"Has a preserves-3d property that needs to be known by compositor because of 3d descendants\00", align 1
@.str.74 = private unnamed_addr constant [29 x i8] c"isolateCompositedDescendants\00", align 1
@.str.75 = private unnamed_addr constant [51 x i8] c"Should isolate descendants to apply a blend effect\00", align 1
@.str.76 = private unnamed_addr constant [41 x i8] c"fullscreenVideoWithCompositedDescendants\00", align 1
@.str.77 = private unnamed_addr constant [58 x i8] c"Is a fullscreen video element with composited descendants\00", align 1
@.str.78 = private unnamed_addr constant [5 x i8] c"root\00", align 1
@.str.79 = private unnamed_addr constant [18 x i8] c"Is the root layer\00", align 1
@.str.80 = private unnamed_addr constant [28 x i8] c"layerForHorizontalScrollbar\00", align 1
@.str.81 = private unnamed_addr constant [48 x i8] c"Secondary layer, the horizontal scrollbar layer\00", align 1
@.str.82 = private unnamed_addr constant [26 x i8] c"layerForVerticalScrollbar\00", align 1
@.str.83 = private unnamed_addr constant [46 x i8] c"Secondary layer, the vertical scrollbar layer\00", align 1
@.str.84 = private unnamed_addr constant [21 x i8] c"layerForScrollCorner\00", align 1
@.str.85 = private unnamed_addr constant [41 x i8] c"Secondary layer, the scroll corner layer\00", align 1
@.str.86 = private unnamed_addr constant [26 x i8] c"layerForScrollingContents\00", align 1
@.str.87 = private unnamed_addr constant [56 x i8] c"Secondary layer, to house contents that can be scrolled\00", align 1
@.str.88 = private unnamed_addr constant [26 x i8] c"layerForSquashingContents\00", align 1
@.str.89 = private unnamed_addr constant [56 x i8] c"Secondary layer, home for a group of squashable content\00", align 1
@.str.90 = private unnamed_addr constant [19 x i8] c"layerForForeground\00", align 1
@.str.91 = private unnamed_addr constant [109 x i8] c"Secondary layer, to contain any normal flow and positive z-index contents on top of a negative z-index layer\00", align 1
@.str.92 = private unnamed_addr constant [13 x i8] c"layerForMask\00", align 1
@.str.93 = private unnamed_addr constant [46 x i8] c"Secondary layer, to contain the mask contents\00", align 1
@.str.94 = private unnamed_addr constant [19 x i8] c"layerForDecoration\00", align 1
@.str.95 = private unnamed_addr constant [51 x i8] c"Layer painted on top of other layers as decoration\00", align 1
@.str.96 = private unnamed_addr constant [14 x i8] c"layerForOther\00", align 1
@.str.97 = private unnamed_addr constant [46 x i8] c"Layer for link highlight, frame overlay, etc.\00", align 1
@.str.98 = private unnamed_addr constant [31 x i8] c"BackfaceInvisibility3DAncestor\00", align 1
@.str.99 = private unnamed_addr constant [60 x i8] c"Ancestor in same 3D rendering context has a hidden backface\00", align 1
@.str.100 = private unnamed_addr constant [32 x i8] c"DocumentTransitionSharedElement\00", align 1
@.str.101 = private unnamed_addr constant [50 x i8] c"This element is shared during document transition\00", align 1
@.str.102 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.103 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.105 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.106 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CompositingReason10ShortNamesEm(%"class.std::__1::vector"* noalias sret, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #12
  %6 = icmp eq i64 %1, 0
  br i1 %6, label %78, label %7

7:                                                ; preds = %2
  %8 = bitcast i8*** %3 to i64*
  %9 = bitcast %"class.std::__1::vector"* %0 to i64*
  %10 = bitcast i8*** %4 to i64*
  br label %11

11:                                               ; preds = %7, %75
  %12 = phi %"struct.blink::(anonymous namespace)::CompositingReasonStringMap"* [ getelementptr inbounds ([51 x %"struct.blink::(anonymous namespace)::CompositingReasonStringMap"], [51 x %"struct.blink::(anonymous namespace)::CompositingReasonStringMap"]* @_ZN5blink12_GLOBAL__N_128kCompositingReasonsStringMapE, i64 0, i64 0), %7 ], [ %76, %75 ]
  %13 = getelementptr inbounds %"struct.blink::(anonymous namespace)::CompositingReasonStringMap", %"struct.blink::(anonymous namespace)::CompositingReasonStringMap"* %12, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, %1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %75, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"struct.blink::(anonymous namespace)::CompositingReasonStringMap", %"struct.blink::(anonymous namespace)::CompositingReasonStringMap"* %12, i64 0, i32 1
  %19 = load i8**, i8*** %3, align 8
  %20 = load i8**, i8*** %4, align 8
  %21 = icmp eq i8** %19, %20
  %22 = ptrtoint i8** %20 to i64
  br i1 %21, label %29, label %23

23:                                               ; preds = %17
  %24 = bitcast i8** %18 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast i8** %19 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds i8*, i8** %19, i64 1
  %28 = ptrtoint i8** %27 to i64
  store i64 %28, i64* %8, align 8
  br label %75

29:                                               ; preds = %17
  %30 = ptrtoint i8** %19 to i64
  %31 = load i64, i64* %9, align 8
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 3
  %34 = add nsw i64 %33, 1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %22, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

50:                                               ; preds = %47, %38
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #14
  %54 = bitcast i8* %53 to i8**
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i8* [ %53, %50 ], [ null, %42 ]
  %58 = phi i8** [ %54, %50 ], [ null, %42 ]
  %59 = getelementptr inbounds i8*, i8** %58, i64 %33
  %60 = getelementptr inbounds i8*, i8** %58, i64 %56
  %61 = ptrtoint i8** %60 to i64
  %62 = bitcast i8** %18 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast i8** %59 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds i8*, i8** %59, i64 1
  %66 = ptrtoint i8** %65 to i64
  %67 = ptrtoint i8** %58 to i64
  %68 = icmp sgt i64 %32, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %55
  %70 = inttoptr i64 %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %70, i64 %32, i1 false) #12
  br label %71

71:                                               ; preds = %69, %55
  store i64 %67, i64* %9, align 8
  store i64 %66, i64* %8, align 8
  store i64 %61, i64* %10, align 8
  %72 = icmp eq i64 %31, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %71
  %74 = inttoptr i64 %31 to i8*
  tail call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %73, %71, %23, %11
  %76 = getelementptr inbounds %"struct.blink::(anonymous namespace)::CompositingReasonStringMap", %"struct.blink::(anonymous namespace)::CompositingReasonStringMap"* %12, i64 1
  %77 = icmp eq %"struct.blink::(anonymous namespace)::CompositingReasonStringMap"* %76, getelementptr inbounds ([51 x %"struct.blink::(anonymous namespace)::CompositingReasonStringMap"], [51 x %"struct.blink::(anonymous namespace)::CompositingReasonStringMap"]* @_ZN5blink12_GLOBAL__N_128kCompositingReasonsStringMapE, i64 1, i64 0)
  br i1 %77, label %78, label %11

78:                                               ; preds = %75, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CompositingReason12DescriptionsEm(%"class.std::__1::vector"* noalias sret, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #12
  %6 = icmp eq i64 %1, 0
  br i1 %6, label %78, label %7

7:                                                ; preds = %2
  %8 = bitcast i8*** %3 to i64*
  %9 = bitcast %"class.std::__1::vector"* %0 to i64*
  %10 = bitcast i8*** %4 to i64*
  br label %11

11:                                               ; preds = %7, %75
  %12 = phi %"struct.blink::(anonymous namespace)::CompositingReasonStringMap"* [ getelementptr inbounds ([51 x %"struct.blink::(anonymous namespace)::CompositingReasonStringMap"], [51 x %"struct.blink::(anonymous namespace)::CompositingReasonStringMap"]* @_ZN5blink12_GLOBAL__N_128kCompositingReasonsStringMapE, i64 0, i64 0), %7 ], [ %76, %75 ]
  %13 = getelementptr inbounds %"struct.blink::(anonymous namespace)::CompositingReasonStringMap", %"struct.blink::(anonymous namespace)::CompositingReasonStringMap"* %12, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, %1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %75, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"struct.blink::(anonymous namespace)::CompositingReasonStringMap", %"struct.blink::(anonymous namespace)::CompositingReasonStringMap"* %12, i64 0, i32 2
  %19 = load i8**, i8*** %3, align 8
  %20 = load i8**, i8*** %4, align 8
  %21 = icmp eq i8** %19, %20
  %22 = ptrtoint i8** %20 to i64
  br i1 %21, label %29, label %23

23:                                               ; preds = %17
  %24 = bitcast i8** %18 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast i8** %19 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds i8*, i8** %19, i64 1
  %28 = ptrtoint i8** %27 to i64
  store i64 %28, i64* %8, align 8
  br label %75

29:                                               ; preds = %17
  %30 = ptrtoint i8** %19 to i64
  %31 = load i64, i64* %9, align 8
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 3
  %34 = add nsw i64 %33, 1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %22, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

50:                                               ; preds = %47, %38
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #14
  %54 = bitcast i8* %53 to i8**
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i8* [ %53, %50 ], [ null, %42 ]
  %58 = phi i8** [ %54, %50 ], [ null, %42 ]
  %59 = getelementptr inbounds i8*, i8** %58, i64 %33
  %60 = getelementptr inbounds i8*, i8** %58, i64 %56
  %61 = ptrtoint i8** %60 to i64
  %62 = bitcast i8** %18 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast i8** %59 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds i8*, i8** %59, i64 1
  %66 = ptrtoint i8** %65 to i64
  %67 = ptrtoint i8** %58 to i64
  %68 = icmp sgt i64 %32, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %55
  %70 = inttoptr i64 %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %70, i64 %32, i1 false) #12
  br label %71

71:                                               ; preds = %69, %55
  store i64 %67, i64* %9, align 8
  store i64 %66, i64* %8, align 8
  store i64 %61, i64* %10, align 8
  %72 = icmp eq i64 %31, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %71
  %74 = inttoptr i64 %31 to i8*
  tail call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %73, %71, %23, %11
  %76 = getelementptr inbounds %"struct.blink::(anonymous namespace)::CompositingReasonStringMap", %"struct.blink::(anonymous namespace)::CompositingReasonStringMap"* %12, i64 1
  %77 = icmp eq %"struct.blink::(anonymous namespace)::CompositingReasonStringMap"* %76, getelementptr inbounds ([51 x %"struct.blink::(anonymous namespace)::CompositingReasonStringMap"], [51 x %"struct.blink::(anonymous namespace)::CompositingReasonStringMap"]* @_ZN5blink12_GLOBAL__N_128kCompositingReasonsStringMapE, i64 1, i64 0)
  br i1 %77, label %78, label %11

78:                                               ; preds = %75, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink17CompositingReason8ToStringEm(i64) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 48, i1 false)
  %6 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %8 = bitcast %union.anon* %7 to i8*
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %10, align 4
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %11, align 1
  %12 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #12
  call void @_ZN5blink17CompositingReason10ShortNamesEm(%"class.std::__1::vector"* nonnull sret %3, i64 %0)
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %14 = load i8**, i8*** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %16 = load i8**, i8*** %15, align 8
  %17 = icmp eq i8** %14, %16
  br i1 %17, label %25, label %18

18:                                               ; preds = %1
  %19 = bitcast %"class.WTF::StringView"* %4 to i8*
  %20 = bitcast %"class.WTF::StringView"* %4 to i64*
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  br label %50

23:                                               ; preds = %64
  %24 = load i8**, i8*** %13, align 8
  br label %25

25:                                               ; preds = %23, %1
  %26 = phi i8** [ %24, %23 ], [ %14, %1 ]
  %27 = icmp eq i8** %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %25
  %29 = ptrtoint i8** %26 to i64
  %30 = bitcast i8*** %15 to i64*
  store i64 %29, i64* %30, align 8
  %31 = bitcast i8** %26 to i8*
  call void @_ZdlPv(i8* %31) #14
  br label %32

32:                                               ; preds = %25, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #12
  %33 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #12
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #12
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #12
  br label %49

49:                                               ; preds = %32, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #12
  ret %"class.WTF::StringImpl"* %33

50:                                               ; preds = %69, %18
  %51 = phi i32 [ 0, %18 ], [ %70, %69 ]
  %52 = phi i8** [ %14, %18 ], [ %67, %69 ]
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i32 %51, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %50
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext 44) #12
  br label %56

56:                                               ; preds = %50, %55
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #12
  %57 = icmp eq i8* %53, null
  br i1 %57, label %64, label %58

58:                                               ; preds = %56
  %59 = call i64 @strlen(i8* nonnull %53) #15
  %60 = icmp ult i64 %59, 4294967296
  br i1 %60, label %62, label %61, !prof !2

61:                                               ; preds = %58
  call void @llvm.trap() #12
  unreachable

62:                                               ; preds = %58
  %63 = trunc i64 %59 to i32
  br label %64

64:                                               ; preds = %56, %62
  %65 = phi i32 [ %63, %62 ], [ 0, %56 ]
  %66 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %66, i64* %20, align 8
  store i8* %53, i8** %21, align 8
  store i32 %65, i32* %22, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #12
  %67 = getelementptr inbounds i8*, i8** %52, i64 1
  %68 = icmp eq i8** %67, %16
  br i1 %68, label %23, label %69

69:                                               ; preds = %64
  %70 = load i32, i32* %9, align 8
  br label %50
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !3
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #12
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #12
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #12
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #12
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #12
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #12
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !4

22:                                               ; preds = %15
  %23 = bitcast %union.anon* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon* %16 to %"class.WTF::Vector.2"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2"* %30, i16* nonnull dereferenceable(2) %3) #12
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #12
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !4

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector"* %41, i8* nonnull dereferenceable(1) %4) #12
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2"*, i16* dereferenceable(2)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2"* %0, i32 %5) #12
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2"* %0, i32 %5) #12
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.102, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.103, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2"* %0, i32 %27) #12
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !4

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #12
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.3"* %19, i16* nonnull %6) #12
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #12
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #12
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !2

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #12
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.3"* %53, i16* %48) #12
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.105, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.106, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.3"*, i16*) local_unnamed_addr #3 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector"*, i8* dereferenceable(1)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #12
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #12
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.102, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.103, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %27) #12
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !4

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #12
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %18, i8* nonnull %6) #12
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #12
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !2

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #12
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !2

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %46, i8* %42) #12
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.105, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.106, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #12
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"*, i8*) local_unnamed_addr #3 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #12
  ret void
}

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
