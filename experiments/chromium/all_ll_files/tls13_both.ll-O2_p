; ModuleID = '../../third_party/boringssl/src/ssl/tls13_both.cc'
source_filename = "../../third_party/boringssl/src/ssl/tls13_both.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.bssl::SSL_HANDSHAKE" = type <{ %struct.ssl_st*, %"struct.bssl::SSL_CONFIG"*, i32, i32, i32, i16, i16, i64, [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], %union.anon.105, i16, [2 x i8], %"class.std::__1::unique_ptr.60", [2 x %"class.std::__1::unique_ptr.106"], %"class.bssl::SSLTranscript", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.39", %"class.bssl::Array.39", %"class.bssl::Array.39", %"class.bssl::Array", i16, [6 x i8], %"class.bssl::internal::StackAllocated.112", %"class.bssl::Array", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, %"class.bssl::Array", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.95", %struct.ssl_cipher_st*, %"class.bssl::Array", %"class.std::__1::unique_ptr.113", i32, i16, i16, i16, i8, [32 x i8], i8, [6 x i8], [6 x i8] }>
%struct.ssl_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"class.std::__1::unique_ptr.2", i16, i16, [4 x i8], %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, %"struct.bssl::SSL3_STATE"*, %"struct.bssl::DTLS1_STATE"*, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], %"class.std::__1::unique_ptr.75", void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.85", %struct.crypto_ex_data_st, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.29", %struct.ssl_quic_method_st*, i32, i8, [3 x i8] }>
%"struct.bssl::SSL_PROTOCOL_METHOD" = type { i8, i1 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, %"class.bssl::Span"*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)* }
%"struct.bssl::SSLMessage" = type { i8, i8, %struct.cbs_st, %struct.cbs_st }
%struct.cbs_st = type { i8*, i64 }
%"class.bssl::Span" = type { i8*, i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%"class.bssl::SSLAEADContext" = type <{ %struct.ssl_cipher_st*, %"class.bssl::internal::StackAllocated", [12 x i8], i8, i8, i16, i8, i8, [6 x i8] }>
%"class.bssl::internal::StackAllocated" = type { %struct.evp_aead_ctx_st }
%struct.evp_aead_ctx_st = type { %struct.evp_aead_st*, %union.evp_aead_ctx_st_state, i8 }
%struct.evp_aead_st = type opaque
%union.evp_aead_ctx_st_state = type { i64, [576 x i8] }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.bssl::SSL_CONFIG"* }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %struct.bio_st* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%"struct.bssl::SSL3_STATE" = type <{ [8 x i8], [8 x i8], [32 x i8], [32 x i8], %"class.bssl::SSLBuffer", %"class.bssl::SSLBuffer", %"class.bssl::Span", i32, i32, i32, i32, i8*, i32, i32, %"class.std::__1::unique_ptr.60", i32, i32, i32, i32, i16, i8, i8, i8, i16, i8, %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65", i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.70", [48 x i8], [48 x i8], [48 x i8], i8, i8, i8, [12 x i8], i8, i8, [12 x i8], [2 x i8], i8, %"class.std::__1::unique_ptr.75", %"class.bssl::Array", %"class.bssl::Array", %"class.std::__1::unique_ptr.29", [64 x i8], %"class.bssl::Array", %struct.srtp_protection_profile_st* }>
%"class.bssl::SSLBuffer" = type <{ i8*, i16, i16, i16, [5 x i8], i8, [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %struct.buf_mem_st* }
%struct.buf_mem_st = type { i64, i8*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.bssl::SSLAEADContext"* }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.bssl::SSL_HANDSHAKE"* }
%struct.srtp_protection_profile_st = type { i8*, i64 }
%"struct.bssl::DTLS1_STATE" = type <{ i8, [256 x i8], [7 x i8], i64, i16, i16, [4 x i8], %"struct.bssl::DTLS1_BITMAP", i16, i16, [8 x i8], [4 x i8], %"class.std::__1::unique_ptr", [7 x %"class.std::__1::unique_ptr.80"], [7 x %"struct.bssl::DTLS_OUTGOING_MESSAGE"], i8, i8, [2 x i8], i32, i32, i32, %"struct.bssl::OPENSSL_timeval", i32, [4 x i8] }>
%"struct.bssl::DTLS1_BITMAP" = type { i64, i64 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.bssl::hm_fragment"* }
%"struct.bssl::hm_fragment" = type { i8, i16, i32, i8*, i8* }
%"struct.bssl::DTLS_OUTGOING_MESSAGE" = type <{ i8*, i32, i16, i8, i8 }>
%"struct.bssl::OPENSSL_timeval" = type { i64, i32 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %struct.ssl_ctx_st* }
%struct.ssl_ctx_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_X509_METHOD"*, %union.crypto_mutex_st, i16, i16, [4 x i8], %struct.ssl_quic_method_st*, %"class.std::__1::unique_ptr.5", %struct.x509_store_st*, %struct.lhash_st_SSL_SESSION*, i64, %struct.ssl_session_st*, %struct.ssl_session_st*, i32, i32, i32, i32, i32 (%struct.ssl_st*, %struct.ssl_session_st*)*, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)*, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)*, i32, [4 x i8], i32 (%struct.x509_store_ctx_st*, i8*)*, i8*, i32 (%struct.ssl_st*, i8*)*, i32 (i8*, i32, i32, i8*)*, i8*, i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)*, void (%struct.ssl_st*, %struct.evp_pkey_st**)*, %struct.crypto_ex_data_st, void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.15", void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], i32 (i32, %struct.x509_store_ctx_st*)*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.ssl_early_callback_ctx*)*, i32 (%struct.ssl_early_callback_ctx*)*, i8, i8, i16, [4 x i8], i32 (%struct.ssl_st*, i32*, i8*)*, i8*, %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88", i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)*, %"class.std::__1::unique_ptr.29", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*, i8**, i32*, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, %"class.bssl::Array", %"class.std::__1::unique_ptr.48", %"class.bssl::GrowableArray.93", %"class.bssl::Array.39", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.95", void (%struct.ssl_st*, i8*)*, void (%struct.ssl_st*, %struct.timeval*)*, %struct.crypto_buffer_pool_st*, %struct.ssl_ticket_aead_method_st*, i32 (%struct.ssl_st*, i8*)*, i8*, %"class.bssl::Array.39", i16, [6 x i8] }>
%"struct.bssl::SSL_X509_METHOD" = type { i1 (%struct.stack_st_CRYPTO_BUFFER*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*, %"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, i1 (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %struct.ssl_session_st*)*, void (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %"struct.bssl::SSL_HANDSHAKE"*, i8*)*, void (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)* }
%struct.stack_st_CRYPTO_BUFFER = type opaque
%"struct.bssl::CERT" = type { %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.23", %struct.stack_st_X509*, %struct.x509_st*, %struct.x509_st*, %struct.ssl_private_key_method_st*, %"struct.bssl::SSL_X509_METHOD"*, %"class.bssl::Array.39", i32 (%struct.ssl_st*, i8*)*, i8*, %struct.x509_store_st*, %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34", i8, [32 x i8], %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.18", %struct.ssl_private_key_method_st* }
%struct.stack_st_X509 = type opaque
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon.28 }
%union.anon.28 = type { i8* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type opaque
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %struct.crypto_buffer_st* }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.bssl::DC"* }
%"struct.bssl::DC" = type { %"class.std::__1::unique_ptr.34", i16, %"class.std::__1::unique_ptr.18" }
%struct.ssl_private_key_method_st = type { i32 (%struct.ssl_st*, i8*, i64*, i64, i16, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64)* }
%union.crypto_mutex_st = type { double, [48 x i8] }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.bssl::SSLCipherPreferenceList"* }
%"struct.bssl::SSLCipherPreferenceList" = type { %"class.std::__1::unique_ptr.8", i8* }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %struct.stack_st_SSL_CIPHER* }
%struct.stack_st_SSL_CIPHER = type opaque
%struct.x509_store_st = type { i32, %struct.stack_st_X509_OBJECT*, %union.crypto_mutex_st, %struct.stack_st_X509*, %struct.stack_st_X509_LOOKUP*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.x509_store_ctx_st*)*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 }
%struct.stack_st_X509_OBJECT = type opaque
%struct.stack_st_X509_LOOKUP = type opaque
%struct.x509_store_ctx_st = type { %struct.x509_store_st*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509_CRL*, %struct.X509_VERIFY_PARAM_st*, i8*, {}*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, {}*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, {}*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, {}*, i32, i32, %struct.stack_st_X509*, %struct.X509_POLICY_TREE_st*, i32, i32, i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_crl_st*, i32, i32, %struct.x509_store_ctx_st*, %struct.crypto_ex_data_st }
%struct.stack_st_X509_CRL = type opaque
%struct.X509_POLICY_TREE_st = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type opaque
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.lhash_st_SSL_SESSION = type opaque
%struct.ssl_session_st = type { i32, i16, i16, i16, i32, [48 x i8], i32, [32 x i8], i8, [32 x i8], %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.23", %"struct.bssl::SSL_X509_METHOD"*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509*, i64, i32, i32, i64, %struct.ssl_cipher_st*, %struct.crypto_ex_data_st, %struct.ssl_session_st*, %struct.ssl_session_st*, %"class.bssl::Array", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34", [32 x i8], [64 x i8], i8, i32, i32, i32, %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", i8, %"class.bssl::Array" }
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.bssl::CERT"* }
%struct.X509_VERIFY_PARAM_st = type { i8*, i64, i64, i64, i32, i32, i32, %struct.stack_st_ASN1_OBJECT*, %struct.X509_VERIFY_PARAM_ID_st* }
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.X509_VERIFY_PARAM_ID_st = type opaque
%struct.ssl_early_callback_ctx = type { %struct.ssl_st*, i8*, i64, i16, i8*, i64, i8*, i64, i8*, i64, i8*, i64, i8*, i64 }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"struct.bssl::TicketKey"* }
%"struct.bssl::TicketKey" = type { [16 x i8], [16 x i8], [16 x i8], i64 }
%struct.evp_cipher_ctx_st = type { %struct.evp_cipher_st*, i8*, i8*, i32, i32, i32, [16 x i8], [16 x i8], [32 x i8], i32, i32, i32, [32 x i8] }
%struct.evp_cipher_st = type { i32, i32, i32, i32, i32, i32, i8*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i32)*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i64)*, void (%struct.evp_cipher_ctx_st*)*, i32 (%struct.evp_cipher_ctx_st*, i32, i32, i8*)* }
%struct.hmac_ctx_st = type { %struct.env_md_st*, %struct.env_md_ctx_st, %struct.env_md_ctx_st, %struct.env_md_ctx_st }
%struct.env_md_st = type opaque
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %struct.stack_st_SRTP_PROTECTION_PROFILE* }
%struct.stack_st_SRTP_PROTECTION_PROFILE = type opaque
%"class.bssl::GrowableArray.93" = type { i64, %"class.bssl::Array.94" }
%"class.bssl::Array.94" = type { %"struct.bssl::CertCompressionAlg"*, i64 }
%"struct.bssl::CertCompressionAlg" = type <{ i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)*, i32 (%struct.ssl_st*, %struct.crypto_buffer_st**, i64, i8*, i64)*, i16, [6 x i8] }>
%struct.timeval = type { i64, i64 }
%struct.crypto_buffer_pool_st = type opaque
%struct.ssl_ticket_aead_method_st = type { i64 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.ssl_quic_method_st = type { i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, i8*, i64)*, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i32, i8)* }
%"struct.bssl::SSL_CONFIG" = type <{ %struct.ssl_st*, i16, i16, [4 x i8], %struct.X509_VERIFY_PARAM_st*, %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.15", i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.ssl_st*, i8*)*, %"class.std::__1::unique_ptr.29", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, %"class.bssl::Array.39", %"class.std::__1::unique_ptr.18", %"class.bssl::Array", %"class.bssl::GrowableArray", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.39", %"class.std::__1::unique_ptr.48", i8, i16, [5 x i8] }>
%"class.bssl::GrowableArray" = type { i64, %"class.bssl::Array.47" }
%"class.bssl::Array.47" = type { %"struct.bssl::ALPSConfig"*, i64 }
%"struct.bssl::ALPSConfig" = type { %"class.bssl::Array", %"class.bssl::Array" }
%union.anon.105 = type { i32 }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %struct.err_save_state_st* }
%struct.err_save_state_st = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.bssl::SSLKeyShare"* }
%"class.bssl::SSLKeyShare" = type { i32 (...)** }
%"class.bssl::SSLTranscript" = type { %"class.std::__1::unique_ptr.65", %"class.bssl::internal::StackAllocated.111" }
%"class.bssl::internal::StackAllocated.111" = type { %struct.env_md_ctx_st }
%"class.bssl::Array.39" = type { i16*, i64 }
%"class.bssl::internal::StackAllocated.112" = type { %struct.evp_hpke_ctx_st }
%struct.evp_hpke_ctx_st = type { %struct.evp_hpke_aead_st*, %struct.evp_hpke_kdf_st*, %struct.evp_aead_ctx_st, [24 x i8], [64 x i8], i64, i32 }
%struct.evp_hpke_aead_st = type opaque
%struct.evp_hpke_kdf_st = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i8* }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %struct.stack_st_CRYPTO_BUFFER* }
%struct.stack_st_X509_NAME = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %struct.evp_pkey_st* }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %struct.ssl_session_st* }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %struct.ssl_ech_server_config_list_st* }
%struct.ssl_ech_server_config_list_st = type <{ %"class.bssl::GrowableArray.98", i32, [4 x i8] }>
%"class.bssl::GrowableArray.98" = type { i64, %"class.bssl::Array.99" }
%"class.bssl::Array.99" = type { %"class.std::__1::unique_ptr.100"*, i64 }
%"class.std::__1::unique_ptr.100" = type opaque
%struct.ssl_cipher_st = type { i8*, i8*, i32, i32, i32, i32, i32, i32 }
%"class.bssl::Array" = type { i8*, i64 }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.bssl::SSL_HANDSHAKE_HINTS"* }
%"struct.bssl::SSL_HANDSHAKE_HINTS" = type <{ %"class.bssl::Array", i16, [6 x i8], %"class.bssl::Array", %"class.bssl::Array", i16, [6 x i8], %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", i8, [7 x i8] }>
%"class.bssl::internal::StackAllocated.118" = type { %struct.cbb_st }
%"struct.bssl::SSL_EXTENSION_TYPE" = type { i16, i8*, %struct.cbs_st* }
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%"class.bssl::Span.1" = type { i8*, i64 }

$_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_ = comdat any

@_ZN4bssl18kHelloRetryRequestE = hidden local_unnamed_addr constant [32 x i8] c"\CF!\ADt\E5\9Aa\11\BE\1D\8C\02\1Ee\B8\91\C2\A2\11\16z\BB\8C^\07\9E\09\E2\C8\A83\9C", align 16
@_ZN4bssl21kTLS12DowngradeRandomE = hidden local_unnamed_addr constant [8 x i8] c"DOWNGRD\00", align 1
@_ZN4bssl21kTLS13DowngradeRandomE = hidden local_unnamed_addr constant [8 x i8] c"DOWNGRD\01", align 1
@_ZN4bssl21kJDK11DowngradeRandomE = hidden local_unnamed_addr constant [8 x i8] c"\ED\BF\B4\A8\C2G\10\FF", align 1
@.str = private unnamed_addr constant [50 x i8] c"../../third_party/boringssl/src/ssl/tls13_both.cc\00", align 1
@_ZZN4bssl37tls13_get_cert_verify_signature_inputEPNS_13SSL_HANDSHAKEEPNS_5ArrayIhEENS_25ssl_cert_verify_context_tEE8kContext = internal constant [34 x i8] c"TLS 1.3, server CertificateVerify\00", align 16
@_ZZN4bssl37tls13_get_cert_verify_signature_inputEPNS_13SSL_HANDSHAKEEPNS_5ArrayIhEENS_25ssl_cert_verify_context_tEE8kContext_0 = internal constant [34 x i8] c"TLS 1.3, client CertificateVerify\00", align 16
@_ZZN4bssl37tls13_get_cert_verify_signature_inputEPNS_13SSL_HANDSHAKEEPNS_5ArrayIhEENS_25ssl_cert_verify_context_tEE8kContext_1 = internal constant [20 x i8] c"TLS 1.3, Channel ID\00", align 16
@.str.1 = private unnamed_addr constant [13 x i8] c"requested=%u\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"alg=%d\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"alg=%d got=%u expected=%u\00", align 1
@.str.6 = private unnamed_addr constant [47 x i8] c"../../third_party/boringssl/src/ssl/internal.h\00", align 1
@switch.table._ZN4bssl37tls13_get_cert_verify_signature_inputEPNS_13SSL_HANDSHAKEEPNS_5ArrayIhEENS_25ssl_cert_verify_context_tE = private unnamed_addr constant [3 x i64] [i64 34, i64 34, i64 20], align 8
@switch.table._ZN4bssl37tls13_get_cert_verify_signature_inputEPNS_13SSL_HANDSHAKEEPNS_5ArrayIhEENS_25ssl_cert_verify_context_tE.7 = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([34 x i8], [34 x i8]* @_ZZN4bssl37tls13_get_cert_verify_signature_inputEPNS_13SSL_HANDSHAKEEPNS_5ArrayIhEENS_25ssl_cert_verify_context_tEE8kContext, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @_ZZN4bssl37tls13_get_cert_verify_signature_inputEPNS_13SSL_HANDSHAKEEPNS_5ArrayIhEENS_25ssl_cert_verify_context_tEE8kContext_0, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZZN4bssl37tls13_get_cert_verify_signature_inputEPNS_13SSL_HANDSHAKEEPNS_5ArrayIhEENS_25ssl_cert_verify_context_tEE8kContext_1, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl37tls13_get_cert_verify_signature_inputEPNS_13SSL_HANDSHAKEEPNS_5ArrayIhEENS_25ssl_cert_verify_context_tE(%"struct.bssl::SSL_HANDSHAKE"*, %"class.bssl::Array"*, i32) local_unnamed_addr #0 {
  %4 = alloca %"class.bssl::internal::StackAllocated.118", align 8
  %5 = alloca [64 x i8], align 16
  %6 = alloca i64, align 8
  %7 = bitcast %"class.bssl::internal::StackAllocated.118"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = getelementptr inbounds %"class.bssl::internal::StackAllocated.118", %"class.bssl::internal::StackAllocated.118"* %4, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %8) #4
  %9 = call i32 @CBB_init(%struct.cbb_st* nonnull %8, i64 226) #4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %3
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 61) #4
  br label %47

12:                                               ; preds = %14
  %13 = icmp eq i64 %18, 64
  br i1 %13, label %20, label %14

14:                                               ; preds = %3, %12
  %15 = phi i64 [ %18, %12 ], [ 0, %3 ]
  %16 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %8, i8 zeroext 32) #4
  %17 = icmp eq i32 %16, 0
  %18 = add nuw nsw i64 %15, 1
  br i1 %17, label %19, label %12

19:                                               ; preds = %14
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 67) #4
  br label %47

20:                                               ; preds = %12
  %21 = icmp ult i32 %2, 3
  br i1 %21, label %23, label %22

22:                                               ; preds = %20
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 83) #4
  br label %47

23:                                               ; preds = %20
  %24 = sext i32 %2 to i64
  %25 = getelementptr inbounds [3 x i64], [3 x i64]* @switch.table._ZN4bssl37tls13_get_cert_verify_signature_inputEPNS_13SSL_HANDSHAKEEPNS_5ArrayIhEENS_25ssl_cert_verify_context_tE, i64 0, i64 %24
  %26 = load i64, i64* %25, align 8
  %27 = sext i32 %2 to i64
  %28 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN4bssl37tls13_get_cert_verify_signature_inputEPNS_13SSL_HANDSHAKEEPNS_5ArrayIhEENS_25ssl_cert_verify_context_tE.7, i64 0, i64 %27
  %29 = load i8*, i8** %28, align 8
  %30 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %8, i8* nonnull %29, i64 %26) #4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %23
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 91) #4
  br label %47

33:                                               ; preds = %23
  %34 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %34) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 64, i1 false)
  %35 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #4
  store i64 -6148914691236517206, i64* %6, align 8
  %36 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 20
  %37 = call zeroext i1 @_ZN4bssl13SSLTranscript7GetHashEPhPm(%"class.bssl::SSLTranscript"* %36, i8* nonnull %34, i64* nonnull %6) #4
  br i1 %37, label %38, label %44

38:                                               ; preds = %33
  %39 = load i64, i64* %6, align 8
  %40 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %8, i8* nonnull %34, i64 %39) #4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = call zeroext i1 @_ZN4bssl14CBBFinishArrayEP6cbb_stPNS_5ArrayIhEE(%struct.cbb_st* nonnull %8, %"class.bssl::Array"* %1) #4
  br i1 %43, label %45, label %44

44:                                               ; preds = %38, %42, %33
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 100) #4
  br label %45

45:                                               ; preds = %42, %44
  %46 = phi i1 [ false, %44 ], [ true, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %34) #4
  br label %47

47:                                               ; preds = %22, %32, %45, %19, %11
  %48 = phi i1 [ false, %11 ], [ false, %19 ], [ %46, %45 ], [ false, %32 ], [ false, %22 ]
  call void @CBB_cleanup(%struct.cbb_st* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #4
  ret i1 %48
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @CBB_init(%struct.cbb_st*, i64) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare i32 @CBB_add_u8(%struct.cbb_st*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @CBB_add_bytes(%struct.cbb_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN4bssl13SSLTranscript7GetHashEPhPm(%"class.bssl::SSLTranscript"*, i8*, i64*) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl14CBBFinishArrayEP6cbb_stPNS_5ArrayIhEE(%struct.cbb_st*, %"class.bssl::Array"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl25tls13_process_certificateEPNS_13SSL_HANDSHAKEERKNS_10SSLMessageEb(%"struct.bssl::SSL_HANDSHAKE"* nocapture, %"struct.bssl::SSLMessage"* nocapture readonly dereferenceable(40), i1 zeroext) local_unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca i16, align 2
  %7 = alloca i32, align 4
  %8 = alloca %struct.crypto_buffer_st*, align 8
  %9 = alloca %struct.cbs_st, align 8
  %10 = alloca %struct.cbs_st, align 8
  %11 = alloca %struct.cbs_st, align 8
  %12 = alloca %struct.cbs_st, align 8
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca %struct.cbs_st, align 8
  %16 = alloca %struct.cbs_st, align 8
  %17 = alloca [2 x %"struct.bssl::SSL_EXTENSION_TYPE"], align 16
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca %struct.cbs_st, align 8
  %21 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %22 = load %struct.ssl_st*, %struct.ssl_st** %21, align 8
  %23 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #4
  %24 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 2
  %25 = bitcast %struct.cbs_st* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 %25, i64 16, i1 false)
  %26 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 1
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 25
  br i1 %28, label %29, label %116

29:                                               ; preds = %3
  %30 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #4
  %31 = bitcast i16* %6 to i8*
  %32 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %31) #4
  store i16 -21846, i16* %6, align 2
  %33 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #4
  store i32 -1431655766, i32* %7, align 4
  %34 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %4, i16* nonnull %6) #4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %45, label %36

36:                                               ; preds = %29
  %37 = call i32 @CBS_get_u24(%struct.cbs_st* nonnull %4, i32* nonnull %7) #4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %36
  %40 = call i32 @CBS_get_u24_length_prefixed(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %5) #4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %39
  %43 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #4
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %42, %39, %36, %29
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %22, i32 2, i32 50) #4
  call void @ERR_put_error(i32 16, i32 0, i32 137, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 123) #4
  br label %112

46:                                               ; preds = %42
  %47 = load i32, i32* %7, align 4
  %48 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %22, i64 0, i32 21
  %49 = load i32, i32* %48, align 8
  %50 = icmp ugt i32 %47, %49
  br i1 %50, label %51, label %53

51:                                               ; preds = %46
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %22, i32 2, i32 47) #4
  call void @ERR_put_error(i32 16, i32 0, i32 293, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 129) #4
  %52 = load i32, i32* %7, align 4
  call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i32 %52) #4
  br label %112

53:                                               ; preds = %46
  %54 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %22, i64 0, i32 16, i32 0, i32 0, i32 0
  %55 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %54, align 8
  %56 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %55, i64 0, i32 66, i32 1, i32 0
  %57 = load %"struct.bssl::CertCompressionAlg"*, %"struct.bssl::CertCompressionAlg"** %56, align 8
  %58 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %55, i64 0, i32 66, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %57, i64 %59
  %61 = icmp eq i64 %59, 0
  br i1 %61, label %76, label %62

62:                                               ; preds = %53
  %63 = load i16, i16* %6, align 2
  br label %64

64:                                               ; preds = %62, %69
  %65 = phi %"struct.bssl::CertCompressionAlg"* [ %57, %62 ], [ %70, %69 ]
  %66 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %65, i64 0, i32 2
  %67 = load i16, i16* %66, align 8
  %68 = icmp eq i16 %67, %63
  br i1 %68, label %72, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %65, i64 1
  %71 = icmp eq %"struct.bssl::CertCompressionAlg"* %70, %60
  br i1 %71, label %76, label %64

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %65, i64 0, i32 1
  %74 = load i32 (%struct.ssl_st*, %struct.crypto_buffer_st**, i64, i8*, i64)*, i32 (%struct.ssl_st*, %struct.crypto_buffer_st**, i64, i8*, i64)** %73, align 8
  %75 = icmp eq i32 (%struct.ssl_st*, %struct.crypto_buffer_st**, i64, i8*, i64)* %74, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %69, %53, %72
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %22, i32 2, i32 47) #4
  call void @ERR_put_error(i32 16, i32 0, i32 294, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 145) #4
  %77 = load i16, i16* %6, align 2
  %78 = zext i16 %77 to i32
  call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %78) #4
  br label %112

79:                                               ; preds = %72
  %80 = bitcast %struct.crypto_buffer_st** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #4
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %8, align 8
  %81 = zext i32 %47 to i64
  %82 = call i8* @CBS_data(%struct.cbs_st* nonnull %5) #4
  %83 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #4
  %84 = call i32 %74(%struct.ssl_st* %22, %struct.crypto_buffer_st** nonnull %8, i64 %81, i8* %82, i64 %83) #4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %79
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %22, i32 2, i32 50) #4
  call void @ERR_put_error(i32 16, i32 0, i32 292, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 154) #4
  %87 = load i16, i16* %6, align 2
  %88 = zext i16 %87 to i32
  call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %88) #4
  br label %109

89:                                               ; preds = %79
  %90 = bitcast %struct.crypto_buffer_st** %8 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = inttoptr i64 %91 to %struct.crypto_buffer_st*
  %93 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %92) #4
  %94 = load i32, i32* %7, align 4
  %95 = zext i32 %94 to i64
  %96 = icmp eq i64 %93, %95
  br i1 %96, label %104, label %97

97:                                               ; preds = %89
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %22, i32 2, i32 50) #4
  call void @ERR_put_error(i32 16, i32 0, i32 292, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 162) #4
  %98 = load i16, i16* %6, align 2
  %99 = zext i16 %98 to i32
  %100 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %8, align 8
  %101 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %100) #4
  %102 = trunc i64 %101 to i32
  %103 = load i32, i32* %7, align 4
  call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i32 %99, i32 %102, i32 %103) #4
  br label %109

104:                                              ; preds = %89
  %105 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %8, align 8
  %106 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %105) #4
  %107 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %8, align 8
  %108 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %107) #4
  call void @CBS_init(%struct.cbs_st* nonnull %4, i8* %106, i64 %108) #4
  br label %109

109:                                              ; preds = %104, %97, %86
  %110 = phi i64 [ 0, %86 ], [ %91, %104 ], [ %91, %97 ]
  %111 = phi i32 [ 1, %86 ], [ 0, %104 ], [ 1, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #4
  br label %112

112:                                              ; preds = %76, %109, %51, %45
  %113 = phi i64 [ 0, %45 ], [ 0, %51 ], [ 0, %76 ], [ %110, %109 ]
  %114 = phi i32 [ 1, %45 ], [ 1, %51 ], [ 1, %76 ], [ %111, %109 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #4
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %31) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %380

116:                                              ; preds = %3, %112
  %117 = phi i64 [ %113, %112 ], [ 0, %3 ]
  %118 = bitcast %struct.cbs_st* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %118) #4
  %119 = bitcast %struct.cbs_st* %10 to i8*
  %120 = bitcast %struct.cbs_st* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %119) #4
  %121 = bitcast %struct.cbs_st* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 -86, i64 16, i1 false)
  %122 = call i32 @CBS_get_u8_length_prefixed(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %9) #4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %133, label %124

124:                                              ; preds = %116
  %125 = call i64 @CBS_len(%struct.cbs_st* nonnull %9) #4
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %133

127:                                              ; preds = %124
  %128 = call i32 @CBS_get_u24_length_prefixed(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %10) #4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %133, label %130

130:                                              ; preds = %127
  %131 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #4
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %134, label %133

133:                                              ; preds = %130, %127, %124, %116
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %22, i32 2, i32 50) #4
  call void @ERR_put_error(i32 16, i32 0, i32 137, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 182) #4
  br label %378

134:                                              ; preds = %130
  %135 = call %struct.stack_st* @sk_new_null() #4
  %136 = ptrtoint %struct.stack_st* %135 to i64
  %137 = icmp eq %struct.stack_st* %135, null
  br i1 %137, label %138, label %139

138:                                              ; preds = %134
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %22, i32 2, i32 80) #4
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 189) #4
  br label %378

139:                                              ; preds = %134
  %140 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %22, i64 0, i32 26
  %141 = load i8, i8* %140, align 4
  %142 = and i8 %141, 1
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %151, label %144

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %146 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %145, align 8
  %147 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %146, i64 0, i32 23
  %148 = load i16, i16* %147, align 1
  %149 = and i16 %148, 32
  %150 = icmp ne i16 %149, 0
  br label %151

151:                                              ; preds = %139, %144
  %152 = phi i1 [ false, %139 ], [ %150, %144 ]
  %153 = zext i1 %152 to i8
  %154 = call i64 @CBS_len(%struct.cbs_st* nonnull %10) #4
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %319, label %156

156:                                              ; preds = %151
  %157 = bitcast %struct.cbs_st* %11 to i8*
  %158 = bitcast %struct.cbs_st* %12 to i8*
  %159 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %160 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %22, i64 0, i32 16, i32 0, i32 0, i32 0
  %161 = bitcast %struct.cbs_st* %15 to i8*
  %162 = bitcast %struct.cbs_st* %16 to i8*
  %163 = bitcast [2 x %"struct.bssl::SSL_EXTENSION_TYPE"]* %17 to i8*
  %164 = getelementptr inbounds [2 x %"struct.bssl::SSL_EXTENSION_TYPE"], [2 x %"struct.bssl::SSL_EXTENSION_TYPE"]* %17, i64 0, i64 0, i32 0
  %165 = getelementptr inbounds [2 x %"struct.bssl::SSL_EXTENSION_TYPE"], [2 x %"struct.bssl::SSL_EXTENSION_TYPE"]* %17, i64 0, i64 0, i32 1
  %166 = getelementptr inbounds [2 x %"struct.bssl::SSL_EXTENSION_TYPE"], [2 x %"struct.bssl::SSL_EXTENSION_TYPE"]* %17, i64 0, i64 0, i32 2
  %167 = getelementptr inbounds [2 x %"struct.bssl::SSL_EXTENSION_TYPE"], [2 x %"struct.bssl::SSL_EXTENSION_TYPE"]* %17, i64 0, i64 1, i32 0
  %168 = getelementptr inbounds [2 x %"struct.bssl::SSL_EXTENSION_TYPE"], [2 x %"struct.bssl::SSL_EXTENSION_TYPE"]* %17, i64 0, i64 1, i32 1
  %169 = getelementptr inbounds [2 x %"struct.bssl::SSL_EXTENSION_TYPE"], [2 x %"struct.bssl::SSL_EXTENSION_TYPE"]* %17, i64 0, i64 1, i32 2
  %170 = getelementptr inbounds [2 x %"struct.bssl::SSL_EXTENSION_TYPE"], [2 x %"struct.bssl::SSL_EXTENSION_TYPE"]* %17, i64 0, i64 0
  %171 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %172 = bitcast %struct.cbs_st* %20 to i8*
  %173 = bitcast %struct.cbs_st* %11 to i8*
  %174 = bitcast %struct.cbs_st* %12 to i8*
  %175 = bitcast %struct.cbs_st* %15 to i8*
  %176 = bitcast %struct.cbs_st* %16 to i8*
  %177 = bitcast %struct.cbs_st* %20 to i8*
  br label %178

178:                                              ; preds = %156, %316
  %179 = phi i64 [ 0, %156 ], [ %213, %316 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %157) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %158) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 -86, i64 16, i1 false)
  %180 = call i32 @CBS_get_u24_length_prefixed(%struct.cbs_st* nonnull %10, %struct.cbs_st* nonnull %11) #4
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %188, label %182

182:                                              ; preds = %178
  %183 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %10, %struct.cbs_st* nonnull %12) #4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %188, label %185

185:                                              ; preds = %182
  %186 = call i64 @CBS_len(%struct.cbs_st* nonnull %11) #4
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %189

188:                                              ; preds = %182, %178, %185
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %22, i32 2, i32 50) #4
  call void @ERR_put_error(i32 16, i32 0, i32 127, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 202) #4
  br label %371

189:                                              ; preds = %185
  %190 = call i64 @sk_num(%struct.stack_st* nonnull %135) #4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %212

192:                                              ; preds = %189
  %193 = call %struct.evp_pkey_st* @_ZN4bssl21ssl_cert_parse_pubkeyEPK6cbs_st(%struct.cbs_st* nonnull %11) #4
  %194 = ptrtoint %struct.evp_pkey_st* %193 to i64
  %195 = icmp eq i64 %179, 0
  br i1 %195, label %198, label %196

196:                                              ; preds = %192
  %197 = inttoptr i64 %179 to %struct.evp_pkey_st*
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %197) #4
  br label %198

198:                                              ; preds = %196, %192
  %199 = icmp eq %struct.evp_pkey_st* %193, null
  br i1 %199, label %200, label %201

200:                                              ; preds = %198
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %22, i32 2, i32 50) #4
  call void @ERR_put_error(i32 16, i32 0, i32 137, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 210) #4
  br label %371

201:                                              ; preds = %198
  %202 = call zeroext i1 @_ZN4bssl24ssl_cert_check_key_usageEPK6cbs_stNS_15ssl_key_usage_tE(%struct.cbs_st* nonnull %11, i32 0) #4
  br i1 %202, label %205, label %203

203:                                              ; preds = %201
  %204 = ptrtoint %struct.evp_pkey_st* %193 to i64
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %22, i32 2, i32 47) #4
  br label %371

205:                                              ; preds = %201
  br i1 %152, label %206, label %212

206:                                              ; preds = %205
  %207 = call i8* @CBS_data(%struct.cbs_st* nonnull %11) #4
  %208 = call i64 @CBS_len(%struct.cbs_st* nonnull %11) #4
  %209 = load %struct.ssl_session_st*, %struct.ssl_session_st** %159, align 8
  %210 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %209, i64 0, i32 27, i64 0
  %211 = call i8* @SHA256(i8* %207, i64 %208, i8* %210) #4
  br label %212

212:                                              ; preds = %205, %206, %189
  %213 = phi i64 [ %194, %206 ], [ %194, %205 ], [ %179, %189 ]
  %214 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %160, align 8
  %215 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %214, i64 0, i32 72
  %216 = load %struct.crypto_buffer_pool_st*, %struct.crypto_buffer_pool_st** %215, align 8
  %217 = call %struct.crypto_buffer_st* @CRYPTO_BUFFER_new_from_CBS(%struct.cbs_st* nonnull %11, %struct.crypto_buffer_pool_st* %216) #4
  %218 = icmp eq %struct.crypto_buffer_st* %217, null
  br i1 %218, label %315, label %219

219:                                              ; preds = %212
  %220 = bitcast %struct.crypto_buffer_st* %217 to i8*
  %221 = call i64 @sk_push(%struct.stack_st* nonnull %135, i8* nonnull %220) #4
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %219
  call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %217) #4
  br label %315

224:                                              ; preds = %219
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #4
  store i8 0, i8* %13, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #4
  store i8 0, i8* %14, align 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %161) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %175, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %162) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %176, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %163) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %163, i8 -86, i64 32, i1 false)
  store i16 5, i16* %164, align 16
  store i8* %13, i8** %165, align 8
  store %struct.cbs_st* %15, %struct.cbs_st** %166, align 16
  store i16 18, i16* %167, align 8
  store i8* %14, i8** %168, align 8
  store %struct.cbs_st* %16, %struct.cbs_st** %169, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #4
  store i8 50, i8* %18, align 1
  %225 = call zeroext i1 @_ZN4bssl20ssl_parse_extensionsEPK6cbs_stPhNS_4SpanIKNS_18SSL_EXTENSION_TYPEEEEb(%struct.cbs_st* nonnull %12, i8* nonnull %18, %"struct.bssl::SSL_EXTENSION_TYPE"* nonnull %170, i64 2, i1 zeroext false) #4
  br i1 %225, label %229, label %226

226:                                              ; preds = %224
  %227 = load i8, i8* %18, align 1
  %228 = zext i8 %227 to i32
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %22, i32 2, i32 %228) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %163) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %162) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %161) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #4
  br label %371

229:                                              ; preds = %224
  %230 = load i8, i8* %13, align 1, !range !2
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %279, label %232

232:                                              ; preds = %229
  %233 = load i8, i8* %140, align 4
  %234 = and i8 %233, 1
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %236, label %242

236:                                              ; preds = %232
  %237 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %171, align 8
  %238 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %237, i64 0, i32 23
  %239 = load i16, i16* %238, align 1
  %240 = and i16 %239, 4
  %241 = icmp eq i16 %240, 0
  br i1 %241, label %242, label %243

242:                                              ; preds = %236, %232
  call void @ERR_put_error(i32 16, i32 0, i32 222, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 256) #4
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %22, i32 2, i32 110) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %163) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %162) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %161) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #4
  br label %371

243:                                              ; preds = %236
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #4
  store i8 -86, i8* %19, align 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %172) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %177, i8 -86, i64 16, i1 false)
  %244 = call i32 @CBS_get_u8(%struct.cbs_st* nonnull %15, i8* nonnull %19) #4
  %245 = icmp ne i32 %244, 0
  %246 = load i8, i8* %19, align 1
  %247 = icmp eq i8 %246, 1
  %248 = and i1 %245, %247
  br i1 %248, label %249, label %277

249:                                              ; preds = %243
  %250 = call i32 @CBS_get_u24_length_prefixed(%struct.cbs_st* nonnull %15, %struct.cbs_st* nonnull %20) #4
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %277, label %252

252:                                              ; preds = %249
  %253 = call i64 @CBS_len(%struct.cbs_st* nonnull %20) #4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %277, label %255

255:                                              ; preds = %252
  %256 = call i64 @CBS_len(%struct.cbs_st* nonnull %15) #4
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %258, label %277

258:                                              ; preds = %255
  %259 = call i64 @sk_num(%struct.stack_st* nonnull %135) #4
  %260 = icmp eq i64 %259, 1
  br i1 %260, label %261, label %276

261:                                              ; preds = %258
  %262 = load %struct.ssl_session_st*, %struct.ssl_session_st** %159, align 8
  %263 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %160, align 8
  %264 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %263, i64 0, i32 72
  %265 = load %struct.crypto_buffer_pool_st*, %struct.crypto_buffer_pool_st** %264, align 8
  %266 = call %struct.crypto_buffer_st* @CRYPTO_BUFFER_new_from_CBS(%struct.cbs_st* nonnull %20, %struct.crypto_buffer_pool_st* %265) #4
  %267 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %262, i64 0, i32 26, i32 0, i32 0, i32 0
  %268 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %267, align 8
  store %struct.crypto_buffer_st* %266, %struct.crypto_buffer_st** %267, align 8
  %269 = icmp eq %struct.crypto_buffer_st* %268, null
  br i1 %269, label %271, label %270

270:                                              ; preds = %261
  call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %268) #4
  br label %271

271:                                              ; preds = %261, %270
  %272 = load %struct.ssl_session_st*, %struct.ssl_session_st** %159, align 8
  %273 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %272, i64 0, i32 26, i32 0, i32 0, i32 0
  %274 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %273, align 8
  %275 = icmp eq %struct.crypto_buffer_st* %274, null
  br i1 %275, label %277, label %276

276:                                              ; preds = %271, %258
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %172) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #4
  br label %279

277:                                              ; preds = %271, %252, %249, %255, %243
  %278 = phi i32 [ 50, %243 ], [ 50, %255 ], [ 50, %249 ], [ 50, %252 ], [ 80, %271 ]
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %22, i32 2, i32 %278) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %172) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %163) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %162) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %161) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #4
  br label %371

279:                                              ; preds = %276, %229
  %280 = load i8, i8* %14, align 1, !range !2
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %316, label %282

282:                                              ; preds = %279
  %283 = load i8, i8* %140, align 4
  %284 = and i8 %283, 1
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %286, label %292

286:                                              ; preds = %282
  %287 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %171, align 8
  %288 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %287, i64 0, i32 23
  %289 = load i16, i16* %288, align 1
  %290 = and i16 %289, 2
  %291 = icmp eq i16 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %286, %282
  call void @ERR_put_error(i32 16, i32 0, i32 222, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 284) #4
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %22, i32 2, i32 110) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %163) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %162) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %161) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #4
  br label %371

293:                                              ; preds = %286
  %294 = call zeroext i1 @_ZN4bssl21ssl_is_sct_list_validEPK6cbs_st(%struct.cbs_st* nonnull %16) #4
  br i1 %294, label %296, label %295

295:                                              ; preds = %293
  call void @ERR_put_error(i32 16, i32 0, i32 149, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 290) #4
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %22, i32 2, i32 50) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %163) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %162) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %161) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #4
  br label %371

296:                                              ; preds = %293
  %297 = call i64 @sk_num(%struct.stack_st* nonnull %135) #4
  %298 = icmp eq i64 %297, 1
  br i1 %298, label %299, label %316

299:                                              ; preds = %296
  %300 = load %struct.ssl_session_st*, %struct.ssl_session_st** %159, align 8
  %301 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %160, align 8
  %302 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %301, i64 0, i32 72
  %303 = load %struct.crypto_buffer_pool_st*, %struct.crypto_buffer_pool_st** %302, align 8
  %304 = call %struct.crypto_buffer_st* @CRYPTO_BUFFER_new_from_CBS(%struct.cbs_st* nonnull %16, %struct.crypto_buffer_pool_st* %303) #4
  %305 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %300, i64 0, i32 25, i32 0, i32 0, i32 0
  %306 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %305, align 8
  store %struct.crypto_buffer_st* %304, %struct.crypto_buffer_st** %305, align 8
  %307 = icmp eq %struct.crypto_buffer_st* %306, null
  br i1 %307, label %309, label %308

308:                                              ; preds = %299
  call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %306) #4
  br label %309

309:                                              ; preds = %299, %308
  %310 = load %struct.ssl_session_st*, %struct.ssl_session_st** %159, align 8
  %311 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %310, i64 0, i32 25, i32 0, i32 0, i32 0
  %312 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %311, align 8
  %313 = icmp eq %struct.crypto_buffer_st* %312, null
  br i1 %313, label %314, label %316

314:                                              ; preds = %309
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %22, i32 2, i32 80) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %163) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %162) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %161) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #4
  br label %371

315:                                              ; preds = %212, %223
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %22, i32 2, i32 80) #4
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 233) #4
  br label %371

316:                                              ; preds = %279, %296, %309
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %163) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %162) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %161) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %158) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %157) #4
  %317 = call i64 @CBS_len(%struct.cbs_st* nonnull %10) #4
  %318 = icmp eq i64 %317, 0
  br i1 %318, label %319, label %178

319:                                              ; preds = %316, %151
  %320 = phi i64 [ 0, %151 ], [ %213, %316 ]
  %321 = call i64 @sk_num(%struct.stack_st* nonnull %135) #4
  %322 = icmp eq i64 %321, 0
  br i1 %322, label %323, label %324

323:                                              ; preds = %319
  call void @sk_pop_free_ex(%struct.stack_st* nonnull %135, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #4
  br label %324

324:                                              ; preds = %323, %319
  %325 = phi i64 [ 0, %323 ], [ %136, %319 ]
  %326 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 39
  %327 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %326, i64 0, i32 0, i32 0, i32 0
  %328 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %327, align 8
  %329 = bitcast %"class.std::__1::unique_ptr.18"* %326 to i64*
  store i64 %320, i64* %329, align 8
  %330 = icmp eq %struct.evp_pkey_st* %328, null
  br i1 %330, label %332, label %331

331:                                              ; preds = %324
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %328) #4
  br label %332

332:                                              ; preds = %324, %331
  %333 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %334 = load %struct.ssl_session_st*, %struct.ssl_session_st** %333, align 8
  %335 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %334, i64 0, i32 11
  %336 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %335, i64 0, i32 0, i32 0, i32 0
  %337 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %336, align 8
  %338 = bitcast %"class.std::__1::unique_ptr.23"* %335 to i64*
  store i64 %325, i64* %338, align 8
  %339 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %337, null
  br i1 %339, label %342, label %340

340:                                              ; preds = %332
  %341 = bitcast %struct.stack_st_CRYPTO_BUFFER* %337 to %struct.stack_st*
  call void @sk_pop_free_ex(%struct.stack_st* nonnull %341, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #4
  br label %342

342:                                              ; preds = %332, %340
  %343 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %22, i64 0, i32 16, i32 0, i32 0, i32 0
  %344 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %343, align 8
  %345 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %344, i64 0, i32 1
  %346 = load %"struct.bssl::SSL_X509_METHOD"*, %"struct.bssl::SSL_X509_METHOD"** %345, align 8
  %347 = getelementptr inbounds %"struct.bssl::SSL_X509_METHOD", %"struct.bssl::SSL_X509_METHOD"* %346, i64 0, i32 6
  %348 = load i1 (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*)** %347, align 8
  %349 = load %struct.ssl_session_st*, %struct.ssl_session_st** %333, align 8
  %350 = call zeroext i1 %348(%struct.ssl_session_st* %349) #4
  br i1 %350, label %352, label %351

351:                                              ; preds = %342
  call void @ERR_put_error(i32 16, i32 0, i32 137, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 316) #4
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %22, i32 2, i32 50) #4
  br label %378

352:                                              ; preds = %342
  %353 = load %struct.ssl_session_st*, %struct.ssl_session_st** %333, align 8
  %354 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %353, i64 0, i32 11, i32 0, i32 0, i32 0
  %355 = bitcast %struct.stack_st_CRYPTO_BUFFER** %354 to %struct.stack_st**
  %356 = load %struct.stack_st*, %struct.stack_st** %355, align 8
  %357 = call i64 @sk_num(%struct.stack_st* %356) #4
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %359, label %364

359:                                              ; preds = %352
  br i1 %2, label %361, label %360

360:                                              ; preds = %359
  call void @ERR_put_error(i32 16, i32 0, i32 192, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 323) #4
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %22, i32 2, i32 116) #4
  br label %378

361:                                              ; preds = %359
  %362 = load %struct.ssl_session_st*, %struct.ssl_session_st** %333, align 8
  %363 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %362, i64 0, i32 16
  store i64 0, i64* %363, align 8
  br label %378

364:                                              ; preds = %352
  %365 = load %struct.ssl_session_st*, %struct.ssl_session_st** %333, align 8
  %366 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %365, i64 0, i32 36
  %367 = load i8, i8* %366, align 8
  %368 = shl nuw nsw i8 %153, 1
  %369 = and i8 %367, -3
  %370 = or i8 %369, %368
  store i8 %370, i8* %366, align 8
  br label %378

371:                                              ; preds = %200, %203, %188, %315, %277, %295, %314, %292, %242, %226
  %372 = phi i64 [ %213, %226 ], [ %213, %242 ], [ %213, %292 ], [ %213, %314 ], [ %213, %295 ], [ %213, %277 ], [ %213, %315 ], [ 0, %200 ], [ %204, %203 ], [ %179, %188 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %158) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %157) #4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %376, label %374

374:                                              ; preds = %371
  %375 = inttoptr i64 %372 to %struct.evp_pkey_st*
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %375) #4
  br label %376

376:                                              ; preds = %374, %371
  br i1 %137, label %378, label %377

377:                                              ; preds = %376
  call void @sk_pop_free_ex(%struct.stack_st* nonnull %135, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #4
  br label %378

378:                                              ; preds = %138, %361, %360, %364, %351, %377, %376, %133
  %379 = phi i1 [ false, %133 ], [ false, %376 ], [ false, %377 ], [ false, %351 ], [ true, %364 ], [ false, %360 ], [ true, %361 ], [ false, %138 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %118) #4
  br label %380

380:                                              ; preds = %112, %378
  %381 = phi i64 [ %117, %378 ], [ %113, %112 ]
  %382 = phi i1 [ %379, %378 ], [ false, %112 ]
  %383 = icmp eq i64 %381, 0
  br i1 %383, label %386, label %384

384:                                              ; preds = %380
  %385 = inttoptr i64 %381 to %struct.crypto_buffer_st*
  call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %385) #4
  br label %386

386:                                              ; preds = %380, %384
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #4
  ret i1 %382
}

declare i32 @CBS_get_u16(%struct.cbs_st*, i16*) local_unnamed_addr #2

declare i32 @CBS_get_u24(%struct.cbs_st*, i32*) local_unnamed_addr #2

declare i32 @CBS_get_u24_length_prefixed(%struct.cbs_st*, %struct.cbs_st*) local_unnamed_addr #2

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

declare void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st*, i32, i32) local_unnamed_addr #2

declare void @ERR_add_error_dataf(i8*, ...) local_unnamed_addr #2

declare i8* @CBS_data(%struct.cbs_st*) local_unnamed_addr #2

declare i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

declare i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare i32 @CBS_get_u8_length_prefixed(%struct.cbs_st*, %struct.cbs_st*) local_unnamed_addr #2

declare i32 @CBS_get_u16_length_prefixed(%struct.cbs_st*, %struct.cbs_st*) local_unnamed_addr #2

declare %struct.evp_pkey_st* @_ZN4bssl21ssl_cert_parse_pubkeyEPK6cbs_st(%struct.cbs_st*) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl24ssl_cert_check_key_usageEPK6cbs_stNS_15ssl_key_usage_tE(%struct.cbs_st*, i32) local_unnamed_addr #2

declare i8* @SHA256(i8*, i64, i8*) local_unnamed_addr #2

declare %struct.crypto_buffer_st* @CRYPTO_BUFFER_new_from_CBS(%struct.cbs_st*, %struct.crypto_buffer_pool_st*) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl20ssl_parse_extensionsEPK6cbs_stPhNS_4SpanIKNS_18SSL_EXTENSION_TYPEEEEb(%struct.cbs_st*, i8*, %"struct.bssl::SSL_EXTENSION_TYPE"*, i64, i1 zeroext) local_unnamed_addr #2

declare i32 @CBS_get_u8(%struct.cbs_st*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl21ssl_is_sct_list_validEPK6cbs_st(%struct.cbs_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl32tls13_process_certificate_verifyEPNS_13SSL_HANDSHAKEERKNS_10SSLMessageE(%"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSLMessage"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 {
  %3 = alloca %struct.cbs_st, align 8
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca i16, align 2
  %6 = alloca i8, align 1
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"class.bssl::Array"*
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %"class.bssl::Span.1"*
  %11 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %12 = load %struct.ssl_st*, %struct.ssl_st** %11, align 8
  %13 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 39, i32 0, i32 0, i32 0
  %14 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %13, align 8
  %15 = icmp eq %struct.evp_pkey_st* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %2
  tail call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 343) #4
  br label %70

17:                                               ; preds = %2
  %18 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #4
  %19 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 2
  %20 = bitcast %struct.cbs_st* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %20, i64 16, i1 false)
  %21 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #4
  %22 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %4, i64 0, i32 0
  %23 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %4, i64 0, i32 1
  %24 = bitcast i16* %5 to i8*
  %25 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %24) #4
  store i16 -21846, i16* %5, align 2
  %26 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %3, i16* nonnull %5) #4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %17
  %29 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %3, %struct.cbs_st* nonnull %4) #4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #4
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %31, %28, %17
  call void @ERR_put_error(i32 16, i32 0, i32 137, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 352) #4
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %12, i32 2, i32 50) #4
  br label %68

35:                                               ; preds = %31
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #4
  store i8 50, i8* %6, align 1
  %36 = load i16, i16* %5, align 2
  %37 = call zeroext i1 @_ZN4bssl23tls12_check_peer_sigalgEPKNS_13SSL_HANDSHAKEEPht(%"struct.bssl::SSL_HANDSHAKE"* %0, i8* nonnull %6, i16 zeroext %36) #4
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = load i8, i8* %6, align 1
  %40 = zext i8 %39 to i32
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %12, i32 2, i32 %40) #4
  br label %66

41:                                               ; preds = %35
  %42 = load i16, i16* %5, align 2
  %43 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %44 = load %struct.ssl_session_st*, %struct.ssl_session_st** %43, align 8
  %45 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %44, i64 0, i32 3
  store i16 %42, i16* %45, align 8
  %46 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #4
  %47 = bitcast <2 x i64>* %7 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %46, i8 0, i64 16, i1 false) #4
  %48 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %12, i64 0, i32 26
  %49 = load i8, i8* %48, align 4
  %50 = and i8 %49, 1
  %51 = zext i8 %50 to i32
  %52 = call zeroext i1 @_ZN4bssl37tls13_get_cert_verify_signature_inputEPNS_13SSL_HANDSHAKEEPNS_5ArrayIhEENS_25ssl_cert_verify_context_tE(%"struct.bssl::SSL_HANDSHAKE"* %0, %"class.bssl::Array"* nonnull %8, i32 %51)
  br i1 %52, label %53, label %61

53:                                               ; preds = %41
  %54 = load i8*, i8** %22, align 8
  %55 = load i64, i64* %23, align 8
  %56 = load i16, i16* %5, align 2
  %57 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %13, align 8
  %58 = load <2 x i64>, <2 x i64>* %7, align 16
  store <2 x i64> %58, <2 x i64>* %9, align 16
  %59 = call zeroext i1 @_ZN4bssl21ssl_public_key_verifyEP6ssl_stNS_4SpanIKhEEtP11evp_pkey_stS4_(%struct.ssl_st* %12, i8* %54, i64 %55, i16 zeroext %56, %struct.evp_pkey_st* %57, %"class.bssl::Span.1"* nonnull byval(%"class.bssl::Span.1") align 8 %10) #4
  br i1 %59, label %63, label %60

60:                                               ; preds = %53
  call void @ERR_put_error(i32 16, i32 0, i32 114, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 374) #4
  br label %61

61:                                               ; preds = %41, %60
  %62 = phi i32 [ 51, %60 ], [ 80, %41 ]
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %12, i32 2, i32 %62) #4
  br label %63

63:                                               ; preds = %61, %53
  %64 = phi i1 [ true, %53 ], [ false, %61 ]
  %65 = load i8*, i8** %47, align 16
  call void @OPENSSL_free(i8* %65) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #4
  br label %66

66:                                               ; preds = %63, %38
  %67 = phi i1 [ %64, %63 ], [ false, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #4
  br label %68

68:                                               ; preds = %66, %34
  %69 = phi i1 [ false, %34 ], [ %67, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %24) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #4
  br label %70

70:                                               ; preds = %68, %16
  %71 = phi i1 [ false, %16 ], [ %69, %68 ]
  ret i1 %71
}

declare zeroext i1 @_ZN4bssl23tls12_check_peer_sigalgEPKNS_13SSL_HANDSHAKEEPht(%"struct.bssl::SSL_HANDSHAKE"*, i8*, i16 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl21ssl_public_key_verifyEP6ssl_stNS_4SpanIKhEEtP11evp_pkey_stS4_(%struct.ssl_st*, i8*, i64, i16 zeroext, %struct.evp_pkey_st*, %"class.bssl::Span.1"* byval(%"class.bssl::Span.1") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl22tls13_process_finishedEPNS_13SSL_HANDSHAKEERKNS_10SSLMessageEb(%"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSLMessage"* dereferenceable(40), i1 zeroext) local_unnamed_addr #0 {
  %4 = alloca [64 x i8], align 16
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %7 = load %struct.ssl_st*, %struct.ssl_st** %6, align 8
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 64, i1 false)
  br i1 %2, label %9, label %14

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 14, i64 0
  %11 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 7
  %12 = load i64, i64* %11, align 8
  %13 = ptrtoint i8* %10 to i64
  br label %25

14:                                               ; preds = %3
  %15 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #4
  store i64 -6148914691236517206, i64* %5, align 8
  %16 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %7, i64 0, i32 26
  %17 = load i8, i8* %16, align 4
  %18 = and i8 %17, 1
  %19 = icmp eq i8 %18, 0
  %20 = call zeroext i1 @_ZN4bssl18tls13_finished_macEPNS_13SSL_HANDSHAKEEPhPmb(%"struct.bssl::SSL_HANDSHAKE"* %0, i8* nonnull %8, i64* nonnull %5, i1 zeroext %19) #4
  br i1 %20, label %21, label %24

21:                                               ; preds = %14
  %22 = load i64, i64* %5, align 8
  %23 = ptrtoint [64 x i8]* %4 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #4
  br label %25

24:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #4
  br label %33

25:                                               ; preds = %21, %9
  %26 = phi i64 [ %12, %9 ], [ %22, %21 ]
  %27 = phi i64 [ %13, %9 ], [ %23, %21 ]
  %28 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 2
  %29 = inttoptr i64 %27 to i8*
  %30 = call i32 @CBS_mem_equal(%struct.cbs_st* %28, i8* %29, i64 %26) #4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %25
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %7, i32 2, i32 51) #4
  call void @ERR_put_error(i32 16, i32 0, i32 142, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 405) #4
  br label %33

33:                                               ; preds = %32, %25, %24
  %34 = phi i1 [ false, %24 ], [ false, %32 ], [ true, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #4
  ret i1 %34
}

declare zeroext i1 @_ZN4bssl18tls13_finished_macEPNS_13SSL_HANDSHAKEEPhPmb(%"struct.bssl::SSL_HANDSHAKE"*, i8*, i64*, i1 zeroext) local_unnamed_addr #2

declare i32 @CBS_mem_equal(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl21tls13_add_certificateEPNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"*) local_unnamed_addr #0 {
  %2 = alloca %"class.bssl::internal::StackAllocated.118", align 8
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = alloca %struct.cbb_st, align 8
  %6 = alloca %struct.cbb_st, align 8
  %7 = alloca %struct.cbb_st, align 8
  %8 = alloca %struct.cbb_st, align 8
  %9 = alloca %struct.cbb_st, align 8
  %10 = alloca %struct.cbb_st, align 8
  %11 = alloca %struct.cbb_st, align 8
  %12 = alloca %"class.bssl::Array", align 8
  %13 = alloca %struct.cbb_st, align 8
  %14 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %15 = load %struct.ssl_st*, %struct.ssl_st** %14, align 8
  %16 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %17 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %16, align 8
  %18 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %17, i64 0, i32 6, i32 0, i32 0, i32 0
  %19 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %18, align 8
  %20 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %19, i64 0, i32 15, i32 0, i32 0, i32 0
  %21 = load %"struct.bssl::DC"*, %"struct.bssl::DC"** %20, align 8
  %22 = bitcast %"class.bssl::internal::StackAllocated.118"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 32, i1 false)
  %23 = getelementptr inbounds %"class.bssl::internal::StackAllocated.118", %"class.bssl::internal::StackAllocated.118"* %2, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %23) #4
  %24 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 32, i1 false)
  %25 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 32, i1 false)
  %26 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 16777216
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %1
  %31 = call i32 @CBB_init(%struct.cbb_st* nonnull %23, i64 1024) #4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %262, label %39

33:                                               ; preds = %1
  %34 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %15, i64 0, i32 0
  %35 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %34, align 8
  %36 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %35, i64 0, i32 11
  %37 = load i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)** %36, align 8
  %38 = call zeroext i1 %37(%struct.ssl_st* %15, %struct.cbb_st* nonnull %23, %struct.cbb_st* nonnull %3, i8 zeroext 11) #4
  br i1 %38, label %39, label %262

39:                                               ; preds = %30, %33
  %40 = phi %struct.cbb_st* [ %3, %33 ], [ %23, %30 ]
  %41 = call i32 @CBB_add_u8(%struct.cbb_st* %40, i8 zeroext 0) #4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = call i32 @CBB_add_u24_length_prefixed(%struct.cbb_st* %40, %struct.cbb_st* nonnull %4) #4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43, %39
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 435) #4
  br label %262

47:                                               ; preds = %43
  %48 = call zeroext i1 @_ZN4bssl19ssl_has_certificateEPKNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"* %0) #4
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = call zeroext i1 @_ZN4bssl19ssl_add_message_cbbEP6ssl_stP6cbb_st(%struct.ssl_st* %15, %struct.cbb_st* nonnull %23) #4
  br label %262

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %19, i64 0, i32 1, i32 0, i32 0, i32 0
  %53 = bitcast %struct.stack_st_CRYPTO_BUFFER** %52 to %struct.stack_st**
  %54 = load %struct.stack_st*, %struct.stack_st** %53, align 8
  %55 = call i8* @sk_value(%struct.stack_st* %54, i64 0) #4
  %56 = bitcast i8* %55 to %struct.crypto_buffer_st*
  %57 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %57) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 32, i1 false)
  %58 = bitcast %struct.cbb_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 32, i1 false)
  %59 = call i32 @CBB_add_u24_length_prefixed(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5) #4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %69, label %61

61:                                               ; preds = %51
  %62 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %56) #4
  %63 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %56) #4
  %64 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %5, i8* %62, i64 %63) #4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %61
  %67 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %6) #4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66, %61, %51
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 449) #4
  br label %260

70:                                               ; preds = %66
  %71 = load i32, i32* %26, align 8
  %72 = and i32 %71, 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %98, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %19, i64 0, i32 11, i32 0, i32 0, i32 0
  %76 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %75, align 8
  %77 = icmp eq %struct.crypto_buffer_st* %76, null
  br i1 %77, label %98, label %78

78:                                               ; preds = %74
  %79 = bitcast %struct.cbb_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 -86, i64 32, i1 false)
  %80 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %6, i16 zeroext 18) #4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %95, label %82

82:                                               ; preds = %78
  %83 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %6, %struct.cbb_st* nonnull %7) #4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %95, label %85

85:                                               ; preds = %82
  %86 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %75, align 8
  %87 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %86) #4
  %88 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %75, align 8
  %89 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %88) #4
  %90 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %7, i8* %87, i64 %89) #4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %85
  %93 = call i32 @CBB_flush(%struct.cbb_st* nonnull %6) #4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92, %85, %82, %78
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 462) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #4
  br label %260

96:                                               ; preds = %92
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #4
  %97 = load i32, i32* %26, align 8
  br label %98

98:                                               ; preds = %74, %96, %70
  %99 = phi i32 [ %71, %74 ], [ %97, %96 ], [ %71, %70 ]
  %100 = and i32 %99, 512
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %132, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %19, i64 0, i32 12, i32 0, i32 0, i32 0
  %104 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %103, align 8
  %105 = icmp eq %struct.crypto_buffer_st* %104, null
  br i1 %105, label %132, label %106

106:                                              ; preds = %102
  %107 = bitcast %struct.cbb_st* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %107) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 -86, i64 32, i1 false)
  %108 = bitcast %struct.cbb_st* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %108) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 32, i1 false)
  %109 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %6, i16 zeroext 5) #4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %130, label %111

111:                                              ; preds = %106
  %112 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %6, %struct.cbb_st* nonnull %8) #4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111
  %115 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %8, i8 zeroext 1) #4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %130, label %117

117:                                              ; preds = %114
  %118 = call i32 @CBB_add_u24_length_prefixed(%struct.cbb_st* nonnull %8, %struct.cbb_st* nonnull %9) #4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %130, label %120

120:                                              ; preds = %117
  %121 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %103, align 8
  %122 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %121) #4
  %123 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %103, align 8
  %124 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %123) #4
  %125 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %9, i8* %122, i64 %124) #4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %130, label %127

127:                                              ; preds = %120
  %128 = call i32 @CBB_flush(%struct.cbb_st* nonnull %6) #4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127, %120, %117, %114, %111, %106
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 477) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %107) #4
  br label %260

131:                                              ; preds = %127
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %107) #4
  br label %132

132:                                              ; preds = %102, %131, %98
  %133 = call zeroext i1 @_ZN4bssl19ssl_signing_with_dcEPKNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"* %0) #4
  br i1 %133, label %134, label %158

134:                                              ; preds = %132
  %135 = getelementptr inbounds %"struct.bssl::DC", %"struct.bssl::DC"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %135, align 8
  %137 = bitcast %struct.cbb_st* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %137) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 -86, i64 32, i1 false)
  %138 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %6, i16 zeroext 34) #4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %134
  %141 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %6, %struct.cbb_st* nonnull %10) #4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %151, label %143

143:                                              ; preds = %140
  %144 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %136) #4
  %145 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %136) #4
  %146 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %10, i8* %144, i64 %145) #4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %151, label %148

148:                                              ; preds = %143
  %149 = call i32 @CBB_flush(%struct.cbb_st* nonnull %6) #4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %148, %143, %140, %134
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 490) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %137) #4
  br label %260

152:                                              ; preds = %148
  %153 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %15, i64 0, i32 8
  %154 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %153, align 8
  %155 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %154, i64 0, i32 23
  %156 = load i16, i16* %155, align 1
  %157 = or i16 %156, 128
  store i16 %157, i16* %155, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %137) #4
  br label %158

158:                                              ; preds = %152, %132
  %159 = load %struct.stack_st*, %struct.stack_st** %53, align 8
  %160 = call i64 @sk_num(%struct.stack_st* %159) #4
  %161 = icmp ugt i64 %160, 1
  br i1 %161, label %162, label %185

162:                                              ; preds = %158
  %163 = bitcast %struct.cbb_st* %11 to i8*
  br label %164

164:                                              ; preds = %162, %179
  %165 = phi i64 [ 1, %162 ], [ %180, %179 ]
  %166 = load %struct.stack_st*, %struct.stack_st** %53, align 8
  %167 = call i8* @sk_value(%struct.stack_st* %166, i64 %165) #4
  %168 = bitcast i8* %167 to %struct.crypto_buffer_st*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %163) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 -86, i64 32, i1 false)
  %169 = call i32 @CBB_add_u24_length_prefixed(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %11) #4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %184, label %171

171:                                              ; preds = %164
  %172 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %168) #4
  %173 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %168) #4
  %174 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %11, i8* %172, i64 %173) #4
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %184, label %176

176:                                              ; preds = %171
  %177 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %4, i16 zeroext 0) #4
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %184, label %179

179:                                              ; preds = %176
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %163) #4
  %180 = add nuw i64 %165, 1
  %181 = load %struct.stack_st*, %struct.stack_st** %53, align 8
  %182 = call i64 @sk_num(%struct.stack_st* %181) #4
  %183 = icmp ult i64 %180, %182
  br i1 %183, label %164, label %185

184:                                              ; preds = %176, %171, %164
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 503) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %163) #4
  br label %260

185:                                              ; preds = %179, %158
  %186 = load i32, i32* %26, align 8
  %187 = and i32 %186, 16777216
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %191

189:                                              ; preds = %185
  %190 = call zeroext i1 @_ZN4bssl19ssl_add_message_cbbEP6ssl_stP6cbb_st(%struct.ssl_st* %15, %struct.cbb_st* nonnull %23) #4
  br label %260

191:                                              ; preds = %185
  %192 = bitcast %"class.bssl::Array"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %192) #4
  %193 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %12, i64 0, i32 0
  %194 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %12, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %192, i8 0, i64 16, i1 false) #4
  %195 = call zeroext i1 @_ZN4bssl14CBBFinishArrayEP6cbb_stPNS_5ArrayIhEE(%struct.cbb_st* nonnull %23, %"class.bssl::Array"* nonnull %12) #4
  br i1 %195, label %197, label %196

196:                                              ; preds = %191
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 514) #4
  br label %257

197:                                              ; preds = %191
  %198 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %15, i64 0, i32 16, i32 0, i32 0, i32 0
  %199 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %198, align 8
  %200 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %199, i64 0, i32 66, i32 1, i32 0
  %201 = load %"struct.bssl::CertCompressionAlg"*, %"struct.bssl::CertCompressionAlg"** %200, align 8
  %202 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %199, i64 0, i32 66, i32 0
  %203 = load i64, i64* %202, align 8
  %204 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %201, i64 %203
  %205 = icmp eq i64 %203, 0
  br i1 %205, label %225, label %206

206:                                              ; preds = %197
  %207 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 30
  %208 = load i16, i16* %207, align 8
  br label %209

209:                                              ; preds = %209, %206
  %210 = phi %"struct.bssl::CertCompressionAlg"* [ %201, %206 ], [ %216, %209 ]
  %211 = phi %"struct.bssl::CertCompressionAlg"* [ null, %206 ], [ %215, %209 ]
  %212 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %210, i64 0, i32 2
  %213 = load i16, i16* %212, align 8
  %214 = icmp eq i16 %213, %208
  %215 = select i1 %214, %"struct.bssl::CertCompressionAlg"* %210, %"struct.bssl::CertCompressionAlg"* %211
  %216 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %210, i64 1
  %217 = icmp eq %"struct.bssl::CertCompressionAlg"* %216, %204
  %218 = or i1 %214, %217
  br i1 %218, label %219, label %209

219:                                              ; preds = %209
  %220 = icmp eq %"struct.bssl::CertCompressionAlg"* %215, null
  br i1 %220, label %225, label %221

221:                                              ; preds = %219
  %222 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %215, i64 0, i32 0
  %223 = load i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)*, i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)** %222, align 8
  %224 = icmp eq i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)* %223, null
  br i1 %224, label %225, label %226

225:                                              ; preds = %197, %221, %219
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 527) #4
  br label %257

226:                                              ; preds = %221
  %227 = bitcast %struct.cbb_st* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %227) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %227, i8 -86, i64 32, i1 false)
  %228 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %15, i64 0, i32 0
  %229 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %228, align 8
  %230 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %229, i64 0, i32 11
  %231 = load i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)** %230, align 8
  %232 = call zeroext i1 %231(%struct.ssl_st* %15, %struct.cbb_st* nonnull %23, %struct.cbb_st* nonnull %3, i8 zeroext 25) #4
  br i1 %232, label %233, label %254

233:                                              ; preds = %226
  %234 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 30
  %235 = load i16, i16* %234, align 8
  %236 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %3, i16 zeroext %235) #4
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %254, label %238

238:                                              ; preds = %233
  %239 = load i64, i64* %194, align 8
  %240 = trunc i64 %239 to i32
  %241 = call i32 @CBB_add_u24(%struct.cbb_st* nonnull %3, i32 %240) #4
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %254, label %243

243:                                              ; preds = %238
  %244 = call i32 @CBB_add_u24_length_prefixed(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %13) #4
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %254, label %246

246:                                              ; preds = %243
  %247 = load i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)*, i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)** %222, align 8
  %248 = load i8*, i8** %193, align 8
  %249 = load i64, i64* %194, align 8
  %250 = call i32 %247(%struct.ssl_st* %15, %struct.cbb_st* nonnull %13, i8* %248, i64 %249) #4
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %254, label %252

252:                                              ; preds = %246
  %253 = call zeroext i1 @_ZN4bssl19ssl_add_message_cbbEP6ssl_stP6cbb_st(%struct.ssl_st* %15, %struct.cbb_st* nonnull %23) #4
  br i1 %253, label %255, label %254

254:                                              ; preds = %246, %243, %238, %233, %252, %226
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 540) #4
  br label %255

255:                                              ; preds = %252, %254
  %256 = phi i1 [ false, %254 ], [ true, %252 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %227) #4
  br label %257

257:                                              ; preds = %225, %255, %196
  %258 = phi i1 [ false, %196 ], [ false, %225 ], [ %256, %255 ]
  %259 = load i8*, i8** %193, align 8
  call void @OPENSSL_free(i8* %259) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %192) #4
  br label %260

260:                                              ; preds = %184, %151, %130, %95, %257, %189, %69
  %261 = phi i1 [ %258, %257 ], [ %190, %189 ], [ false, %184 ], [ false, %151 ], [ false, %69 ], [ false, %95 ], [ false, %130 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %57) #4
  br label %262

262:                                              ; preds = %33, %30, %260, %49, %46
  %263 = phi i1 [ %261, %260 ], [ %50, %49 ], [ false, %46 ], [ false, %30 ], [ false, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #4
  call void @CBB_cleanup(%struct.cbb_st* nonnull %23) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #4
  ret i1 %263
}

declare i32 @CBB_add_u24_length_prefixed(%struct.cbb_st*, %struct.cbb_st*) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl19ssl_has_certificateEPKNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl19ssl_add_message_cbbEP6ssl_stP6cbb_st(%struct.ssl_st*, %struct.cbb_st*) local_unnamed_addr #2

declare i32 @CBB_add_u16_length_prefixed(%struct.cbb_st*, %struct.cbb_st*) local_unnamed_addr #2

declare i32 @CBB_add_u16(%struct.cbb_st*, i16 zeroext) local_unnamed_addr #2

declare i32 @CBB_flush(%struct.cbb_st*) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl19ssl_signing_with_dcEPKNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"*) local_unnamed_addr #2

declare i32 @CBB_add_u24(%struct.cbb_st*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl28tls13_add_certificate_verifyEPNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"*) local_unnamed_addr #0 {
  %2 = alloca i16, align 2
  %3 = alloca %"class.bssl::internal::StackAllocated.118", align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = alloca %struct.cbb_st, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca <2 x i64>, align 16
  %9 = bitcast <2 x i64>* %8 to %"class.bssl::Array"*
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to %"class.bssl::Array"*
  %12 = alloca %"class.bssl::internal::StackAllocated.118", align 8
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to %"class.bssl::Span.1"*
  %15 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %16 = load %struct.ssl_st*, %struct.ssl_st** %15, align 8
  %17 = bitcast i16* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %17) #4
  store i16 -21846, i16* %2, align 2
  %18 = call zeroext i1 @_ZN4bssl31tls1_choose_signature_algorithmEPNS_13SSL_HANDSHAKEEPt(%"struct.bssl::SSL_HANDSHAKE"* %0, i16* nonnull %2) #4
  br i1 %18, label %20, label %19

19:                                               ; preds = %1
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %16, i32 2, i32 40) #4
  br label %200

20:                                               ; preds = %1
  %21 = bitcast %"class.bssl::internal::StackAllocated.118"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 32, i1 false)
  %22 = getelementptr inbounds %"class.bssl::internal::StackAllocated.118", %"class.bssl::internal::StackAllocated.118"* %3, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %22) #4
  %23 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 32, i1 false)
  %24 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %16, i64 0, i32 0
  %25 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %24, align 8
  %26 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %25, i64 0, i32 11
  %27 = load i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)** %26, align 8
  %28 = call zeroext i1 %27(%struct.ssl_st* %16, %struct.cbb_st* nonnull %22, %struct.cbb_st* nonnull %4, i8 zeroext 15) #4
  br i1 %28, label %29, label %33

29:                                               ; preds = %20
  %30 = load i16, i16* %2, align 2
  %31 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %4, i16 zeroext %30) #4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29, %20
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 560) #4
  br label %198

34:                                               ; preds = %29
  %35 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 32, i1 false)
  %36 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 38, i32 0, i32 0, i32 0
  %37 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %36, align 8
  %38 = call i32 @EVP_PKEY_size(%struct.evp_pkey_st* %37) #4
  %39 = sext i32 %38 to i64
  %40 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %41 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #4
  store i64 -6148914691236517206, i64* %7, align 8
  %42 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5) #4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %34
  %45 = call i32 @CBB_reserve(%struct.cbb_st* nonnull %5, i8** nonnull %6, i64 %39) #4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44, %34
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %16, i32 2, i32 80) #4
  br label %196

48:                                               ; preds = %44
  %49 = bitcast <2 x i64>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #4
  %50 = bitcast <2 x i64>* %8 to i8**
  %51 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %9, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %49, i8 0, i64 16, i1 false) #4
  %52 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %16, i64 0, i32 26
  %53 = load i8, i8* %52, align 4
  %54 = and i8 %53, 1
  %55 = xor i8 %54, 1
  %56 = zext i8 %55 to i32
  %57 = call zeroext i1 @_ZN4bssl37tls13_get_cert_verify_signature_inputEPNS_13SSL_HANDSHAKEEPNS_5ArrayIhEENS_25ssl_cert_verify_context_tE(%"struct.bssl::SSL_HANDSHAKE"* %0, %"class.bssl::Array"* nonnull %9, i32 %56)
  br i1 %57, label %59, label %58

58:                                               ; preds = %48
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %16, i32 2, i32 80) #4
  br label %193

59:                                               ; preds = %48
  %60 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 45, i32 0, i32 0, i32 0
  %61 = load %"struct.bssl::SSL_HANDSHAKE_HINTS"*, %"struct.bssl::SSL_HANDSHAKE_HINTS"** %60, align 8
  %62 = bitcast <2 x i64>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #4
  %63 = bitcast <2 x i64>* %10 to i8**
  %64 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %11, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %62, i8 0, i64 16, i1 false) #4
  %65 = icmp ne %"struct.bssl::SSL_HANDSHAKE_HINTS"* %61, null
  br i1 %65, label %66, label %145

66:                                               ; preds = %59
  %67 = bitcast %"class.bssl::internal::StackAllocated.118"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 32, i1 false)
  %68 = getelementptr inbounds %"class.bssl::internal::StackAllocated.118", %"class.bssl::internal::StackAllocated.118"* %12, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %68) #4
  %69 = call i32 @CBB_init(%struct.cbb_st* nonnull %68, i64 64) #4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %66
  %72 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %36, align 8
  %73 = call i32 @EVP_marshal_public_key(%struct.cbb_st* nonnull %68, %struct.evp_pkey_st* %72) #4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %71
  %76 = call zeroext i1 @_ZN4bssl14CBBFinishArrayEP6cbb_stPNS_5ArrayIhEE(%struct.cbb_st* nonnull %68, %"class.bssl::Array"* nonnull %11) #4
  br i1 %76, label %78, label %77

77:                                               ; preds = %71, %66, %75
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %16, i32 2, i32 80) #4
  call void @CBB_cleanup(%struct.cbb_st* nonnull %68) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #4
  br label %190

78:                                               ; preds = %75
  call void @CBB_cleanup(%struct.cbb_st* nonnull %68) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #4
  %79 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %80 = load i32, i32* %79, align 8
  %81 = and i32 %80, 8388608
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %145

83:                                               ; preds = %78
  %84 = load i16, i16* %2, align 2
  %85 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %61, i64 0, i32 5
  %86 = load i16, i16* %85, align 8
  %87 = icmp eq i16 %84, %86
  br i1 %87, label %88, label %145

88:                                               ; preds = %83
  %89 = load i8*, i8** %50, align 16
  %90 = load i64, i64* %51, align 8
  %91 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %61, i64 0, i32 7, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %61, i64 0, i32 7, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = icmp eq i64 %90, %94
  br i1 %95, label %96, label %145

96:                                               ; preds = %88
  %97 = getelementptr inbounds i8, i8* %89, i64 %90
  %98 = icmp eq i64 %90, 0
  %99 = getelementptr inbounds i8, i8* %92, i64 %90
  br i1 %98, label %112, label %100

100:                                              ; preds = %96, %106
  %101 = phi i8* [ %108, %106 ], [ %92, %96 ]
  %102 = phi i8* [ %107, %106 ], [ %89, %96 ]
  %103 = load i8, i8* %102, align 1
  %104 = load i8, i8* %101, align 1
  %105 = icmp eq i8 %103, %104
  br i1 %105, label %106, label %145

106:                                              ; preds = %100
  %107 = getelementptr inbounds i8, i8* %102, i64 1
  %108 = getelementptr inbounds i8, i8* %101, i64 1
  %109 = icmp eq i8* %107, %97
  %110 = icmp eq i8* %108, %99
  %111 = or i1 %110, %109
  br i1 %111, label %112, label %100

112:                                              ; preds = %106, %96
  %113 = load i8*, i8** %63, align 16
  %114 = load i64, i64* %64, align 8
  %115 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %61, i64 0, i32 8, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %61, i64 0, i32 8, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = icmp eq i64 %114, %118
  br i1 %119, label %120, label %145

120:                                              ; preds = %112
  %121 = getelementptr inbounds i8, i8* %113, i64 %114
  %122 = icmp eq i64 %114, 0
  %123 = getelementptr inbounds i8, i8* %116, i64 %114
  br i1 %122, label %136, label %124

124:                                              ; preds = %120, %130
  %125 = phi i8* [ %132, %130 ], [ %116, %120 ]
  %126 = phi i8* [ %131, %130 ], [ %113, %120 ]
  %127 = load i8, i8* %126, align 1
  %128 = load i8, i8* %125, align 1
  %129 = icmp eq i8 %127, %128
  br i1 %129, label %130, label %145

130:                                              ; preds = %124
  %131 = getelementptr inbounds i8, i8* %126, i64 1
  %132 = getelementptr inbounds i8, i8* %125, i64 1
  %133 = icmp eq i8* %131, %121
  %134 = icmp eq i8* %132, %123
  %135 = or i1 %134, %133
  br i1 %135, label %136, label %124

136:                                              ; preds = %130, %120
  %137 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %61, i64 0, i32 9, i32 1
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %138, -1
  %140 = icmp ult i64 %139, %39
  br i1 %140, label %141, label %145

141:                                              ; preds = %136
  store i64 %138, i64* %7, align 8
  %142 = load i8*, i8** %6, align 8
  %143 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %61, i64 0, i32 9, i32 0
  %144 = load i8*, i8** %143, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %142, i8* align 1 %144, i64 %138, i1 false) #4
  br label %183

145:                                              ; preds = %100, %124, %136, %112, %88, %59, %78, %83
  %146 = load i8*, i8** %6, align 8
  %147 = load i16, i16* %2, align 2
  %148 = load <2 x i64>, <2 x i64>* %8, align 16
  store <2 x i64> %148, <2 x i64>* %13, align 16
  %149 = call i32 @_ZN4bssl20ssl_private_key_signEPNS_13SSL_HANDSHAKEEPhPmmtNS_4SpanIKhEE(%"struct.bssl::SSL_HANDSHAKE"* %0, i8* %146, i64* nonnull %7, i64 %39, i16 zeroext %147, %"class.bssl::Span.1"* nonnull byval(%"class.bssl::Span.1") align 8 %14) #4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %190

151:                                              ; preds = %145
  br i1 %65, label %152, label %183

152:                                              ; preds = %151
  %153 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %154 = load i32, i32* %153, align 8
  %155 = and i32 %154, 8388608
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %183, label %157

157:                                              ; preds = %152
  %158 = load i16, i16* %2, align 2
  %159 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %61, i64 0, i32 5
  store i16 %158, i16* %159, align 8
  %160 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %61, i64 0, i32 7
  %161 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %160, i64 0, i32 0
  %162 = load i8*, i8** %161, align 8
  call void @OPENSSL_free(i8* %162) #4
  %163 = load <2 x i64>, <2 x i64>* %8, align 16
  %164 = bitcast %"class.bssl::Array"* %160 to <2 x i64>*
  store <2 x i64> %163, <2 x i64>* %164, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %49, i8 0, i64 16, i1 false) #4
  %165 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %61, i64 0, i32 8
  %166 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %165, i64 0, i32 0
  %167 = load i8*, i8** %166, align 8
  call void @OPENSSL_free(i8* %167) #4
  %168 = load <2 x i64>, <2 x i64>* %10, align 16
  %169 = bitcast %"class.bssl::Array"* %165 to <2 x i64>*
  store <2 x i64> %168, <2 x i64>* %169, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %62, i8 0, i64 16, i1 false) #4
  %170 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %61, i64 0, i32 9
  %171 = load i8*, i8** %6, align 8
  %172 = load i64, i64* %7, align 8
  %173 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %170, i64 0, i32 0
  %174 = load i8*, i8** %173, align 8
  call void @OPENSSL_free(i8* %174) #4
  %175 = bitcast %"class.bssl::Array"* %170 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %175, i8 0, i64 16, i1 false) #4
  %176 = icmp eq i64 %172, 0
  br i1 %176, label %183, label %177

177:                                              ; preds = %157
  %178 = call i8* @OPENSSL_malloc(i64 %172) #4
  store i8* %178, i8** %173, align 8
  %179 = icmp eq i8* %178, null
  br i1 %179, label %182, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %61, i64 0, i32 9, i32 1
  store i64 %172, i64* %181, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %178, i8* align 1 %171, i64 %172, i1 false) #4
  br label %183

182:                                              ; preds = %177
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 324) #4
  br label %190

183:                                              ; preds = %157, %180, %151, %152, %141
  %184 = load i64, i64* %7, align 8
  %185 = call i32 @CBB_did_write(%struct.cbb_st* nonnull %5, i64 %184) #4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %190, label %187

187:                                              ; preds = %183
  %188 = call zeroext i1 @_ZN4bssl19ssl_add_message_cbbEP6ssl_stP6cbb_st(%struct.ssl_st* %16, %struct.cbb_st* nonnull %22) #4
  %189 = select i1 %188, i32 0, i32 2
  br label %190

190:                                              ; preds = %145, %182, %187, %183, %77
  %191 = phi i32 [ 2, %77 ], [ 2, %183 ], [ %189, %187 ], [ %149, %145 ], [ 2, %182 ]
  %192 = load i8*, i8** %63, align 16
  call void @OPENSSL_free(i8* %192) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #4
  br label %193

193:                                              ; preds = %190, %58
  %194 = phi i32 [ %191, %190 ], [ 2, %58 ]
  %195 = load i8*, i8** %50, align 16
  call void @OPENSSL_free(i8* %195) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #4
  br label %196

196:                                              ; preds = %193, %47
  %197 = phi i32 [ %194, %193 ], [ 2, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #4
  br label %198

198:                                              ; preds = %196, %33
  %199 = phi i32 [ %197, %196 ], [ 2, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #4
  call void @CBB_cleanup(%struct.cbb_st* nonnull %22) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #4
  br label %200

200:                                              ; preds = %198, %19
  %201 = phi i32 [ %199, %198 ], [ 2, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %17) #4
  ret i32 %201
}

declare zeroext i1 @_ZN4bssl31tls1_choose_signature_algorithmEPNS_13SSL_HANDSHAKEEPt(%"struct.bssl::SSL_HANDSHAKE"*, i16*) local_unnamed_addr #2

declare i32 @EVP_PKEY_size(%struct.evp_pkey_st*) local_unnamed_addr #2

declare i32 @CBB_reserve(%struct.cbb_st*, i8**, i64) local_unnamed_addr #2

declare i32 @EVP_marshal_public_key(%struct.cbb_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

declare i32 @_ZN4bssl20ssl_private_key_signEPNS_13SSL_HANDSHAKEEPhPmmtNS_4SpanIKhEE(%"struct.bssl::SSL_HANDSHAKE"*, i8*, i64*, i64, i16 zeroext, %"class.bssl::Span.1"* byval(%"class.bssl::Span.1") align 8) local_unnamed_addr #2

declare i32 @CBB_did_write(%struct.cbb_st*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl18tls13_add_finishedEPNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"*) local_unnamed_addr #0 {
  %2 = alloca i64, align 8
  %3 = alloca [64 x i8], align 16
  %4 = alloca %"class.bssl::internal::StackAllocated.118", align 8
  %5 = alloca %struct.cbb_st, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %7 = load %struct.ssl_st*, %struct.ssl_st** %6, align 8
  %8 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #4
  store i64 -6148914691236517206, i64* %2, align 8
  %9 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 64, i1 false)
  %10 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %7, i64 0, i32 26
  %11 = load i8, i8* %10, align 4
  %12 = and i8 %11, 1
  %13 = icmp ne i8 %12, 0
  %14 = call zeroext i1 @_ZN4bssl18tls13_finished_macEPNS_13SSL_HANDSHAKEEPhPmb(%"struct.bssl::SSL_HANDSHAKE"* %0, i8* nonnull %9, i64* nonnull %2, i1 zeroext %13) #4
  br i1 %14, label %16, label %15

15:                                               ; preds = %1
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %7, i32 2, i32 80) #4
  call void @ERR_put_error(i32 16, i32 0, i32 142, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 634) #4
  br label %33

16:                                               ; preds = %1
  %17 = bitcast %"class.bssl::internal::StackAllocated.118"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false)
  %18 = getelementptr inbounds %"class.bssl::internal::StackAllocated.118", %"class.bssl::internal::StackAllocated.118"* %4, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %18) #4
  %19 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false)
  %20 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %7, i64 0, i32 0
  %21 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %20, align 8
  %22 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %21, i64 0, i32 11
  %23 = load i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)** %22, align 8
  %24 = call zeroext i1 %23(%struct.ssl_st* %7, %struct.cbb_st* nonnull %18, %struct.cbb_st* nonnull %5, i8 zeroext 20) #4
  br i1 %24, label %25, label %31

25:                                               ; preds = %16
  %26 = load i64, i64* %2, align 8
  %27 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %5, i8* nonnull %9, i64 %26) #4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = call zeroext i1 @_ZN4bssl19ssl_add_message_cbbEP6ssl_stP6cbb_st(%struct.ssl_st* %7, %struct.cbb_st* nonnull %18) #4
  br label %31

31:                                               ; preds = %29, %16, %25
  %32 = phi i1 [ false, %25 ], [ false, %16 ], [ %30, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #4
  call void @CBB_cleanup(%struct.cbb_st* nonnull %18) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #4
  br label %33

33:                                               ; preds = %31, %15
  %34 = phi i1 [ %32, %31 ], [ false, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #4
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl20tls13_add_key_updateEP6ssl_sti(%struct.ssl_st*, i32) local_unnamed_addr #0 {
  %3 = alloca %"class.bssl::internal::StackAllocated.118", align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = bitcast %"class.bssl::internal::StackAllocated.118"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 32, i1 false)
  %6 = getelementptr inbounds %"class.bssl::internal::StackAllocated.118", %"class.bssl::internal::StackAllocated.118"* %3, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %6) #4
  %7 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %9 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %9, i64 0, i32 11
  %11 = load i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)** %10, align 8
  %12 = call zeroext i1 %11(%struct.ssl_st* %0, %struct.cbb_st* nonnull %6, %struct.cbb_st* nonnull %4, i8 zeroext 24) #4
  br i1 %12, label %13, label %27

13:                                               ; preds = %2
  %14 = trunc i32 %1 to i8
  %15 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %4, i8 zeroext %14) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %27, label %17

17:                                               ; preds = %13
  %18 = call zeroext i1 @_ZN4bssl19ssl_add_message_cbbEP6ssl_stP6cbb_st(%struct.ssl_st* %0, %struct.cbb_st* nonnull %6) #4
  br i1 %18, label %19, label %27

19:                                               ; preds = %17
  %20 = call zeroext i1 @_ZN4bssl24tls13_rotate_traffic_keyEP6ssl_st20evp_aead_direction_t(%struct.ssl_st* %0, i32 1) #4
  br i1 %20, label %21, label %27

21:                                               ; preds = %19
  %22 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %23 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %22, align 8
  %24 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %23, i64 0, i32 23
  %25 = load i16, i16* %24, align 1
  %26 = or i16 %25, 1024
  store i16 %26, i16* %24, align 1
  br label %27

27:                                               ; preds = %2, %17, %19, %13, %21
  %28 = phi i1 [ true, %21 ], [ false, %13 ], [ false, %19 ], [ false, %17 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #4
  call void @CBB_cleanup(%struct.cbb_st* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #4
  ret i1 %28
}

declare zeroext i1 @_ZN4bssl24tls13_rotate_traffic_keyEP6ssl_st20evp_aead_direction_t(%struct.ssl_st*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl20tls13_post_handshakeEP6ssl_stRKNS_10SSLMessageE(%struct.ssl_st*, %"struct.bssl::SSLMessage"* dereferenceable(40)) local_unnamed_addr #0 {
  %3 = alloca %struct.cbs_st, align 8
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp eq i8 %6, 24
  %8 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %9 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %9, i64 0, i32 22
  br i1 %7, label %11, label %52

11:                                               ; preds = %2
  %12 = load i8, i8* %10, align 4
  %13 = add i8 %12, 1
  store i8 %13, i8* %10, align 4
  %14 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 24
  %15 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %14, align 8
  %16 = icmp eq %struct.ssl_quic_method_st* %15, null
  br i1 %16, label %17, label %22

17:                                               ; preds = %11
  %18 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %8, align 8
  %19 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %18, i64 0, i32 22
  %20 = load i8, i8* %19, align 4
  %21 = icmp ugt i8 %20, 32
  br i1 %21, label %22, label %23

22:                                               ; preds = %11, %17
  tail call void @ERR_put_error(i32 16, i32 0, i32 260, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 699) #4
  tail call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %0, i32 2, i32 10) #4
  br label %63

23:                                               ; preds = %17
  %24 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #4
  %25 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 2
  %26 = bitcast %struct.cbs_st* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 %26, i64 16, i1 false) #4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #4
  store i8 -86, i8* %4, align 1
  %27 = call i32 @CBS_get_u8(%struct.cbs_st* nonnull %3, i8* nonnull %4) #4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %23
  %30 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #4
  %31 = icmp eq i64 %30, 0
  %32 = load i8, i8* %4, align 1
  %33 = icmp ult i8 %32, 2
  %34 = and i1 %31, %33
  br i1 %34, label %36, label %35

35:                                               ; preds = %29, %23
  call void @ERR_put_error(i32 16, i32 0, i32 137, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 675) #4
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %0, i32 2, i32 50) #4
  br label %50

36:                                               ; preds = %29
  %37 = call zeroext i1 @_ZN4bssl24tls13_rotate_traffic_keyEP6ssl_st20evp_aead_direction_t(%struct.ssl_st* %0, i32 0) #4
  br i1 %37, label %38, label %50

38:                                               ; preds = %36
  %39 = load i8, i8* %4, align 1
  %40 = icmp eq i8 %39, 1
  br i1 %40, label %41, label %49

41:                                               ; preds = %38
  %42 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %8, align 8
  %43 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %42, i64 0, i32 23
  %44 = load i16, i16* %43, align 1
  %45 = and i16 %44, 1024
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = call zeroext i1 @_ZN4bssl20tls13_add_key_updateEP6ssl_sti(%struct.ssl_st* %0, i32 0) #4
  br i1 %48, label %49, label %50

49:                                               ; preds = %47, %41, %38
  br label %50

50:                                               ; preds = %35, %36, %47, %49
  %51 = phi i1 [ false, %35 ], [ true, %49 ], [ false, %36 ], [ false, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #4
  br label %63

52:                                               ; preds = %2
  store i8 0, i8* %10, align 4
  %53 = load i8, i8* %5, align 1
  %54 = icmp eq i8 %53, 4
  br i1 %54, label %55, label %62

55:                                               ; preds = %52
  %56 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %57 = load i8, i8* %56, align 4
  %58 = and i8 %57, 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %55
  %61 = tail call zeroext i1 @_ZN4bssl32tls13_process_new_session_ticketEP6ssl_stRKNS_10SSLMessageE(%struct.ssl_st* %0, %"struct.bssl::SSLMessage"* dereferenceable(40) %1) #4
  br label %63

62:                                               ; preds = %55, %52
  tail call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %0, i32 2, i32 10) #4
  tail call void @ERR_put_error(i32 16, i32 0, i32 223, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 714) #4
  br label %63

63:                                               ; preds = %62, %60, %50, %22
  %64 = phi i1 [ false, %22 ], [ %51, %50 ], [ false, %62 ], [ %61, %60 ]
  ret i1 %64
}

declare zeroext i1 @_ZN4bssl32tls13_process_new_session_ticketEP6ssl_stRKNS_10SSLMessageE(%struct.ssl_st*, %"struct.bssl::SSLMessage"* dereferenceable(40)) local_unnamed_addr #2

declare %struct.stack_st* @sk_new_null() local_unnamed_addr #2

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

declare void @CBB_zero(%struct.cbb_st*) local_unnamed_addr #2

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #2

declare void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare i64 @sk_push(%struct.stack_st*, i8*) local_unnamed_addr #2

declare void @sk_pop_free_ex(%struct.stack_st*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_(void (i8*)*, i8*) #3 comdat align 2 {
  %3 = bitcast i8* %1 to %struct.crypto_buffer_st*
  tail call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* %3) #4
  ret void
}

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
