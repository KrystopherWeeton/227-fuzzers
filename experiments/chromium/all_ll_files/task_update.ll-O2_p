; ModuleID = '../../components/update_client/task_update.cc'
source_filename = "../../components/update_client/task_update.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.update_client::TaskUpdate" = type { %"class.update_client::Task.base", %"class.base::ThreadChecker", %class.scoped_refptr, i8, %"class.std::__1::vector", %"class.base::OnceCallback", %"class.base::RepeatingCallback.30", %"class.base::OnceCallback.31" }
%"class.update_client::Task.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::ThreadChecker" = type { i8 }
%class.scoped_refptr = type { %"class.update_client::UpdateEngine"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::basic_string"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.13", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.30" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.31" = type { %"class.base::internal::CallbackBase" }
%"class.update_client::UpdateEngine" = type { %"class.base::RefCountedThreadSafe.1", %"class.base::ThreadChecker", %class.scoped_refptr.2, %"class.update_client::UpdateChecker"* (%"class.update_client::Configurator"*, %"class.update_client::PersistedData"*)*, %class.scoped_refptr.4, %"class.std::__1::unique_ptr.6", %"class.base::RepeatingCallback", %"class.std::__1::map", %"class.base::TimeTicks" }
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.2 = type { %"class.update_client::Configurator"* }
%"class.update_client::Configurator" = type opaque
%"class.update_client::UpdateChecker" = type { i32 (...)** }
%"class.update_client::PersistedData" = type opaque
%class.scoped_refptr.4 = type { %"class.update_client::PingManager"* }
%"class.update_client::PingManager" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.5", %class.scoped_refptr.2 }
%"class.base::RefCountedThreadSafe.5" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.update_client::PersistedData"* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::OnceCallback.32" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback.35" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.33 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.34" }>
%"class.base::RefCountedThreadSafe.34" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.34", [4 x i8] }>
%class.scoped_refptr.36 = type { %"class.update_client::Task"* }
%"class.update_client::Task" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>

$_ZN4base8internal7InvokerINS0_9BindStateIMN13update_client10TaskUpdateEFvNS3_5ErrorEEJ13scoped_refptrIS4_EEEEFvS5_EE7RunOnceEPNS0_13BindStateBaseES5_ = comdat any

$_ZN4base8internal9BindStateIMN13update_client10TaskUpdateEFvNS2_5ErrorEEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN13update_client10TaskUpdateEFvNS3_5ErrorEEJ13scoped_refptrIS4_ES5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN13update_client10TaskUpdateEFvNS2_5ErrorEEJ13scoped_refptrIS3_ES4_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN13update_client10TaskUpdateE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.update_client::TaskUpdate"*)* @_ZN13update_client10TaskUpdate3RunEv to i8*), i8* bitcast (void (%"class.update_client::TaskUpdate"*)* @_ZN13update_client10TaskUpdate6CancelEv to i8*), i8* bitcast (void (%"class.std::__1::vector"*, %"class.update_client::TaskUpdate"*)* @_ZNK13update_client10TaskUpdate6GetIdsEv to i8*), i8* bitcast (void (%"class.update_client::TaskUpdate"*)* @_ZN13update_client10TaskUpdateD2Ev to i8*), i8* bitcast (void (%"class.update_client::TaskUpdate"*)* @_ZN13update_client10TaskUpdateD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [13 x i8] c"TaskComplete\00", align 1
@.str.1 = private unnamed_addr constant [46 x i8] c"../../components/update_client/task_update.cc\00", align 1

@_ZN13update_client10TaskUpdateC1E13scoped_refptrINS_12UpdateEngineEEbRKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEEN4base12OnceCallbackIFNS5_IN4absl8optionalINS_12CrxComponentEEENS9_ISL_EEEESF_EEENSG_17RepeatingCallbackIFvNS_13CrxUpdateItemEEEENSH_IFvS1_INS_4TaskEENS_5ErrorEEEE = hidden unnamed_addr alias void (%"class.update_client::TaskUpdate"*, %"class.update_client::UpdateEngine"*, i1, %"class.std::__1::vector"*, %"class.base::OnceCallback"*, %"class.base::RepeatingCallback.30"*, %"class.base::OnceCallback.31"*), void (%"class.update_client::TaskUpdate"*, %"class.update_client::UpdateEngine"*, i1, %"class.std::__1::vector"*, %"class.base::OnceCallback"*, %"class.base::RepeatingCallback.30"*, %"class.base::OnceCallback.31"*)* @_ZN13update_client10TaskUpdateC2E13scoped_refptrINS_12UpdateEngineEEbRKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEEN4base12OnceCallbackIFNS5_IN4absl8optionalINS_12CrxComponentEEENS9_ISL_EEEESF_EEENSG_17RepeatingCallbackIFvNS_13CrxUpdateItemEEEENSH_IFvS1_INS_4TaskEENS_5ErrorEEEE
@_ZN13update_client10TaskUpdateD1Ev = hidden unnamed_addr alias void (%"class.update_client::TaskUpdate"*), void (%"class.update_client::TaskUpdate"*)* @_ZN13update_client10TaskUpdateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13update_client10TaskUpdateC2E13scoped_refptrINS_12UpdateEngineEEbRKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEEN4base12OnceCallbackIFNS5_IN4absl8optionalINS_12CrxComponentEEENS9_ISL_EEEESF_EEENSG_17RepeatingCallbackIFvNS_13CrxUpdateItemEEEENSH_IFvS1_INS_4TaskEENS_5ErrorEEEE(%"class.update_client::TaskUpdate"*, %"class.update_client::UpdateEngine"*, i1 zeroext, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.base::OnceCallback"* nocapture, %"class.base::RepeatingCallback.30"*, %"class.base::OnceCallback.31"* nocapture) unnamed_addr #0 align 2 {
  %8 = zext i1 %2 to i8
  %9 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN13update_client10TaskUpdateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 2, i32 0
  store %"class.update_client::UpdateEngine"* %1, %"class.update_client::UpdateEngine"** %11, align 8
  %12 = icmp eq %"class.update_client::UpdateEngine"* %1, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.update_client::UpdateEngine", %"class.update_client::UpdateEngine"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  br label %16

16:                                               ; preds = %7, %13
  %17 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 3
  store i8 %8, i8* %17, align 8
  %18 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 4
  %19 = bitcast %"class.std::__1::vector"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #7
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector"* %3 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = sdiv exact i64 %25, 24
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %69, label %28

28:                                               ; preds = %16
  %29 = icmp ugt i64 %26, 768614336404564650
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::vector"* %18 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #8
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #9
  %34 = bitcast i8* %33 to %"class.std::__1::basic_string"*
  %35 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 4, i32 0, i32 1
  %36 = bitcast %"class.std::__1::basic_string"** %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast %"class.std::__1::vector"* %18 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 %26
  %39 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %38, %"class.std::__1::basic_string"** %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %40, align 8
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %20, align 8
  %43 = bitcast %"class.std::__1::basic_string"** %35 to i64*
  %44 = ptrtoint i8* %33 to i64
  %45 = icmp eq %"class.std::__1::basic_string"* %41, %42
  br i1 %45, label %67, label %46

46:                                               ; preds = %32, %61
  %47 = phi %"class.std::__1::basic_string"* [ %63, %61 ], [ %34, %32 ]
  %48 = phi %"class.std::__1::basic_string"* [ %62, %61 ], [ %41, %32 ]
  %49 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %46
  %54 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  %55 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 24, i1 false) #7
  br label %61

56:                                               ; preds = %46
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %47, i8* %58, i64 %60) #7
  br label %61

61:                                               ; preds = %56, %53
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 1
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 1
  %64 = icmp eq %"class.std::__1::basic_string"* %62, %42
  br i1 %64, label %65, label %46

65:                                               ; preds = %61
  %66 = ptrtoint %"class.std::__1::basic_string"* %63 to i64
  br label %67

67:                                               ; preds = %65, %32
  %68 = phi i64 [ %44, %32 ], [ %66, %65 ]
  store i64 %68, i64* %43, align 8
  br label %69

69:                                               ; preds = %16, %67
  %70 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 5
  %71 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.base::OnceCallback"* %70 to i64*
  store i64 %73, i64* %74, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %71, align 8
  %75 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 6, i32 0
  %76 = getelementptr inbounds %"class.base::RepeatingCallback.30", %"class.base::RepeatingCallback.30"* %5, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %75, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %76) #7
  %77 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 7
  %78 = getelementptr inbounds %"class.base::OnceCallback.31", %"class.base::OnceCallback.31"* %6, i64 0, i32 0, i32 0, i32 0
  %79 = bitcast %"class.base::OnceCallback.31"* %6 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.base::OnceCallback.31"* %77 to i64*
  store i64 %80, i64* %81, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %78, align 8
  br i1 %12, label %88, label %82

82:                                               ; preds = %69
  %83 = getelementptr inbounds %"class.update_client::UpdateEngine", %"class.update_client::UpdateEngine"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw sub i32* %83, i32 1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %88

86:                                               ; preds = %82
  tail call void @_ZN13update_client12UpdateEngineD1Ev(%"class.update_client::UpdateEngine"* nonnull %1) #7
  %87 = bitcast %"class.update_client::UpdateEngine"* %1 to i8*
  tail call void @_ZdlPv(i8* %87) #9
  br label %88

88:                                               ; preds = %69, %82, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13update_client10TaskUpdateD2Ev(%"class.update_client::TaskUpdate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN13update_client10TaskUpdateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #7
  %4 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 6, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #7
  %5 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #7
  %6 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %9 = icmp eq %"class.std::__1::basic_string"* %8, null
  br i1 %9, label %32, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %12 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 4, i32 0, i32 1
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = icmp eq %"class.std::__1::basic_string"* %13, %8
  br i1 %14, label %30, label %15

15:                                               ; preds = %10, %25
  %16 = phi %"class.std::__1::basic_string"* [ %17, %25 ], [ %13, %10 ]
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 -1
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %22, %15
  %26 = icmp eq %"class.std::__1::basic_string"* %17, %8
  br i1 %26, label %27, label %15

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::vector"* %6 to i8**
  %29 = load i8*, i8** %28, align 8
  br label %30

30:                                               ; preds = %27, %10
  %31 = phi i8* [ %29, %27 ], [ %11, %10 ]
  store %"class.std::__1::basic_string"* %8, %"class.std::__1::basic_string"** %12, align 8
  tail call void @_ZdlPv(i8* %31) #9
  br label %32

32:                                               ; preds = %1, %30
  %33 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 2, i32 0
  %34 = load %"class.update_client::UpdateEngine"*, %"class.update_client::UpdateEngine"** %33, align 8
  %35 = icmp eq %"class.update_client::UpdateEngine"* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.update_client::UpdateEngine", %"class.update_client::UpdateEngine"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw sub i32* %37, i32 1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  tail call void @_ZN13update_client12UpdateEngineD1Ev(%"class.update_client::UpdateEngine"* nonnull %34) #7
  %41 = bitcast %"class.update_client::UpdateEngine"* %34 to i8*
  tail call void @_ZdlPv(i8* %41) #9
  br label %42

42:                                               ; preds = %32, %36, %40
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13update_client10TaskUpdateD0Ev(%"class.update_client::TaskUpdate"*) unnamed_addr #0 align 2 {
  tail call void @_ZN13update_client10TaskUpdateD2Ev(%"class.update_client::TaskUpdate"* %0) #7
  %2 = bitcast %"class.update_client::TaskUpdate"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13update_client10TaskUpdate3RunEv(%"class.update_client::TaskUpdate"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::RepeatingCallback.30", align 8
  %4 = alloca %"class.base::OnceCallback.32", align 8
  %5 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %7, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %1
  tail call void @_ZN13update_client10TaskUpdate12TaskCompleteENS_5ErrorE(%"class.update_client::TaskUpdate"* %0, i32 7)
  br label %42

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 2, i32 0
  %14 = load %"class.update_client::UpdateEngine"*, %"class.update_client::UpdateEngine"** %13, align 8
  %15 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 3
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 5
  %19 = bitcast %"class.base::OnceCallback"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 6
  %23 = bitcast %"class.base::RepeatingCallback.30"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.base::RepeatingCallback.30"* %3 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.base::OnceCallback"* %18 to <2 x %"class.base::internal::BindStateBase"*>*
  store <2 x %"class.base::internal::BindStateBase"*> zeroinitializer, <2 x %"class.base::internal::BindStateBase"*>* %26, align 8
  %27 = tail call i8* @_Znwm(i64 56) #9, !noalias !3
  %28 = bitcast i8* %27 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %28, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN13update_client10TaskUpdateEFvNS3_5ErrorEEJ13scoped_refptrIS4_EEEEFvS5_EE7RunOnceEPNS0_13BindStateBaseES5_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN13update_client10TaskUpdateEFvNS2_5ErrorEEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE) #7, !noalias !3
  %29 = getelementptr inbounds i8, i8* %27, i64 32
  %30 = bitcast i8* %29 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.update_client::TaskUpdate"*, i32)* @_ZN13update_client10TaskUpdate12TaskCompleteENS_5ErrorE to i64), i64 0>, <2 x i64>* %30, align 8, !noalias !3
  %31 = getelementptr inbounds i8, i8* %27, i64 48
  %32 = bitcast i8* %31 to %"class.update_client::TaskUpdate"**
  store %"class.update_client::TaskUpdate"* %0, %"class.update_client::TaskUpdate"** %32, align 8, !noalias !3
  %33 = icmp eq %"class.update_client::TaskUpdate"* %0, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %12
  %35 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 1 monotonic, !noalias !3
  br label %37

37:                                               ; preds = %12, %34
  %38 = bitcast %"class.base::OnceCallback.32"* %4 to i8**
  store i8* %27, i8** %38, align 8, !alias.scope !3
  call void @_ZN13update_client12UpdateEngine6UpdateEbRKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEN4base12OnceCallbackIFNS2_IN4absl8optionalINS_12CrxComponentEEENS6_ISI_EEEESC_EEENSD_17RepeatingCallbackIFvNS_13CrxUpdateItemEEEENSE_IFvNS_5ErrorEEEE(%"class.update_client::UpdateEngine"* %14, i1 zeroext %17, %"class.std::__1::vector"* dereferenceable(24) %5, %"class.base::OnceCallback"* nonnull %2, %"class.base::RepeatingCallback.30"* nonnull %3, %"class.base::OnceCallback.32"* nonnull %4) #7
  %39 = getelementptr inbounds %"class.base::OnceCallback.32", %"class.base::OnceCallback.32"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #7
  %40 = getelementptr inbounds %"class.base::RepeatingCallback.30", %"class.base::RepeatingCallback.30"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %40) #7
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #7
  br label %42

42:                                               ; preds = %37, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13update_client10TaskUpdate12TaskCompleteENS_5ErrorE(%"class.update_client::TaskUpdate"*, i32) #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback.35", align 8
  %5 = tail call dereferenceable(8) %class.scoped_refptr.33* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #7
  %6 = bitcast %class.scoped_refptr.33* %5 to %"class.base::TaskRunner"**
  %7 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %6, align 8
  %8 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #7
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 65) #7
  %9 = call i8* @_Znwm(i64 64) #9, !noalias !8
  %10 = bitcast i8* %9 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %10, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN13update_client10TaskUpdateEFvNS3_5ErrorEEJ13scoped_refptrIS4_ES5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN13update_client10TaskUpdateEFvNS2_5ErrorEEJ13scoped_refptrIS3_ES4_EE7DestroyEPKNS0_13BindStateBaseE) #7, !noalias !8
  %11 = getelementptr inbounds i8, i8* %9, i64 32
  %12 = bitcast i8* %11 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.update_client::TaskUpdate"*, i32)* @_ZN13update_client10TaskUpdate11RunCallbackENS_5ErrorE to i64), i64 0>, <2 x i64>* %12, align 8, !noalias !8
  %13 = getelementptr inbounds i8, i8* %9, i64 48
  %14 = bitcast i8* %13 to %"class.update_client::TaskUpdate"**
  store %"class.update_client::TaskUpdate"* %0, %"class.update_client::TaskUpdate"** %14, align 8, !noalias !8
  %15 = icmp eq %"class.update_client::TaskUpdate"* %0, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 1 monotonic, !noalias !8
  br label %19

19:                                               ; preds = %2, %16
  %20 = getelementptr inbounds i8, i8* %9, i64 56
  %21 = bitcast i8* %20 to i32*
  store i32 %1, i32* %21, align 4, !noalias !8
  %22 = bitcast %"class.base::OnceCallback.35"* %4 to i8**
  store i8* %9, i8** %22, align 8, !alias.scope !8
  %23 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %7, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback.35"* nonnull %4) #7
  %24 = getelementptr inbounds %"class.base::OnceCallback.35", %"class.base::OnceCallback.35"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #7
  ret void
}

declare void @_ZN13update_client12UpdateEngine6UpdateEbRKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEN4base12OnceCallbackIFNS2_IN4absl8optionalINS_12CrxComponentEEENS6_ISI_EEEESC_EEENSD_17RepeatingCallbackIFvNS_13CrxUpdateItemEEEENSE_IFvNS_5ErrorEEEE(%"class.update_client::UpdateEngine"*, i1 zeroext, %"class.std::__1::vector"* dereferenceable(24), %"class.base::OnceCallback"*, %"class.base::RepeatingCallback.30"*, %"class.base::OnceCallback.32"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13update_client10TaskUpdate6CancelEv(%"class.update_client::TaskUpdate"*) unnamed_addr #0 align 2 {
  tail call void @_ZN13update_client10TaskUpdate12TaskCompleteENS_5ErrorE(%"class.update_client::TaskUpdate"* %0, i32 2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13update_client10TaskUpdate6GetIdsEv(%"class.std::__1::vector"* noalias sret, %"class.update_client::TaskUpdate"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %1, i64 0, i32 4
  %4 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #7
  %5 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %1, i64 0, i32 4, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 24
  %12 = icmp eq i64 %10, 0
  %13 = inttoptr i64 %9 to %"class.std::__1::basic_string"*
  %14 = inttoptr i64 %7 to %"class.std::__1::basic_string"*
  br i1 %12, label %53, label %15

15:                                               ; preds = %2
  %16 = icmp ugt i64 %11, 768614336404564650
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %18) #8
  unreachable

19:                                               ; preds = %15
  %20 = tail call i8* @_Znwm(i64 %10) #9
  %21 = bitcast i8* %20 to %"class.std::__1::basic_string"*
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"** %22 to i8**
  store i8* %20, i8** %23, align 8
  %24 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %20, i8** %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 %11
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %25, %"class.std::__1::basic_string"** %26, align 8
  %27 = bitcast %"class.std::__1::basic_string"** %22 to i64*
  %28 = ptrtoint i8* %20 to i64
  %29 = icmp eq %"class.std::__1::basic_string"* %13, %14
  br i1 %29, label %51, label %30

30:                                               ; preds = %19, %45
  %31 = phi %"class.std::__1::basic_string"* [ %47, %45 ], [ %21, %19 ]
  %32 = phi %"class.std::__1::basic_string"* [ %46, %45 ], [ %13, %19 ]
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %39 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false) #7
  br label %45

40:                                               ; preds = %30
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %31, i8* %42, i64 %44) #7
  br label %45

45:                                               ; preds = %40, %37
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 1
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 1
  %48 = icmp eq %"class.std::__1::basic_string"* %46, %14
  br i1 %48, label %49, label %30

49:                                               ; preds = %45
  %50 = ptrtoint %"class.std::__1::basic_string"* %47 to i64
  br label %51

51:                                               ; preds = %49, %19
  %52 = phi i64 [ %28, %19 ], [ %50, %49 ]
  store i64 %52, i64* %27, align 8
  br label %53

53:                                               ; preds = %2, %51
  ret void
}

declare dereferenceable(8) %class.scoped_refptr.33* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #3

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.35"*) local_unnamed_addr #3

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13update_client10TaskUpdate11RunCallbackENS_5ErrorE(%"class.update_client::TaskUpdate"*, i32) #0 align 2 {
  %3 = alloca %class.scoped_refptr.36, align 8
  %4 = alloca %"class.base::OnceCallback.31", align 8
  %5 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 7
  %6 = icmp eq %"class.update_client::TaskUpdate"* %0, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %class.scoped_refptr.36* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = getelementptr inbounds %class.scoped_refptr.36, %class.scoped_refptr.36* %3, i64 0, i32 0
  %13 = bitcast %class.scoped_refptr.36* %3 to %"class.update_client::TaskUpdate"**
  store %"class.update_client::TaskUpdate"* %0, %"class.update_client::TaskUpdate"** %13, align 8
  %14 = bitcast %"class.base::OnceCallback.31"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.base::OnceCallback.31", %"class.base::OnceCallback.31"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback.31"* %5 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.base::OnceCallback.31"* %4 to i64*
  store i64 %17, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %19 = getelementptr inbounds %"class.base::OnceCallback.31", %"class.base::OnceCallback.31"* %4, i64 0, i32 0
  %20 = inttoptr i64 %17 to %"class.base::internal::BindStateBase"*
  %21 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %20, i64 0, i32 1
  %22 = bitcast void ()** %21 to void (%"class.base::internal::BindStateBase"*, %class.scoped_refptr.36*, i32)**
  %23 = load void (%"class.base::internal::BindStateBase"*, %class.scoped_refptr.36*, i32)*, void (%"class.base::internal::BindStateBase"*, %class.scoped_refptr.36*, i32)** %22, align 8
  call void %23(%"class.base::internal::BindStateBase"* %20, %class.scoped_refptr.36* nonnull dereferenceable(8) %3, i32 %1) #7
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  %24 = load %"class.update_client::Task"*, %"class.update_client::Task"** %12, align 8
  %25 = icmp eq %"class.update_client::Task"* %24, null
  br i1 %25, label %38, label %26

26:                                               ; preds = %10
  %27 = getelementptr inbounds %"class.update_client::Task", %"class.update_client::Task"* %24, i64 0, i32 1
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw sub i32* %28, i32 1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %38

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %27, i64 -2
  %33 = bitcast %"class.base::RefCountedThreadSafe"* %32 to %"class.update_client::Task"*
  %34 = bitcast %"class.base::RefCountedThreadSafe"* %32 to void (%"class.update_client::Task"*)***
  %35 = load void (%"class.update_client::Task"*)**, void (%"class.update_client::Task"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.update_client::Task"*)*, void (%"class.update_client::Task"*)** %35, i64 4
  %37 = load void (%"class.update_client::Task"*)*, void (%"class.update_client::Task"*)** %36, align 8
  call void %37(%"class.update_client::Task"* nonnull %33) #7
  br label %38

38:                                               ; preds = %10, %26, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  ret void
}

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN13update_client12UpdateEngineD1Ev(%"class.update_client::UpdateEngine"*) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN13update_client10TaskUpdateEFvNS3_5ErrorEEJ13scoped_refptrIS4_EEEEFvS5_EE7RunOnceEPNS0_13BindStateBaseES5_(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %8 = bitcast void ()** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %9
  %13 = bitcast i8* %12 to %"class.update_client::TaskUpdate"*
  %14 = and i64 %6, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %6, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.update_client::TaskUpdate"*, i32)**
  %22 = load void (%"class.update_client::TaskUpdate"*, i32)*, void (%"class.update_client::TaskUpdate"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %6 to void (%"class.update_client::TaskUpdate"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.update_client::TaskUpdate"*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.update_client::TaskUpdate"* %13, i32 %1) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN13update_client10TaskUpdateEFvNS2_5ErrorEEJ13scoped_refptrIS3_EEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.update_client::TaskUpdate"**
  %6 = load %"class.update_client::TaskUpdate"*, %"class.update_client::TaskUpdate"** %5, align 8
  %7 = icmp eq %"class.update_client::TaskUpdate"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %6, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.update_client::Task"*
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %14 to void (%"class.update_client::Task"*)***
  %17 = load void (%"class.update_client::Task"*)**, void (%"class.update_client::Task"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.update_client::Task"*)*, void (%"class.update_client::Task"*)** %17, i64 4
  %19 = load void (%"class.update_client::Task"*)*, void (%"class.update_client::Task"*)** %18, align 8
  tail call void %19(%"class.update_client::Task"* nonnull %15) #7
  br label %20

20:                                               ; preds = %3, %8, %13
  %21 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #9
  br label %22

22:                                               ; preds = %20, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN13update_client10TaskUpdateEFvNS3_5ErrorEEJ13scoped_refptrIS4_ES5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i32*
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %10
  %14 = bitcast i8* %13 to %"class.update_client::TaskUpdate"*
  %15 = and i64 %7, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %7, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.update_client::TaskUpdate"*, i32)**
  %23 = load void (%"class.update_client::TaskUpdate"*, i32)*, void (%"class.update_client::TaskUpdate"*, i32)** %22, align 8
  br label %26

24:                                               ; preds = %1
  %25 = inttoptr i64 %7 to void (%"class.update_client::TaskUpdate"*, i32)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.update_client::TaskUpdate"*, i32)* [ %23, %17 ], [ %25, %24 ]
  %28 = load i32, i32* %5, align 4
  tail call void %27(%"class.update_client::TaskUpdate"* %14, i32 %28) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN13update_client10TaskUpdateEFvNS2_5ErrorEEJ13scoped_refptrIS3_ES4_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.update_client::TaskUpdate"**
  %6 = load %"class.update_client::TaskUpdate"*, %"class.update_client::TaskUpdate"** %5, align 8
  %7 = icmp eq %"class.update_client::TaskUpdate"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.update_client::TaskUpdate", %"class.update_client::TaskUpdate"* %6, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.update_client::Task"*
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %14 to void (%"class.update_client::Task"*)***
  %17 = load void (%"class.update_client::Task"*)**, void (%"class.update_client::Task"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.update_client::Task"*)*, void (%"class.update_client::Task"*)** %17, i64 4
  %19 = load void (%"class.update_client::Task"*)*, void (%"class.update_client::Task"*)** %18, align 8
  tail call void %19(%"class.update_client::Task"* nonnull %15) #7
  br label %20

20:                                               ; preds = %3, %8, %13
  %21 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #9
  br label %22

22:                                               ; preds = %20, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN13update_client10TaskUpdateEFvNS3_5ErrorEEJPS4_EEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN13update_client10TaskUpdateEFvNS3_5ErrorEEJPS4_EEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base8BindOnceIMN13update_client10TaskUpdateEFvNS1_5ErrorEEJPS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8BindOnceIMN13update_client10TaskUpdateEFvNS1_5ErrorEEJPS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN13update_client10TaskUpdateEFvNS3_5ErrorEEJPS4_RS5_EEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN13update_client10TaskUpdateEFvNS3_5ErrorEEJPS4_RS5_EEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base8BindOnceIMN13update_client10TaskUpdateEFvNS1_5ErrorEEJPS2_RS3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8BindOnceIMN13update_client10TaskUpdateEFvNS1_5ErrorEEJPS2_RS3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
