; ModuleID = '../../third_party/skia/src/gpu/ops/GrTextureOp.cpp'
source_filename = "../../third_party/skia/src/gpu/ops/GrTextureOp.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.313" = type { %"struct.std::__1::__atomic_base.314" }
%"struct.std::__1::__atomic_base.314" = type { %"struct.std::__1::__atomic_base.315" }
%"struct.std::__1::__atomic_base.315" = type { %"struct.std::__1::__cxx_atomic_impl.316" }
%"struct.std::__1::__cxx_atomic_impl.316" = type { %"struct.std::__1::__cxx_atomic_base_impl.317" }
%"struct.std::__1::__cxx_atomic_base_impl.317" = type { i32 }
%"class.GrQuadUtils::TessellationHelper" = type <{ %"struct.GrQuadUtils::TessellationHelper::Vertices", %"struct.GrQuadUtils::TessellationHelper::EdgeVectors", i32, i32, [8 x i8], %"struct.GrQuadUtils::TessellationHelper::OutsetRequest", %"struct.GrQuadUtils::TessellationHelper::EdgeEquations", i8, i8, i8, [13 x i8] }>
%"struct.GrQuadUtils::TessellationHelper::Vertices" = type { %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", i32, [12 x i8] }
%"struct.skvx::Vec" = type { %"struct.skvx::Vec.320", %"struct.skvx::Vec.320" }
%"struct.skvx::Vec.320" = type { %"struct.skvx::Vec.321", %"struct.skvx::Vec.321" }
%"struct.skvx::Vec.321" = type { float }
%"struct.GrQuadUtils::TessellationHelper::EdgeVectors" = type { %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec" }
%"struct.GrQuadUtils::TessellationHelper::OutsetRequest" = type <{ %"struct.skvx::Vec", i8, i8, [14 x i8] }>
%"struct.GrQuadUtils::TessellationHelper::EdgeEquations" = type { %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec" }
%"struct.GrQuadPerEdgeAA::VertexSpec" = type { i16, [2 x i8] }
%struct.GrVertexWriter = type { i8* }
%class.GrQuad = type { [4 x float], [4 x float], [4 x float], i32 }
%struct.SkRGBA4f = type { float, float, float, float }
%struct.SkRect = type { float, float, float, float }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%struct.DrawQuad = type { %class.GrQuad, %class.GrQuad, i32 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrOp* }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.2", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.176" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.12, %class.SkTArray.21, %class.SkTArray.23, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.5"*, i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.23, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.24 }
%class.sk_sp.24 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.6" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.12 = type { %class.SkTHashTable.13 }
%class.SkTHashTable.13 = type { i32, i32, %class.SkAutoTArray.14 }
%class.SkAutoTArray.14 = type { %"class.std::__1::unique_ptr.15" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.283" }
%"struct.std::__1::pair.283" = type { i32, %class.SkTArray.284* }
%class.SkTArray.284 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.21 = type { %"class.std::__1::unique_ptr.22"*, i64 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.284, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.23 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.37 }
%class.SkFibBlockSizes.37 = type { i32 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.44, %class.SkTArray.53, %class.GrOpsTask*, %class.SkSTArray.141, %class.SkSTArray.144, %"class.std::__1::unique_ptr.146", %class.sk_sp.162, %class.GrTokenTracker, i8, i8, %class.SkTArray.163, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.44 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.45", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.48, i8, [7 x i8] }>
%class.sk_sp.48 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.49, i8*, i64 }
%class.GrBuffer = type { i32 (...)** }
%class.GrNonAtomicRef.49 = type { i32 }
%class.SkTArray.53 = type { %class.sk_sp.54*, i64 }
%class.sk_sp.54 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray, %class.SkTArray.114, i32, i32, %class.SkSTArray.121, %class.SkSTArray.121, %class.GrTextureResolveRenderTask* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.55 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.55 = type { %class.sk_sp.56*, i64 }
%class.sk_sp.56 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.57, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.109" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.57 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.71 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.58, i8* }
%class.sk_sp.58 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.59, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.59 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp.60, %"class.std::__1::unique_ptr.62", i32, %class.GrDirectContext*, %class.SkSTArray.68, i8, i32 }
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp.60 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.61, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.61 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type opaque
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.188", %class.sk_sp.194, %"class.std::__1::unique_ptr.195", %"class.std::__1::unique_ptr.201", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.224" }
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.194 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.83, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.99, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.75 }
%class.SkTHashTable.75 = type { i32, i32, %class.SkAutoTArray.76 }
%class.SkAutoTArray.76 = type { %"class.std::__1::unique_ptr.77" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.83 = type { %class.SkTHashTable.84 }
%class.SkTHashTable.84 = type { i32, i32, %class.SkAutoTArray.85 }
%class.SkAutoTArray.85 = type { %"class.std::__1::unique_ptr.86" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.92, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.92 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.93" }
%"struct.std::__1::atomic.93" = type { %"struct.std::__1::__atomic_base.94" }
%"struct.std::__1::__atomic_base.94" = type { %"struct.std::__1::__atomic_base.95" }
%"struct.std::__1::__atomic_base.95" = type { %"struct.std::__1::__cxx_atomic_impl.96" }
%"struct.std::__1::__cxx_atomic_impl.96" = type { %"struct.std::__1::__cxx_atomic_base_impl.97" }
%"struct.std::__1::__cxx_atomic_base_impl.97" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.98, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.98 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.99 = type { %class.SkTHashTable.100 }
%class.SkTHashTable.100 = type { i32, i32, %class.SkAutoTArray.101 }
%class.SkAutoTArray.101 = type { %"class.std::__1::unique_ptr.102" }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.60, %class.sk_sp.108, %class.sk_sp.108 }
%class.sk_sp.108 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type <{ %"class.SkMessageBus<GrClientMappedBufferManager::BufferFinishedMessage, GrDirectContext::DirectContextID, false>::Inbox", %"class.std::__1::forward_list", i8, [7 x i8] }>
%"class.SkMessageBus<GrClientMappedBufferManager::BufferFinishedMessage, GrDirectContext::DirectContextID, false>::Inbox" = type <{ %class.SkTArray.210, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.210 = type { %"struct.GrClientMappedBufferManager::BufferFinishedMessage"*, i64 }
%"struct.GrClientMappedBufferManager::BufferFinishedMessage" = type <{ %class.sk_sp.211, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.sk_sp.211 = type { %class.GrGpuBuffer* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type opaque
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray.68 = type { %class.SkAlignedSTStorage.69, %class.SkTArray.70 }
%class.SkAlignedSTStorage.69 = type { [64 x i8] }
%class.SkTArray.70 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.71 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.72, void (i8*)*, i8* }
%class.SkNVRefCnt.72 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.73, i32, [4 x i8] }
%union.anon.73 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.57, i32, i8, [3 x i8] }>
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.109" = type { %"struct.std::__1::__atomic_base.110" }
%"struct.std::__1::__atomic_base.110" = type { %"struct.std::__1::__atomic_base.111" }
%"struct.std::__1::__atomic_base.111" = type { %"struct.std::__1::__cxx_atomic_impl.112" }
%"struct.std::__1::__cxx_atomic_impl.112" = type { %"struct.std::__1::__cxx_atomic_base_impl.113" }
%"struct.std::__1::__cxx_atomic_base_impl.113" = type { i64 }
%class.SkTArray.114 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.115", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.121 = type { %class.SkAlignedSTStorage.122, %class.SkTArray.123 }
%class.SkAlignedSTStorage.122 = type { [8 x i8] }
%class.SkTArray.123 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.124, %class.sk_sp.138, %class.SkTArray.140, %struct.SkRect, %struct.SkIRect }
%class.GrSwizzle = type { i16 }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.124 = type { %class.SkAlignedSTStorage.125, %class.SkTArray.126 }
%class.SkAlignedSTStorage.125 = type { [2000 x i8] }
%class.SkTArray.126 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr", %class.GrOp* }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.56, i32, %class.GrSwizzle, [2 x i8] }>
%struct.SkIPoint = type { i32, i32 }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.129" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.127 }
%union.anon.127 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.128, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.128 = type { i32 }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.132, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.132 = type { %class.SkAlignedSTStorage.133, %class.SkTArray.134 }
%class.SkAlignedSTStorage.133 = type { [8 x i8] }
%class.SkTArray.134 = type { %"class.std::__1::unique_ptr.129"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.sk_sp.138 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.139, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.139 = type { %"struct.std::__1::atomic" }
%class.SkTArray.140 = type { %class.GrSurfaceProxy**, i64 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkSTArray.141 = type { %class.SkAlignedSTStorage.142, %class.SkTArray.143 }
%class.SkAlignedSTStorage.142 = type { [32 x i8] }
%class.SkTArray.143 = type { i32*, i64 }
%class.SkSTArray.144 = type { %class.SkAlignedSTStorage.145, %class.SkTArray.53 }
%class.SkAlignedSTStorage.145 = type { [32 x i8] }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.149, %"class.std::__1::unique_ptr.153", %class.GrPathRenderer* }
%class.SkSTArray.149 = type { %class.SkAlignedSTStorage.150, %class.SkTArray.151 }
%class.SkAlignedSTStorage.150 = type { [64 x i8] }
%class.SkTArray.151 = type { %class.sk_sp.152*, i64 }
%class.sk_sp.152 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.162 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.163 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.164, i32, %class.GrRenderTask** }
%class.SkTHashMap.164 = type { %class.SkTHashTable.165 }
%class.SkTHashTable.165 = type { i32, i32, %class.SkAutoTArray.166 }
%class.SkAutoTArray.166 = type { %"class.std::__1::unique_ptr.167" }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %class.GrProxyProvider* }
%class.sk_sp.230 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%class.GrPaint = type <{ %class.GrXPFactory*, %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.129", i8, [3 x i8], %struct.SkRGBA4f, [4 x i8] }>
%class.GrXPFactory = type { i32 (...)** }
%"class.(anonymous namespace)::TextureOp" = type { %class.GrMeshDrawOp, %class.GrQuadBuffer, %class.sk_sp.230, %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Metadata", [1 x %"struct.(anonymous namespace)::TextureOp::ViewCountPair"] }
%class.GrMeshDrawOp = type { %class.GrDrawOp }
%class.GrDrawOp = type { %class.GrOp }
%class.GrQuadBuffer = type <{ %class.SkTDArray.292, i32, i32, i32, [4 x i8] }>
%class.SkTDArray.292 = type { i8*, i32, i32 }
%"struct.(anonymous namespace)::TextureOp::Desc" = type <{ %"struct.GrQuadPerEdgeAA::VertexSpec", i32, i32, [4 x i8], i8*, %class.GrProgramInfo*, %class.sk_sp.302, %class.sk_sp.302, i32, [4 x i8] }>
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.293, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.293 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.294, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef.294 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.295"*, [24 x i8] }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %class.GrFragmentProcessor* }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.301, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.301 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%class.sk_sp.302 = type { %class.GrBuffer* }
%"struct.(anonymous namespace)::TextureOp::Metadata" = type { %class.GrSwizzle, i16, i16, i16 }
%"struct.(anonymous namespace)::TextureOp::ViewCountPair" = type <{ %class.sk_sp.56, i32, [4 x i8] }>
%class.SkMatrix = type { [9 x float], i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.GrSurfaceDrawContext = type { %class.GrSurfaceFillContext.base, %class.SkSurfaceProps, i8, i8, i32, %class.SkGlyphRunListPainter }
%class.GrSurfaceFillContext.base = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.234, i8 }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.GrColorInfo = type { %class.sk_sp.232, %class.sk_sp.230, i32, i32 }
%class.sk_sp.232 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.233, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.233 = type { %"struct.std::__1::atomic" }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.sk_sp.234 = type { %class.GrOpsTask* }
%class.SkSurfaceProps = type { i32, i32 }
%class.SkGlyphRunListPainter = type { %class.SkSurfaceProps, %class.SkSurfaceProps, i32, i32, %class.SkStrikeForGPUCacheInterface*, %class.SkDrawableGlyphBuffer, %class.SkSourceGlyphBuffer }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray.235, %class.SkAutoTMalloc }
%class.SkAutoTArray.235 = type { %"class.std::__1::unique_ptr.236" }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon.239 }
%union.anon.239 = type { %class.SkGlyph* }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.240, i32, %"struct.std::__1::atomic.93", %"struct.std::__1::atomic.93", i8, i8 }>
%class.sk_sp.240 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.241, %struct.SkRect, [4 x i8], %class.SkTDArray.242, %class.SkTDArray.243, %class.SkTDArray.244, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.241 = type { %"struct.std::__1::atomic" }
%class.SkTDArray.242 = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.243 = type { i8*, i32, i32 }
%class.SkTDArray.244 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.245 }
%class.SkTDArray.245 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.246", [3 x i8] }
%"struct.std::__1::atomic.246" = type { %"struct.std::__1::__atomic_base.247" }
%"struct.std::__1::__atomic_base.247" = type { %"struct.std::__1::__cxx_atomic_impl.248" }
%"struct.std::__1::__cxx_atomic_impl.248" = type { %"struct.std::__1::__cxx_atomic_base_impl.249" }
%"struct.std::__1::__cxx_atomic_base_impl.249" = type { i8 }
%struct.SkPackedGlyphID = type { i32 }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.253" }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %struct.SkPoint* }
%class.SkSourceGlyphBuffer = type { %class.SkZip, i64, i32, i32, %class.SkZip.261, %class.SkSTArray.266, %class.SkSTArray.269 }
%class.SkZip = type { %"class.std::__1::tuple.257", i64 }
%"class.std::__1::tuple.257" = type { %"struct.std::__1::__tuple_impl.258" }
%"struct.std::__1::__tuple_impl.258" = type { %"class.std::__1::__tuple_leaf.259", %"class.std::__1::__tuple_leaf.260" }
%"class.std::__1::__tuple_leaf.259" = type { i16* }
%"class.std::__1::__tuple_leaf.260" = type { %struct.SkPoint* }
%class.SkZip.261 = type { %"class.std::__1::tuple.262", i64 }
%"class.std::__1::tuple.262" = type { %"struct.std::__1::__tuple_impl.263" }
%"struct.std::__1::__tuple_impl.263" = type { %"class.std::__1::__tuple_leaf.264", %"class.std::__1::__tuple_leaf.265" }
%"class.std::__1::__tuple_leaf.264" = type { i16* }
%"class.std::__1::__tuple_leaf.265" = type { %struct.SkPoint* }
%class.SkSTArray.266 = type { %class.SkAlignedSTStorage.267, %class.SkTArray.268 }
%class.SkAlignedSTStorage.267 = type { [8 x i8] }
%class.SkTArray.268 = type { i16*, i64 }
%class.SkSTArray.269 = type { %class.SkAlignedSTStorage.270, %class.SkTArray.271 }
%class.SkAlignedSTStorage.270 = type { [32 x i8] }
%class.SkTArray.271 = type { %struct.SkPoint*, i64 }
%class.GrClip = type opaque
%"struct.GrSurfaceDrawContext::TextureSetEntry" = type <{ %class.GrSurfaceProxyView, i32, %struct.SkRect, %struct.SkRect, [4 x i8], %struct.SkPoint*, %class.SkMatrix*, %struct.SkRGBA4f, i32, [4 x i8] }>
%"class.std::__1::function.272" = type { %"class.std::__1::__function::__policy_func.276" }
%"class.std::__1::__function::__policy_func.276" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.277", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.277" = type { void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)* }
%"class.GrTextureOp::BatchSizeLimiter" = type { %class.GrSurfaceDrawContext*, %class.GrClip*, %class.GrRecordingContext*, i32, i32, i8, i32, %class.SkMatrix*, %class.sk_sp.230, i32, i32 }
%"struct.(anonymous namespace)::TextureOp::ColorSubsetAndAA" = type <{ %struct.SkRGBA4f, %struct.SkRect, i8, [3 x i8] }>
%"class.std::__1::function.303" = type { %"class.std::__1::__function::__policy_func.307" }
%"class.std::__1::__function::__policy_func.307" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.308", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.308" = type { void (%"union.std::__1::__function::__policy_storage"*, %class.GrSurfaceProxy*, i1)* }
%"class.skia::tracing_internals::ScopedTracer" = type { %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data" }
%"struct.skia::tracing_internals::ScopedTracer::Data" = type { i8*, i8*, i64 }
%class.SkEventTracer = type { i32 (...)** }
%class.GrOpFlushState = type { %class.GrDeferredUploadTarget, %"class.GrMeshDrawOp::Target", %class.SkArenaAllocWithReset, %class.GrVertexBufferAllocPool, %class.GrIndexBufferAllocPool, %class.GrDrawIndirectBufferAllocPool, %class.SkArenaAllocList, %class.SkArenaAllocList.311, %class.SkArenaAllocList.312, %class.GrDeferredUploadToken, %"struct.GrOpFlushState::OpArgs"*, %class.SkTArray.140*, %class.GrGpu*, %class.GrResourceProvider*, %class.GrTokenTracker*, %class.GrOpsRenderPass*, %"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter", %"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" }
%class.GrDeferredUploadTarget = type { i32 (...)** }
%"class.GrMeshDrawOp::Target" = type { i32 (...)** }
%class.SkArenaAllocWithReset = type { %class.SkArenaAlloc.base, i8*, i32, i32 }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.GrVertexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrBufferAllocPool = type { i32 (...)**, i64, %class.SkTArray.309, %class.sk_sp.44, %class.sk_sp.48, %class.GrGpu*, i32, i8* }
%class.SkTArray.309 = type { %"struct.GrBufferAllocPool::BufferBlock"*, i64 }
%"struct.GrBufferAllocPool::BufferBlock" = type { i64, %class.sk_sp.310 }
%class.sk_sp.310 = type { %class.GrBuffer* }
%class.GrIndexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrDrawIndirectBufferAllocPool = type { %class.GrBufferAllocPool }
%class.SkArenaAllocList = type { %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"*, %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"* }
%"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node" = type opaque
%class.SkArenaAllocList.311 = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node" = type opaque
%class.SkArenaAllocList.312 = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node" = type opaque
%"struct.GrOpFlushState::OpArgs" = type { %class.GrOp*, %class.GrSurfaceProxyView*, %class.GrRenderTargetProxy*, i8, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView", i32, i32 }
%class.GrRenderTargetProxy = type <{ i32 (...)**, i8, i8, i8, i8, %struct.SkIRect, [4 x i8], %class.sk_sp.138, [4 x i8], [4 x i8], %class.GrSurfaceProxy }>
%class.GrOpsRenderPass = type { i32 (...)**, i32, %class.GrRenderTarget*, %class.sk_sp.302, %class.sk_sp.302, %class.sk_sp.302, i32, i32 }
%class.GrRenderTarget = type opaque
%"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%class.GrProcessorSet = type <{ %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.129", %"union.GrProcessorSet::XP", i8, [7 x i8] }>
%"union.GrProcessorSet::XP" = type { %class.GrXPFactory* }
%"class.GrQuadPerEdgeAA::Tessellator" = type { %"class.GrQuadUtils::TessellationHelper", %"struct.GrQuadPerEdgeAA::VertexSpec", %struct.GrVertexWriter, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)*, [8 x i8] }
%"class.GrQuadBuffer<(anonymous namespace)::TextureOp::ColorSubsetAndAA>::Iter" = type { %class.GrQuad, %class.GrQuad, %class.GrQuadBuffer*, i8*, i8* }

$_ZN11GrTextureOp16BatchSizeLimiter8createOpEPN20GrSurfaceDrawContext15TextureSetEntryEi8GrAAType = comdat any

$_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = comdat any

$_ZN4GrOpD2Ev = comdat any

$_ZN4GrOpD0Ev = comdat any

$_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE = comdat any

$_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps = comdat any

$_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j = comdat any

$_ZNSt3__125__throw_bad_function_callEv = comdat any

$_ZN15GrTextureEffect14kDefaultBorderE = comdat any

$_ZTV4GrOp = comdat any

$_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = comdat any

@_ZN15GrTextureEffect14kDefaultBorderE = linkonce_odr hidden constant [4 x float] zeroinitializer, comdat, align 16
@_ZTVN12_GLOBAL__N_19TextureOpE = internal unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::TextureOp"*)* @_ZN12_GLOBAL__N_19TextureOpD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TextureOp"*)* @_ZN12_GLOBAL__N_19TextureOpD0Ev to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::TextureOp"*)* @_ZNK12_GLOBAL__N_19TextureOp4nameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TextureOp"*, %"class.std::__1::function.303"*)* @_ZNK12_GLOBAL__N_19TextureOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::TextureOp"*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN12_GLOBAL__N_19TextureOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrOpFlushState*)* @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TextureOp"*, %class.GrOpFlushState*, %struct.SkRect*)* @_ZN12_GLOBAL__N_19TextureOp9onExecuteEP14GrOpFlushStateRK6SkRect to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::TextureOp"*)* @_ZNK12_GLOBAL__N_19TextureOp18fixedFunctionFlagsEv to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::TextureOp"*, %class.GrCaps*, %class.GrAppliedClip*, i32)* @_ZN12_GLOBAL__N_19TextureOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TextureOp"*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12_GLOBAL__N_19TextureOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (%class.GrProgramInfo* (%"class.(anonymous namespace)::TextureOp"*)* @_ZN12_GLOBAL__N_19TextureOp11programInfoEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TextureOp"*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12_GLOBAL__N_19TextureOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%"class.(anonymous namespace)::TextureOp"*, %"class.GrMeshDrawOp::Target"*)* @_ZN12_GLOBAL__N_19TextureOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE to i8*)] }, align 8
@_ZZN12_GLOBAL__N_19TextureOp7ClassIDEvE8kClassID = internal unnamed_addr global i32 0, align 4
@_ZGVZN12_GLOBAL__N_19TextureOp7ClassIDEvE8kClassID = internal global i64 0, align 8
@_ZN4GrOp14gCurrOpClassIDE = external global %"struct.std::__1::atomic.313", align 4
@.str = private unnamed_addr constant [42 x i8] c"../../third_party/skia/src/gpu/ops/GrOp.h\00", align 1
@.str.1 = private unnamed_addr constant [80 x i8] c"This should never wrap as it should only be called once for each GrOp subclass.\00", align 1
@.str.2 = private unnamed_addr constant [51 x i8] c"../../third_party/skia/include/private/SkTDArray.h\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"SkTFitsIn<int>(n)\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"SkTFitsIn<int>(reserve)\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"SkTFitsIn<int>(count)\00", align 1
@_ZTV4GrOp = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrOp*)* @_ZN4GrOpD2Ev to i8*), i8* bitcast (void (%class.GrOp*)* @_ZN4GrOpD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrOp*, %"class.std::__1::function.303"*)* @_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.8 = private unnamed_addr constant [10 x i8] c"TextureOp\00", align 1
@.str.9 = private unnamed_addr constant [29 x i8] c"disabled-by-default-skia.gpu\00", align 1
@__PRETTY_FUNCTION__._ZN12_GLOBAL__N_19TextureOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps = private unnamed_addr constant [122 x i8] c"virtual GrOp::CombineResult (anonymous namespace)::TextureOp::onCombineIfPossible(GrOp *, SkArenaAlloc *, const GrCaps &)\00", align 1
@__PRETTY_FUNCTION__._ZN12_GLOBAL__N_19TextureOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = private unnamed_addr constant [201 x i8] c"virtual void (anonymous namespace)::TextureOp::onPrePrepareDraws(GrRecordingContext *, const GrSurfaceProxyView &, GrAppliedClip *, const GrXferProcessor::DstProxyView &, GrXferBarrierFlags, GrLoadOp)\00", align 1
@__const._ZN12_GLOBAL__N_19TextureOp14FillInVerticesERK6GrCapsPS0_PNS0_4DescEPc.tessellator = private unnamed_addr constant { %"class.GrQuadUtils::TessellationHelper", %"struct.GrQuadPerEdgeAA::VertexSpec", [4 x i8], %struct.GrVertexWriter, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)*, [8 x i8] } { %"class.GrQuadUtils::TessellationHelper" <{ %"struct.GrQuadUtils::TessellationHelper::Vertices" { %"struct.skvx::Vec" { %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } } }, i32 -1431655766, [12 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %"struct.GrQuadUtils::TessellationHelper::EdgeVectors" { %"struct.skvx::Vec" { %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } } } }, i32 -1431655766, i32 -1431655766, [8 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA", %"struct.GrQuadUtils::TessellationHelper::OutsetRequest" <{ %"struct.skvx::Vec" { %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } } }, i8 -86, i8 -86, [14 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }>, %"struct.GrQuadUtils::TessellationHelper::EdgeEquations" { %"struct.skvx::Vec" { %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.320" { %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.321" { float 0xFFFFFFFFE0000000 } } } }, i8 -86, i8 -86, i8 -86, [13 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }>, %"struct.GrQuadPerEdgeAA::VertexSpec" { i16 -21846, [2 x i8] c"\AA\AA" }, [4 x i8] c"\AA\AA\AA\AA", %struct.GrVertexWriter { i8* inttoptr (i64 -6148914691236517206 to i8*) }, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)* inttoptr (i64 -6148914691236517206 to void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)*), [8 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA" }, align 16
@_ZN21GrUserStencilSettings7kUnusedE = external local_unnamed_addr constant %struct.GrUserStencilSettings*, align 8
@__PRETTY_FUNCTION__._ZN12_GLOBAL__N_19TextureOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE = private unnamed_addr constant [86 x i8] c"virtual void (anonymous namespace)::TextureOp::onPrepareDraws(GrMeshDrawOp::Target *)\00", align 1
@.str.10 = private unnamed_addr constant [51 x i8] c"../../third_party/skia/src/gpu/ops/GrTextureOp.cpp\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"Could not allocate vertices\0A\00", align 1
@.str.12 = private unnamed_addr constant [28 x i8] c"Could not allocate indices\0A\00", align 1
@_ZTV24GrClampFragmentProcessor = external unnamed_addr constant { [10 x i8*] }, align 8
@__const.TextureOp.quad = private unnamed_addr constant %struct.DrawQuad { %class.GrQuad { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, %class.GrQuad { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, i32 -1431655766 }, align 4
@_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* null, void (i8*)* null, i8 1, %"class.std::type_info"* null }, comdat, align 8
@_ZZN12_GLOBAL__N_19TextureOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCapsE28trace_event_unique_atomic966.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN12_GLOBAL__N_19TextureOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOpE28trace_event_unique_atomic689.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN12_GLOBAL__N_19TextureOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE28trace_event_unique_atomic870.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrOp* @_ZN11GrTextureOp4MakeEP18GrRecordingContext18GrSurfaceProxyView11SkAlphaType5sk_spI17GrColorSpaceXformE12SkFilterMode12SkMipmapModeRK8SkRGBA4fILS3_2EENS_8SaturateE11SkBlendMode8GrAATypeP8DrawQuadPK6SkRect(%class.GrRecordingContext*, %class.GrSurfaceProxyView* nocapture, i32, %class.sk_sp.230* nocapture, i32, i32, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), i1 zeroext, i32, i32, %struct.DrawQuad*, %struct.SkRect*) local_unnamed_addr #0 align 2 {
  %13 = alloca i32, align 4
  %14 = alloca { <2 x float>, <2 x float> }, align 8
  %15 = alloca %class.GrPaint, align 8
  %16 = alloca %struct.SkRect, align 4
  %17 = alloca %class.GrSurfaceProxyView, align 8
  %18 = alloca %class.GrSurfaceProxyView, align 8
  %19 = alloca %class.GrSurfaceProxyView, align 8
  %20 = alloca %class.sk_sp.230, align 8
  %21 = icmp eq %struct.SkRect* %11, null
  br i1 %21, label %55, label %22

22:                                               ; preds = %12
  %23 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 0, i32 0
  %24 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %23, align 8
  %25 = tail call i64 @_ZNK14GrSurfaceProxy22backingStoreDimensionsEv(%class.GrSurfaceProxy* %24) #18
  %26 = trunc i64 %25 to i32
  %27 = lshr i64 %25, 32
  %28 = trunc i64 %27 to i32
  %29 = sitofp i32 %26 to float
  %30 = sitofp i32 %28 to float
  %31 = icmp slt i32 %26, 1
  %32 = icmp slt i32 %28, 1
  %33 = or i1 %31, %32
  br i1 %33, label %55, label %34

34:                                               ; preds = %22
  %35 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %11, i64 0, i32 0
  %36 = load float, float* %35, align 4
  %37 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %11, i64 0, i32 2
  %38 = load float, float* %37, align 4
  %39 = fcmp olt float %36, %38
  br i1 %39, label %40, label %55

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %11, i64 0, i32 1
  %42 = load float, float* %41, align 4
  %43 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %11, i64 0, i32 3
  %44 = load float, float* %43, align 4
  %45 = fcmp uge float %42, %44
  %46 = fcmp ugt float %36, 0.000000e+00
  %47 = or i1 %46, %45
  br i1 %47, label %55, label %48

48:                                               ; preds = %40
  %49 = fcmp ole float %42, 0.000000e+00
  %50 = fcmp oge float %38, %29
  %51 = fcmp oge float %44, %30
  %52 = and i1 %50, %49
  %53 = and i1 %51, %52
  %54 = select i1 %53, %struct.SkRect* null, %struct.SkRect* %11
  br label %55

55:                                               ; preds = %22, %48, %34, %40, %12
  %56 = phi %struct.SkRect* [ null, %12 ], [ %11, %40 ], [ %11, %34 ], [ %11, %22 ], [ %54, %48 ]
  %57 = or i32 %5, %4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %68, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 1
  %61 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 0
  %62 = tail call fastcc i16 @_ZN12_GLOBAL__N_125filter_and_mm_have_effectERK6GrQuadS2_(%class.GrQuad* dereferenceable(52) %60, %class.GrQuad* dereferenceable(52) %61)
  %63 = trunc i16 %62 to i8
  %64 = icmp eq i8 %63, 0
  %65 = select i1 %64, i32 0, i32 %4
  %66 = icmp ult i16 %62, 256
  %67 = select i1 %66, i32 0, i32 %5
  br label %68

68:                                               ; preds = %55, %59
  %69 = phi i32 [ %67, %59 ], [ 0, %55 ]
  %70 = phi i32 [ %65, %59 ], [ 0, %55 ]
  %71 = icmp eq i32 %8, 3
  br i1 %71, label %72, label %422

72:                                               ; preds = %68
  %73 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 0, i32 0
  %74 = bitcast %class.GrSurfaceProxyView* %1 to i64*
  %75 = load i64, i64* %74, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %73, align 8
  %76 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %79 = load i16, i16* %78, align 2
  %80 = getelementptr inbounds %class.sk_sp.230, %class.sk_sp.230* %3, i64 0, i32 0
  %81 = bitcast %class.sk_sp.230* %3 to i64*
  %82 = load i64, i64* %81, align 8
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %80, align 8
  %83 = tail call i8* @_Znwm(i64 120) #19
  %84 = bitcast i8* %83 to %"class.(anonymous namespace)::TextureOp"*
  %85 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %85) #18
  %86 = bitcast { <2 x float>, <2 x float> }* %14 to %struct.SkRect*
  store i32 %9, i32* %13, align 4
  %87 = bitcast i8* %83 to %class.GrMeshDrawOp*
  %88 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_19TextureOp7ClassIDEvE8kClassID to i8*) acquire, align 8
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %98, !prof !2

90:                                               ; preds = %72
  %91 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_19TextureOp7ClassIDEvE8kClassID) #18
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %98, label %93

93:                                               ; preds = %90
  %94 = atomicrmw add i32* getelementptr inbounds (%"struct.std::__1::atomic.313", %"struct.std::__1::atomic.313"* @_ZN4GrOp14gCurrOpClassIDE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i64 0, i64 0)) #20
  unreachable

97:                                               ; preds = %93
  store i32 %94, i32* @_ZZN12_GLOBAL__N_19TextureOp7ClassIDEvE8kClassID, align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_19TextureOp7ClassIDEvE8kClassID) #18
  br label %98

98:                                               ; preds = %97, %90, %72
  %99 = load i32, i32* @_ZZN12_GLOBAL__N_19TextureOp7ClassIDEvE8kClassID, align 4
  tail call void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp* nonnull %87, i32 %99) #18
  %100 = bitcast i8* %83 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_19TextureOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %100, align 8
  %101 = getelementptr inbounds i8, i8* %83, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 28, i1 false) #18
  %102 = getelementptr inbounds i8, i8* %83, i64 56
  %103 = bitcast i8* %102 to i32*
  store i32 135, i32* %103, align 8
  %104 = bitcast i8* %101 to i8**
  %105 = tail call i8* @_Z16sk_realloc_throwPvm(i8* null, i64 135) #18
  store i8* %105, i8** %104, align 8
  %106 = getelementptr inbounds i8, i8* %83, i64 80
  %107 = bitcast i8* %106 to i64*
  store i64 %82, i64* %107, align 8
  %108 = getelementptr inbounds i8, i8* %83, i64 88
  %109 = bitcast i8* %108 to %"struct.(anonymous namespace)::TextureOp::Desc"**
  store %"struct.(anonymous namespace)::TextureOp::Desc"* null, %"struct.(anonymous namespace)::TextureOp::Desc"** %109, align 8
  %110 = icmp ne %struct.SkRect* %56, null
  %111 = getelementptr inbounds i8, i8* %83, i64 96
  %112 = bitcast i8* %111 to i16*
  store i16 %79, i16* %112, align 2
  %113 = getelementptr inbounds i8, i8* %83, i64 98
  %114 = bitcast i8* %113 to i16*
  store i16 1, i16* %114, align 2
  %115 = getelementptr inbounds i8, i8* %83, i64 100
  %116 = bitcast i8* %115 to i16*
  store i16 1, i16* %116, align 2
  %117 = getelementptr inbounds i8, i8* %83, i64 102
  %118 = bitcast i8* %117 to i16*
  %119 = trunc i32 %70 to i16
  %120 = load i16, i16* %118, align 2
  %121 = and i16 %119, 3
  %122 = and i16 %120, -1024
  %123 = trunc i32 %69 to i16
  %124 = shl i16 %123, 2
  %125 = and i16 %124, 12
  %126 = zext i1 %110 to i16
  %127 = shl nuw nsw i16 %126, 8
  %128 = zext i1 %7 to i16
  %129 = shl nuw nsw i16 %128, 9
  %130 = or i16 %127, %129
  %131 = or i16 %130, %121
  %132 = or i16 %131, %125
  %133 = or i16 %132, %122
  store i16 %133, i16* %118, align 2
  %134 = getelementptr inbounds i8, i8* %83, i64 104
  %135 = bitcast i8* %134 to %class.GrSurfaceProxy**
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %135, align 8
  %136 = load i32, i32* %13, align 4
  %137 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 2
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 0
  call void @_ZN11GrQuadUtils13ResolveAATypeE8GrAAType13GrQuadAAFlagsRK6GrQuadPS0_PS1_(i32 %136, i32 %138, %class.GrQuad* dereferenceable(52) %139, i32* nonnull %13, i32* %137) #18
  %140 = load i32, i32* %13, align 4
  %141 = trunc i32 %140 to i16
  %142 = load i16, i16* %118, align 2
  %143 = shl i16 %141, 4
  %144 = and i16 %143, 48
  %145 = and i16 %142, -49
  %146 = or i16 %144, %145
  store i16 %146, i16* %118, align 2
  br i1 %110, label %147, label %152

147:                                              ; preds = %98
  %148 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_126safe_to_ignore_subset_rectE8GrAAType12SkFilterModeRK8DrawQuadRK6SkRect(i32 %140, i32 %70, %struct.DrawQuad* dereferenceable(108) %10, %struct.SkRect* nonnull dereferenceable(16) %56) #18
  br i1 %148, label %149, label %152

149:                                              ; preds = %147
  %150 = load i16, i16* %118, align 2
  %151 = and i16 %150, -257
  store i16 %151, i16* %118, align 2
  br label %152

152:                                              ; preds = %149, %147, %98
  %153 = phi %struct.SkRect* [ null, %149 ], [ %56, %147 ], [ null, %98 ]
  %154 = inttoptr i64 %75 to %class.GrSurfaceProxy*
  %155 = call i64 @_ZNK14GrSurfaceProxy22backingStoreDimensionsEv(%class.GrSurfaceProxy* %154) #18
  %156 = lshr i64 %155, 32
  %157 = trunc i64 %156 to i32
  %158 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %154, i64 0, i32 5, i32 3
  %159 = load i32, i32* %158, align 8
  %160 = icmp eq i32 %159, 2
  br i1 %160, label %161, label %163

161:                                              ; preds = %152
  %162 = sitofp i32 %157 to float
  br label %169

163:                                              ; preds = %152
  %164 = trunc i64 %155 to i32
  %165 = sitofp i32 %164 to float
  %166 = fdiv float 1.000000e+00, %165
  %167 = sitofp i32 %157 to float
  %168 = fdiv float 1.000000e+00, %167
  br label %169

169:                                              ; preds = %163, %161
  %170 = phi float [ 1.000000e+00, %161 ], [ %166, %163 ]
  %171 = phi float [ 1.000000e+00, %161 ], [ %168, %163 ]
  %172 = phi float [ %162, %161 ], [ 1.000000e+00, %163 ]
  %173 = icmp eq i32 %77, 1
  %174 = insertelement <2 x float> undef, float %170, i32 0
  %175 = fsub float -0.000000e+00, %171
  %176 = insertelement <2 x float> %174, float %175, i32 1
  %177 = insertelement <2 x float> %174, float %171, i32 1
  %178 = select i1 %173, <2 x float> %176, <2 x float> %177
  %179 = select i1 %173, float %172, float 0.000000e+00
  %180 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 1
  %181 = bitcast %class.GrQuad* %180 to <2 x float>*
  %182 = load <2 x float>, <2 x float>* %181, align 1
  %183 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 1, i32 0, i64 2
  %184 = bitcast float* %183 to <2 x float>*
  %185 = load <2 x float>, <2 x float>* %184, align 1
  %186 = shufflevector <2 x float> %182, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %187 = shufflevector <2 x float> %185, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %188 = shufflevector <4 x float> %186, <4 x float> %187, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %189 = shufflevector <2 x float> %178, <2 x float> undef, <4 x i32> zeroinitializer
  %190 = fmul <4 x float> %189, %188
  %191 = shufflevector <4 x float> %190, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  %192 = shufflevector <4 x float> %190, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %193 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 1, i32 1, i64 0
  %194 = bitcast float* %193 to <2 x float>*
  %195 = load <2 x float>, <2 x float>* %194, align 1
  %196 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 1, i32 1, i64 2
  %197 = bitcast float* %196 to <2 x float>*
  %198 = load <2 x float>, <2 x float>* %197, align 1
  %199 = shufflevector <2 x float> %195, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %200 = shufflevector <2 x float> %198, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %201 = shufflevector <4 x float> %199, <4 x float> %200, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %202 = extractelement <2 x float> %178, i32 1
  %203 = shufflevector <2 x float> %178, <2 x float> undef, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %204 = fmul <4 x float> %203, %201
  %205 = insertelement <4 x float> undef, float %179, i32 0
  %206 = shufflevector <4 x float> %205, <4 x float> undef, <4 x i32> zeroinitializer
  %207 = fadd <4 x float> %206, %204
  %208 = shufflevector <4 x float> %207, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  %209 = shufflevector <4 x float> %207, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  store <2 x float> %191, <2 x float>* %181, align 1
  store <2 x float> %192, <2 x float>* %184, align 1
  %210 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 1, i32 1
  %211 = bitcast [4 x float]* %210 to <2 x float>*
  store <2 x float> %208, <2 x float>* %211, align 1
  store <2 x float> %209, <2 x float>* %197, align 1
  %212 = bitcast { <2 x float>, <2 x float> }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %212) #18
  %213 = icmp eq %struct.SkRect* %153, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %212, i8 -1, i64 16, i1 false) #18
  br i1 %213, label %333, label %214

214:                                              ; preds = %169
  %215 = bitcast %struct.SkRect* %153 to <2 x float>*
  %216 = load <2 x float>, <2 x float>* %215, align 1
  %217 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %153, i64 0, i32 2
  %218 = bitcast float* %217 to <2 x float>*
  %219 = load <2 x float>, <2 x float>* %218, align 1
  %220 = shufflevector <2 x float> %216, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %221 = shufflevector <2 x float> %219, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %222 = shufflevector <4 x float> %220, <4 x float> %221, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %223 = icmp eq i32 %70, 0
  br i1 %223, label %224, label %240

224:                                              ; preds = %214
  %225 = fmul <4 x float> %222, <float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00>
  %226 = extractelement <4 x float> %225, i32 0
  %227 = call float @floorf(float %226) #18
  %228 = extractelement <4 x float> %225, i32 1
  %229 = call float @floorf(float %228) #18
  %230 = extractelement <4 x float> %225, i32 2
  %231 = call float @floorf(float %230) #18
  %232 = extractelement <4 x float> %225, i32 3
  %233 = call float @floorf(float %232) #18
  %234 = insertelement <4 x float> undef, float %227, i32 0
  %235 = insertelement <4 x float> %234, float %229, i32 1
  %236 = insertelement <4 x float> undef, float %231, i32 2
  %237 = insertelement <4 x float> %236, float %233, i32 3
  %238 = shufflevector <4 x float> %235, <4 x float> %237, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %239 = fmul <4 x float> %238, <float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00>
  br label %240

240:                                              ; preds = %224, %214
  %241 = phi <4 x float> [ %239, %224 ], [ %222, %214 ]
  %242 = fadd <4 x float> %241, <float 5.000000e-01, float 5.000000e-01, float -5.000000e-01, float -5.000000e-01>
  %243 = shufflevector <4 x float> %242, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %244 = fadd <4 x float> %242, %243
  %245 = fmul <4 x float> %244, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %246 = fmul <4 x float> %242, <float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00>
  %247 = fmul <4 x float> %245, <float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00>
  %248 = fcmp olt <4 x float> %247, %246
  %249 = sext <4 x i1> %248 to <4 x i32>
  %250 = bitcast <4 x i32> %249 to <2 x i64>
  %251 = extractelement <2 x i64> %250, i32 0
  %252 = extractelement <2 x i64> %250, i32 1
  %253 = bitcast i64 %251 to <2 x i32>
  %254 = shufflevector <2 x i32> %253, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %255 = bitcast i64 %252 to <2 x i32>
  %256 = shufflevector <2 x i32> %255, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %257 = shufflevector <4 x i32> %254, <4 x i32> %256, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %258 = bitcast <4 x float> %247 to <2 x i64>
  %259 = extractelement <2 x i64> %258, i32 0
  %260 = bitcast i64 %259 to <2 x i32>
  %261 = shufflevector <4 x float> %247, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %262 = bitcast <2 x float> %261 to <2 x i32>
  %263 = shufflevector <2 x i32> %260, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %264 = shufflevector <2 x i32> %262, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %265 = shufflevector <4 x i32> %263, <4 x i32> %264, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %266 = and <4 x i32> %257, %265
  %267 = bitcast <4 x i32> %266 to <2 x i64>
  %268 = extractelement <2 x i64> %267, i32 0
  %269 = extractelement <2 x i64> %267, i32 1
  %270 = bitcast i64 %268 to <2 x i32>
  %271 = shufflevector <2 x i32> %270, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %272 = bitcast i64 %269 to <2 x i32>
  %273 = shufflevector <2 x i32> %272, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %274 = shufflevector <4 x i32> %271, <4 x i32> %273, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %275 = bitcast <4 x i32> %257 to <2 x i64>
  %276 = xor <2 x i64> %275, <i64 -1, i64 -1>
  %277 = extractelement <2 x i64> %276, i32 0
  %278 = extractelement <2 x i64> %276, i32 1
  %279 = bitcast i64 %277 to <2 x i32>
  %280 = shufflevector <2 x i32> %279, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %281 = bitcast i64 %278 to <2 x i32>
  %282 = shufflevector <2 x i32> %281, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %283 = shufflevector <4 x i32> %280, <4 x i32> %282, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %284 = bitcast <4 x float> %246 to <2 x i64>
  %285 = extractelement <2 x i64> %284, i32 0
  %286 = bitcast i64 %285 to <2 x i32>
  %287 = shufflevector <4 x float> %246, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %288 = bitcast <2 x float> %287 to <2 x i32>
  %289 = shufflevector <2 x i32> %286, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %290 = shufflevector <2 x i32> %288, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %291 = shufflevector <4 x i32> %289, <4 x i32> %290, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %292 = and <4 x i32> %283, %291
  %293 = bitcast <4 x i32> %292 to <2 x i64>
  %294 = extractelement <2 x i64> %293, i32 0
  %295 = extractelement <2 x i64> %293, i32 1
  %296 = bitcast i64 %294 to <2 x i32>
  %297 = shufflevector <2 x i32> %296, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %298 = bitcast i64 %295 to <2 x i32>
  %299 = shufflevector <2 x i32> %298, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %300 = shufflevector <4 x i32> %297, <4 x i32> %299, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %301 = or <4 x i32> %300, %274
  %302 = bitcast <4 x i32> %301 to <2 x i64>
  %303 = extractelement <2 x i64> %302, i32 0
  %304 = extractelement <2 x i64> %302, i32 1
  %305 = bitcast i64 %303 to <2 x float>
  %306 = bitcast i64 %304 to <2 x float>
  %307 = shufflevector <2 x float> %305, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %308 = shufflevector <2 x float> %306, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %309 = shufflevector <4 x float> %307, <4 x float> %308, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %310 = fmul <4 x float> %309, <float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00>
  %311 = bitcast <2 x float> %178 to <2 x i32>
  %312 = extractelement <2 x i32> %311, i32 0
  %313 = bitcast float %202 to i32
  %314 = zext i32 %313 to i64
  %315 = shl nuw i64 %314, 32
  %316 = zext i32 %312 to i64
  %317 = or i64 %315, %316
  %318 = bitcast i64 %317 to <2 x float>
  %319 = shufflevector <2 x float> %318, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %320 = shufflevector <2 x float> %318, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %321 = shufflevector <4 x float> %319, <4 x float> %320, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %322 = fmul <4 x float> %321, %310
  %323 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %179, i32 1
  %324 = shufflevector <2 x float> %323, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %325 = shufflevector <2 x float> %323, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %326 = shufflevector <4 x float> %324, <4 x float> %325, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %327 = fadd <4 x float> %326, %322
  %328 = fcmp olt float %202, 0.000000e+00
  %329 = shufflevector <4 x float> %327, <4 x float> undef, <4 x i32> <i32 0, i32 3, i32 2, i32 1>
  %330 = select i1 %328, <4 x float> %329, <4 x float> %327
  %331 = shufflevector <4 x float> %330, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  %332 = shufflevector <4 x float> %330, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  br label %333

333:                                              ; preds = %240, %169
  %334 = phi <2 x float> [ %331, %240 ], [ <float -1.000000e+05, float -1.000000e+05>, %169 ]
  %335 = phi <2 x float> [ %332, %240 ], [ <float 1.000000e+06, float 1.000000e+06>, %169 ]
  %336 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 0
  store <2 x float> %334, <2 x float>* %336, align 8
  %337 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 1
  store <2 x float> %335, <2 x float>* %337, align 8
  %338 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 0, i32 3
  %339 = load i32, i32* %338, align 4
  %340 = icmp eq i32 %339, 3
  br i1 %340, label %341, label %345

341:                                              ; preds = %333
  %342 = call { <2 x float>, <2 x float> } @_ZNK6GrQuad15projectedBoundsEv(%class.GrQuad* %139) #18
  %343 = extractvalue { <2 x float>, <2 x float> } %342, 0
  %344 = extractvalue { <2 x float>, <2 x float> } %342, 1
  br label %390

345:                                              ; preds = %333
  %346 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 0, i32 0, i64 0
  %347 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 0, i32 0, i64 1
  %348 = load float, float* %347, align 4
  %349 = load float, float* %346, align 4
  %350 = fcmp olt float %348, %349
  %351 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 0, i32 0, i64 2
  %352 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 0, i32 0, i64 3
  %353 = load float, float* %352, align 4
  %354 = load float, float* %351, align 4
  %355 = fcmp olt float %353, %354
  %356 = select i1 %355, float %353, float %354
  %357 = select i1 %350, float %348, float %349
  %358 = fcmp olt float %356, %357
  %359 = select i1 %358, float %356, float %357
  %360 = insertelement <2 x float> undef, float %359, i32 0
  %361 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 0, i32 1, i64 0
  %362 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 0, i32 1, i64 1
  %363 = load float, float* %362, align 4
  %364 = load float, float* %361, align 4
  %365 = fcmp olt float %363, %364
  %366 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 0, i32 1, i64 2
  %367 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 0, i32 1, i64 3
  %368 = load float, float* %367, align 4
  %369 = load float, float* %366, align 4
  %370 = fcmp olt float %368, %369
  %371 = select i1 %370, float %368, float %369
  %372 = select i1 %365, float %363, float %364
  %373 = fcmp olt float %371, %372
  %374 = select i1 %373, float %371, float %372
  %375 = insertelement <2 x float> %360, float %374, i32 1
  %376 = fcmp olt float %349, %348
  %377 = fcmp olt float %354, %353
  %378 = select i1 %376, float %348, float %349
  %379 = select i1 %377, float %353, float %354
  %380 = fcmp olt float %378, %379
  %381 = select i1 %380, float %379, float %378
  %382 = insertelement <2 x float> undef, float %381, i32 0
  %383 = fcmp olt float %364, %363
  %384 = fcmp olt float %369, %368
  %385 = select i1 %383, float %363, float %364
  %386 = select i1 %384, float %368, float %369
  %387 = fcmp olt float %385, %386
  %388 = select i1 %387, float %386, float %385
  %389 = insertelement <2 x float> %382, float %388, i32 1
  br label %390

390:                                              ; preds = %345, %341
  %391 = phi <2 x float> [ %343, %341 ], [ %375, %345 ]
  %392 = phi <2 x float> [ %344, %341 ], [ %389, %345 ]
  %393 = load i32, i32* %13, align 4
  %394 = icmp eq i32 %393, 1
  %395 = getelementptr inbounds i8, i8* %83, i64 32
  %396 = bitcast i8* %395 to <2 x float>*
  store <2 x float> %391, <2 x float>* %396, align 8
  %397 = getelementptr inbounds i8, i8* %83, i64 40
  %398 = bitcast i8* %397 to <2 x float>*
  store <2 x float> %392, <2 x float>* %398, align 8
  %399 = getelementptr inbounds i8, i8* %83, i64 26
  %400 = bitcast i8* %399 to i16*
  %401 = zext i1 %394 to i16
  store i16 %401, i16* %400, align 2
  %402 = call fastcc i32 @_ZN12_GLOBAL__N_19TextureOp10appendQuadEP8DrawQuadRK8SkRGBA4fIL11SkAlphaType2EERK6SkRect(%"class.(anonymous namespace)::TextureOp"* nonnull %84, %struct.DrawQuad* %10, %struct.SkRGBA4f* dereferenceable(16) %6, %struct.SkRect* nonnull dereferenceable(16) %86) #18
  %403 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %135, align 8
  %404 = bitcast i8* %134 to i64*
  store i64 %75, i64* %404, align 8
  %405 = icmp eq %class.GrSurfaceProxy* %403, null
  br i1 %405, label %418, label %406

406:                                              ; preds = %390
  %407 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %403, i64 0, i32 1
  %408 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %407, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %409 = atomicrmw add i32* %408, i32 -1 acq_rel
  %410 = icmp eq i32 %409, 1
  br i1 %410, label %411, label %418

411:                                              ; preds = %406
  %412 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %407, i64 -2
  %413 = bitcast %class.SkNVRefCnt* %412 to %class.GrSurfaceProxy*
  %414 = bitcast %class.SkNVRefCnt* %412 to void (%class.GrSurfaceProxy*)***
  %415 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %414, align 8
  %416 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %415, i64 1
  %417 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %416, align 8
  call void %417(%class.GrSurfaceProxy* nonnull %413) #18
  br label %418

418:                                              ; preds = %390, %406, %411
  %419 = getelementptr inbounds i8, i8* %83, i64 112
  %420 = bitcast i8* %419 to i32*
  store i32 %402, i32* %420, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %212) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %85) #18
  %421 = bitcast i8* %83 to %class.GrOp*
  br label %624

422:                                              ; preds = %68
  %423 = bitcast %class.GrPaint* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %423) #18
  %424 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %15, i64 0, i32 0
  %425 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %426 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %15, i64 0, i32 2, i32 0, i32 0, i32 0
  %427 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %15, i64 0, i32 3
  %428 = bitcast %class.GrPaint* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %428, i8 -86, i64 28, i1 false)
  %429 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %15, i64 0, i32 6, i64 0
  %430 = bitcast i8* %429 to i32*
  store i32 -1431655766, i32* %430, align 4
  %431 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %15, i64 0, i32 1
  %432 = bitcast %"class.std::__1::unique_ptr.129"* %431 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %432, i8 0, i64 16, i1 false) #18
  %433 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %15, i64 0, i32 5
  %434 = bitcast %struct.SkRGBA4f* %433 to i8*
  %435 = bitcast %struct.SkRGBA4f* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %434, i8* align 4 %435, i64 16, i1 false) #18
  %436 = tail call %class.GrXPFactory* @_Z23SkBlendMode_AsXPFactory11SkBlendMode(i32 %8) #18
  store %class.GrXPFactory* %436, %class.GrXPFactory** %424, align 8
  %437 = icmp eq %class.GrXPFactory* %436, null
  %438 = zext i1 %437 to i8
  store i8 %438, i8* %427, align 8
  %439 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %0, i64 0, i32 0, i32 0
  %440 = tail call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %439) #18
  %441 = icmp eq %struct.SkRect* %56, null
  br i1 %441, label %510, label %442

442:                                              ; preds = %422
  %443 = bitcast %struct.SkRect* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %443) #18
  %444 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %10, i64 0, i32 1
  %445 = bitcast %struct.SkRect* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %445, i8 -1, i64 16, i1 false)
  %446 = call zeroext i1 @_ZNK6GrQuad6asRectEP6SkRect(%class.GrQuad* %444, %struct.SkRect* nonnull %16) #18
  %447 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 0, i32 0
  %448 = bitcast %class.GrSurfaceProxyView* %1 to i64*
  %449 = load i64, i64* %448, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %447, align 8
  br i1 %446, label %450, label %479

450:                                              ; preds = %442
  %451 = bitcast %class.GrSurfaceProxyView* %17 to i64*
  store i64 %449, i64* %451, align 8
  %452 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %17, i64 0, i32 1
  %453 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %454 = load i32, i32* %453, align 8
  store i32 %454, i32* %452, align 8
  %455 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %17, i64 0, i32 2, i32 0
  %456 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %457 = load i16, i16* %456, align 2
  store i16 %457, i16* %455, align 4
  %458 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #18
  %459 = zext i32 %70 to i64
  %460 = shl nuw i64 %459, 32
  %461 = or i64 %460, 2863267840
  %462 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectS8_RK6GrCapsPKf(%class.GrSurfaceProxyView* nonnull %17, i32 %2, %class.SkMatrix* dereferenceable(40) %458, i64 %461, i32 %69, %struct.SkRect* nonnull dereferenceable(16) %56, %struct.SkRect* nonnull dereferenceable(16) %16, %class.GrCaps* dereferenceable(232) %440, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZN15GrTextureEffect14kDefaultBorderE, i64 0, i64 0)) #18
  %463 = ptrtoint %class.GrFragmentProcessor* %462 to i64
  %464 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %17, i64 0, i32 0, i32 0
  %465 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %464, align 8
  %466 = icmp eq %class.GrSurfaceProxy* %465, null
  br i1 %466, label %508, label %467

467:                                              ; preds = %450
  %468 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %465, i64 0, i32 1
  %469 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %468, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %470 = atomicrmw add i32* %469, i32 -1 acq_rel
  %471 = icmp eq i32 %470, 1
  br i1 %471, label %472, label %508

472:                                              ; preds = %467
  %473 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %468, i64 -2
  %474 = bitcast %class.SkNVRefCnt* %473 to %class.GrSurfaceProxy*
  %475 = bitcast %class.SkNVRefCnt* %473 to void (%class.GrSurfaceProxy*)***
  %476 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %475, align 8
  %477 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %476, i64 1
  %478 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %477, align 8
  call void %478(%class.GrSurfaceProxy* nonnull %474) #18
  br label %508

479:                                              ; preds = %442
  %480 = bitcast %class.GrSurfaceProxyView* %18 to i64*
  store i64 %449, i64* %480, align 8
  %481 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %18, i64 0, i32 1
  %482 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %483 = load i32, i32* %482, align 8
  store i32 %483, i32* %481, align 8
  %484 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %18, i64 0, i32 2, i32 0
  %485 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %486 = load i16, i16* %485, align 2
  store i16 %486, i16* %484, align 4
  %487 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #18
  %488 = zext i32 %70 to i64
  %489 = shl nuw i64 %488, 32
  %490 = or i64 %489, 2863267840
  %491 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectRK6GrCapsPKfb(%class.GrSurfaceProxyView* nonnull %18, i32 %2, %class.SkMatrix* dereferenceable(40) %487, i64 %490, i32 %69, %struct.SkRect* nonnull dereferenceable(16) %56, %class.GrCaps* dereferenceable(232) %440, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZN15GrTextureEffect14kDefaultBorderE, i64 0, i64 0), i1 zeroext false) #18
  %492 = ptrtoint %class.GrFragmentProcessor* %491 to i64
  %493 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %18, i64 0, i32 0, i32 0
  %494 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %493, align 8
  %495 = icmp eq %class.GrSurfaceProxy* %494, null
  br i1 %495, label %508, label %496

496:                                              ; preds = %479
  %497 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %494, i64 0, i32 1
  %498 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %497, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %499 = atomicrmw add i32* %498, i32 -1 acq_rel
  %500 = icmp eq i32 %499, 1
  br i1 %500, label %501, label %508

501:                                              ; preds = %496
  %502 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %497, i64 -2
  %503 = bitcast %class.SkNVRefCnt* %502 to %class.GrSurfaceProxy*
  %504 = bitcast %class.SkNVRefCnt* %502 to void (%class.GrSurfaceProxy*)***
  %505 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %504, align 8
  %506 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %505, i64 1
  %507 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %506, align 8
  call void %507(%class.GrSurfaceProxy* nonnull %503) #18
  br label %508

508:                                              ; preds = %501, %496, %479, %472, %467, %450
  %509 = phi i64 [ %463, %450 ], [ %463, %467 ], [ %463, %472 ], [ %492, %479 ], [ %492, %496 ], [ %492, %501 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %443) #18
  br label %542

510:                                              ; preds = %422
  %511 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 0, i32 0
  %512 = bitcast %class.GrSurfaceProxyView* %1 to i64*
  %513 = load i64, i64* %512, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %511, align 8
  %514 = bitcast %class.GrSurfaceProxyView* %19 to i64*
  store i64 %513, i64* %514, align 8
  %515 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %19, i64 0, i32 1
  %516 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 1
  %517 = load i32, i32* %516, align 8
  store i32 %517, i32* %515, align 8
  %518 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %19, i64 0, i32 2, i32 0
  %519 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %1, i64 0, i32 2, i32 0
  %520 = load i16, i16* %519, align 2
  store i16 %520, i16* %518, align 4
  %521 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #18
  %522 = zext i32 %70 to i64
  %523 = shl nuw i64 %522, 32
  %524 = or i64 %523, 2863267840
  %525 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6GrCapsPKf(%class.GrSurfaceProxyView* nonnull %19, i32 %2, %class.SkMatrix* dereferenceable(40) %521, i64 %524, i32 %69, %class.GrCaps* dereferenceable(232) %440, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZN15GrTextureEffect14kDefaultBorderE, i64 0, i64 0)) #18
  %526 = ptrtoint %class.GrFragmentProcessor* %525 to i64
  %527 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %19, i64 0, i32 0, i32 0
  %528 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %527, align 8
  %529 = icmp eq %class.GrSurfaceProxy* %528, null
  br i1 %529, label %542, label %530

530:                                              ; preds = %510
  %531 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %528, i64 0, i32 1
  %532 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %531, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %533 = atomicrmw add i32* %532, i32 -1 acq_rel
  %534 = icmp eq i32 %533, 1
  br i1 %534, label %535, label %542

535:                                              ; preds = %530
  %536 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %531, i64 -2
  %537 = bitcast %class.SkNVRefCnt* %536 to %class.GrSurfaceProxy*
  %538 = bitcast %class.SkNVRefCnt* %536 to void (%class.GrSurfaceProxy*)***
  %539 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %538, align 8
  %540 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %539, i64 1
  %541 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %540, align 8
  call void %541(%class.GrSurfaceProxy* nonnull %537) #18
  br label %542

542:                                              ; preds = %535, %530, %510, %508
  %543 = phi i64 [ %509, %508 ], [ %526, %510 ], [ %526, %530 ], [ %526, %535 ]
  %544 = getelementptr inbounds %class.sk_sp.230, %class.sk_sp.230* %3, i64 0, i32 0
  %545 = bitcast %class.sk_sp.230* %3 to i64*
  %546 = load i64, i64* %545, align 8
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %544, align 8
  %547 = bitcast %class.sk_sp.230* %20 to i64*
  store i64 %546, i64* %547, align 8
  %548 = inttoptr i64 %543 to %class.GrFragmentProcessor*
  %549 = call %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE5sk_spI17GrColorSpaceXformE(%class.GrFragmentProcessor* %548, %class.sk_sp.230* nonnull %20) #18
  %550 = getelementptr inbounds %class.sk_sp.230, %class.sk_sp.230* %20, i64 0, i32 0
  %551 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %550, align 8
  %552 = icmp eq %class.GrColorSpaceXform* %551, null
  br i1 %552, label %563, label %553

553:                                              ; preds = %542
  %554 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %551, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %555 = atomicrmw add i32* %554, i32 -1 acq_rel
  %556 = icmp eq i32 %555, 1
  br i1 %556, label %557, label %563

557:                                              ; preds = %553
  %558 = bitcast %class.GrColorSpaceXform* %551 to %class.SkRefCntBase*
  %559 = bitcast %class.GrColorSpaceXform* %551 to void (%class.SkRefCntBase*)***
  %560 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %559, align 8
  %561 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %560, i64 2
  %562 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %561, align 8
  call void %562(%class.SkRefCntBase* nonnull %558) #18
  br label %563

563:                                              ; preds = %542, %553, %557
  %564 = call %class.GrFragmentProcessor* @_ZN24GrBlendFragmentProcessor4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEES5_11SkBlendModeNS_13BlendBehaviorE(%class.GrFragmentProcessor* %549, %class.GrFragmentProcessor* null, i32 13, i32 0) #18
  br i1 %7, label %565, label %593

565:                                              ; preds = %563
  %566 = call i8* @_ZN11GrProcessornwEm(i64 64) #18
  %567 = bitcast i8* %566 to %class.GrFragmentProcessor*
  %568 = icmp eq %class.GrFragmentProcessor* %564, null
  br i1 %568, label %573, label %569

569:                                              ; preds = %565
  %570 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %564, i64 0, i32 3
  %571 = load i32, i32* %570, align 8
  %572 = and i32 %571, 6
  br label %573

573:                                              ; preds = %565, %569
  %574 = phi i32 [ %572, %569 ], [ 6, %565 ]
  %575 = bitcast i8* %566 to i32 (...)***
  %576 = getelementptr inbounds i8, i8* %566, i64 8
  %577 = bitcast i8* %576 to i32*
  store i32 31, i32* %577, align 8
  %578 = getelementptr inbounds i8, i8* %566, i64 12
  %579 = bitcast i8* %578 to i32*
  store i32 0, i32* %579, align 4
  %580 = getelementptr inbounds i8, i8* %566, i64 24
  %581 = getelementptr inbounds i8, i8* %566, i64 16
  %582 = getelementptr inbounds i8, i8* %566, i64 32
  %583 = bitcast i8* %582 to i64*
  %584 = bitcast i8* %580 to i8**
  store i8* %581, i8** %584, align 8
  store i64 8589934592, i64* %583, align 8
  %585 = getelementptr inbounds i8, i8* %566, i64 40
  %586 = bitcast i8* %585 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %586, align 8
  %587 = getelementptr inbounds i8, i8* %566, i64 48
  %588 = bitcast i8* %587 to i32*
  store i32 %574, i32* %588, align 8
  %589 = getelementptr inbounds i8, i8* %566, i64 52
  %590 = bitcast i8* %589 to i32*
  store i32 0, i32* %590, align 4
  %591 = getelementptr inbounds i8, i8* %566, i64 56
  store i8 0, i8* %591, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV24GrClampFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %575, align 8
  %592 = getelementptr inbounds i8, i8* %566, i64 60
  store i8 0, i8* %592, align 4
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %567, %class.GrFragmentProcessor* %564, i64 1) #18
  br label %593

593:                                              ; preds = %573, %563
  %594 = phi %class.GrFragmentProcessor* [ %567, %573 ], [ %564, %563 ]
  %595 = ptrtoint %class.GrFragmentProcessor* %594 to i64
  %596 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %15, i64 0, i32 1
  %597 = getelementptr inbounds %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.129"* %596, i64 0, i32 0, i32 0, i32 0
  %598 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %597, align 8
  %599 = bitcast %"class.std::__1::unique_ptr.129"* %596 to i64*
  store i64 %595, i64* %599, align 8
  %600 = icmp eq %class.GrFragmentProcessor* %598, null
  br i1 %600, label %606, label %601

601:                                              ; preds = %593
  %602 = bitcast %class.GrFragmentProcessor* %598 to void (%class.GrFragmentProcessor*)***
  %603 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %602, align 8
  %604 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %603, i64 1
  %605 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %604, align 8
  call void %605(%class.GrFragmentProcessor* nonnull %598) #18
  br label %606

606:                                              ; preds = %601, %593
  store i8 0, i8* %427, align 8
  %607 = call %class.GrOp* @_ZN12GrFillRectOp4MakeEP18GrRecordingContextO7GrPaint8GrAATypeP8DrawQuadPK21GrUserStencilSettingsN24GrSimpleMeshDrawOpHelper10InputFlagsE(%class.GrRecordingContext* %0, %class.GrPaint* nonnull dereferenceable(48) %15, i32 %9, %struct.DrawQuad* %10, %struct.GrUserStencilSettings* null, i8 zeroext 0) #18
  %608 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %426, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %426, align 8
  %609 = icmp eq %class.GrFragmentProcessor* %608, null
  br i1 %609, label %615, label %610

610:                                              ; preds = %606
  %611 = bitcast %class.GrFragmentProcessor* %608 to void (%class.GrFragmentProcessor*)***
  %612 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %611, align 8
  %613 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %612, i64 1
  %614 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %613, align 8
  call void %614(%class.GrFragmentProcessor* nonnull %608) #18
  br label %615

615:                                              ; preds = %610, %606
  %616 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %425, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %425, align 8
  %617 = icmp eq %class.GrFragmentProcessor* %616, null
  br i1 %617, label %623, label %618

618:                                              ; preds = %615
  %619 = bitcast %class.GrFragmentProcessor* %616 to void (%class.GrFragmentProcessor*)***
  %620 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %619, align 8
  %621 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %620, i64 1
  %622 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %621, align 8
  call void %622(%class.GrFragmentProcessor* nonnull %616) #18
  br label %623

623:                                              ; preds = %615, %618
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %423) #18
  br label %624

624:                                              ; preds = %623, %418
  %625 = phi %class.GrOp* [ %421, %418 ], [ %607, %623 ]
  ret %class.GrOp* %625
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i16 @_ZN12_GLOBAL__N_125filter_and_mm_have_effectERK6GrQuadS2_(%class.GrQuad* dereferenceable(52), %class.GrQuad* dereferenceable(52)) unnamed_addr #2 {
  %3 = alloca %struct.SkRect, align 4
  %4 = alloca %struct.SkRect, align 4
  %5 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %145

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %1, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %145

12:                                               ; preds = %8
  %13 = bitcast %struct.SkRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #18
  %14 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 0
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 1
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 2
  %17 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 3
  %18 = bitcast %struct.SkRect* %4 to i8*
  %19 = bitcast %struct.SkRect* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %19, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #18
  %20 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 0
  %21 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 1
  %22 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 2
  %23 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 3
  %24 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %24, i8 -1, i64 16, i1 false)
  %25 = call zeroext i1 @_ZNK6GrQuad6asRectEP6SkRect(%class.GrQuad* %0, %struct.SkRect* nonnull %3) #18
  br i1 %25, label %26, label %68

26:                                               ; preds = %12
  %27 = call zeroext i1 @_ZNK6GrQuad6asRectEP6SkRect(%class.GrQuad* %1, %struct.SkRect* nonnull %4) #18
  br i1 %27, label %28, label %68

28:                                               ; preds = %26
  %29 = load float, float* %16, align 4
  %30 = load float, float* %14, align 4
  %31 = fsub float %29, %30
  %32 = load float, float* %22, align 4
  %33 = load float, float* %20, align 4
  %34 = fsub float %32, %33
  %35 = fcmp une float %31, %34
  br i1 %35, label %57, label %36

36:                                               ; preds = %28
  %37 = load float, float* %17, align 4
  %38 = load float, float* %15, align 4
  %39 = fsub float %37, %38
  %40 = load float, float* %23, align 4
  %41 = load float, float* %21, align 4
  %42 = fsub float %40, %41
  %43 = fcmp une float %39, %42
  br i1 %43, label %57, label %44

44:                                               ; preds = %36
  %45 = call float @llvm.trunc.f32(float %30) #18
  %46 = fsub float %30, %45
  %47 = call float @llvm.trunc.f32(float %33) #18
  %48 = fsub float %33, %47
  %49 = fcmp une float %46, %48
  br i1 %49, label %57, label %50

50:                                               ; preds = %44
  %51 = call float @llvm.trunc.f32(float %38) #18
  %52 = fsub float %38, %51
  %53 = call float @llvm.trunc.f32(float %41) #18
  %54 = fsub float %41, %53
  %55 = fcmp une float %52, %54
  %56 = zext i1 %55 to i8
  br label %57

57:                                               ; preds = %50, %44, %36, %28
  %58 = phi i8 [ 1, %44 ], [ 1, %36 ], [ 1, %28 ], [ %56, %50 ]
  %59 = fcmp ogt float %31, %34
  br i1 %59, label %140, label %60

60:                                               ; preds = %57
  %61 = load float, float* %17, align 4
  %62 = load float, float* %15, align 4
  %63 = fsub float %61, %62
  %64 = load float, float* %23, align 4
  %65 = load float, float* %21, align 4
  %66 = fsub float %64, %65
  %67 = fcmp ogt float %63, %66
  br label %140

68:                                               ; preds = %26, %12
  %69 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %0, i64 0, i32 0, i64 2
  %70 = load float, float* %69, align 4
  %71 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %0, i64 0, i32 0, i64 0
  %72 = load float, float* %71, align 4
  %73 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %0, i64 0, i32 1, i64 2
  %74 = load float, float* %73, align 4
  %75 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %0, i64 0, i32 1, i64 0
  %76 = load float, float* %75, align 4
  %77 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %0, i64 0, i32 0, i64 1
  %78 = load float, float* %77, align 4
  %79 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %0, i64 0, i32 1, i64 1
  %80 = load float, float* %79, align 4
  %81 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %1, i64 0, i32 0, i64 2
  %82 = load float, float* %81, align 4
  %83 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %1, i64 0, i32 0, i64 0
  %84 = load float, float* %83, align 4
  %85 = insertelement <2 x float> undef, float %70, i32 0
  %86 = insertelement <2 x float> %85, float %82, i32 1
  %87 = insertelement <2 x float> undef, float %72, i32 0
  %88 = insertelement <2 x float> %87, float %84, i32 1
  %89 = fsub <2 x float> %86, %88
  %90 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %89)
  %91 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %1, i64 0, i32 1, i64 2
  %92 = load float, float* %91, align 4
  %93 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %1, i64 0, i32 1, i64 0
  %94 = load float, float* %93, align 4
  %95 = insertelement <2 x float> undef, float %74, i32 0
  %96 = insertelement <2 x float> %95, float %92, i32 1
  %97 = insertelement <2 x float> undef, float %76, i32 0
  %98 = insertelement <2 x float> %97, float %94, i32 1
  %99 = fsub <2 x float> %96, %98
  %100 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %99)
  %101 = fadd <2 x float> %90, %100
  %102 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %1, i64 0, i32 0, i64 1
  %103 = load float, float* %102, align 4
  %104 = insertelement <2 x float> undef, float %78, i32 0
  %105 = insertelement <2 x float> %104, float %103, i32 1
  %106 = fsub <2 x float> %105, %88
  %107 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %106)
  %108 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %1, i64 0, i32 1, i64 1
  %109 = load float, float* %108, align 4
  %110 = insertelement <2 x float> undef, float %80, i32 0
  %111 = insertelement <2 x float> %110, float %109, i32 1
  %112 = fsub <2 x float> %111, %98
  %113 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %112)
  %114 = fadd <2 x float> %107, %113
  %115 = extractelement <2 x float> %101, i32 0
  %116 = extractelement <2 x float> %101, i32 1
  %117 = fcmp oeq float %115, %116
  %118 = extractelement <2 x float> %114, i32 0
  %119 = extractelement <2 x float> %114, i32 1
  %120 = fcmp oeq float %118, %119
  %121 = and i1 %117, %120
  %122 = call float @llvm.floor.f32(float %72) #18
  %123 = fcmp oeq float %122, %72
  %124 = and i1 %123, %121
  %125 = call float @llvm.floor.f32(float %76) #18
  %126 = fcmp oeq float %125, %76
  %127 = and i1 %126, %124
  %128 = call float @llvm.floor.f32(float %84) #18
  %129 = fcmp oeq float %128, %84
  %130 = and i1 %129, %127
  br i1 %130, label %131, label %135

131:                                              ; preds = %68
  %132 = call float @llvm.floor.f32(float %94) #18
  %133 = fcmp une float %132, %94
  %134 = zext i1 %133 to i8
  br label %135

135:                                              ; preds = %68, %131
  %136 = phi i8 [ %134, %131 ], [ 1, %68 ]
  %137 = fcmp ogt float %115, %116
  br i1 %137, label %140, label %138

138:                                              ; preds = %135
  %139 = fcmp ogt float %118, %119
  br label %140

140:                                              ; preds = %135, %138, %57, %60
  %141 = phi i8 [ %58, %60 ], [ %58, %57 ], [ %136, %138 ], [ %136, %135 ]
  %142 = phi i1 [ %67, %60 ], [ true, %57 ], [ %139, %138 ], [ true, %135 ]
  %143 = zext i1 %142 to i16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #18
  %144 = shl nuw nsw i16 %143, 8
  br label %145

145:                                              ; preds = %2, %8, %140
  %146 = phi i8 [ %141, %140 ], [ 1, %8 ], [ 1, %2 ]
  %147 = phi i16 [ %144, %140 ], [ 256, %8 ], [ 256, %2 ]
  %148 = zext i8 %146 to i16
  %149 = or i16 %147, %148
  ret i16 %149
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %class.GrXPFactory* @_Z23SkBlendMode_AsXPFactory11SkBlendMode(i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK6GrQuad6asRectEP6SkRect(%class.GrQuad*, %struct.SkRect*) local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectS8_RK6GrCapsPKf(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i64, i32, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %class.GrCaps* dereferenceable(232), float*) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectRK6GrCapsPKfb(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i64, i32, %struct.SkRect* dereferenceable(16), %class.GrCaps* dereferenceable(232), float*, i1 zeroext) local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6GrCapsPKf(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i64, i32, %class.GrCaps* dereferenceable(232), float*) local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE5sk_spI17GrColorSpaceXformE(%class.GrFragmentProcessor*, %class.sk_sp.230*) local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN24GrBlendFragmentProcessor4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEES5_11SkBlendModeNS_13BlendBehaviorE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i32, i32) local_unnamed_addr #3

declare %class.GrOp* @_ZN12GrFillRectOp4MakeEP18GrRecordingContextO7GrPaint8GrAATypeP8DrawQuadPK21GrUserStencilSettingsN24GrSimpleMeshDrawOpHelper10InputFlagsE(%class.GrRecordingContext*, %class.GrPaint* dereferenceable(48), i32, %struct.DrawQuad*, %struct.GrUserStencilSettings*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11GrTextureOp16AddTextureSetOpsEP20GrSurfaceDrawContextPK6GrClipP18GrRecordingContextPNS0_15TextureSetEntryEii12SkFilterMode12SkMipmapModeNS_8SaturateE11SkBlendMode8GrAATypeN8SkCanvas17SrcRectConstraintERK8SkMatrix5sk_spI17GrColorSpaceXformE(%class.GrSurfaceDrawContext*, %class.GrClip*, %class.GrRecordingContext*, %"struct.GrSurfaceDrawContext::TextureSetEntry"*, i32, i32, i32, i32, i1 zeroext, i32, i32, i32, %class.SkMatrix* dereferenceable(40), %class.sk_sp.230* nocapture) local_unnamed_addr #4 align 2 {
  %15 = alloca %class.SkMatrix, align 16
  %16 = alloca %class.SkMatrix, align 16
  %17 = alloca %struct.DrawQuad, align 4
  %18 = alloca %class.GrQuad, align 4
  %19 = alloca [4 x %struct.SkPoint], align 16
  %20 = alloca %class.GrQuad, align 4
  %21 = alloca %class.GrQuad, align 4
  %22 = alloca %class.GrSurfaceProxyView, align 8
  %23 = alloca %class.sk_sp.230, align 8
  %24 = alloca %"class.std::__1::function.272", align 8
  %25 = alloca %class.sk_sp.230, align 8
  %26 = alloca %"class.std::__1::function.272", align 8
  %27 = alloca %"class.GrTextureOp::BatchSizeLimiter", align 8
  %28 = icmp eq i32 %9, 3
  br i1 %28, label %29, label %37

29:                                               ; preds = %14
  %30 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %2, i64 0, i32 0, i32 0
  %31 = tail call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %30) #18
  %32 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %31, i64 0, i32 3
  %33 = bitcast i48* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = and i64 %34, 35184372088832
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %191

37:                                               ; preds = %29, %14
  %38 = bitcast %class.SkMatrix* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %38) #18
  %39 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 1
  %40 = bitcast %class.SkMatrix* %16 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %40, align 16
  %41 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 0, i64 4
  %42 = bitcast float* %41 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %42, align 16
  %43 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %43, align 16
  store i32 16, i32* %39, align 4
  %44 = icmp sgt i32 %4, 0
  br i1 %44, label %45, label %96

45:                                               ; preds = %37
  %46 = bitcast %class.SkMatrix* %12 to i8*
  %47 = bitcast %struct.DrawQuad* %17 to i8*
  %48 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %17, i64 0, i32 0, i32 2, i64 0
  %49 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %17, i64 0, i32 0, i32 3
  %50 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %17, i64 0, i32 1, i32 2, i64 0
  %51 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %17, i64 0, i32 1, i32 3
  %52 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %17, i64 0, i32 2
  %53 = bitcast %class.GrQuad* %18 to i8*
  %54 = bitcast [4 x %struct.SkPoint]* %19 to i8*
  %55 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %19, i64 0, i64 0
  %56 = bitcast %class.SkMatrix* %15 to i8*
  %57 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %15, i64 0, i32 1
  %58 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %15, i64 0, i32 0, i64 4
  %59 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %15, i64 0, i32 0, i64 8
  %60 = bitcast %class.GrQuad* %20 to i8*
  %61 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %17, i64 0, i32 1
  %62 = bitcast %class.GrQuad* %61 to i8*
  %63 = bitcast %class.GrQuad* %21 to i8*
  %64 = bitcast %class.GrQuad* %61 to i32*
  %65 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %17, i64 0, i32 1, i32 0, i64 1
  %66 = bitcast float* %65 to i32*
  %67 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %17, i64 0, i32 1, i32 0, i64 2
  %68 = bitcast float* %67 to i32*
  %69 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %17, i64 0, i32 1, i32 0, i64 3
  %70 = bitcast float* %69 to i32*
  %71 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %17, i64 0, i32 1, i32 1
  %72 = bitcast [4 x float]* %71 to i32*
  %73 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %17, i64 0, i32 1, i32 1, i64 1
  %74 = bitcast float* %73 to i32*
  %75 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %17, i64 0, i32 1, i32 1, i64 2
  %76 = bitcast float* %75 to i32*
  %77 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %17, i64 0, i32 1, i32 1, i64 3
  %78 = bitcast float* %77 to i32*
  %79 = icmp eq i32 %11, 0
  %80 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %22, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %22, i64 0, i32 1
  %82 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %22, i64 0, i32 2, i32 0
  %83 = getelementptr inbounds %class.sk_sp.230, %class.sk_sp.230* %23, i64 0, i32 0
  %84 = getelementptr inbounds %class.sk_sp.230, %class.sk_sp.230* %13, i64 0, i32 0
  %85 = bitcast %"class.std::__1::function.272"* %24 to i8*
  %86 = getelementptr inbounds %"class.std::__1::function.272", %"class.std::__1::function.272"* %24, i64 0, i32 0, i32 1, i32 0
  %87 = getelementptr inbounds %"class.std::__1::function.272", %"class.std::__1::function.272"* %24, i64 0, i32 0, i32 2
  %88 = getelementptr inbounds %"class.std::__1::function.272", %"class.std::__1::function.272"* %24, i64 0, i32 0, i32 0, i32 0
  %89 = zext i32 %4 to i64
  %90 = bitcast [4 x %struct.SkPoint]* %19 to i8*
  %91 = bitcast float* %48 to <4 x float>*
  %92 = bitcast float* %50 to <4 x float>*
  %93 = bitcast %class.SkMatrix* %15 to <4 x float>*
  %94 = bitcast float* %58 to <4 x float>*
  %95 = bitcast float* %50 to <4 x float>*
  br label %97

96:                                               ; preds = %188, %37
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %38) #18
  br label %330

97:                                               ; preds = %188, %45
  %98 = phi i64 [ 0, %45 ], [ %189, %188 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %38, i8* align 4 %46, i64 40, i1 false)
  %99 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %3, i64 %98, i32 6
  %100 = load %class.SkMatrix*, %class.SkMatrix** %99, align 8
  %101 = icmp eq %class.SkMatrix* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %97
  %103 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9preConcatERKS_(%class.SkMatrix* nonnull %16, %class.SkMatrix* nonnull dereferenceable(40) %100) #18
  br label %104

104:                                              ; preds = %97, %102
  call void @llvm.lifetime.start.p0i8(i64 108, i8* nonnull %47) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %47, i8* align 4 bitcast (%struct.DrawQuad* @__const.TextureOp.quad to i8*), i64 84, i1 false)
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %91, align 4
  store i32 0, i32* %49, align 4
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %92, align 4
  store i32 0, i32* %51, align 4
  %105 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %3, i64 %98, i32 8
  %106 = load i32, i32* %105, align 8
  store i32 %106, i32* %52, align 4
  %107 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %3, i64 %98, i32 5
  %108 = load %struct.SkPoint*, %struct.SkPoint** %107, align 8
  %109 = icmp eq %struct.SkPoint* %108, null
  br i1 %109, label %116, label %110

110:                                              ; preds = %104
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %53) #18
  call void @_ZN6GrQuad14MakeFromSkQuadEPK7SkPointRK8SkMatrix(%class.GrQuad* nonnull sret %18, %struct.SkPoint* nonnull %108, %class.SkMatrix* nonnull dereferenceable(40) %16) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %47, i8* nonnull align 4 %53, i64 52, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %53) #18
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #18
  %111 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %3, i64 %98, i32 3
  %112 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %3, i64 %98, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %90, i8 -1, i64 32, i1 false)
  %113 = load %struct.SkPoint*, %struct.SkPoint** %107, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %56) #18
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %93, align 16, !alias.scope !3
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %94, align 16, !alias.scope !3
  store float 1.000000e+00, float* %59, align 16, !alias.scope !3
  store i32 16, i32* %57, align 4, !alias.scope !3
  %114 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* nonnull %15, %struct.SkRect* dereferenceable(16) %111, %struct.SkRect* dereferenceable(16) %112, i32 0) #18
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %15, %struct.SkPoint* nonnull %55, %struct.SkPoint* %113, i32 4) #18
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %56) #18
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %60) #18
  %115 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #18
  call void @_ZN6GrQuad14MakeFromSkQuadEPK7SkPointRK8SkMatrix(%class.GrQuad* nonnull sret %20, %struct.SkPoint* nonnull %55, %class.SkMatrix* dereferenceable(40) %115) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %62, i8* nonnull align 4 %60, i64 52, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %60) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #18
  br label %130

116:                                              ; preds = %104
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %63) #18
  %117 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %3, i64 %98, i32 3
  call void @_ZN6GrQuad12MakeFromRectERK6SkRectRK8SkMatrix(%class.GrQuad* nonnull sret %21, %struct.SkRect* dereferenceable(16) %117, %class.SkMatrix* nonnull dereferenceable(40) %16) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %47, i8* nonnull align 4 %63, i64 52, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %63) #18
  %118 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %3, i64 %98, i32 2
  %119 = bitcast %struct.SkRect* %118 to i32*
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %3, i64 %98, i32 2, i32 2
  %122 = bitcast float* %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %3, i64 %98, i32 2, i32 1
  %125 = bitcast float* %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %3, i64 %98, i32 2, i32 3
  %128 = bitcast float* %127 to i32*
  %129 = load i32, i32* %128, align 4
  store i32 %120, i32* %64, align 4
  store i32 %120, i32* %66, align 4
  store i32 %123, i32* %68, align 4
  store i32 %123, i32* %70, align 4
  store i32 %126, i32* %72, align 4
  store i32 %129, i32* %74, align 4
  store i32 %126, i32* %76, align 4
  store i32 %129, i32* %78, align 4
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %95, align 4
  store i32 0, i32* %51, align 4
  br label %130

130:                                              ; preds = %116, %110
  %131 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %3, i64 %98, i32 2
  %132 = select i1 %79, %struct.SkRect* %131, %struct.SkRect* null
  %133 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %3, i64 %98, i32 0, i32 0, i32 0
  %134 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %133, align 8
  %135 = icmp eq %class.GrSurfaceProxy* %134, null
  br i1 %135, label %139, label %136

136:                                              ; preds = %130
  %137 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %134, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = atomicrmw add i32* %137, i32 1 monotonic
  br label %139

139:                                              ; preds = %130, %136
  store %class.GrSurfaceProxy* %134, %class.GrSurfaceProxy** %80, align 8
  %140 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %3, i64 %98, i32 0, i32 1
  %141 = load i32, i32* %140, align 8
  store i32 %141, i32* %81, align 8
  %142 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %3, i64 %98, i32 0, i32 2, i32 0
  %143 = load i16, i16* %142, align 2
  store i16 %143, i16* %82, align 4
  %144 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %3, i64 %98, i32 1
  %145 = load i32, i32* %144, align 8
  %146 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %84, align 8
  %147 = icmp eq %class.GrColorSpaceXform* %146, null
  br i1 %147, label %151, label %148

148:                                              ; preds = %139
  %149 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %146, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = atomicrmw add i32* %149, i32 1 monotonic
  br label %151

151:                                              ; preds = %139, %148
  store %class.GrColorSpaceXform* %146, %class.GrColorSpaceXform** %83, align 8
  %152 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %3, i64 %98, i32 7
  %153 = call %class.GrOp* @_ZN11GrTextureOp4MakeEP18GrRecordingContext18GrSurfaceProxyView11SkAlphaType5sk_spI17GrColorSpaceXformE12SkFilterMode12SkMipmapModeRK8SkRGBA4fILS3_2EENS_8SaturateE11SkBlendMode8GrAATypeP8DrawQuadPK6SkRect(%class.GrRecordingContext* %2, %class.GrSurfaceProxyView* nonnull %22, i32 %145, %class.sk_sp.230* nonnull %23, i32 %6, i32 %7, %struct.SkRGBA4f* dereferenceable(16) %152, i1 zeroext %8, i32 %9, i32 %10, %struct.DrawQuad* nonnull %17, %struct.SkRect* %132)
  %154 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %83, align 8
  %155 = icmp eq %class.GrColorSpaceXform* %154, null
  br i1 %155, label %166, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %154, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = atomicrmw add i32* %157, i32 -1 acq_rel
  %159 = icmp eq i32 %158, 1
  br i1 %159, label %160, label %166

160:                                              ; preds = %156
  %161 = bitcast %class.GrColorSpaceXform* %154 to %class.SkRefCntBase*
  %162 = bitcast %class.GrColorSpaceXform* %154 to void (%class.SkRefCntBase*)***
  %163 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %162, align 8
  %164 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %163, i64 2
  %165 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %164, align 8
  call void %165(%class.SkRefCntBase* nonnull %161) #18
  br label %166

166:                                              ; preds = %151, %156, %160
  %167 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %80, align 8
  %168 = icmp eq %class.GrSurfaceProxy* %167, null
  br i1 %168, label %181, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %167, i64 0, i32 1
  %171 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %170, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = atomicrmw add i32* %171, i32 -1 acq_rel
  %173 = icmp eq i32 %172, 1
  br i1 %173, label %174, label %181

174:                                              ; preds = %169
  %175 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %170, i64 -2
  %176 = bitcast %class.SkNVRefCnt* %175 to %class.GrSurfaceProxy*
  %177 = bitcast %class.SkNVRefCnt* %175 to void (%class.GrSurfaceProxy*)***
  %178 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %177, align 8
  %179 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %178, i64 1
  %180 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %179, align 8
  call void %180(%class.GrSurfaceProxy* nonnull %176) #18
  br label %181

181:                                              ; preds = %166, %169, %174
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %85) #18
  store void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)* @_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j, void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)** %86, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %87, align 8
  call void @_ZN20GrSurfaceDrawContext9addDrawOpEPK6GrClipNSt3__110unique_ptrI4GrOpNS3_14default_deleteIS5_EEEERKNS3_8functionIFvPS5_jEEE(%class.GrSurfaceDrawContext* %0, %class.GrClip* %1, %class.GrOp* %153, %"class.std::__1::function.272"* nonnull dereferenceable(32) %24) #18
  %182 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %87, align 8
  %183 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %182, i64 0, i32 1
  %184 = load void (i8*)*, void (i8*)** %183, align 8
  %185 = icmp eq void (i8*)* %184, null
  br i1 %185, label %188, label %186

186:                                              ; preds = %181
  %187 = load i8*, i8** %88, align 8
  call void %184(i8* %187) #18
  br label %188

188:                                              ; preds = %186, %181
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %85) #18
  call void @llvm.lifetime.end.p0i8(i64 108, i8* nonnull %47) #18
  %189 = add nuw nsw i64 %98, 1
  %190 = icmp eq i64 %189, %89
  br i1 %190, label %96, label %97

191:                                              ; preds = %29
  %192 = tail call i32 @_ZN18GrResourceProvider16MaxNumNonAAQuadsEv() #18
  %193 = tail call i32 @_ZN18GrResourceProvider13MaxNumAAQuadsEv() #18
  %194 = icmp slt i32 %193, %192
  %195 = select i1 %194, i32 %193, i32 %192
  %196 = icmp slt i32 %195, %4
  br i1 %196, label %228, label %197

197:                                              ; preds = %191
  %198 = getelementptr inbounds %class.sk_sp.230, %class.sk_sp.230* %13, i64 0, i32 0
  %199 = bitcast %class.sk_sp.230* %13 to i64*
  %200 = load i64, i64* %199, align 8
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %198, align 8
  %201 = bitcast %class.sk_sp.230* %25 to i64*
  store i64 %200, i64* %201, align 8
  %202 = call fastcc %class.GrOp* @_ZN12_GLOBAL__N_19TextureOp4MakeEP18GrRecordingContextPN20GrSurfaceDrawContext15TextureSetEntryEii12SkFilterMode12SkMipmapModeN11GrTextureOp8SaturateE8GrAATypeN8SkCanvas17SrcRectConstraintERK8SkMatrix5sk_spI17GrColorSpaceXformE(%"struct.GrSurfaceDrawContext::TextureSetEntry"* %3, i32 %4, i32 %5, i32 %6, i32 %7, i1 zeroext %8, i32 %10, i32 %11, %class.SkMatrix* dereferenceable(40) %12, %class.sk_sp.230* nonnull %25)
  %203 = getelementptr inbounds %class.sk_sp.230, %class.sk_sp.230* %25, i64 0, i32 0
  %204 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %203, align 8
  %205 = icmp eq %class.GrColorSpaceXform* %204, null
  br i1 %205, label %216, label %206

206:                                              ; preds = %197
  %207 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %204, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = atomicrmw add i32* %207, i32 -1 acq_rel
  %209 = icmp eq i32 %208, 1
  br i1 %209, label %210, label %216

210:                                              ; preds = %206
  %211 = bitcast %class.GrColorSpaceXform* %204 to %class.SkRefCntBase*
  %212 = bitcast %class.GrColorSpaceXform* %204 to void (%class.SkRefCntBase*)***
  %213 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %212, align 8
  %214 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %213, i64 2
  %215 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %214, align 8
  tail call void %215(%class.SkRefCntBase* nonnull %211) #18
  br label %216

216:                                              ; preds = %197, %206, %210
  %217 = bitcast %"class.std::__1::function.272"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %217) #18
  %218 = getelementptr inbounds %"class.std::__1::function.272", %"class.std::__1::function.272"* %26, i64 0, i32 0, i32 1, i32 0
  store void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)* @_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j, void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)** %218, align 8
  %219 = getelementptr inbounds %"class.std::__1::function.272", %"class.std::__1::function.272"* %26, i64 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %219, align 8
  call void @_ZN20GrSurfaceDrawContext9addDrawOpEPK6GrClipNSt3__110unique_ptrI4GrOpNS3_14default_deleteIS5_EEEERKNS3_8functionIFvPS5_jEEE(%class.GrSurfaceDrawContext* %0, %class.GrClip* %1, %class.GrOp* nonnull %202, %"class.std::__1::function.272"* nonnull dereferenceable(32) %26) #18
  %220 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %219, align 8
  %221 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %220, i64 0, i32 1
  %222 = load void (i8*)*, void (i8*)** %221, align 8
  %223 = icmp eq void (i8*)* %222, null
  br i1 %223, label %227, label %224

224:                                              ; preds = %216
  %225 = getelementptr inbounds %"class.std::__1::function.272", %"class.std::__1::function.272"* %26, i64 0, i32 0, i32 0, i32 0
  %226 = load i8*, i8** %225, align 8
  call void %222(i8* %226) #18
  br label %227

227:                                              ; preds = %224, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %217) #18
  br label %330

228:                                              ; preds = %191
  %229 = bitcast %"class.GrTextureOp::BatchSizeLimiter"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %229) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %229, i8 -86, i64 64, i1 false)
  %230 = getelementptr inbounds %class.sk_sp.230, %class.sk_sp.230* %13, i64 0, i32 0
  %231 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %230, align 8
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %230, align 8
  %232 = zext i1 %8 to i8
  %233 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %27, i64 0, i32 0
  store %class.GrSurfaceDrawContext* %0, %class.GrSurfaceDrawContext** %233, align 8
  %234 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %27, i64 0, i32 1
  store %class.GrClip* %1, %class.GrClip** %234, align 8
  %235 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %27, i64 0, i32 2
  store %class.GrRecordingContext* %2, %class.GrRecordingContext** %235, align 8
  %236 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %27, i64 0, i32 3
  store i32 %6, i32* %236, align 8
  %237 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %27, i64 0, i32 4
  store i32 %7, i32* %237, align 4
  %238 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %27, i64 0, i32 5
  store i8 %232, i8* %238, align 8
  %239 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %27, i64 0, i32 6
  store i32 %11, i32* %239, align 4
  %240 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %27, i64 0, i32 7
  store %class.SkMatrix* %12, %class.SkMatrix** %240, align 8
  %241 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %27, i64 0, i32 8, i32 0
  %242 = icmp eq %class.GrColorSpaceXform* %231, null
  br i1 %242, label %243, label %246

243:                                              ; preds = %228
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %241, align 8
  %244 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %27, i64 0, i32 9
  store i32 %4, i32* %244, align 8
  %245 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %27, i64 0, i32 10
  store i32 0, i32* %245, align 4
  br label %261

246:                                              ; preds = %228
  %247 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %231, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = atomicrmw add i32* %247, i32 1 monotonic
  store %class.GrColorSpaceXform* %231, %class.GrColorSpaceXform** %241, align 8
  %249 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %27, i64 0, i32 9
  store i32 %4, i32* %249, align 8
  %250 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %27, i64 0, i32 10
  store i32 0, i32* %250, align 4
  %251 = atomicrmw add i32* %247, i32 -1 acq_rel
  %252 = icmp eq i32 %251, 1
  br i1 %252, label %253, label %259

253:                                              ; preds = %246
  %254 = bitcast %class.GrColorSpaceXform* %231 to %class.SkRefCntBase*
  %255 = bitcast %class.GrColorSpaceXform* %231 to void (%class.SkRefCntBase*)***
  %256 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %255, align 8
  %257 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %256, i64 2
  %258 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %257, align 8
  tail call void %258(%class.SkRefCntBase* nonnull %254) #18
  br label %259

259:                                              ; preds = %253, %246
  %260 = load i32, i32* %249, align 8
  br label %261

261:                                              ; preds = %259, %243
  %262 = phi i32 [ %260, %259 ], [ %4, %243 ]
  %263 = phi i32* [ %250, %259 ], [ %245, %243 ]
  %264 = phi i32* [ %249, %259 ], [ %244, %243 ]
  %265 = and i32 %10, -3
  %266 = icmp eq i32 %265, 0
  %267 = icmp sgt i32 %262, 0
  br i1 %266, label %269, label %268

268:                                              ; preds = %261
  br i1 %267, label %277, label %316

269:                                              ; preds = %261
  br i1 %267, label %270, label %316

270:                                              ; preds = %269, %270
  %271 = phi i32 [ %275, %270 ], [ %262, %269 ]
  %272 = call i32 @_ZN18GrResourceProvider16MaxNumNonAAQuadsEv() #18
  %273 = icmp slt i32 %272, %271
  %274 = select i1 %273, i32 %272, i32 %271
  call void @_ZN11GrTextureOp16BatchSizeLimiter8createOpEPN20GrSurfaceDrawContext15TextureSetEntryEi8GrAAType(%"class.GrTextureOp::BatchSizeLimiter"* nonnull %27, %"struct.GrSurfaceDrawContext::TextureSetEntry"* %3, i32 %274, i32 %10)
  %275 = load i32, i32* %264, align 8
  %276 = icmp sgt i32 %275, 0
  br i1 %276, label %270, label %316

277:                                              ; preds = %268, %309
  %278 = phi i32 [ %310, %309 ], [ 0, %268 ]
  %279 = phi i32 [ %311, %309 ], [ 0, %268 ]
  %280 = load i32, i32* %263, align 4
  %281 = add nsw i32 %280, %278
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %3, i64 %282, i32 8
  %284 = load i32, i32* %283, align 8
  %285 = icmp ne i32 %284, 0
  %286 = icmp eq i32 %279, 1
  %287 = or i1 %286, %285
  br i1 %287, label %288, label %297

288:                                              ; preds = %277
  %289 = call i32 @_ZN18GrResourceProvider13MaxNumAAQuadsEv() #18
  %290 = icmp slt i32 %278, %289
  br i1 %290, label %304, label %291

291:                                              ; preds = %288
  %292 = icmp eq i32 %279, 0
  br i1 %292, label %295, label %293

293:                                              ; preds = %291
  %294 = call i32 @_ZN18GrResourceProvider13MaxNumAAQuadsEv() #18
  br label %295

295:                                              ; preds = %291, %293
  %296 = phi i32 [ %294, %293 ], [ %278, %291 ]
  call void @_ZN11GrTextureOp16BatchSizeLimiter8createOpEPN20GrSurfaceDrawContext15TextureSetEntryEi8GrAAType(%"class.GrTextureOp::BatchSizeLimiter"* nonnull %27, %"struct.GrSurfaceDrawContext::TextureSetEntry"* %3, i32 %296, i32 %279)
  br label %313

297:                                              ; preds = %277
  %298 = icmp eq i32 %279, 0
  br i1 %298, label %299, label %304

299:                                              ; preds = %297
  %300 = call i32 @_ZN18GrResourceProvider16MaxNumNonAAQuadsEv() #18
  %301 = icmp slt i32 %278, %300
  br i1 %301, label %304, label %302

302:                                              ; preds = %299
  %303 = call i32 @_ZN18GrResourceProvider16MaxNumNonAAQuadsEv() #18
  call void @_ZN11GrTextureOp16BatchSizeLimiter8createOpEPN20GrSurfaceDrawContext15TextureSetEntryEi8GrAAType(%"class.GrTextureOp::BatchSizeLimiter"* nonnull %27, %"struct.GrSurfaceDrawContext::TextureSetEntry"* %3, i32 %303, i32 0)
  br label %313

304:                                              ; preds = %288, %299, %297
  %305 = phi i32 [ 1, %288 ], [ %279, %297 ], [ 0, %299 ]
  %306 = add nuw nsw i32 %278, 1
  %307 = load i32, i32* %264, align 8
  %308 = icmp slt i32 %306, %307
  br i1 %308, label %309, label %312

309:                                              ; preds = %304, %313
  %310 = phi i32 [ %306, %304 ], [ 0, %313 ]
  %311 = phi i32 [ %305, %304 ], [ 0, %313 ]
  br label %277

312:                                              ; preds = %304
  call void @_ZN11GrTextureOp16BatchSizeLimiter8createOpEPN20GrSurfaceDrawContext15TextureSetEntryEi8GrAAType(%"class.GrTextureOp::BatchSizeLimiter"* nonnull %27, %"struct.GrSurfaceDrawContext::TextureSetEntry"* %3, i32 %307, i32 %305)
  br label %313

313:                                              ; preds = %302, %295, %312
  %314 = load i32, i32* %264, align 8
  %315 = icmp sgt i32 %314, 0
  br i1 %315, label %309, label %316

316:                                              ; preds = %313, %270, %268, %269
  %317 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %241, align 8
  %318 = icmp eq %class.GrColorSpaceXform* %317, null
  br i1 %318, label %329, label %319

319:                                              ; preds = %316
  %320 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %317, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %321 = atomicrmw add i32* %320, i32 -1 acq_rel
  %322 = icmp eq i32 %321, 1
  br i1 %322, label %323, label %329

323:                                              ; preds = %319
  %324 = bitcast %class.GrColorSpaceXform* %317 to %class.SkRefCntBase*
  %325 = bitcast %class.GrColorSpaceXform* %317 to void (%class.SkRefCntBase*)***
  %326 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %325, align 8
  %327 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %326, i64 2
  %328 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %327, align 8
  call void %328(%class.SkRefCntBase* nonnull %324) #18
  br label %329

329:                                              ; preds = %316, %319, %323
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %229) #18
  br label %330

330:                                              ; preds = %329, %227, %96
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9preConcatERKS_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #3

declare void @_ZN6GrQuad14MakeFromSkQuadEPK7SkPointRK8SkMatrix(%class.GrQuad* sret, %struct.SkPoint*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #3

declare void @_ZN6GrQuad12MakeFromRectERK6SkRectRK8SkMatrix(%class.GrQuad* sret, %struct.SkRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #3

declare void @_ZN20GrSurfaceDrawContext9addDrawOpEPK6GrClipNSt3__110unique_ptrI4GrOpNS3_14default_deleteIS5_EEEERKNS3_8functionIFvPS5_jEEE(%class.GrSurfaceDrawContext*, %class.GrClip*, %class.GrOp*, %"class.std::__1::function.272"* dereferenceable(32)) local_unnamed_addr #3

declare i32 @_ZN18GrResourceProvider16MaxNumNonAAQuadsEv() local_unnamed_addr #3

declare i32 @_ZN18GrResourceProvider13MaxNumAAQuadsEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc nonnull %class.GrOp* @_ZN12_GLOBAL__N_19TextureOp4MakeEP18GrRecordingContextPN20GrSurfaceDrawContext15TextureSetEntryEii12SkFilterMode12SkMipmapModeN11GrTextureOp8SaturateE8GrAATypeN8SkCanvas17SrcRectConstraintERK8SkMatrix5sk_spI17GrColorSpaceXformE(%"struct.GrSurfaceDrawContext::TextureSetEntry"*, i32, i32, i32, i32, i1 zeroext, i32, i32, %class.SkMatrix* nocapture readonly dereferenceable(40), %class.sk_sp.230* nocapture) unnamed_addr #0 align 2 {
  %11 = alloca %class.SkMatrix, align 16
  %12 = alloca %class.SkMatrix, align 4
  %13 = alloca %struct.DrawQuad, align 4
  %14 = alloca %class.GrQuad, align 4
  %15 = alloca [4 x %struct.SkPoint], align 16
  %16 = alloca %class.GrQuad, align 4
  %17 = alloca %class.GrQuad, align 4
  %18 = alloca i32, align 4
  %19 = alloca { <2 x float>, <2 x float> }, align 8
  %20 = add nsw i32 %2, -1
  %21 = sext i32 %20 to i64
  %22 = shl nsw i64 %21, 4
  %23 = add nsw i64 %22, 120
  %24 = tail call i8* @_Znwm(i64 %23) #18
  %25 = bitcast i8* %24 to %"class.(anonymous namespace)::TextureOp"*
  %26 = getelementptr inbounds %class.sk_sp.230, %class.sk_sp.230* %9, i64 0, i32 0
  %27 = bitcast %class.sk_sp.230* %9 to i64*
  %28 = load i64, i64* %27, align 8
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %26, align 8
  %29 = bitcast { <2 x float>, <2 x float> }* %19 to %struct.SkRect*
  %30 = bitcast i8* %24 to %class.GrMeshDrawOp*
  %31 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_19TextureOp7ClassIDEvE8kClassID to i8*) acquire, align 8
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %41, !prof !2

33:                                               ; preds = %10
  %34 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_19TextureOp7ClassIDEvE8kClassID) #18
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %33
  %37 = atomicrmw add i32* getelementptr inbounds (%"struct.std::__1::atomic.313", %"struct.std::__1::atomic.313"* @_ZN4GrOp14gCurrOpClassIDE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i64 0, i64 0)) #20
  unreachable

40:                                               ; preds = %36
  store i32 %37, i32* @_ZZN12_GLOBAL__N_19TextureOp7ClassIDEvE8kClassID, align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_19TextureOp7ClassIDEvE8kClassID) #18
  br label %41

41:                                               ; preds = %40, %33, %10
  %42 = load i32, i32* @_ZZN12_GLOBAL__N_19TextureOp7ClassIDEvE8kClassID, align 4
  tail call void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp* nonnull %30, i32 %42) #18
  %43 = bitcast i8* %24 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_19TextureOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds i8, i8* %24, i64 48
  %45 = mul nsw i32 %1, 104
  %46 = icmp sgt i32 %1, -1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 28, i1 false) #18
  br i1 %46, label %48, label %47

47:                                               ; preds = %41
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i32 167, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0)) #20
  unreachable

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %24, i64 56
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i32 %1, 0
  br i1 %51, label %62, label %52

52:                                               ; preds = %48
  %53 = or i32 %45, 4
  %54 = lshr exact i32 %53, 2
  %55 = add nuw i32 %54, %53
  %56 = icmp sgt i32 %55, -1
  br i1 %56, label %58, label %57

57:                                               ; preds = %52
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0)) #20
  unreachable

58:                                               ; preds = %52
  store i32 %55, i32* %50, align 8
  %59 = bitcast i8* %44 to i8**
  %60 = sext i32 %55 to i64
  %61 = tail call i8* @_Z16sk_realloc_throwPvm(i8* null, i64 %60) #18
  store i8* %61, i8** %59, align 8
  br label %62

62:                                               ; preds = %58, %48
  %63 = getelementptr inbounds i8, i8* %24, i64 80
  %64 = bitcast i8* %63 to i64*
  store i64 %28, i64* %64, align 8
  %65 = getelementptr inbounds i8, i8* %24, i64 88
  %66 = bitcast i8* %65 to %"struct.(anonymous namespace)::TextureOp::Desc"**
  store %"struct.(anonymous namespace)::TextureOp::Desc"* null, %"struct.(anonymous namespace)::TextureOp::Desc"** %66, align 8
  %67 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %0, i64 0, i32 0, i32 2, i32 0
  %68 = load i16, i16* %67, align 2, !noalias !8
  %69 = getelementptr inbounds i8, i8* %24, i64 96
  %70 = bitcast i8* %69 to i16*
  store i16 %68, i16* %70, align 2
  %71 = getelementptr inbounds i8, i8* %24, i64 98
  %72 = bitcast i8* %71 to i16*
  %73 = getelementptr inbounds i8, i8* %24, i64 100
  %74 = bitcast i8* %73 to i16*
  %75 = getelementptr inbounds i8, i8* %24, i64 102
  %76 = bitcast i8* %75 to i16*
  %77 = load i16, i16* %76, align 2
  %78 = and i16 %77, -1024
  %79 = zext i1 %5 to i16
  %80 = shl nuw nsw i16 %79, 9
  %81 = or i16 %78, %80
  store i16 %81, i16* %76, align 2
  %82 = getelementptr inbounds i8, i8* %24, i64 104
  %83 = bitcast i8* %82 to %class.GrSurfaceProxy**
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %83, align 8
  %84 = trunc i32 %2 to i16
  store i16 %84, i16* %72, align 2
  %85 = trunc i32 %1 to i16
  store i16 %85, i16* %74, align 4
  %86 = icmp sgt i32 %1, 0
  br i1 %86, label %87, label %535

87:                                               ; preds = %62
  %88 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %0, i64 0, i32 0, i32 0, i32 0
  %89 = bitcast %"struct.GrSurfaceDrawContext::TextureSetEntry"* %0 to i64*
  %90 = bitcast i8* %82 to i64*
  %91 = getelementptr inbounds i8, i8* %24, i64 112
  %92 = bitcast i8* %91 to i32*
  %93 = bitcast %class.SkMatrix* %12 to i8*
  %94 = bitcast %class.SkMatrix* %8 to i8*
  %95 = bitcast %struct.DrawQuad* %13 to i8*
  %96 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 0, i32 2, i64 0
  %97 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 0, i32 3
  %98 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 1, i32 2, i64 0
  %99 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 1, i32 3
  %100 = bitcast %class.GrQuad* %14 to i8*
  %101 = bitcast [4 x %struct.SkPoint]* %15 to i8*
  %102 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %15, i64 0, i64 0
  %103 = bitcast %class.SkMatrix* %11 to i8*
  %104 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 1
  %105 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 4
  %106 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 8
  %107 = bitcast %class.GrQuad* %16 to i8*
  %108 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 1
  %109 = bitcast %class.GrQuad* %108 to i8*
  %110 = bitcast %class.GrQuad* %17 to i8*
  %111 = bitcast %class.GrQuad* %108 to i32*
  %112 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 1, i32 0, i64 1
  %113 = bitcast float* %112 to i32*
  %114 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 1, i32 0, i64 2
  %115 = bitcast float* %114 to i32*
  %116 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 1, i32 0, i64 3
  %117 = bitcast float* %116 to i32*
  %118 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 1, i32 1
  %119 = bitcast [4 x float]* %118 to i32*
  %120 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 1, i32 1, i64 1
  %121 = bitcast float* %120 to i32*
  %122 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 1, i32 1, i64 2
  %123 = bitcast float* %122 to i32*
  %124 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 1, i32 1, i64 3
  %125 = bitcast float* %124 to i32*
  %126 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 0
  %127 = icmp ne i32 %3, 0
  %128 = icmp ne i32 %4, 0
  %129 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 0, i32 0, i64 0
  %130 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 0, i32 0, i64 1
  %131 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 0, i32 0, i64 2
  %132 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 0, i32 0, i64 3
  %133 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 0, i32 1, i64 0
  %134 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 0, i32 1, i64 1
  %135 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 0, i32 1, i64 2
  %136 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 0, i32 1, i64 3
  %137 = bitcast i32* %18 to i8*
  %138 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 2
  %139 = icmp eq i32 %7, 0
  %140 = bitcast %class.GrQuad* %108 to <2 x float>*
  %141 = bitcast float* %114 to <2 x float>*
  %142 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 1, i32 1, i64 0
  %143 = bitcast float* %142 to <2 x float>*
  %144 = bitcast float* %122 to <2 x float>*
  %145 = bitcast [4 x float]* %118 to <2 x float>*
  %146 = bitcast { <2 x float>, <2 x float> }* %19 to i8*
  %147 = icmp eq i32 %3, 0
  %148 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %19, i64 0, i32 0
  %149 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %19, i64 0, i32 1
  %150 = zext i32 %1 to i64
  %151 = bitcast float* %96 to <4 x float>*
  %152 = bitcast float* %98 to <4 x float>*
  %153 = bitcast %class.SkMatrix* %11 to <4 x float>*
  %154 = bitcast float* %105 to <4 x float>*
  %155 = bitcast float* %98 to <4 x float>*
  br label %162

156:                                              ; preds = %524
  %157 = bitcast float %300 to i32
  %158 = bitcast float %303 to i32
  %159 = bitcast float %306 to i32
  %160 = bitcast float %309 to i32
  %161 = load i16, i16* %76, align 2
  br label %535

162:                                              ; preds = %524, %87
  %163 = phi float [ 0x47EFFFFFE0000000, %87 ], [ %303, %524 ]
  %164 = phi float [ 0xC7EFFFFFE0000000, %87 ], [ %306, %524 ]
  %165 = phi float [ 0xC7EFFFFFE0000000, %87 ], [ %309, %524 ]
  %166 = phi float [ 0x47EFFFFFE0000000, %87 ], [ %300, %524 ]
  %167 = phi i64 [ 0, %87 ], [ %533, %524 ]
  %168 = phi i32 [ 0, %87 ], [ %316, %524 ]
  %169 = phi i8 [ 0, %87 ], [ %355, %524 ]
  %170 = phi i32 [ 0, %87 ], [ %251, %524 ]
  %171 = phi i32 [ 0, %87 ], [ %206, %524 ]
  %172 = phi %class.GrSurfaceProxy* [ null, %87 ], [ %205, %524 ]
  %173 = phi i32 [ 0, %87 ], [ %250, %524 ]
  %174 = icmp eq i64 %167, 0
  br i1 %174, label %175, label %193

175:                                              ; preds = %162
  %176 = load i64, i64* %89, align 8, !noalias !11
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %88, align 8, !noalias !11
  %177 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %83, align 8
  store i64 %176, i64* %90, align 8
  %178 = icmp eq %class.GrSurfaceProxy* %177, null
  br i1 %178, label %191, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %177, i64 0, i32 1
  %181 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %180, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = atomicrmw add i32* %181, i32 -1 acq_rel
  %183 = icmp eq i32 %182, 1
  br i1 %183, label %184, label %191

184:                                              ; preds = %179
  %185 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %180, i64 -2
  %186 = bitcast %class.SkNVRefCnt* %185 to %class.GrSurfaceProxy*
  %187 = bitcast %class.SkNVRefCnt* %185 to void (%class.GrSurfaceProxy*)***
  %188 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %187, align 8
  %189 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %188, i64 1
  %190 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %189, align 8
  call void %190(%class.GrSurfaceProxy* nonnull %186) #18
  br label %191

191:                                              ; preds = %184, %179, %175
  store i32 0, i32* %92, align 8
  %192 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %83, align 8
  br label %204

193:                                              ; preds = %162
  %194 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %0, i64 %167, i32 0, i32 0, i32 0
  %195 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %194, align 8
  %196 = icmp eq %class.GrSurfaceProxy* %195, %172
  br i1 %196, label %204, label %197

197:                                              ; preds = %193
  %198 = ptrtoint %class.GrSurfaceProxy* %195 to i64
  %199 = add nsw i32 %171, 1
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %25, i64 0, i32 5, i64 %200, i32 0
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %194, align 8, !noalias !14
  %202 = bitcast %class.sk_sp.56* %201 to i64*
  store i64 %198, i64* %202, align 8, !alias.scope !14
  %203 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %25, i64 0, i32 5, i64 %200, i32 1
  store i32 0, i32* %203, align 8
  br label %204

204:                                              ; preds = %197, %193, %191
  %205 = phi %class.GrSurfaceProxy* [ %192, %191 ], [ %195, %197 ], [ %172, %193 ]
  %206 = phi i32 [ %171, %191 ], [ %199, %197 ], [ %171, %193 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %93) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %93, i8* align 4 %94, i64 40, i1 false) #18
  %207 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %0, i64 %167, i32 6
  %208 = load %class.SkMatrix*, %class.SkMatrix** %207, align 8
  %209 = icmp eq %class.SkMatrix* %208, null
  br i1 %209, label %212, label %210

210:                                              ; preds = %204
  %211 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9preConcatERKS_(%class.SkMatrix* nonnull %12, %class.SkMatrix* nonnull dereferenceable(40) %208) #18
  br label %212

212:                                              ; preds = %210, %204
  call void @llvm.lifetime.start.p0i8(i64 108, i8* nonnull %95) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %95, i8* align 4 bitcast (%struct.DrawQuad* @__const.TextureOp.quad to i8*), i64 108, i1 false) #18
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %151, align 4
  store i32 0, i32* %97, align 4
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %152, align 4
  store i32 0, i32* %99, align 4
  %213 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %0, i64 %167, i32 5
  %214 = load %struct.SkPoint*, %struct.SkPoint** %213, align 8
  %215 = icmp eq %struct.SkPoint* %214, null
  br i1 %215, label %222, label %216

216:                                              ; preds = %212
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %100) #18
  call void @_ZN6GrQuad14MakeFromSkQuadEPK7SkPointRK8SkMatrix(%class.GrQuad* nonnull sret %14, %struct.SkPoint* nonnull %214, %class.SkMatrix* nonnull dereferenceable(40) %12) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %95, i8* nonnull align 4 %100, i64 52, i1 false) #18
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %100) #18
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %101) #18
  %217 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %0, i64 %167, i32 3
  %218 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %0, i64 %167, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %101, i8 -1, i64 32, i1 false) #18
  %219 = load %struct.SkPoint*, %struct.SkPoint** %213, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %103) #18
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %153, align 16, !alias.scope !17
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %154, align 16, !alias.scope !17
  store float 1.000000e+00, float* %106, align 16, !alias.scope !17
  store i32 16, i32* %104, align 4, !alias.scope !17
  %220 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* nonnull %11, %struct.SkRect* dereferenceable(16) %217, %struct.SkRect* dereferenceable(16) %218, i32 0) #18
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %11, %struct.SkPoint* nonnull %102, %struct.SkPoint* %219, i32 4) #18
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %103) #18
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %107) #18
  %221 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #18
  call void @_ZN6GrQuad14MakeFromSkQuadEPK7SkPointRK8SkMatrix(%class.GrQuad* nonnull sret %16, %struct.SkPoint* nonnull %102, %class.SkMatrix* dereferenceable(40) %221) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %109, i8* nonnull align 4 %107, i64 52, i1 false) #18
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %107) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %101) #18
  br label %236

222:                                              ; preds = %212
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %110) #18
  %223 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %0, i64 %167, i32 3
  call void @_ZN6GrQuad12MakeFromRectERK6SkRectRK8SkMatrix(%class.GrQuad* nonnull sret %17, %struct.SkRect* dereferenceable(16) %223, %class.SkMatrix* nonnull dereferenceable(40) %12) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %95, i8* nonnull align 4 %110, i64 52, i1 false) #18
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %110) #18
  %224 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %0, i64 %167, i32 2
  %225 = bitcast %struct.SkRect* %224 to i32*
  %226 = load i32, i32* %225, align 4
  %227 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %0, i64 %167, i32 2, i32 2
  %228 = bitcast float* %227 to i32*
  %229 = load i32, i32* %228, align 4
  %230 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %0, i64 %167, i32 2, i32 1
  %231 = bitcast float* %230 to i32*
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %0, i64 %167, i32 2, i32 3
  %234 = bitcast float* %233 to i32*
  %235 = load i32, i32* %234, align 4
  store i32 %226, i32* %111, align 4
  store i32 %226, i32* %113, align 4
  store i32 %229, i32* %115, align 4
  store i32 %229, i32* %117, align 4
  store i32 %232, i32* %119, align 4
  store i32 %235, i32* %121, align 4
  store i32 %232, i32* %123, align 4
  store i32 %235, i32* %125, align 4
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %155, align 4
  store i32 0, i32* %99, align 4
  br label %236

236:                                              ; preds = %222, %216
  %237 = icmp eq i32 %170, %3
  %238 = icmp eq i32 %173, %4
  %239 = and i1 %237, %238
  br i1 %239, label %249, label %240

240:                                              ; preds = %236
  %241 = call fastcc i16 @_ZN12_GLOBAL__N_125filter_and_mm_have_effectERK6GrQuadS2_(%class.GrQuad* dereferenceable(52) %108, %class.GrQuad* nonnull dereferenceable(52) %126) #18
  %242 = trunc i16 %241 to i8
  %243 = icmp ne i8 %242, 0
  %244 = and i1 %127, %243
  %245 = select i1 %244, i32 %3, i32 %170
  %246 = icmp ugt i16 %241, 255
  %247 = and i1 %128, %246
  %248 = select i1 %247, i32 %4, i32 %173
  br label %249

249:                                              ; preds = %240, %236
  %250 = phi i32 [ %248, %240 ], [ %4, %236 ]
  %251 = phi i32 [ %245, %240 ], [ %3, %236 ]
  %252 = load i32, i32* %97, align 4
  %253 = icmp eq i32 %252, 3
  br i1 %253, label %254, label %258

254:                                              ; preds = %249
  %255 = call { <2 x float>, <2 x float> } @_ZNK6GrQuad15projectedBoundsEv(%class.GrQuad* nonnull %126) #18
  %256 = extractvalue { <2 x float>, <2 x float> } %255, 0
  %257 = extractvalue { <2 x float>, <2 x float> } %255, 1
  br label %295

258:                                              ; preds = %249
  %259 = load float, float* %130, align 4
  %260 = load float, float* %129, align 4
  %261 = fcmp olt float %259, %260
  %262 = load float, float* %132, align 4
  %263 = load float, float* %131, align 4
  %264 = fcmp olt float %262, %263
  %265 = select i1 %264, float %262, float %263
  %266 = select i1 %261, float %259, float %260
  %267 = fcmp olt float %265, %266
  %268 = select i1 %267, float %265, float %266
  %269 = insertelement <2 x float> undef, float %268, i32 0
  %270 = load float, float* %134, align 4
  %271 = load float, float* %133, align 4
  %272 = fcmp olt float %270, %271
  %273 = load float, float* %136, align 4
  %274 = load float, float* %135, align 4
  %275 = fcmp olt float %273, %274
  %276 = select i1 %275, float %273, float %274
  %277 = select i1 %272, float %270, float %271
  %278 = fcmp olt float %276, %277
  %279 = select i1 %278, float %276, float %277
  %280 = insertelement <2 x float> %269, float %279, i32 1
  %281 = fcmp olt float %260, %259
  %282 = fcmp olt float %263, %262
  %283 = select i1 %281, float %259, float %260
  %284 = select i1 %282, float %262, float %263
  %285 = fcmp olt float %283, %284
  %286 = select i1 %285, float %284, float %283
  %287 = insertelement <2 x float> undef, float %286, i32 0
  %288 = fcmp olt float %271, %270
  %289 = fcmp olt float %274, %273
  %290 = select i1 %288, float %270, float %271
  %291 = select i1 %289, float %273, float %274
  %292 = fcmp olt float %290, %291
  %293 = select i1 %292, float %291, float %290
  %294 = insertelement <2 x float> %287, float %293, i32 1
  br label %295

295:                                              ; preds = %258, %254
  %296 = phi <2 x float> [ %256, %254 ], [ %280, %258 ]
  %297 = phi <2 x float> [ %257, %254 ], [ %294, %258 ]
  %298 = extractelement <2 x float> %296, i32 0
  %299 = fcmp olt float %298, %166
  %300 = select i1 %299, float %298, float %166
  %301 = extractelement <2 x float> %296, i32 1
  %302 = fcmp olt float %301, %163
  %303 = select i1 %302, float %301, float %163
  %304 = extractelement <2 x float> %297, i32 0
  %305 = fcmp olt float %164, %304
  %306 = select i1 %305, float %304, float %164
  %307 = extractelement <2 x float> %297, i32 1
  %308 = fcmp olt float %165, %307
  %309 = select i1 %308, float %307, float %165
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %137) #18
  store i32 -1431655766, i32* %18, align 4
  %310 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %0, i64 %167, i32 8
  %311 = load i32, i32* %310, align 8
  call void @_ZN11GrQuadUtils13ResolveAATypeE8GrAAType13GrQuadAAFlagsRK6GrQuadPS0_PS1_(i32 %6, i32 %311, %class.GrQuad* nonnull dereferenceable(52) %126, i32* nonnull %18, i32* %138) #18
  %312 = icmp eq i32 %168, 0
  %313 = load i32, i32* %18, align 4
  %314 = icmp ne i32 %313, 0
  %315 = and i1 %312, %314
  %316 = select i1 %315, i32 %6, i32 %168
  br i1 %139, label %317, label %353

317:                                              ; preds = %295
  %318 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %0, i64 %167, i32 2
  %319 = call i64 @_ZNK14GrSurfaceProxy22backingStoreDimensionsEv(%class.GrSurfaceProxy* %205) #18
  %320 = trunc i64 %319 to i32
  %321 = lshr i64 %319, 32
  %322 = trunc i64 %321 to i32
  %323 = sitofp i32 %320 to float
  %324 = sitofp i32 %322 to float
  %325 = icmp slt i32 %320, 1
  %326 = icmp slt i32 %322, 1
  %327 = or i1 %325, %326
  br i1 %327, label %348, label %328

328:                                              ; preds = %317
  %329 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %318, i64 0, i32 0
  %330 = load float, float* %329, align 4
  %331 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %0, i64 %167, i32 2, i32 2
  %332 = load float, float* %331, align 4
  %333 = fcmp olt float %330, %332
  br i1 %333, label %334, label %348

334:                                              ; preds = %328
  %335 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %0, i64 %167, i32 2, i32 1
  %336 = load float, float* %335, align 4
  %337 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %0, i64 %167, i32 2, i32 3
  %338 = load float, float* %337, align 4
  %339 = fcmp uge float %336, %338
  %340 = fcmp ugt float %330, 0.000000e+00
  %341 = or i1 %340, %339
  br i1 %341, label %348, label %342

342:                                              ; preds = %334
  %343 = fcmp ole float %336, 0.000000e+00
  %344 = fcmp oge float %332, %323
  %345 = fcmp oge float %338, %324
  %346 = and i1 %344, %343
  %347 = and i1 %345, %346
  br i1 %347, label %353, label %348

348:                                              ; preds = %342, %334, %328, %317
  %349 = load i32, i32* %18, align 4
  %350 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_126safe_to_ignore_subset_rectE8GrAAType12SkFilterModeRK8DrawQuadRK6SkRect(i32 %349, i32 %3, %struct.DrawQuad* nonnull dereferenceable(108) %13, %struct.SkRect* dereferenceable(16) %318) #18
  %351 = select i1 %350, %struct.SkRect* null, %struct.SkRect* %318
  %352 = select i1 %350, i8 %169, i8 1
  br label %353

353:                                              ; preds = %348, %342, %295
  %354 = phi %struct.SkRect* [ null, %295 ], [ null, %342 ], [ %351, %348 ]
  %355 = phi i8 [ %169, %295 ], [ %169, %342 ], [ %352, %348 ]
  %356 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %0, i64 %167, i32 0, i32 1
  %357 = load i32, i32* %356, align 8
  %358 = call i64 @_ZNK14GrSurfaceProxy22backingStoreDimensionsEv(%class.GrSurfaceProxy* %205) #18
  %359 = lshr i64 %358, 32
  %360 = trunc i64 %359 to i32
  %361 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %205, i64 0, i32 5, i32 3
  %362 = load i32, i32* %361, align 8
  %363 = icmp eq i32 %362, 2
  br i1 %363, label %364, label %366

364:                                              ; preds = %353
  %365 = sitofp i32 %360 to float
  br label %372

366:                                              ; preds = %353
  %367 = trunc i64 %358 to i32
  %368 = sitofp i32 %367 to float
  %369 = fdiv float 1.000000e+00, %368
  %370 = sitofp i32 %360 to float
  %371 = fdiv float 1.000000e+00, %370
  br label %372

372:                                              ; preds = %366, %364
  %373 = phi float [ 1.000000e+00, %364 ], [ %369, %366 ]
  %374 = phi float [ 1.000000e+00, %364 ], [ %371, %366 ]
  %375 = phi float [ %365, %364 ], [ 1.000000e+00, %366 ]
  %376 = icmp eq i32 %357, 1
  %377 = insertelement <2 x float> undef, float %373, i32 0
  %378 = fsub float -0.000000e+00, %374
  %379 = insertelement <2 x float> %377, float %378, i32 1
  %380 = insertelement <2 x float> %377, float %374, i32 1
  %381 = select i1 %376, <2 x float> %379, <2 x float> %380
  %382 = select i1 %376, float %375, float 0.000000e+00
  %383 = load <2 x float>, <2 x float>* %140, align 4
  %384 = load <2 x float>, <2 x float>* %141, align 4
  %385 = shufflevector <2 x float> %383, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %386 = shufflevector <2 x float> %384, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %387 = shufflevector <4 x float> %385, <4 x float> %386, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %388 = shufflevector <2 x float> %381, <2 x float> undef, <4 x i32> zeroinitializer
  %389 = fmul <4 x float> %388, %387
  %390 = shufflevector <4 x float> %389, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  %391 = shufflevector <4 x float> %389, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %392 = load <2 x float>, <2 x float>* %143, align 4
  %393 = load <2 x float>, <2 x float>* %144, align 4
  %394 = shufflevector <2 x float> %392, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %395 = shufflevector <2 x float> %393, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %396 = shufflevector <4 x float> %394, <4 x float> %395, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %397 = extractelement <2 x float> %381, i32 1
  %398 = shufflevector <2 x float> %381, <2 x float> undef, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %399 = fmul <4 x float> %398, %396
  %400 = insertelement <4 x float> undef, float %382, i32 0
  %401 = shufflevector <4 x float> %400, <4 x float> undef, <4 x i32> zeroinitializer
  %402 = fadd <4 x float> %401, %399
  %403 = shufflevector <4 x float> %402, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  %404 = shufflevector <4 x float> %402, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  store <2 x float> %390, <2 x float>* %140, align 4
  store <2 x float> %391, <2 x float>* %141, align 4
  store <2 x float> %403, <2 x float>* %145, align 4
  store <2 x float> %404, <2 x float>* %144, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %146) #18
  %405 = icmp eq %struct.SkRect* %354, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %146, i8 -1, i64 16, i1 false) #18
  br i1 %405, label %524, label %406

406:                                              ; preds = %372
  %407 = bitcast %struct.SkRect* %354 to <2 x float>*
  %408 = load <2 x float>, <2 x float>* %407, align 1
  %409 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %354, i64 0, i32 2
  %410 = bitcast float* %409 to <2 x float>*
  %411 = load <2 x float>, <2 x float>* %410, align 1
  %412 = shufflevector <2 x float> %408, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %413 = shufflevector <2 x float> %411, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %414 = shufflevector <4 x float> %412, <4 x float> %413, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  br i1 %147, label %415, label %431

415:                                              ; preds = %406
  %416 = fmul <4 x float> %414, <float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00>
  %417 = extractelement <4 x float> %416, i32 0
  %418 = call float @floorf(float %417) #18
  %419 = extractelement <4 x float> %416, i32 1
  %420 = call float @floorf(float %419) #18
  %421 = extractelement <4 x float> %416, i32 2
  %422 = call float @floorf(float %421) #18
  %423 = extractelement <4 x float> %416, i32 3
  %424 = call float @floorf(float %423) #18
  %425 = insertelement <4 x float> undef, float %418, i32 0
  %426 = insertelement <4 x float> %425, float %420, i32 1
  %427 = insertelement <4 x float> undef, float %422, i32 2
  %428 = insertelement <4 x float> %427, float %424, i32 3
  %429 = shufflevector <4 x float> %426, <4 x float> %428, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %430 = fmul <4 x float> %429, <float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00>
  br label %431

431:                                              ; preds = %415, %406
  %432 = phi <4 x float> [ %430, %415 ], [ %414, %406 ]
  %433 = fadd <4 x float> %432, <float 5.000000e-01, float 5.000000e-01, float -5.000000e-01, float -5.000000e-01>
  %434 = shufflevector <4 x float> %433, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %435 = fadd <4 x float> %433, %434
  %436 = fmul <4 x float> %435, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %437 = fmul <4 x float> %433, <float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00>
  %438 = fmul <4 x float> %436, <float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00>
  %439 = fcmp olt <4 x float> %438, %437
  %440 = sext <4 x i1> %439 to <4 x i32>
  %441 = bitcast <4 x i32> %440 to <2 x i64>
  %442 = extractelement <2 x i64> %441, i32 0
  %443 = extractelement <2 x i64> %441, i32 1
  %444 = bitcast i64 %442 to <2 x i32>
  %445 = shufflevector <2 x i32> %444, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %446 = bitcast i64 %443 to <2 x i32>
  %447 = shufflevector <2 x i32> %446, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %448 = shufflevector <4 x i32> %445, <4 x i32> %447, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %449 = bitcast <4 x float> %438 to <2 x i64>
  %450 = extractelement <2 x i64> %449, i32 0
  %451 = bitcast i64 %450 to <2 x i32>
  %452 = shufflevector <4 x float> %438, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %453 = bitcast <2 x float> %452 to <2 x i32>
  %454 = shufflevector <2 x i32> %451, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %455 = shufflevector <2 x i32> %453, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %456 = shufflevector <4 x i32> %454, <4 x i32> %455, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %457 = and <4 x i32> %448, %456
  %458 = bitcast <4 x i32> %457 to <2 x i64>
  %459 = extractelement <2 x i64> %458, i32 0
  %460 = extractelement <2 x i64> %458, i32 1
  %461 = bitcast i64 %459 to <2 x i32>
  %462 = shufflevector <2 x i32> %461, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %463 = bitcast i64 %460 to <2 x i32>
  %464 = shufflevector <2 x i32> %463, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %465 = shufflevector <4 x i32> %462, <4 x i32> %464, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %466 = bitcast <4 x i32> %448 to <2 x i64>
  %467 = xor <2 x i64> %466, <i64 -1, i64 -1>
  %468 = extractelement <2 x i64> %467, i32 0
  %469 = extractelement <2 x i64> %467, i32 1
  %470 = bitcast i64 %468 to <2 x i32>
  %471 = shufflevector <2 x i32> %470, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %472 = bitcast i64 %469 to <2 x i32>
  %473 = shufflevector <2 x i32> %472, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %474 = shufflevector <4 x i32> %471, <4 x i32> %473, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %475 = bitcast <4 x float> %437 to <2 x i64>
  %476 = extractelement <2 x i64> %475, i32 0
  %477 = bitcast i64 %476 to <2 x i32>
  %478 = shufflevector <4 x float> %437, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %479 = bitcast <2 x float> %478 to <2 x i32>
  %480 = shufflevector <2 x i32> %477, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %481 = shufflevector <2 x i32> %479, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %482 = shufflevector <4 x i32> %480, <4 x i32> %481, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %483 = and <4 x i32> %474, %482
  %484 = bitcast <4 x i32> %483 to <2 x i64>
  %485 = extractelement <2 x i64> %484, i32 0
  %486 = extractelement <2 x i64> %484, i32 1
  %487 = bitcast i64 %485 to <2 x i32>
  %488 = shufflevector <2 x i32> %487, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %489 = bitcast i64 %486 to <2 x i32>
  %490 = shufflevector <2 x i32> %489, <2 x i32> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %491 = shufflevector <4 x i32> %488, <4 x i32> %490, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %492 = or <4 x i32> %491, %465
  %493 = bitcast <4 x i32> %492 to <2 x i64>
  %494 = extractelement <2 x i64> %493, i32 0
  %495 = extractelement <2 x i64> %493, i32 1
  %496 = bitcast i64 %494 to <2 x float>
  %497 = bitcast i64 %495 to <2 x float>
  %498 = shufflevector <2 x float> %496, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %499 = shufflevector <2 x float> %497, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %500 = shufflevector <4 x float> %498, <4 x float> %499, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %501 = fmul <4 x float> %500, <float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00>
  %502 = bitcast <2 x float> %381 to <2 x i32>
  %503 = extractelement <2 x i32> %502, i32 0
  %504 = bitcast float %397 to i32
  %505 = zext i32 %504 to i64
  %506 = shl nuw i64 %505, 32
  %507 = zext i32 %503 to i64
  %508 = or i64 %506, %507
  %509 = bitcast i64 %508 to <2 x float>
  %510 = shufflevector <2 x float> %509, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %511 = shufflevector <2 x float> %509, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %512 = shufflevector <4 x float> %510, <4 x float> %511, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %513 = fmul <4 x float> %512, %501
  %514 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %382, i32 1
  %515 = shufflevector <2 x float> %514, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %516 = shufflevector <2 x float> %514, <2 x float> undef, <4 x i32> <i32 undef, i32 undef, i32 0, i32 1>
  %517 = shufflevector <4 x float> %515, <4 x float> %516, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %518 = fadd <4 x float> %517, %513
  %519 = fcmp olt float %397, 0.000000e+00
  %520 = shufflevector <4 x float> %518, <4 x float> undef, <4 x i32> <i32 0, i32 3, i32 2, i32 1>
  %521 = select i1 %519, <4 x float> %520, <4 x float> %518
  %522 = shufflevector <4 x float> %521, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  %523 = shufflevector <4 x float> %521, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  br label %524

524:                                              ; preds = %431, %372
  %525 = phi <2 x float> [ %522, %431 ], [ <float -1.000000e+05, float -1.000000e+05>, %372 ]
  %526 = phi <2 x float> [ %523, %431 ], [ <float 1.000000e+06, float 1.000000e+06>, %372 ]
  store <2 x float> %525, <2 x float>* %148, align 8
  store <2 x float> %526, <2 x float>* %149, align 8
  %527 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %0, i64 %167, i32 7
  %528 = call fastcc i32 @_ZN12_GLOBAL__N_19TextureOp10appendQuadEP8DrawQuadRK8SkRGBA4fIL11SkAlphaType2EERK6SkRect(%"class.(anonymous namespace)::TextureOp"* nonnull %25, %struct.DrawQuad* nonnull %13, %struct.SkRGBA4f* dereferenceable(16) %527, %struct.SkRect* nonnull dereferenceable(16) %29) #18
  %529 = sext i32 %206 to i64
  %530 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %25, i64 0, i32 5, i64 %529, i32 1
  %531 = load i32, i32* %530, align 8
  %532 = add nsw i32 %531, %528
  store i32 %532, i32* %530, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %146) #18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %137) #18
  call void @llvm.lifetime.end.p0i8(i64 108, i8* nonnull %95) #18
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %93) #18
  %533 = add nuw nsw i64 %167, 1
  %534 = icmp eq i64 %533, %150
  br i1 %534, label %156, label %162

535:                                              ; preds = %62, %156
  %536 = phi i32 [ -8388609, %62 ], [ %160, %156 ]
  %537 = phi i32 [ -8388609, %62 ], [ %159, %156 ]
  %538 = phi i32 [ 2139095039, %62 ], [ %158, %156 ]
  %539 = phi i32 [ 2139095039, %62 ], [ %157, %156 ]
  %540 = phi i16 [ %81, %62 ], [ %161, %156 ]
  %541 = phi i32 [ 0, %62 ], [ %251, %156 ]
  %542 = phi i8 [ 0, %62 ], [ %355, %156 ]
  %543 = phi i32 [ 0, %62 ], [ %316, %156 ]
  %544 = trunc i32 %543 to i16
  %545 = shl i16 %544, 4
  %546 = and i16 %545, 48
  %547 = and i16 %540, -308
  %548 = trunc i32 %541 to i16
  %549 = and i16 %548, 3
  %550 = and i8 %542, 1
  %551 = zext i8 %550 to i16
  %552 = shl nuw nsw i16 %551, 8
  %553 = or i16 %549, %547
  %554 = or i16 %553, %552
  %555 = or i16 %554, %546
  store i16 %555, i16* %76, align 2
  %556 = icmp eq i32 %543, 1
  %557 = getelementptr inbounds i8, i8* %24, i64 32
  %558 = bitcast i8* %557 to i32*
  store i32 %539, i32* %558, align 8
  %559 = getelementptr inbounds i8, i8* %24, i64 36
  %560 = bitcast i8* %559 to i32*
  store i32 %538, i32* %560, align 4
  %561 = getelementptr inbounds i8, i8* %24, i64 40
  %562 = bitcast i8* %561 to i32*
  store i32 %537, i32* %562, align 8
  %563 = getelementptr inbounds i8, i8* %24, i64 44
  %564 = bitcast i8* %563 to i32*
  store i32 %536, i32* %564, align 4
  %565 = getelementptr inbounds i8, i8* %24, i64 26
  %566 = bitcast i8* %565 to i16*
  %567 = zext i1 %556 to i16
  store i16 %567, i16* %566, align 2
  %568 = bitcast i8* %24 to %class.GrOp*
  ret %class.GrOp* %568
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11GrTextureOp16BatchSizeLimiter8createOpEPN20GrSurfaceDrawContext15TextureSetEntryEi8GrAAType(%"class.GrTextureOp::BatchSizeLimiter"*, %"struct.GrSurfaceDrawContext::TextureSetEntry"*, i32, i32) local_unnamed_addr #4 comdat align 2 {
  %5 = alloca %class.sk_sp.230, align 8
  %6 = alloca %"class.std::__1::function.272", align 8
  %7 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %0, i64 0, i32 10
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %1, i64 %9
  %11 = icmp sgt i32 %2, 0
  br i1 %11, label %12, label %69

12:                                               ; preds = %4
  %13 = zext i32 %2 to i64
  %14 = add nsw i64 %13, -1
  %15 = and i64 %13, 3
  %16 = icmp ult i64 %14, 3
  br i1 %16, label %50, label %17

17:                                               ; preds = %12
  %18 = sub nsw i64 %13, %15
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi i64 [ 0, %17 ], [ %47, %19 ]
  %21 = phi %class.GrSurfaceProxy* [ null, %17 ], [ %43, %19 ]
  %22 = phi i32 [ 0, %17 ], [ %46, %19 ]
  %23 = phi i64 [ %18, %17 ], [ %48, %19 ]
  %24 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %10, i64 %20, i32 0, i32 0, i32 0
  %25 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %24, align 8
  %26 = icmp ne %class.GrSurfaceProxy* %25, %21
  %27 = zext i1 %26 to i32
  %28 = add nuw nsw i32 %22, %27
  %29 = or i64 %20, 1
  %30 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %10, i64 %29, i32 0, i32 0, i32 0
  %31 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %30, align 8
  %32 = icmp ne %class.GrSurfaceProxy* %31, %25
  %33 = zext i1 %32 to i32
  %34 = add nuw nsw i32 %28, %33
  %35 = or i64 %20, 2
  %36 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %10, i64 %35, i32 0, i32 0, i32 0
  %37 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %36, align 8
  %38 = icmp ne %class.GrSurfaceProxy* %37, %31
  %39 = zext i1 %38 to i32
  %40 = add nuw nsw i32 %34, %39
  %41 = or i64 %20, 3
  %42 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %10, i64 %41, i32 0, i32 0, i32 0
  %43 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %42, align 8
  %44 = icmp ne %class.GrSurfaceProxy* %43, %37
  %45 = zext i1 %44 to i32
  %46 = add nuw nsw i32 %40, %45
  %47 = add nuw nsw i64 %20, 4
  %48 = add i64 %23, -4
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %19

50:                                               ; preds = %19, %12
  %51 = phi i32 [ undef, %12 ], [ %46, %19 ]
  %52 = phi i64 [ 0, %12 ], [ %47, %19 ]
  %53 = phi %class.GrSurfaceProxy* [ null, %12 ], [ %43, %19 ]
  %54 = phi i32 [ 0, %12 ], [ %46, %19 ]
  %55 = icmp eq i64 %15, 0
  br i1 %55, label %69, label %56

56:                                               ; preds = %50, %56
  %57 = phi i64 [ %66, %56 ], [ %52, %50 ]
  %58 = phi %class.GrSurfaceProxy* [ %62, %56 ], [ %53, %50 ]
  %59 = phi i32 [ %65, %56 ], [ %54, %50 ]
  %60 = phi i64 [ %67, %56 ], [ %15, %50 ]
  %61 = getelementptr inbounds %"struct.GrSurfaceDrawContext::TextureSetEntry", %"struct.GrSurfaceDrawContext::TextureSetEntry"* %10, i64 %57, i32 0, i32 0, i32 0
  %62 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %61, align 8
  %63 = icmp ne %class.GrSurfaceProxy* %62, %58
  %64 = zext i1 %63 to i32
  %65 = add nuw nsw i32 %59, %64
  %66 = add nuw nsw i64 %57, 1
  %67 = add i64 %60, -1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %56, !llvm.loop !22

69:                                               ; preds = %50, %56, %4
  %70 = phi i32 [ 0, %4 ], [ %51, %50 ], [ %65, %56 ]
  %71 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %0, i64 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %0, i64 0, i32 4
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %0, i64 0, i32 5
  %76 = load i8, i8* %75, align 8, !range !24
  %77 = icmp ne i8 %76, 0
  %78 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %0, i64 0, i32 6
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %0, i64 0, i32 7
  %81 = load %class.SkMatrix*, %class.SkMatrix** %80, align 8
  %82 = getelementptr inbounds %class.sk_sp.230, %class.sk_sp.230* %5, i64 0, i32 0
  %83 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %0, i64 0, i32 8, i32 0
  %84 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %83, align 8
  %85 = icmp eq %class.GrColorSpaceXform* %84, null
  br i1 %85, label %89, label %86

86:                                               ; preds = %69
  %87 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %84, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 1 monotonic
  br label %89

89:                                               ; preds = %69, %86
  store %class.GrColorSpaceXform* %84, %class.GrColorSpaceXform** %82, align 8
  %90 = call fastcc %class.GrOp* @_ZN12_GLOBAL__N_19TextureOp4MakeEP18GrRecordingContextPN20GrSurfaceDrawContext15TextureSetEntryEii12SkFilterMode12SkMipmapModeN11GrTextureOp8SaturateE8GrAATypeN8SkCanvas17SrcRectConstraintERK8SkMatrix5sk_spI17GrColorSpaceXformE(%"struct.GrSurfaceDrawContext::TextureSetEntry"* %10, i32 %2, i32 %70, i32 %72, i32 %74, i1 zeroext %77, i32 %3, i32 %79, %class.SkMatrix* dereferenceable(40) %81, %class.sk_sp.230* nonnull %5)
  %91 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %82, align 8
  %92 = icmp eq %class.GrColorSpaceXform* %91, null
  br i1 %92, label %103, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %91, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw add i32* %94, i32 -1 acq_rel
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %97, label %103

97:                                               ; preds = %93
  %98 = bitcast %class.GrColorSpaceXform* %91 to %class.SkRefCntBase*
  %99 = bitcast %class.GrColorSpaceXform* %91 to void (%class.SkRefCntBase*)***
  %100 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %99, align 8
  %101 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %100, i64 2
  %102 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %101, align 8
  tail call void %102(%class.SkRefCntBase* nonnull %98) #18
  br label %103

103:                                              ; preds = %89, %93, %97
  %104 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %0, i64 0, i32 0
  %105 = load %class.GrSurfaceDrawContext*, %class.GrSurfaceDrawContext** %104, align 8
  %106 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %0, i64 0, i32 1
  %107 = load %class.GrClip*, %class.GrClip** %106, align 8
  %108 = bitcast %"class.std::__1::function.272"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %108) #18
  %109 = getelementptr inbounds %"class.std::__1::function.272", %"class.std::__1::function.272"* %6, i64 0, i32 0, i32 1, i32 0
  store void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)* @_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j, void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)** %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::function.272", %"class.std::__1::function.272"* %6, i64 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %110, align 8
  call void @_ZN20GrSurfaceDrawContext9addDrawOpEPK6GrClipNSt3__110unique_ptrI4GrOpNS3_14default_deleteIS5_EEEERKNS3_8functionIFvPS5_jEEE(%class.GrSurfaceDrawContext* %105, %class.GrClip* %107, %class.GrOp* nonnull %90, %"class.std::__1::function.272"* nonnull dereferenceable(32) %6) #18
  %111 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %110, align 8
  %112 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %111, i64 0, i32 1
  %113 = load void (i8*)*, void (i8*)** %112, align 8
  %114 = icmp eq void (i8*)* %113, null
  br i1 %114, label %118, label %115

115:                                              ; preds = %103
  %116 = getelementptr inbounds %"class.std::__1::function.272", %"class.std::__1::function.272"* %6, i64 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  call void %113(i8* %117) #18
  br label %118

118:                                              ; preds = %115, %103
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108) #18
  %119 = getelementptr inbounds %"class.GrTextureOp::BatchSizeLimiter", %"class.GrTextureOp::BatchSizeLimiter"* %0, i64 0, i32 9
  %120 = load i32, i32* %119, align 8
  %121 = sub nsw i32 %120, %2
  store i32 %121, i32* %119, align 8
  %122 = load i32, i32* %7, align 4
  %123 = add nsw i32 %122, %2
  store i32 %123, i32* %7, align 4
  ret void
}

declare i64 @_ZNK14GrSurfaceProxy22backingStoreDimensionsEv(%class.GrSurfaceProxy*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.trunc.f32(float) #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp*, i32) unnamed_addr #3

declare void @_ZN11GrQuadUtils13ResolveAATypeE8GrAAType13GrQuadAAFlagsRK6GrQuadPS0_PS1_(i32, i32, %class.GrQuad* dereferenceable(52), i32*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_126safe_to_ignore_subset_rectE8GrAAType12SkFilterModeRK8DrawQuadRK6SkRect(i32, i32, %struct.DrawQuad* dereferenceable(108), %struct.SkRect* nocapture readonly dereferenceable(16)) unnamed_addr #4 {
  %5 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %2, i64 0, i32 1
  %6 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %2, i64 0, i32 1, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 3
  br i1 %8, label %9, label %13

9:                                                ; preds = %4
  %10 = tail call { <2 x float>, <2 x float> } @_ZNK6GrQuad15projectedBoundsEv(%class.GrQuad* %5) #18
  %11 = extractvalue { <2 x float>, <2 x float> } %10, 0
  %12 = extractvalue { <2 x float>, <2 x float> } %10, 1
  br label %58

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %5, i64 0, i32 0, i64 0
  %15 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %2, i64 0, i32 1, i32 0, i64 1
  %16 = load float, float* %15, align 4
  %17 = load float, float* %14, align 4
  %18 = fcmp olt float %16, %17
  %19 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %2, i64 0, i32 1, i32 0, i64 2
  %20 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %2, i64 0, i32 1, i32 0, i64 3
  %21 = load float, float* %20, align 4
  %22 = load float, float* %19, align 4
  %23 = fcmp olt float %21, %22
  %24 = select i1 %23, float %21, float %22
  %25 = select i1 %18, float %16, float %17
  %26 = fcmp olt float %24, %25
  %27 = select i1 %26, float %24, float %25
  %28 = insertelement <2 x float> undef, float %27, i32 0
  %29 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %2, i64 0, i32 1, i32 1, i64 0
  %30 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %2, i64 0, i32 1, i32 1, i64 1
  %31 = load float, float* %30, align 4
  %32 = load float, float* %29, align 4
  %33 = fcmp olt float %31, %32
  %34 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %2, i64 0, i32 1, i32 1, i64 2
  %35 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %2, i64 0, i32 1, i32 1, i64 3
  %36 = load float, float* %35, align 4
  %37 = load float, float* %34, align 4
  %38 = fcmp olt float %36, %37
  %39 = select i1 %38, float %36, float %37
  %40 = select i1 %33, float %31, float %32
  %41 = fcmp olt float %39, %40
  %42 = select i1 %41, float %39, float %40
  %43 = insertelement <2 x float> %28, float %42, i32 1
  %44 = fcmp olt float %17, %16
  %45 = fcmp olt float %22, %21
  %46 = select i1 %44, float %16, float %17
  %47 = select i1 %45, float %21, float %22
  %48 = fcmp olt float %46, %47
  %49 = select i1 %48, float %47, float %46
  %50 = insertelement <2 x float> undef, float %49, i32 0
  %51 = fcmp olt float %32, %31
  %52 = fcmp olt float %37, %36
  %53 = select i1 %51, float %31, float %32
  %54 = select i1 %52, float %36, float %37
  %55 = fcmp olt float %53, %54
  %56 = select i1 %55, float %54, float %53
  %57 = insertelement <2 x float> %50, float %56, i32 1
  br label %58

58:                                               ; preds = %9, %13
  %59 = phi <2 x float> [ %11, %9 ], [ %43, %13 ]
  %60 = phi <2 x float> [ %12, %9 ], [ %57, %13 ]
  %61 = or i32 %1, %0
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %97

63:                                               ; preds = %58
  %64 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %2, i64 0, i32 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = load i32, i32* %6, align 4
  %67 = or i32 %66, %65
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %97

69:                                               ; preds = %63
  %70 = extractelement <2 x float> %59, i32 0
  %71 = extractelement <2 x float> %60, i32 0
  %72 = fcmp olt float %70, %71
  br i1 %72, label %73, label %97

73:                                               ; preds = %69
  %74 = extractelement <2 x float> %59, i32 1
  %75 = extractelement <2 x float> %60, i32 1
  %76 = fcmp uge float %74, %75
  br i1 %76, label %97, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 0
  %79 = load float, float* %78, align 4
  %80 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 2
  %81 = load float, float* %80, align 4
  %82 = fcmp olt float %79, %81
  br i1 %82, label %83, label %97

83:                                               ; preds = %77
  %84 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 1
  %85 = load float, float* %84, align 4
  %86 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 3
  %87 = load float, float* %86, align 4
  %88 = fcmp uge float %85, %87
  %89 = fcmp ugt float %79, %70
  %90 = or i1 %89, %88
  br i1 %90, label %97, label %91

91:                                               ; preds = %83
  %92 = fcmp ole float %85, %74
  %93 = fcmp oge float %81, %71
  %94 = fcmp oge float %87, %75
  %95 = and i1 %93, %92
  %96 = and i1 %94, %95
  br i1 %96, label %129, label %97

97:                                               ; preds = %69, %73, %77, %83, %91, %63, %58
  %98 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 0
  %99 = load float, float* %98, align 4
  %100 = fadd float %99, 5.000000e-01
  %101 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 1
  %102 = load float, float* %101, align 4
  %103 = fadd float %102, 5.000000e-01
  %104 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 2
  %105 = load float, float* %104, align 4
  %106 = fadd float %105, -5.000000e-01
  %107 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 3
  %108 = load float, float* %107, align 4
  %109 = fadd float %108, -5.000000e-01
  %110 = extractelement <2 x float> %59, i32 0
  %111 = extractelement <2 x float> %60, i32 0
  %112 = fcmp olt float %110, %111
  br i1 %112, label %113, label %129

113:                                              ; preds = %97
  %114 = extractelement <2 x float> %59, i32 1
  %115 = extractelement <2 x float> %60, i32 1
  %116 = fcmp olt float %114, %115
  %117 = fcmp olt float %100, %106
  %118 = and i1 %116, %117
  br i1 %118, label %119, label %129

119:                                              ; preds = %113
  %120 = fcmp uge float %103, %109
  %121 = fcmp ugt float %100, %110
  %122 = or i1 %121, %120
  br i1 %122, label %129, label %123

123:                                              ; preds = %119
  %124 = fcmp ole float %103, %114
  %125 = fcmp oge float %106, %111
  %126 = fcmp oge float %109, %115
  %127 = and i1 %124, %125
  %128 = and i1 %126, %127
  ret i1 %128

129:                                              ; preds = %113, %97, %119, %91
  %130 = phi i1 [ true, %91 ], [ false, %119 ], [ false, %113 ], [ false, %97 ]
  ret i1 %130
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN12_GLOBAL__N_19TextureOp10appendQuadEP8DrawQuadRK8SkRGBA4fIL11SkAlphaType2EERK6SkRect(%"class.(anonymous namespace)::TextureOp"* nocapture, %struct.DrawQuad*, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), %struct.SkRect* nocapture readonly dereferenceable(16)) unnamed_addr #4 align 2 {
  %5 = alloca %struct.DrawQuad, align 4
  %6 = alloca %"struct.(anonymous namespace)::TextureOp::ColorSubsetAndAA", align 4
  %7 = alloca %"struct.(anonymous namespace)::TextureOp::ColorSubsetAndAA", align 4
  %8 = bitcast %struct.DrawQuad* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 108, i8* nonnull %8) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* align 4 bitcast (%struct.DrawQuad* @__const.TextureOp.quad to i8*), i64 108, i1 false)
  %9 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %5, i64 0, i32 0, i32 2, i64 0
  %10 = bitcast float* %9 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10, align 4
  %11 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %5, i64 0, i32 0, i32 3
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %5, i64 0, i32 1, i32 2, i64 0
  %13 = bitcast float* %12 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %13, align 4
  %14 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %5, i64 0, i32 1, i32 3
  store i32 0, i32* %14, align 4
  %15 = call i32 @_ZN11GrQuadUtils8ClipToW0EP8DrawQuadS1_(%struct.DrawQuad* %1, %struct.DrawQuad* nonnull %5) #18
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %1, i64 0, i32 2
  br i1 %16, label %22, label %18

18:                                               ; preds = %4
  %19 = load i32, i32* %17, align 4
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 15
  br label %23

22:                                               ; preds = %4
  store i32 0, i32* %17, align 4
  br label %23

23:                                               ; preds = %18, %22
  %24 = phi i8 [ 0, %22 ], [ %21, %18 ]
  %25 = phi i32 [ 1, %22 ], [ %15, %18 ]
  %26 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %1, i64 0, i32 0
  %28 = bitcast %"struct.(anonymous namespace)::TextureOp::ColorSubsetAndAA"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %28) #18
  %29 = bitcast %struct.SkRGBA4f* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* align 4 %29, i64 16, i1 false) #18
  %30 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::ColorSubsetAndAA", %"struct.(anonymous namespace)::TextureOp::ColorSubsetAndAA"* %6, i64 0, i32 1
  %31 = bitcast %struct.SkRect* %30 to i8*
  %32 = bitcast %struct.SkRect* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 16, i1 false) #18
  %33 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::ColorSubsetAndAA", %"struct.(anonymous namespace)::TextureOp::ColorSubsetAndAA"* %6, i64 0, i32 2
  store i8 %24, i8* %33, align 4
  %34 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %1, i64 0, i32 1
  call fastcc void @_ZN12GrQuadBufferIN12_GLOBAL__N_19TextureOp16ColorSubsetAndAAEE6appendERK6GrQuadOS2_PS5_(%class.GrQuadBuffer* %26, %class.GrQuad* dereferenceable(52) %27, %"struct.(anonymous namespace)::TextureOp::ColorSubsetAndAA"* nonnull dereferenceable(36) %6, %class.GrQuad* %34)
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %28) #18
  %35 = icmp sgt i32 %25, 1
  br i1 %35, label %36, label %50

36:                                               ; preds = %23
  %37 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %5, i64 0, i32 0
  %38 = bitcast %"struct.(anonymous namespace)::TextureOp::ColorSubsetAndAA"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %38) #18
  %39 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %5, i64 0, i32 2
  %40 = load i32, i32* %39, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %38, i8* align 4 %29, i64 16, i1 false) #18
  %41 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::ColorSubsetAndAA", %"struct.(anonymous namespace)::TextureOp::ColorSubsetAndAA"* %7, i64 0, i32 1
  %42 = bitcast %struct.SkRect* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* align 4 %32, i64 16, i1 false) #18
  %43 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::ColorSubsetAndAA", %"struct.(anonymous namespace)::TextureOp::ColorSubsetAndAA"* %7, i64 0, i32 2
  %44 = trunc i32 %40 to i8
  %45 = and i8 %44, 15
  store i8 %45, i8* %43, align 4
  %46 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %5, i64 0, i32 1
  call fastcc void @_ZN12GrQuadBufferIN12_GLOBAL__N_19TextureOp16ColorSubsetAndAAEE6appendERK6GrQuadOS2_PS5_(%class.GrQuadBuffer* %26, %class.GrQuad* nonnull dereferenceable(52) %37, %"struct.(anonymous namespace)::TextureOp::ColorSubsetAndAA"* nonnull dereferenceable(36) %7, %class.GrQuad* %46)
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %38) #18
  %47 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 4, i32 2
  %48 = load i16, i16* %47, align 4
  %49 = add i16 %48, 1
  store i16 %49, i16* %47, align 4
  br label %50

50:                                               ; preds = %36, %23
  call void @llvm.lifetime.end.p0i8(i64 108, i8* nonnull %8) #18
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_19TextureOpD2Ev(%"class.(anonymous namespace)::TextureOp"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_19TextureOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 4, i32 1
  %4 = load i16, i16* %3, align 2
  %5 = icmp ugt i16 %4, 1
  br i1 %5, label %10, label %6

6:                                                ; preds = %27, %1
  %7 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 5, i64 0, i32 0, i32 0
  %8 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %7, align 8
  %9 = icmp eq %class.GrSurfaceProxy* %8, null
  br i1 %9, label %44, label %32

10:                                               ; preds = %1, %27
  %11 = phi i64 [ %28, %27 ], [ 1, %1 ]
  %12 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 5, i64 %11, i32 0, i32 0
  %13 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %12, align 8
  %14 = icmp eq %class.GrSurfaceProxy* %13, null
  br i1 %14, label %27, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %13, i64 0, i32 1
  %17 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %27

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %16, i64 -2
  %22 = bitcast %class.SkNVRefCnt* %21 to %class.GrSurfaceProxy*
  %23 = bitcast %class.SkNVRefCnt* %21 to void (%class.GrSurfaceProxy*)***
  %24 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %24, i64 1
  %26 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %25, align 8
  tail call void %26(%class.GrSurfaceProxy* nonnull %22) #18
  br label %27

27:                                               ; preds = %10, %15, %20
  %28 = add nuw nsw i64 %11, 1
  %29 = load i16, i16* %3, align 2
  %30 = zext i16 %29 to i64
  %31 = icmp ult i64 %28, %30
  br i1 %31, label %10, label %6

32:                                               ; preds = %6
  %33 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %8, i64 0, i32 1
  %34 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %44

37:                                               ; preds = %32
  %38 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %33, i64 -2
  %39 = bitcast %class.SkNVRefCnt* %38 to %class.GrSurfaceProxy*
  %40 = bitcast %class.SkNVRefCnt* %38 to void (%class.GrSurfaceProxy*)***
  %41 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %41, i64 1
  %43 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %42, align 8
  tail call void %43(%class.GrSurfaceProxy* nonnull %39) #18
  br label %44

44:                                               ; preds = %6, %32, %37
  %45 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 2, i32 0
  %46 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %45, align 8
  %47 = icmp eq %class.GrColorSpaceXform* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %46, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = bitcast %class.GrColorSpaceXform* %46 to %class.SkRefCntBase*
  %54 = bitcast %class.GrColorSpaceXform* %46 to void (%class.SkRefCntBase*)***
  %55 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, i64 2
  %57 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, align 8
  tail call void %57(%class.SkRefCntBase* nonnull %53) #18
  br label %58

58:                                               ; preds = %44, %48, %52
  %59 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 1, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  tail call void @_Z7sk_freePv(i8* %60) #18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %61 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %62 = load %class.GrOp*, %class.GrOp** %61, align 8
  store %class.GrOp* null, %class.GrOp** %61, align 8
  %63 = icmp eq %class.GrOp* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %58
  %65 = bitcast %class.GrOp* %62 to void (%class.GrOp*)***
  %66 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %65, align 8
  %67 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %66, i64 1
  %68 = load void (%class.GrOp*)*, void (%class.GrOp*)** %67, align 8
  tail call void %68(%class.GrOp* nonnull %62) #18
  br label %69

69:                                               ; preds = %58, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_19TextureOpD0Ev(%"class.(anonymous namespace)::TextureOp"*) unnamed_addr #4 align 2 {
  tail call void @_ZN12_GLOBAL__N_19TextureOpD2Ev(%"class.(anonymous namespace)::TextureOp"* %0) #18
  %2 = bitcast %"class.(anonymous namespace)::TextureOp"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_19TextureOp4nameEv(%"class.(anonymous namespace)::TextureOp"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_19TextureOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%"class.(anonymous namespace)::TextureOp"* nocapture readonly, %"class.std::__1::function.303"* dereferenceable(32)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 4, i32 3
  %4 = load i16, i16* %3, align 2
  %5 = and i16 %4, 12
  %6 = icmp ne i16 %5, 0
  %7 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 4, i32 1
  %8 = load i16, i16* %7, align 2
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::function.303", %"class.std::__1::function.303"* %1, i64 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.std::__1::function.303", %"class.std::__1::function.303"* %1, i64 0, i32 0, i32 0
  br label %17

13:                                               ; preds = %17, %2
  %14 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 3
  %15 = load %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Desc"** %14, align 8
  %16 = icmp eq %"struct.(anonymous namespace)::TextureOp::Desc"* %15, null
  br i1 %16, label %33, label %26

17:                                               ; preds = %10, %17
  %18 = phi i64 [ 0, %10 ], [ %22, %17 ]
  %19 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 5, i64 %18, i32 0, i32 0
  %20 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %19, align 8
  %21 = load void (%"union.std::__1::__function::__policy_storage"*, %class.GrSurfaceProxy*, i1)*, void (%"union.std::__1::__function::__policy_storage"*, %class.GrSurfaceProxy*, i1)** %11, align 8
  tail call void %21(%"union.std::__1::__function::__policy_storage"* %12, %class.GrSurfaceProxy* %20, i1 zeroext %6) #18
  %22 = add nuw nsw i64 %18, 1
  %23 = load i16, i16* %7, align 2
  %24 = zext i16 %23 to i64
  %25 = icmp ult i64 %22, %24
  br i1 %25, label %17, label %13

26:                                               ; preds = %13
  %27 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %15, i64 0, i32 5
  %28 = load %class.GrProgramInfo*, %class.GrProgramInfo** %27, align 8
  %29 = icmp eq %class.GrProgramInfo* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %28, i64 0, i32 5
  %32 = load %class.GrPipeline*, %class.GrPipeline** %31, align 8
  tail call void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline* %32, %"class.std::__1::function.303"* dereferenceable(32) %1) #18
  br label %33

33:                                               ; preds = %26, %13, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_19TextureOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps(%"class.(anonymous namespace)::TextureOp"* nocapture, %class.GrOp* nocapture, %class.SkArenaAlloc* nocapture readnone, %class.GrCaps* nocapture readonly dereferenceable(232)) unnamed_addr #4 align 2 {
  %5 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %6 = load atomic i64, i64* @_ZZN12_GLOBAL__N_19TextureOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCapsE28trace_event_unique_atomic966.0.0 monotonic, align 8
  %7 = inttoptr i64 %6 to i8*
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #18
  %11 = bitcast %class.SkEventTracer* %10 to i8* (%class.SkEventTracer*, i8*)***
  %12 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %11, align 8
  %13 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %12, i64 2
  %14 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %13, align 8
  %15 = tail call i8* %14(%class.SkEventTracer* %10, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i64 0, i64 0)) #18
  %16 = ptrtoint i8* %15 to i64
  store atomic i64 %16, i64* @_ZZN12_GLOBAL__N_19TextureOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCapsE28trace_event_unique_atomic966.0.0 monotonic, align 8
  br label %17

17:                                               ; preds = %4, %9
  %18 = phi i8* [ %7, %4 ], [ %15, %9 ]
  %19 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #18
  %20 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 0
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 1
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 2
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1
  %25 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  %26 = load i8, i8* %18, align 1
  %27 = and i8 %26, 5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %38, label %29

29:                                               ; preds = %17
  %30 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #18
  %31 = bitcast %class.SkEventTracer* %30 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %32 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %31, align 8
  %33 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %32, i64 4
  %34 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %33, align 8
  %35 = tail call i64 %34(%class.SkEventTracer* %30, i8 signext 88, i8* %18, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @__PRETTY_FUNCTION__._ZN12_GLOBAL__N_19TextureOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #18
  %36 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %36, i64 0, i32 0
  store i8* %18, i8** %37, align 8
  store i8* getelementptr inbounds ([122 x i8], [122 x i8]* @__PRETTY_FUNCTION__._ZN12_GLOBAL__N_19TextureOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps, i64 0, i64 0), i8** %22, align 8
  store i64 %35, i64* %23, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %36, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  br label %38

38:                                               ; preds = %17, %29
  %39 = bitcast %class.GrOp* %1 to %"class.(anonymous namespace)::TextureOp"*
  %40 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 3
  %41 = load %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Desc"** %40, align 8
  %42 = icmp eq %"struct.(anonymous namespace)::TextureOp::Desc"* %41, null
  br i1 %42, label %43, label %357

43:                                               ; preds = %38
  %44 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1, i32 6, i32 2
  %45 = bitcast float* %44 to %"struct.(anonymous namespace)::TextureOp::Desc"**
  %46 = load %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Desc"** %45, align 8
  %47 = icmp eq %"struct.(anonymous namespace)::TextureOp::Desc"* %46, null
  br i1 %47, label %48, label %357

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 4, i32 3
  %50 = load i16, i16* %49, align 2
  %51 = and i16 %50, 256
  %52 = icmp ne i16 %51, 0
  %53 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 2
  %54 = bitcast %class.GrOp* %53 to %"struct.(anonymous namespace)::TextureOp::Metadata"*
  %55 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Metadata", %"struct.(anonymous namespace)::TextureOp::Metadata"* %54, i64 0, i32 3
  %56 = load i16, i16* %55, align 2
  %57 = and i16 %56, 256
  %58 = icmp ne i16 %57, 0
  %59 = xor i1 %52, %58
  br i1 %59, label %357, label %60

60:                                               ; preds = %48
  %61 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 2, i32 0
  %62 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %61, align 8
  %63 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1, i32 6
  %64 = bitcast %struct.SkRect* %63 to %class.GrColorSpaceXform**
  %65 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %64, align 8
  %66 = call zeroext i1 @_ZN17GrColorSpaceXform6EqualsEPKS_S1_(%class.GrColorSpaceXform* %62, %class.GrColorSpaceXform* %65) #18
  br i1 %66, label %67, label %357

67:                                               ; preds = %60
  %68 = load i16, i16* %49, align 2
  %69 = lshr i16 %68, 4
  %70 = and i16 %69, 3
  %71 = load i16, i16* %55, align 2
  %72 = lshr i16 %71, 4
  %73 = and i16 %72, 3
  %74 = icmp eq i16 %70, %73
  br i1 %74, label %83, label %75

75:                                               ; preds = %67
  %76 = icmp eq i16 %70, 0
  %77 = icmp eq i16 %73, 1
  %78 = and i1 %76, %77
  br i1 %78, label %83, label %79

79:                                               ; preds = %75
  %80 = icmp eq i16 %70, 1
  %81 = icmp eq i16 %73, 0
  %82 = and i1 %80, %81
  br i1 %82, label %83, label %357

83:                                               ; preds = %75, %79, %67
  %84 = phi i1 [ false, %67 ], [ true, %79 ], [ true, %75 ]
  %85 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 4, i32 2
  %86 = load i16, i16* %85, align 4
  %87 = zext i16 %86 to i32
  %88 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %89 = load %class.GrOp*, %class.GrOp** %88, align 8
  %90 = icmp eq %class.GrOp* %89, null
  br i1 %90, label %91, label %96

91:                                               ; preds = %96, %83
  %92 = phi i32 [ %87, %83 ], [ %103, %96 ]
  %93 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %94 = load %class.GrOp*, %class.GrOp** %93, align 8
  %95 = icmp eq %class.GrOp* %94, null
  br i1 %95, label %118, label %107

96:                                               ; preds = %83, %96
  %97 = phi %class.GrOp* [ %105, %96 ], [ %89, %83 ]
  %98 = phi i32 [ %103, %96 ], [ %87, %83 ]
  %99 = bitcast %class.GrOp* %97 to %"class.(anonymous namespace)::TextureOp"*
  %100 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %99, i64 0, i32 4, i32 2
  %101 = load i16, i16* %100, align 4
  %102 = zext i16 %101 to i32
  %103 = add nuw nsw i32 %98, %102
  %104 = getelementptr inbounds %class.GrOp, %class.GrOp* %97, i64 0, i32 2
  %105 = load %class.GrOp*, %class.GrOp** %104, align 8
  %106 = icmp eq %class.GrOp* %105, null
  br i1 %106, label %91, label %96

107:                                              ; preds = %91, %107
  %108 = phi %class.GrOp* [ %116, %107 ], [ %94, %91 ]
  %109 = phi i32 [ %114, %107 ], [ %92, %91 ]
  %110 = bitcast %class.GrOp* %108 to %"class.(anonymous namespace)::TextureOp"*
  %111 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %110, i64 0, i32 4, i32 2
  %112 = load i16, i16* %111, align 4
  %113 = zext i16 %112 to i32
  %114 = add nuw nsw i32 %109, %113
  %115 = getelementptr inbounds %class.GrOp, %class.GrOp* %108, i64 0, i32 1, i32 0, i32 0, i32 0
  %116 = load %class.GrOp*, %class.GrOp** %115, align 8
  %117 = icmp eq %class.GrOp* %116, null
  br i1 %117, label %118, label %107

118:                                              ; preds = %107, %91
  %119 = phi i32 [ %92, %91 ], [ %114, %107 ]
  %120 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %39, i64 0, i32 4, i32 2
  %121 = load i16, i16* %120, align 4
  %122 = zext i16 %121 to i32
  %123 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 0, i32 2
  %124 = load %class.GrOp*, %class.GrOp** %123, align 8
  %125 = icmp eq %class.GrOp* %124, null
  br i1 %125, label %126, label %131

126:                                              ; preds = %131, %118
  %127 = phi i32 [ %122, %118 ], [ %138, %131 ]
  %128 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %129 = load %class.GrOp*, %class.GrOp** %128, align 8
  %130 = icmp eq %class.GrOp* %129, null
  br i1 %130, label %153, label %142

131:                                              ; preds = %118, %131
  %132 = phi %class.GrOp* [ %140, %131 ], [ %124, %118 ]
  %133 = phi i32 [ %138, %131 ], [ %122, %118 ]
  %134 = bitcast %class.GrOp* %132 to %"class.(anonymous namespace)::TextureOp"*
  %135 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %134, i64 0, i32 4, i32 2
  %136 = load i16, i16* %135, align 4
  %137 = zext i16 %136 to i32
  %138 = add nuw nsw i32 %133, %137
  %139 = getelementptr inbounds %class.GrOp, %class.GrOp* %132, i64 0, i32 2
  %140 = load %class.GrOp*, %class.GrOp** %139, align 8
  %141 = icmp eq %class.GrOp* %140, null
  br i1 %141, label %126, label %131

142:                                              ; preds = %126, %142
  %143 = phi %class.GrOp* [ %151, %142 ], [ %129, %126 ]
  %144 = phi i32 [ %149, %142 ], [ %127, %126 ]
  %145 = bitcast %class.GrOp* %143 to %"class.(anonymous namespace)::TextureOp"*
  %146 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %145, i64 0, i32 4, i32 2
  %147 = load i16, i16* %146, align 4
  %148 = zext i16 %147 to i32
  %149 = add nuw nsw i32 %144, %148
  %150 = getelementptr inbounds %class.GrOp, %class.GrOp* %143, i64 0, i32 1, i32 0, i32 0, i32 0
  %151 = load %class.GrOp*, %class.GrOp** %150, align 8
  %152 = icmp eq %class.GrOp* %151, null
  br i1 %152, label %153, label %142

153:                                              ; preds = %142, %126
  %154 = phi i32 [ %127, %126 ], [ %149, %142 ]
  %155 = add nsw i32 %154, %119
  %156 = icmp eq i16 %70, 1
  %157 = or i1 %156, %84
  br i1 %157, label %158, label %160

158:                                              ; preds = %153
  %159 = call i32 @_ZN18GrResourceProvider13MaxNumAAQuadsEv() #18
  br label %162

160:                                              ; preds = %153
  %161 = call i32 @_ZN18GrResourceProvider16MaxNumNonAAQuadsEv() #18
  br label %162

162:                                              ; preds = %158, %160
  %163 = phi i32 [ %159, %158 ], [ %161, %160 ]
  %164 = icmp slt i32 %163, %155
  br i1 %164, label %357, label %165

165:                                              ; preds = %162
  %166 = load i16, i16* %49, align 2
  %167 = and i16 %166, 512
  %168 = icmp ne i16 %167, 0
  %169 = load i16, i16* %55, align 2
  %170 = and i16 %169, 512
  %171 = icmp ne i16 %170, 0
  %172 = xor i1 %168, %171
  br i1 %172, label %357, label %173

173:                                              ; preds = %165
  %174 = xor i16 %169, %166
  %175 = and i16 %174, 15
  %176 = icmp eq i16 %175, 0
  br i1 %176, label %177, label %357

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 4, i32 0, i32 0
  %179 = load i16, i16* %178, align 2
  %180 = bitcast %class.GrOp* %53 to i16*
  %181 = load i16, i16* %180, align 2
  %182 = icmp eq i16 %179, %181
  br i1 %182, label %183, label %357

183:                                              ; preds = %177
  %184 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 5, i64 0, i32 0, i32 0
  %185 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %184, align 8
  %186 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 2, i32 1
  %187 = bitcast %"class.std::__1::unique_ptr"* %186 to %class.GrSurfaceProxy**
  %188 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %187, align 8
  %189 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 4, i32 1
  %190 = load i16, i16* %189, align 2
  %191 = icmp ugt i16 %190, 1
  br i1 %191, label %198, label %192

192:                                              ; preds = %183
  %193 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %39, i64 0, i32 4, i32 1
  %194 = load i16, i16* %193, align 2
  %195 = icmp ult i16 %194, 2
  %196 = icmp eq %class.GrSurfaceProxy* %185, %188
  %197 = and i1 %196, %195
  br i1 %197, label %213, label %198

198:                                              ; preds = %192, %183
  %199 = call zeroext i1 @_ZN14GrTextureProxy34ProxiesAreCompatibleAsDynamicStateEPK14GrSurfaceProxyS2_(%class.GrSurfaceProxy* %185, %class.GrSurfaceProxy* %188) #18
  br i1 %199, label %200, label %212

200:                                              ; preds = %198
  %201 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %3, i64 0, i32 3
  %202 = bitcast i48* %201 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = and i64 %203, 35184372088832
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %212, label %206

206:                                              ; preds = %200
  %207 = load i16, i16* %49, align 2
  %208 = load i16, i16* %55, align 2
  %209 = xor i16 %208, %207
  %210 = and i16 %209, 48
  %211 = icmp eq i16 %210, 0
  br i1 %211, label %357, label %212

212:                                              ; preds = %200, %206, %198
  br label %357

213:                                              ; preds = %192
  %214 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %39, i64 0, i32 4, i32 3
  %215 = and i16 %169, 256
  %216 = or i16 %215, %166
  store i16 %216, i16* %49, align 2
  %217 = lshr i16 %166, 6
  %218 = and i16 %217, 3
  %219 = load i16, i16* %214, align 2
  %220 = lshr i16 %219, 6
  %221 = and i16 %220, 3
  %222 = icmp ult i16 %218, %221
  %223 = select i1 %222, i16 %221, i16 %218
  %224 = shl nuw nsw i16 %223, 6
  %225 = and i16 %224, 192
  %226 = and i16 %216, -193
  %227 = or i16 %225, %226
  store i16 %227, i16* %49, align 2
  %228 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 1
  %229 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1
  %230 = bitcast %class.GrOp* %229 to %class.GrQuadBuffer*
  %231 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %230, i64 0, i32 0, i32 2
  %232 = load i32, i32* %231, align 4
  %233 = bitcast %class.GrOp* %229 to i8**
  %234 = load i8*, i8** %233, align 8
  %235 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 1, i32 0, i32 2
  %236 = load i32, i32* %235, align 4
  %237 = icmp eq i32 %232, 0
  br i1 %237, label %265, label %238

238:                                              ; preds = %213
  %239 = add i32 %236, %232
  %240 = icmp sgt i32 %239, -1
  br i1 %240, label %242, label %241

241:                                              ; preds = %238
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0)) #20
  unreachable

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 1, i32 0, i32 1
  %244 = load i32, i32* %243, align 8
  %245 = icmp slt i32 %244, %239
  br i1 %245, label %246, label %257

246:                                              ; preds = %242
  %247 = add nuw i32 %239, 4
  %248 = lshr i32 %247, 2
  %249 = add nuw i32 %248, %247
  %250 = icmp sgt i32 %249, -1
  br i1 %250, label %252, label %251

251:                                              ; preds = %246
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0)) #20
  unreachable

252:                                              ; preds = %246
  store i32 %249, i32* %243, align 8
  %253 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %228, i64 0, i32 0, i32 0
  %254 = load i8*, i8** %253, align 8
  %255 = sext i32 %249 to i64
  %256 = call i8* @_Z16sk_realloc_throwPvm(i8* %254, i64 %255) #18
  store i8* %256, i8** %253, align 8
  br label %257

257:                                              ; preds = %252, %242
  store i32 %239, i32* %235, align 4
  %258 = icmp eq i8* %234, null
  br i1 %258, label %265, label %259

259:                                              ; preds = %257
  %260 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %228, i64 0, i32 0, i32 0
  %261 = load i8*, i8** %260, align 8
  %262 = sext i32 %236 to i64
  %263 = getelementptr inbounds i8, i8* %261, i64 %262
  %264 = sext i32 %232 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %263, i8* nonnull align 1 %234, i64 %264, i1 false) #18
  br label %265

265:                                              ; preds = %259, %257, %213
  %266 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1, i32 2
  %267 = bitcast %class.GrOp** %266 to i32*
  %268 = load i32, i32* %267, align 8
  %269 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 1, i32 1
  %270 = load i32, i32* %269, align 8
  %271 = add nsw i32 %270, %268
  store i32 %271, i32* %269, align 8
  %272 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %230, i64 0, i32 2
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 1, i32 2
  %275 = load i32, i32* %274, align 4
  %276 = icmp sgt i32 %273, %275
  br i1 %276, label %277, label %278

277:                                              ; preds = %265
  store i32 %273, i32* %274, align 4
  br label %278

278:                                              ; preds = %277, %265
  %279 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1, i32 3
  %280 = bitcast i16* %279 to i32*
  %281 = load i32, i32* %280, align 8
  %282 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 1, i32 3
  %283 = load i32, i32* %282, align 8
  %284 = icmp sgt i32 %281, %283
  br i1 %284, label %285, label %286

285:                                              ; preds = %278
  store i32 %281, i32* %282, align 8
  br label %286

286:                                              ; preds = %278, %285
  %287 = load i32, i32* %267, align 8
  %288 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 5, i64 0, i32 1
  %289 = load i32, i32* %288, align 8
  %290 = add nsw i32 %289, %287
  store i32 %290, i32* %288, align 8
  %291 = load i32, i32* %267, align 8
  %292 = load i16, i16* %85, align 4
  %293 = trunc i32 %291 to i16
  %294 = add i16 %292, %293
  store i16 %294, i16* %85, align 4
  br i1 %84, label %295, label %357

295:                                              ; preds = %286
  %296 = load i16, i16* %49, align 2
  %297 = and i16 %296, -49
  %298 = or i16 %297, 16
  store i16 %298, i16* %49, align 2
  %299 = load %class.GrOp*, %class.GrOp** %88, align 8
  %300 = icmp eq %class.GrOp* %299, null
  br i1 %300, label %301, label %304

301:                                              ; preds = %304, %295
  %302 = load %class.GrOp*, %class.GrOp** %93, align 8
  %303 = icmp eq %class.GrOp* %302, null
  br i1 %303, label %326, label %315

304:                                              ; preds = %295, %304
  %305 = phi %class.GrOp* [ %313, %304 ], [ %299, %295 ]
  %306 = getelementptr inbounds %class.GrOp, %class.GrOp* %305, i64 2
  %307 = bitcast %class.GrOp* %306 to %"struct.(anonymous namespace)::TextureOp::Metadata"*
  %308 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Metadata", %"struct.(anonymous namespace)::TextureOp::Metadata"* %307, i64 0, i32 3
  %309 = load i16, i16* %308, align 2
  %310 = and i16 %309, -49
  %311 = or i16 %310, 16
  store i16 %311, i16* %308, align 2
  %312 = getelementptr inbounds %class.GrOp, %class.GrOp* %305, i64 0, i32 2
  %313 = load %class.GrOp*, %class.GrOp** %312, align 8
  %314 = icmp eq %class.GrOp* %313, null
  br i1 %314, label %301, label %304

315:                                              ; preds = %301, %315
  %316 = phi %class.GrOp* [ %324, %315 ], [ %302, %301 ]
  %317 = getelementptr inbounds %class.GrOp, %class.GrOp* %316, i64 2
  %318 = bitcast %class.GrOp* %317 to %"struct.(anonymous namespace)::TextureOp::Metadata"*
  %319 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Metadata", %"struct.(anonymous namespace)::TextureOp::Metadata"* %318, i64 0, i32 3
  %320 = load i16, i16* %319, align 2
  %321 = and i16 %320, -49
  %322 = or i16 %321, 16
  store i16 %322, i16* %319, align 2
  %323 = getelementptr inbounds %class.GrOp, %class.GrOp* %316, i64 0, i32 1, i32 0, i32 0, i32 0
  %324 = load %class.GrOp*, %class.GrOp** %323, align 8
  %325 = icmp eq %class.GrOp* %324, null
  br i1 %325, label %326, label %315

326:                                              ; preds = %315, %301
  %327 = load i16, i16* %214, align 2
  %328 = and i16 %327, -49
  %329 = or i16 %328, 16
  store i16 %329, i16* %214, align 2
  %330 = load %class.GrOp*, %class.GrOp** %123, align 8
  %331 = icmp eq %class.GrOp* %330, null
  br i1 %331, label %332, label %335

332:                                              ; preds = %335, %326
  %333 = load %class.GrOp*, %class.GrOp** %128, align 8
  %334 = icmp eq %class.GrOp* %333, null
  br i1 %334, label %357, label %346

335:                                              ; preds = %326, %335
  %336 = phi %class.GrOp* [ %344, %335 ], [ %330, %326 ]
  %337 = getelementptr inbounds %class.GrOp, %class.GrOp* %336, i64 2
  %338 = bitcast %class.GrOp* %337 to %"struct.(anonymous namespace)::TextureOp::Metadata"*
  %339 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Metadata", %"struct.(anonymous namespace)::TextureOp::Metadata"* %338, i64 0, i32 3
  %340 = load i16, i16* %339, align 2
  %341 = and i16 %340, -49
  %342 = or i16 %341, 16
  store i16 %342, i16* %339, align 2
  %343 = getelementptr inbounds %class.GrOp, %class.GrOp* %336, i64 0, i32 2
  %344 = load %class.GrOp*, %class.GrOp** %343, align 8
  %345 = icmp eq %class.GrOp* %344, null
  br i1 %345, label %332, label %335

346:                                              ; preds = %332, %346
  %347 = phi %class.GrOp* [ %355, %346 ], [ %333, %332 ]
  %348 = getelementptr inbounds %class.GrOp, %class.GrOp* %347, i64 2
  %349 = bitcast %class.GrOp* %348 to %"struct.(anonymous namespace)::TextureOp::Metadata"*
  %350 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Metadata", %"struct.(anonymous namespace)::TextureOp::Metadata"* %349, i64 0, i32 3
  %351 = load i16, i16* %350, align 2
  %352 = and i16 %351, -49
  %353 = or i16 %352, 16
  store i16 %353, i16* %350, align 2
  %354 = getelementptr inbounds %class.GrOp, %class.GrOp* %347, i64 0, i32 1, i32 0, i32 0, i32 0
  %355 = load %class.GrOp*, %class.GrOp** %354, align 8
  %356 = icmp eq %class.GrOp* %355, null
  br i1 %356, label %357, label %346

357:                                              ; preds = %346, %177, %332, %79, %162, %165, %173, %286, %206, %212, %60, %48, %38, %43
  %358 = phi i32 [ 2, %43 ], [ 2, %38 ], [ 2, %48 ], [ 2, %60 ], [ 2, %79 ], [ 2, %162 ], [ 2, %165 ], [ 2, %173 ], [ 2, %177 ], [ 2, %212 ], [ 1, %206 ], [ 0, %286 ], [ 0, %332 ], [ 0, %346 ]
  %359 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  %360 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %359, null
  br i1 %360, label %374, label %361

361:                                              ; preds = %357
  %362 = load i8*, i8** %21, align 8
  %363 = load i8, i8* %362, align 1
  %364 = icmp eq i8 %363, 0
  br i1 %364, label %374, label %365

365:                                              ; preds = %361
  %366 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #18
  %367 = load i8*, i8** %21, align 8
  %368 = load i8*, i8** %22, align 8
  %369 = load i64, i64* %23, align 8
  %370 = bitcast %class.SkEventTracer* %366 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %371 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %370, align 8
  %372 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %371, i64 5
  %373 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %372, align 8
  call void %373(%class.SkEventTracer* %366, i8* %367, i8* %368, i64 %369) #18
  br label %374

374:                                              ; preds = %357, %361, %365
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #18
  ret i32 %358
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #4 comdat align 2 {
  %8 = bitcast %class.GrMeshDrawOp* %0 to void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)***
  %9 = load void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)**, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)** %9, i64 10
  %11 = load void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)** %10, align 8
  tail call void %11(%class.GrMeshDrawOp* %0, %class.GrRecordingContext* %1, %class.GrSurfaceProxyView* dereferenceable(16) %2, %class.GrAppliedClip* %3, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %4, i32 %5, i32 %6) #18
  ret void
}

declare void @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState(%class.GrMeshDrawOp*, %class.GrOpFlushState*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_19TextureOp9onExecuteEP14GrOpFlushStateRK6SkRect(%"class.(anonymous namespace)::TextureOp"*, %class.GrOpFlushState*, %struct.SkRect* dereferenceable(16)) unnamed_addr #4 align 2 {
  %4 = alloca %class.sk_sp.302, align 8
  %5 = alloca %class.sk_sp.302, align 8
  %6 = alloca %class.sk_sp.302, align 8
  %7 = alloca %class.GrSurfaceProxy*, align 8
  %8 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 3
  %9 = load %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Desc"** %8, align 8
  %10 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %9, i64 0, i32 7, i32 0
  %11 = load %class.GrBuffer*, %class.GrBuffer** %10, align 8
  %12 = icmp eq %class.GrBuffer* %11, null
  br i1 %12, label %151, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %9, i64 0, i32 0, i32 0
  %15 = load i16, i16* %14, align 4
  %16 = and i16 %15, 48
  %17 = icmp eq i16 %16, 32
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %9, i64 0, i32 6, i32 0
  %20 = load %class.GrBuffer*, %class.GrBuffer** %19, align 8
  %21 = icmp eq %class.GrBuffer* %20, null
  br i1 %21, label %151, label %22

22:                                               ; preds = %18, %13
  %23 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %9, i64 0, i32 5
  %24 = load %class.GrProgramInfo*, %class.GrProgramInfo** %23, align 8
  %25 = icmp eq %class.GrProgramInfo* %24, null
  br i1 %25, label %26, label %34

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 0
  %28 = icmp eq %class.GrOpFlushState* %1, null
  %29 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 1
  %30 = select i1 %28, %"class.GrMeshDrawOp::Target"* null, %"class.GrMeshDrawOp::Target"* %29
  tail call void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp* %27, %"class.GrMeshDrawOp::Target"* %30) #18
  %31 = load %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Desc"** %8, align 8
  %32 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %31, i64 0, i32 5
  %33 = load %class.GrProgramInfo*, %class.GrProgramInfo** %32, align 8
  br label %34

34:                                               ; preds = %22, %26
  %35 = phi %class.GrProgramInfo* [ %24, %22 ], [ %33, %26 ]
  %36 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 15
  %37 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %36, align 8
  tail call void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass* %37, %class.GrProgramInfo* dereferenceable(128) %35, %struct.SkRect* dereferenceable(16) %2) #18
  %38 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %35, i64 0, i32 5
  %39 = load %class.GrPipeline*, %class.GrPipeline** %38, align 8
  %40 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %39, i64 0, i32 5
  %41 = load i8, i8* %40, align 8
  %42 = and i8 %41, 32
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %51, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 10
  %46 = load %"struct.GrOpFlushState::OpArgs"*, %"struct.GrOpFlushState::OpArgs"** %45, align 8
  %47 = getelementptr inbounds %"struct.GrOpFlushState::OpArgs", %"struct.GrOpFlushState::OpArgs"* %46, i64 0, i32 4
  %48 = load %class.GrAppliedClip*, %class.GrAppliedClip** %47, align 8
  %49 = getelementptr inbounds %class.GrAppliedClip, %class.GrAppliedClip* %48, i64 0, i32 0, i32 0, i32 1
  %50 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %36, align 8
  tail call void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass* %50, %struct.SkIRect* dereferenceable(16) %49) #18
  br label %51

51:                                               ; preds = %34, %44
  %52 = load %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Desc"** %8, align 8
  %53 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %52, i64 0, i32 6
  %54 = getelementptr inbounds %class.sk_sp.302, %class.sk_sp.302* %53, i64 0, i32 0
  %55 = bitcast %class.sk_sp.302* %53 to i64*
  %56 = load i64, i64* %55, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %54, align 8
  %57 = load %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Desc"** %8, align 8
  %58 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %57, i64 0, i32 7
  %59 = getelementptr inbounds %class.sk_sp.302, %class.sk_sp.302* %58, i64 0, i32 0
  %60 = bitcast %class.sk_sp.302* %58 to i64*
  %61 = load i64, i64* %60, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %59, align 8
  %62 = bitcast %class.sk_sp.302* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62)
  %63 = bitcast %class.sk_sp.302* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63)
  %64 = bitcast %class.sk_sp.302* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64)
  %65 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %36, align 8
  %66 = bitcast %class.sk_sp.302* %4 to i64*
  store i64 %56, i64* %66, align 8
  %67 = bitcast %class.sk_sp.302* %5 to i64*
  store i64 0, i64* %67, align 8
  %68 = bitcast %class.sk_sp.302* %6 to i64*
  store i64 %61, i64* %68, align 8
  call void @_ZN15GrOpsRenderPass11bindBuffersE5sk_spIK8GrBufferES3_S3_18GrPrimitiveRestart(%class.GrOpsRenderPass* %65, %class.sk_sp.302* nonnull %4, %class.sk_sp.302* nonnull %5, %class.sk_sp.302* nonnull %6, i1 zeroext false) #18
  %69 = getelementptr inbounds %class.sk_sp.302, %class.sk_sp.302* %6, i64 0, i32 0
  %70 = load %class.GrBuffer*, %class.GrBuffer** %69, align 8
  %71 = icmp eq %class.GrBuffer* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %51
  %73 = bitcast %class.GrBuffer* %70 to void (%class.GrBuffer*)***
  %74 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %73, align 8
  %75 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %74, i64 3
  %76 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %75, align 8
  call void %76(%class.GrBuffer* nonnull %70) #18
  br label %77

77:                                               ; preds = %72, %51
  %78 = getelementptr inbounds %class.sk_sp.302, %class.sk_sp.302* %5, i64 0, i32 0
  %79 = load %class.GrBuffer*, %class.GrBuffer** %78, align 8
  %80 = icmp eq %class.GrBuffer* %79, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %77
  %82 = bitcast %class.GrBuffer* %79 to void (%class.GrBuffer*)***
  %83 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %82, align 8
  %84 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %83, i64 3
  %85 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %84, align 8
  call void %85(%class.GrBuffer* nonnull %79) #18
  br label %86

86:                                               ; preds = %81, %77
  %87 = getelementptr inbounds %class.sk_sp.302, %class.sk_sp.302* %4, i64 0, i32 0
  %88 = load %class.GrBuffer*, %class.GrBuffer** %87, align 8
  %89 = icmp eq %class.GrBuffer* %88, null
  br i1 %89, label %95, label %90

90:                                               ; preds = %86
  %91 = bitcast %class.GrBuffer* %88 to void (%class.GrBuffer*)***
  %92 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %91, align 8
  %93 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %92, i64 3
  %94 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %93, align 8
  call void %94(%class.GrBuffer* nonnull %88) #18
  br label %95

95:                                               ; preds = %90, %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64)
  %96 = icmp eq %"class.(anonymous namespace)::TextureOp"* %0, null
  br i1 %96, label %151, label %97

97:                                               ; preds = %95
  %98 = ptrtoint %"class.(anonymous namespace)::TextureOp"* %0 to i64
  %99 = bitcast %class.GrSurfaceProxy** %7 to i8*
  %100 = bitcast %class.GrSurfaceProxy** %7 to i64*
  br label %101

101:                                              ; preds = %97, %108
  %102 = phi %"class.(anonymous namespace)::TextureOp"* [ %0, %97 ], [ %114, %108 ]
  %103 = phi i32 [ 0, %97 ], [ %109, %108 ]
  %104 = phi i64 [ %98, %97 ], [ %113, %108 ]
  %105 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %102, i64 0, i32 4, i32 1
  %106 = load i16, i16* %105, align 2
  %107 = icmp eq i16 %106, 0
  br i1 %107, label %108, label %116

108:                                              ; preds = %116, %101
  %109 = phi i32 [ %103, %101 ], [ %146, %116 ]
  %110 = inttoptr i64 %104 to %class.GrOp*
  %111 = getelementptr inbounds %class.GrOp, %class.GrOp* %110, i64 0, i32 1, i32 0, i32 0, i32 0
  %112 = bitcast %class.GrOp** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = inttoptr i64 %113 to %"class.(anonymous namespace)::TextureOp"*
  %115 = icmp eq i64 %113, 0
  br i1 %115, label %151, label %101

116:                                              ; preds = %101, %116
  %117 = phi i64 [ %147, %116 ], [ 0, %101 ]
  %118 = phi i32 [ %146, %116 ], [ %103, %101 ]
  %119 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %102, i64 0, i32 5, i64 %117, i32 1
  %120 = load i32, i32* %119, align 8
  %121 = load %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Desc"** %8, align 8
  %122 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %121, i64 0, i32 5
  %123 = load %class.GrProgramInfo*, %class.GrProgramInfo** %122, align 8
  %124 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %123, i64 0, i32 7
  %125 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %124, align 8
  %126 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %102, i64 0, i32 5, i64 %117, i32 0, i32 0
  %127 = bitcast %class.GrSurfaceProxy** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %123, i64 0, i32 5
  %130 = load %class.GrPipeline*, %class.GrPipeline** %129, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #18
  store i64 %128, i64* %100, align 8
  %131 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %36, align 8
  call void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass* %131, %class.GrGeometryProcessor* dereferenceable(80) %125, %class.GrSurfaceProxy** nonnull %7, %class.GrPipeline* dereferenceable(128) %130) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #18
  %132 = call dereferenceable(232) %class.GrCaps* @_ZNK14GrOpFlushState4capsEv(%class.GrOpFlushState* %1) #18
  %133 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %36, align 8
  %134 = load %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Desc"** %8, align 8
  %135 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %134, i64 0, i32 0
  %136 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %134, i64 0, i32 2
  %137 = load i32, i32* %136, align 8
  %138 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %134, i64 0, i32 0, i32 0
  %139 = load i16, i16* %138, align 4
  %140 = and i16 %139, 1024
  %141 = icmp eq i16 %140, 0
  %142 = select i1 %141, i32 4, i32 8
  %143 = mul nsw i32 %142, %137
  %144 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %134, i64 0, i32 8
  %145 = load i32, i32* %144, align 8
  call void @_ZN15GrQuadPerEdgeAA9IssueDrawERK6GrCapsP15GrOpsRenderPassRKNS_10VertexSpecEiiii(%class.GrCaps* dereferenceable(232) %132, %class.GrOpsRenderPass* %133, %"struct.GrQuadPerEdgeAA::VertexSpec"* dereferenceable(4) %135, i32 %118, i32 %120, i32 %143, i32 %145) #18
  %146 = add nsw i32 %120, %118
  %147 = add nuw nsw i64 %117, 1
  %148 = load i16, i16* %105, align 2
  %149 = zext i16 %148 to i64
  %150 = icmp ult i64 %147, %149
  br i1 %150, label %116, label %108

151:                                              ; preds = %108, %95, %18, %3
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZNK12_GLOBAL__N_19TextureOp18fixedFunctionFlagsEv(%"class.(anonymous namespace)::TextureOp"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 4, i32 3
  %3 = load i16, i16* %2, align 2
  %4 = and i16 %3, 48
  %5 = icmp eq i16 %4, 32
  %6 = zext i1 %5 to i32
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_19TextureOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType(%"class.(anonymous namespace)::TextureOp"*, %class.GrCaps* nocapture readonly dereferenceable(232), %class.GrAppliedClip* nocapture readnone, i32) unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 1, i32 0, i32 2
  %7 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 4, i32 3
  %8 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %1, i64 0, i32 2, i32 0
  br label %9

9:                                                ; preds = %48, %4
  %10 = phi i8* [ null, %4 ], [ %45, %48 ]
  %11 = icmp eq i8* %10, null
  %12 = load i8*, i8** %5, align 8
  %13 = icmp eq i8* %12, null
  br i1 %11, label %39, label %14

14:                                               ; preds = %9
  br i1 %13, label %76, label %15

15:                                               ; preds = %14
  %16 = load i32, i32* %6, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %12, i64 %17
  %19 = icmp ult i8* %10, %18
  br i1 %19, label %20, label %43

20:                                               ; preds = %15
  %21 = load i8, i8* %10, align 4
  %22 = and i8 %21, 16
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %32, label %24

24:                                               ; preds = %20
  %25 = and i8 %21, 12
  %26 = and i8 %21, 3
  %27 = icmp eq i8 %26, 3
  %28 = select i1 %27, i64 88, i64 72
  %29 = icmp eq i8 %25, 12
  %30 = select i1 %29, i64 48, i64 32
  %31 = add nuw nsw i64 %30, %28
  br label %36

32:                                               ; preds = %20
  %33 = and i8 %21, 3
  %34 = icmp eq i8 %33, 3
  %35 = select i1 %34, i64 88, i64 72
  br label %36

36:                                               ; preds = %32, %24
  %37 = phi i64 [ %31, %24 ], [ %35, %32 ]
  %38 = getelementptr inbounds i8, i8* %10, i64 %37
  br label %43

39:                                               ; preds = %9
  br i1 %13, label %76, label %40

40:                                               ; preds = %39
  %41 = load i32, i32* %6, align 4
  %42 = sext i32 %41 to i64
  br label %43

43:                                               ; preds = %40, %15, %36
  %44 = phi i64 [ %42, %40 ], [ %17, %15 ], [ %17, %36 ]
  %45 = phi i8* [ %12, %40 ], [ %10, %15 ], [ %38, %36 ]
  %46 = getelementptr inbounds i8, i8* %12, i64 %44
  %47 = icmp ult i8* %45, %46
  br i1 %47, label %48, label %76

48:                                               ; preds = %43
  %49 = getelementptr inbounds i8, i8* %45, i64 4
  %50 = bitcast i8* %49 to <2 x float>*
  %51 = load <2 x float>, <2 x float>* %50, align 4
  %52 = getelementptr inbounds i8, i8* %45, i64 12
  %53 = bitcast i8* %52 to <2 x float>*
  %54 = load <2 x float>, <2 x float>* %53, align 4
  %55 = tail call i32 @_ZN15GrQuadPerEdgeAA12MinColorTypeE8SkRGBA4fIL11SkAlphaType2EE(<2 x float> %51, <2 x float> %54) #18
  %56 = load i16, i16* %7, align 2
  %57 = lshr i16 %56, 6
  %58 = and i16 %57, 3
  %59 = zext i16 %58 to i32
  %60 = icmp sgt i32 %55, %59
  %61 = select i1 %60, i32 %55, i32 %59
  %62 = load %class.GrShaderCaps*, %class.GrShaderCaps** %8, align 8
  %63 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %62, i64 0, i32 2
  %64 = bitcast i56* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = and i64 %65, 1048576
  %67 = icmp eq i64 %66, 0
  %68 = icmp sgt i32 %61, 1
  %69 = or i1 %67, %68
  %70 = trunc i32 %61 to i16
  %71 = shl i16 %70, 6
  %72 = and i16 %71, 192
  %73 = select i1 %69, i16 %72, i16 64
  %74 = and i16 %56, -193
  %75 = or i16 %73, %74
  store i16 %75, i16* %7, align 2
  br label %9

76:                                               ; preds = %14, %39, %43
  ret i32 34
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_19TextureOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%"class.(anonymous namespace)::TextureOp"*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #4 align 2 {
  %8 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %9 = load atomic i64, i64* @_ZZN12_GLOBAL__N_19TextureOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOpE28trace_event_unique_atomic689.0.0 monotonic, align 8
  %10 = inttoptr i64 %9 to i8*
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %12, label %20

12:                                               ; preds = %7
  %13 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #18
  %14 = bitcast %class.SkEventTracer* %13 to i8* (%class.SkEventTracer*, i8*)***
  %15 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %14, align 8
  %16 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %15, i64 2
  %17 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %16, align 8
  %18 = tail call i8* %17(%class.SkEventTracer* %13, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i64 0, i64 0)) #18
  %19 = ptrtoint i8* %18 to i64
  store atomic i64 %19, i64* @_ZZN12_GLOBAL__N_19TextureOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOpE28trace_event_unique_atomic689.0.0 monotonic, align 8
  br label %20

20:                                               ; preds = %7, %12
  %21 = phi i8* [ %10, %7 ], [ %18, %12 ]
  %22 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #18
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %8, i64 0, i32 0
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %8, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %8, i64 0, i32 1, i32 1
  %26 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %8, i64 0, i32 1, i32 2
  %27 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %8, i64 0, i32 1
  %28 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %23, align 8
  %29 = load i8, i8* %21, align 1
  %30 = and i8 %29, 5
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %20
  %33 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #18
  %34 = bitcast %class.SkEventTracer* %33 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %35 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %34, align 8
  %36 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %35, i64 4
  %37 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %36, align 8
  %38 = tail call i64 %37(%class.SkEventTracer* %33, i8 signext 88, i8* %21, i8* getelementptr inbounds ([201 x i8], [201 x i8]* @__PRETTY_FUNCTION__._ZN12_GLOBAL__N_19TextureOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #18
  %39 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %8, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %39, i64 0, i32 0
  store i8* %21, i8** %40, align 8
  store i8* getelementptr inbounds ([201 x i8], [201 x i8]* @__PRETTY_FUNCTION__._ZN12_GLOBAL__N_19TextureOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp, i64 0, i64 0), i8** %25, align 8
  store i64 %38, i64* %26, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %39, %"struct.skia::tracing_internals::ScopedTracer::Data"** %23, align 8
  br label %41

41:                                               ; preds = %20, %32
  %42 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %1, i64 0, i32 3
  %43 = call { %class.SkArenaAlloc*, %class.GrSubRunAllocator* } @_ZN18GrRecordingContext11OwnedArenas3getEv(%"class.GrRecordingContext::OwnedArenas"* %42) #18
  %44 = extractvalue { %class.SkArenaAlloc*, %class.GrSubRunAllocator* } %43, 0
  %45 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %44, i32 65, i32 8) #18
  %46 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %44, i64 0, i32 1
  %47 = bitcast i8** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = ptrtoint i8* %45 to i64
  %50 = sub i64 %49, %48
  %51 = trunc i64 %50 to i32
  %52 = getelementptr inbounds i8, i8* %45, i64 56
  store i8* %52, i8** %46, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %44, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeIN12_GLOBAL__N_19TextureOp4DescEJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS5_ENUlPcE_8__invokeESE_, i32 %51) #18
  %53 = bitcast i8* %45 to %"struct.(anonymous namespace)::TextureOp::Desc"*
  call void @llvm.memset.p0i8.i64(i8* align 4 %45, i8 0, i64 56, i1 false) #18
  %54 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 3
  %55 = bitcast %"struct.(anonymous namespace)::TextureOp::Desc"** %54 to i8**
  store i8* %45, i8** %55, align 8
  call fastcc void @_ZNK12_GLOBAL__N_19TextureOp12characterizeEPNS0_4DescE(%"class.(anonymous namespace)::TextureOp"* %0, %"struct.(anonymous namespace)::TextureOp::Desc"* %53)
  %56 = load %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Desc"** %54, align 8
  %57 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %56, i64 0, i32 2
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %56, i64 0, i32 0, i32 0
  %60 = load i16, i16* %59, align 4
  %61 = and i16 %60, 1024
  %62 = icmp eq i16 %61, 0
  %63 = select i1 %62, i32 4, i32 8
  %64 = mul nsw i32 %63, %58
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %56, i64 0, i32 0
  %67 = call i64 @_ZNK15GrQuadPerEdgeAA10VertexSpec10vertexSizeEv(%"struct.GrQuadPerEdgeAA::VertexSpec"* %66) #18
  %68 = mul i64 %67, %65
  %69 = icmp ult i64 %68, 4294967296
  br i1 %69, label %71, label %70

70:                                               ; preds = %41
  call void @abort() #20
  unreachable

71:                                               ; preds = %41
  %72 = load i64, i64* %47, align 8
  %73 = and i64 %68, 4294967292
  %74 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %44, i64 0, i32 2
  %75 = bitcast i8** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %76, %72
  %78 = icmp ugt i64 %73, %77
  br i1 %78, label %79, label %82

79:                                               ; preds = %71
  %80 = trunc i64 %68 to i32
  call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %44, i32 %80, i32 1) #18
  %81 = load i64, i64* %47, align 8
  br label %82

82:                                               ; preds = %71, %79
  %83 = phi i64 [ %81, %79 ], [ %72, %71 ]
  %84 = inttoptr i64 %83 to i8*
  %85 = getelementptr inbounds i8, i8* %84, i64 %73
  store i8* %85, i8** %46, align 8
  %86 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %56, i64 0, i32 4
  store i8* %84, i8** %86, align 8
  %87 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %1, i64 0, i32 0, i32 0
  %88 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %87) #18
  %89 = load %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Desc"** %54, align 8
  %90 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %89, i64 0, i32 4
  %91 = load i8*, i8** %90, align 8
  call fastcc void @_ZN12_GLOBAL__N_19TextureOp14FillInVerticesERK6GrCapsPS0_PNS0_4DescEPc(%"class.(anonymous namespace)::TextureOp"* %0, %"struct.(anonymous namespace)::TextureOp::Desc"* %89, i8* %91)
  %92 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 0
  call void @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp* %92, %class.GrRecordingContext* %1, %class.GrSurfaceProxyView* dereferenceable(16) %2, %class.GrAppliedClip* %3, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %4, i32 %5, i32 %6) #18
  %93 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %23, align 8
  %94 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %82
  %96 = load i8*, i8** %24, align 8
  %97 = load i8, i8* %96, align 1
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %108, label %99

99:                                               ; preds = %95
  %100 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #18
  %101 = load i8*, i8** %24, align 8
  %102 = load i8*, i8** %25, align 8
  %103 = load i64, i64* %26, align 8
  %104 = bitcast %class.SkEventTracer* %100 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %105 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %104, align 8
  %106 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %105, i64 5
  %107 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %106, align 8
  call void %107(%class.SkEventTracer* %100, i8* %101, i8* %102, i64 %103) #18
  br label %108

108:                                              ; preds = %82, %95, %99
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #18
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %class.GrProgramInfo* @_ZN12_GLOBAL__N_19TextureOp11programInfoEv(%"class.(anonymous namespace)::TextureOp"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 3
  %3 = load %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Desc"** %2, align 8
  %4 = icmp eq %"struct.(anonymous namespace)::TextureOp::Desc"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %3, i64 0, i32 5
  %7 = load %class.GrProgramInfo*, %class.GrProgramInfo** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %class.GrProgramInfo* [ %7, %5 ], [ null, %1 ]
  ret %class.GrProgramInfo* %9
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_19TextureOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%"class.(anonymous namespace)::TextureOp"*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #4 align 2 {
  %9 = alloca %class.sk_sp.230, align 8
  %10 = alloca %class.GrProcessorSet, align 8
  %11 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 5, i64 0, i32 0, i32 0
  %12 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %11, align 8
  %13 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %12, i64 0, i32 5
  %14 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 4, i32 3
  %15 = load i16, i16* %14, align 2
  %16 = and i16 %15, 3
  %17 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 3
  %18 = load %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Desc"** %17, align 8
  %19 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %18, i64 0, i32 0
  %20 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %1, i64 0, i32 2, i32 0
  %21 = load %class.GrShaderCaps*, %class.GrShaderCaps** %20, align 8
  %22 = zext i16 %16 to i64
  %23 = shl nuw nsw i64 %22, 32
  %24 = or i64 %23, 2863267840
  %25 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 4, i32 0
  %26 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 2
  %27 = getelementptr inbounds %class.sk_sp.230, %class.sk_sp.230* %26, i64 0, i32 0
  %28 = bitcast %class.sk_sp.230* %26 to i64*
  %29 = load i64, i64* %28, align 8
  store %class.GrColorSpaceXform* null, %class.GrColorSpaceXform** %27, align 8
  %30 = bitcast %class.sk_sp.230* %9 to i64*
  store i64 %29, i64* %30, align 8
  %31 = and i16 %15, 512
  %32 = icmp ne i16 %31, 0
  %33 = call %class.GrGeometryProcessor* @_ZN15GrQuadPerEdgeAA21MakeTexturedProcessorEP12SkArenaAllocRKNS_10VertexSpecERK12GrShaderCapsRK15GrBackendFormat14GrSamplerStateRK9GrSwizzle5sk_spI17GrColorSpaceXformEN11GrTextureOp8SaturateE(%class.SkArenaAlloc* %2, %"struct.GrQuadPerEdgeAA::VertexSpec"* dereferenceable(4) %19, %class.GrShaderCaps* dereferenceable(144) %21, %class.GrBackendFormat* dereferenceable(72) %13, i64 %24, i32 0, %class.GrSwizzle* dereferenceable(2) %25, %class.sk_sp.230* nonnull %9, i1 zeroext %32) #18
  %34 = getelementptr inbounds %class.sk_sp.230, %class.sk_sp.230* %9, i64 0, i32 0
  %35 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %34, align 8
  %36 = icmp eq %class.GrColorSpaceXform* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %8
  %38 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %35, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = bitcast %class.GrColorSpaceXform* %35 to %class.SkRefCntBase*
  %43 = bitcast %class.GrColorSpaceXform* %35 to void (%class.SkRefCntBase*)***
  %44 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %43, align 8
  %45 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, i64 2
  %46 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, align 8
  call void %46(%class.SkRefCntBase* nonnull %42) #18
  br label %47

47:                                               ; preds = %8, %37, %41
  %48 = load i16, i16* %14, align 2
  %49 = bitcast %class.GrProcessorSet* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #18
  call void @_ZN14GrProcessorSet12MakeEmptySetEv(%class.GrProcessorSet* nonnull sret %10) #18
  %50 = load %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Desc"** %17, align 8
  %51 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %50, i64 0, i32 0, i32 0
  %52 = load i16, i16* %51, align 4
  %53 = lshr i16 %52, 4
  %54 = and i16 %53, 3
  %55 = icmp eq i16 %54, 3
  br i1 %55, label %56, label %57

56:                                               ; preds = %47
  call void @llvm.trap() #18
  unreachable

57:                                               ; preds = %47
  %58 = and i16 %48, 48
  %59 = icmp eq i16 %58, 32
  %60 = zext i1 %59 to i8
  %61 = shl nuw nsw i16 %54, 3
  %62 = zext i16 %61 to i24
  %63 = lshr i24 65536, %62
  %64 = trunc i24 %63 to i8
  %65 = load %struct.GrUserStencilSettings*, %struct.GrUserStencilSettings** @_ZN21GrUserStencilSettings7kUnusedE, align 8
  %66 = call %class.GrProgramInfo* @_ZN24GrSimpleMeshDrawOpHelper17CreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessorO14GrProcessorSet15GrPrimitiveType18GrXferBarrierFlags8GrLoadOpN10GrPipeline10InputFlagsEPK21GrUserStencilSettings(%class.GrCaps* %1, %class.SkArenaAlloc* %2, %class.GrSurfaceProxyView* dereferenceable(16) %3, %class.GrAppliedClip* dereferenceable(72) %4, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %5, %class.GrGeometryProcessor* %33, %class.GrProcessorSet* nonnull dereferenceable(32) %10, i8 zeroext %64, i32 %6, i32 %7, i8 zeroext %60, %struct.GrUserStencilSettings* %65) #18
  %67 = load %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Desc"** %17, align 8
  %68 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %67, i64 0, i32 5
  store %class.GrProgramInfo* %66, %class.GrProgramInfo** %68, align 8
  call void @_ZN14GrProcessorSetD1Ev(%class.GrProcessorSet* nonnull %10) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_19TextureOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE(%"class.(anonymous namespace)::TextureOp"*, %"class.GrMeshDrawOp::Target"*) unnamed_addr #4 align 2 {
  %3 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %4 = alloca %class.sk_sp.302, align 8
  %5 = load atomic i64, i64* @_ZZN12_GLOBAL__N_19TextureOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE28trace_event_unique_atomic870.0.0 monotonic, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #18
  %10 = bitcast %class.SkEventTracer* %9 to i8* (%class.SkEventTracer*, i8*)***
  %11 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %10, align 8
  %12 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %11, i64 2
  %13 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %12, align 8
  %14 = tail call i8* %13(%class.SkEventTracer* %9, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i64 0, i64 0)) #18
  %15 = ptrtoint i8* %14 to i64
  store atomic i64 %15, i64* @_ZZN12_GLOBAL__N_19TextureOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE28trace_event_unique_atomic870.0.0 monotonic, align 8
  br label %16

16:                                               ; preds = %2, %8
  %17 = phi i8* [ %6, %2 ], [ %14, %8 ]
  %18 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #18
  %19 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 0
  %20 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 1
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 2
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1
  %24 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %19, align 8
  %25 = load i8, i8* %17, align 1
  %26 = and i8 %25, 5
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %37, label %28

28:                                               ; preds = %16
  %29 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #18
  %30 = bitcast %class.SkEventTracer* %29 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %31 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %30, align 8
  %32 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %31, i64 4
  %33 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %32, align 8
  %34 = tail call i64 %33(%class.SkEventTracer* %29, i8 signext 88, i8* %17, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN12_GLOBAL__N_19TextureOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #18
  %35 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %35, i64 0, i32 0
  store i8* %17, i8** %36, align 8
  store i8* getelementptr inbounds ([86 x i8], [86 x i8]* @__PRETTY_FUNCTION__._ZN12_GLOBAL__N_19TextureOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE, i64 0, i64 0), i8** %21, align 8
  store i64 %34, i64* %22, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %35, %"struct.skia::tracing_internals::ScopedTracer::Data"** %19, align 8
  br label %37

37:                                               ; preds = %16, %28
  %38 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 3
  %39 = load %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Desc"** %38, align 8
  %40 = icmp eq %"struct.(anonymous namespace)::TextureOp::Desc"* %39, null
  br i1 %40, label %41, label %58

41:                                               ; preds = %37
  %42 = bitcast %"class.GrMeshDrawOp::Target"* %1 to %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)***
  %43 = load %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)**, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*** %42, align 8
  %44 = getelementptr inbounds %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)** %43, i64 29
  %45 = load %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)*, %class.SkArenaAlloc* (%"class.GrMeshDrawOp::Target"*)** %44, align 8
  %46 = call %class.SkArenaAlloc* %45(%"class.GrMeshDrawOp::Target"* %1) #18
  %47 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %46, i32 65, i32 8) #18
  %48 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %46, i64 0, i32 1
  %49 = bitcast i8** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = ptrtoint i8* %47 to i64
  %52 = sub i64 %51, %50
  %53 = trunc i64 %52 to i32
  %54 = getelementptr inbounds i8, i8* %47, i64 56
  store i8* %54, i8** %48, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %46, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeIN12_GLOBAL__N_19TextureOp4DescEJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS5_ENUlPcE_8__invokeESE_, i32 %53) #18
  %55 = bitcast i8* %47 to %"struct.(anonymous namespace)::TextureOp::Desc"*
  call void @llvm.memset.p0i8.i64(i8* align 4 %47, i8 0, i64 56, i1 false) #18
  %56 = bitcast %"struct.(anonymous namespace)::TextureOp::Desc"** %38 to i8**
  store i8* %47, i8** %56, align 8
  call fastcc void @_ZNK12_GLOBAL__N_19TextureOp12characterizeEPNS0_4DescE(%"class.(anonymous namespace)::TextureOp"* %0, %"struct.(anonymous namespace)::TextureOp::Desc"* %55)
  %57 = load %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Desc"** %38, align 8
  br label %58

58:                                               ; preds = %37, %41
  %59 = phi %"struct.(anonymous namespace)::TextureOp::Desc"* [ %39, %37 ], [ %57, %41 ]
  %60 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %59, i64 0, i32 0
  %61 = call i64 @_ZNK15GrQuadPerEdgeAA10VertexSpec10vertexSizeEv(%"struct.GrQuadPerEdgeAA::VertexSpec"* %60) #18
  %62 = load %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Desc"** %38, align 8
  %63 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %62, i64 0, i32 2
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %62, i64 0, i32 0, i32 0
  %66 = load i16, i16* %65, align 4
  %67 = and i16 %66, 1024
  %68 = icmp eq i16 %67, 0
  %69 = select i1 %68, i32 4, i32 8
  %70 = mul nsw i32 %69, %64
  %71 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %62, i64 0, i32 7
  %72 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %62, i64 0, i32 8
  %73 = bitcast %"class.GrMeshDrawOp::Target"* %1 to i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.302*, i32*)***
  %74 = load i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.302*, i32*)**, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.302*, i32*)*** %73, align 8
  %75 = getelementptr inbounds i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.302*, i32*)*, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.302*, i32*)** %74, i64 3
  %76 = load i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.302*, i32*)*, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.302*, i32*)** %75, align 8
  %77 = call i8* %76(%"class.GrMeshDrawOp::Target"* %1, i64 %61, i32 %70, %class.sk_sp.302* %71, i32* %72) #18
  %78 = icmp eq i8* %77, null
  br i1 %78, label %79, label %80

79:                                               ; preds = %58
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 888, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0)) #18
  br label %143

80:                                               ; preds = %58
  %81 = load %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Desc"** %38, align 8
  %82 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %81, i64 0, i32 0, i32 0
  %83 = load i16, i16* %82, align 4
  %84 = and i16 %83, 48
  %85 = icmp eq i16 %84, 32
  br i1 %85, label %118, label %86

86:                                               ; preds = %80
  %87 = bitcast %class.sk_sp.302* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #18
  %88 = lshr i16 %83, 4
  %89 = and i16 %88, 3
  %90 = zext i16 %89 to i32
  call void @_ZN15GrQuadPerEdgeAA14GetIndexBufferEPN12GrMeshDrawOp6TargetENS_17IndexBufferOptionE(%class.sk_sp.302* nonnull sret %4, %"class.GrMeshDrawOp::Target"* %1, i32 %90) #18
  %91 = load %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Desc"** %38, align 8
  %92 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %91, i64 0, i32 6
  %93 = getelementptr inbounds %class.sk_sp.302, %class.sk_sp.302* %4, i64 0, i32 0
  %94 = bitcast %class.sk_sp.302* %4 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %93, align 8
  %96 = getelementptr inbounds %class.sk_sp.302, %class.sk_sp.302* %92, i64 0, i32 0
  %97 = load %class.GrBuffer*, %class.GrBuffer** %96, align 8
  %98 = bitcast %class.sk_sp.302* %92 to i64*
  store i64 %95, i64* %98, align 8
  %99 = icmp eq %class.GrBuffer* %97, null
  br i1 %99, label %112, label %100

100:                                              ; preds = %86
  %101 = bitcast %class.GrBuffer* %97 to void (%class.GrBuffer*)***
  %102 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %101, align 8
  %103 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %102, i64 3
  %104 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %103, align 8
  call void %104(%class.GrBuffer* nonnull %97) #18
  %105 = load %class.GrBuffer*, %class.GrBuffer** %93, align 8
  %106 = icmp eq %class.GrBuffer* %105, null
  br i1 %106, label %112, label %107

107:                                              ; preds = %100
  %108 = bitcast %class.GrBuffer* %105 to void (%class.GrBuffer*)***
  %109 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %108, align 8
  %110 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %109, i64 3
  %111 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %110, align 8
  call void %111(%class.GrBuffer* nonnull %105) #18
  br label %112

112:                                              ; preds = %86, %100, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #18
  %113 = load %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Desc"** %38, align 8
  %114 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %113, i64 0, i32 6, i32 0
  %115 = load %class.GrBuffer*, %class.GrBuffer** %114, align 8
  %116 = icmp eq %class.GrBuffer* %115, null
  br i1 %116, label %117, label %118

117:                                              ; preds = %112
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 896, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0)) #18
  br label %143

118:                                              ; preds = %112, %80
  %119 = phi %"struct.(anonymous namespace)::TextureOp::Desc"* [ %113, %112 ], [ %81, %80 ]
  %120 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %119, i64 0, i32 4
  %121 = load i8*, i8** %120, align 8
  %122 = icmp eq i8* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %119, i64 0, i32 2
  %125 = load i32, i32* %124, align 8
  %126 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %119, i64 0, i32 0, i32 0
  %127 = load i16, i16* %126, align 4
  %128 = and i16 %127, 1024
  %129 = icmp eq i16 %128, 0
  %130 = select i1 %129, i32 4, i32 8
  %131 = mul nsw i32 %130, %125
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %119, i64 0, i32 0
  %134 = call i64 @_ZNK15GrQuadPerEdgeAA10VertexSpec10vertexSizeEv(%"struct.GrQuadPerEdgeAA::VertexSpec"* %133) #18
  %135 = mul i64 %134, %132
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %77, i8* nonnull align 1 %121, i64 %135, i1 false)
  br label %143

136:                                              ; preds = %118
  %137 = bitcast %"class.GrMeshDrawOp::Target"* %1 to %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)***
  %138 = load %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)**, %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)*** %137, align 8
  %139 = getelementptr inbounds %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)*, %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)** %138, i64 27
  %140 = load %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)*, %class.GrCaps* (%"class.GrMeshDrawOp::Target"*)** %139, align 8
  %141 = call dereferenceable(232) %class.GrCaps* %140(%"class.GrMeshDrawOp::Target"* %1) #18
  %142 = load %"struct.(anonymous namespace)::TextureOp::Desc"*, %"struct.(anonymous namespace)::TextureOp::Desc"** %38, align 8
  call fastcc void @_ZN12_GLOBAL__N_19TextureOp14FillInVerticesERK6GrCapsPS0_PNS0_4DescEPc(%"class.(anonymous namespace)::TextureOp"* %0, %"struct.(anonymous namespace)::TextureOp::Desc"* %142, i8* nonnull %77)
  br label %143

143:                                              ; preds = %123, %136, %117, %79
  %144 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %19, align 8
  %145 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %144, null
  br i1 %145, label %159, label %146

146:                                              ; preds = %143
  %147 = load i8*, i8** %20, align 8
  %148 = load i8, i8* %147, align 1
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %159, label %150

150:                                              ; preds = %146
  %151 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #18
  %152 = load i8*, i8** %20, align 8
  %153 = load i8*, i8** %21, align 8
  %154 = load i64, i64* %22, align 8
  %155 = bitcast %class.SkEventTracer* %151 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %156 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %155, align 8
  %157 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %156, i64 5
  %158 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %157, align 8
  call void %158(%class.SkEventTracer* %151, i8* %152, i8* %153, i64 %154) #18
  br label %159

159:                                              ; preds = %143, %146, %150
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #18
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #10

declare i8* @_Z16sk_realloc_throwPvm(i8*, i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind readnone
declare float @floorf(float) local_unnamed_addr #11

declare { <2 x float>, <2 x float> } @_ZNK6GrQuad15projectedBoundsEv(%class.GrQuad*) local_unnamed_addr #3

declare i32 @_ZN11GrQuadUtils8ClipToW0EP8DrawQuadS1_(%struct.DrawQuad*, %struct.DrawQuad*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12GrQuadBufferIN12_GLOBAL__N_19TextureOp16ColorSubsetAndAAEE6appendERK6GrQuadOS2_PS5_(%class.GrQuadBuffer* nocapture, %class.GrQuad* nocapture readonly dereferenceable(52), %"struct.(anonymous namespace)::TextureOp::ColorSubsetAndAA"* nocapture readonly dereferenceable(36), %class.GrQuad* readonly) unnamed_addr #4 align 2 {
  %5 = icmp ne %class.GrQuad* %3, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 3
  %10 = select i1 %9, i32 88, i32 72
  br label %21

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %1, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 3
  %17 = select i1 %16, i32 88, i32 72
  %18 = icmp eq i32 %13, 3
  %19 = select i1 %18, i32 48, i32 32
  %20 = add nuw nsw i32 %19, %17
  br label %21

21:                                               ; preds = %6, %11
  %22 = phi i32* [ %14, %11 ], [ %7, %6 ]
  %23 = phi i32 [ %20, %11 ], [ %10, %6 ]
  %24 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %0, i64 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = add i32 %25, %23
  %27 = icmp sgt i32 %26, -1
  br i1 %27, label %29, label %28

28:                                               ; preds = %21
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0)) #20
  unreachable

29:                                               ; preds = %21
  %30 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %0, i64 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp slt i32 %31, %26
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %0, i64 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  br label %47

36:                                               ; preds = %29
  %37 = add nuw i32 %26, 4
  %38 = lshr i32 %37, 2
  %39 = add nuw i32 %38, %37
  %40 = icmp sgt i32 %39, -1
  br i1 %40, label %42, label %41

41:                                               ; preds = %36
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0)) #20
  unreachable

42:                                               ; preds = %36
  store i32 %39, i32* %30, align 8
  %43 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %0, i64 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = sext i32 %39 to i64
  %46 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %44, i64 %45) #18
  store i8* %46, i8** %43, align 8
  br label %47

47:                                               ; preds = %33, %42
  %48 = phi i8* [ %35, %33 ], [ %46, %42 ]
  store i32 %26, i32* %24, align 4
  %49 = sext i32 %25 to i64
  %50 = getelementptr inbounds i8, i8* %48, i64 %49
  %51 = load i32, i32* %22, align 4
  %52 = trunc i32 %51 to i8
  %53 = load i8, i8* %50, align 4
  %54 = and i8 %52, 3
  %55 = and i8 %53, -20
  %56 = zext i1 %5 to i8
  %57 = shl nuw nsw i8 %56, 4
  %58 = or i8 %54, %57
  %59 = or i8 %58, %55
  store i8 %59, i8* %50, align 4
  br i1 %5, label %60, label %66

60:                                               ; preds = %47
  %61 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = trunc i32 %62 to i8
  %64 = shl i8 %63, 2
  %65 = and i8 %64, 12
  br label %66

66:                                               ; preds = %47, %60
  %67 = phi i8 [ %65, %60 ], [ 0, %47 ]
  %68 = and i8 %59, -13
  %69 = or i8 %67, %68
  store i8 %69, i8* %50, align 4
  %70 = getelementptr inbounds i8, i8* %50, i64 4
  %71 = bitcast %"struct.(anonymous namespace)::TextureOp::ColorSubsetAndAA"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %70, i8* align 4 %71, i64 33, i1 false)
  %72 = getelementptr inbounds i8, i8* %50, i64 40
  %73 = load i32, i32* %22, align 4
  %74 = icmp eq i32 %73, 3
  %75 = bitcast %class.GrQuad* %1 to i8*
  br i1 %74, label %76, label %77

76:                                               ; preds = %66
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %75, i64 48, i1 false) #18
  br label %78

77:                                               ; preds = %66
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %75, i64 32, i1 false) #18
  br label %78

78:                                               ; preds = %76, %77
  %79 = phi i64 [ 48, %76 ], [ 32, %77 ]
  %80 = getelementptr inbounds i8, i8* %72, i64 %79
  br i1 %5, label %81, label %88

81:                                               ; preds = %78
  %82 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 3
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 3
  %85 = bitcast %class.GrQuad* %3 to i8*
  br i1 %84, label %86, label %87

86:                                               ; preds = %81
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* nonnull align 4 %85, i64 48, i1 false) #18
  br label %88

87:                                               ; preds = %81
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* nonnull align 4 %85, i64 32, i1 false) #18
  br label %88

88:                                               ; preds = %87, %86, %78
  %89 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %0, i64 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %89, align 8
  %92 = load i32, i32* %22, align 4
  %93 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %0, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %92, %94
  br i1 %95, label %96, label %97

96:                                               ; preds = %88
  store i32 %92, i32* %93, align 4
  br label %97

97:                                               ; preds = %96, %88
  br i1 %5, label %98, label %105

98:                                               ; preds = %97
  %99 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 3
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %0, i64 0, i32 3
  %102 = load i32, i32* %101, align 8
  %103 = icmp sgt i32 %100, %102
  br i1 %103, label %104, label %105

104:                                              ; preds = %98
  store i32 %100, i32* %101, align 8
  br label %105

105:                                              ; preds = %104, %98, %97
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4GrOpD2Ev(%class.GrOp*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.GrOp, %class.GrOp* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrOp, %class.GrOp* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.GrOp*, %class.GrOp** %3, align 8
  store %class.GrOp* null, %class.GrOp** %3, align 8
  %5 = icmp eq %class.GrOp* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrOp* %4 to void (%class.GrOp*)***
  %8 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %8, i64 1
  %10 = load void (%class.GrOp*)*, void (%class.GrOp*)** %9, align 8
  tail call void %10(%class.GrOp* nonnull %4) #18
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4GrOpD0Ev(%class.GrOp*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #20
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrOp*, %"class.std::__1::function.303"* dereferenceable(32)) unnamed_addr #4 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps(%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps* dereferenceable(232)) unnamed_addr #4 comdat align 2 {
  ret i32 2
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #12

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

declare void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline*, %"class.std::__1::function.303"* dereferenceable(32)) local_unnamed_addr #3

declare %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() local_unnamed_addr #3

declare zeroext i1 @_ZN17GrColorSpaceXform6EqualsEPKS_S1_(%class.GrColorSpaceXform*, %class.GrColorSpaceXform*) local_unnamed_addr #3

declare zeroext i1 @_ZN14GrTextureProxy34ProxiesAreCompatibleAsDynamicStateEPK14GrSurfaceProxyS2_(%class.GrSurfaceProxy*, %class.GrSurfaceProxy*) local_unnamed_addr #3

declare void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp*, %"class.GrMeshDrawOp::Target"*) local_unnamed_addr #3

declare void @_ZN15GrQuadPerEdgeAA9IssueDrawERK6GrCapsP15GrOpsRenderPassRKNS_10VertexSpecEiiii(%class.GrCaps* dereferenceable(232), %class.GrOpsRenderPass*, %"struct.GrQuadPerEdgeAA::VertexSpec"* dereferenceable(4), i32, i32, i32, i32) local_unnamed_addr #3

declare dereferenceable(232) %class.GrCaps* @_ZNK14GrOpFlushState4capsEv(%class.GrOpFlushState*) unnamed_addr #3

declare void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass*, %class.GrProgramInfo* dereferenceable(128), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN15GrOpsRenderPass11bindBuffersE5sk_spIK8GrBufferES3_S3_18GrPrimitiveRestart(%class.GrOpsRenderPass*, %class.sk_sp.302*, %class.sk_sp.302*, %class.sk_sp.302*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass*, %class.GrGeometryProcessor* dereferenceable(80), %class.GrSurfaceProxy**, %class.GrPipeline* dereferenceable(128)) local_unnamed_addr #3

declare i32 @_ZN15GrQuadPerEdgeAA12MinColorTypeE8SkRGBA4fIL11SkAlphaType2EE(<2 x float>, <2 x float>) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNK12_GLOBAL__N_19TextureOp12characterizeEPNS0_4DescE(%"class.(anonymous namespace)::TextureOp"*, %"struct.(anonymous namespace)::TextureOp::Desc"* nocapture) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %0, i64 0, i32 4, i32 3
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 4
  %6 = and i16 %5, 3
  %7 = zext i16 %6 to i32
  %8 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %1, i64 0, i32 1
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %1, i64 0, i32 2
  store i32 0, i32* %9, align 8
  %10 = icmp eq %"class.(anonymous namespace)::TextureOp"* %0, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %2
  %12 = ptrtoint %"class.(anonymous namespace)::TextureOp"* %0 to i64
  br label %51

13:                                               ; preds = %128
  %14 = and i8 %74, 1
  %15 = trunc i32 %69 to i16
  %16 = shl i16 %15, 2
  %17 = and i16 %16, 12
  %18 = trunc i32 %79 to i16
  %19 = shl i16 %18, 7
  %20 = and i16 %19, 384
  %21 = zext i8 %14 to i16
  %22 = shl nuw nsw i16 %21, 9
  br label %23

23:                                               ; preds = %13, %2
  %24 = phi i32 [ 0, %2 ], [ %129, %13 ]
  %25 = phi i16 [ 0, %2 ], [ %20, %13 ]
  %26 = phi i16 [ 0, %2 ], [ %22, %13 ]
  %27 = phi i32 [ %7, %2 ], [ %137, %13 ]
  %28 = phi i16 [ 0, %2 ], [ %17, %13 ]
  %29 = phi i32 [ 0, %2 ], [ %65, %13 ]
  %30 = tail call i32 @_ZN15GrQuadPerEdgeAA21CalcIndexBufferOptionE8GrAATypei(i32 %27, i32 %24) #18
  %31 = trunc i32 %29 to i16
  %32 = and i16 %31, 3
  %33 = trunc i32 %30 to i16
  %34 = shl i16 %33, 4
  %35 = and i16 %34, 48
  %36 = icmp eq i32 %27, 1
  %37 = zext i1 %36 to i16
  %38 = shl nuw nsw i16 %37, 10
  %39 = icmp sgt i32 %29, 1
  %40 = and i1 %36, %39
  %41 = zext i1 %40 to i16
  %42 = shl nuw nsw i16 %41, 12
  %43 = or i16 %25, %26
  %44 = or i16 %43, %38
  %45 = or i16 %44, %32
  %46 = or i16 %45, %28
  %47 = or i16 %46, %42
  %48 = or i16 %47, %35
  %49 = or i16 %48, 2112
  %50 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %1, i64 0, i32 0, i32 0
  store i16 %49, i16* %50, align 8
  ret void

51:                                               ; preds = %11, %128
  %52 = phi i32 [ %133, %128 ], [ 0, %11 ]
  %53 = phi i32 [ %83, %128 ], [ 0, %11 ]
  %54 = phi %"class.(anonymous namespace)::TextureOp"* [ %142, %128 ], [ %0, %11 ]
  %55 = phi i32 [ %65, %128 ], [ 0, %11 ]
  %56 = phi i32 [ %69, %128 ], [ 0, %11 ]
  %57 = phi i32 [ %137, %128 ], [ %7, %11 ]
  %58 = phi i8 [ %74, %128 ], [ 0, %11 ]
  %59 = phi i32 [ %79, %128 ], [ 0, %11 ]
  %60 = phi i32 [ %129, %128 ], [ 0, %11 ]
  %61 = phi i64 [ %141, %128 ], [ %12, %11 ]
  %62 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %54, i64 0, i32 1, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp sgt i32 %63, %55
  %65 = select i1 %64, i32 %63, i32 %55
  %66 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %54, i64 0, i32 1, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = icmp sgt i32 %67, %56
  %69 = select i1 %68, i32 %67, i32 %56
  %70 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %54, i64 0, i32 4, i32 3
  %71 = load i16, i16* %70, align 2
  %72 = and i16 %71, 256
  %73 = icmp eq i16 %72, 0
  %74 = select i1 %73, i8 %58, i8 1
  %75 = lshr i16 %71, 6
  %76 = and i16 %75, 3
  %77 = zext i16 %76 to i32
  %78 = icmp ult i32 %59, %77
  %79 = select i1 %78, i32 %77, i32 %59
  %80 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %54, i64 0, i32 4, i32 1
  %81 = load i16, i16* %80, align 2
  %82 = zext i16 %81 to i32
  %83 = add nuw nsw i32 %53, %82
  store i32 %83, i32* %8, align 4
  %84 = load i16, i16* %80, align 2
  %85 = icmp eq i16 %84, 0
  br i1 %85, label %128, label %86

86:                                               ; preds = %51
  %87 = zext i16 %84 to i64
  %88 = icmp ult i16 %84, 9
  br i1 %88, label %89, label %92

89:                                               ; preds = %118, %86
  %90 = phi i64 [ 0, %86 ], [ %96, %118 ]
  %91 = phi i32 [ %60, %86 ], [ %127, %118 ]
  br label %144

92:                                               ; preds = %86
  %93 = and i64 %87, 7
  %94 = icmp eq i64 %93, 0
  %95 = select i1 %94, i64 8, i64 %93
  %96 = sub nsw i64 %87, %95
  %97 = insertelement <4 x i32> undef, i32 %60, i32 0
  %98 = shufflevector <4 x i32> %97, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %99

99:                                               ; preds = %99, %92
  %100 = phi i64 [ 0, %92 ], [ %116, %99 ]
  %101 = phi <4 x i32> [ %98, %92 ], [ %114, %99 ]
  %102 = phi <4 x i32> [ %98, %92 ], [ %115, %99 ]
  %103 = or i64 %100, 4
  %104 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %54, i64 0, i32 5, i64 %100, i32 1
  %105 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %54, i64 0, i32 5, i64 %103, i32 1
  %106 = bitcast i32* %104 to <16 x i32>*
  %107 = bitcast i32* %105 to <16 x i32>*
  %108 = load <16 x i32>, <16 x i32>* %106, align 4
  %109 = load <16 x i32>, <16 x i32>* %107, align 4
  %110 = shufflevector <16 x i32> %108, <16 x i32> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %111 = shufflevector <16 x i32> %109, <16 x i32> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %112 = icmp slt <4 x i32> %110, %101
  %113 = icmp slt <4 x i32> %111, %102
  %114 = select <4 x i1> %112, <4 x i32> %101, <4 x i32> %110
  %115 = select <4 x i1> %113, <4 x i32> %102, <4 x i32> %111
  %116 = add i64 %100, 8
  %117 = icmp eq i64 %116, %96
  br i1 %117, label %118, label %99, !llvm.loop !25

118:                                              ; preds = %99
  %119 = icmp sgt <4 x i32> %114, %115
  %120 = select <4 x i1> %119, <4 x i32> %114, <4 x i32> %115
  %121 = shufflevector <4 x i32> %120, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %122 = icmp sgt <4 x i32> %120, %121
  %123 = select <4 x i1> %122, <4 x i32> %120, <4 x i32> %121
  %124 = shufflevector <4 x i32> %123, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %125 = icmp sgt <4 x i32> %123, %124
  %126 = select <4 x i1> %125, <4 x i32> %123, <4 x i32> %124
  %127 = extractelement <4 x i32> %126, i32 0
  br label %89

128:                                              ; preds = %144, %51
  %129 = phi i32 [ %60, %51 ], [ %150, %144 ]
  %130 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %54, i64 0, i32 4, i32 2
  %131 = load i16, i16* %130, align 4
  %132 = zext i16 %131 to i32
  %133 = add nuw nsw i32 %52, %132
  store i32 %133, i32* %9, align 8
  %134 = load i16, i16* %70, align 2
  %135 = and i16 %134, 48
  %136 = icmp eq i16 %135, 16
  %137 = select i1 %136, i32 1, i32 %57
  %138 = inttoptr i64 %61 to %class.GrOp*
  %139 = getelementptr inbounds %class.GrOp, %class.GrOp* %138, i64 0, i32 1, i32 0, i32 0, i32 0
  %140 = bitcast %class.GrOp** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = inttoptr i64 %141 to %"class.(anonymous namespace)::TextureOp"*
  %143 = icmp eq i64 %141, 0
  br i1 %143, label %13, label %51

144:                                              ; preds = %89, %144
  %145 = phi i64 [ %151, %144 ], [ %90, %89 ]
  %146 = phi i32 [ %150, %144 ], [ %91, %89 ]
  %147 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %54, i64 0, i32 5, i64 %145, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = icmp slt i32 %148, %146
  %150 = select i1 %149, i32 %146, i32 %148
  %151 = add nuw nsw i64 %145, 1
  %152 = icmp ult i64 %151, %87
  br i1 %152, label %144, label %128, !llvm.loop !27
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_19TextureOp14FillInVerticesERK6GrCapsPS0_PNS0_4DescEPc(%"class.(anonymous namespace)::TextureOp"*, %"struct.(anonymous namespace)::TextureOp::Desc"*, i8*) unnamed_addr #4 align 2 {
  %4 = alloca %"class.GrQuadPerEdgeAA::Tessellator", align 16
  %5 = alloca %"class.GrQuadBuffer<(anonymous namespace)::TextureOp::ColorSubsetAndAA>::Iter", align 8
  %6 = bitcast %"class.GrQuadPerEdgeAA::Tessellator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 368, i8* nonnull %6) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %6, i8* align 16 bitcast ({ %"class.GrQuadUtils::TessellationHelper", %"struct.GrQuadPerEdgeAA::VertexSpec", [4 x i8], %struct.GrVertexWriter, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)*, [8 x i8] }* @__const._ZN12_GLOBAL__N_19TextureOp14FillInVerticesERK6GrCapsPS0_PNS0_4DescEPc.tessellator to i8*), i64 368, i1 false)
  %7 = getelementptr inbounds %"struct.(anonymous namespace)::TextureOp::Desc", %"struct.(anonymous namespace)::TextureOp::Desc"* %1, i64 0, i32 0
  call void @_ZN15GrQuadPerEdgeAA11TessellatorC1ERKNS_10VertexSpecEPc(%"class.GrQuadPerEdgeAA::Tessellator"* nonnull %4, %"struct.GrQuadPerEdgeAA::VertexSpec"* dereferenceable(4) %7, i8* %2) #18
  %8 = icmp eq %"class.(anonymous namespace)::TextureOp"* %0, null
  br i1 %8, label %29, label %9

9:                                                ; preds = %3
  %10 = ptrtoint %"class.(anonymous namespace)::TextureOp"* %0 to i64
  %11 = bitcast %"class.GrQuadBuffer<(anonymous namespace)::TextureOp::ColorSubsetAndAA>::Iter"* %5 to i8*
  %12 = getelementptr inbounds %"class.GrQuadBuffer<(anonymous namespace)::TextureOp::ColorSubsetAndAA>::Iter", %"class.GrQuadBuffer<(anonymous namespace)::TextureOp::ColorSubsetAndAA>::Iter"* %5, i64 0, i32 0, i32 2, i64 0
  %13 = getelementptr inbounds %"class.GrQuadBuffer<(anonymous namespace)::TextureOp::ColorSubsetAndAA>::Iter", %"class.GrQuadBuffer<(anonymous namespace)::TextureOp::ColorSubsetAndAA>::Iter"* %5, i64 0, i32 0, i32 3
  %14 = getelementptr inbounds %"class.GrQuadBuffer<(anonymous namespace)::TextureOp::ColorSubsetAndAA>::Iter", %"class.GrQuadBuffer<(anonymous namespace)::TextureOp::ColorSubsetAndAA>::Iter"* %5, i64 0, i32 1, i32 2, i64 0
  %15 = bitcast i32* %13 to i8*
  %16 = getelementptr inbounds %"class.GrQuadBuffer<(anonymous namespace)::TextureOp::ColorSubsetAndAA>::Iter", %"class.GrQuadBuffer<(anonymous namespace)::TextureOp::ColorSubsetAndAA>::Iter"* %5, i64 0, i32 1, i32 3
  %17 = getelementptr inbounds %"class.GrQuadBuffer<(anonymous namespace)::TextureOp::ColorSubsetAndAA>::Iter", %"class.GrQuadBuffer<(anonymous namespace)::TextureOp::ColorSubsetAndAA>::Iter"* %5, i64 0, i32 2
  %18 = getelementptr inbounds %"class.GrQuadBuffer<(anonymous namespace)::TextureOp::ColorSubsetAndAA>::Iter", %"class.GrQuadBuffer<(anonymous namespace)::TextureOp::ColorSubsetAndAA>::Iter"* %5, i64 0, i32 3
  %19 = getelementptr inbounds %"class.GrQuadBuffer<(anonymous namespace)::TextureOp::ColorSubsetAndAA>::Iter", %"class.GrQuadBuffer<(anonymous namespace)::TextureOp::ColorSubsetAndAA>::Iter"* %5, i64 0, i32 4
  %20 = bitcast i8** %19 to i64*
  %21 = getelementptr inbounds %"class.GrQuadBuffer<(anonymous namespace)::TextureOp::ColorSubsetAndAA>::Iter", %"class.GrQuadBuffer<(anonymous namespace)::TextureOp::ColorSubsetAndAA>::Iter"* %5, i64 0, i32 1
  %22 = bitcast %class.GrQuad* %21 to i8*
  %23 = bitcast i8** %19 to float**
  %24 = getelementptr inbounds %"class.GrQuadBuffer<(anonymous namespace)::TextureOp::ColorSubsetAndAA>::Iter", %"class.GrQuadBuffer<(anonymous namespace)::TextureOp::ColorSubsetAndAA>::Iter"* %5, i64 0, i32 0
  %25 = bitcast float* %12 to <4 x float>*
  %26 = bitcast float* %14 to <4 x float>*
  %27 = bitcast float* %12 to <4 x float>*
  %28 = bitcast float* %14 to <4 x float>*
  br label %30

29:                                               ; preds = %39, %3
  call void @llvm.lifetime.end.p0i8(i64 368, i8* nonnull %6) #18
  ret void

30:                                               ; preds = %9, %39
  %31 = phi %"class.(anonymous namespace)::TextureOp"* [ %0, %9 ], [ %44, %39 ]
  %32 = phi i64 [ %10, %9 ], [ %43, %39 ]
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %11) #18
  %33 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %31, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 32, i1 false) #18, !alias.scope !29
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %25, align 8, !alias.scope !29
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 36, i1 false) #18, !alias.scope !29
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %26, align 4, !alias.scope !29
  store i32 0, i32* %16, align 4, !alias.scope !29
  store %class.GrQuadBuffer* %33, %class.GrQuadBuffer** %17, align 8, !alias.scope !29
  store i8* null, i8** %18, align 8, !alias.scope !29
  %34 = bitcast %class.GrQuadBuffer* %33 to i64*
  %35 = load i64, i64* %34, align 8, !noalias !29
  store i64 %35, i64* %20, align 8, !alias.scope !29
  %36 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %31, i64 0, i32 4, i32 1
  %37 = load i16, i16* %36, align 2
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %39, label %46

39:                                               ; preds = %102, %30
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %11) #18
  %40 = inttoptr i64 %32 to %class.GrOp*
  %41 = getelementptr inbounds %class.GrOp, %class.GrOp* %40, i64 0, i32 1, i32 0, i32 0, i32 0
  %42 = bitcast %class.GrOp** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = inttoptr i64 %43 to %"class.(anonymous namespace)::TextureOp"*
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %29, label %30

46:                                               ; preds = %30, %102
  %47 = phi i16 [ %103, %102 ], [ %37, %30 ]
  %48 = phi i64 [ %104, %102 ], [ 0, %30 ]
  %49 = getelementptr inbounds %"class.(anonymous namespace)::TextureOp", %"class.(anonymous namespace)::TextureOp"* %31, i64 0, i32 5, i64 %48, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %52, label %102

52:                                               ; preds = %46, %107
  %53 = phi i32 [ %121, %107 ], [ 0, %46 ]
  %54 = load i8*, i8** %19, align 8
  %55 = load %class.GrQuadBuffer*, %class.GrQuadBuffer** %17, align 8
  %56 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %55, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %100, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %55, i64 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i8, i8* %57, i64 %62
  %64 = icmp ult i8* %54, %63
  br i1 %64, label %65, label %100

65:                                               ; preds = %59
  store i8* %54, i8** %18, align 8
  %66 = getelementptr inbounds i8, i8* %54, i64 40
  %67 = load i8, i8* %54, align 4
  %68 = and i8 %67, 3
  %69 = zext i8 %68 to i32
  %70 = icmp eq i8 %68, 3
  br i1 %70, label %71, label %74

71:                                               ; preds = %65
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 4 %66, i64 48, i1 false) #18
  %72 = getelementptr inbounds i8, i8* %54, i64 88
  %73 = bitcast i8* %72 to float*
  br label %80

74:                                               ; preds = %65
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 4 %66, i64 32, i1 false) #18
  %75 = getelementptr inbounds i8, i8* %54, i64 72
  %76 = bitcast i8* %75 to float*
  %77 = load i32, i32* %13, align 8
  %78 = icmp eq i32 %77, 3
  br i1 %78, label %79, label %80

79:                                               ; preds = %74
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %27, align 8
  br label %80

80:                                               ; preds = %79, %74, %71
  %81 = phi i8* [ %72, %71 ], [ %75, %74 ], [ %75, %79 ]
  %82 = phi float* [ %73, %71 ], [ %76, %74 ], [ %76, %79 ]
  store i32 %69, i32* %13, align 8
  %83 = load i8, i8* %54, align 4
  %84 = and i8 %83, 16
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %107, label %86

86:                                               ; preds = %80
  %87 = lshr i8 %83, 2
  %88 = and i8 %87, 3
  %89 = zext i8 %88 to i32
  %90 = icmp eq i8 %88, 3
  br i1 %90, label %91, label %93

91:                                               ; preds = %86
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %81, i64 48, i1 false) #18
  %92 = getelementptr inbounds float, float* %82, i64 12
  br label %98

93:                                               ; preds = %86
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %81, i64 32, i1 false) #18
  %94 = getelementptr inbounds float, float* %82, i64 8
  %95 = load i32, i32* %16, align 4
  %96 = icmp eq i32 %95, 3
  br i1 %96, label %97, label %98

97:                                               ; preds = %93
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %28, align 4
  br label %98

98:                                               ; preds = %97, %93, %91
  %99 = phi float* [ %92, %91 ], [ %94, %93 ], [ %94, %97 ]
  store i32 %89, i32* %16, align 4
  br label %107

100:                                              ; preds = %107, %52, %59
  %101 = load i16, i16* %36, align 2
  br label %102

102:                                              ; preds = %100, %46
  %103 = phi i16 [ %101, %100 ], [ %47, %46 ]
  %104 = add nuw nsw i64 %48, 1
  %105 = zext i16 %103 to i64
  %106 = icmp ult i64 %104, %105
  br i1 %106, label %46, label %39

107:                                              ; preds = %98, %80
  %108 = phi float* [ %99, %98 ], [ %82, %80 ]
  store float* %108, float** %23, align 8
  %109 = getelementptr inbounds i8, i8* %54, i64 4
  %110 = load i8, i8* %54, align 4
  %111 = and i8 %110, 16
  %112 = icmp eq i8 %111, 0
  %113 = select i1 %112, %class.GrQuad* null, %class.GrQuad* %21
  %114 = bitcast i8* %109 to %struct.SkRGBA4f*
  %115 = getelementptr inbounds i8, i8* %54, i64 20
  %116 = bitcast i8* %115 to %struct.SkRect*
  %117 = getelementptr inbounds i8, i8* %54, i64 36
  %118 = load i8, i8* %117, align 4
  %119 = and i8 %118, 15
  %120 = zext i8 %119 to i32
  call void @_ZN15GrQuadPerEdgeAA11Tessellator6appendEP6GrQuadS2_RK8SkRGBA4fIL11SkAlphaType2EERK6SkRect13GrQuadAAFlags(%"class.GrQuadPerEdgeAA::Tessellator"* nonnull %4, %class.GrQuad* nonnull %24, %class.GrQuad* %113, %struct.SkRGBA4f* dereferenceable(16) %114, %struct.SkRect* dereferenceable(16) %116, i32 %120) #18
  %121 = add nuw nsw i32 %53, 1
  %122 = icmp eq i32 %121, %50
  br i1 %122, label %100, label %52
}

declare void @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #3

declare { %class.SkArenaAlloc*, %class.GrSubRunAllocator* } @_ZN18GrRecordingContext11OwnedArenas3getEv(%"class.GrRecordingContext::OwnedArenas"*) local_unnamed_addr #3

declare i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #3

declare void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc*, i8* (i8*)*, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeIN12_GLOBAL__N_19TextureOp4DescEJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS5_ENUlPcE_8__invokeESE_(i8* readonly) #14 align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -65
  %3 = getelementptr inbounds i8, i8* %0, i64 -25
  %4 = bitcast i8* %3 to %class.GrBuffer**
  %5 = load %class.GrBuffer*, %class.GrBuffer** %4, align 8
  %6 = icmp eq %class.GrBuffer* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.GrBuffer* %5 to void (%class.GrBuffer*)***
  %9 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %9, i64 3
  %11 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %10, align 8
  tail call void %11(%class.GrBuffer* nonnull %5) #18
  br label %12

12:                                               ; preds = %7, %1
  %13 = getelementptr inbounds i8, i8* %0, i64 -33
  %14 = bitcast i8* %13 to %class.GrBuffer**
  %15 = load %class.GrBuffer*, %class.GrBuffer** %14, align 8
  %16 = icmp eq %class.GrBuffer* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = bitcast %class.GrBuffer* %15 to void (%class.GrBuffer*)***
  %19 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %19, i64 3
  %21 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %20, align 8
  tail call void %21(%class.GrBuffer* nonnull %15) #18
  br label %22

22:                                               ; preds = %12, %17
  ret i8* %2
}

declare i32 @_ZN15GrQuadPerEdgeAA21CalcIndexBufferOptionE8GrAATypei(i32, i32) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #15

declare void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #3

declare i64 @_ZNK15GrQuadPerEdgeAA10VertexSpec10vertexSizeEv(%"struct.GrQuadPerEdgeAA::VertexSpec"*) local_unnamed_addr #3

declare void @_ZN15GrQuadPerEdgeAA11TessellatorC1ERKNS_10VertexSpecEPc(%"class.GrQuadPerEdgeAA::Tessellator"*, %"struct.GrQuadPerEdgeAA::VertexSpec"* dereferenceable(4), i8*) unnamed_addr #3

declare void @_ZN15GrQuadPerEdgeAA11Tessellator6appendEP6GrQuadS2_RK8SkRGBA4fIL11SkAlphaType2EERK6SkRect13GrQuadAAFlags(%"class.GrQuadPerEdgeAA::Tessellator"*, %class.GrQuad*, %class.GrQuad*, %struct.SkRGBA4f* dereferenceable(16), %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #3

declare %class.GrGeometryProcessor* @_ZN15GrQuadPerEdgeAA21MakeTexturedProcessorEP12SkArenaAllocRKNS_10VertexSpecERK12GrShaderCapsRK15GrBackendFormat14GrSamplerStateRK9GrSwizzle5sk_spI17GrColorSpaceXformEN11GrTextureOp8SaturateE(%class.SkArenaAlloc*, %"struct.GrQuadPerEdgeAA::VertexSpec"* dereferenceable(4), %class.GrShaderCaps* dereferenceable(144), %class.GrBackendFormat* dereferenceable(72), i64, i32, %class.GrSwizzle* dereferenceable(2), %class.sk_sp.230*, i1 zeroext) local_unnamed_addr #3

declare %class.GrProgramInfo* @_ZN24GrSimpleMeshDrawOpHelper17CreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessorO14GrProcessorSet15GrPrimitiveType18GrXferBarrierFlags8GrLoadOpN10GrPipeline10InputFlagsEPK21GrUserStencilSettings(%class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), %class.GrGeometryProcessor*, %class.GrProcessorSet* dereferenceable(32), i8 zeroext, i32, i32, i8 zeroext, %struct.GrUserStencilSettings*) local_unnamed_addr #3

declare void @_ZN14GrProcessorSet12MakeEmptySetEv(%class.GrProcessorSet* sret) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN14GrProcessorSetD1Ev(%class.GrProcessorSet*) unnamed_addr #16

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #3

declare void @_ZN15GrQuadPerEdgeAA14GetIndexBufferEPN12GrMeshDrawOp6TargetENS_17IndexBufferOptionE(%class.sk_sp.302* sret, %"class.GrMeshDrawOp::Target"*, i32) local_unnamed_addr #3

declare %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base*) local_unnamed_addr #3

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #3

declare void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i64) local_unnamed_addr #3

declare void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j(%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32) #4 comdat align 2 {
  tail call void @_ZNSt3__125__throw_bad_function_callEv() #21
  unreachable
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__throw_bad_function_callEv() local_unnamed_addr #17 comdat {
  tail call void @abort() #20
  unreachable
}

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { cold noreturn nounwind }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nounwind }
attributes #19 = { builtin nounwind }
attributes #20 = { noreturn nounwind }
attributes #21 = { noreturn }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!5 = distinct !{!5, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!6 = distinct !{!6, !7, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!7 = distinct !{!7, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK18GrSurfaceProxyView7swizzleEv: argument 0"}
!10 = distinct !{!10, !"_ZNK18GrSurfaceProxyView7swizzleEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN18GrSurfaceProxyView11detachProxyEv: argument 0"}
!13 = distinct !{!13, !"_ZN18GrSurfaceProxyView11detachProxyEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN18GrSurfaceProxyView11detachProxyEv: argument 0"}
!16 = distinct !{!16, !"_ZN18GrSurfaceProxyView11detachProxyEv"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!19 = distinct !{!19, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!20 = distinct !{!20, !21, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!21 = distinct !{!21, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!22 = distinct !{!22, !23}
!23 = !{!"llvm.loop.unroll.disable"}
!24 = !{i8 0, i8 2}
!25 = distinct !{!25, !26}
!26 = !{!"llvm.loop.isvectorized", i32 1}
!27 = distinct !{!27, !28, !26}
!28 = !{!"llvm.loop.unroll.runtime.disable"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK12GrQuadBufferIN12_GLOBAL__N_19TextureOp16ColorSubsetAndAAEE8iteratorEv: argument 0"}
!31 = distinct !{!31, !"_ZNK12GrQuadBufferIN12_GLOBAL__N_19TextureOp16ColorSubsetAndAAEE8iteratorEv"}
