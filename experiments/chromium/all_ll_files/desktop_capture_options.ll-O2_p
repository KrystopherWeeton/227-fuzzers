; ModuleID = '../../third_party/webrtc/modules/desktop_capture/desktop_capture_options.cc'
source_filename = "../../third_party/webrtc/modules/desktop_capture/desktop_capture_options.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::DesktopCaptureOptions" = type <{ %"class.rtc::scoped_refptr", %"class.rtc::scoped_refptr.5", i8, i8, i8, i8, [4 x i8] }>
%"class.rtc::scoped_refptr" = type { %"class.webrtc::SharedXDisplay"* }
%"class.webrtc::SharedXDisplay" = type { %"class.rtc::RefCountedNonVirtual", %struct._XDisplay*, %"class.std::__1::map" }
%"class.rtc::RefCountedNonVirtual" = type { %"class.webrtc::webrtc_impl::RefCounter" }
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct._XDisplay = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i64 }
%"class.rtc::scoped_refptr.5" = type { %"class.webrtc::FullScreenWindowDetector"* }
%"class.webrtc::FullScreenWindowDetector" = type { %"class.rtc::RefCountedNonVirtual.6", %"class.std::__1::unique_ptr", %"class.std::__1::function", i64, i64, i64, %"class.std::__1::vector" }
%"class.rtc::RefCountedNonVirtual.6" = type { %"class.webrtc::webrtc_impl::RefCounter" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.webrtc::FullScreenApplicationHandler"* }
%"class.webrtc::FullScreenApplicationHandler" = type { i32 (...)**, i64 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { %"class.webrtc::FullScreenApplicationHandler"* (%"union.std::__1::__function::__policy_storage"*, i64)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::DesktopCapturer::Source"*, %"struct.webrtc::DesktopCapturer::Source"*, %"class.std::__1::__compressed_pair.15" }
%"struct.webrtc::DesktopCapturer::Source" = type { i64, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.webrtc::DesktopCapturer::Source"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN6webrtc21DesktopCaptureOptionsC1Ev = hidden unnamed_addr alias void (%"class.webrtc::DesktopCaptureOptions"*), void (%"class.webrtc::DesktopCaptureOptions"*)* @_ZN6webrtc21DesktopCaptureOptionsC2Ev
@_ZN6webrtc21DesktopCaptureOptionsC1ERKS0_ = hidden unnamed_addr alias void (%"class.webrtc::DesktopCaptureOptions"*, %"class.webrtc::DesktopCaptureOptions"*), void (%"class.webrtc::DesktopCaptureOptions"*, %"class.webrtc::DesktopCaptureOptions"*)* @_ZN6webrtc21DesktopCaptureOptionsC2ERKS0_
@_ZN6webrtc21DesktopCaptureOptionsC1EOS0_ = hidden unnamed_addr alias void (%"class.webrtc::DesktopCaptureOptions"*, %"class.webrtc::DesktopCaptureOptions"*), void (%"class.webrtc::DesktopCaptureOptions"*, %"class.webrtc::DesktopCaptureOptions"*)* @_ZN6webrtc21DesktopCaptureOptionsC2EOS0_
@_ZN6webrtc21DesktopCaptureOptionsD1Ev = hidden unnamed_addr alias void (%"class.webrtc::DesktopCaptureOptions"*), void (%"class.webrtc::DesktopCaptureOptions"*)* @_ZN6webrtc21DesktopCaptureOptionsD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc21DesktopCaptureOptionsC2Ev(%"class.webrtc::DesktopCaptureOptions"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 3
  %3 = bitcast %"class.webrtc::DesktopCaptureOptions"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 17, i1 false)
  store i8 1, i8* %2, align 1
  %4 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 4
  store i8 0, i8* %4, align 2
  %5 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 5
  store i8 0, i8* %5, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc21DesktopCaptureOptionsC2ERKS0_(%"class.webrtc::DesktopCaptureOptions"* nocapture, %"class.webrtc::DesktopCaptureOptions"* nocapture readonly dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.webrtc::SharedXDisplay"*, %"class.webrtc::SharedXDisplay"** %4, align 8
  store %"class.webrtc::SharedXDisplay"* %5, %"class.webrtc::SharedXDisplay"** %3, align 8
  %6 = icmp eq %"class.webrtc::SharedXDisplay"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.webrtc::SharedXDisplay", %"class.webrtc::SharedXDisplay"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %1, i64 0, i32 1, i32 0
  %13 = load %"class.webrtc::FullScreenWindowDetector"*, %"class.webrtc::FullScreenWindowDetector"** %12, align 8
  store %"class.webrtc::FullScreenWindowDetector"* %13, %"class.webrtc::FullScreenWindowDetector"** %11, align 8
  %14 = icmp eq %"class.webrtc::FullScreenWindowDetector"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.webrtc::FullScreenWindowDetector", %"class.webrtc::FullScreenWindowDetector"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  br label %18

18:                                               ; preds = %10, %15
  %19 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %1, i64 0, i32 2
  %21 = bitcast i8* %20 to i32*
  %22 = bitcast i8* %19 to i32*
  %23 = load i32, i32* %21, align 8
  store i32 %23, i32* %22, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc21DesktopCaptureOptionsC2EOS0_(%"class.webrtc::DesktopCaptureOptions"* nocapture, %"class.webrtc::DesktopCaptureOptions"* nocapture dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %1, i64 0, i32 0, i32 0
  %4 = bitcast %"class.webrtc::DesktopCaptureOptions"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %"class.webrtc::SharedXDisplay"* null, %"class.webrtc::SharedXDisplay"** %3, align 8
  %6 = bitcast %"class.webrtc::DesktopCaptureOptions"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.rtc::scoped_refptr.5", %"class.rtc::scoped_refptr.5"* %8, i64 0, i32 0
  %10 = bitcast %"class.rtc::scoped_refptr.5"* %8 to i64*
  %11 = load i64, i64* %10, align 8
  store %"class.webrtc::FullScreenWindowDetector"* null, %"class.webrtc::FullScreenWindowDetector"** %9, align 8
  %12 = bitcast %"class.rtc::scoped_refptr.5"* %7 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %1, i64 0, i32 2
  %15 = bitcast i8* %14 to i32*
  %16 = bitcast i8* %13 to i32*
  %17 = load i32, i32* %15, align 8
  store i32 %17, i32* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21DesktopCaptureOptionsD2Ev(%"class.webrtc::DesktopCaptureOptions"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.webrtc::FullScreenWindowDetector"*, %"class.webrtc::FullScreenWindowDetector"** %2, align 8
  %4 = icmp eq %"class.webrtc::FullScreenWindowDetector"* %3, null
  br i1 %4, label %57, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::FullScreenWindowDetector", %"class.webrtc::FullScreenWindowDetector"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %57

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.webrtc::FullScreenWindowDetector", %"class.webrtc::FullScreenWindowDetector"* %3, i64 0, i32 6
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %12 = load %"struct.webrtc::DesktopCapturer::Source"*, %"struct.webrtc::DesktopCapturer::Source"** %11, align 8
  %13 = icmp eq %"struct.webrtc::DesktopCapturer::Source"* %12, null
  br i1 %13, label %37, label %14

14:                                               ; preds = %9
  %15 = bitcast %"struct.webrtc::DesktopCapturer::Source"* %12 to i8*
  %16 = getelementptr inbounds %"class.webrtc::FullScreenWindowDetector", %"class.webrtc::FullScreenWindowDetector"* %3, i64 0, i32 6, i32 0, i32 1
  %17 = load %"struct.webrtc::DesktopCapturer::Source"*, %"struct.webrtc::DesktopCapturer::Source"** %16, align 8
  %18 = icmp eq %"struct.webrtc::DesktopCapturer::Source"* %17, %12
  br i1 %18, label %35, label %19

19:                                               ; preds = %14, %30
  %20 = phi %"struct.webrtc::DesktopCapturer::Source"* [ %21, %30 ], [ %17, %14 ]
  %21 = getelementptr inbounds %"struct.webrtc::DesktopCapturer::Source", %"struct.webrtc::DesktopCapturer::Source"* %20, i64 -1
  %22 = getelementptr inbounds %"struct.webrtc::DesktopCapturer::Source", %"struct.webrtc::DesktopCapturer::Source"* %20, i64 -1, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #7
  br label %30

30:                                               ; preds = %27, %19
  %31 = icmp eq %"struct.webrtc::DesktopCapturer::Source"* %21, %12
  br i1 %31, label %32, label %19

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector"* %10 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %14
  %36 = phi i8* [ %34, %32 ], [ %15, %14 ]
  store %"struct.webrtc::DesktopCapturer::Source"* %12, %"struct.webrtc::DesktopCapturer::Source"** %16, align 8
  tail call void @_ZdlPv(i8* %36) #7
  br label %37

37:                                               ; preds = %35, %9
  %38 = getelementptr inbounds %"class.webrtc::FullScreenWindowDetector", %"class.webrtc::FullScreenWindowDetector"* %3, i64 0, i32 2, i32 0, i32 2
  %39 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %39, i64 0, i32 1
  %41 = load void (i8*)*, void (i8*)** %40, align 8
  %42 = icmp eq void (i8*)* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.webrtc::FullScreenWindowDetector", %"class.webrtc::FullScreenWindowDetector"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  tail call void %41(i8* %45) #8
  br label %46

46:                                               ; preds = %43, %37
  %47 = getelementptr inbounds %"class.webrtc::FullScreenWindowDetector", %"class.webrtc::FullScreenWindowDetector"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.webrtc::FullScreenApplicationHandler"*, %"class.webrtc::FullScreenApplicationHandler"** %47, align 8
  store %"class.webrtc::FullScreenApplicationHandler"* null, %"class.webrtc::FullScreenApplicationHandler"** %47, align 8
  %49 = icmp eq %"class.webrtc::FullScreenApplicationHandler"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.webrtc::FullScreenApplicationHandler"* %48 to void (%"class.webrtc::FullScreenApplicationHandler"*)***
  %52 = load void (%"class.webrtc::FullScreenApplicationHandler"*)**, void (%"class.webrtc::FullScreenApplicationHandler"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.webrtc::FullScreenApplicationHandler"*)*, void (%"class.webrtc::FullScreenApplicationHandler"*)** %52, i64 1
  %54 = load void (%"class.webrtc::FullScreenApplicationHandler"*)*, void (%"class.webrtc::FullScreenApplicationHandler"*)** %53, align 8
  tail call void %54(%"class.webrtc::FullScreenApplicationHandler"* nonnull %48) #8
  br label %55

55:                                               ; preds = %46, %50
  %56 = bitcast %"class.webrtc::FullScreenWindowDetector"* %3 to i8*
  tail call void @_ZdlPv(i8* %56) #7
  br label %57

57:                                               ; preds = %1, %5, %55
  %58 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 0, i32 0
  %59 = load %"class.webrtc::SharedXDisplay"*, %"class.webrtc::SharedXDisplay"** %58, align 8
  %60 = icmp eq %"class.webrtc::SharedXDisplay"* %59, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.webrtc::SharedXDisplay", %"class.webrtc::SharedXDisplay"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw sub i32* %62, i32 1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  tail call void @_ZN6webrtc14SharedXDisplayD1Ev(%"class.webrtc::SharedXDisplay"* nonnull %59) #8
  %66 = bitcast %"class.webrtc::SharedXDisplay"* %59 to i8*
  tail call void @_ZdlPv(i8* %66) #7
  br label %67

67:                                               ; preds = %57, %61, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.webrtc::DesktopCaptureOptions"* @_ZN6webrtc21DesktopCaptureOptionsaSERKS0_(%"class.webrtc::DesktopCaptureOptions"* returned, %"class.webrtc::DesktopCaptureOptions"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.webrtc::SharedXDisplay"*, %"class.webrtc::SharedXDisplay"** %3, align 8
  %5 = icmp eq %"class.webrtc::SharedXDisplay"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.webrtc::SharedXDisplay", %"class.webrtc::SharedXDisplay"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %6, %2
  %10 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 0, i32 0
  %11 = load %"class.webrtc::SharedXDisplay"*, %"class.webrtc::SharedXDisplay"** %10, align 8
  %12 = icmp eq %"class.webrtc::SharedXDisplay"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.webrtc::SharedXDisplay", %"class.webrtc::SharedXDisplay"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  tail call void @_ZN6webrtc14SharedXDisplayD1Ev(%"class.webrtc::SharedXDisplay"* nonnull %11) #8
  %18 = bitcast %"class.webrtc::SharedXDisplay"* %11 to i8*
  tail call void @_ZdlPv(i8* %18) #7
  br label %19

19:                                               ; preds = %9, %13, %17
  store %"class.webrtc::SharedXDisplay"* %4, %"class.webrtc::SharedXDisplay"** %10, align 8
  %20 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %1, i64 0, i32 1, i32 0
  %21 = load %"class.webrtc::FullScreenWindowDetector"*, %"class.webrtc::FullScreenWindowDetector"** %20, align 8
  %22 = icmp eq %"class.webrtc::FullScreenWindowDetector"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.webrtc::FullScreenWindowDetector", %"class.webrtc::FullScreenWindowDetector"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic
  br label %26

26:                                               ; preds = %23, %19
  %27 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 1, i32 0
  %28 = load %"class.webrtc::FullScreenWindowDetector"*, %"class.webrtc::FullScreenWindowDetector"** %27, align 8
  %29 = icmp eq %"class.webrtc::FullScreenWindowDetector"* %28, null
  br i1 %29, label %82, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.webrtc::FullScreenWindowDetector", %"class.webrtc::FullScreenWindowDetector"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw sub i32* %31, i32 1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %82

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.webrtc::FullScreenWindowDetector", %"class.webrtc::FullScreenWindowDetector"* %28, i64 0, i32 6
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %35, i64 0, i32 0, i32 0
  %37 = load %"struct.webrtc::DesktopCapturer::Source"*, %"struct.webrtc::DesktopCapturer::Source"** %36, align 8
  %38 = icmp eq %"struct.webrtc::DesktopCapturer::Source"* %37, null
  br i1 %38, label %62, label %39

39:                                               ; preds = %34
  %40 = bitcast %"struct.webrtc::DesktopCapturer::Source"* %37 to i8*
  %41 = getelementptr inbounds %"class.webrtc::FullScreenWindowDetector", %"class.webrtc::FullScreenWindowDetector"* %28, i64 0, i32 6, i32 0, i32 1
  %42 = load %"struct.webrtc::DesktopCapturer::Source"*, %"struct.webrtc::DesktopCapturer::Source"** %41, align 8
  %43 = icmp eq %"struct.webrtc::DesktopCapturer::Source"* %42, %37
  br i1 %43, label %60, label %44

44:                                               ; preds = %39, %55
  %45 = phi %"struct.webrtc::DesktopCapturer::Source"* [ %46, %55 ], [ %42, %39 ]
  %46 = getelementptr inbounds %"struct.webrtc::DesktopCapturer::Source", %"struct.webrtc::DesktopCapturer::Source"* %45, i64 -1
  %47 = getelementptr inbounds %"struct.webrtc::DesktopCapturer::Source", %"struct.webrtc::DesktopCapturer::Source"* %45, i64 -1, i32 1
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #7
  br label %55

55:                                               ; preds = %52, %44
  %56 = icmp eq %"struct.webrtc::DesktopCapturer::Source"* %46, %37
  br i1 %56, label %57, label %44

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::vector"* %35 to i8**
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %57, %39
  %61 = phi i8* [ %59, %57 ], [ %40, %39 ]
  store %"struct.webrtc::DesktopCapturer::Source"* %37, %"struct.webrtc::DesktopCapturer::Source"** %41, align 8
  tail call void @_ZdlPv(i8* %61) #7
  br label %62

62:                                               ; preds = %60, %34
  %63 = getelementptr inbounds %"class.webrtc::FullScreenWindowDetector", %"class.webrtc::FullScreenWindowDetector"* %28, i64 0, i32 2, i32 0, i32 2
  %64 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %64, i64 0, i32 1
  %66 = load void (i8*)*, void (i8*)** %65, align 8
  %67 = icmp eq void (i8*)* %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.webrtc::FullScreenWindowDetector", %"class.webrtc::FullScreenWindowDetector"* %28, i64 0, i32 2, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  tail call void %66(i8* %70) #8
  br label %71

71:                                               ; preds = %68, %62
  %72 = getelementptr inbounds %"class.webrtc::FullScreenWindowDetector", %"class.webrtc::FullScreenWindowDetector"* %28, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.webrtc::FullScreenApplicationHandler"*, %"class.webrtc::FullScreenApplicationHandler"** %72, align 8
  store %"class.webrtc::FullScreenApplicationHandler"* null, %"class.webrtc::FullScreenApplicationHandler"** %72, align 8
  %74 = icmp eq %"class.webrtc::FullScreenApplicationHandler"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = bitcast %"class.webrtc::FullScreenApplicationHandler"* %73 to void (%"class.webrtc::FullScreenApplicationHandler"*)***
  %77 = load void (%"class.webrtc::FullScreenApplicationHandler"*)**, void (%"class.webrtc::FullScreenApplicationHandler"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.webrtc::FullScreenApplicationHandler"*)*, void (%"class.webrtc::FullScreenApplicationHandler"*)** %77, i64 1
  %79 = load void (%"class.webrtc::FullScreenApplicationHandler"*)*, void (%"class.webrtc::FullScreenApplicationHandler"*)** %78, align 8
  tail call void %79(%"class.webrtc::FullScreenApplicationHandler"* nonnull %73) #8
  br label %80

80:                                               ; preds = %71, %75
  %81 = bitcast %"class.webrtc::FullScreenWindowDetector"* %28 to i8*
  tail call void @_ZdlPv(i8* %81) #7
  br label %82

82:                                               ; preds = %26, %30, %80
  store %"class.webrtc::FullScreenWindowDetector"* %21, %"class.webrtc::FullScreenWindowDetector"** %27, align 8
  %83 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 2
  %84 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %1, i64 0, i32 2
  %85 = bitcast i8* %84 to i32*
  %86 = bitcast i8* %83 to i32*
  %87 = load i32, i32* %85, align 8
  store i32 %87, i32* %86, align 8
  ret %"class.webrtc::DesktopCaptureOptions"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.webrtc::DesktopCaptureOptions"* @_ZN6webrtc21DesktopCaptureOptionsaSEOS0_(%"class.webrtc::DesktopCaptureOptions"* returned, %"class.webrtc::DesktopCaptureOptions"* nocapture dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %1, i64 0, i32 0, i32 0
  %4 = bitcast %"class.webrtc::DesktopCaptureOptions"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %"class.webrtc::SharedXDisplay"* null, %"class.webrtc::SharedXDisplay"** %3, align 8
  %6 = bitcast %"class.webrtc::DesktopCaptureOptions"* %0 to i64*
  %7 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.webrtc::SharedXDisplay"*, %"class.webrtc::SharedXDisplay"** %7, align 8
  store i64 %5, i64* %6, align 8
  %9 = icmp eq %"class.webrtc::SharedXDisplay"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.webrtc::SharedXDisplay", %"class.webrtc::SharedXDisplay"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  tail call void @_ZN6webrtc14SharedXDisplayD1Ev(%"class.webrtc::SharedXDisplay"* nonnull %8) #8
  %15 = bitcast %"class.webrtc::SharedXDisplay"* %8 to i8*
  tail call void @_ZdlPv(i8* %15) #7
  br label %16

16:                                               ; preds = %2, %10, %14
  %17 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %1, i64 0, i32 1
  %19 = getelementptr inbounds %"class.rtc::scoped_refptr.5", %"class.rtc::scoped_refptr.5"* %18, i64 0, i32 0
  %20 = bitcast %"class.rtc::scoped_refptr.5"* %18 to i64*
  %21 = load i64, i64* %20, align 8
  store %"class.webrtc::FullScreenWindowDetector"* null, %"class.webrtc::FullScreenWindowDetector"** %19, align 8
  %22 = bitcast %"class.rtc::scoped_refptr.5"* %17 to i64*
  %23 = getelementptr inbounds %"class.rtc::scoped_refptr.5", %"class.rtc::scoped_refptr.5"* %17, i64 0, i32 0
  %24 = load %"class.webrtc::FullScreenWindowDetector"*, %"class.webrtc::FullScreenWindowDetector"** %23, align 8
  store i64 %21, i64* %22, align 8
  %25 = icmp eq %"class.webrtc::FullScreenWindowDetector"* %24, null
  br i1 %25, label %78, label %26

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.webrtc::FullScreenWindowDetector", %"class.webrtc::FullScreenWindowDetector"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw sub i32* %27, i32 1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %78

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.webrtc::FullScreenWindowDetector", %"class.webrtc::FullScreenWindowDetector"* %24, i64 0, i32 6
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %31, i64 0, i32 0, i32 0
  %33 = load %"struct.webrtc::DesktopCapturer::Source"*, %"struct.webrtc::DesktopCapturer::Source"** %32, align 8
  %34 = icmp eq %"struct.webrtc::DesktopCapturer::Source"* %33, null
  br i1 %34, label %58, label %35

35:                                               ; preds = %30
  %36 = bitcast %"struct.webrtc::DesktopCapturer::Source"* %33 to i8*
  %37 = getelementptr inbounds %"class.webrtc::FullScreenWindowDetector", %"class.webrtc::FullScreenWindowDetector"* %24, i64 0, i32 6, i32 0, i32 1
  %38 = load %"struct.webrtc::DesktopCapturer::Source"*, %"struct.webrtc::DesktopCapturer::Source"** %37, align 8
  %39 = icmp eq %"struct.webrtc::DesktopCapturer::Source"* %38, %33
  br i1 %39, label %56, label %40

40:                                               ; preds = %35, %51
  %41 = phi %"struct.webrtc::DesktopCapturer::Source"* [ %42, %51 ], [ %38, %35 ]
  %42 = getelementptr inbounds %"struct.webrtc::DesktopCapturer::Source", %"struct.webrtc::DesktopCapturer::Source"* %41, i64 -1
  %43 = getelementptr inbounds %"struct.webrtc::DesktopCapturer::Source", %"struct.webrtc::DesktopCapturer::Source"* %41, i64 -1, i32 1
  %44 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  tail call void @_ZdlPv(i8* %50) #7
  br label %51

51:                                               ; preds = %48, %40
  %52 = icmp eq %"struct.webrtc::DesktopCapturer::Source"* %42, %33
  br i1 %52, label %53, label %40

53:                                               ; preds = %51
  %54 = bitcast %"class.std::__1::vector"* %31 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %35
  %57 = phi i8* [ %55, %53 ], [ %36, %35 ]
  store %"struct.webrtc::DesktopCapturer::Source"* %33, %"struct.webrtc::DesktopCapturer::Source"** %37, align 8
  tail call void @_ZdlPv(i8* %57) #7
  br label %58

58:                                               ; preds = %56, %30
  %59 = getelementptr inbounds %"class.webrtc::FullScreenWindowDetector", %"class.webrtc::FullScreenWindowDetector"* %24, i64 0, i32 2, i32 0, i32 2
  %60 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %59, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %60, i64 0, i32 1
  %62 = load void (i8*)*, void (i8*)** %61, align 8
  %63 = icmp eq void (i8*)* %62, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.webrtc::FullScreenWindowDetector", %"class.webrtc::FullScreenWindowDetector"* %24, i64 0, i32 2, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  tail call void %62(i8* %66) #8
  br label %67

67:                                               ; preds = %64, %58
  %68 = getelementptr inbounds %"class.webrtc::FullScreenWindowDetector", %"class.webrtc::FullScreenWindowDetector"* %24, i64 0, i32 1, i32 0, i32 0, i32 0
  %69 = load %"class.webrtc::FullScreenApplicationHandler"*, %"class.webrtc::FullScreenApplicationHandler"** %68, align 8
  store %"class.webrtc::FullScreenApplicationHandler"* null, %"class.webrtc::FullScreenApplicationHandler"** %68, align 8
  %70 = icmp eq %"class.webrtc::FullScreenApplicationHandler"* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %67
  %72 = bitcast %"class.webrtc::FullScreenApplicationHandler"* %69 to void (%"class.webrtc::FullScreenApplicationHandler"*)***
  %73 = load void (%"class.webrtc::FullScreenApplicationHandler"*)**, void (%"class.webrtc::FullScreenApplicationHandler"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.webrtc::FullScreenApplicationHandler"*)*, void (%"class.webrtc::FullScreenApplicationHandler"*)** %73, i64 1
  %75 = load void (%"class.webrtc::FullScreenApplicationHandler"*)*, void (%"class.webrtc::FullScreenApplicationHandler"*)** %74, align 8
  tail call void %75(%"class.webrtc::FullScreenApplicationHandler"* nonnull %69) #8
  br label %76

76:                                               ; preds = %67, %71
  %77 = bitcast %"class.webrtc::FullScreenWindowDetector"* %24 to i8*
  tail call void @_ZdlPv(i8* %77) #7
  br label %78

78:                                               ; preds = %16, %26, %76
  %79 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 2
  %80 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %1, i64 0, i32 2
  %81 = bitcast i8* %80 to i32*
  %82 = bitcast i8* %79 to i32*
  %83 = load i32, i32* %81, align 8
  store i32 %83, i32* %82, align 8
  ret %"class.webrtc::DesktopCaptureOptions"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21DesktopCaptureOptions13CreateDefaultEv(%"class.webrtc::DesktopCaptureOptions"* noalias nocapture sret) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.rtc::scoped_refptr", align 8
  %3 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 5
  %7 = bitcast %"class.webrtc::DesktopCaptureOptions"* %0 to i8*
  %8 = bitcast %"class.webrtc::DesktopCaptureOptions"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 17, i1 false) #8
  store i8 1, i8* %4, align 1
  store i8 0, i8* %5, align 2
  store i8 0, i8* %6, align 1
  call void @_ZN6webrtc14SharedXDisplay13CreateDefaultEv(%"class.rtc::scoped_refptr"* nonnull sret %2) #8
  %9 = getelementptr inbounds %"class.rtc::scoped_refptr", %"class.rtc::scoped_refptr"* %2, i64 0, i32 0
  %10 = load %"class.webrtc::SharedXDisplay"*, %"class.webrtc::SharedXDisplay"** %9, align 8
  %11 = icmp eq %"class.webrtc::SharedXDisplay"* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %1
  store %"class.webrtc::SharedXDisplay"* %10, %"class.webrtc::SharedXDisplay"** %3, align 8
  br label %24

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.webrtc::SharedXDisplay", %"class.webrtc::SharedXDisplay"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  %16 = load %"class.webrtc::SharedXDisplay"*, %"class.webrtc::SharedXDisplay"** %9, align 8
  %17 = bitcast %"class.webrtc::SharedXDisplay"* %16 to i8*
  store %"class.webrtc::SharedXDisplay"* %10, %"class.webrtc::SharedXDisplay"** %3, align 8
  %18 = icmp eq %"class.webrtc::SharedXDisplay"* %16, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.webrtc::SharedXDisplay", %"class.webrtc::SharedXDisplay"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %24

23:                                               ; preds = %19
  call void @_ZN6webrtc14SharedXDisplayD1Ev(%"class.webrtc::SharedXDisplay"* nonnull %16) #8
  call void @_ZdlPv(i8* %17) #7
  br label %24

24:                                               ; preds = %12, %13, %19, %23
  ret void
}

declare void @_ZN6webrtc14SharedXDisplay13CreateDefaultEv(%"class.rtc::scoped_refptr"* sret) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6webrtc14SharedXDisplayD1Ev(%"class.webrtc::SharedXDisplay"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
