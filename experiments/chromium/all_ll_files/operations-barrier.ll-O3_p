; ModuleID = '../../v8/src/tasks/operations-barrier.cc'
source_filename = "../../v8/src/tasks/operations-barrier.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.v8::internal::OperationsBarrier::Token" = type { %"class.v8::internal::OperationsBarrier"* }
%"class.v8::internal::OperationsBarrier" = type { %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable", i8, i64 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17OperationsBarrier7TryLockEv(%"class.v8::internal::OperationsBarrier::Token"* noalias nocapture sret, %"class.v8::internal::OperationsBarrier"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::OperationsBarrier", %"class.v8::internal::OperationsBarrier"* %1, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %3) #2
  %4 = getelementptr inbounds %"class.v8::internal::OperationsBarrier", %"class.v8::internal::OperationsBarrier"* %1, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::OperationsBarrier", %"class.v8::internal::OperationsBarrier"* %1, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 1
  store i64 %10, i64* %8, align 8
  br label %11

11:                                               ; preds = %2, %7
  %12 = phi %"class.v8::internal::OperationsBarrier"* [ %1, %7 ], [ null, %2 ]
  %13 = getelementptr inbounds %"class.v8::internal::OperationsBarrier::Token", %"class.v8::internal::OperationsBarrier::Token"* %0, i64 0, i32 0
  store %"class.v8::internal::OperationsBarrier"* %12, %"class.v8::internal::OperationsBarrier"** %13, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %3) #2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17OperationsBarrier13CancelAndWaitEv(%"class.v8::internal::OperationsBarrier"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::OperationsBarrier", %"class.v8::internal::OperationsBarrier"* %0, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %2) #2
  %3 = getelementptr inbounds %"class.v8::internal::OperationsBarrier", %"class.v8::internal::OperationsBarrier"* %0, i64 0, i32 2
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::OperationsBarrier", %"class.v8::internal::OperationsBarrier"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::OperationsBarrier", %"class.v8::internal::OperationsBarrier"* %0, i64 0, i32 1
  br label %9

9:                                                ; preds = %7, %9
  tail call void @_ZN2v84base17ConditionVariable4WaitEPNS0_5MutexE(%"class.v8::base::ConditionVariable"* %8, %"class.v8::base::Mutex"* %2) #2
  %10 = load i64, i64* %4, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %9

12:                                               ; preds = %9, %1
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2) #2
  ret void
}

declare void @_ZN2v84base17ConditionVariable4WaitEPNS0_5MutexE(%"class.v8::base::ConditionVariable"*, %"class.v8::base::Mutex"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17OperationsBarrier7ReleaseEv(%"class.v8::internal::OperationsBarrier"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::OperationsBarrier", %"class.v8::internal::OperationsBarrier"* %0, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %2) #2
  %3 = getelementptr inbounds %"class.v8::internal::OperationsBarrier", %"class.v8::internal::OperationsBarrier"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, -1
  store i64 %5, i64* %3, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::OperationsBarrier", %"class.v8::internal::OperationsBarrier"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.v8::internal::OperationsBarrier", %"class.v8::internal::OperationsBarrier"* %0, i64 0, i32 1
  tail call void @_ZN2v84base17ConditionVariable9NotifyOneEv(%"class.v8::base::ConditionVariable"* %12) #2
  br label %13

13:                                               ; preds = %7, %11, %1
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2) #2
  ret void
}

declare void @_ZN2v84base17ConditionVariable9NotifyOneEv(%"class.v8::base::ConditionVariable"*) local_unnamed_addr #1

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #1

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
