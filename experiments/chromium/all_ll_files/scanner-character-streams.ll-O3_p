; ModuleID = '../../v8/src/parsing/scanner-character-streams.cc'
source_filename = "../../v8/src/parsing/scanner-character-streams.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.1173" = type { %"struct.std::__1::__atomic_base.1174" }
%"struct.std::__1::__atomic_base.1174" = type { %"struct.std::__1::__atomic_base.1175" }
%"struct.std::__1::__atomic_base.1175" = type { %"struct.std::__1::__cxx_atomic_impl.1176" }
%"struct.std::__1::__cxx_atomic_impl.1176" = type { %"struct.std::__1::__cxx_atomic_base_impl.1177" }
%"struct.std::__1::__cxx_atomic_base_impl.1177" = type { i32 }
%"class.v8::internal::BufferedUtf16CharacterStream" = type { %"class.v8::internal::Utf16CharacterStream.base", [512 x i16], [6 x i8] }
%"class.v8::internal::Utf16CharacterStream.base" = type <{ i32 (...)**, i16*, i16*, i16*, i64, %"class.v8::internal::RuntimeCallStats"*, i8 }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.0", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.0" = type { i64 }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::Utf8ExternalStreamingStream" = type { %"class.v8::internal::BufferedUtf16CharacterStream.base", %"class.std::__1::vector", %"struct.v8::internal::Utf8ExternalStreamingStream::Position", %"class.v8::ScriptCompiler::ExternalSourceStream"* }
%"class.v8::internal::BufferedUtf16CharacterStream.base" = type { %"class.v8::internal::Utf16CharacterStream.base", [512 x i16] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"*, %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"*, %"class.std::__1::__compressed_pair" }
%"struct.v8::internal::Utf8ExternalStreamingStream::Chunk" = type { i8*, i64, %"struct.v8::internal::Utf8ExternalStreamingStream::StreamPosition" }
%"struct.v8::internal::Utf8ExternalStreamingStream::StreamPosition" = type { i64, i64, i32, i8 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* }
%"struct.v8::internal::Utf8ExternalStreamingStream::Position" = type { i64, %"struct.v8::internal::Utf8ExternalStreamingStream::StreamPosition" }
%"class.v8::ScriptCompiler::ExternalSourceStream" = type { i32 (...)** }
%"class.v8::internal::RuntimeCallTimerScope" = type { %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::Utf16CharacterStream" = type <{ i32 (...)**, i16*, i16*, i16*, i64, %"class.v8::internal::RuntimeCallStats"*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.653", %"class.std::__1::unique_ptr.674", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.684", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.822", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.835", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.845", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.856", %"struct.std::__1::atomic.160", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.931", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.974"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.982", i32, i8, i8, i32, i32, %"class.std::__1::vector.988", %"class.std::__1::vector.988", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.995", i64, %"class.std::__1::unordered_map.996", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.549", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.168", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1052", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1090", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1124", %"class.std::__1::vector.1128", %"class.std::__1::vector.1128", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.25", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.25", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.25", i64, i64, %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.35", %"class.std::__1::vector.39", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.154", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.169", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.25", i64, i8, %"struct.std::__1::atomic.25", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.173", %"class.std::__1::vector.173", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.186", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.322", %"class.std::__1::unique_ptr.328", %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.406", %"class.std::__1::unique_ptr.436", %"class.std::__1::unique_ptr.442", %"class.std::__1::unique_ptr.452", %"class.std::__1::unique_ptr.458", %"class.std::__1::unique_ptr.458", %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.470", %"class.std::__1::unique_ptr.470", %"class.std::__1::unique_ptr.476", %"class.std::__1::unique_ptr.482", %"class.std::__1::shared_ptr.488", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.511", %"class.std::__1::unique_ptr.537", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.543", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.556", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.338", i8, [7 x i8], %"class.std::__1::unordered_map.562", %"class.std::__1::unordered_map.588", %"class.std::__1::unordered_map.562", %"class.std::__1::unordered_map.612", %"class.std::__1::vector.640", i8, %"class.std::__1::unique_ptr.647", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.6", %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.22", [4 x i8] }>
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8", %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i64 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.30", %"struct.std::__1::atomic.30", %"struct.std::__1::atomic.30" }
%"struct.std::__1::atomic.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__cxx_atomic_impl.33" }
%"struct.std::__1::__cxx_atomic_impl.33" = type { %"struct.std::__1::__cxx_atomic_base_impl.34" }
%"struct.std::__1::__cxx_atomic_base_impl.34" = type { i64 }
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__cxx_atomic_impl.37" }
%"struct.std::__1::__cxx_atomic_impl.37" = type { %"struct.std::__1::__cxx_atomic_base_impl.38" }
%"struct.std::__1::__cxx_atomic_base_impl.38" = type { i32 }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.41" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.111" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.25"*, %"class.std::__1::unique_ptr.105" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.25", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.46", %"class.std::__1::vector.46", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.48" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.53" }
%"class.std::__1::__hash_table.53" = type <{ %"class.std::__1::unique_ptr.54", %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.71", [4 x i8] }>
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56", %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.std::__1::__hash_node_base.57"** }
%"struct.std::__1::__hash_node_base.57" = type { %"struct.std::__1::__hash_node_base.57"* }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.std::__1::__bucket_list_deallocator.59" }
%"class.std::__1::__bucket_list_deallocator.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.std::__1::__hash_node_base.57" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.30", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.94", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.25"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.30", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.30", %"struct.std::__1::atomic.76", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.76" = type { %"struct.std::__1::__atomic_base.77" }
%"struct.std::__1::__atomic_base.77" = type { %"struct.std::__1::__cxx_atomic_impl.78" }
%"struct.std::__1::__cxx_atomic_impl.78" = type { %"struct.std::__1::__cxx_atomic_base_impl.79" }
%"struct.std::__1::__cxx_atomic_base_impl.79" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.80" }
%"class.std::__1::vector.80" = type { %"class.std::__1::__vector_base.81" }
%"class.std::__1::__vector_base.81" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.82" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.87", %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::atomic.94" = type { %"struct.std::__1::__atomic_base.95" }
%"struct.std::__1::__atomic_base.95" = type { %"struct.std::__1::__cxx_atomic_impl.96" }
%"struct.std::__1::__cxx_atomic_impl.96" = type { %"struct.std::__1::__cxx_atomic_base_impl.97" }
%"struct.std::__1::__cxx_atomic_base_impl.97" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.98", i8, [7 x i8] }>
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { i64*, i64*, %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.25", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.111" = type { %"class.std::__1::__vector_base.112" }
%"class.std::__1::__vector_base.112" = type { %"struct.std::__1::pair.113"*, %"struct.std::__1::pair.113"*, %"class.std::__1::__compressed_pair.114" }
%"struct.std::__1::pair.113" = type { i32, i64 }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::pair.113"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.25", i64, %"struct.std::__1::atomic.25" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.25", i32, %"struct.std::__1::atomic.25", %"class.v8::base::Mutex", %"struct.std::__1::atomic.25" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.119" }
%"class.std::__1::unordered_map.119" = type { %"class.std::__1::__hash_table.120" }
%"class.std::__1::__hash_table.120" = type <{ %"class.std::__1::unique_ptr.121", %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.141", [4 x i8] }>
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123", %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::__hash_node_base.124"** }
%"struct.std::__1::__hash_node_base.124" = type { %"struct.std::__1::__hash_node_base.124"* }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.std::__1::__bucket_list_deallocator.126" }
%"class.std::__1::__bucket_list_deallocator.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::__hash_node_base.124" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.147", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.147" = type { %"class.std::__1::__vector_base.148" }
%"class.std::__1::__vector_base.148" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.149" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1057", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1061", %"class.std::__1::unique_ptr.1067", %"class.std::__1::unique_ptr.482", %"class.std::__1::vector.1073", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1057" = type { %"struct.std::__1::__atomic_base.1058" }
%"struct.std::__1::__atomic_base.1058" = type { %"struct.std::__1::__cxx_atomic_impl.1059" }
%"struct.std::__1::__cxx_atomic_impl.1059" = type { %"struct.std::__1::__cxx_atomic_base_impl.1060" }
%"struct.std::__1::__cxx_atomic_base_impl.1060" = type { i32 }
%"class.std::__1::unique_ptr.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i64**, i64**, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i64** }
%"class.std::__1::unique_ptr.1067" = type { %"class.std::__1::__compressed_pair.1068" }
%"class.std::__1::__compressed_pair.1068" = type { %"struct.std::__1::__compressed_pair_elem.1069" }
%"struct.std::__1::__compressed_pair_elem.1069" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.815", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1073" = type { %"class.std::__1::__vector_base.1074" }
%"class.std::__1::__vector_base.1074" = type { %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"*, %"class.std::__1::__compressed_pair.1076" }
%"struct.std::__1::pair.1075" = type opaque
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"struct.std::__1::pair.1075"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.160", %"struct.std::__1::atomic.164", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.25" }
%"struct.std::__1::atomic.164" = type { %"struct.std::__1::__atomic_base.165" }
%"struct.std::__1::__atomic_base.165" = type { %"struct.std::__1::__cxx_atomic_impl.166" }
%"struct.std::__1::__cxx_atomic_impl.166" = type { %"struct.std::__1::__cxx_atomic_base_impl.167" }
%"struct.std::__1::__cxx_atomic_base_impl.167" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.25", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.168" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.169" = type { %"struct.std::__1::__atomic_base.170" }
%"struct.std::__1::__atomic_base.170" = type { %"struct.std::__1::__cxx_atomic_impl.171" }
%"struct.std::__1::__cxx_atomic_impl.171" = type { %"struct.std::__1::__cxx_atomic_base_impl.172" }
%"struct.std::__1::__cxx_atomic_base_impl.172" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i64 }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.175" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.234", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.288", %"class.std::__1::vector.288", %"class.std::__1::vector.288", %"class.std::__1::vector.295", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.189", %"class.std::__1::vector.190", %"class.std::__1::vector.197", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.189" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.25" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.190" = type { %"class.std::__1::__vector_base.191" }
%"class.std::__1::__vector_base.191" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.192" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.197" = type { %"class.std::__1::__vector_base.198" }
%"class.std::__1::__vector_base.198" = type { %"class.std::__1::unique_ptr.199"*, %"class.std::__1::unique_ptr.199"*, %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::unique_ptr.199" = type opaque
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.std::__1::unique_ptr.199"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.25" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211", %"class.v8::internal::Worklist.213", %"class.v8::internal::Worklist.215", %"class.v8::internal::Worklist.217", %"class.v8::internal::Worklist.219" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.25" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.25" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.25" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.25" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.25" }
%"class.v8::internal::Worklist.213" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.25" }
%"class.v8::internal::Worklist.215" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.25" }
%"class.v8::internal::Worklist.217" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.25" }
%"class.v8::internal::Worklist.219" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.25" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.221", i8, i64 }
%"class.std::__1::vector.221" = type { %"class.std::__1::__vector_base.222" }
%"class.std::__1::__vector_base.222" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.237" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.189"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.237" = type { %"class.std::__1::__hash_table.238" }
%"class.std::__1::__hash_table.238" = type <{ %"class.std::__1::unique_ptr.239", %"class.std::__1::__compressed_pair.249", %"class.std::__1::__compressed_pair.254", %"class.std::__1::__compressed_pair.257", [4 x i8] }>
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241", %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"struct.std::__1::__hash_node_base.242"** }
%"struct.std::__1::__hash_node_base.242" = type { %"struct.std::__1::__hash_node_base.242"* }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.std::__1::__bucket_list_deallocator.244" }
%"class.std::__1::__bucket_list_deallocator.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"struct.std::__1::__hash_node_base.242" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.264" }
%"class.std::__1::unordered_map.264" = type { %"class.std::__1::__hash_table.265" }
%"class.std::__1::__hash_table.265" = type <{ %"class.std::__1::unique_ptr.266", %"class.std::__1::__compressed_pair.276", %"class.std::__1::__compressed_pair.281", %"class.std::__1::__compressed_pair.284", [4 x i8] }>
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268", %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.std::__1::__hash_node_base.269"** }
%"struct.std::__1::__hash_node_base.269" = type { %"struct.std::__1::__hash_node_base.269"* }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.std::__1::__bucket_list_deallocator.271" }
%"class.std::__1::__bucket_list_deallocator.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"struct.std::__1::__hash_node_base.269" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::vector.288" = type { %"class.std::__1::__vector_base.289" }
%"class.std::__1::__vector_base.289" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.295" = type { %"class.std::__1::__vector_base.296" }
%"class.std::__1::__vector_base.296" = type { %"struct.std::__1::pair.297"*, %"struct.std::__1::pair.297"*, %"class.std::__1::__compressed_pair.298" }
%"struct.std::__1::pair.297" = type opaque
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"struct.std::__1::pair.297"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.303", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.288"], [3 x %"class.std::__1::vector.288"], i8, %"struct.std::__1::atomic.160", [6 x i8], %"class.std::__1::vector.288", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.313"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.288", %"class.std::__1::vector.288", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.313" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.338", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.331"], %"class.std::__1::unique_ptr.303" }
%"class.std::__1::vector.331" = type { %"class.std::__1::__vector_base.332" }
%"class.std::__1::__vector_base.332" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.370", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.374", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.379" }
%"struct.std::__1::atomic.370" = type { %"struct.std::__1::__atomic_base.371" }
%"struct.std::__1::__atomic_base.371" = type { %"struct.std::__1::__cxx_atomic_impl.372" }
%"struct.std::__1::__cxx_atomic_impl.372" = type { %"struct.std::__1::__cxx_atomic_base_impl.373" }
%"struct.std::__1::__cxx_atomic_base_impl.373" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.374" = type { %"struct.std::__1::__atomic_base.375" }
%"struct.std::__1::__atomic_base.375" = type { %"struct.std::__1::__cxx_atomic_impl.376" }
%"struct.std::__1::__cxx_atomic_impl.376" = type { %"struct.std::__1::__cxx_atomic_base_impl.377" }
%"struct.std::__1::__cxx_atomic_base_impl.377" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.379" = type { %"class.std::__1::__hash_table.380" }
%"class.std::__1::__hash_table.380" = type <{ %"class.std::__1::unique_ptr.381", %"class.std::__1::__compressed_pair.391", %"class.std::__1::__compressed_pair.396", %"class.std::__1::__compressed_pair.399", [4 x i8] }>
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383", %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"struct.std::__1::__hash_node_base.384"** }
%"struct.std::__1::__hash_node_base.384" = type { %"struct.std::__1::__hash_node_base.384"* }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"class.std::__1::__bucket_list_deallocator.386" }
%"class.std::__1::__bucket_list_deallocator.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"struct.std::__1::__hash_node_base.384" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.303", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.160", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.409", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.409" = type { %"class.std::__1::__hash_table.410" }
%"class.std::__1::__hash_table.410" = type <{ %"class.std::__1::unique_ptr.411", %"class.std::__1::__compressed_pair.421", %"class.std::__1::__compressed_pair.426", %"class.std::__1::__compressed_pair.429", [4 x i8] }>
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413", %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"struct.std::__1::__hash_node_base.414"** }
%"struct.std::__1::__hash_node_base.414" = type { %"struct.std::__1::__hash_node_base.414"* }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.std::__1::__bucket_list_deallocator.416" }
%"class.std::__1::__bucket_list_deallocator.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"struct.std::__1::__hash_node_base.414" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.442" = type { %"class.std::__1::__compressed_pair.443" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.445" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.488" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.507", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.489", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.489" = type { %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.492", %"class.std::__1::set.500" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.494", %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::set.500" = type { %"class.std::__1::__tree.501" }
%"class.std::__1::__tree.501" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.494", %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::atomic.507" = type { %"struct.std::__1::__atomic_base.508" }
%"struct.std::__1::__atomic_base.508" = type { %"struct.std::__1::__cxx_atomic_impl.509" }
%"struct.std::__1::__cxx_atomic_impl.509" = type { %"struct.std::__1::__cxx_atomic_base_impl.510" }
%"struct.std::__1::__cxx_atomic_base_impl.510" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.511" = type { %"class.std::__1::__hash_table.512" }
%"class.std::__1::__hash_table.512" = type <{ %"class.std::__1::unique_ptr.513", %"class.std::__1::__compressed_pair.523", %"class.std::__1::__compressed_pair.528", %"class.std::__1::__compressed_pair.531", [4 x i8] }>
%"class.std::__1::unique_ptr.513" = type { %"class.std::__1::__compressed_pair.514" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515", %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"struct.std::__1::__hash_node_base.516"** }
%"struct.std::__1::__hash_node_base.516" = type { %"struct.std::__1::__hash_node_base.516"* }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"class.std::__1::__bucket_list_deallocator.518" }
%"class.std::__1::__bucket_list_deallocator.518" = type { %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"struct.std::__1::__hash_node_base.516" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::unique_ptr.537" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.543" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.549", %"class.std::__1::vector.549" }
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.338" = type { %"class.std::__1::__hash_table.339" }
%"class.std::__1::__hash_table.339" = type <{ %"class.std::__1::unique_ptr.340", %"class.std::__1::__compressed_pair.350", %"class.std::__1::__compressed_pair.355", %"class.std::__1::__compressed_pair.359", [4 x i8] }>
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342", %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"struct.std::__1::__hash_node_base.343"** }
%"struct.std::__1::__hash_node_base.343" = type { %"struct.std::__1::__hash_node_base.343"* }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.std::__1::__bucket_list_deallocator.345" }
%"class.std::__1::__bucket_list_deallocator.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"struct.std::__1::__hash_node_base.343" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::unordered_map.588" = type { %"class.std::__1::__hash_table.589" }
%"class.std::__1::__hash_table.589" = type <{ %"class.std::__1::unique_ptr.590", %"class.std::__1::__compressed_pair.600", %"class.std::__1::__compressed_pair.605", %"class.std::__1::__compressed_pair.608", [4 x i8] }>
%"class.std::__1::unique_ptr.590" = type { %"class.std::__1::__compressed_pair.591" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.592", %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.592" = type { %"struct.std::__1::__hash_node_base.593"** }
%"struct.std::__1::__hash_node_base.593" = type { %"struct.std::__1::__hash_node_base.593"* }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.std::__1::__bucket_list_deallocator.595" }
%"class.std::__1::__bucket_list_deallocator.595" = type { %"class.std::__1::__compressed_pair.596" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.601" }
%"struct.std::__1::__compressed_pair_elem.601" = type { %"struct.std::__1::__hash_node_base.593" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::unordered_map.562" = type { %"class.std::__1::__hash_table.563" }
%"class.std::__1::__hash_table.563" = type <{ %"class.std::__1::unique_ptr.564", %"class.std::__1::__compressed_pair.574", %"class.std::__1::__compressed_pair.579", %"class.std::__1::__compressed_pair.582", [4 x i8] }>
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566", %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"struct.std::__1::__hash_node_base.567"** }
%"struct.std::__1::__hash_node_base.567" = type { %"struct.std::__1::__hash_node_base.567"* }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"class.std::__1::__bucket_list_deallocator.569" }
%"class.std::__1::__bucket_list_deallocator.569" = type { %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"struct.std::__1::__hash_node_base.567" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::unordered_map.612" = type { %"class.std::__1::__hash_table.613" }
%"class.std::__1::__hash_table.613" = type <{ %"class.std::__1::unique_ptr.614", %"class.std::__1::__compressed_pair.624", %"class.std::__1::__compressed_pair.629", %"class.std::__1::__compressed_pair.634", [4 x i8] }>
%"class.std::__1::unique_ptr.614" = type { %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.616", %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.616" = type { %"struct.std::__1::__hash_node_base.617"** }
%"struct.std::__1::__hash_node_base.617" = type { %"struct.std::__1::__hash_node_base.617"* }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"class.std::__1::__bucket_list_deallocator.619" }
%"class.std::__1::__bucket_list_deallocator.619" = type { %"class.std::__1::__compressed_pair.620" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"struct.std::__1::__hash_node_base.617" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::vector.640" = type { %"class.std::__1::__vector_base.641" }
%"class.std::__1::__vector_base.641" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.642" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.549" }
%"class.std::__1::shared_ptr.653" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.147", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.654", %"class.std::__1::unique_ptr.668" }
%"class.std::__1::unique_ptr.654" = type { %"class.std::__1::__compressed_pair.655" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.656" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.657" }
%"class.std::__1::vector.657" = type { %"class.std::__1::__vector_base.658" }
%"class.std::__1::__vector_base.658" = type { %"class.std::__1::unique_ptr.659"*, %"class.std::__1::unique_ptr.659"*, %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::unique_ptr.659" = type { %"class.std::__1::__compressed_pair.1168" }
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.1169" }
%"struct.std::__1::__compressed_pair_elem.1169" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.661" }
%"struct.std::__1::__compressed_pair_elem.661" = type { %"class.std::__1::unique_ptr.659"* }
%"class.std::__1::unique_ptr.668" = type { %"class.std::__1::__compressed_pair.669" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.674" = type { %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.677", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.677" = type { %"struct.std::__1::__atomic_base.678" }
%"struct.std::__1::__atomic_base.678" = type { %"struct.std::__1::__cxx_atomic_impl.679" }
%"struct.std::__1::__cxx_atomic_impl.679" = type { %"struct.std::__1::__cxx_atomic_base_impl.680" }
%"struct.std::__1::__cxx_atomic_base_impl.680" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.684" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.685", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.685" = type { %"class.std::__1::__vector_base.686" }
%"class.std::__1::__vector_base.686" = type { %"class.std::__1::unique_ptr.687"*, %"class.std::__1::unique_ptr.687"*, %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::unique_ptr.687" = type opaque
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.std::__1::unique_ptr.687"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.693", %"class.std::__1::unique_ptr.699", %"struct.std::__1::atomic.160", %"class.std::__1::unique_ptr.705", %"class.std::__1::unique_ptr.711", %"class.std::__1::unique_ptr.717", %"class.std::__1::unique_ptr.723", %"class.std::__1::unique_ptr.729", %"class.std::__1::set.735", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.735" = type { %"class.std::__1::__tree.736" }
%"class.std::__1::__tree.736" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.737", %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.744" }
%"class.v8::internal::TaggedImpl.744" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.743" }
%"class.v8::internal::TaggedImpl.743" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.751", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.751" = type { %"class.std::__1::__compressed_pair.752" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.757", %"class.v8::internal::DetachableVector.758", %"class.v8::internal::DetachableVector.757", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.758" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.757" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25", %"class.std::__1::unique_ptr.745", %"class.std::__1::unique_ptr.489" }
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.759", %"class.std::__1::vector.765", %"class.std::__1::unique_ptr.772", %"class.std::__1::vector.779", %"class.std::__1::unique_ptr.786", i64, %"class.std::__1::vector.792", %"class.std::__1::vector.800", %"class.std::__1::vector.808", i8, i8, i32 }
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.765" = type { %"class.std::__1::__vector_base.766" }
%"class.std::__1::__vector_base.766" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.767" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.772" = type { %"class.std::__1::__compressed_pair.773" }
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.774" }
%"struct.std::__1::__compressed_pair_elem.774" = type { %"class.v8::internal::GlobalHandles::NodeSpace.775"* }
%"class.v8::internal::GlobalHandles::NodeSpace.775" = type opaque
%"class.std::__1::vector.779" = type { %"class.std::__1::__vector_base.780" }
%"class.std::__1::__vector_base.780" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.781" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.792" = type { %"class.std::__1::__vector_base.793" }
%"class.std::__1::__vector_base.793" = type { %"struct.std::__1::pair.794"*, %"struct.std::__1::pair.794"*, %"class.std::__1::__compressed_pair.795" }
%"struct.std::__1::pair.794" = type opaque
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"struct.std::__1::pair.794"* }
%"class.std::__1::vector.800" = type { %"class.std::__1::__vector_base.801" }
%"class.std::__1::__vector_base.801" = type { %"struct.std::__1::pair.802"*, %"struct.std::__1::pair.802"*, %"class.std::__1::__compressed_pair.803" }
%"struct.std::__1::pair.802" = type opaque
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.std::__1::pair.802"* }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.810" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.815", %"class.std::__1::vector.822" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.829" }
%"class.std::__1::unique_ptr.829" = type { %"class.std::__1::__compressed_pair.830" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.831" }
%"struct.std::__1::__compressed_pair_elem.831" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.822" = type { %"class.std::__1::__vector_base.823" }
%"class.std::__1::__vector_base.823" = type { i32*, i32*, %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.835" = type { %"struct.std::__1::__atomic_base.836" }
%"struct.std::__1::__atomic_base.836" = type { %"struct.std::__1::__cxx_atomic_impl.837" }
%"struct.std::__1::__cxx_atomic_impl.837" = type { %"struct.std::__1::__cxx_atomic_base_impl.838" }
%"struct.std::__1::__cxx_atomic_base_impl.838" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.845" = type { %"struct.std::__1::__atomic_base.846" }
%"struct.std::__1::__atomic_base.846" = type { %"struct.std::__1::__cxx_atomic_impl.847" }
%"struct.std::__1::__cxx_atomic_impl.847" = type { %"struct.std::__1::__cxx_atomic_base_impl.848" }
%"struct.std::__1::__cxx_atomic_base_impl.848" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.852 }
%union.anon.852 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.856" = type { %"class.std::__1::__hash_table.857" }
%"class.std::__1::__hash_table.857" = type <{ %"class.std::__1::unique_ptr.858", %"class.std::__1::__compressed_pair.868", %"class.std::__1::__compressed_pair.873", %"class.std::__1::__compressed_pair.876", [4 x i8] }>
%"class.std::__1::unique_ptr.858" = type { %"class.std::__1::__compressed_pair.859" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.860", %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.860" = type { %"struct.std::__1::__hash_node_base.861"** }
%"struct.std::__1::__hash_node_base.861" = type { %"struct.std::__1::__hash_node_base.861"* }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.std::__1::__bucket_list_deallocator.863" }
%"class.std::__1::__bucket_list_deallocator.863" = type { %"class.std::__1::__compressed_pair.864" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"struct.std::__1::__hash_node_base.861" }
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::atomic.160" = type { %"struct.std::__1::__atomic_base.161" }
%"struct.std::__1::__atomic_base.161" = type { %"struct.std::__1::__cxx_atomic_impl.162" }
%"struct.std::__1::__cxx_atomic_impl.162" = type { %"struct.std::__1::__cxx_atomic_base_impl.163" }
%"struct.std::__1::__cxx_atomic_base_impl.163" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.882", %"class.v8::internal::Handle.888", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.889", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.882" = type { %"class.std::__1::__compressed_pair.883" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.884" }
%"struct.std::__1::__compressed_pair_elem.884" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.888" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.889" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.890", %"class.std::__1::vector.896", %"class.std::__1::unique_ptr.904", %"class.std::__1::unique_ptr.910", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.916", %"class.std::__1::vector.922", %"struct.std::__1::pair.930" }
%"class.std::__1::unique_ptr.890" = type { %"class.std::__1::__compressed_pair.891" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.892" }
%"struct.std::__1::__compressed_pair_elem.892" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.896" = type { %"class.std::__1::__vector_base.897" }
%"class.std::__1::__vector_base.897" = type { %"class.std::__1::unique_ptr.898"*, %"class.std::__1::unique_ptr.898"*, %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::unique_ptr.898" = type opaque
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.std::__1::unique_ptr.898"* }
%"class.std::__1::unique_ptr.904" = type { %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.916" = type { %"class.std::__1::__compressed_pair.917" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.918" }
%"struct.std::__1::__compressed_pair_elem.918" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.922" = type { %"class.std::__1::__vector_base.923" }
%"class.std::__1::__vector_base.923" = type { %"struct.std::__1::pair.924"*, %"struct.std::__1::pair.924"*, %"class.std::__1::__compressed_pair.925" }
%"struct.std::__1::pair.924" = type opaque
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"struct.std::__1::pair.924"* }
%"struct.std::__1::pair.930" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.2"*, i16, i8*)*, i8* }
%"class.v8::Local.2" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.934", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.934" = type { %"class.std::__1::__hash_table.935" }
%"class.std::__1::__hash_table.935" = type <{ %"class.std::__1::unique_ptr.936", %"class.std::__1::__compressed_pair.946", %"class.std::__1::__compressed_pair.951", %"class.std::__1::__compressed_pair.955", [4 x i8] }>
%"class.std::__1::unique_ptr.936" = type { %"class.std::__1::__compressed_pair.937" }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.938", %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.938" = type { %"struct.std::__1::__hash_node_base.939"** }
%"struct.std::__1::__hash_node_base.939" = type { %"struct.std::__1::__hash_node_base.939"* }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"class.std::__1::__bucket_list_deallocator.941" }
%"class.std::__1::__bucket_list_deallocator.941" = type { %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.947" }
%"struct.std::__1::__compressed_pair_elem.947" = type { %"struct.std::__1::__hash_node_base.939" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.969" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.963"**, %"struct.std::__1::pair.963"**, %"struct.std::__1::pair.963"**, %"class.std::__1::__compressed_pair.964" }
%"struct.std::__1::pair.963" = type opaque
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.965" }
%"struct.std::__1::__compressed_pair_elem.965" = type { %"struct.std::__1::pair.963"** }
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.974" = type { %"class.std::__1::__vector_base.975" }
%"class.std::__1::__vector_base.975" = type { %"class.v8::internal::Handle.976"*, %"class.v8::internal::Handle.976"*, %"class.std::__1::__compressed_pair.977" }
%"class.v8::internal::Handle.976" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"class.v8::internal::Handle.976"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.840", i32, %"class.v8::Local.2" }
%"class.v8::Local.840" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.982" = type { %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.988" = type { %"class.std::__1::__vector_base.989" }
%"class.std::__1::__vector_base.989" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.990" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.995" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.996" = type { %"class.std::__1::__hash_table.997" }
%"class.std::__1::__hash_table.997" = type <{ %"class.std::__1::unique_ptr.998", %"class.std::__1::__compressed_pair.1008", %"class.std::__1::__compressed_pair.1013", %"class.std::__1::__compressed_pair.1016", [4 x i8] }>
%"class.std::__1::unique_ptr.998" = type { %"class.std::__1::__compressed_pair.999" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.1000", %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1000" = type { %"struct.std::__1::__hash_node_base.1001"** }
%"struct.std::__1::__hash_node_base.1001" = type { %"struct.std::__1::__hash_node_base.1001"* }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"class.std::__1::__bucket_list_deallocator.1003" }
%"class.std::__1::__bucket_list_deallocator.1003" = type { %"class.std::__1::__compressed_pair.1004" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.1008" = type { %"struct.std::__1::__compressed_pair_elem.1009" }
%"struct.std::__1::__compressed_pair_elem.1009" = type { %"struct.std::__1::__hash_node_base.1001" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.549" = type { %"class.std::__1::__vector_base.550" }
%"class.std::__1::__vector_base.550" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.168" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1020", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1049", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1050", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1020" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1045, %union.anon.1047, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1045 = type { i64 }
%union.anon.1047 = type { i64 }
%"class.std::__1::weak_ptr.1049" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1050" = type { %"class.v8::PersistentBase.1051" }
%"class.v8::PersistentBase.1051" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1021", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1021" = type { %"class.std::__1::__hash_table.1022" }
%"class.std::__1::__hash_table.1022" = type <{ %"class.std::__1::unique_ptr.1023", %"class.std::__1::__compressed_pair.1033", %"class.std::__1::__compressed_pair.1038", %"class.std::__1::__compressed_pair.1041", [4 x i8] }>
%"class.std::__1::unique_ptr.1023" = type { %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025", %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"struct.std::__1::__hash_node_base.1026"** }
%"struct.std::__1::__hash_node_base.1026" = type { %"struct.std::__1::__hash_node_base.1026"* }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"class.std::__1::__bucket_list_deallocator.1028" }
%"class.std::__1::__bucket_list_deallocator.1028" = type { %"class.std::__1::__compressed_pair.1029" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.1034" }
%"struct.std::__1::__compressed_pair_elem.1034" = type { %"struct.std::__1::__hash_node_base.1026" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1052" = type { %"class.std::__1::__compressed_pair.1053" }
%"class.std::__1::__compressed_pair.1053" = type { %"struct.std::__1::__compressed_pair_elem.1054" }
%"struct.std::__1::__compressed_pair_elem.1054" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1081", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1090" = type { %"class.std::__1::__compressed_pair.1091" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.1092" }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.841", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.841" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1098" }
%"class.std::__1::unordered_map.1098" = type { %"class.std::__1::__hash_table.1099" }
%"class.std::__1::__hash_table.1099" = type <{ %"class.std::__1::unique_ptr.1100", %"class.std::__1::__compressed_pair.1110", %"class.std::__1::__compressed_pair.1115", %"class.std::__1::__compressed_pair.1118", [4 x i8] }>
%"class.std::__1::unique_ptr.1100" = type { %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.1102", %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %"struct.std::__1::__hash_node_base.1103"** }
%"struct.std::__1::__hash_node_base.1103" = type { %"struct.std::__1::__hash_node_base.1103"* }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"class.std::__1::__bucket_list_deallocator.1105" }
%"class.std::__1::__bucket_list_deallocator.1105" = type { %"class.std::__1::__compressed_pair.1106" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.1111" }
%"struct.std::__1::__compressed_pair_elem.1111" = type { %"struct.std::__1::__hash_node_base.1103" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.1118" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1124" = type { %"struct.std::__1::__atomic_base.1125" }
%"struct.std::__1::__atomic_base.1125" = type { %"struct.std::__1::__cxx_atomic_impl.1126" }
%"struct.std::__1::__cxx_atomic_impl.1126" = type { %"struct.std::__1::__cxx_atomic_base_impl.1127" }
%"struct.std::__1::__cxx_atomic_base_impl.1127" = type { %"class.std::__1::vector.1128"* }
%"class.std::__1::vector.1128" = type { %"class.std::__1::__vector_base.1129" }
%"class.std::__1::__vector_base.1129" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1130" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.1131" }
%"struct.std::__1::__compressed_pair_elem.1131" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::ExternalStringStream" = type { %"class.v8::internal::ScopedExternalStringLock", i8*, i64 }
%"class.v8::internal::ScopedExternalStringLock" = type { %"class.v8::String::ExternalStringResourceBase"* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::internal::ExternalStringStream.1136" = type { %"class.v8::internal::ScopedExternalStringLock", i16*, i64 }
%"class.v8::internal::Windows1252CharacterStream" = type { %"class.v8::internal::Utf16CharacterStream.base", [512 x i16], %"class.v8::internal::ChunkedStream.1160" }
%"class.v8::internal::ChunkedStream.1160" = type { i32 (...)**, %"class.v8::ScriptCompiler::ExternalSourceStream"*, %"class.std::__1::vector.1161" }
%"class.std::__1::vector.1161" = type { %"class.std::__1::__vector_base.1162" }
%"class.std::__1::__vector_base.1162" = type { %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"class.std::__1::__compressed_pair.1163" }
%"struct.v8::internal::ChunkedStream<unsigned char>::Chunk" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.1164" }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* }
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i16* }
%"class.v8::internal::BufferedCharacterStream" = type { %"class.v8::internal::Utf16CharacterStream.base", [512 x i16], %"class.v8::internal::ExternalStringStream" }
%"class.v8::internal::UnbufferedCharacterStream" = type { %"class.v8::internal::Utf16CharacterStream.base", %"class.v8::internal::ExternalStringStream.1136" }
%"class.v8::internal::BufferedCharacterStream.1137" = type { %"class.v8::internal::Utf16CharacterStream.base", [512 x i16], %"class.v8::internal::OnHeapStream" }
%"class.v8::internal::OnHeapStream" = type { %"class.v8::internal::Handle.1138", i64, i64 }
%"class.v8::internal::Handle.1138" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::RelocatingCharacterStream" = type { %"class.v8::internal::UnbufferedCharacterStream.1139", %"class.v8::internal::Isolate"* }
%"class.v8::internal::UnbufferedCharacterStream.1139" = type { %"class.v8::internal::Utf16CharacterStream.base", %"class.v8::internal::OnHeapStream.1140" }
%"class.v8::internal::OnHeapStream.1140" = type { %"class.v8::internal::Handle.1141", i64, i64 }
%"class.v8::internal::Handle.1141" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::BufferedCharacterStream.1148" = type { %"class.v8::internal::Utf16CharacterStream.base", [512 x i16], %"class.v8::internal::TestingStream" }
%"class.v8::internal::TestingStream" = type { i8*, i64 }
%"class.v8::internal::UnbufferedCharacterStream.1149" = type { %"class.v8::internal::Utf16CharacterStream.base", %"class.v8::internal::TestingStream.1150" }
%"class.v8::internal::TestingStream.1150" = type { i16*, i64 }
%"class.v8::internal::UnbufferedCharacterStream.1151" = type { %"class.v8::internal::Utf16CharacterStream.base", %"class.v8::internal::ChunkedStream" }
%"class.v8::internal::ChunkedStream" = type { i32 (...)**, %"class.v8::ScriptCompiler::ExternalSourceStream"*, %"class.std::__1::vector.1152" }
%"class.std::__1::vector.1152" = type { %"class.std::__1::__vector_base.1153" }
%"class.std::__1::__vector_base.1153" = type { %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"*, %"class.std::__1::__compressed_pair.1154" }
%"struct.v8::internal::ChunkedStream<unsigned short>::Chunk" = type { i16*, i64, i64 }
%"class.std::__1::__compressed_pair.1154" = type { %"struct.std::__1::__compressed_pair_elem.1155" }
%"struct.std::__1::__compressed_pair_elem.1155" = type { %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* }
%"class.v8::internal::BufferedCharacterStream.1159" = type { %"class.v8::internal::Utf16CharacterStream.base", [512 x i16], %"class.v8::internal::ChunkedStream.1160" }

$_ZN2v88internal9CopyCharsIhtEEvPT0_PKT_m = comdat any

$_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE = comdat any

$_ZN2v88internal20Utf16CharacterStreamD2Ev = comdat any

$_ZN2v88internal28BufferedUtf16CharacterStreamD0Ev = comdat any

$_ZN2v88internal27Utf8ExternalStreamingStreamD2Ev = comdat any

$_ZN2v88internal27Utf8ExternalStreamingStreamD0Ev = comdat any

$_ZNK2v88internal27Utf8ExternalStreamingStream13can_be_clonedEv = comdat any

$_ZNK2v88internal27Utf8ExternalStreamingStream5CloneEv = comdat any

$_ZNK2v88internal27Utf8ExternalStreamingStream15can_access_heapEv = comdat any

$_ZN2v88internal26Windows1252CharacterStreamD2Ev = comdat any

$_ZN2v88internal26Windows1252CharacterStreamD0Ev = comdat any

$_ZNK2v88internal26Windows1252CharacterStream13can_be_clonedEv = comdat any

$_ZNK2v88internal26Windows1252CharacterStream5CloneEv = comdat any

$_ZNK2v88internal26Windows1252CharacterStream15can_access_heapEv = comdat any

$_ZN2v88internal26Windows1252CharacterStream9ReadBlockEv = comdat any

$_ZN2v88internal13ChunkedStreamIhE12ProcessChunkEPKhmm = comdat any

$_ZN2v88internal13ChunkedStreamIhE9FindChunkEmPNS0_16RuntimeCallStatsE = comdat any

$_ZN2v88internal20ExternalStringStreamIhEC2ENS0_21ExternalOneByteStringEmm = comdat any

$_ZN2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEED2Ev = comdat any

$_ZN2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEED0Ev = comdat any

$_ZNK2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEE13can_be_clonedEv = comdat any

$_ZNK2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEE5CloneEv = comdat any

$_ZNK2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEE15can_access_heapEv = comdat any

$_ZN2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEE9ReadBlockEv = comdat any

$_ZN2v88internal20ExternalStringStreamItEC2ENS0_21ExternalTwoByteStringEmm = comdat any

$_ZN2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEED2Ev = comdat any

$_ZN2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEED0Ev = comdat any

$_ZNK2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEE13can_be_clonedEv = comdat any

$_ZNK2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEE5CloneEv = comdat any

$_ZNK2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEE15can_access_heapEv = comdat any

$_ZN2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEE9ReadBlockEv = comdat any

$_ZN2v88internal23BufferedCharacterStreamINS0_12OnHeapStreamEED0Ev = comdat any

$_ZNK2v88internal23BufferedCharacterStreamINS0_12OnHeapStreamEE13can_be_clonedEv = comdat any

$_ZNK2v88internal23BufferedCharacterStreamINS0_12OnHeapStreamEE5CloneEv = comdat any

$_ZNK2v88internal23BufferedCharacterStreamINS0_12OnHeapStreamEE15can_access_heapEv = comdat any

$_ZN2v88internal23BufferedCharacterStreamINS0_12OnHeapStreamEE9ReadBlockEv = comdat any

$_ZN2v88internal25RelocatingCharacterStream28UpdateBufferPointersCallbackEPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPv = comdat any

$_ZN2v88internal25RelocatingCharacterStreamD2Ev = comdat any

$_ZN2v88internal25RelocatingCharacterStreamD0Ev = comdat any

$_ZNK2v88internal25UnbufferedCharacterStreamINS0_12OnHeapStreamEE13can_be_clonedEv = comdat any

$_ZNK2v88internal25UnbufferedCharacterStreamINS0_12OnHeapStreamEE5CloneEv = comdat any

$_ZNK2v88internal25UnbufferedCharacterStreamINS0_12OnHeapStreamEE15can_access_heapEv = comdat any

$_ZN2v88internal25UnbufferedCharacterStreamINS0_12OnHeapStreamEE9ReadBlockEv = comdat any

$_ZN2v88internal23BufferedCharacterStreamINS0_13TestingStreamEED0Ev = comdat any

$_ZNK2v88internal23BufferedCharacterStreamINS0_13TestingStreamEE13can_be_clonedEv = comdat any

$_ZNK2v88internal23BufferedCharacterStreamINS0_13TestingStreamEE5CloneEv = comdat any

$_ZNK2v88internal23BufferedCharacterStreamINS0_13TestingStreamEE15can_access_heapEv = comdat any

$_ZN2v88internal23BufferedCharacterStreamINS0_13TestingStreamEE9ReadBlockEv = comdat any

$_ZN2v88internal25UnbufferedCharacterStreamINS0_13TestingStreamEED0Ev = comdat any

$_ZNK2v88internal25UnbufferedCharacterStreamINS0_13TestingStreamEE13can_be_clonedEv = comdat any

$_ZNK2v88internal25UnbufferedCharacterStreamINS0_13TestingStreamEE5CloneEv = comdat any

$_ZNK2v88internal25UnbufferedCharacterStreamINS0_13TestingStreamEE15can_access_heapEv = comdat any

$_ZN2v88internal25UnbufferedCharacterStreamINS0_13TestingStreamEE9ReadBlockEv = comdat any

$_ZN2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEED2Ev = comdat any

$_ZN2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEED0Ev = comdat any

$_ZNK2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEE13can_be_clonedEv = comdat any

$_ZNK2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEE5CloneEv = comdat any

$_ZNK2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEE15can_access_heapEv = comdat any

$_ZN2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEE9ReadBlockEv = comdat any

$_ZN2v88internal13ChunkedStreamItE12ProcessChunkEPKhmm = comdat any

$_ZN2v88internal13ChunkedStreamItE9FindChunkEmPNS0_16RuntimeCallStatsE = comdat any

$_ZN2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEED2Ev = comdat any

$_ZN2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEED0Ev = comdat any

$_ZNK2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEE13can_be_clonedEv = comdat any

$_ZNK2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEE5CloneEv = comdat any

$_ZNK2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEE15can_access_heapEv = comdat any

$_ZN2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEE9ReadBlockEv = comdat any

$_ZTVN2v88internal26Windows1252CharacterStreamE = comdat any

$_ZTVN2v88internal13ChunkedStreamIhEE = comdat any

$_ZTVN2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEEE = comdat any

$_ZTVN2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEEE = comdat any

$_ZTVN2v88internal23BufferedCharacterStreamINS0_12OnHeapStreamEEE = comdat any

$_ZTVN2v88internal25RelocatingCharacterStreamE = comdat any

$_ZTVN2v88internal23BufferedCharacterStreamINS0_13TestingStreamEEE = comdat any

$_ZTVN2v88internal25UnbufferedCharacterStreamINS0_13TestingStreamEEE = comdat any

$_ZTVN2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEEE = comdat any

$_ZTVN2v88internal13ChunkedStreamItEE = comdat any

$_ZTVN2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEEE = comdat any

@_ZTVN2v88internal28BufferedUtf16CharacterStreamE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::Utf16CharacterStream"*)* @_ZN2v88internal20Utf16CharacterStreamD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::BufferedUtf16CharacterStream"*)* @_ZN2v88internal28BufferedUtf16CharacterStreamD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.v8::internal::BufferedUtf16CharacterStream"*)* @_ZN2v88internal28BufferedUtf16CharacterStream9ReadBlockEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZZN2v88internal13ScannerStream10ForTestingEPKcmE21non_null_empty_string = internal constant [1 x i8] zeroinitializer, align 1
@_ZZN2v88internal13ScannerStream10ForTestingEPKtmE30non_null_empty_uint16_t_string = internal constant [1 x i16] zeroinitializer, align 2
@_ZTVN2v88internal27Utf8ExternalStreamingStreamE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::Utf8ExternalStreamingStream"*)* @_ZN2v88internal27Utf8ExternalStreamingStreamD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::Utf8ExternalStreamingStream"*)* @_ZN2v88internal27Utf8ExternalStreamingStreamD0Ev to i8*), i8* bitcast (i1 (%"class.v8::internal::Utf8ExternalStreamingStream"*)* @_ZNK2v88internal27Utf8ExternalStreamingStream13can_be_clonedEv to i8*), i8* bitcast (%"class.v8::internal::Utf16CharacterStream"* (%"class.v8::internal::Utf8ExternalStreamingStream"*)* @_ZNK2v88internal27Utf8ExternalStreamingStream5CloneEv to i8*), i8* bitcast (i1 (%"class.v8::internal::Utf8ExternalStreamingStream"*)* @_ZNK2v88internal27Utf8ExternalStreamingStream15can_access_heapEv to i8*), i8* bitcast (i1 (%"class.v8::internal::BufferedUtf16CharacterStream"*)* @_ZN2v88internal28BufferedUtf16CharacterStream9ReadBlockEv to i8*), i8* bitcast (i64 (%"class.v8::internal::Utf8ExternalStreamingStream"*, i64)* @_ZN2v88internal27Utf8ExternalStreamingStream10FillBufferEm to i8*)] }, align 8
@_ZZN14Utf8DfaDecoderL6DecodeEhPNS_5StateEPjE11transitions = internal unnamed_addr constant [256 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\09\09\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\0A\05\05\05\05\05\05\05\05\05\05\05\05\06\05\05\0B\07\07\07\08\09\09\09\09\09\09\09\09\09\09\09", align 16
@_ZZN14Utf8DfaDecoderL6DecodeEhPNS_5StateEPjE6states = internal unnamed_addr constant <{ [100 x i8], [8 x i8] }> <{ [100 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\0C\00\00\00\18$0<H\00T`\00\0C\0C\0C\00\00\00\00\00\00\00\00\00\18\18\18\00\00\00\00\00\00\00\00\00\18\18\00\00\00\00\00\00\00\00\00\00$$$\00\00\00\00\00\00\00\00\00$\00\00\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\00\00\00\00\00\00\00$$", [8 x i8] zeroinitializer }>, align 16
@_ZN2v88internal12TracingFlags13runtime_statsE = external local_unnamed_addr global %"struct.std::__1::atomic.1173", align 4
@_ZTVN2v88internal26Windows1252CharacterStreamE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::Windows1252CharacterStream"*)* @_ZN2v88internal26Windows1252CharacterStreamD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::Windows1252CharacterStream"*)* @_ZN2v88internal26Windows1252CharacterStreamD0Ev to i8*), i8* bitcast (i1 (%"class.v8::internal::Windows1252CharacterStream"*)* @_ZNK2v88internal26Windows1252CharacterStream13can_be_clonedEv to i8*), i8* bitcast (%"class.v8::internal::Utf16CharacterStream"* (%"class.v8::internal::Windows1252CharacterStream"*)* @_ZNK2v88internal26Windows1252CharacterStream5CloneEv to i8*), i8* bitcast (i1 (%"class.v8::internal::Windows1252CharacterStream"*)* @_ZNK2v88internal26Windows1252CharacterStream15can_access_heapEv to i8*), i8* bitcast (i1 (%"class.v8::internal::Windows1252CharacterStream"*)* @_ZN2v88internal26Windows1252CharacterStream9ReadBlockEv to i8*)] }, comdat, align 8
@_ZTVN2v88internal13ChunkedStreamIhEE = linkonce_odr hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::ChunkedStream.1160"*, i8*, i64, i64)* @_ZN2v88internal13ChunkedStreamIhE12ProcessChunkEPKhmm to i8*)] }, comdat, align 8
@.str.2 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"can_be_cloned()\00", align 1
@_ZN2v88internal12_GLOBAL__N_118kWindows1252ToUC16E = internal unnamed_addr constant [256 x i16] [i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 8364, i16 129, i16 8218, i16 402, i16 8222, i16 8230, i16 8224, i16 8225, i16 710, i16 8240, i16 352, i16 8249, i16 338, i16 141, i16 381, i16 143, i16 144, i16 8216, i16 8217, i16 8220, i16 8221, i16 8226, i16 8211, i16 8212, i16 732, i16 8482, i16 353, i16 8250, i16 339, i16 157, i16 382, i16 376, i16 160, i16 161, i16 162, i16 163, i16 164, i16 165, i16 166, i16 167, i16 168, i16 169, i16 170, i16 171, i16 172, i16 173, i16 174, i16 175, i16 176, i16 177, i16 178, i16 179, i16 180, i16 181, i16 182, i16 183, i16 184, i16 185, i16 186, i16 187, i16 188, i16 189, i16 190, i16 191, i16 192, i16 193, i16 194, i16 195, i16 196, i16 197, i16 198, i16 199, i16 200, i16 201, i16 202, i16 203, i16 204, i16 205, i16 206, i16 207, i16 208, i16 209, i16 210, i16 211, i16 212, i16 213, i16 214, i16 215, i16 216, i16 217, i16 218, i16 219, i16 220, i16 221, i16 222, i16 223, i16 224, i16 225, i16 226, i16 227, i16 228, i16 229, i16 230, i16 231, i16 232, i16 233, i16 234, i16 235, i16 236, i16 237, i16 238, i16 239, i16 240, i16 241, i16 242, i16 243, i16 244, i16 245, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255], align 16
@_ZTVN2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEEE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::BufferedCharacterStream"*)* @_ZN2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEED2Ev to i8*), i8* bitcast (void (%"class.v8::internal::BufferedCharacterStream"*)* @_ZN2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEED0Ev to i8*), i8* bitcast (i1 (%"class.v8::internal::BufferedCharacterStream"*)* @_ZNK2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEE13can_be_clonedEv to i8*), i8* bitcast (%"class.v8::internal::Utf16CharacterStream"* (%"class.v8::internal::BufferedCharacterStream"*)* @_ZNK2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEE5CloneEv to i8*), i8* bitcast (i1 (%"class.v8::internal::BufferedCharacterStream"*)* @_ZNK2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEE15can_access_heapEv to i8*), i8* bitcast (i1 (%"class.v8::internal::BufferedCharacterStream"*)* @_ZN2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEE9ReadBlockEv to i8*)] }, comdat, align 8
@_ZTVN2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEEE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::UnbufferedCharacterStream"*)* @_ZN2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEED2Ev to i8*), i8* bitcast (void (%"class.v8::internal::UnbufferedCharacterStream"*)* @_ZN2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEED0Ev to i8*), i8* bitcast (i1 (%"class.v8::internal::UnbufferedCharacterStream"*)* @_ZNK2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEE13can_be_clonedEv to i8*), i8* bitcast (%"class.v8::internal::Utf16CharacterStream"* (%"class.v8::internal::UnbufferedCharacterStream"*)* @_ZNK2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEE5CloneEv to i8*), i8* bitcast (i1 (%"class.v8::internal::UnbufferedCharacterStream"*)* @_ZNK2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEE15can_access_heapEv to i8*), i8* bitcast (i1 (%"class.v8::internal::UnbufferedCharacterStream"*)* @_ZN2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEE9ReadBlockEv to i8*)] }, comdat, align 8
@_ZTVN2v88internal23BufferedCharacterStreamINS0_12OnHeapStreamEEE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::Utf16CharacterStream"*)* @_ZN2v88internal20Utf16CharacterStreamD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::BufferedCharacterStream.1137"*)* @_ZN2v88internal23BufferedCharacterStreamINS0_12OnHeapStreamEED0Ev to i8*), i8* bitcast (i1 (%"class.v8::internal::BufferedCharacterStream.1137"*)* @_ZNK2v88internal23BufferedCharacterStreamINS0_12OnHeapStreamEE13can_be_clonedEv to i8*), i8* bitcast (%"class.v8::internal::Utf16CharacterStream"* (%"class.v8::internal::BufferedCharacterStream.1137"*)* @_ZNK2v88internal23BufferedCharacterStreamINS0_12OnHeapStreamEE5CloneEv to i8*), i8* bitcast (i1 (%"class.v8::internal::BufferedCharacterStream.1137"*)* @_ZNK2v88internal23BufferedCharacterStreamINS0_12OnHeapStreamEE15can_access_heapEv to i8*), i8* bitcast (i1 (%"class.v8::internal::BufferedCharacterStream.1137"*)* @_ZN2v88internal23BufferedCharacterStreamINS0_12OnHeapStreamEE9ReadBlockEv to i8*)] }, comdat, align 8
@_ZTVN2v88internal25RelocatingCharacterStreamE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::RelocatingCharacterStream"*)* @_ZN2v88internal25RelocatingCharacterStreamD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::RelocatingCharacterStream"*)* @_ZN2v88internal25RelocatingCharacterStreamD0Ev to i8*), i8* bitcast (i1 (%"class.v8::internal::UnbufferedCharacterStream.1139"*)* @_ZNK2v88internal25UnbufferedCharacterStreamINS0_12OnHeapStreamEE13can_be_clonedEv to i8*), i8* bitcast (%"class.v8::internal::Utf16CharacterStream"* (%"class.v8::internal::UnbufferedCharacterStream.1139"*)* @_ZNK2v88internal25UnbufferedCharacterStreamINS0_12OnHeapStreamEE5CloneEv to i8*), i8* bitcast (i1 (%"class.v8::internal::UnbufferedCharacterStream.1139"*)* @_ZNK2v88internal25UnbufferedCharacterStreamINS0_12OnHeapStreamEE15can_access_heapEv to i8*), i8* bitcast (i1 (%"class.v8::internal::UnbufferedCharacterStream.1139"*)* @_ZN2v88internal25UnbufferedCharacterStreamINS0_12OnHeapStreamEE9ReadBlockEv to i8*)] }, comdat, align 8
@_ZTVN2v88internal23BufferedCharacterStreamINS0_13TestingStreamEEE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::Utf16CharacterStream"*)* @_ZN2v88internal20Utf16CharacterStreamD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::BufferedCharacterStream.1148"*)* @_ZN2v88internal23BufferedCharacterStreamINS0_13TestingStreamEED0Ev to i8*), i8* bitcast (i1 (%"class.v8::internal::BufferedCharacterStream.1148"*)* @_ZNK2v88internal23BufferedCharacterStreamINS0_13TestingStreamEE13can_be_clonedEv to i8*), i8* bitcast (%"class.v8::internal::Utf16CharacterStream"* (%"class.v8::internal::BufferedCharacterStream.1148"*)* @_ZNK2v88internal23BufferedCharacterStreamINS0_13TestingStreamEE5CloneEv to i8*), i8* bitcast (i1 (%"class.v8::internal::BufferedCharacterStream.1148"*)* @_ZNK2v88internal23BufferedCharacterStreamINS0_13TestingStreamEE15can_access_heapEv to i8*), i8* bitcast (i1 (%"class.v8::internal::BufferedCharacterStream.1148"*)* @_ZN2v88internal23BufferedCharacterStreamINS0_13TestingStreamEE9ReadBlockEv to i8*)] }, comdat, align 8
@_ZTVN2v88internal25UnbufferedCharacterStreamINS0_13TestingStreamEEE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::Utf16CharacterStream"*)* @_ZN2v88internal20Utf16CharacterStreamD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::UnbufferedCharacterStream.1149"*)* @_ZN2v88internal25UnbufferedCharacterStreamINS0_13TestingStreamEED0Ev to i8*), i8* bitcast (i1 (%"class.v8::internal::UnbufferedCharacterStream.1149"*)* @_ZNK2v88internal25UnbufferedCharacterStreamINS0_13TestingStreamEE13can_be_clonedEv to i8*), i8* bitcast (%"class.v8::internal::Utf16CharacterStream"* (%"class.v8::internal::UnbufferedCharacterStream.1149"*)* @_ZNK2v88internal25UnbufferedCharacterStreamINS0_13TestingStreamEE5CloneEv to i8*), i8* bitcast (i1 (%"class.v8::internal::UnbufferedCharacterStream.1149"*)* @_ZNK2v88internal25UnbufferedCharacterStreamINS0_13TestingStreamEE15can_access_heapEv to i8*), i8* bitcast (i1 (%"class.v8::internal::UnbufferedCharacterStream.1149"*)* @_ZN2v88internal25UnbufferedCharacterStreamINS0_13TestingStreamEE9ReadBlockEv to i8*)] }, comdat, align 8
@_ZTVN2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEEE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::UnbufferedCharacterStream.1151"*)* @_ZN2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEED2Ev to i8*), i8* bitcast (void (%"class.v8::internal::UnbufferedCharacterStream.1151"*)* @_ZN2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEED0Ev to i8*), i8* bitcast (i1 (%"class.v8::internal::UnbufferedCharacterStream.1151"*)* @_ZNK2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEE13can_be_clonedEv to i8*), i8* bitcast (%"class.v8::internal::Utf16CharacterStream"* (%"class.v8::internal::UnbufferedCharacterStream.1151"*)* @_ZNK2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEE5CloneEv to i8*), i8* bitcast (i1 (%"class.v8::internal::UnbufferedCharacterStream.1151"*)* @_ZNK2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEE15can_access_heapEv to i8*), i8* bitcast (i1 (%"class.v8::internal::UnbufferedCharacterStream.1151"*)* @_ZN2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEE9ReadBlockEv to i8*)] }, comdat, align 8
@_ZTVN2v88internal13ChunkedStreamItEE = linkonce_odr hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::ChunkedStream"*, i8*, i64, i64)* @_ZN2v88internal13ChunkedStreamItE12ProcessChunkEPKhmm to i8*)] }, comdat, align 8
@_ZTVN2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEEE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::BufferedCharacterStream.1159"*)* @_ZN2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEED2Ev to i8*), i8* bitcast (void (%"class.v8::internal::BufferedCharacterStream.1159"*)* @_ZN2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEED0Ev to i8*), i8* bitcast (i1 (%"class.v8::internal::BufferedCharacterStream.1159"*)* @_ZNK2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEE13can_be_clonedEv to i8*), i8* bitcast (%"class.v8::internal::Utf16CharacterStream"* (%"class.v8::internal::BufferedCharacterStream.1159"*)* @_ZNK2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEE5CloneEv to i8*), i8* bitcast (i1 (%"class.v8::internal::BufferedCharacterStream.1159"*)* @_ZNK2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEE15can_access_heapEv to i8*), i8* bitcast (i1 (%"class.v8::internal::BufferedCharacterStream.1159"*)* @_ZN2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEE9ReadBlockEv to i8*)] }, comdat, align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal28BufferedUtf16CharacterStreamC2Ev(%"class.v8::internal::BufferedUtf16CharacterStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BufferedUtf16CharacterStream", %"class.v8::internal::BufferedUtf16CharacterStream"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.v8::internal::BufferedUtf16CharacterStream", %"class.v8::internal::BufferedUtf16CharacterStream"* %0, i64 0, i32 1, i64 0
  %4 = getelementptr inbounds %"class.v8::internal::BufferedUtf16CharacterStream", %"class.v8::internal::BufferedUtf16CharacterStream"* %0, i64 0, i32 0, i32 1
  store i16* %3, i16** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::BufferedUtf16CharacterStream", %"class.v8::internal::BufferedUtf16CharacterStream"* %0, i64 0, i32 0, i32 2
  store i16* %3, i16** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::BufferedUtf16CharacterStream", %"class.v8::internal::BufferedUtf16CharacterStream"* %0, i64 0, i32 0, i32 3
  store i16* %3, i16** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::BufferedUtf16CharacterStream", %"class.v8::internal::BufferedUtf16CharacterStream"* %0, i64 0, i32 0, i32 4
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::BufferedUtf16CharacterStream", %"class.v8::internal::BufferedUtf16CharacterStream"* %0, i64 0, i32 0, i32 6
  store i8 0, i8* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN2v88internal28BufferedUtf16CharacterStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal28BufferedUtf16CharacterStream9ReadBlockEv(%"class.v8::internal::BufferedUtf16CharacterStream"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BufferedUtf16CharacterStream", %"class.v8::internal::BufferedUtf16CharacterStream"* %0, i64 0, i32 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::BufferedUtf16CharacterStream", %"class.v8::internal::BufferedUtf16CharacterStream"* %0, i64 0, i32 0, i32 2
  %5 = bitcast i16** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::BufferedUtf16CharacterStream", %"class.v8::internal::BufferedUtf16CharacterStream"* %0, i64 0, i32 0, i32 1
  %8 = bitcast i16** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = ashr exact i64 %10, 1
  %12 = add i64 %11, %3
  store i64 %12, i64* %2, align 8
  %13 = getelementptr inbounds %"class.v8::internal::BufferedUtf16CharacterStream", %"class.v8::internal::BufferedUtf16CharacterStream"* %0, i64 0, i32 1, i64 0
  store i16* %13, i16** %4, align 8
  %14 = bitcast %"class.v8::internal::BufferedUtf16CharacterStream"* %0 to i64 (%"class.v8::internal::BufferedUtf16CharacterStream"*, i64)***
  %15 = load i64 (%"class.v8::internal::BufferedUtf16CharacterStream"*, i64)**, i64 (%"class.v8::internal::BufferedUtf16CharacterStream"*, i64)*** %14, align 8
  %16 = getelementptr inbounds i64 (%"class.v8::internal::BufferedUtf16CharacterStream"*, i64)*, i64 (%"class.v8::internal::BufferedUtf16CharacterStream"*, i64)** %15, i64 6
  %17 = load i64 (%"class.v8::internal::BufferedUtf16CharacterStream"*, i64)*, i64 (%"class.v8::internal::BufferedUtf16CharacterStream"*, i64)** %16, align 8
  %18 = tail call i64 %17(%"class.v8::internal::BufferedUtf16CharacterStream"* %0, i64 %12) #10
  %19 = getelementptr inbounds %"class.v8::internal::BufferedUtf16CharacterStream", %"class.v8::internal::BufferedUtf16CharacterStream"* %0, i64 0, i32 1, i64 %18
  %20 = getelementptr inbounds %"class.v8::internal::BufferedUtf16CharacterStream", %"class.v8::internal::BufferedUtf16CharacterStream"* %0, i64 0, i32 0, i32 3
  store i16* %19, i16** %20, align 8
  %21 = load i16*, i16** %4, align 8
  %22 = icmp ult i16* %21, %19
  ret i1 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal27Utf8ExternalStreamingStream14SkipToPositionEm(%"class.v8::internal::Utf8ExternalStreamingStream"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 1, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, %1
  br i1 %5, label %154, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"*, %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"** %9, align 8
  %11 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %10, i64 %8, i32 2, i32 3
  %12 = load i8, i8* %11, align 4
  %13 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %10, i64 %8, i32 2, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 1, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %10, i64 %8, i32 2, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %10, i64 %8, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 %19
  %23 = ptrtoint i8* %22 to i64
  %24 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %10, i64 %8, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %21, i64 %25
  %27 = icmp ult i64 %16, 3
  %28 = icmp eq i64 %4, 0
  %29 = and i1 %28, %27
  %30 = ptrtoint i8* %21 to i64
  br i1 %29, label %31, label %80, !prof !2

31:                                               ; preds = %6
  %32 = icmp sgt i64 %25, %19
  br i1 %32, label %33, label %80

33:                                               ; preds = %31, %72
  %34 = phi i8* [ %39, %72 ], [ %22, %31 ]
  %35 = phi i64 [ %40, %72 ], [ %23, %31 ]
  %36 = phi i32 [ %73, %72 ], [ %14, %31 ]
  %37 = phi i8 [ %74, %72 ], [ %12, %31 ]
  %38 = load i8, i8* %34, align 1
  %39 = getelementptr inbounds i8, i8* %34, i64 1
  %40 = ptrtoint i8* %39 to i64
  %41 = icmp sgt i8 %38, -1
  %42 = icmp eq i8 %37, 12
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %46, !prof !3

44:                                               ; preds = %33
  %45 = zext i8 %38 to i32
  br label %65

46:                                               ; preds = %33
  %47 = zext i8 %38 to i64
  %48 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN14Utf8DfaDecoderL6DecodeEhPNS_5StateEPjE11transitions, i64 0, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %37 to i32
  %51 = zext i8 %49 to i32
  %52 = add nuw nsw i32 %51, %50
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds [108 x i8], [108 x i8]* bitcast (<{ [100 x i8], [8 x i8] }>* @_ZZN14Utf8DfaDecoderL6DecodeEhPNS_5StateEPjE6states to [108 x i8]*), i64 0, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = shl i32 %36, 6
  %57 = zext i8 %38 to i32
  %58 = lshr i32 %51, 1
  %59 = lshr i32 127, %58
  %60 = and i32 %59, %57
  %61 = or i32 %60, %56
  switch i8 %55, label %72 [
    i8 12, label %65
    i8 0, label %62
  ]

62:                                               ; preds = %46
  %63 = ptrtoint i8* %39 to i64
  %64 = select i1 %42, i64 %63, i64 %35
  br label %80

65:                                               ; preds = %46, %44
  %66 = phi i32 [ %36, %44 ], [ 0, %46 ]
  %67 = phi i32 [ %45, %44 ], [ %61, %46 ]
  switch i32 %67, label %68 [
    i32 -4, label %72
    i32 65279, label %76
  ]

68:                                               ; preds = %65
  %69 = ptrtoint i8* %39 to i64
  %70 = icmp ugt i32 %67, 65535
  %71 = select i1 %70, i64 2, i64 1
  br label %80

72:                                               ; preds = %46, %65
  %73 = phi i32 [ %66, %65 ], [ %61, %46 ]
  %74 = phi i8 [ 12, %65 ], [ %55, %46 ]
  %75 = icmp ugt i8* %26, %39
  br i1 %75, label %33, label %76

76:                                               ; preds = %72, %65
  %77 = phi i8 [ 12, %65 ], [ %74, %72 ]
  %78 = phi i32 [ %66, %65 ], [ %73, %72 ]
  %79 = ptrtoint i8* %39 to i64
  br label %80

80:                                               ; preds = %76, %31, %68, %62, %6
  %81 = phi i8 [ %12, %6 ], [ 12, %62 ], [ 12, %68 ], [ %12, %31 ], [ %77, %76 ]
  %82 = phi i32 [ %14, %6 ], [ 0, %62 ], [ %66, %68 ], [ %14, %31 ], [ %78, %76 ]
  %83 = phi i64 [ %23, %6 ], [ %64, %62 ], [ %69, %68 ], [ %23, %31 ], [ %79, %76 ]
  %84 = phi i64 [ %4, %6 ], [ 1, %62 ], [ %71, %68 ], [ 0, %31 ], [ 0, %76 ]
  %85 = inttoptr i64 %83 to i8*
  %86 = icmp ugt i8* %26, %85
  %87 = icmp ult i64 %84, %1
  %88 = and i1 %86, %87
  br i1 %88, label %89, label %140

89:                                               ; preds = %80, %129
  %90 = phi i8* [ %134, %129 ], [ %85, %80 ]
  %91 = phi i64 [ %133, %129 ], [ %84, %80 ]
  %92 = phi i64 [ %130, %129 ], [ %83, %80 ]
  %93 = phi i32 [ %131, %129 ], [ %82, %80 ]
  %94 = phi i8 [ %132, %129 ], [ %81, %80 ]
  %95 = load i8, i8* %90, align 1
  %96 = getelementptr inbounds i8, i8* %90, i64 1
  %97 = ptrtoint i8* %96 to i64
  %98 = icmp sgt i8 %95, -1
  %99 = icmp eq i8 %94, 12
  %100 = and i1 %99, %98
  br i1 %100, label %121, label %101, !prof !3

101:                                              ; preds = %89
  %102 = zext i8 %95 to i64
  %103 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN14Utf8DfaDecoderL6DecodeEhPNS_5StateEPjE11transitions, i64 0, i64 %102
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %94 to i32
  %106 = zext i8 %104 to i32
  %107 = add nuw nsw i32 %106, %105
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds [108 x i8], [108 x i8]* bitcast (<{ [100 x i8], [8 x i8] }>* @_ZZN14Utf8DfaDecoderL6DecodeEhPNS_5StateEPjE6states to [108 x i8]*), i64 0, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = shl i32 %93, 6
  %112 = zext i8 %95 to i32
  %113 = lshr i32 %106, 1
  %114 = lshr i32 127, %113
  %115 = and i32 %114, %112
  %116 = or i32 %115, %111
  switch i8 %110, label %129 [
    i8 12, label %119
    i8 0, label %117
  ]

117:                                              ; preds = %101
  %118 = select i1 %99, i64 %97, i64 %92
  br label %121

119:                                              ; preds = %101
  %120 = icmp eq i32 %116, -4
  br i1 %120, label %129, label %125

121:                                              ; preds = %117, %89
  %122 = phi i64 [ %97, %89 ], [ %118, %117 ]
  %123 = phi i32 [ %93, %89 ], [ 0, %117 ]
  %124 = add nuw i64 %91, 1
  br label %129

125:                                              ; preds = %119
  %126 = icmp ugt i32 %116, 65535
  %127 = select i1 %126, i64 2, i64 1
  %128 = add i64 %127, %91
  br label %129

129:                                              ; preds = %125, %121, %101, %119
  %130 = phi i64 [ %97, %119 ], [ %97, %101 ], [ %122, %121 ], [ %97, %125 ]
  %131 = phi i32 [ 0, %119 ], [ %116, %101 ], [ %123, %121 ], [ 0, %125 ]
  %132 = phi i8 [ 12, %119 ], [ %110, %101 ], [ 12, %121 ], [ 12, %125 ]
  %133 = phi i64 [ %91, %119 ], [ %91, %101 ], [ %124, %121 ], [ %128, %125 ]
  %134 = inttoptr i64 %130 to i8*
  %135 = icmp ugt i8* %26, %134
  %136 = icmp ult i64 %133, %1
  %137 = and i1 %135, %136
  br i1 %137, label %89, label %138

138:                                              ; preds = %129
  %139 = inttoptr i64 %130 to i8*
  br label %140

140:                                              ; preds = %138, %80
  %141 = phi i8 [ %81, %80 ], [ %132, %138 ]
  %142 = phi i32 [ %82, %80 ], [ %131, %138 ]
  %143 = phi i64 [ %83, %80 ], [ %130, %138 ]
  %144 = phi i64 [ %84, %80 ], [ %133, %138 ]
  %145 = phi i8* [ %85, %80 ], [ %139, %138 ]
  %146 = add i64 %143, %18
  %147 = sub i64 %146, %30
  store i64 %147, i64* %15, align 8
  store i64 %144, i64* %3, align 8
  %148 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 1, i32 2
  store i32 %142, i32* %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 1, i32 3
  store i8 %141, i8* %149, align 4
  %150 = icmp eq i8* %26, %145
  %151 = zext i1 %150 to i64
  %152 = add i64 %8, %151
  store i64 %152, i64* %7, align 8
  %153 = icmp eq i64 %144, %1
  br label %154

154:                                              ; preds = %2, %140
  %155 = phi i1 [ %153, %140 ], [ true, %2 ]
  ret i1 %155
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal27Utf8ExternalStreamingStream26FillBufferFromCurrentChunkEv(%"class.v8::internal::Utf8ExternalStreamingStream"*) local_unnamed_addr #1 align 2 {
  %2 = alloca i8, align 1
  %3 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"*, %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"** %5, align 8
  %7 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %6, i64 %4
  %8 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 0, i32 0, i32 3
  %9 = bitcast i16** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = bitcast i16** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %10, %13
  %15 = ashr exact i64 %14, 1
  %16 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 0, i32 1, i64 %15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #10
  %17 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 1, i32 3
  %18 = load i8, i8* %17, align 4
  store i8 %18, i8* %2, align 1
  %19 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 1, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %6, i64 %4, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %35

24:                                               ; preds = %1
  %25 = call i32 @_ZN7unibrow4Utf824ValueOfIncrementalFinishEPN14Utf8DfaDecoder5StateE(i8* nonnull %2) #10
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %294, label %27

27:                                               ; preds = %24
  %28 = trunc i32 %25 to i16
  store i16 %28, i16* %16, align 2
  %29 = load i16*, i16** %8, align 8
  %30 = getelementptr inbounds i16, i16* %29, i64 1
  store i16* %30, i16** %8, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 1, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 1
  store i64 %33, i64* %31, align 8
  store i32 0, i32* %19, align 8
  %34 = load i8, i8* %2, align 1
  store i8 %34, i8* %17, align 4
  br label %294

35:                                               ; preds = %1
  %36 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 1, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %6, i64 %4, i32 2, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %37, %39
  %41 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %7, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 %40
  %44 = ptrtoint i8* %43 to i64
  %45 = getelementptr inbounds i8, i8* %42, i64 %22
  %46 = icmp ult i64 %37, 3
  br i1 %46, label %47, label %120

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 1, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, 0
  %51 = icmp sgt i64 %22, %40
  %52 = and i1 %50, %51
  br i1 %52, label %53, label %120, !prof !4

53:                                               ; preds = %47, %113
  %54 = phi i8 [ %75, %113 ], [ %18, %47 ]
  %55 = phi i8* [ %59, %113 ], [ %43, %47 ]
  %56 = phi i32 [ %114, %113 ], [ %20, %47 ]
  %57 = phi i64 [ %60, %113 ], [ %44, %47 ]
  %58 = load i8, i8* %55, align 1
  %59 = getelementptr inbounds i8, i8* %55, i64 1
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i8 %58, -1
  %62 = icmp eq i8 %54, 12
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %66, !prof !3

64:                                               ; preds = %53
  %65 = zext i8 %58 to i32
  br label %87

66:                                               ; preds = %53
  %67 = zext i8 %58 to i64
  %68 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN14Utf8DfaDecoderL6DecodeEhPNS_5StateEPjE11transitions, i64 0, i64 %67
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %54 to i32
  %71 = zext i8 %69 to i32
  %72 = add nuw nsw i32 %71, %70
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds [108 x i8], [108 x i8]* bitcast (<{ [100 x i8], [8 x i8] }>* @_ZZN14Utf8DfaDecoderL6DecodeEhPNS_5StateEPjE6states to [108 x i8]*), i64 0, i64 %73
  %75 = load i8, i8* %74, align 1
  store i8 %75, i8* %2, align 1
  %76 = shl i32 %56, 6
  %77 = zext i8 %58 to i32
  %78 = lshr i32 %71, 1
  %79 = lshr i32 127, %78
  %80 = and i32 %79, %77
  %81 = or i32 %80, %76
  switch i8 %75, label %113 [
    i8 12, label %85
    i8 0, label %82
  ]

82:                                               ; preds = %66
  %83 = ptrtoint i8* %59 to i64
  store i8 12, i8* %2, align 1
  %84 = select i1 %62, i64 %83, i64 %57
  br label %97

85:                                               ; preds = %66
  %86 = icmp ult i32 %81, 65279
  br i1 %86, label %87, label %93, !prof !3

87:                                               ; preds = %85, %64
  %88 = phi i32 [ %65, %64 ], [ %81, %85 ]
  %89 = phi i32 [ %56, %64 ], [ 0, %85 ]
  %90 = ptrtoint i8* %59 to i64
  %91 = trunc i32 %88 to i16
  %92 = getelementptr inbounds i16, i16* %16, i64 1
  store i16 %91, i16* %16, align 2
  br label %120

93:                                               ; preds = %85
  switch i32 %81, label %94 [
    i32 -4, label %113
    i32 65279, label %116
  ]

94:                                               ; preds = %93
  %95 = ptrtoint i8* %59 to i64
  %96 = icmp ult i32 %81, 65536
  br i1 %96, label %97, label %102

97:                                               ; preds = %82, %94
  %98 = phi i32 [ %81, %94 ], [ 65533, %82 ]
  %99 = phi i64 [ %95, %94 ], [ %84, %82 ]
  %100 = trunc i32 %98 to i16
  %101 = getelementptr inbounds i16, i16* %16, i64 1
  store i16 %100, i16* %16, align 2
  br label %120

102:                                              ; preds = %94
  %103 = add i32 %81, 983040
  %104 = lshr i32 %103, 10
  %105 = trunc i32 %104 to i16
  %106 = and i16 %105, 1023
  %107 = or i16 %106, -10240
  %108 = getelementptr inbounds i16, i16* %16, i64 1
  store i16 %107, i16* %16, align 2
  %109 = trunc i32 %81 to i16
  %110 = and i16 %109, 1023
  %111 = or i16 %110, -9216
  %112 = getelementptr inbounds i16, i16* %16, i64 2
  store i16 %111, i16* %108, align 2
  br label %120

113:                                              ; preds = %66, %93
  %114 = phi i32 [ 0, %93 ], [ %81, %66 ]
  %115 = icmp ugt i8* %45, %59
  br i1 %115, label %53, label %116

116:                                              ; preds = %113, %93
  %117 = phi i8 [ 12, %93 ], [ %75, %113 ]
  %118 = phi i32 [ 0, %93 ], [ %114, %113 ]
  %119 = ptrtoint i8* %59 to i64
  br label %120

120:                                              ; preds = %116, %97, %102, %87, %35, %47
  %121 = phi i8 [ %18, %47 ], [ %18, %35 ], [ 12, %87 ], [ 12, %97 ], [ 12, %102 ], [ %117, %116 ]
  %122 = phi i64 [ %44, %47 ], [ %44, %35 ], [ %90, %87 ], [ %99, %97 ], [ %95, %102 ], [ %119, %116 ]
  %123 = phi i32 [ %20, %47 ], [ %20, %35 ], [ %89, %87 ], [ 0, %97 ], [ 0, %102 ], [ %118, %116 ]
  %124 = phi i16* [ %16, %47 ], [ %16, %35 ], [ %92, %87 ], [ %101, %97 ], [ %112, %102 ], [ %16, %116 ]
  %125 = load i16*, i16** %11, align 8
  %126 = getelementptr inbounds i16, i16* %125, i64 512
  %127 = inttoptr i64 %122 to i8*
  %128 = icmp ugt i8* %45, %127
  %129 = getelementptr inbounds i16, i16* %124, i64 1
  %130 = icmp ult i16* %129, %126
  %131 = and i1 %128, %130
  br i1 %131, label %132, label %272

132:                                              ; preds = %120
  %133 = ptrtoint i8* %45 to i64
  %134 = ptrtoint i16* %126 to i64
  br label %135

135:                                              ; preds = %132, %259
  %136 = phi i8 [ %121, %132 ], [ %260, %259 ]
  %137 = phi i8 [ %121, %132 ], [ %261, %259 ]
  %138 = phi i16* [ %129, %132 ], [ %267, %259 ]
  %139 = phi i8* [ %127, %132 ], [ %265, %259 ]
  %140 = phi i16* [ %124, %132 ], [ %264, %259 ]
  %141 = phi i32 [ %123, %132 ], [ %262, %259 ]
  %142 = phi i64 [ %122, %132 ], [ %263, %259 ]
  %143 = load i8, i8* %139, align 1
  %144 = getelementptr inbounds i8, i8* %139, i64 1
  %145 = ptrtoint i8* %144 to i64
  %146 = icmp sgt i8 %143, -1
  %147 = icmp eq i8 %137, 12
  %148 = and i1 %147, %146
  br i1 %148, label %149, label %151, !prof !3

149:                                              ; preds = %135
  %150 = zext i8 %143 to i32
  br label %171

151:                                              ; preds = %135
  %152 = zext i8 %143 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN14Utf8DfaDecoderL6DecodeEhPNS_5StateEPjE11transitions, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %137 to i32
  %156 = zext i8 %154 to i32
  %157 = add nuw nsw i32 %156, %155
  %158 = zext i32 %157 to i64
  %159 = getelementptr inbounds [108 x i8], [108 x i8]* bitcast (<{ [100 x i8], [8 x i8] }>* @_ZZN14Utf8DfaDecoderL6DecodeEhPNS_5StateEPjE6states to [108 x i8]*), i64 0, i64 %158
  %160 = load i8, i8* %159, align 1
  store i8 %160, i8* %2, align 1
  %161 = shl i32 %141, 6
  %162 = zext i8 %143 to i32
  %163 = lshr i32 %156, 1
  %164 = lshr i32 127, %163
  %165 = and i32 %164, %162
  %166 = or i32 %165, %161
  switch i8 %160, label %259 [
    i8 12, label %169
    i8 0, label %167
  ]

167:                                              ; preds = %151
  store i8 12, i8* %2, align 1
  %168 = select i1 %147, i64 %145, i64 %142
  br label %171

169:                                              ; preds = %151
  %170 = icmp ult i32 %166, 65536
  br i1 %170, label %171, label %177, !prof !3

171:                                              ; preds = %167, %149, %169
  %172 = phi i8 [ 12, %169 ], [ %136, %149 ], [ 12, %167 ]
  %173 = phi i32 [ %166, %169 ], [ %150, %149 ], [ 65533, %167 ]
  %174 = phi i32 [ 0, %169 ], [ %141, %149 ], [ 0, %167 ]
  %175 = phi i64 [ %145, %169 ], [ %145, %149 ], [ %168, %167 ]
  %176 = trunc i32 %173 to i16
  store i16 %176, i16* %140, align 2
  br label %189

177:                                              ; preds = %169
  %178 = icmp eq i32 %166, -4
  br i1 %178, label %259, label %179

179:                                              ; preds = %177
  %180 = add i32 %166, 983040
  %181 = lshr i32 %180, 10
  %182 = trunc i32 %181 to i16
  %183 = and i16 %182, 1023
  %184 = or i16 %183, -10240
  store i16 %184, i16* %140, align 2
  %185 = trunc i32 %166 to i16
  %186 = and i16 %185, 1023
  %187 = or i16 %186, -9216
  %188 = getelementptr inbounds i16, i16* %140, i64 2
  store i16 %187, i16* %138, align 2
  br label %189

189:                                              ; preds = %179, %171
  %190 = phi i8 [ %172, %171 ], [ 12, %179 ]
  %191 = phi i32 [ %174, %171 ], [ 0, %179 ]
  %192 = phi i64 [ %175, %171 ], [ %145, %179 ]
  %193 = phi i16* [ %138, %171 ], [ %188, %179 ]
  %194 = sub i64 %133, %192
  %195 = ptrtoint i16* %193 to i64
  %196 = sub i64 %134, %195
  %197 = ashr exact i64 %196, 1
  %198 = icmp ult i64 %197, %194
  %199 = select i1 %198, i64 %197, i64 %194
  %200 = trunc i64 %199 to i32
  %201 = inttoptr i64 %192 to i8*
  %202 = shl i64 %199, 32
  %203 = ashr exact i64 %202, 32
  %204 = getelementptr inbounds i8, i8* %201, i64 %203
  %205 = icmp ugt i32 %200, 7
  br i1 %205, label %206, label %234

206:                                              ; preds = %189
  %207 = and i64 %192, 7
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %221, label %209

209:                                              ; preds = %206
  %210 = load i8, i8* %201, align 1
  %211 = icmp slt i8 %210, 0
  br i1 %211, label %251, label %215

212:                                              ; preds = %215
  %213 = load i8, i8* %217, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %249, label %215

215:                                              ; preds = %209, %212
  %216 = phi i8* [ %217, %212 ], [ %201, %209 ]
  %217 = getelementptr inbounds i8, i8* %216, i64 1
  %218 = ptrtoint i8* %217 to i64
  %219 = and i64 %218, 7
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %221, label %212

221:                                              ; preds = %215, %206
  %222 = phi i8* [ %201, %206 ], [ %217, %215 ]
  br label %223

223:                                              ; preds = %221, %227
  %224 = phi i8* [ %225, %227 ], [ %222, %221 ]
  %225 = getelementptr inbounds i8, i8* %224, i64 8
  %226 = icmp ugt i8* %225, %204
  br i1 %226, label %234, label %227

227:                                              ; preds = %223
  %228 = bitcast i8* %224 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = and i64 %229, -9187201950435737472
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %223, label %232

232:                                              ; preds = %227
  %233 = ptrtoint i8* %224 to i64
  br label %251

234:                                              ; preds = %223, %189
  %235 = phi i8* [ %201, %189 ], [ %224, %223 ]
  %236 = icmp ult i8* %235, %204
  br i1 %236, label %237, label %246

237:                                              ; preds = %234, %243
  %238 = phi i8* [ %244, %243 ], [ %235, %234 ]
  %239 = load i8, i8* %238, align 1
  %240 = icmp slt i8 %239, 0
  br i1 %240, label %241, label %243

241:                                              ; preds = %237
  %242 = ptrtoint i8* %238 to i64
  br label %251

243:                                              ; preds = %237
  %244 = getelementptr inbounds i8, i8* %238, i64 1
  %245 = icmp eq i8* %244, %204
  br i1 %245, label %246, label %237

246:                                              ; preds = %243, %234
  %247 = phi i8* [ %235, %234 ], [ %204, %243 ]
  %248 = ptrtoint i8* %247 to i64
  br label %251

249:                                              ; preds = %212
  %250 = ptrtoint i8* %217 to i64
  br label %251

251:                                              ; preds = %249, %209, %232, %241, %246
  %252 = phi i64 [ %242, %241 ], [ %248, %246 ], [ %233, %232 ], [ %192, %209 ], [ %250, %249 ]
  %253 = sub i64 %252, %192
  %254 = shl i64 %253, 32
  %255 = ashr exact i64 %254, 32
  tail call void @_ZN2v88internal9CopyCharsIhtEEvPT0_PKT_m(i16* %193, i8* %201, i64 %255)
  %256 = getelementptr inbounds i8, i8* %201, i64 %255
  %257 = ptrtoint i8* %256 to i64
  %258 = getelementptr inbounds i16, i16* %193, i64 %255
  br label %259

259:                                              ; preds = %151, %177, %251
  %260 = phi i8 [ %190, %251 ], [ 12, %177 ], [ %160, %151 ]
  %261 = phi i8 [ 12, %251 ], [ 12, %177 ], [ %160, %151 ]
  %262 = phi i32 [ %191, %251 ], [ 0, %177 ], [ %166, %151 ]
  %263 = phi i64 [ %257, %251 ], [ %145, %177 ], [ %145, %151 ]
  %264 = phi i16* [ %258, %251 ], [ %140, %177 ], [ %140, %151 ]
  %265 = inttoptr i64 %263 to i8*
  %266 = icmp ugt i8* %45, %265
  %267 = getelementptr inbounds i16, i16* %264, i64 1
  %268 = icmp ult i16* %267, %126
  %269 = and i1 %266, %268
  br i1 %269, label %135, label %270

270:                                              ; preds = %259
  %271 = inttoptr i64 %263 to i8*
  br label %272

272:                                              ; preds = %270, %120
  %273 = phi i8 [ %121, %120 ], [ %260, %270 ]
  %274 = phi i64 [ %122, %120 ], [ %263, %270 ]
  %275 = phi i32 [ %123, %120 ], [ %262, %270 ]
  %276 = phi i16* [ %124, %120 ], [ %264, %270 ]
  %277 = phi i8* [ %127, %120 ], [ %271, %270 ]
  %278 = load i64, i64* %38, align 8
  %279 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %7 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = add i64 %278, %274
  %282 = sub i64 %281, %280
  store i64 %282, i64* %36, align 8
  %283 = load i64, i64* %9, align 8
  %284 = ptrtoint i16* %276 to i64
  %285 = sub i64 %284, %283
  %286 = ashr exact i64 %285, 1
  %287 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 1, i32 1
  %288 = load i64, i64* %287, align 8
  %289 = add i64 %286, %288
  store i64 %289, i64* %287, align 8
  store i32 %275, i32* %19, align 8
  store i8 %273, i8* %17, align 4
  %290 = icmp eq i8* %45, %277
  %291 = zext i1 %290 to i64
  %292 = load i64, i64* %3, align 8
  %293 = add i64 %292, %291
  store i64 %293, i64* %3, align 8
  store i16* %276, i16** %8, align 8
  br label %294

294:                                              ; preds = %27, %24, %272
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #10
  ret void
}

declare i32 @_ZN7unibrow4Utf824ValueOfIncrementalFinishEPN14Utf8DfaDecoder5StateE(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal9CopyCharsIhtEEvPT0_PKT_m(i16*, i8*, i64) local_unnamed_addr #1 comdat {
  %4 = bitcast i16* %0 to i8*
  switch i64 %2, label %533 [
    i64 1, label %530
    i64 2, label %523
    i64 3, label %512
    i64 4, label %497
    i64 5, label %478
    i64 6, label %455
    i64 7, label %428
    i64 8, label %397
    i64 9, label %362
    i64 10, label %323
    i64 11, label %280
    i64 12, label %233
    i64 13, label %182
    i64 14, label %127
    i64 15, label %68
    i64 16, label %5
  ]

5:                                                ; preds = %3
  %6 = load i8, i8* %1, align 1
  %7 = zext i8 %6 to i16
  store i16 %7, i16* %0, align 2
  %8 = getelementptr inbounds i16, i16* %0, i64 1
  %9 = getelementptr inbounds i8, i8* %1, i64 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i16
  store i16 %11, i16* %8, align 2
  %12 = getelementptr inbounds i16, i16* %0, i64 2
  %13 = getelementptr inbounds i8, i8* %1, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i16
  store i16 %15, i16* %12, align 2
  %16 = getelementptr inbounds i16, i16* %0, i64 3
  %17 = getelementptr inbounds i8, i8* %1, i64 3
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i16
  store i16 %19, i16* %16, align 2
  %20 = getelementptr inbounds i16, i16* %0, i64 4
  %21 = getelementptr inbounds i8, i8* %1, i64 4
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i16
  store i16 %23, i16* %20, align 2
  %24 = getelementptr inbounds i16, i16* %0, i64 5
  %25 = getelementptr inbounds i8, i8* %1, i64 5
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i16
  store i16 %27, i16* %24, align 2
  %28 = getelementptr inbounds i16, i16* %0, i64 6
  %29 = getelementptr inbounds i8, i8* %1, i64 6
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i16
  store i16 %31, i16* %28, align 2
  %32 = getelementptr inbounds i16, i16* %0, i64 7
  %33 = getelementptr inbounds i8, i8* %1, i64 7
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i16
  store i16 %35, i16* %32, align 2
  %36 = getelementptr inbounds i16, i16* %0, i64 8
  %37 = getelementptr inbounds i8, i8* %1, i64 8
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  store i16 %39, i16* %36, align 2
  %40 = getelementptr inbounds i16, i16* %0, i64 9
  %41 = getelementptr inbounds i8, i8* %1, i64 9
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i16
  store i16 %43, i16* %40, align 2
  %44 = getelementptr inbounds i16, i16* %0, i64 10
  %45 = getelementptr inbounds i8, i8* %1, i64 10
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i16
  store i16 %47, i16* %44, align 2
  %48 = getelementptr inbounds i16, i16* %0, i64 11
  %49 = getelementptr inbounds i8, i8* %1, i64 11
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i16
  store i16 %51, i16* %48, align 2
  %52 = getelementptr inbounds i16, i16* %0, i64 12
  %53 = getelementptr inbounds i8, i8* %1, i64 12
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i16
  store i16 %55, i16* %52, align 2
  %56 = getelementptr inbounds i16, i16* %0, i64 13
  %57 = getelementptr inbounds i8, i8* %1, i64 13
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i16
  store i16 %59, i16* %56, align 2
  %60 = getelementptr inbounds i16, i16* %0, i64 14
  %61 = getelementptr inbounds i8, i8* %1, i64 14
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  store i16 %63, i16* %60, align 2
  %64 = getelementptr inbounds i16, i16* %0, i64 15
  %65 = getelementptr inbounds i8, i8* %1, i64 15
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i16
  store i16 %67, i16* %64, align 2
  br label %615

68:                                               ; preds = %3
  %69 = load i8, i8* %1, align 1
  %70 = zext i8 %69 to i16
  store i16 %70, i16* %0, align 2
  %71 = getelementptr inbounds i16, i16* %0, i64 1
  %72 = getelementptr inbounds i8, i8* %1, i64 1
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i16
  store i16 %74, i16* %71, align 2
  %75 = getelementptr inbounds i16, i16* %0, i64 2
  %76 = getelementptr inbounds i8, i8* %1, i64 2
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i16
  store i16 %78, i16* %75, align 2
  %79 = getelementptr inbounds i16, i16* %0, i64 3
  %80 = getelementptr inbounds i8, i8* %1, i64 3
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i16
  store i16 %82, i16* %79, align 2
  %83 = getelementptr inbounds i16, i16* %0, i64 4
  %84 = getelementptr inbounds i8, i8* %1, i64 4
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i16
  store i16 %86, i16* %83, align 2
  %87 = getelementptr inbounds i16, i16* %0, i64 5
  %88 = getelementptr inbounds i8, i8* %1, i64 5
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i16
  store i16 %90, i16* %87, align 2
  %91 = getelementptr inbounds i16, i16* %0, i64 6
  %92 = getelementptr inbounds i8, i8* %1, i64 6
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i16
  store i16 %94, i16* %91, align 2
  %95 = getelementptr inbounds i16, i16* %0, i64 7
  %96 = getelementptr inbounds i8, i8* %1, i64 7
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i16
  store i16 %98, i16* %95, align 2
  %99 = getelementptr inbounds i16, i16* %0, i64 8
  %100 = getelementptr inbounds i8, i8* %1, i64 8
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i16
  store i16 %102, i16* %99, align 2
  %103 = getelementptr inbounds i16, i16* %0, i64 9
  %104 = getelementptr inbounds i8, i8* %1, i64 9
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i16
  store i16 %106, i16* %103, align 2
  %107 = getelementptr inbounds i16, i16* %0, i64 10
  %108 = getelementptr inbounds i8, i8* %1, i64 10
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i16
  store i16 %110, i16* %107, align 2
  %111 = getelementptr inbounds i16, i16* %0, i64 11
  %112 = getelementptr inbounds i8, i8* %1, i64 11
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i16
  store i16 %114, i16* %111, align 2
  %115 = getelementptr inbounds i16, i16* %0, i64 12
  %116 = getelementptr inbounds i8, i8* %1, i64 12
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i16
  store i16 %118, i16* %115, align 2
  %119 = getelementptr inbounds i16, i16* %0, i64 13
  %120 = getelementptr inbounds i8, i8* %1, i64 13
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i16
  store i16 %122, i16* %119, align 2
  %123 = getelementptr inbounds i16, i16* %0, i64 14
  %124 = getelementptr inbounds i8, i8* %1, i64 14
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i16
  store i16 %126, i16* %123, align 2
  br label %615

127:                                              ; preds = %3
  %128 = load i8, i8* %1, align 1
  %129 = zext i8 %128 to i16
  store i16 %129, i16* %0, align 2
  %130 = getelementptr inbounds i16, i16* %0, i64 1
  %131 = getelementptr inbounds i8, i8* %1, i64 1
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i16
  store i16 %133, i16* %130, align 2
  %134 = getelementptr inbounds i16, i16* %0, i64 2
  %135 = getelementptr inbounds i8, i8* %1, i64 2
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i16
  store i16 %137, i16* %134, align 2
  %138 = getelementptr inbounds i16, i16* %0, i64 3
  %139 = getelementptr inbounds i8, i8* %1, i64 3
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i16
  store i16 %141, i16* %138, align 2
  %142 = getelementptr inbounds i16, i16* %0, i64 4
  %143 = getelementptr inbounds i8, i8* %1, i64 4
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i16
  store i16 %145, i16* %142, align 2
  %146 = getelementptr inbounds i16, i16* %0, i64 5
  %147 = getelementptr inbounds i8, i8* %1, i64 5
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i16
  store i16 %149, i16* %146, align 2
  %150 = getelementptr inbounds i16, i16* %0, i64 6
  %151 = getelementptr inbounds i8, i8* %1, i64 6
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i16
  store i16 %153, i16* %150, align 2
  %154 = getelementptr inbounds i16, i16* %0, i64 7
  %155 = getelementptr inbounds i8, i8* %1, i64 7
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i16
  store i16 %157, i16* %154, align 2
  %158 = getelementptr inbounds i16, i16* %0, i64 8
  %159 = getelementptr inbounds i8, i8* %1, i64 8
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i16
  store i16 %161, i16* %158, align 2
  %162 = getelementptr inbounds i16, i16* %0, i64 9
  %163 = getelementptr inbounds i8, i8* %1, i64 9
  %164 = load i8, i8* %163, align 1
  %165 = zext i8 %164 to i16
  store i16 %165, i16* %162, align 2
  %166 = getelementptr inbounds i16, i16* %0, i64 10
  %167 = getelementptr inbounds i8, i8* %1, i64 10
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i16
  store i16 %169, i16* %166, align 2
  %170 = getelementptr inbounds i16, i16* %0, i64 11
  %171 = getelementptr inbounds i8, i8* %1, i64 11
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i16
  store i16 %173, i16* %170, align 2
  %174 = getelementptr inbounds i16, i16* %0, i64 12
  %175 = getelementptr inbounds i8, i8* %1, i64 12
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i16
  store i16 %177, i16* %174, align 2
  %178 = getelementptr inbounds i16, i16* %0, i64 13
  %179 = getelementptr inbounds i8, i8* %1, i64 13
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i16
  store i16 %181, i16* %178, align 2
  br label %615

182:                                              ; preds = %3
  %183 = load i8, i8* %1, align 1
  %184 = zext i8 %183 to i16
  store i16 %184, i16* %0, align 2
  %185 = getelementptr inbounds i16, i16* %0, i64 1
  %186 = getelementptr inbounds i8, i8* %1, i64 1
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i16
  store i16 %188, i16* %185, align 2
  %189 = getelementptr inbounds i16, i16* %0, i64 2
  %190 = getelementptr inbounds i8, i8* %1, i64 2
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i16
  store i16 %192, i16* %189, align 2
  %193 = getelementptr inbounds i16, i16* %0, i64 3
  %194 = getelementptr inbounds i8, i8* %1, i64 3
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i16
  store i16 %196, i16* %193, align 2
  %197 = getelementptr inbounds i16, i16* %0, i64 4
  %198 = getelementptr inbounds i8, i8* %1, i64 4
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i16
  store i16 %200, i16* %197, align 2
  %201 = getelementptr inbounds i16, i16* %0, i64 5
  %202 = getelementptr inbounds i8, i8* %1, i64 5
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i16
  store i16 %204, i16* %201, align 2
  %205 = getelementptr inbounds i16, i16* %0, i64 6
  %206 = getelementptr inbounds i8, i8* %1, i64 6
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i16
  store i16 %208, i16* %205, align 2
  %209 = getelementptr inbounds i16, i16* %0, i64 7
  %210 = getelementptr inbounds i8, i8* %1, i64 7
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i16
  store i16 %212, i16* %209, align 2
  %213 = getelementptr inbounds i16, i16* %0, i64 8
  %214 = getelementptr inbounds i8, i8* %1, i64 8
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i16
  store i16 %216, i16* %213, align 2
  %217 = getelementptr inbounds i16, i16* %0, i64 9
  %218 = getelementptr inbounds i8, i8* %1, i64 9
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i16
  store i16 %220, i16* %217, align 2
  %221 = getelementptr inbounds i16, i16* %0, i64 10
  %222 = getelementptr inbounds i8, i8* %1, i64 10
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i16
  store i16 %224, i16* %221, align 2
  %225 = getelementptr inbounds i16, i16* %0, i64 11
  %226 = getelementptr inbounds i8, i8* %1, i64 11
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i16
  store i16 %228, i16* %225, align 2
  %229 = getelementptr inbounds i16, i16* %0, i64 12
  %230 = getelementptr inbounds i8, i8* %1, i64 12
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i16
  store i16 %232, i16* %229, align 2
  br label %615

233:                                              ; preds = %3
  %234 = load i8, i8* %1, align 1
  %235 = zext i8 %234 to i16
  store i16 %235, i16* %0, align 2
  %236 = getelementptr inbounds i16, i16* %0, i64 1
  %237 = getelementptr inbounds i8, i8* %1, i64 1
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i16
  store i16 %239, i16* %236, align 2
  %240 = getelementptr inbounds i16, i16* %0, i64 2
  %241 = getelementptr inbounds i8, i8* %1, i64 2
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i16
  store i16 %243, i16* %240, align 2
  %244 = getelementptr inbounds i16, i16* %0, i64 3
  %245 = getelementptr inbounds i8, i8* %1, i64 3
  %246 = load i8, i8* %245, align 1
  %247 = zext i8 %246 to i16
  store i16 %247, i16* %244, align 2
  %248 = getelementptr inbounds i16, i16* %0, i64 4
  %249 = getelementptr inbounds i8, i8* %1, i64 4
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i16
  store i16 %251, i16* %248, align 2
  %252 = getelementptr inbounds i16, i16* %0, i64 5
  %253 = getelementptr inbounds i8, i8* %1, i64 5
  %254 = load i8, i8* %253, align 1
  %255 = zext i8 %254 to i16
  store i16 %255, i16* %252, align 2
  %256 = getelementptr inbounds i16, i16* %0, i64 6
  %257 = getelementptr inbounds i8, i8* %1, i64 6
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i16
  store i16 %259, i16* %256, align 2
  %260 = getelementptr inbounds i16, i16* %0, i64 7
  %261 = getelementptr inbounds i8, i8* %1, i64 7
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i16
  store i16 %263, i16* %260, align 2
  %264 = getelementptr inbounds i16, i16* %0, i64 8
  %265 = getelementptr inbounds i8, i8* %1, i64 8
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i16
  store i16 %267, i16* %264, align 2
  %268 = getelementptr inbounds i16, i16* %0, i64 9
  %269 = getelementptr inbounds i8, i8* %1, i64 9
  %270 = load i8, i8* %269, align 1
  %271 = zext i8 %270 to i16
  store i16 %271, i16* %268, align 2
  %272 = getelementptr inbounds i16, i16* %0, i64 10
  %273 = getelementptr inbounds i8, i8* %1, i64 10
  %274 = load i8, i8* %273, align 1
  %275 = zext i8 %274 to i16
  store i16 %275, i16* %272, align 2
  %276 = getelementptr inbounds i16, i16* %0, i64 11
  %277 = getelementptr inbounds i8, i8* %1, i64 11
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i16
  store i16 %279, i16* %276, align 2
  br label %615

280:                                              ; preds = %3
  %281 = load i8, i8* %1, align 1
  %282 = zext i8 %281 to i16
  store i16 %282, i16* %0, align 2
  %283 = getelementptr inbounds i16, i16* %0, i64 1
  %284 = getelementptr inbounds i8, i8* %1, i64 1
  %285 = load i8, i8* %284, align 1
  %286 = zext i8 %285 to i16
  store i16 %286, i16* %283, align 2
  %287 = getelementptr inbounds i16, i16* %0, i64 2
  %288 = getelementptr inbounds i8, i8* %1, i64 2
  %289 = load i8, i8* %288, align 1
  %290 = zext i8 %289 to i16
  store i16 %290, i16* %287, align 2
  %291 = getelementptr inbounds i16, i16* %0, i64 3
  %292 = getelementptr inbounds i8, i8* %1, i64 3
  %293 = load i8, i8* %292, align 1
  %294 = zext i8 %293 to i16
  store i16 %294, i16* %291, align 2
  %295 = getelementptr inbounds i16, i16* %0, i64 4
  %296 = getelementptr inbounds i8, i8* %1, i64 4
  %297 = load i8, i8* %296, align 1
  %298 = zext i8 %297 to i16
  store i16 %298, i16* %295, align 2
  %299 = getelementptr inbounds i16, i16* %0, i64 5
  %300 = getelementptr inbounds i8, i8* %1, i64 5
  %301 = load i8, i8* %300, align 1
  %302 = zext i8 %301 to i16
  store i16 %302, i16* %299, align 2
  %303 = getelementptr inbounds i16, i16* %0, i64 6
  %304 = getelementptr inbounds i8, i8* %1, i64 6
  %305 = load i8, i8* %304, align 1
  %306 = zext i8 %305 to i16
  store i16 %306, i16* %303, align 2
  %307 = getelementptr inbounds i16, i16* %0, i64 7
  %308 = getelementptr inbounds i8, i8* %1, i64 7
  %309 = load i8, i8* %308, align 1
  %310 = zext i8 %309 to i16
  store i16 %310, i16* %307, align 2
  %311 = getelementptr inbounds i16, i16* %0, i64 8
  %312 = getelementptr inbounds i8, i8* %1, i64 8
  %313 = load i8, i8* %312, align 1
  %314 = zext i8 %313 to i16
  store i16 %314, i16* %311, align 2
  %315 = getelementptr inbounds i16, i16* %0, i64 9
  %316 = getelementptr inbounds i8, i8* %1, i64 9
  %317 = load i8, i8* %316, align 1
  %318 = zext i8 %317 to i16
  store i16 %318, i16* %315, align 2
  %319 = getelementptr inbounds i16, i16* %0, i64 10
  %320 = getelementptr inbounds i8, i8* %1, i64 10
  %321 = load i8, i8* %320, align 1
  %322 = zext i8 %321 to i16
  store i16 %322, i16* %319, align 2
  br label %615

323:                                              ; preds = %3
  %324 = load i8, i8* %1, align 1
  %325 = zext i8 %324 to i16
  store i16 %325, i16* %0, align 2
  %326 = getelementptr inbounds i16, i16* %0, i64 1
  %327 = getelementptr inbounds i8, i8* %1, i64 1
  %328 = load i8, i8* %327, align 1
  %329 = zext i8 %328 to i16
  store i16 %329, i16* %326, align 2
  %330 = getelementptr inbounds i16, i16* %0, i64 2
  %331 = getelementptr inbounds i8, i8* %1, i64 2
  %332 = load i8, i8* %331, align 1
  %333 = zext i8 %332 to i16
  store i16 %333, i16* %330, align 2
  %334 = getelementptr inbounds i16, i16* %0, i64 3
  %335 = getelementptr inbounds i8, i8* %1, i64 3
  %336 = load i8, i8* %335, align 1
  %337 = zext i8 %336 to i16
  store i16 %337, i16* %334, align 2
  %338 = getelementptr inbounds i16, i16* %0, i64 4
  %339 = getelementptr inbounds i8, i8* %1, i64 4
  %340 = load i8, i8* %339, align 1
  %341 = zext i8 %340 to i16
  store i16 %341, i16* %338, align 2
  %342 = getelementptr inbounds i16, i16* %0, i64 5
  %343 = getelementptr inbounds i8, i8* %1, i64 5
  %344 = load i8, i8* %343, align 1
  %345 = zext i8 %344 to i16
  store i16 %345, i16* %342, align 2
  %346 = getelementptr inbounds i16, i16* %0, i64 6
  %347 = getelementptr inbounds i8, i8* %1, i64 6
  %348 = load i8, i8* %347, align 1
  %349 = zext i8 %348 to i16
  store i16 %349, i16* %346, align 2
  %350 = getelementptr inbounds i16, i16* %0, i64 7
  %351 = getelementptr inbounds i8, i8* %1, i64 7
  %352 = load i8, i8* %351, align 1
  %353 = zext i8 %352 to i16
  store i16 %353, i16* %350, align 2
  %354 = getelementptr inbounds i16, i16* %0, i64 8
  %355 = getelementptr inbounds i8, i8* %1, i64 8
  %356 = load i8, i8* %355, align 1
  %357 = zext i8 %356 to i16
  store i16 %357, i16* %354, align 2
  %358 = getelementptr inbounds i16, i16* %0, i64 9
  %359 = getelementptr inbounds i8, i8* %1, i64 9
  %360 = load i8, i8* %359, align 1
  %361 = zext i8 %360 to i16
  store i16 %361, i16* %358, align 2
  br label %615

362:                                              ; preds = %3
  %363 = load i8, i8* %1, align 1
  %364 = zext i8 %363 to i16
  store i16 %364, i16* %0, align 2
  %365 = getelementptr inbounds i16, i16* %0, i64 1
  %366 = getelementptr inbounds i8, i8* %1, i64 1
  %367 = load i8, i8* %366, align 1
  %368 = zext i8 %367 to i16
  store i16 %368, i16* %365, align 2
  %369 = getelementptr inbounds i16, i16* %0, i64 2
  %370 = getelementptr inbounds i8, i8* %1, i64 2
  %371 = load i8, i8* %370, align 1
  %372 = zext i8 %371 to i16
  store i16 %372, i16* %369, align 2
  %373 = getelementptr inbounds i16, i16* %0, i64 3
  %374 = getelementptr inbounds i8, i8* %1, i64 3
  %375 = load i8, i8* %374, align 1
  %376 = zext i8 %375 to i16
  store i16 %376, i16* %373, align 2
  %377 = getelementptr inbounds i16, i16* %0, i64 4
  %378 = getelementptr inbounds i8, i8* %1, i64 4
  %379 = load i8, i8* %378, align 1
  %380 = zext i8 %379 to i16
  store i16 %380, i16* %377, align 2
  %381 = getelementptr inbounds i16, i16* %0, i64 5
  %382 = getelementptr inbounds i8, i8* %1, i64 5
  %383 = load i8, i8* %382, align 1
  %384 = zext i8 %383 to i16
  store i16 %384, i16* %381, align 2
  %385 = getelementptr inbounds i16, i16* %0, i64 6
  %386 = getelementptr inbounds i8, i8* %1, i64 6
  %387 = load i8, i8* %386, align 1
  %388 = zext i8 %387 to i16
  store i16 %388, i16* %385, align 2
  %389 = getelementptr inbounds i16, i16* %0, i64 7
  %390 = getelementptr inbounds i8, i8* %1, i64 7
  %391 = load i8, i8* %390, align 1
  %392 = zext i8 %391 to i16
  store i16 %392, i16* %389, align 2
  %393 = getelementptr inbounds i16, i16* %0, i64 8
  %394 = getelementptr inbounds i8, i8* %1, i64 8
  %395 = load i8, i8* %394, align 1
  %396 = zext i8 %395 to i16
  store i16 %396, i16* %393, align 2
  br label %615

397:                                              ; preds = %3
  %398 = load i8, i8* %1, align 1
  %399 = zext i8 %398 to i16
  store i16 %399, i16* %0, align 2
  %400 = getelementptr inbounds i16, i16* %0, i64 1
  %401 = getelementptr inbounds i8, i8* %1, i64 1
  %402 = load i8, i8* %401, align 1
  %403 = zext i8 %402 to i16
  store i16 %403, i16* %400, align 2
  %404 = getelementptr inbounds i16, i16* %0, i64 2
  %405 = getelementptr inbounds i8, i8* %1, i64 2
  %406 = load i8, i8* %405, align 1
  %407 = zext i8 %406 to i16
  store i16 %407, i16* %404, align 2
  %408 = getelementptr inbounds i16, i16* %0, i64 3
  %409 = getelementptr inbounds i8, i8* %1, i64 3
  %410 = load i8, i8* %409, align 1
  %411 = zext i8 %410 to i16
  store i16 %411, i16* %408, align 2
  %412 = getelementptr inbounds i16, i16* %0, i64 4
  %413 = getelementptr inbounds i8, i8* %1, i64 4
  %414 = load i8, i8* %413, align 1
  %415 = zext i8 %414 to i16
  store i16 %415, i16* %412, align 2
  %416 = getelementptr inbounds i16, i16* %0, i64 5
  %417 = getelementptr inbounds i8, i8* %1, i64 5
  %418 = load i8, i8* %417, align 1
  %419 = zext i8 %418 to i16
  store i16 %419, i16* %416, align 2
  %420 = getelementptr inbounds i16, i16* %0, i64 6
  %421 = getelementptr inbounds i8, i8* %1, i64 6
  %422 = load i8, i8* %421, align 1
  %423 = zext i8 %422 to i16
  store i16 %423, i16* %420, align 2
  %424 = getelementptr inbounds i16, i16* %0, i64 7
  %425 = getelementptr inbounds i8, i8* %1, i64 7
  %426 = load i8, i8* %425, align 1
  %427 = zext i8 %426 to i16
  store i16 %427, i16* %424, align 2
  br label %615

428:                                              ; preds = %3
  %429 = load i8, i8* %1, align 1
  %430 = zext i8 %429 to i16
  store i16 %430, i16* %0, align 2
  %431 = getelementptr inbounds i16, i16* %0, i64 1
  %432 = getelementptr inbounds i8, i8* %1, i64 1
  %433 = load i8, i8* %432, align 1
  %434 = zext i8 %433 to i16
  store i16 %434, i16* %431, align 2
  %435 = getelementptr inbounds i16, i16* %0, i64 2
  %436 = getelementptr inbounds i8, i8* %1, i64 2
  %437 = load i8, i8* %436, align 1
  %438 = zext i8 %437 to i16
  store i16 %438, i16* %435, align 2
  %439 = getelementptr inbounds i16, i16* %0, i64 3
  %440 = getelementptr inbounds i8, i8* %1, i64 3
  %441 = load i8, i8* %440, align 1
  %442 = zext i8 %441 to i16
  store i16 %442, i16* %439, align 2
  %443 = getelementptr inbounds i16, i16* %0, i64 4
  %444 = getelementptr inbounds i8, i8* %1, i64 4
  %445 = load i8, i8* %444, align 1
  %446 = zext i8 %445 to i16
  store i16 %446, i16* %443, align 2
  %447 = getelementptr inbounds i16, i16* %0, i64 5
  %448 = getelementptr inbounds i8, i8* %1, i64 5
  %449 = load i8, i8* %448, align 1
  %450 = zext i8 %449 to i16
  store i16 %450, i16* %447, align 2
  %451 = getelementptr inbounds i16, i16* %0, i64 6
  %452 = getelementptr inbounds i8, i8* %1, i64 6
  %453 = load i8, i8* %452, align 1
  %454 = zext i8 %453 to i16
  store i16 %454, i16* %451, align 2
  br label %615

455:                                              ; preds = %3
  %456 = load i8, i8* %1, align 1
  %457 = zext i8 %456 to i16
  store i16 %457, i16* %0, align 2
  %458 = getelementptr inbounds i16, i16* %0, i64 1
  %459 = getelementptr inbounds i8, i8* %1, i64 1
  %460 = load i8, i8* %459, align 1
  %461 = zext i8 %460 to i16
  store i16 %461, i16* %458, align 2
  %462 = getelementptr inbounds i16, i16* %0, i64 2
  %463 = getelementptr inbounds i8, i8* %1, i64 2
  %464 = load i8, i8* %463, align 1
  %465 = zext i8 %464 to i16
  store i16 %465, i16* %462, align 2
  %466 = getelementptr inbounds i16, i16* %0, i64 3
  %467 = getelementptr inbounds i8, i8* %1, i64 3
  %468 = load i8, i8* %467, align 1
  %469 = zext i8 %468 to i16
  store i16 %469, i16* %466, align 2
  %470 = getelementptr inbounds i16, i16* %0, i64 4
  %471 = getelementptr inbounds i8, i8* %1, i64 4
  %472 = load i8, i8* %471, align 1
  %473 = zext i8 %472 to i16
  store i16 %473, i16* %470, align 2
  %474 = getelementptr inbounds i16, i16* %0, i64 5
  %475 = getelementptr inbounds i8, i8* %1, i64 5
  %476 = load i8, i8* %475, align 1
  %477 = zext i8 %476 to i16
  store i16 %477, i16* %474, align 2
  br label %615

478:                                              ; preds = %3
  %479 = load i8, i8* %1, align 1
  %480 = zext i8 %479 to i16
  store i16 %480, i16* %0, align 2
  %481 = getelementptr inbounds i16, i16* %0, i64 1
  %482 = getelementptr inbounds i8, i8* %1, i64 1
  %483 = load i8, i8* %482, align 1
  %484 = zext i8 %483 to i16
  store i16 %484, i16* %481, align 2
  %485 = getelementptr inbounds i16, i16* %0, i64 2
  %486 = getelementptr inbounds i8, i8* %1, i64 2
  %487 = load i8, i8* %486, align 1
  %488 = zext i8 %487 to i16
  store i16 %488, i16* %485, align 2
  %489 = getelementptr inbounds i16, i16* %0, i64 3
  %490 = getelementptr inbounds i8, i8* %1, i64 3
  %491 = load i8, i8* %490, align 1
  %492 = zext i8 %491 to i16
  store i16 %492, i16* %489, align 2
  %493 = getelementptr inbounds i16, i16* %0, i64 4
  %494 = getelementptr inbounds i8, i8* %1, i64 4
  %495 = load i8, i8* %494, align 1
  %496 = zext i8 %495 to i16
  store i16 %496, i16* %493, align 2
  br label %615

497:                                              ; preds = %3
  %498 = load i8, i8* %1, align 1
  %499 = zext i8 %498 to i16
  store i16 %499, i16* %0, align 2
  %500 = getelementptr inbounds i16, i16* %0, i64 1
  %501 = getelementptr inbounds i8, i8* %1, i64 1
  %502 = load i8, i8* %501, align 1
  %503 = zext i8 %502 to i16
  store i16 %503, i16* %500, align 2
  %504 = getelementptr inbounds i16, i16* %0, i64 2
  %505 = getelementptr inbounds i8, i8* %1, i64 2
  %506 = load i8, i8* %505, align 1
  %507 = zext i8 %506 to i16
  store i16 %507, i16* %504, align 2
  %508 = getelementptr inbounds i16, i16* %0, i64 3
  %509 = getelementptr inbounds i8, i8* %1, i64 3
  %510 = load i8, i8* %509, align 1
  %511 = zext i8 %510 to i16
  store i16 %511, i16* %508, align 2
  br label %615

512:                                              ; preds = %3
  %513 = load i8, i8* %1, align 1
  %514 = zext i8 %513 to i16
  store i16 %514, i16* %0, align 2
  %515 = getelementptr inbounds i16, i16* %0, i64 1
  %516 = getelementptr inbounds i8, i8* %1, i64 1
  %517 = load i8, i8* %516, align 1
  %518 = zext i8 %517 to i16
  store i16 %518, i16* %515, align 2
  %519 = getelementptr inbounds i16, i16* %0, i64 2
  %520 = getelementptr inbounds i8, i8* %1, i64 2
  %521 = load i8, i8* %520, align 1
  %522 = zext i8 %521 to i16
  store i16 %522, i16* %519, align 2
  br label %615

523:                                              ; preds = %3
  %524 = load i8, i8* %1, align 1
  %525 = zext i8 %524 to i16
  store i16 %525, i16* %0, align 2
  %526 = getelementptr inbounds i16, i16* %0, i64 1
  %527 = getelementptr inbounds i8, i8* %1, i64 1
  %528 = load i8, i8* %527, align 1
  %529 = zext i8 %528 to i16
  store i16 %529, i16* %526, align 2
  br label %615

530:                                              ; preds = %3
  %531 = load i8, i8* %1, align 1
  %532 = zext i8 %531 to i16
  store i16 %532, i16* %0, align 2
  br label %615

533:                                              ; preds = %3
  %534 = getelementptr inbounds i8, i8* %1, i64 %2
  %535 = icmp eq i64 %2, 0
  br i1 %535, label %615, label %536

536:                                              ; preds = %533
  %537 = icmp ult i64 %2, 16
  br i1 %537, label %604, label %538

538:                                              ; preds = %536
  %539 = getelementptr i16, i16* %0, i64 %2
  %540 = bitcast i16* %539 to i8*
  %541 = icmp ugt i8* %534, %4
  %542 = icmp ugt i8* %540, %1
  %543 = and i1 %541, %542
  br i1 %543, label %604, label %544

544:                                              ; preds = %538
  %545 = and i64 %2, -16
  %546 = getelementptr i16, i16* %0, i64 %545
  %547 = getelementptr i8, i8* %1, i64 %545
  %548 = add i64 %545, -16
  %549 = lshr exact i64 %548, 4
  %550 = add nuw nsw i64 %549, 1
  %551 = and i64 %550, 1
  %552 = icmp eq i64 %548, 0
  br i1 %552, label %586, label %553

553:                                              ; preds = %544
  %554 = sub nuw nsw i64 %550, %551
  br label %555

555:                                              ; preds = %555, %553
  %556 = phi i64 [ 0, %553 ], [ %583, %555 ]
  %557 = phi i64 [ %554, %553 ], [ %584, %555 ]
  %558 = getelementptr i16, i16* %0, i64 %556
  %559 = getelementptr i8, i8* %1, i64 %556
  %560 = bitcast i8* %559 to <8 x i8>*
  %561 = load <8 x i8>, <8 x i8>* %560, align 1, !alias.scope !5
  %562 = getelementptr i8, i8* %559, i64 8
  %563 = bitcast i8* %562 to <8 x i8>*
  %564 = load <8 x i8>, <8 x i8>* %563, align 1, !alias.scope !5
  %565 = zext <8 x i8> %561 to <8 x i16>
  %566 = zext <8 x i8> %564 to <8 x i16>
  %567 = bitcast i16* %558 to <8 x i16>*
  store <8 x i16> %565, <8 x i16>* %567, align 2, !alias.scope !8, !noalias !5
  %568 = getelementptr i16, i16* %558, i64 8
  %569 = bitcast i16* %568 to <8 x i16>*
  store <8 x i16> %566, <8 x i16>* %569, align 2, !alias.scope !8, !noalias !5
  %570 = or i64 %556, 16
  %571 = getelementptr i16, i16* %0, i64 %570
  %572 = getelementptr i8, i8* %1, i64 %570
  %573 = bitcast i8* %572 to <8 x i8>*
  %574 = load <8 x i8>, <8 x i8>* %573, align 1, !alias.scope !5
  %575 = getelementptr i8, i8* %572, i64 8
  %576 = bitcast i8* %575 to <8 x i8>*
  %577 = load <8 x i8>, <8 x i8>* %576, align 1, !alias.scope !5
  %578 = zext <8 x i8> %574 to <8 x i16>
  %579 = zext <8 x i8> %577 to <8 x i16>
  %580 = bitcast i16* %571 to <8 x i16>*
  store <8 x i16> %578, <8 x i16>* %580, align 2, !alias.scope !8, !noalias !5
  %581 = getelementptr i16, i16* %571, i64 8
  %582 = bitcast i16* %581 to <8 x i16>*
  store <8 x i16> %579, <8 x i16>* %582, align 2, !alias.scope !8, !noalias !5
  %583 = add i64 %556, 32
  %584 = add i64 %557, -2
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %586, label %555, !llvm.loop !10

586:                                              ; preds = %555, %544
  %587 = phi i64 [ 0, %544 ], [ %583, %555 ]
  %588 = icmp eq i64 %551, 0
  br i1 %588, label %602, label %589

589:                                              ; preds = %586
  %590 = getelementptr i16, i16* %0, i64 %587
  %591 = getelementptr i8, i8* %1, i64 %587
  %592 = bitcast i8* %591 to <8 x i8>*
  %593 = load <8 x i8>, <8 x i8>* %592, align 1, !alias.scope !5
  %594 = getelementptr i8, i8* %591, i64 8
  %595 = bitcast i8* %594 to <8 x i8>*
  %596 = load <8 x i8>, <8 x i8>* %595, align 1, !alias.scope !5
  %597 = zext <8 x i8> %593 to <8 x i16>
  %598 = zext <8 x i8> %596 to <8 x i16>
  %599 = bitcast i16* %590 to <8 x i16>*
  store <8 x i16> %597, <8 x i16>* %599, align 2, !alias.scope !8, !noalias !5
  %600 = getelementptr i16, i16* %590, i64 8
  %601 = bitcast i16* %600 to <8 x i16>*
  store <8 x i16> %598, <8 x i16>* %601, align 2, !alias.scope !8, !noalias !5
  br label %602

602:                                              ; preds = %586, %589
  %603 = icmp eq i64 %545, %2
  br i1 %603, label %615, label %604

604:                                              ; preds = %602, %538, %536
  %605 = phi i16* [ %0, %538 ], [ %0, %536 ], [ %546, %602 ]
  %606 = phi i8* [ %1, %538 ], [ %1, %536 ], [ %547, %602 ]
  br label %607

607:                                              ; preds = %604, %607
  %608 = phi i16* [ %613, %607 ], [ %605, %604 ]
  %609 = phi i8* [ %612, %607 ], [ %606, %604 ]
  %610 = load i8, i8* %609, align 1
  %611 = zext i8 %610 to i16
  store i16 %611, i16* %608, align 2
  %612 = getelementptr inbounds i8, i8* %609, i64 1
  %613 = getelementptr inbounds i16, i16* %608, i64 1
  %614 = icmp eq i8* %612, %534
  br i1 %614, label %615, label %607, !llvm.loop !12

615:                                              ; preds = %607, %602, %5, %68, %127, %182, %233, %280, %323, %362, %397, %428, %455, %478, %497, %512, %523, %530, %533
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal27Utf8ExternalStreamingStream10FetchChunkEv(%"class.v8::internal::Utf8ExternalStreamingStream"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %3 = alloca i8*, align 8
  %4 = alloca %"struct.v8::internal::Utf8ExternalStreamingStream::StreamPosition", align 8
  %5 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 0, i32 0, i32 5
  %7 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 40, i1 false) #10
  %9 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1173", %"struct.std::__1::atomic.1173"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  %11 = icmp eq %"class.v8::internal::RuntimeCallStats"* %7, null
  %12 = or i1 %11, %10
  br i1 %12, label %15, label %13, !prof !3

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %2, i64 0, i32 0
  store %"class.v8::internal::RuntimeCallStats"* %7, %"class.v8::internal::RuntimeCallStats"** %14, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* nonnull %7, %"class.v8::internal::RuntimeCallTimer"* %8, i32 161) #10
  br label %15

15:                                               ; preds = %1, %13
  %16 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %3, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 3
  %18 = load %"class.v8::ScriptCompiler::ExternalSourceStream"*, %"class.v8::ScriptCompiler::ExternalSourceStream"** %17, align 8
  %19 = bitcast %"class.v8::ScriptCompiler::ExternalSourceStream"* %18 to i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)***
  %20 = load i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)**, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*** %19, align 8
  %21 = getelementptr inbounds i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)** %20, i64 2
  %22 = load i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)** %21, align 8
  %23 = call i64 %22(%"class.v8::ScriptCompiler::ExternalSourceStream"* %18, i8** nonnull %3) #10
  %24 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 1
  %25 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::StreamPosition"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25)
  %26 = bitcast i8** %3 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 1
  %29 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::StreamPosition"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 8 %29, i64 24, i1 false)
  %30 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 1, i32 0, i32 1
  %31 = load %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"*, %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %33 = load %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"*, %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"** %32, align 8
  %34 = icmp ult %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %31, %33
  %35 = ptrtoint %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %33 to i64
  br i1 %34, label %36, label %44

36:                                               ; preds = %15
  %37 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %31 to i64*
  store i64 %27, i64* %37, align 8
  %38 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %31, i64 0, i32 1
  store i64 %23, i64* %38, align 8
  %39 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %31, i64 0, i32 2
  %40 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::StreamPosition"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* nonnull align 8 %25, i64 24, i1 false)
  %41 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %31, i64 1
  %42 = ptrtoint %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %41 to i64
  %43 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"** %30 to i64*
  store i64 %42, i64* %43, align 8
  br label %100

44:                                               ; preds = %15
  %45 = ptrtoint %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %31 to i64
  %46 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"** %30 to i64*
  %47 = bitcast %"class.std::__1::vector"* %24 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %45, %48
  %50 = sdiv exact i64 %49, 40
  %51 = add nsw i64 %50, 1
  %52 = icmp ugt i64 %51, 461168601842738790
  br i1 %52, label %53, label %55

53:                                               ; preds = %44
  %54 = bitcast %"class.std::__1::vector"* %24 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %54) #11
  unreachable

55:                                               ; preds = %44
  %56 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"** %32 to i64*
  %57 = sub i64 %35, %48
  %58 = sdiv exact i64 %57, 40
  %59 = icmp ult i64 %58, 230584300921369395
  br i1 %59, label %60, label %65

60:                                               ; preds = %55
  %61 = shl nsw i64 %58, 1
  %62 = icmp ult i64 %61, %51
  %63 = select i1 %62, i64 %51, i64 %61
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %70, label %65

65:                                               ; preds = %60, %55
  %66 = phi i64 [ %63, %60 ], [ 461168601842738790, %55 ]
  %67 = mul i64 %66, 40
  %68 = call i8* @_Znwm(i64 %67) #12
  %69 = bitcast i8* %68 to %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"*
  br label %70

70:                                               ; preds = %65, %60
  %71 = phi i64 [ %66, %65 ], [ 0, %60 ]
  %72 = phi %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* [ %69, %65 ], [ null, %60 ]
  %73 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %72, i64 %50
  %74 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %72, i64 %71
  %75 = ptrtoint %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %74 to i64
  %76 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %73 to i64*
  store i64 %27, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %72, i64 %50, i32 1
  store i64 %23, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %72, i64 %50, i32 2
  %79 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::StreamPosition"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* nonnull align 8 %25, i64 24, i1 false)
  %80 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %73, i64 1
  %81 = ptrtoint %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %80 to i64
  %82 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %24, i64 0, i32 0, i32 0
  %83 = load %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"*, %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"** %82, align 8
  %84 = load i64, i64* %46, align 8
  %85 = ptrtoint %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %83 to i64
  %86 = sub i64 %84, %85
  %87 = sdiv exact i64 %86, -40
  %88 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %73, i64 %87
  %89 = ptrtoint %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %88 to i64
  %90 = icmp sgt i64 %86, 0
  br i1 %90, label %91, label %95

91:                                               ; preds = %70
  %92 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %88 to i8*
  %93 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 %86, i1 false) #10
  %94 = load %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"*, %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"** %82, align 8
  br label %95

95:                                               ; preds = %91, %70
  %96 = phi %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* [ %83, %70 ], [ %94, %91 ]
  store i64 %89, i64* %47, align 8
  store i64 %81, i64* %46, align 8
  store i64 %75, i64* %56, align 8
  %97 = icmp eq %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %96, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %95
  %99 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %96 to i8*
  call void @_ZdlPv(i8* %99) #12
  br label %100

100:                                              ; preds = %36, %95, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25)
  %101 = icmp ne i64 %23, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  %102 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %2, i64 0, i32 0
  %103 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %102, align 8
  %104 = icmp eq %"class.v8::internal::RuntimeCallStats"* %103, null
  br i1 %104, label %106, label %105, !prof !3

105:                                              ; preds = %100
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %103, %"class.v8::internal::RuntimeCallTimer"* %8) #10
  br label %106

106:                                              ; preds = %100, %105
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #10
  ret i1 %101
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal27Utf8ExternalStreamingStream14SearchPositionEm(%"class.v8::internal::Utf8ExternalStreamingStream"*, i64) local_unnamed_addr #1 align 2 {
  %3 = alloca %"struct.v8::internal::Utf8ExternalStreamingStream::StreamPosition", align 8
  %4 = alloca %"struct.v8::internal::Utf8ExternalStreamingStream::StreamPosition", align 8
  %5 = alloca %"struct.v8::internal::Utf8ExternalStreamingStream::StreamPosition", align 8
  %6 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 1, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, %1
  br i1 %8, label %98, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %12 = load %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"*, %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = load %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"*, %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"** %13, align 8
  %15 = icmp eq %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %12, %14
  br i1 %15, label %19, label %16

16:                                               ; preds = %9
  %17 = ptrtoint %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %12 to i64
  %18 = ptrtoint %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %14 to i64
  br label %26

19:                                               ; preds = %9
  %20 = tail call zeroext i1 @_ZN2v88internal27Utf8ExternalStreamingStream10FetchChunkEv(%"class.v8::internal::Utf8ExternalStreamingStream"* %0)
  %21 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"** %13 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector"* %10 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = inttoptr i64 %24 to %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"*
  br label %26

26:                                               ; preds = %16, %19
  %27 = phi %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* [ %25, %19 ], [ %12, %16 ]
  %28 = phi i64 [ %24, %19 ], [ %17, %16 ]
  %29 = phi i64 [ %22, %19 ], [ %18, %16 ]
  %30 = sub i64 %29, %28
  %31 = sdiv exact i64 %30, 40
  br label %32

32:                                               ; preds = %36, %26
  %33 = phi i64 [ %31, %26 ], [ %34, %36 ]
  %34 = add i64 %33, -1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %27, i64 %34, i32 2, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp ugt i64 %38, %1
  br i1 %39, label %32, label %40

40:                                               ; preds = %32, %36
  %41 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %27, i64 %34, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %51

44:                                               ; preds = %40
  %45 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::StreamPosition"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45)
  %46 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %27, i64 %34, i32 2
  %47 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::StreamPosition"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %45, i8* align 8 %47, i64 24, i1 false)
  %48 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 0
  store i64 %34, i64* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 1
  %50 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::StreamPosition"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* nonnull align 8 %45, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45)
  br label %98

51:                                               ; preds = %40
  %52 = icmp ult i64 %33, %31
  br i1 %52, label %53, label %84

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %27, i64 %34, i32 2, i32 2
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %76

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %27, i64 %33, i32 2, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %27, i64 %34, i32 2, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = sub i64 %59, %61
  %63 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %27, i64 %33, i32 2, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %27, i64 %34, i32 2, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %64, %66
  %68 = icmp eq i64 %62, %67
  br i1 %68, label %69, label %76

69:                                               ; preds = %57
  %70 = add i64 %61, %1
  %71 = sub i64 %70, %66
  %72 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 0
  store i64 %34, i64* %72, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 1, i32 0
  store i64 %71, i64* %73, align 8
  store i64 %1, i64* %6, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 1, i32 2
  store i32 0, i32* %74, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 1, i32 3
  store i8 12, i8* %75, align 4
  br label %98

76:                                               ; preds = %53, %57
  %77 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::StreamPosition"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77)
  %78 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %27, i64 %34, i32 2
  %79 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::StreamPosition"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %79, i64 24, i1 false)
  %80 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 0
  store i64 %34, i64* %80, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 1
  %82 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::StreamPosition"* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* nonnull align 8 %77, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77)
  %83 = tail call zeroext i1 @_ZN2v88internal27Utf8ExternalStreamingStream14SkipToPositionEm(%"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 %1)
  br label %98

84:                                               ; preds = %51
  %85 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::StreamPosition"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85)
  %86 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %27, i64 %34, i32 2
  %87 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::StreamPosition"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %85, i8* align 8 %87, i64 24, i1 false)
  %88 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 0
  store i64 %34, i64* %88, align 8
  %89 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 1
  %90 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::StreamPosition"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* nonnull align 8 %85, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85)
  %91 = tail call zeroext i1 @_ZN2v88internal27Utf8ExternalStreamingStream14SkipToPositionEm(%"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 %1)
  br i1 %91, label %98, label %92

92:                                               ; preds = %84, %94
  %93 = tail call zeroext i1 @_ZN2v88internal27Utf8ExternalStreamingStream10FetchChunkEv(%"class.v8::internal::Utf8ExternalStreamingStream"* %0)
  br i1 %93, label %94, label %98

94:                                               ; preds = %92
  %95 = tail call zeroext i1 @_ZN2v88internal27Utf8ExternalStreamingStream14SkipToPositionEm(%"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 %1)
  %96 = xor i1 %93, true
  %97 = or i1 %95, %96
  br i1 %97, label %98, label %92

98:                                               ; preds = %92, %94, %84, %44, %76, %69, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal27Utf8ExternalStreamingStream10FillBufferEm(%"class.v8::internal::Utf8ExternalStreamingStream"*, i64) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 0, i32 1, i64 0
  %4 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 0, i32 0, i32 2
  store i16* %3, i16** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 0, i32 0, i32 3
  store i16* %3, i16** %5, align 8
  tail call void @_ZN2v88internal27Utf8ExternalStreamingStream14SearchPositionEm(%"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 %1)
  %6 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = sdiv exact i64 %14, 40
  %16 = icmp eq i64 %7, %15
  br i1 %16, label %26, label %17

17:                                               ; preds = %2
  %18 = inttoptr i64 %13 to %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"*
  %19 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %18, i64 %7, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 2, i32 1, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %60, label %26

26:                                               ; preds = %17, %2, %22
  br label %27

27:                                               ; preds = %26, %46
  %28 = phi i8 [ %47, %46 ], [ 0, %26 ]
  %29 = load i16*, i16** %4, align 8
  %30 = load i16*, i16** %5, align 8
  %31 = icmp eq i16* %29, %30
  br i1 %31, label %35, label %32

32:                                               ; preds = %27
  %33 = ptrtoint i16* %29 to i64
  %34 = ptrtoint i16* %30 to i64
  br label %55

35:                                               ; preds = %27
  %36 = load i64, i64* %6, align 8
  %37 = load i64, i64* %10, align 8
  %38 = load i64, i64* %12, align 8
  %39 = sub i64 %37, %38
  %40 = sdiv exact i64 %39, 40
  %41 = icmp eq i64 %36, %40
  br i1 %41, label %42, label %46

42:                                               ; preds = %35
  %43 = tail call zeroext i1 @_ZN2v88internal27Utf8ExternalStreamingStream10FetchChunkEv(%"class.v8::internal::Utf8ExternalStreamingStream"* %0)
  %44 = xor i1 %43, true
  %45 = zext i1 %44 to i8
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i8 [ %45, %42 ], [ %28, %35 ]
  tail call void @_ZN2v88internal27Utf8ExternalStreamingStream26FillBufferFromCurrentChunkEv(%"class.v8::internal::Utf8ExternalStreamingStream"* %0)
  %48 = and i8 %47, 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %27, label %50

50:                                               ; preds = %46
  %51 = bitcast i16** %5 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast i16** %4 to i64*
  %54 = load i64, i64* %53, align 8
  br label %55

55:                                               ; preds = %32, %50
  %56 = phi i64 [ %54, %50 ], [ %33, %32 ]
  %57 = phi i64 [ %52, %50 ], [ %34, %32 ]
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 1
  br label %60

60:                                               ; preds = %22, %55
  %61 = phi i64 [ %59, %55 ], [ 0, %22 ]
  ret i64 %61
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.v8::internal::Utf16CharacterStream"* @_ZN2v88internal13ScannerStream3ForEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #1 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = add i64 %3, 7
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = tail call %"class.v8::internal::Utf16CharacterStream"* @_ZN2v88internal13ScannerStream3ForEPNS0_7IsolateENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Isolate"* %0, i64* %1, i32 0, i32 %6)
  ret %"class.v8::internal::Utf16CharacterStream"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.v8::internal::Utf16CharacterStream"* @_ZN2v88internal13ScannerStream3ForEPNS0_7IsolateENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Isolate"*, i64*, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = load i64, i64* %1, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = icmp ult i16 %14, 64
  br i1 %15, label %16, label %80

16:                                               ; preds = %4
  %17 = load atomic i32, i32* %8 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %6, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = and i16 %22, 7
  %24 = icmp eq i16 %23, 3
  br i1 %24, label %25, label %80

25:                                               ; preds = %16
  %26 = add i64 %5, 15
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = ashr i32 %28, 1
  %30 = sext i32 %29 to i64
  %31 = add i64 %5, 11
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %6, %34
  %36 = add i64 %35, -1
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %6, %39
  %41 = add i64 %40, 7
  %42 = inttoptr i64 %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = icmp ult i16 %43, 64
  br i1 %44, label %45, label %60

45:                                               ; preds = %25
  %46 = load atomic i32, i32* %37 monotonic, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %6, %47
  %49 = add i64 %48, 7
  %50 = inttoptr i64 %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = and i16 %51, 7
  %53 = icmp eq i16 %52, 5
  br i1 %53, label %54, label %60

54:                                               ; preds = %45
  %55 = add i64 %35, 11
  %56 = inttoptr i64 %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = or i64 %6, %58
  br label %60

60:                                               ; preds = %25, %54, %45
  %61 = phi i64 [ %59, %54 ], [ %35, %45 ], [ %35, %25 ]
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %63 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %62, align 8
  %64 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %60
  %66 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %63, i64 %61) #10
  br label %82

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %69 = load i64*, i64** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %71 = load i64*, i64** %70, align 8
  %72 = icmp eq i64* %69, %71
  br i1 %72, label %73, label %75

73:                                               ; preds = %67
  %74 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #10
  br label %75

75:                                               ; preds = %73, %67
  %76 = phi i64* [ %74, %73 ], [ %69, %67 ]
  %77 = ptrtoint i64* %76 to i64
  %78 = add i64 %77, 8
  %79 = inttoptr i64 %78 to i64*
  store i64* %79, i64** %68, align 8
  store i64 %61, i64* %76, align 8
  br label %82

80:                                               ; preds = %4, %16
  %81 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i8 zeroext 0)
  br label %82

82:                                               ; preds = %75, %65, %80
  %83 = phi i64* [ %81, %80 ], [ %66, %65 ], [ %76, %75 ]
  %84 = phi i64 [ 0, %80 ], [ %30, %65 ], [ %30, %75 ]
  %85 = load i64, i64* %83, align 8
  %86 = and i64 %85, -4294967296
  %87 = add i64 %85, -1
  %88 = inttoptr i64 %87 to i32*
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = zext i32 %89 to i64
  %91 = or i64 %86, %90
  %92 = add i64 %91, 7
  %93 = inttoptr i64 %92 to i16*
  %94 = load atomic i16, i16* %93 monotonic, align 2
  %95 = icmp ult i16 %94, 64
  br i1 %95, label %96, label %126

96:                                               ; preds = %82
  %97 = load atomic i32, i32* %88 monotonic, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %86, %98
  %100 = add i64 %99, 7
  %101 = inttoptr i64 %100 to i16*
  %102 = load atomic i16, i16* %101 monotonic, align 2
  %103 = and i16 %102, 7
  %104 = icmp eq i16 %103, 2
  br i1 %104, label %105, label %126

105:                                              ; preds = %96
  %106 = load atomic i32, i32* %88 monotonic, align 4
  %107 = zext i32 %106 to i64
  %108 = or i64 %86, %107
  %109 = add i64 %108, 7
  %110 = inttoptr i64 %109 to i16*
  %111 = load atomic i16, i16* %110 monotonic, align 2
  %112 = and i16 %111, 8
  %113 = icmp eq i16 %112, 0
  br i1 %113, label %126, label %114

114:                                              ; preds = %105
  %115 = tail call i8* @_Znwm(i64 1104) #12
  %116 = sext i32 %2 to i64
  %117 = load i64, i64* %83, align 8
  %118 = sext i32 %3 to i64
  %119 = bitcast i8* %115 to i32 (...)***
  %120 = getelementptr inbounds i8, i8* %115, i64 8
  %121 = getelementptr inbounds i8, i8* %115, i64 48
  store i8 0, i8* %121, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 32, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %119, align 8
  %122 = getelementptr inbounds i8, i8* %115, i64 1080
  %123 = bitcast i8* %122 to %"class.v8::internal::ExternalStringStream"*
  tail call void @_ZN2v88internal20ExternalStringStreamIhEC2ENS0_21ExternalOneByteStringEmm(%"class.v8::internal::ExternalStringStream"* %123, i64 %117, i64 %84, i64 %118) #10
  %124 = getelementptr inbounds i8, i8* %115, i64 32
  %125 = bitcast i8* %124 to i64*
  store i64 %116, i64* %125, align 8
  br label %250

126:                                              ; preds = %105, %96, %82
  %127 = load atomic i32, i32* %88 monotonic, align 4
  %128 = zext i32 %127 to i64
  %129 = or i64 %86, %128
  %130 = add i64 %129, 7
  %131 = inttoptr i64 %130 to i16*
  %132 = load atomic i16, i16* %131 monotonic, align 2
  %133 = icmp ult i16 %132, 64
  br i1 %133, label %134, label %164

134:                                              ; preds = %126
  %135 = load atomic i32, i32* %88 monotonic, align 4
  %136 = zext i32 %135 to i64
  %137 = or i64 %86, %136
  %138 = add i64 %137, 7
  %139 = inttoptr i64 %138 to i16*
  %140 = load atomic i16, i16* %139 monotonic, align 2
  %141 = and i16 %140, 7
  %142 = icmp eq i16 %141, 2
  br i1 %142, label %143, label %164

143:                                              ; preds = %134
  %144 = load atomic i32, i32* %88 monotonic, align 4
  %145 = zext i32 %144 to i64
  %146 = or i64 %86, %145
  %147 = add i64 %146, 7
  %148 = inttoptr i64 %147 to i16*
  %149 = load atomic i16, i16* %148 monotonic, align 2
  %150 = and i16 %149, 8
  %151 = icmp eq i16 %150, 0
  br i1 %151, label %152, label %164

152:                                              ; preds = %143
  %153 = tail call i8* @_Znwm(i64 80) #12
  %154 = sext i32 %2 to i64
  %155 = load i64, i64* %83, align 8
  %156 = sext i32 %3 to i64
  %157 = bitcast i8* %153 to i32 (...)***
  %158 = getelementptr inbounds i8, i8* %153, i64 8
  %159 = getelementptr inbounds i8, i8* %153, i64 48
  store i8 0, i8* %159, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %158, i8 0, i64 32, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %157, align 8
  %160 = getelementptr inbounds i8, i8* %153, i64 56
  %161 = bitcast i8* %160 to %"class.v8::internal::ExternalStringStream.1136"*
  tail call void @_ZN2v88internal20ExternalStringStreamItEC2ENS0_21ExternalTwoByteStringEmm(%"class.v8::internal::ExternalStringStream.1136"* %161, i64 %155, i64 %84, i64 %156) #10
  %162 = getelementptr inbounds i8, i8* %153, i64 32
  %163 = bitcast i8* %162 to i64*
  store i64 %154, i64* %163, align 8
  br label %250

164:                                              ; preds = %134, %126, %143
  %165 = load atomic i32, i32* %88 monotonic, align 4
  %166 = zext i32 %165 to i64
  %167 = or i64 %86, %166
  %168 = add i64 %167, 7
  %169 = inttoptr i64 %168 to i16*
  %170 = load atomic i16, i16* %169 monotonic, align 2
  %171 = icmp ult i16 %170, 64
  br i1 %171, label %172, label %205

172:                                              ; preds = %164
  %173 = load atomic i32, i32* %88 monotonic, align 4
  %174 = zext i32 %173 to i64
  %175 = or i64 %86, %174
  %176 = add i64 %175, 7
  %177 = inttoptr i64 %176 to i16*
  %178 = load atomic i16, i16* %177 monotonic, align 2
  %179 = and i16 %178, 7
  %180 = icmp eq i16 %179, 0
  br i1 %180, label %181, label %205

181:                                              ; preds = %172
  %182 = load atomic i32, i32* %88 monotonic, align 4
  %183 = zext i32 %182 to i64
  %184 = or i64 %86, %183
  %185 = add i64 %184, 7
  %186 = inttoptr i64 %185 to i16*
  %187 = load atomic i16, i16* %186 monotonic, align 2
  %188 = and i16 %187, 8
  %189 = icmp eq i16 %188, 0
  br i1 %189, label %205, label %190

190:                                              ; preds = %181
  %191 = tail call i8* @_Znwm(i64 1104) #12
  %192 = sext i32 %2 to i64
  %193 = sext i32 %3 to i64
  %194 = bitcast i8* %191 to i32 (...)***
  %195 = getelementptr inbounds i8, i8* %191, i64 8
  %196 = getelementptr inbounds i8, i8* %191, i64 48
  store i8 0, i8* %196, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %195, i8 0, i64 24, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal23BufferedCharacterStreamINS0_12OnHeapStreamEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %194, align 8
  %197 = getelementptr inbounds i8, i8* %191, i64 1080
  %198 = bitcast i8* %197 to i64**
  store i64* %83, i64** %198, align 8
  %199 = getelementptr inbounds i8, i8* %191, i64 1088
  %200 = bitcast i8* %199 to i64*
  store i64 %84, i64* %200, align 8
  %201 = getelementptr inbounds i8, i8* %191, i64 1096
  %202 = bitcast i8* %201 to i64*
  store i64 %193, i64* %202, align 8
  %203 = getelementptr inbounds i8, i8* %191, i64 32
  %204 = bitcast i8* %203 to i64*
  store i64 %192, i64* %204, align 8
  br label %250

205:                                              ; preds = %181, %172, %164
  %206 = load atomic i32, i32* %88 monotonic, align 4
  %207 = zext i32 %206 to i64
  %208 = or i64 %86, %207
  %209 = add i64 %208, 7
  %210 = inttoptr i64 %209 to i16*
  %211 = load atomic i16, i16* %210 monotonic, align 2
  %212 = icmp ult i16 %211, 64
  br i1 %212, label %213, label %249

213:                                              ; preds = %205
  %214 = load atomic i32, i32* %88 monotonic, align 4
  %215 = zext i32 %214 to i64
  %216 = or i64 %86, %215
  %217 = add i64 %216, 7
  %218 = inttoptr i64 %217 to i16*
  %219 = load atomic i16, i16* %218 monotonic, align 2
  %220 = and i16 %219, 7
  %221 = icmp eq i16 %220, 0
  br i1 %221, label %222, label %249

222:                                              ; preds = %213
  %223 = load atomic i32, i32* %88 monotonic, align 4
  %224 = zext i32 %223 to i64
  %225 = or i64 %86, %224
  %226 = add i64 %225, 7
  %227 = inttoptr i64 %226 to i16*
  %228 = load atomic i16, i16* %227 monotonic, align 2
  %229 = and i16 %228, 8
  %230 = icmp eq i16 %229, 0
  br i1 %230, label %231, label %249

231:                                              ; preds = %222
  %232 = tail call i8* @_Znwm(i64 88) #12
  %233 = sext i32 %2 to i64
  %234 = sext i32 %3 to i64
  %235 = bitcast i8* %232 to i32 (...)***
  %236 = getelementptr inbounds i8, i8* %232, i64 8
  %237 = getelementptr inbounds i8, i8* %232, i64 48
  store i8 0, i8* %237, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %236, i8 0, i64 24, i1 false) #10
  %238 = getelementptr inbounds i8, i8* %232, i64 56
  %239 = bitcast i8* %238 to i64**
  store i64* %83, i64** %239, align 8
  %240 = getelementptr inbounds i8, i8* %232, i64 64
  %241 = bitcast i8* %240 to i64*
  store i64 %84, i64* %241, align 8
  %242 = getelementptr inbounds i8, i8* %232, i64 72
  %243 = bitcast i8* %242 to i64*
  store i64 %234, i64* %243, align 8
  %244 = getelementptr inbounds i8, i8* %232, i64 32
  %245 = bitcast i8* %244 to i64*
  store i64 %233, i64* %245, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal25RelocatingCharacterStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %235, align 8
  %246 = getelementptr inbounds i8, i8* %232, i64 80
  %247 = bitcast i8* %246 to %"class.v8::internal::Isolate"**
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %247, align 8
  %248 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap21AddGCEpilogueCallbackEPFvPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPvES4_S6_(%"class.v8::internal::Heap"* %248, void (%"class.v8::Isolate"*, i32, i32, i8*)* nonnull @_ZN2v88internal25RelocatingCharacterStream28UpdateBufferPointersCallbackEPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPv, i32 15, i8* nonnull %232) #10
  br label %250

249:                                              ; preds = %213, %205, %222
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #11
  unreachable

250:                                              ; preds = %231, %190, %152, %114
  %251 = phi i8* [ %115, %114 ], [ %153, %152 ], [ %191, %190 ], [ %232, %231 ]
  %252 = bitcast i8* %251 to %"class.v8::internal::Utf16CharacterStream"*
  ret %"class.v8::internal::Utf16CharacterStream"* %252
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #4 comdat align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp ult i16 %13, 64
  br i1 %14, label %15, label %72

15:                                               ; preds = %3
  %16 = load atomic i32, i32* %7 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %5, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = and i16 %21, 7
  %23 = icmp eq i16 %22, 1
  br i1 %23, label %24, label %72

24:                                               ; preds = %15
  %25 = load atomic i32, i32* %7 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %5, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = and i16 %30, 7
  %32 = icmp eq i16 %31, 1
  br i1 %32, label %33, label %43

33:                                               ; preds = %24
  %34 = add i64 %4, 15
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %5, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %70

43:                                               ; preds = %24, %33
  %44 = load i64, i64* %1, align 8
  %45 = and i64 %44, -4294967296
  %46 = add i64 %44, 11
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %45, %49
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %52 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %51, align 8
  %53 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %43
  %55 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %52, i64 %50) #10
  %56 = load i64, i64* %55, align 8
  br label %72

57:                                               ; preds = %43
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %61 = load i64*, i64** %60, align 8
  %62 = icmp eq i64* %59, %61
  br i1 %62, label %63, label %65

63:                                               ; preds = %57
  %64 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #10
  br label %65

65:                                               ; preds = %63, %57
  %66 = phi i64* [ %64, %63 ], [ %59, %57 ]
  %67 = ptrtoint i64* %66 to i64
  %68 = add i64 %67, 8
  %69 = inttoptr i64 %68 to i64*
  store i64* %69, i64** %58, align 8
  store i64 %50, i64* %66, align 8
  br label %72

70:                                               ; preds = %33
  %71 = tail call i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i8 zeroext %2) #10
  br label %118

72:                                               ; preds = %65, %54, %3, %15
  %73 = phi i64 [ %4, %15 ], [ %4, %3 ], [ %50, %65 ], [ %56, %54 ]
  %74 = phi i64* [ %1, %15 ], [ %1, %3 ], [ %66, %65 ], [ %55, %54 ]
  %75 = and i64 %73, -4294967296
  %76 = add i64 %73, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %75, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = icmp ult i16 %83, 64
  br i1 %84, label %85, label %118

85:                                               ; preds = %72
  %86 = load atomic i32, i32* %77 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %75, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = and i16 %91, 7
  %93 = icmp eq i16 %92, 5
  br i1 %93, label %94, label %118

94:                                               ; preds = %85
  %95 = add i64 %73, 11
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %75, %98
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %101 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %100, align 8
  %102 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %94
  %104 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %101, i64 %99) #10
  br label %118

105:                                              ; preds = %94
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %109 = load i64*, i64** %108, align 8
  %110 = icmp eq i64* %107, %109
  br i1 %110, label %111, label %113

111:                                              ; preds = %105
  %112 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #10
  br label %113

113:                                              ; preds = %111, %105
  %114 = phi i64* [ %112, %111 ], [ %107, %105 ]
  %115 = ptrtoint i64* %114 to i64
  %116 = add i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  store i64* %117, i64** %106, align 8
  store i64 %99, i64* %114, align 8
  br label %118

118:                                              ; preds = %72, %85, %103, %113, %70
  %119 = phi i64* [ %71, %70 ], [ %74, %85 ], [ %104, %103 ], [ %114, %113 ], [ %74, %72 ]
  ret i64* %119
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.v8::internal::Utf16CharacterStream"* @_ZN2v88internal13ScannerStream10ForTestingEPKc(i8*) local_unnamed_addr #1 align 2 {
  %2 = tail call i64 @strlen(i8* %0) #13
  %3 = icmp eq i8* %0, null
  %4 = select i1 %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZZN2v88internal13ScannerStream10ForTestingEPKcmE21non_null_empty_string, i64 0, i64 0), i8* %0
  %5 = tail call i8* @_Znwm(i64 1096) #12
  %6 = bitcast i8* %5 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = getelementptr inbounds i8, i8* %5, i64 48
  store i8 0, i8* %8, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal23BufferedCharacterStreamINS0_13TestingStreamEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 1080
  %10 = bitcast i8* %9 to i8**
  store i8* %4, i8** %10, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 1088
  %12 = bitcast i8* %11 to i64*
  store i64 %2, i64* %12, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 32
  %14 = bitcast i8* %13 to i64*
  store i64 0, i64* %14, align 8
  %15 = bitcast i8* %5 to %"class.v8::internal::Utf16CharacterStream"*
  ret %"class.v8::internal::Utf16CharacterStream"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Utf16CharacterStream"* @_ZN2v88internal13ScannerStream10ForTestingEPKcm(i8*, i64) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i8* %0, null
  %4 = select i1 %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZZN2v88internal13ScannerStream10ForTestingEPKcmE21non_null_empty_string, i64 0, i64 0), i8* %0
  %5 = tail call i8* @_Znwm(i64 1096) #12
  %6 = bitcast i8* %5 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = getelementptr inbounds i8, i8* %5, i64 48
  store i8 0, i8* %8, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal23BufferedCharacterStreamINS0_13TestingStreamEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 1080
  %10 = bitcast i8* %9 to i8**
  store i8* %4, i8** %10, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 1088
  %12 = bitcast i8* %11 to i64*
  store i64 %1, i64* %12, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 32
  %14 = bitcast i8* %13 to i64*
  store i64 0, i64* %14, align 8
  %15 = bitcast i8* %5 to %"class.v8::internal::Utf16CharacterStream"*
  ret %"class.v8::internal::Utf16CharacterStream"* %15
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Utf16CharacterStream"* @_ZN2v88internal13ScannerStream10ForTestingEPKtm(i16*, i64) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i16* %0, null
  %4 = select i1 %3, i16* getelementptr inbounds ([1 x i16], [1 x i16]* @_ZZN2v88internal13ScannerStream10ForTestingEPKtmE30non_null_empty_uint16_t_string, i64 0, i64 0), i16* %0
  %5 = tail call i8* @_Znwm(i64 72) #12
  %6 = bitcast i8* %5 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = getelementptr inbounds i8, i8* %5, i64 48
  store i8 0, i8* %8, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal25UnbufferedCharacterStreamINS0_13TestingStreamEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 56
  %10 = bitcast i8* %9 to i16**
  store i16* %4, i16** %10, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 64
  %12 = bitcast i8* %11 to i64*
  store i64 %1, i64* %12, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 32
  %14 = bitcast i8* %13 to i64*
  store i64 0, i64* %14, align 8
  %15 = bitcast i8* %5 to %"class.v8::internal::Utf16CharacterStream"*
  ret %"class.v8::internal::Utf16CharacterStream"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.v8::internal::Utf16CharacterStream"* @_ZN2v88internal13ScannerStream3ForEPNS_14ScriptCompiler20ExternalSourceStreamENS2_14StreamedSource8EncodingE(%"class.v8::ScriptCompiler::ExternalSourceStream"*, i32) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %56 [
    i32 1, label %3
    i32 0, label %15
    i32 3, label %27
    i32 2, label %39
  ]

3:                                                ; preds = %2
  %4 = tail call i8* @_Znwm(i64 96) #12
  %5 = bitcast i8* %4 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = getelementptr inbounds i8, i8* %4, i64 48
  store i8 0, i8* %7, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 56
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN2v88internal13ChunkedStreamItEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %4, i64 64
  %11 = bitcast i8* %10 to %"class.v8::ScriptCompiler::ExternalSourceStream"**
  store %"class.v8::ScriptCompiler::ExternalSourceStream"* %0, %"class.v8::ScriptCompiler::ExternalSourceStream"** %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 72
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #10
  %13 = getelementptr inbounds i8, i8* %4, i64 32
  %14 = bitcast i8* %13 to i64*
  store i64 0, i64* %14, align 8
  br label %57

15:                                               ; preds = %2
  %16 = tail call i8* @_Znwm(i64 1120) #12
  %17 = bitcast i8* %16 to i32 (...)***
  %18 = getelementptr inbounds i8, i8* %16, i64 8
  %19 = getelementptr inbounds i8, i8* %16, i64 48
  store i8 0, i8* %19, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %20 = getelementptr inbounds i8, i8* %16, i64 1080
  %21 = bitcast i8* %20 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN2v88internal13ChunkedStreamIhEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds i8, i8* %16, i64 1088
  %23 = bitcast i8* %22 to %"class.v8::ScriptCompiler::ExternalSourceStream"**
  store %"class.v8::ScriptCompiler::ExternalSourceStream"* %0, %"class.v8::ScriptCompiler::ExternalSourceStream"** %23, align 8
  %24 = getelementptr inbounds i8, i8* %16, i64 1096
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #10
  %25 = getelementptr inbounds i8, i8* %16, i64 32
  %26 = bitcast i8* %25 to i64*
  store i64 0, i64* %26, align 8
  br label %57

27:                                               ; preds = %2
  %28 = tail call i8* @_Znwm(i64 1120) #12
  %29 = bitcast i8* %28 to i32 (...)***
  %30 = getelementptr inbounds i8, i8* %28, i64 8
  %31 = getelementptr inbounds i8, i8* %28, i64 48
  store i8 0, i8* %31, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal26Windows1252CharacterStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %32 = getelementptr inbounds i8, i8* %28, i64 1080
  %33 = bitcast i8* %32 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN2v88internal13ChunkedStreamIhEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds i8, i8* %28, i64 1088
  %35 = bitcast i8* %34 to %"class.v8::ScriptCompiler::ExternalSourceStream"**
  store %"class.v8::ScriptCompiler::ExternalSourceStream"* %0, %"class.v8::ScriptCompiler::ExternalSourceStream"** %35, align 8
  %36 = getelementptr inbounds i8, i8* %28, i64 1096
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #10
  %37 = getelementptr inbounds i8, i8* %28, i64 32
  %38 = bitcast i8* %37 to i64*
  store i64 0, i64* %38, align 8
  br label %57

39:                                               ; preds = %2
  %40 = tail call i8* @_Znwm(i64 1144) #12
  %41 = getelementptr inbounds i8, i8* %40, i64 50
  %42 = getelementptr inbounds i8, i8* %40, i64 8
  %43 = bitcast i8* %42 to i8**
  store i8* %41, i8** %43, align 8
  %44 = getelementptr inbounds i8, i8* %40, i64 16
  %45 = bitcast i8* %44 to i8**
  store i8* %41, i8** %45, align 8
  %46 = getelementptr inbounds i8, i8* %40, i64 24
  %47 = bitcast i8* %46 to i8**
  store i8* %41, i8** %47, align 8
  %48 = getelementptr inbounds i8, i8* %40, i64 32
  %49 = bitcast i8* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = getelementptr inbounds i8, i8* %40, i64 48
  store i8 0, i8* %50, align 8
  %51 = bitcast i8* %40 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN2v88internal27Utf8ExternalStreamingStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8
  %52 = getelementptr inbounds i8, i8* %40, i64 1080
  %53 = getelementptr inbounds i8, i8* %40, i64 1132
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 52, i1 false) #10
  store i8 12, i8* %53, align 4
  %54 = getelementptr inbounds i8, i8* %40, i64 1136
  %55 = bitcast i8* %54 to %"class.v8::ScriptCompiler::ExternalSourceStream"**
  store %"class.v8::ScriptCompiler::ExternalSourceStream"* %0, %"class.v8::ScriptCompiler::ExternalSourceStream"** %55, align 8
  br label %57

56:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #11
  unreachable

57:                                               ; preds = %39, %27, %15, %3
  %58 = phi i8* [ %40, %39 ], [ %28, %27 ], [ %16, %15 ], [ %4, %3 ]
  %59 = bitcast i8* %58 to %"class.v8::internal::Utf16CharacterStream"*
  ret %"class.v8::internal::Utf16CharacterStream"* %59
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal20Utf16CharacterStreamD2Ev(%"class.v8::internal::Utf16CharacterStream"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal28BufferedUtf16CharacterStreamD0Ev(%"class.v8::internal::BufferedUtf16CharacterStream"*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal27Utf8ExternalStreamingStreamD2Ev(%"class.v8::internal::Utf8ExternalStreamingStream"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN2v88internal27Utf8ExternalStreamingStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"*, %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"*, %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"** %5, align 8
  %7 = icmp eq %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %4, %6
  br i1 %7, label %10, label %18

8:                                                ; preds = %24
  %9 = load %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"*, %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"** %3, align 8
  br label %10

10:                                               ; preds = %8, %1
  %11 = phi %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* [ %9, %8 ], [ %4, %1 ]
  %12 = icmp eq %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %10
  %14 = ptrtoint %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %11 to i64
  %15 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"** %5 to i64*
  store i64 %14, i64* %15, align 8
  %16 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %11 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %10, %13
  ret void

18:                                               ; preds = %1, %24
  %19 = phi %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* [ %25, %24 ], [ %4, %1 ]
  %20 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %19, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %18
  tail call void @_ZdaPv(i8* nonnull %21) #12
  br label %24

24:                                               ; preds = %23, %18
  %25 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %19, i64 1
  %26 = icmp eq %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %25, %6
  br i1 %26, label %8, label %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal27Utf8ExternalStreamingStreamD0Ev(%"class.v8::internal::Utf8ExternalStreamingStream"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN2v88internal27Utf8ExternalStreamingStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"*, %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Utf8ExternalStreamingStream", %"class.v8::internal::Utf8ExternalStreamingStream"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"*, %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"** %5, align 8
  %7 = icmp eq %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %4, %6
  br i1 %7, label %10, label %17

8:                                                ; preds = %23
  %9 = load %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"*, %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"** %3, align 8
  br label %10

10:                                               ; preds = %8, %1
  %11 = phi %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* [ %9, %8 ], [ %4, %1 ]
  %12 = icmp eq %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %10
  %14 = ptrtoint %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %11 to i64
  %15 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"** %5 to i64*
  store i64 %14, i64* %15, align 8
  %16 = bitcast %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %11 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %26

17:                                               ; preds = %1, %23
  %18 = phi %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* [ %24, %23 ], [ %4, %1 ]
  %19 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %18, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %17
  tail call void @_ZdaPv(i8* nonnull %20) #12
  br label %23

23:                                               ; preds = %22, %17
  %24 = getelementptr inbounds %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk", %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %18, i64 1
  %25 = icmp eq %"struct.v8::internal::Utf8ExternalStreamingStream::Chunk"* %24, %6
  br i1 %25, label %8, label %17

26:                                               ; preds = %10, %13
  %27 = bitcast %"class.v8::internal::Utf8ExternalStreamingStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %27) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal27Utf8ExternalStreamingStream13can_be_clonedEv(%"class.v8::internal::Utf8ExternalStreamingStream"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::Utf16CharacterStream"* @_ZNK2v88internal27Utf8ExternalStreamingStream5CloneEv(%"class.v8::internal::Utf8ExternalStreamingStream"*) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #11
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal27Utf8ExternalStreamingStream15can_access_heapEv(%"class.v8::internal::Utf8ExternalStreamingStream"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal26Windows1252CharacterStreamD2Ev(%"class.v8::internal::Windows1252CharacterStream"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Windows1252CharacterStream", %"class.v8::internal::Windows1252CharacterStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal26Windows1252CharacterStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Windows1252CharacterStream", %"class.v8::internal::Windows1252CharacterStream"* %0, i64 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN2v88internal13ChunkedStreamIhEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Windows1252CharacterStream", %"class.v8::internal::Windows1252CharacterStream"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  %5 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Windows1252CharacterStream", %"class.v8::internal::Windows1252CharacterStream"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  %7 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %6, align 8
  %8 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %5, %7
  br i1 %8, label %11, label %18

9:                                                ; preds = %24
  %10 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %4, align 8
  br label %11

11:                                               ; preds = %9, %1
  %12 = phi %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* [ %10, %9 ], [ %5, %1 ]
  %13 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %11
  %15 = ptrtoint %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %12 to i64
  %16 = bitcast %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %6 to i64*
  store i64 %15, i64* %16, align 8
  %17 = bitcast %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %27

18:                                               ; preds = %1, %24
  %19 = phi %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* [ %25, %24 ], [ %5, %1 ]
  %20 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %19, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %18
  tail call void @_ZdaPv(i8* nonnull %21) #12
  br label %24

24:                                               ; preds = %23, %18
  %25 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %19, i64 1
  %26 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %25, %7
  br i1 %26, label %9, label %18

27:                                               ; preds = %11, %14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal26Windows1252CharacterStreamD0Ev(%"class.v8::internal::Windows1252CharacterStream"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Windows1252CharacterStream", %"class.v8::internal::Windows1252CharacterStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal26Windows1252CharacterStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Windows1252CharacterStream", %"class.v8::internal::Windows1252CharacterStream"* %0, i64 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN2v88internal13ChunkedStreamIhEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Windows1252CharacterStream", %"class.v8::internal::Windows1252CharacterStream"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  %5 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Windows1252CharacterStream", %"class.v8::internal::Windows1252CharacterStream"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  %7 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %6, align 8
  %8 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %5, %7
  br i1 %8, label %11, label %18

9:                                                ; preds = %24
  %10 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %4, align 8
  br label %11

11:                                               ; preds = %9, %1
  %12 = phi %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* [ %10, %9 ], [ %5, %1 ]
  %13 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %11
  %15 = ptrtoint %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %12 to i64
  %16 = bitcast %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %6 to i64*
  store i64 %15, i64* %16, align 8
  %17 = bitcast %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %27

18:                                               ; preds = %1, %24
  %19 = phi %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* [ %25, %24 ], [ %5, %1 ]
  %20 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %19, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %18
  tail call void @_ZdaPv(i8* nonnull %21) #12
  br label %24

24:                                               ; preds = %23, %18
  %25 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %19, i64 1
  %26 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %25, %7
  br i1 %26, label %9, label %18

27:                                               ; preds = %11, %14
  %28 = bitcast %"class.v8::internal::Windows1252CharacterStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal26Windows1252CharacterStream13can_be_clonedEv(%"class.v8::internal::Windows1252CharacterStream"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::Utf16CharacterStream"* @_ZNK2v88internal26Windows1252CharacterStream5CloneEv(%"class.v8::internal::Windows1252CharacterStream"*) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal26Windows1252CharacterStream15can_access_heapEv(%"class.v8::internal::Windows1252CharacterStream"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal26Windows1252CharacterStream9ReadBlockEv(%"class.v8::internal::Windows1252CharacterStream"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", align 8
  %3 = getelementptr inbounds %"class.v8::internal::Windows1252CharacterStream", %"class.v8::internal::Windows1252CharacterStream"* %0, i64 0, i32 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Windows1252CharacterStream", %"class.v8::internal::Windows1252CharacterStream"* %0, i64 0, i32 0, i32 2
  %6 = bitcast i16** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Windows1252CharacterStream", %"class.v8::internal::Windows1252CharacterStream"* %0, i64 0, i32 0, i32 1
  %9 = bitcast i16** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %7, %10
  %12 = ashr exact i64 %11, 1
  %13 = add i64 %12, %4
  store i64 %13, i64* %3, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Windows1252CharacterStream", %"class.v8::internal::Windows1252CharacterStream"* %0, i64 0, i32 1, i64 0
  store i16* %14, i16** %8, align 8
  store i16* %14, i16** %5, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Windows1252CharacterStream", %"class.v8::internal::Windows1252CharacterStream"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"class.v8::internal::Windows1252CharacterStream", %"class.v8::internal::Windows1252CharacterStream"* %0, i64 0, i32 0, i32 5
  %17 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %16, align 8
  %18 = bitcast %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #10
  call void @_ZN2v88internal13ChunkedStreamIhE9FindChunkEmPNS0_16RuntimeCallStatsE(%"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* nonnull sret %2, %"class.v8::internal::ChunkedStream.1160"* %15, i64 %13, %"class.v8::internal::RuntimeCallStats"* %17) #10
  %19 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %2, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %2, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %13, %22
  %24 = icmp ult i64 %23, %20
  %25 = select i1 %24, i64 %23, i64 %20
  %26 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %2, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 %25
  %29 = getelementptr inbounds i8, i8* %27, i64 %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #10
  %30 = ptrtoint i8* %28 to i64
  %31 = ptrtoint i8* %29 to i64
  %32 = sub i64 %31, %30
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %1
  %35 = load i64, i64* %9, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Windows1252CharacterStream", %"class.v8::internal::Windows1252CharacterStream"* %0, i64 0, i32 0, i32 3
  %37 = bitcast i16** %36 to i64*
  store i64 %35, i64* %37, align 8
  br label %94

38:                                               ; preds = %1
  %39 = icmp ult i64 %32, 512
  %40 = select i1 %39, i64 %32, i64 512
  %41 = getelementptr inbounds i8, i8* %28, i64 %40
  %42 = icmp eq i64 %40, 0
  br i1 %42, label %91, label %43

43:                                               ; preds = %38
  %44 = add nsw i64 %40, -1
  %45 = and i64 %40, 3
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %59, label %47

47:                                               ; preds = %43, %47
  %48 = phi i16* [ %56, %47 ], [ %14, %43 ]
  %49 = phi i8* [ %55, %47 ], [ %28, %43 ]
  %50 = phi i64 [ %57, %47 ], [ %45, %43 ]
  %51 = load i8, i8* %49, align 1
  %52 = zext i8 %51 to i64
  %53 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN2v88internal12_GLOBAL__N_118kWindows1252ToUC16E, i64 0, i64 %52
  %54 = load i16, i16* %53, align 2
  store i16 %54, i16* %48, align 2
  %55 = getelementptr inbounds i8, i8* %49, i64 1
  %56 = getelementptr inbounds i16, i16* %48, i64 1
  %57 = add i64 %50, -1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %47, !llvm.loop !13

59:                                               ; preds = %47, %43
  %60 = phi i16* [ %14, %43 ], [ %56, %47 ]
  %61 = phi i8* [ %28, %43 ], [ %55, %47 ]
  %62 = icmp ult i64 %44, 3
  br i1 %62, label %91, label %63

63:                                               ; preds = %59, %63
  %64 = phi i16* [ %89, %63 ], [ %60, %59 ]
  %65 = phi i8* [ %88, %63 ], [ %61, %59 ]
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i64
  %68 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN2v88internal12_GLOBAL__N_118kWindows1252ToUC16E, i64 0, i64 %67
  %69 = load i16, i16* %68, align 2
  store i16 %69, i16* %64, align 2
  %70 = getelementptr inbounds i8, i8* %65, i64 1
  %71 = getelementptr inbounds i16, i16* %64, i64 1
  %72 = load i8, i8* %70, align 1
  %73 = zext i8 %72 to i64
  %74 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN2v88internal12_GLOBAL__N_118kWindows1252ToUC16E, i64 0, i64 %73
  %75 = load i16, i16* %74, align 2
  store i16 %75, i16* %71, align 2
  %76 = getelementptr inbounds i8, i8* %65, i64 2
  %77 = getelementptr inbounds i16, i16* %64, i64 2
  %78 = load i8, i8* %76, align 1
  %79 = zext i8 %78 to i64
  %80 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN2v88internal12_GLOBAL__N_118kWindows1252ToUC16E, i64 0, i64 %79
  %81 = load i16, i16* %80, align 2
  store i16 %81, i16* %77, align 2
  %82 = getelementptr inbounds i8, i8* %65, i64 3
  %83 = getelementptr inbounds i16, i16* %64, i64 3
  %84 = load i8, i8* %82, align 1
  %85 = zext i8 %84 to i64
  %86 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN2v88internal12_GLOBAL__N_118kWindows1252ToUC16E, i64 0, i64 %85
  %87 = load i16, i16* %86, align 2
  store i16 %87, i16* %83, align 2
  %88 = getelementptr inbounds i8, i8* %65, i64 4
  %89 = getelementptr inbounds i16, i16* %64, i64 4
  %90 = icmp eq i8* %88, %41
  br i1 %90, label %91, label %63

91:                                               ; preds = %59, %63, %38
  %92 = getelementptr inbounds %"class.v8::internal::Windows1252CharacterStream", %"class.v8::internal::Windows1252CharacterStream"* %0, i64 0, i32 1, i64 %40
  %93 = getelementptr inbounds %"class.v8::internal::Windows1252CharacterStream", %"class.v8::internal::Windows1252CharacterStream"* %0, i64 0, i32 0, i32 3
  store i16* %92, i16** %93, align 8
  br label %94

94:                                               ; preds = %91, %34
  %95 = phi i1 [ false, %34 ], [ true, %91 ]
  ret i1 %95
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ChunkedStreamIhE12ProcessChunkEPKhmm(%"class.v8::internal::ChunkedStream.1160"*, i8*, i64, i64) unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::ChunkedStream.1160", %"class.v8::internal::ChunkedStream.1160"* %0, i64 0, i32 2
  %6 = ptrtoint i8* %1 to i64
  %7 = getelementptr inbounds %"class.v8::internal::ChunkedStream.1160", %"class.v8::internal::ChunkedStream.1160"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::ChunkedStream.1160", %"class.v8::internal::ChunkedStream.1160"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %9, align 8
  %11 = icmp ult %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %8, %10
  %12 = ptrtoint %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %10 to i64
  br i1 %11, label %13, label %20

13:                                               ; preds = %4
  %14 = bitcast %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %8 to i64*
  store i64 %6, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %8, i64 0, i32 1
  store i64 %2, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %8, i64 0, i32 2
  store i64 %3, i64* %16, align 8
  %17 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %8, i64 1
  %18 = ptrtoint %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %17 to i64
  %19 = bitcast %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %7 to i64*
  store i64 %18, i64* %19, align 8
  br label %75

20:                                               ; preds = %4
  %21 = ptrtoint %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %8 to i64
  %22 = bitcast %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %7 to i64*
  %23 = bitcast %"class.std::__1::vector.1161"* %5 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %21, %24
  %26 = sdiv exact i64 %25, 24
  %27 = add nsw i64 %26, 1
  %28 = icmp ugt i64 %27, 768614336404564650
  br i1 %28, label %29, label %31

29:                                               ; preds = %20
  %30 = bitcast %"class.std::__1::vector.1161"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %30) #11
  unreachable

31:                                               ; preds = %20
  %32 = bitcast %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %9 to i64*
  %33 = sub i64 %12, %24
  %34 = sdiv exact i64 %33, 24
  %35 = icmp ult i64 %34, 384307168202282325
  br i1 %35, label %36, label %41

36:                                               ; preds = %31
  %37 = shl nsw i64 %34, 1
  %38 = icmp ult i64 %37, %27
  %39 = select i1 %38, i64 %27, i64 %37
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %36, %31
  %42 = phi i64 [ %39, %36 ], [ 768614336404564650, %31 ]
  %43 = mul i64 %42, 24
  %44 = tail call i8* @_Znwm(i64 %43) #12
  %45 = bitcast i8* %44 to %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*
  br label %46

46:                                               ; preds = %41, %36
  %47 = phi i64 [ %42, %41 ], [ 0, %36 ]
  %48 = phi %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* [ %45, %41 ], [ null, %36 ]
  %49 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %48, i64 %26
  %50 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %48, i64 %47
  %51 = ptrtoint %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %50 to i64
  %52 = bitcast %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %49 to i64*
  store i64 %6, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %48, i64 %26, i32 1
  store i64 %2, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %48, i64 %26, i32 2
  store i64 %3, i64* %54, align 8
  %55 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %49, i64 1
  %56 = ptrtoint %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %55 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector.1161", %"class.std::__1::vector.1161"* %5, i64 0, i32 0, i32 0
  %58 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %57, align 8
  %59 = load i64, i64* %22, align 8
  %60 = ptrtoint %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %58 to i64
  %61 = sub i64 %59, %60
  %62 = sdiv exact i64 %61, -24
  %63 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %49, i64 %62
  %64 = ptrtoint %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %63 to i64
  %65 = icmp sgt i64 %61, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %46
  %67 = bitcast %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %63 to i8*
  %68 = bitcast %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 %61, i1 false) #10
  %69 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %57, align 8
  br label %70

70:                                               ; preds = %66, %46
  %71 = phi %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* [ %58, %46 ], [ %69, %66 ]
  store i64 %64, i64* %23, align 8
  store i64 %56, i64* %22, align 8
  store i64 %51, i64* %32, align 8
  %72 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  %74 = bitcast %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %71 to i8*
  tail call void @_ZdlPv(i8* %74) #12
  br label %75

75:                                               ; preds = %13, %70, %73
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ChunkedStreamIhE9FindChunkEmPNS0_16RuntimeCallStatsE(%"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* noalias sret, %"class.v8::internal::ChunkedStream.1160"*, i64, %"class.v8::internal::RuntimeCallStats"*) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca i8*, align 8
  %6 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %9 = getelementptr inbounds %"class.v8::internal::ChunkedStream.1160", %"class.v8::internal::ChunkedStream.1160"* %1, i64 0, i32 2, i32 0, i32 0
  %10 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::ChunkedStream.1160", %"class.v8::internal::ChunkedStream.1160"* %1, i64 0, i32 2, i32 0, i32 1
  %12 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %11, align 8
  %13 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %10, %12
  br i1 %13, label %14, label %40, !prof !2

14:                                               ; preds = %4
  %15 = bitcast i8** %5 to i8*
  %16 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %6 to i8*
  %17 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  %18 = icmp eq %"class.v8::internal::RuntimeCallStats"* %3, null
  %19 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::ChunkedStream.1160", %"class.v8::internal::ChunkedStream.1160"* %1, i64 0, i32 1
  %21 = bitcast %"class.v8::internal::ChunkedStream.1160"* %1 to void (%"class.v8::internal::ChunkedStream.1160"*, i8*, i64, i64)***
  br i1 %18, label %22, label %83, !prof !3

22:                                               ; preds = %14, %33
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  store i8* null, i8** %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 40, i1 false) #10
  %23 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1173", %"struct.std::__1::atomic.1173"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = load %"class.v8::ScriptCompiler::ExternalSourceStream"*, %"class.v8::ScriptCompiler::ExternalSourceStream"** %20, align 8
  %25 = bitcast %"class.v8::ScriptCompiler::ExternalSourceStream"* %24 to i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)***
  %26 = load i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)**, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*** %25, align 8
  %27 = getelementptr inbounds i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)** %26, i64 2
  %28 = load i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)** %27, align 8
  %29 = call i64 %28(%"class.v8::ScriptCompiler::ExternalSourceStream"* %24, i8** nonnull %5) #10
  %30 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %19, align 8
  %31 = icmp eq %"class.v8::internal::RuntimeCallStats"* %30, null
  br i1 %31, label %33, label %32, !prof !3

32:                                               ; preds = %22
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %30, %"class.v8::internal::RuntimeCallTimer"* %17) #10
  br label %33

33:                                               ; preds = %32, %22
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #10
  %34 = load i8*, i8** %5, align 8
  %35 = load void (%"class.v8::internal::ChunkedStream.1160"*, i8*, i64, i64)**, void (%"class.v8::internal::ChunkedStream.1160"*, i8*, i64, i64)*** %21, align 8
  %36 = load void (%"class.v8::internal::ChunkedStream.1160"*, i8*, i64, i64)*, void (%"class.v8::internal::ChunkedStream.1160"*, i8*, i64, i64)** %35, align 8
  call void %36(%"class.v8::internal::ChunkedStream.1160"* %1, i8* %34, i64 0, i64 %29) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  %37 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %9, align 8
  %38 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %11, align 8
  %39 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %37, %38
  br i1 %39, label %22, label %40, !prof !2

40:                                               ; preds = %97, %33, %4
  %41 = phi %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* [ %12, %4 ], [ %38, %33 ], [ %102, %97 ]
  %42 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %41, i64 -1, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %41, i64 -1, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, %43
  %47 = icmp ugt i64 %46, %2
  %48 = icmp eq i64 %45, 0
  %49 = or i1 %48, %47
  br i1 %49, label %104, label %50

50:                                               ; preds = %40
  %51 = bitcast i8** %7 to i8*
  %52 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %8 to i8*
  %53 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %8, i64 0, i32 1
  %54 = icmp eq %"class.v8::internal::RuntimeCallStats"* %3, null
  %55 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %8, i64 0, i32 0
  %56 = getelementptr inbounds %"class.v8::internal::ChunkedStream.1160", %"class.v8::internal::ChunkedStream.1160"* %1, i64 0, i32 1
  %57 = bitcast %"class.v8::internal::ChunkedStream.1160"* %1 to void (%"class.v8::internal::ChunkedStream.1160"*, i8*, i64, i64)***
  br i1 %54, label %58, label %107, !prof !3

58:                                               ; preds = %50, %70
  %59 = phi i64 [ %79, %70 ], [ %46, %50 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  store i8* null, i8** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %52) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 40, i1 false) #10
  %60 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1173", %"struct.std::__1::atomic.1173"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %61 = load %"class.v8::ScriptCompiler::ExternalSourceStream"*, %"class.v8::ScriptCompiler::ExternalSourceStream"** %56, align 8
  %62 = bitcast %"class.v8::ScriptCompiler::ExternalSourceStream"* %61 to i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)***
  %63 = load i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)**, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*** %62, align 8
  %64 = getelementptr inbounds i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)** %63, i64 2
  %65 = load i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)** %64, align 8
  %66 = call i64 %65(%"class.v8::ScriptCompiler::ExternalSourceStream"* %61, i8** nonnull %7) #10
  %67 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %55, align 8
  %68 = icmp eq %"class.v8::internal::RuntimeCallStats"* %67, null
  br i1 %68, label %70, label %69, !prof !3

69:                                               ; preds = %58
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %67, %"class.v8::internal::RuntimeCallTimer"* %53) #10
  br label %70

70:                                               ; preds = %69, %58
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %52) #10
  %71 = load i8*, i8** %7, align 8
  %72 = load void (%"class.v8::internal::ChunkedStream.1160"*, i8*, i64, i64)**, void (%"class.v8::internal::ChunkedStream.1160"*, i8*, i64, i64)*** %57, align 8
  %73 = load void (%"class.v8::internal::ChunkedStream.1160"*, i8*, i64, i64)*, void (%"class.v8::internal::ChunkedStream.1160"*, i8*, i64, i64)** %72, align 8
  call void %73(%"class.v8::internal::ChunkedStream.1160"* %1, i8* %71, i64 %59, i64 %66) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  %74 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %11, align 8
  %75 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %74, i64 -1, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %74, i64 -1, i32 2
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, %76
  %80 = icmp ugt i64 %79, %2
  %81 = icmp eq i64 %78, 0
  %82 = or i1 %81, %80
  br i1 %82, label %104, label %58

83:                                               ; preds = %14, %97
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  store i8* null, i8** %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 40, i1 false) #10
  %84 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1173", %"struct.std::__1::atomic.1173"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %87, label %86, !prof !3

86:                                               ; preds = %83
  store %"class.v8::internal::RuntimeCallStats"* %3, %"class.v8::internal::RuntimeCallStats"** %19, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* nonnull %3, %"class.v8::internal::RuntimeCallTimer"* %17, i32 161) #10
  br label %87

87:                                               ; preds = %86, %83
  %88 = load %"class.v8::ScriptCompiler::ExternalSourceStream"*, %"class.v8::ScriptCompiler::ExternalSourceStream"** %20, align 8
  %89 = bitcast %"class.v8::ScriptCompiler::ExternalSourceStream"* %88 to i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)***
  %90 = load i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)**, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*** %89, align 8
  %91 = getelementptr inbounds i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)** %90, i64 2
  %92 = load i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)** %91, align 8
  %93 = call i64 %92(%"class.v8::ScriptCompiler::ExternalSourceStream"* %88, i8** nonnull %5) #10
  %94 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %19, align 8
  %95 = icmp eq %"class.v8::internal::RuntimeCallStats"* %94, null
  br i1 %95, label %97, label %96, !prof !3

96:                                               ; preds = %87
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %94, %"class.v8::internal::RuntimeCallTimer"* %17) #10
  br label %97

97:                                               ; preds = %87, %96
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #10
  %98 = load i8*, i8** %5, align 8
  %99 = load void (%"class.v8::internal::ChunkedStream.1160"*, i8*, i64, i64)**, void (%"class.v8::internal::ChunkedStream.1160"*, i8*, i64, i64)*** %21, align 8
  %100 = load void (%"class.v8::internal::ChunkedStream.1160"*, i8*, i64, i64)*, void (%"class.v8::internal::ChunkedStream.1160"*, i8*, i64, i64)** %99, align 8
  call void %100(%"class.v8::internal::ChunkedStream.1160"* %1, i8* %98, i64 0, i64 %93) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  %101 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %9, align 8
  %102 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %11, align 8
  %103 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %101, %102
  br i1 %103, label %83, label %40, !prof !2

104:                                              ; preds = %122, %70, %40
  %105 = phi %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* [ %41, %40 ], [ %74, %70 ], [ %126, %122 ]
  %106 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %9, align 8
  br label %135

107:                                              ; preds = %50, %122
  %108 = phi i64 [ %131, %122 ], [ %46, %50 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  store i8* null, i8** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %52) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 40, i1 false) #10
  %109 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1173", %"struct.std::__1::atomic.1173"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %112, label %111, !prof !3

111:                                              ; preds = %107
  store %"class.v8::internal::RuntimeCallStats"* %3, %"class.v8::internal::RuntimeCallStats"** %55, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* nonnull %3, %"class.v8::internal::RuntimeCallTimer"* %53, i32 161) #10
  br label %112

112:                                              ; preds = %111, %107
  %113 = load %"class.v8::ScriptCompiler::ExternalSourceStream"*, %"class.v8::ScriptCompiler::ExternalSourceStream"** %56, align 8
  %114 = bitcast %"class.v8::ScriptCompiler::ExternalSourceStream"* %113 to i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)***
  %115 = load i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)**, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*** %114, align 8
  %116 = getelementptr inbounds i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)** %115, i64 2
  %117 = load i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)** %116, align 8
  %118 = call i64 %117(%"class.v8::ScriptCompiler::ExternalSourceStream"* %113, i8** nonnull %7) #10
  %119 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %55, align 8
  %120 = icmp eq %"class.v8::internal::RuntimeCallStats"* %119, null
  br i1 %120, label %122, label %121, !prof !3

121:                                              ; preds = %112
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %119, %"class.v8::internal::RuntimeCallTimer"* %53) #10
  br label %122

122:                                              ; preds = %112, %121
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %52) #10
  %123 = load i8*, i8** %7, align 8
  %124 = load void (%"class.v8::internal::ChunkedStream.1160"*, i8*, i64, i64)**, void (%"class.v8::internal::ChunkedStream.1160"*, i8*, i64, i64)*** %57, align 8
  %125 = load void (%"class.v8::internal::ChunkedStream.1160"*, i8*, i64, i64)*, void (%"class.v8::internal::ChunkedStream.1160"*, i8*, i64, i64)** %124, align 8
  call void %125(%"class.v8::internal::ChunkedStream.1160"* %1, i8* %123, i64 %108, i64 %118) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  %126 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %11, align 8
  %127 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %126, i64 -1, i32 1
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %126, i64 -1, i32 2
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %130, %128
  %132 = icmp ugt i64 %131, %2
  %133 = icmp eq i64 %130, 0
  %134 = or i1 %133, %132
  br i1 %134, label %104, label %107

135:                                              ; preds = %104, %138
  %136 = phi %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* [ %139, %138 ], [ %105, %104 ]
  %137 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %136, %106
  br i1 %137, label %146, label %138

138:                                              ; preds = %135
  %139 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %136, i64 -1
  %140 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %136, i64 -1, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = icmp ugt i64 %141, %2
  br i1 %142, label %135, label %143

143:                                              ; preds = %138
  %144 = bitcast %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %0 to i8*
  %145 = bitcast %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %139 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 24, i1 false)
  ret void

146:                                              ; preds = %135
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #11
  unreachable
}

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal20ExternalStringStreamIhEC2ENS0_21ExternalOneByteStringEmm(%"class.v8::internal::ExternalStringStream"*, i64, i64, i64) unnamed_addr #1 comdat align 2 {
  %5 = and i64 %1, -4294967296
  %6 = add i64 %1, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp ult i16 %13, 64
  br i1 %14, label %15, label %38

15:                                               ; preds = %4
  %16 = load atomic i32, i32* %7 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %5, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = and i16 %21, 7
  %23 = icmp eq i16 %22, 2
  br i1 %23, label %24, label %38

24:                                               ; preds = %15
  %25 = load atomic i32, i32* %7 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %5, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = and i16 %30, 8
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %24
  %34 = add i64 %1, 11
  %35 = inttoptr i64 %34 to %"class.v8::String::ExternalOneByteStringResource"**
  %36 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %35, align 1
  %37 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %36, i64 0, i32 0
  br label %43

38:                                               ; preds = %24, %15, %4
  %39 = add i64 %1, 11
  %40 = inttoptr i64 %39 to %"class.v8::String::ExternalStringResource"**
  %41 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %40, align 1
  %42 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %41, i64 0, i32 0
  br label %43

43:                                               ; preds = %33, %38
  %44 = phi %"class.v8::String::ExternalStringResourceBase"* [ %37, %33 ], [ %42, %38 ]
  %45 = getelementptr inbounds %"class.v8::internal::ExternalStringStream", %"class.v8::internal::ExternalStringStream"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String::ExternalStringResourceBase"* %44, %"class.v8::String::ExternalStringResourceBase"** %45, align 8
  %46 = bitcast %"class.v8::String::ExternalStringResourceBase"* %44 to void (%"class.v8::String::ExternalStringResourceBase"*)***
  %47 = load void (%"class.v8::String::ExternalStringResourceBase"*)**, void (%"class.v8::String::ExternalStringResourceBase"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %47, i64 4
  %49 = load void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %48, align 8
  tail call void %49(%"class.v8::String::ExternalStringResourceBase"* %44) #10
  %50 = getelementptr inbounds %"class.v8::internal::ExternalStringStream", %"class.v8::internal::ExternalStringStream"* %0, i64 0, i32 1
  %51 = load atomic i32, i32* %7 monotonic, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %5, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = and i16 %56, 16
  %58 = icmp eq i16 %57, 0
  %59 = add i64 %1, 11
  %60 = inttoptr i64 %59 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %58, label %73, label %61

61:                                               ; preds = %43
  %62 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %60, align 1
  %63 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %62, i64 0, i32 0
  %64 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %62 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %65 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %64, align 8
  %66 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %65, i64 2
  %67 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %66, align 8
  %68 = tail call zeroext i1 %67(%"class.v8::String::ExternalStringResourceBase"* %63) #10
  br i1 %68, label %69, label %73

69:                                               ; preds = %61
  %70 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %60, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %70) #10
  %71 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %70, i64 0, i32 1
  %72 = load i8*, i8** %71, align 8
  br label %80

73:                                               ; preds = %43, %61
  %74 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %60, align 1
  %75 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %74 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %76 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %75, align 8
  %77 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %76, i64 6
  %78 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %77, align 8
  %79 = tail call i8* %78(%"class.v8::String::ExternalOneByteStringResource"* %74) #10
  br label %80

80:                                               ; preds = %69, %73
  %81 = phi i8* [ %72, %69 ], [ %79, %73 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 %2
  store i8* %82, i8** %50, align 8
  %83 = getelementptr inbounds %"class.v8::internal::ExternalStringStream", %"class.v8::internal::ExternalStringStream"* %0, i64 0, i32 2
  store i64 %3, i64* %83, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEED2Ev(%"class.v8::internal::BufferedCharacterStream"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream", %"class.v8::internal::BufferedCharacterStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream", %"class.v8::internal::BufferedCharacterStream"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.v8::String::ExternalStringResourceBase"*, %"class.v8::String::ExternalStringResourceBase"** %3, align 8
  %5 = bitcast %"class.v8::String::ExternalStringResourceBase"* %4 to void (%"class.v8::String::ExternalStringResourceBase"*)***
  %6 = load void (%"class.v8::String::ExternalStringResourceBase"*)**, void (%"class.v8::String::ExternalStringResourceBase"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %6, i64 5
  %8 = load void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %7, align 8
  tail call void %8(%"class.v8::String::ExternalStringResourceBase"* %4) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEED0Ev(%"class.v8::internal::BufferedCharacterStream"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream", %"class.v8::internal::BufferedCharacterStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream", %"class.v8::internal::BufferedCharacterStream"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.v8::String::ExternalStringResourceBase"*, %"class.v8::String::ExternalStringResourceBase"** %3, align 8
  %5 = bitcast %"class.v8::String::ExternalStringResourceBase"* %4 to void (%"class.v8::String::ExternalStringResourceBase"*)***
  %6 = load void (%"class.v8::String::ExternalStringResourceBase"*)**, void (%"class.v8::String::ExternalStringResourceBase"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %6, i64 5
  %8 = load void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %7, align 8
  tail call void %8(%"class.v8::String::ExternalStringResourceBase"* %4) #10
  %9 = bitcast %"class.v8::internal::BufferedCharacterStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEE13can_be_clonedEv(%"class.v8::internal::BufferedCharacterStream"*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::Utf16CharacterStream"* @_ZNK2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEE5CloneEv(%"class.v8::internal::BufferedCharacterStream"*) unnamed_addr #1 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 1104) #12
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = getelementptr inbounds i8, i8* %2, i64 48
  store i8 0, i8* %5, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 1080
  %7 = bitcast i8* %6 to %"class.v8::String::ExternalStringResourceBase"**
  %8 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream", %"class.v8::internal::BufferedCharacterStream"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.v8::String::ExternalStringResourceBase"*, %"class.v8::String::ExternalStringResourceBase"** %8, align 8
  store %"class.v8::String::ExternalStringResourceBase"* %9, %"class.v8::String::ExternalStringResourceBase"** %7, align 8
  %10 = bitcast %"class.v8::String::ExternalStringResourceBase"* %9 to void (%"class.v8::String::ExternalStringResourceBase"*)***
  %11 = load void (%"class.v8::String::ExternalStringResourceBase"*)**, void (%"class.v8::String::ExternalStringResourceBase"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %11, i64 4
  %13 = load void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %12, align 8
  tail call void %13(%"class.v8::String::ExternalStringResourceBase"* %9) #10
  %14 = getelementptr inbounds i8, i8* %2, i64 1088
  %15 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream", %"class.v8::internal::BufferedCharacterStream"* %0, i64 0, i32 2, i32 1
  %16 = bitcast i8** %15 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8
  %18 = bitcast i8* %14 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %18, align 8
  %19 = bitcast i8* %2 to %"class.v8::internal::Utf16CharacterStream"*
  ret %"class.v8::internal::Utf16CharacterStream"* %19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEE15can_access_heapEv(%"class.v8::internal::BufferedCharacterStream"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal23BufferedCharacterStreamINS0_20ExternalStringStreamEE9ReadBlockEv(%"class.v8::internal::BufferedCharacterStream"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream", %"class.v8::internal::BufferedCharacterStream"* %0, i64 0, i32 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream", %"class.v8::internal::BufferedCharacterStream"* %0, i64 0, i32 0, i32 2
  %5 = bitcast i16** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream", %"class.v8::internal::BufferedCharacterStream"* %0, i64 0, i32 0, i32 1
  %8 = bitcast i16** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = ashr exact i64 %10, 1
  %12 = add i64 %11, %3
  store i64 %12, i64* %2, align 8
  %13 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream", %"class.v8::internal::BufferedCharacterStream"* %0, i64 0, i32 1, i64 0
  store i16* %13, i16** %7, align 8
  store i16* %13, i16** %4, align 8
  %14 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream", %"class.v8::internal::BufferedCharacterStream"* %0, i64 0, i32 2, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream", %"class.v8::internal::BufferedCharacterStream"* %0, i64 0, i32 2, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = icmp ugt i64 %17, %12
  %19 = select i1 %18, i64 %12, i64 %17
  %20 = getelementptr inbounds i8, i8* %15, i64 %19
  %21 = getelementptr inbounds i8, i8* %15, i64 %17
  %22 = ptrtoint i8* %20 to i64
  %23 = ptrtoint i8* %21 to i64
  %24 = sub i64 %23, %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %1
  %27 = ptrtoint i16* %13 to i64
  %28 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream", %"class.v8::internal::BufferedCharacterStream"* %0, i64 0, i32 0, i32 3
  %29 = bitcast i16** %28 to i64*
  store i64 %27, i64* %29, align 8
  br label %35

30:                                               ; preds = %1
  %31 = icmp ult i64 %24, 512
  %32 = select i1 %31, i64 %24, i64 512
  call void @_ZN2v88internal9CopyCharsIhtEEvPT0_PKT_m(i16* %13, i8* %20, i64 %32)
  %33 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream", %"class.v8::internal::BufferedCharacterStream"* %0, i64 0, i32 1, i64 %32
  %34 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream", %"class.v8::internal::BufferedCharacterStream"* %0, i64 0, i32 0, i32 3
  store i16* %33, i16** %34, align 8
  br label %35

35:                                               ; preds = %30, %26
  %36 = phi i1 [ false, %26 ], [ true, %30 ]
  ret i1 %36
}

declare void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal20ExternalStringStreamItEC2ENS0_21ExternalTwoByteStringEmm(%"class.v8::internal::ExternalStringStream.1136"*, i64, i64, i64) unnamed_addr #1 comdat align 2 {
  %5 = and i64 %1, -4294967296
  %6 = add i64 %1, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp ult i16 %13, 64
  br i1 %14, label %15, label %38

15:                                               ; preds = %4
  %16 = load atomic i32, i32* %7 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %5, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = and i16 %21, 7
  %23 = icmp eq i16 %22, 2
  br i1 %23, label %24, label %38

24:                                               ; preds = %15
  %25 = load atomic i32, i32* %7 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %5, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = and i16 %30, 8
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %24
  %34 = add i64 %1, 11
  %35 = inttoptr i64 %34 to %"class.v8::String::ExternalOneByteStringResource"**
  %36 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %35, align 1
  %37 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %36, i64 0, i32 0
  br label %43

38:                                               ; preds = %24, %15, %4
  %39 = add i64 %1, 11
  %40 = inttoptr i64 %39 to %"class.v8::String::ExternalStringResource"**
  %41 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %40, align 1
  %42 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %41, i64 0, i32 0
  br label %43

43:                                               ; preds = %33, %38
  %44 = phi %"class.v8::String::ExternalStringResourceBase"* [ %37, %33 ], [ %42, %38 ]
  %45 = getelementptr inbounds %"class.v8::internal::ExternalStringStream.1136", %"class.v8::internal::ExternalStringStream.1136"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String::ExternalStringResourceBase"* %44, %"class.v8::String::ExternalStringResourceBase"** %45, align 8
  %46 = bitcast %"class.v8::String::ExternalStringResourceBase"* %44 to void (%"class.v8::String::ExternalStringResourceBase"*)***
  %47 = load void (%"class.v8::String::ExternalStringResourceBase"*)**, void (%"class.v8::String::ExternalStringResourceBase"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %47, i64 4
  %49 = load void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %48, align 8
  tail call void %49(%"class.v8::String::ExternalStringResourceBase"* %44) #10
  %50 = getelementptr inbounds %"class.v8::internal::ExternalStringStream.1136", %"class.v8::internal::ExternalStringStream.1136"* %0, i64 0, i32 1
  %51 = load atomic i32, i32* %7 monotonic, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %5, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = and i16 %56, 16
  %58 = icmp eq i16 %57, 0
  %59 = add i64 %1, 11
  %60 = inttoptr i64 %59 to %"class.v8::String::ExternalStringResource"**
  br i1 %58, label %73, label %61

61:                                               ; preds = %43
  %62 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %60, align 1
  %63 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %62, i64 0, i32 0
  %64 = bitcast %"class.v8::String::ExternalStringResource"* %62 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %65 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %64, align 8
  %66 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %65, i64 2
  %67 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %66, align 8
  %68 = tail call zeroext i1 %67(%"class.v8::String::ExternalStringResourceBase"* %63) #10
  br i1 %68, label %69, label %73

69:                                               ; preds = %61
  %70 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %60, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %70) #10
  %71 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %70, i64 0, i32 1
  %72 = load i16*, i16** %71, align 8
  br label %80

73:                                               ; preds = %43, %61
  %74 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %60, align 1
  %75 = bitcast %"class.v8::String::ExternalStringResource"* %74 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %76 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %75, align 8
  %77 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %76, i64 6
  %78 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %77, align 8
  %79 = tail call i16* %78(%"class.v8::String::ExternalStringResource"* %74) #10
  br label %80

80:                                               ; preds = %69, %73
  %81 = phi i16* [ %72, %69 ], [ %79, %73 ]
  %82 = getelementptr inbounds i16, i16* %81, i64 %2
  store i16* %82, i16** %50, align 8
  %83 = getelementptr inbounds %"class.v8::internal::ExternalStringStream.1136", %"class.v8::internal::ExternalStringStream.1136"* %0, i64 0, i32 2
  store i64 %3, i64* %83, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEED2Ev(%"class.v8::internal::UnbufferedCharacterStream"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream", %"class.v8::internal::UnbufferedCharacterStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream", %"class.v8::internal::UnbufferedCharacterStream"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.v8::String::ExternalStringResourceBase"*, %"class.v8::String::ExternalStringResourceBase"** %3, align 8
  %5 = bitcast %"class.v8::String::ExternalStringResourceBase"* %4 to void (%"class.v8::String::ExternalStringResourceBase"*)***
  %6 = load void (%"class.v8::String::ExternalStringResourceBase"*)**, void (%"class.v8::String::ExternalStringResourceBase"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %6, i64 5
  %8 = load void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %7, align 8
  tail call void %8(%"class.v8::String::ExternalStringResourceBase"* %4) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEED0Ev(%"class.v8::internal::UnbufferedCharacterStream"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream", %"class.v8::internal::UnbufferedCharacterStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream", %"class.v8::internal::UnbufferedCharacterStream"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.v8::String::ExternalStringResourceBase"*, %"class.v8::String::ExternalStringResourceBase"** %3, align 8
  %5 = bitcast %"class.v8::String::ExternalStringResourceBase"* %4 to void (%"class.v8::String::ExternalStringResourceBase"*)***
  %6 = load void (%"class.v8::String::ExternalStringResourceBase"*)**, void (%"class.v8::String::ExternalStringResourceBase"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %6, i64 5
  %8 = load void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %7, align 8
  tail call void %8(%"class.v8::String::ExternalStringResourceBase"* %4) #10
  %9 = bitcast %"class.v8::internal::UnbufferedCharacterStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEE13can_be_clonedEv(%"class.v8::internal::UnbufferedCharacterStream"*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::Utf16CharacterStream"* @_ZNK2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEE5CloneEv(%"class.v8::internal::UnbufferedCharacterStream"*) unnamed_addr #1 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 80) #12
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = getelementptr inbounds i8, i8* %2, i64 48
  store i8 0, i8* %5, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 56
  %7 = bitcast i8* %6 to %"class.v8::String::ExternalStringResourceBase"**
  %8 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream", %"class.v8::internal::UnbufferedCharacterStream"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.v8::String::ExternalStringResourceBase"*, %"class.v8::String::ExternalStringResourceBase"** %8, align 8
  store %"class.v8::String::ExternalStringResourceBase"* %9, %"class.v8::String::ExternalStringResourceBase"** %7, align 8
  %10 = bitcast %"class.v8::String::ExternalStringResourceBase"* %9 to void (%"class.v8::String::ExternalStringResourceBase"*)***
  %11 = load void (%"class.v8::String::ExternalStringResourceBase"*)**, void (%"class.v8::String::ExternalStringResourceBase"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %11, i64 4
  %13 = load void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %12, align 8
  tail call void %13(%"class.v8::String::ExternalStringResourceBase"* %9) #10
  %14 = getelementptr inbounds i8, i8* %2, i64 64
  %15 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream", %"class.v8::internal::UnbufferedCharacterStream"* %0, i64 0, i32 1, i32 1
  %16 = bitcast i16** %15 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8
  %18 = bitcast i8* %14 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %18, align 8
  %19 = bitcast i8* %2 to %"class.v8::internal::Utf16CharacterStream"*
  ret %"class.v8::internal::Utf16CharacterStream"* %19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEE15can_access_heapEv(%"class.v8::internal::UnbufferedCharacterStream"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal25UnbufferedCharacterStreamINS0_20ExternalStringStreamEE9ReadBlockEv(%"class.v8::internal::UnbufferedCharacterStream"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream", %"class.v8::internal::UnbufferedCharacterStream"* %0, i64 0, i32 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream", %"class.v8::internal::UnbufferedCharacterStream"* %0, i64 0, i32 0, i32 2
  %5 = bitcast i16** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream", %"class.v8::internal::UnbufferedCharacterStream"* %0, i64 0, i32 0, i32 1
  %8 = bitcast i16** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = ashr exact i64 %10, 1
  %12 = add i64 %11, %3
  store i64 %12, i64* %2, align 8
  %13 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream", %"class.v8::internal::UnbufferedCharacterStream"* %0, i64 0, i32 1, i32 1
  %14 = load i16*, i16** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream", %"class.v8::internal::UnbufferedCharacterStream"* %0, i64 0, i32 1, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, %12
  %18 = select i1 %17, i64 %12, i64 %16
  %19 = getelementptr inbounds i16, i16* %14, i64 %18
  %20 = getelementptr inbounds i16, i16* %14, i64 %16
  %21 = ptrtoint i16* %19 to i64
  %22 = ptrtoint i16* %20 to i64
  store i64 %21, i64* %8, align 8
  %23 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream", %"class.v8::internal::UnbufferedCharacterStream"* %0, i64 0, i32 0, i32 3
  %24 = bitcast i16** %23 to i64*
  store i64 %22, i64* %24, align 8
  store i64 %21, i64* %5, align 8
  %25 = sub i64 %16, %18
  %26 = and i64 %25, 9223372036854775807
  %27 = icmp ne i64 %26, 0
  ret i1 %27
}

declare void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal23BufferedCharacterStreamINS0_12OnHeapStreamEED0Ev(%"class.v8::internal::BufferedCharacterStream.1137"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.v8::internal::BufferedCharacterStream.1137"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal23BufferedCharacterStreamINS0_12OnHeapStreamEE13can_be_clonedEv(%"class.v8::internal::BufferedCharacterStream.1137"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::Utf16CharacterStream"* @_ZNK2v88internal23BufferedCharacterStreamINS0_12OnHeapStreamEE5CloneEv(%"class.v8::internal::BufferedCharacterStream.1137"*) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal23BufferedCharacterStreamINS0_12OnHeapStreamEE15can_access_heapEv(%"class.v8::internal::BufferedCharacterStream.1137"*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal23BufferedCharacterStreamINS0_12OnHeapStreamEE9ReadBlockEv(%"class.v8::internal::BufferedCharacterStream.1137"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1137", %"class.v8::internal::BufferedCharacterStream.1137"* %0, i64 0, i32 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1137", %"class.v8::internal::BufferedCharacterStream.1137"* %0, i64 0, i32 0, i32 2
  %5 = bitcast i16** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1137", %"class.v8::internal::BufferedCharacterStream.1137"* %0, i64 0, i32 0, i32 1
  %8 = bitcast i16** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = ashr exact i64 %10, 1
  %12 = add i64 %11, %3
  store i64 %12, i64* %2, align 8
  %13 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1137", %"class.v8::internal::BufferedCharacterStream.1137"* %0, i64 0, i32 1, i64 0
  store i16* %13, i16** %7, align 8
  store i16* %13, i16** %4, align 8
  %14 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1137", %"class.v8::internal::BufferedCharacterStream.1137"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 11
  %18 = inttoptr i64 %17 to i8*
  %19 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1137", %"class.v8::internal::BufferedCharacterStream.1137"* %0, i64 0, i32 2, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1137", %"class.v8::internal::BufferedCharacterStream.1137"* %0, i64 0, i32 2, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = icmp ugt i64 %22, %12
  %24 = select i1 %23, i64 %12, i64 %22
  %25 = add i64 %24, %20
  %26 = getelementptr inbounds i8, i8* %18, i64 %25
  %27 = add i64 %22, %20
  %28 = getelementptr inbounds i8, i8* %18, i64 %27
  %29 = ptrtoint i8* %26 to i64
  %30 = ptrtoint i8* %28 to i64
  %31 = sub i64 %30, %29
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %1
  %34 = ptrtoint i16* %13 to i64
  %35 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1137", %"class.v8::internal::BufferedCharacterStream.1137"* %0, i64 0, i32 0, i32 3
  %36 = bitcast i16** %35 to i64*
  store i64 %34, i64* %36, align 8
  br label %42

37:                                               ; preds = %1
  %38 = icmp ult i64 %31, 512
  %39 = select i1 %38, i64 %31, i64 512
  call void @_ZN2v88internal9CopyCharsIhtEEvPT0_PKT_m(i16* %13, i8* %26, i64 %39)
  %40 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1137", %"class.v8::internal::BufferedCharacterStream.1137"* %0, i64 0, i32 1, i64 %39
  %41 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1137", %"class.v8::internal::BufferedCharacterStream.1137"* %0, i64 0, i32 0, i32 3
  store i16* %40, i16** %41, align 8
  br label %42

42:                                               ; preds = %37, %33
  %43 = phi i1 [ false, %33 ], [ true, %37 ]
  ret i1 %43
}

declare void @_ZN2v88internal4Heap21AddGCEpilogueCallbackEPFvPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPvES4_S6_(%"class.v8::internal::Heap"*, void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal25RelocatingCharacterStream28UpdateBufferPointersCallbackEPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPv(%"class.v8::Isolate"*, i32, i32, i8*) #1 comdat align 2 {
  %5 = getelementptr inbounds i8, i8* %3, i64 32
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 56
  %9 = bitcast i8* %8 to i64**
  %10 = load i64*, i64** %9, align 8
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, 11
  %13 = inttoptr i64 %12 to i16*
  %14 = getelementptr inbounds i8, i8* %3, i64 64
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds i8, i8* %3, i64 72
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = icmp ugt i64 %19, %7
  %21 = select i1 %20, i64 %7, i64 %19
  %22 = add i64 %21, %16
  %23 = getelementptr inbounds i16, i16* %13, i64 %22
  %24 = getelementptr inbounds i8, i8* %3, i64 8
  %25 = bitcast i8* %24 to i16**
  %26 = load i16*, i16** %25, align 8
  %27 = icmp eq i16* %23, %26
  br i1 %27, label %41, label %28

28:                                               ; preds = %4
  %29 = add i64 %19, %16
  %30 = getelementptr inbounds i16, i16* %13, i64 %29
  %31 = getelementptr inbounds i8, i8* %3, i64 16
  %32 = bitcast i8* %31 to i16**
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = ptrtoint i16* %26 to i64
  %36 = sub i64 %34, %35
  %37 = ashr exact i64 %36, 1
  %38 = getelementptr inbounds i16, i16* %23, i64 %37
  store i16* %38, i16** %32, align 8
  store i16* %23, i16** %25, align 8
  %39 = getelementptr inbounds i8, i8* %3, i64 24
  %40 = bitcast i8* %39 to i16**
  store i16* %30, i16** %40, align 8
  br label %41

41:                                               ; preds = %4, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal25RelocatingCharacterStreamD2Ev(%"class.v8::internal::RelocatingCharacterStream"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RelocatingCharacterStream", %"class.v8::internal::RelocatingCharacterStream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal25RelocatingCharacterStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::RelocatingCharacterStream", %"class.v8::internal::RelocatingCharacterStream"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::RelocatingCharacterStream"* %0 to i8*
  tail call void @_ZN2v88internal4Heap24RemoveGCEpilogueCallbackEPFvPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPvES6_(%"class.v8::internal::Heap"* %5, void (%"class.v8::Isolate"*, i32, i32, i8*)* nonnull @_ZN2v88internal25RelocatingCharacterStream28UpdateBufferPointersCallbackEPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPv, i8* %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal25RelocatingCharacterStreamD0Ev(%"class.v8::internal::RelocatingCharacterStream"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RelocatingCharacterStream", %"class.v8::internal::RelocatingCharacterStream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal25RelocatingCharacterStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::RelocatingCharacterStream", %"class.v8::internal::RelocatingCharacterStream"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::RelocatingCharacterStream"* %0 to i8*
  tail call void @_ZN2v88internal4Heap24RemoveGCEpilogueCallbackEPFvPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPvES6_(%"class.v8::internal::Heap"* %5, void (%"class.v8::Isolate"*, i32, i32, i8*)* nonnull @_ZN2v88internal25RelocatingCharacterStream28UpdateBufferPointersCallbackEPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPv, i8* %6) #10
  tail call void @_ZdlPv(i8* %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal25UnbufferedCharacterStreamINS0_12OnHeapStreamEE13can_be_clonedEv(%"class.v8::internal::UnbufferedCharacterStream.1139"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::Utf16CharacterStream"* @_ZNK2v88internal25UnbufferedCharacterStreamINS0_12OnHeapStreamEE5CloneEv(%"class.v8::internal::UnbufferedCharacterStream.1139"*) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #11
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal25UnbufferedCharacterStreamINS0_12OnHeapStreamEE15can_access_heapEv(%"class.v8::internal::UnbufferedCharacterStream.1139"*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal25UnbufferedCharacterStreamINS0_12OnHeapStreamEE9ReadBlockEv(%"class.v8::internal::UnbufferedCharacterStream.1139"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1139", %"class.v8::internal::UnbufferedCharacterStream.1139"* %0, i64 0, i32 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1139", %"class.v8::internal::UnbufferedCharacterStream.1139"* %0, i64 0, i32 0, i32 2
  %5 = bitcast i16** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1139", %"class.v8::internal::UnbufferedCharacterStream.1139"* %0, i64 0, i32 0, i32 1
  %8 = bitcast i16** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = ashr exact i64 %10, 1
  %12 = add i64 %11, %3
  store i64 %12, i64* %2, align 8
  %13 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1139", %"class.v8::internal::UnbufferedCharacterStream.1139"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, 11
  %17 = inttoptr i64 %16 to i16*
  %18 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1139", %"class.v8::internal::UnbufferedCharacterStream.1139"* %0, i64 0, i32 1, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1139", %"class.v8::internal::UnbufferedCharacterStream.1139"* %0, i64 0, i32 1, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = icmp ugt i64 %21, %12
  %23 = select i1 %22, i64 %12, i64 %21
  %24 = add i64 %23, %19
  %25 = getelementptr inbounds i16, i16* %17, i64 %24
  %26 = add i64 %21, %19
  %27 = getelementptr inbounds i16, i16* %17, i64 %26
  %28 = ptrtoint i16* %25 to i64
  %29 = ptrtoint i16* %27 to i64
  store i64 %28, i64* %8, align 8
  %30 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1139", %"class.v8::internal::UnbufferedCharacterStream.1139"* %0, i64 0, i32 0, i32 3
  %31 = bitcast i16** %30 to i64*
  store i64 %29, i64* %31, align 8
  store i64 %28, i64* %5, align 8
  %32 = sub i64 %26, %24
  %33 = and i64 %32, 9223372036854775807
  %34 = icmp ne i64 %33, 0
  ret i1 %34
}

declare void @_ZN2v88internal4Heap24RemoveGCEpilogueCallbackEPFvPNS_7IsolateENS_6GCTypeENS_15GCCallbackFlagsEPvES6_(%"class.v8::internal::Heap"*, void (%"class.v8::Isolate"*, i32, i32, i8*)*, i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal23BufferedCharacterStreamINS0_13TestingStreamEED0Ev(%"class.v8::internal::BufferedCharacterStream.1148"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.v8::internal::BufferedCharacterStream.1148"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal23BufferedCharacterStreamINS0_13TestingStreamEE13can_be_clonedEv(%"class.v8::internal::BufferedCharacterStream.1148"*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::Utf16CharacterStream"* @_ZNK2v88internal23BufferedCharacterStreamINS0_13TestingStreamEE5CloneEv(%"class.v8::internal::BufferedCharacterStream.1148"*) unnamed_addr #1 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 1096) #12
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = getelementptr inbounds i8, i8* %2, i64 48
  store i8 0, i8* %5, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal23BufferedCharacterStreamINS0_13TestingStreamEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 1080
  %7 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1148", %"class.v8::internal::BufferedCharacterStream.1148"* %0, i64 0, i32 2
  %8 = bitcast %"class.v8::internal::TestingStream"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %8, i64 16, i1 false) #10
  %9 = bitcast i8* %2 to %"class.v8::internal::Utf16CharacterStream"*
  ret %"class.v8::internal::Utf16CharacterStream"* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal23BufferedCharacterStreamINS0_13TestingStreamEE15can_access_heapEv(%"class.v8::internal::BufferedCharacterStream.1148"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal23BufferedCharacterStreamINS0_13TestingStreamEE9ReadBlockEv(%"class.v8::internal::BufferedCharacterStream.1148"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1148", %"class.v8::internal::BufferedCharacterStream.1148"* %0, i64 0, i32 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1148", %"class.v8::internal::BufferedCharacterStream.1148"* %0, i64 0, i32 0, i32 2
  %5 = bitcast i16** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1148", %"class.v8::internal::BufferedCharacterStream.1148"* %0, i64 0, i32 0, i32 1
  %8 = bitcast i16** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = ashr exact i64 %10, 1
  %12 = add i64 %11, %3
  store i64 %12, i64* %2, align 8
  %13 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1148", %"class.v8::internal::BufferedCharacterStream.1148"* %0, i64 0, i32 1, i64 0
  store i16* %13, i16** %7, align 8
  store i16* %13, i16** %4, align 8
  %14 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1148", %"class.v8::internal::BufferedCharacterStream.1148"* %0, i64 0, i32 2, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1148", %"class.v8::internal::BufferedCharacterStream.1148"* %0, i64 0, i32 2, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ugt i64 %17, %12
  %19 = select i1 %18, i64 %12, i64 %17
  %20 = getelementptr inbounds i8, i8* %15, i64 %19
  %21 = getelementptr inbounds i8, i8* %15, i64 %17
  %22 = ptrtoint i8* %20 to i64
  %23 = ptrtoint i8* %21 to i64
  %24 = sub i64 %23, %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %1
  %27 = ptrtoint i16* %13 to i64
  %28 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1148", %"class.v8::internal::BufferedCharacterStream.1148"* %0, i64 0, i32 0, i32 3
  %29 = bitcast i16** %28 to i64*
  store i64 %27, i64* %29, align 8
  br label %35

30:                                               ; preds = %1
  %31 = icmp ult i64 %24, 512
  %32 = select i1 %31, i64 %24, i64 512
  call void @_ZN2v88internal9CopyCharsIhtEEvPT0_PKT_m(i16* %13, i8* %20, i64 %32)
  %33 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1148", %"class.v8::internal::BufferedCharacterStream.1148"* %0, i64 0, i32 1, i64 %32
  %34 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1148", %"class.v8::internal::BufferedCharacterStream.1148"* %0, i64 0, i32 0, i32 3
  store i16* %33, i16** %34, align 8
  br label %35

35:                                               ; preds = %30, %26
  %36 = phi i1 [ false, %26 ], [ true, %30 ]
  ret i1 %36
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal25UnbufferedCharacterStreamINS0_13TestingStreamEED0Ev(%"class.v8::internal::UnbufferedCharacterStream.1149"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.v8::internal::UnbufferedCharacterStream.1149"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal25UnbufferedCharacterStreamINS0_13TestingStreamEE13can_be_clonedEv(%"class.v8::internal::UnbufferedCharacterStream.1149"*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::Utf16CharacterStream"* @_ZNK2v88internal25UnbufferedCharacterStreamINS0_13TestingStreamEE5CloneEv(%"class.v8::internal::UnbufferedCharacterStream.1149"*) unnamed_addr #1 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 72) #12
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = getelementptr inbounds i8, i8* %2, i64 48
  store i8 0, i8* %5, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal25UnbufferedCharacterStreamINS0_13TestingStreamEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 56
  %7 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1149", %"class.v8::internal::UnbufferedCharacterStream.1149"* %0, i64 0, i32 1
  %8 = bitcast %"class.v8::internal::TestingStream.1150"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %8, i64 16, i1 false) #10
  %9 = bitcast i8* %2 to %"class.v8::internal::Utf16CharacterStream"*
  ret %"class.v8::internal::Utf16CharacterStream"* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal25UnbufferedCharacterStreamINS0_13TestingStreamEE15can_access_heapEv(%"class.v8::internal::UnbufferedCharacterStream.1149"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal25UnbufferedCharacterStreamINS0_13TestingStreamEE9ReadBlockEv(%"class.v8::internal::UnbufferedCharacterStream.1149"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1149", %"class.v8::internal::UnbufferedCharacterStream.1149"* %0, i64 0, i32 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1149", %"class.v8::internal::UnbufferedCharacterStream.1149"* %0, i64 0, i32 0, i32 2
  %5 = bitcast i16** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1149", %"class.v8::internal::UnbufferedCharacterStream.1149"* %0, i64 0, i32 0, i32 1
  %8 = bitcast i16** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = ashr exact i64 %10, 1
  %12 = add i64 %11, %3
  store i64 %12, i64* %2, align 8
  %13 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1149", %"class.v8::internal::UnbufferedCharacterStream.1149"* %0, i64 0, i32 1, i32 0
  %14 = load i16*, i16** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1149", %"class.v8::internal::UnbufferedCharacterStream.1149"* %0, i64 0, i32 1, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, %12
  %18 = select i1 %17, i64 %12, i64 %16
  %19 = getelementptr inbounds i16, i16* %14, i64 %18
  %20 = getelementptr inbounds i16, i16* %14, i64 %16
  %21 = ptrtoint i16* %19 to i64
  %22 = ptrtoint i16* %20 to i64
  store i64 %21, i64* %8, align 8
  %23 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1149", %"class.v8::internal::UnbufferedCharacterStream.1149"* %0, i64 0, i32 0, i32 3
  %24 = bitcast i16** %23 to i64*
  store i64 %22, i64* %24, align 8
  store i64 %21, i64* %5, align 8
  %25 = sub i64 %16, %18
  %26 = and i64 %25, 9223372036854775807
  %27 = icmp ne i64 %26, 0
  ret i1 %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEED2Ev(%"class.v8::internal::UnbufferedCharacterStream.1151"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1151", %"class.v8::internal::UnbufferedCharacterStream.1151"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1151", %"class.v8::internal::UnbufferedCharacterStream.1151"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN2v88internal13ChunkedStreamItEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1151", %"class.v8::internal::UnbufferedCharacterStream.1151"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %5 = load %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1151", %"class.v8::internal::UnbufferedCharacterStream.1151"* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %7 = load %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %6, align 8
  %8 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %5, %7
  br i1 %8, label %11, label %18

9:                                                ; preds = %25
  %10 = load %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %4, align 8
  br label %11

11:                                               ; preds = %9, %1
  %12 = phi %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* [ %10, %9 ], [ %5, %1 ]
  %13 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %12, null
  br i1 %13, label %28, label %14

14:                                               ; preds = %11
  %15 = ptrtoint %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %12 to i64
  %16 = bitcast %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %6 to i64*
  store i64 %15, i64* %16, align 8
  %17 = bitcast %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %28

18:                                               ; preds = %1, %25
  %19 = phi %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* [ %26, %25 ], [ %5, %1 ]
  %20 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %19, i64 0, i32 0
  %21 = load i16*, i16** %20, align 8
  %22 = icmp eq i16* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %18
  %24 = bitcast i16* %21 to i8*
  tail call void @_ZdaPv(i8* %24) #12
  br label %25

25:                                               ; preds = %23, %18
  %26 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %19, i64 1
  %27 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %26, %7
  br i1 %27, label %9, label %18

28:                                               ; preds = %11, %14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEED0Ev(%"class.v8::internal::UnbufferedCharacterStream.1151"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1151", %"class.v8::internal::UnbufferedCharacterStream.1151"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1151", %"class.v8::internal::UnbufferedCharacterStream.1151"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN2v88internal13ChunkedStreamItEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1151", %"class.v8::internal::UnbufferedCharacterStream.1151"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %5 = load %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1151", %"class.v8::internal::UnbufferedCharacterStream.1151"* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %7 = load %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %6, align 8
  %8 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %5, %7
  br i1 %8, label %11, label %18

9:                                                ; preds = %25
  %10 = load %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %4, align 8
  br label %11

11:                                               ; preds = %9, %1
  %12 = phi %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* [ %10, %9 ], [ %5, %1 ]
  %13 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %12, null
  br i1 %13, label %28, label %14

14:                                               ; preds = %11
  %15 = ptrtoint %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %12 to i64
  %16 = bitcast %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %6 to i64*
  store i64 %15, i64* %16, align 8
  %17 = bitcast %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %28

18:                                               ; preds = %1, %25
  %19 = phi %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* [ %26, %25 ], [ %5, %1 ]
  %20 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %19, i64 0, i32 0
  %21 = load i16*, i16** %20, align 8
  %22 = icmp eq i16* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %18
  %24 = bitcast i16* %21 to i8*
  tail call void @_ZdaPv(i8* %24) #12
  br label %25

25:                                               ; preds = %23, %18
  %26 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %19, i64 1
  %27 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %26, %7
  br i1 %27, label %9, label %18

28:                                               ; preds = %11, %14
  %29 = bitcast %"class.v8::internal::UnbufferedCharacterStream.1151"* %0 to i8*
  tail call void @_ZdlPv(i8* %29) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEE13can_be_clonedEv(%"class.v8::internal::UnbufferedCharacterStream.1151"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::Utf16CharacterStream"* @_ZNK2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEE5CloneEv(%"class.v8::internal::UnbufferedCharacterStream.1151"*) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #11
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEE15can_access_heapEv(%"class.v8::internal::UnbufferedCharacterStream.1151"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal25UnbufferedCharacterStreamINS0_13ChunkedStreamEE9ReadBlockEv(%"class.v8::internal::UnbufferedCharacterStream.1151"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", align 8
  %3 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1151", %"class.v8::internal::UnbufferedCharacterStream.1151"* %0, i64 0, i32 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1151", %"class.v8::internal::UnbufferedCharacterStream.1151"* %0, i64 0, i32 0, i32 2
  %6 = bitcast i16** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1151", %"class.v8::internal::UnbufferedCharacterStream.1151"* %0, i64 0, i32 0, i32 1
  %9 = bitcast i16** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %7, %10
  %12 = ashr exact i64 %11, 1
  %13 = add i64 %12, %4
  store i64 %13, i64* %3, align 8
  %14 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1151", %"class.v8::internal::UnbufferedCharacterStream.1151"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1151", %"class.v8::internal::UnbufferedCharacterStream.1151"* %0, i64 0, i32 0, i32 5
  %16 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %15, align 8
  %17 = bitcast %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  call void @_ZN2v88internal13ChunkedStreamItE9FindChunkEmPNS0_16RuntimeCallStatsE(%"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* nonnull sret %2, %"class.v8::internal::ChunkedStream"* %14, i64 %13, %"class.v8::internal::RuntimeCallStats"* %16) #10
  %18 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %2, i64 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %2, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %13, %21
  %23 = icmp ult i64 %22, %19
  %24 = select i1 %23, i64 %22, i64 %19
  %25 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %2, i64 0, i32 0
  %26 = load i16*, i16** %25, align 8
  %27 = getelementptr inbounds i16, i16* %26, i64 %24
  %28 = getelementptr inbounds i16, i16* %26, i64 %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  %29 = ptrtoint i16* %27 to i64
  %30 = ptrtoint i16* %28 to i64
  store i64 %29, i64* %9, align 8
  %31 = getelementptr inbounds %"class.v8::internal::UnbufferedCharacterStream.1151", %"class.v8::internal::UnbufferedCharacterStream.1151"* %0, i64 0, i32 0, i32 3
  %32 = bitcast i16** %31 to i64*
  store i64 %30, i64* %32, align 8
  store i64 %29, i64* %6, align 8
  %33 = sub i64 %19, %24
  %34 = and i64 %33, 9223372036854775807
  %35 = icmp ne i64 %34, 0
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ChunkedStreamItE12ProcessChunkEPKhmm(%"class.v8::internal::ChunkedStream"*, i8*, i64, i64) unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::ChunkedStream", %"class.v8::internal::ChunkedStream"* %0, i64 0, i32 2
  %6 = ptrtoint i8* %1 to i64
  %7 = lshr i64 %3, 1
  %8 = getelementptr inbounds %"class.v8::internal::ChunkedStream", %"class.v8::internal::ChunkedStream"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::ChunkedStream", %"class.v8::internal::ChunkedStream"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %10, align 8
  %12 = icmp ult %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %9, %11
  %13 = ptrtoint %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %11 to i64
  br i1 %12, label %14, label %21

14:                                               ; preds = %4
  %15 = bitcast %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %9 to i64*
  store i64 %6, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %9, i64 0, i32 1
  store i64 %2, i64* %16, align 8
  %17 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %9, i64 0, i32 2
  store i64 %7, i64* %17, align 8
  %18 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %9, i64 1
  %19 = ptrtoint %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %18 to i64
  %20 = bitcast %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %8 to i64*
  store i64 %19, i64* %20, align 8
  br label %76

21:                                               ; preds = %4
  %22 = ptrtoint %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %9 to i64
  %23 = bitcast %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %8 to i64*
  %24 = bitcast %"class.std::__1::vector.1152"* %5 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %22, %25
  %27 = sdiv exact i64 %26, 24
  %28 = add nsw i64 %27, 1
  %29 = icmp ugt i64 %28, 768614336404564650
  br i1 %29, label %30, label %32

30:                                               ; preds = %21
  %31 = bitcast %"class.std::__1::vector.1152"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #11
  unreachable

32:                                               ; preds = %21
  %33 = bitcast %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %10 to i64*
  %34 = sub i64 %13, %25
  %35 = sdiv exact i64 %34, 24
  %36 = icmp ult i64 %35, 384307168202282325
  br i1 %36, label %37, label %42

37:                                               ; preds = %32
  %38 = shl nsw i64 %35, 1
  %39 = icmp ult i64 %38, %28
  %40 = select i1 %39, i64 %28, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %37, %32
  %43 = phi i64 [ %40, %37 ], [ 768614336404564650, %32 ]
  %44 = mul i64 %43, 24
  %45 = tail call i8* @_Znwm(i64 %44) #12
  %46 = bitcast i8* %45 to %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"*
  br label %47

47:                                               ; preds = %42, %37
  %48 = phi i64 [ %43, %42 ], [ 0, %37 ]
  %49 = phi %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* [ %46, %42 ], [ null, %37 ]
  %50 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %49, i64 %27
  %51 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %49, i64 %48
  %52 = ptrtoint %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %51 to i64
  %53 = bitcast %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %50 to i64*
  store i64 %6, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %49, i64 %27, i32 1
  store i64 %2, i64* %54, align 8
  %55 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %49, i64 %27, i32 2
  store i64 %7, i64* %55, align 8
  %56 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %50, i64 1
  %57 = ptrtoint %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.1152", %"class.std::__1::vector.1152"* %5, i64 0, i32 0, i32 0
  %59 = load %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %58, align 8
  %60 = load i64, i64* %23, align 8
  %61 = ptrtoint %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %59 to i64
  %62 = sub i64 %60, %61
  %63 = sdiv exact i64 %62, -24
  %64 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %50, i64 %63
  %65 = ptrtoint %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %64 to i64
  %66 = icmp sgt i64 %62, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %47
  %68 = bitcast %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %64 to i8*
  %69 = bitcast %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 %62, i1 false) #10
  %70 = load %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %58, align 8
  br label %71

71:                                               ; preds = %67, %47
  %72 = phi %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* [ %59, %47 ], [ %70, %67 ]
  store i64 %65, i64* %24, align 8
  store i64 %57, i64* %23, align 8
  store i64 %52, i64* %33, align 8
  %73 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = bitcast %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %72 to i8*
  tail call void @_ZdlPv(i8* %75) #12
  br label %76

76:                                               ; preds = %14, %71, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ChunkedStreamItE9FindChunkEmPNS0_16RuntimeCallStatsE(%"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* noalias sret, %"class.v8::internal::ChunkedStream"*, i64, %"class.v8::internal::RuntimeCallStats"*) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca i8*, align 8
  %6 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %9 = getelementptr inbounds %"class.v8::internal::ChunkedStream", %"class.v8::internal::ChunkedStream"* %1, i64 0, i32 2, i32 0, i32 0
  %10 = load %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::ChunkedStream", %"class.v8::internal::ChunkedStream"* %1, i64 0, i32 2, i32 0, i32 1
  %12 = load %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %11, align 8
  %13 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %10, %12
  br i1 %13, label %14, label %40, !prof !2

14:                                               ; preds = %4
  %15 = bitcast i8** %5 to i8*
  %16 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %6 to i8*
  %17 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  %18 = icmp eq %"class.v8::internal::RuntimeCallStats"* %3, null
  %19 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::ChunkedStream", %"class.v8::internal::ChunkedStream"* %1, i64 0, i32 1
  %21 = bitcast %"class.v8::internal::ChunkedStream"* %1 to void (%"class.v8::internal::ChunkedStream"*, i8*, i64, i64)***
  br i1 %18, label %22, label %83, !prof !3

22:                                               ; preds = %14, %33
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  store i8* null, i8** %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 40, i1 false) #10
  %23 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1173", %"struct.std::__1::atomic.1173"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = load %"class.v8::ScriptCompiler::ExternalSourceStream"*, %"class.v8::ScriptCompiler::ExternalSourceStream"** %20, align 8
  %25 = bitcast %"class.v8::ScriptCompiler::ExternalSourceStream"* %24 to i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)***
  %26 = load i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)**, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*** %25, align 8
  %27 = getelementptr inbounds i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)** %26, i64 2
  %28 = load i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)** %27, align 8
  %29 = call i64 %28(%"class.v8::ScriptCompiler::ExternalSourceStream"* %24, i8** nonnull %5) #10
  %30 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %19, align 8
  %31 = icmp eq %"class.v8::internal::RuntimeCallStats"* %30, null
  br i1 %31, label %33, label %32, !prof !3

32:                                               ; preds = %22
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %30, %"class.v8::internal::RuntimeCallTimer"* %17) #10
  br label %33

33:                                               ; preds = %32, %22
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #10
  %34 = load i8*, i8** %5, align 8
  %35 = load void (%"class.v8::internal::ChunkedStream"*, i8*, i64, i64)**, void (%"class.v8::internal::ChunkedStream"*, i8*, i64, i64)*** %21, align 8
  %36 = load void (%"class.v8::internal::ChunkedStream"*, i8*, i64, i64)*, void (%"class.v8::internal::ChunkedStream"*, i8*, i64, i64)** %35, align 8
  call void %36(%"class.v8::internal::ChunkedStream"* %1, i8* %34, i64 0, i64 %29) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  %37 = load %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %9, align 8
  %38 = load %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %11, align 8
  %39 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %37, %38
  br i1 %39, label %22, label %40, !prof !2

40:                                               ; preds = %97, %33, %4
  %41 = phi %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* [ %12, %4 ], [ %38, %33 ], [ %102, %97 ]
  %42 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %41, i64 -1, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %41, i64 -1, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, %43
  %47 = icmp ugt i64 %46, %2
  %48 = icmp eq i64 %45, 0
  %49 = or i1 %48, %47
  br i1 %49, label %104, label %50

50:                                               ; preds = %40
  %51 = bitcast i8** %7 to i8*
  %52 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %8 to i8*
  %53 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %8, i64 0, i32 1
  %54 = icmp eq %"class.v8::internal::RuntimeCallStats"* %3, null
  %55 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %8, i64 0, i32 0
  %56 = getelementptr inbounds %"class.v8::internal::ChunkedStream", %"class.v8::internal::ChunkedStream"* %1, i64 0, i32 1
  %57 = bitcast %"class.v8::internal::ChunkedStream"* %1 to void (%"class.v8::internal::ChunkedStream"*, i8*, i64, i64)***
  br i1 %54, label %58, label %107, !prof !3

58:                                               ; preds = %50, %70
  %59 = phi i64 [ %79, %70 ], [ %46, %50 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  store i8* null, i8** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %52) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 40, i1 false) #10
  %60 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1173", %"struct.std::__1::atomic.1173"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %61 = load %"class.v8::ScriptCompiler::ExternalSourceStream"*, %"class.v8::ScriptCompiler::ExternalSourceStream"** %56, align 8
  %62 = bitcast %"class.v8::ScriptCompiler::ExternalSourceStream"* %61 to i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)***
  %63 = load i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)**, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*** %62, align 8
  %64 = getelementptr inbounds i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)** %63, i64 2
  %65 = load i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)** %64, align 8
  %66 = call i64 %65(%"class.v8::ScriptCompiler::ExternalSourceStream"* %61, i8** nonnull %7) #10
  %67 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %55, align 8
  %68 = icmp eq %"class.v8::internal::RuntimeCallStats"* %67, null
  br i1 %68, label %70, label %69, !prof !3

69:                                               ; preds = %58
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %67, %"class.v8::internal::RuntimeCallTimer"* %53) #10
  br label %70

70:                                               ; preds = %69, %58
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %52) #10
  %71 = load i8*, i8** %7, align 8
  %72 = load void (%"class.v8::internal::ChunkedStream"*, i8*, i64, i64)**, void (%"class.v8::internal::ChunkedStream"*, i8*, i64, i64)*** %57, align 8
  %73 = load void (%"class.v8::internal::ChunkedStream"*, i8*, i64, i64)*, void (%"class.v8::internal::ChunkedStream"*, i8*, i64, i64)** %72, align 8
  call void %73(%"class.v8::internal::ChunkedStream"* %1, i8* %71, i64 %59, i64 %66) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  %74 = load %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %11, align 8
  %75 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %74, i64 -1, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %74, i64 -1, i32 2
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, %76
  %80 = icmp ugt i64 %79, %2
  %81 = icmp eq i64 %78, 0
  %82 = or i1 %81, %80
  br i1 %82, label %104, label %58

83:                                               ; preds = %14, %97
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  store i8* null, i8** %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 40, i1 false) #10
  %84 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1173", %"struct.std::__1::atomic.1173"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %87, label %86, !prof !3

86:                                               ; preds = %83
  store %"class.v8::internal::RuntimeCallStats"* %3, %"class.v8::internal::RuntimeCallStats"** %19, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* nonnull %3, %"class.v8::internal::RuntimeCallTimer"* %17, i32 161) #10
  br label %87

87:                                               ; preds = %86, %83
  %88 = load %"class.v8::ScriptCompiler::ExternalSourceStream"*, %"class.v8::ScriptCompiler::ExternalSourceStream"** %20, align 8
  %89 = bitcast %"class.v8::ScriptCompiler::ExternalSourceStream"* %88 to i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)***
  %90 = load i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)**, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*** %89, align 8
  %91 = getelementptr inbounds i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)** %90, i64 2
  %92 = load i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)** %91, align 8
  %93 = call i64 %92(%"class.v8::ScriptCompiler::ExternalSourceStream"* %88, i8** nonnull %5) #10
  %94 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %19, align 8
  %95 = icmp eq %"class.v8::internal::RuntimeCallStats"* %94, null
  br i1 %95, label %97, label %96, !prof !3

96:                                               ; preds = %87
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %94, %"class.v8::internal::RuntimeCallTimer"* %17) #10
  br label %97

97:                                               ; preds = %87, %96
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #10
  %98 = load i8*, i8** %5, align 8
  %99 = load void (%"class.v8::internal::ChunkedStream"*, i8*, i64, i64)**, void (%"class.v8::internal::ChunkedStream"*, i8*, i64, i64)*** %21, align 8
  %100 = load void (%"class.v8::internal::ChunkedStream"*, i8*, i64, i64)*, void (%"class.v8::internal::ChunkedStream"*, i8*, i64, i64)** %99, align 8
  call void %100(%"class.v8::internal::ChunkedStream"* %1, i8* %98, i64 0, i64 %93) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  %101 = load %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %9, align 8
  %102 = load %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %11, align 8
  %103 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %101, %102
  br i1 %103, label %83, label %40, !prof !2

104:                                              ; preds = %122, %70, %40
  %105 = phi %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* [ %41, %40 ], [ %74, %70 ], [ %126, %122 ]
  %106 = load %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %9, align 8
  br label %135

107:                                              ; preds = %50, %122
  %108 = phi i64 [ %131, %122 ], [ %46, %50 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  store i8* null, i8** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %52) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 40, i1 false) #10
  %109 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1173", %"struct.std::__1::atomic.1173"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %112, label %111, !prof !3

111:                                              ; preds = %107
  store %"class.v8::internal::RuntimeCallStats"* %3, %"class.v8::internal::RuntimeCallStats"** %55, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* nonnull %3, %"class.v8::internal::RuntimeCallTimer"* %53, i32 161) #10
  br label %112

112:                                              ; preds = %111, %107
  %113 = load %"class.v8::ScriptCompiler::ExternalSourceStream"*, %"class.v8::ScriptCompiler::ExternalSourceStream"** %56, align 8
  %114 = bitcast %"class.v8::ScriptCompiler::ExternalSourceStream"* %113 to i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)***
  %115 = load i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)**, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*** %114, align 8
  %116 = getelementptr inbounds i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)** %115, i64 2
  %117 = load i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)*, i64 (%"class.v8::ScriptCompiler::ExternalSourceStream"*, i8**)** %116, align 8
  %118 = call i64 %117(%"class.v8::ScriptCompiler::ExternalSourceStream"* %113, i8** nonnull %7) #10
  %119 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %55, align 8
  %120 = icmp eq %"class.v8::internal::RuntimeCallStats"* %119, null
  br i1 %120, label %122, label %121, !prof !3

121:                                              ; preds = %112
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %119, %"class.v8::internal::RuntimeCallTimer"* %53) #10
  br label %122

122:                                              ; preds = %112, %121
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %52) #10
  %123 = load i8*, i8** %7, align 8
  %124 = load void (%"class.v8::internal::ChunkedStream"*, i8*, i64, i64)**, void (%"class.v8::internal::ChunkedStream"*, i8*, i64, i64)*** %57, align 8
  %125 = load void (%"class.v8::internal::ChunkedStream"*, i8*, i64, i64)*, void (%"class.v8::internal::ChunkedStream"*, i8*, i64, i64)** %124, align 8
  call void %125(%"class.v8::internal::ChunkedStream"* %1, i8* %123, i64 %108, i64 %118) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  %126 = load %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"** %11, align 8
  %127 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %126, i64 -1, i32 1
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %126, i64 -1, i32 2
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %130, %128
  %132 = icmp ugt i64 %131, %2
  %133 = icmp eq i64 %130, 0
  %134 = or i1 %133, %132
  br i1 %134, label %104, label %107

135:                                              ; preds = %104, %138
  %136 = phi %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* [ %139, %138 ], [ %105, %104 ]
  %137 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %136, %106
  br i1 %137, label %146, label %138

138:                                              ; preds = %135
  %139 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %136, i64 -1
  %140 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %136, i64 -1, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = icmp ugt i64 %141, %2
  br i1 %142, label %135, label %143

143:                                              ; preds = %138
  %144 = bitcast %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %0 to i8*
  %145 = bitcast %"struct.v8::internal::ChunkedStream<unsigned short>::Chunk"* %139 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 24, i1 false)
  ret void

146:                                              ; preds = %135
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #11
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEED2Ev(%"class.v8::internal::BufferedCharacterStream.1159"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1159", %"class.v8::internal::BufferedCharacterStream.1159"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1159", %"class.v8::internal::BufferedCharacterStream.1159"* %0, i64 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN2v88internal13ChunkedStreamIhEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1159", %"class.v8::internal::BufferedCharacterStream.1159"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  %5 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1159", %"class.v8::internal::BufferedCharacterStream.1159"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  %7 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %6, align 8
  %8 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %5, %7
  br i1 %8, label %11, label %18

9:                                                ; preds = %24
  %10 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %4, align 8
  br label %11

11:                                               ; preds = %9, %1
  %12 = phi %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* [ %10, %9 ], [ %5, %1 ]
  %13 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %11
  %15 = ptrtoint %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %12 to i64
  %16 = bitcast %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %6 to i64*
  store i64 %15, i64* %16, align 8
  %17 = bitcast %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %27

18:                                               ; preds = %1, %24
  %19 = phi %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* [ %25, %24 ], [ %5, %1 ]
  %20 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %19, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %18
  tail call void @_ZdaPv(i8* nonnull %21) #12
  br label %24

24:                                               ; preds = %23, %18
  %25 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %19, i64 1
  %26 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %25, %7
  br i1 %26, label %9, label %18

27:                                               ; preds = %11, %14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEED0Ev(%"class.v8::internal::BufferedCharacterStream.1159"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1159", %"class.v8::internal::BufferedCharacterStream.1159"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1159", %"class.v8::internal::BufferedCharacterStream.1159"* %0, i64 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN2v88internal13ChunkedStreamIhEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1159", %"class.v8::internal::BufferedCharacterStream.1159"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  %5 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1159", %"class.v8::internal::BufferedCharacterStream.1159"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  %7 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %6, align 8
  %8 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %5, %7
  br i1 %8, label %11, label %18

9:                                                ; preds = %24
  %10 = load %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"*, %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %4, align 8
  br label %11

11:                                               ; preds = %9, %1
  %12 = phi %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* [ %10, %9 ], [ %5, %1 ]
  %13 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %11
  %15 = ptrtoint %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %12 to i64
  %16 = bitcast %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"** %6 to i64*
  store i64 %15, i64* %16, align 8
  %17 = bitcast %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %27

18:                                               ; preds = %1, %24
  %19 = phi %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* [ %25, %24 ], [ %5, %1 ]
  %20 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %19, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %18
  tail call void @_ZdaPv(i8* nonnull %21) #12
  br label %24

24:                                               ; preds = %23, %18
  %25 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %19, i64 1
  %26 = icmp eq %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %25, %7
  br i1 %26, label %9, label %18

27:                                               ; preds = %11, %14
  %28 = bitcast %"class.v8::internal::BufferedCharacterStream.1159"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEE13can_be_clonedEv(%"class.v8::internal::BufferedCharacterStream.1159"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::Utf16CharacterStream"* @_ZNK2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEE5CloneEv(%"class.v8::internal::BufferedCharacterStream.1159"*) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEE15can_access_heapEv(%"class.v8::internal::BufferedCharacterStream.1159"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal23BufferedCharacterStreamINS0_13ChunkedStreamEE9ReadBlockEv(%"class.v8::internal::BufferedCharacterStream.1159"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", align 8
  %3 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1159", %"class.v8::internal::BufferedCharacterStream.1159"* %0, i64 0, i32 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1159", %"class.v8::internal::BufferedCharacterStream.1159"* %0, i64 0, i32 0, i32 2
  %6 = bitcast i16** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1159", %"class.v8::internal::BufferedCharacterStream.1159"* %0, i64 0, i32 0, i32 1
  %9 = bitcast i16** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %7, %10
  %12 = ashr exact i64 %11, 1
  %13 = add i64 %12, %4
  store i64 %13, i64* %3, align 8
  %14 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1159", %"class.v8::internal::BufferedCharacterStream.1159"* %0, i64 0, i32 1, i64 0
  store i16* %14, i16** %8, align 8
  store i16* %14, i16** %5, align 8
  %15 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1159", %"class.v8::internal::BufferedCharacterStream.1159"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1159", %"class.v8::internal::BufferedCharacterStream.1159"* %0, i64 0, i32 0, i32 5
  %17 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %16, align 8
  %18 = bitcast %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #10
  call void @_ZN2v88internal13ChunkedStreamIhE9FindChunkEmPNS0_16RuntimeCallStatsE(%"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* nonnull sret %2, %"class.v8::internal::ChunkedStream.1160"* %15, i64 %13, %"class.v8::internal::RuntimeCallStats"* %17) #10
  %19 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %2, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %2, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %13, %22
  %24 = icmp ult i64 %23, %20
  %25 = select i1 %24, i64 %23, i64 %20
  %26 = getelementptr inbounds %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk", %"struct.v8::internal::ChunkedStream<unsigned char>::Chunk"* %2, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 %25
  %29 = getelementptr inbounds i8, i8* %27, i64 %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #10
  %30 = ptrtoint i8* %28 to i64
  %31 = ptrtoint i8* %29 to i64
  %32 = sub i64 %31, %30
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %1
  %35 = load i64, i64* %9, align 8
  %36 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1159", %"class.v8::internal::BufferedCharacterStream.1159"* %0, i64 0, i32 0, i32 3
  %37 = bitcast i16** %36 to i64*
  store i64 %35, i64* %37, align 8
  br label %43

38:                                               ; preds = %1
  %39 = icmp ult i64 %32, 512
  %40 = select i1 %39, i64 %32, i64 512
  call void @_ZN2v88internal9CopyCharsIhtEEvPT0_PKT_m(i16* %14, i8* %28, i64 %40)
  %41 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1159", %"class.v8::internal::BufferedCharacterStream.1159"* %0, i64 0, i32 1, i64 %40
  %42 = getelementptr inbounds %"class.v8::internal::BufferedCharacterStream.1159", %"class.v8::internal::BufferedCharacterStream.1159"* %0, i64 0, i32 0, i32 3
  store i16* %41, i16** %42, align 8
  br label %43

43:                                               ; preds = %38, %34
  %44 = phi i1 [ false, %34 ], [ true, %38 ]
  ret i1 %44
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 4001}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
