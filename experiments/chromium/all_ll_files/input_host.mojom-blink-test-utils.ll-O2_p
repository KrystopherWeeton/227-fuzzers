; ModuleID = 'gen/third_party/blink/public/mojom/input/input_host.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/input/input_host.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::TextSuggestionHostAsyncWaiter" = type { %"class.blink::mojom::blink::TextSuggestionHost"* }
%"class.blink::mojom::blink::TextSuggestionHost" = type { i32 (...)** }
%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting" = type { %"class.blink::mojom::blink::TextSuggestionHost" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.mojo::InlinedStructPtr"*, i32, i32 }
%"class.mojo::InlinedStructPtr" = type <{ %"class.blink::mojom::blink::SpellCheckSuggestion", i32, [4 x i8] }>
%"class.blink::mojom::blink::SpellCheckSuggestion" = type { %"class.WTF::String" }
%"class.WTF::Vector.1" = type { %"class.WTF::VectorBuffer.2" }
%"class.WTF::VectorBuffer.2" = type { %"class.WTF::VectorBufferBase.3" }
%"class.WTF::VectorBufferBase.3" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::TextSuggestion"* }
%"class.blink::mojom::blink::TextSuggestion" = type { i32, i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }

$_ZN5blink5mojom5blink18TextSuggestionHostD2Ev = comdat any

$_ZN5blink5mojom5blink39TextSuggestionHostInterceptorForTestingD0Ev = comdat any

@_ZTVN5blink5mojom5blink39TextSuggestionHostInterceptorForTestingE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::TextSuggestionHost"*)* @_ZN5blink5mojom5blink18TextSuggestionHostD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)* @_ZN5blink5mojom5blink39TextSuggestionHostInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)* @_ZN5blink5mojom5blink39TextSuggestionHostInterceptorForTesting24StartSuggestionMenuTimerEv to i8*), i8* bitcast (void (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*, double, double, %"class.WTF::String"*, %"class.WTF::Vector"*)* @_ZN5blink5mojom5blink39TextSuggestionHostInterceptorForTesting28ShowSpellCheckSuggestionMenuEddRKN3WTF6StringENS3_6VectorIN4mojo16InlinedStructPtrINS1_20SpellCheckSuggestionEEELj0ENS3_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*, double, double, %"class.WTF::String"*, %"class.WTF::Vector.1"*)* @_ZN5blink5mojom5blink39TextSuggestionHostInterceptorForTesting22ShowTextSuggestionMenuEddRKN3WTF6StringENS3_6VectorIN4mojo9StructPtrINS1_14TextSuggestionEEELj0ENS3_18PartitionAllocatorEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom5blink29TextSuggestionHostAsyncWaiterC1EPNS1_18TextSuggestionHostE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::TextSuggestionHostAsyncWaiter"*, %"class.blink::mojom::blink::TextSuggestionHost"*), void (%"class.blink::mojom::blink::TextSuggestionHostAsyncWaiter"*, %"class.blink::mojom::blink::TextSuggestionHost"*)* @_ZN5blink5mojom5blink29TextSuggestionHostAsyncWaiterC2EPNS1_18TextSuggestionHostE
@_ZN5blink5mojom5blink29TextSuggestionHostAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::TextSuggestionHostAsyncWaiter"*), void (%"class.blink::mojom::blink::TextSuggestionHostAsyncWaiter"*)* @_ZN5blink5mojom5blink29TextSuggestionHostAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink39TextSuggestionHostInterceptorForTesting24StartSuggestionMenuTimerEv(%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::TextSuggestionHost"* (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)***
  %3 = load %"class.blink::mojom::blink::TextSuggestionHost"* (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::TextSuggestionHost"* (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::mojom::blink::TextSuggestionHost"* (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::TextSuggestionHost"* (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)** %3, i64 5
  %5 = load %"class.blink::mojom::blink::TextSuggestionHost"* (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::TextSuggestionHost"* (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.blink::mojom::blink::TextSuggestionHost"* %5(%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"* %0) #8
  %7 = bitcast %"class.blink::mojom::blink::TextSuggestionHost"* %6 to void (%"class.blink::mojom::blink::TextSuggestionHost"*)***
  %8 = load void (%"class.blink::mojom::blink::TextSuggestionHost"*)**, void (%"class.blink::mojom::blink::TextSuggestionHost"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::mojom::blink::TextSuggestionHost"*)*, void (%"class.blink::mojom::blink::TextSuggestionHost"*)** %8, i64 2
  %10 = load void (%"class.blink::mojom::blink::TextSuggestionHost"*)*, void (%"class.blink::mojom::blink::TextSuggestionHost"*)** %9, align 8
  tail call void %10(%"class.blink::mojom::blink::TextSuggestionHost"* %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink39TextSuggestionHostInterceptorForTesting28ShowSpellCheckSuggestionMenuEddRKN3WTF6StringENS3_6VectorIN4mojo16InlinedStructPtrINS1_20SpellCheckSuggestionEEELj0ENS3_18PartitionAllocatorEEE(%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*, double, double, %"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::Vector", align 8
  %7 = bitcast %"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::TextSuggestionHost"* (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)***
  %8 = load %"class.blink::mojom::blink::TextSuggestionHost"* (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::TextSuggestionHost"* (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::mojom::blink::TextSuggestionHost"* (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::TextSuggestionHost"* (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)** %8, i64 5
  %10 = load %"class.blink::mojom::blink::TextSuggestionHost"* (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::TextSuggestionHost"* (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)** %9, align 8
  %11 = tail call %"class.blink::mojom::blink::TextSuggestionHost"* %10(%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"* %0) #8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %14 = bitcast %"class.WTF::Vector"* %4 to i64*
  %15 = bitcast %"class.WTF::Vector"* %6 to i64*
  store i64 0, i64* %15, align 8
  %16 = load i64, i64* %14, align 8
  %17 = bitcast %"class.WTF::Vector"* %6 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %12, align 8
  store i32 0, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %13, align 4
  store i32 0, i32* %20, align 4
  %22 = bitcast %"class.blink::mojom::blink::TextSuggestionHost"* %11 to void (%"class.blink::mojom::blink::TextSuggestionHost"*, double, double, %"class.WTF::String"*, %"class.WTF::Vector"*)***
  %23 = load void (%"class.blink::mojom::blink::TextSuggestionHost"*, double, double, %"class.WTF::String"*, %"class.WTF::Vector"*)**, void (%"class.blink::mojom::blink::TextSuggestionHost"*, double, double, %"class.WTF::String"*, %"class.WTF::Vector"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::mojom::blink::TextSuggestionHost"*, double, double, %"class.WTF::String"*, %"class.WTF::Vector"*)*, void (%"class.blink::mojom::blink::TextSuggestionHost"*, double, double, %"class.WTF::String"*, %"class.WTF::Vector"*)** %23, i64 3
  %25 = load void (%"class.blink::mojom::blink::TextSuggestionHost"*, double, double, %"class.WTF::String"*, %"class.WTF::Vector"*)*, void (%"class.blink::mojom::blink::TextSuggestionHost"*, double, double, %"class.WTF::String"*, %"class.WTF::Vector"*)** %24, align 8
  call void %25(%"class.blink::mojom::blink::TextSuggestionHost"* %11, double %1, double %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::Vector"* nonnull %6) #8
  %26 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %26, align 8
  %28 = icmp eq %"class.mojo::InlinedStructPtr"* %27, null
  br i1 %28, label %46, label %29, !prof !2

29:                                               ; preds = %5
  %30 = bitcast %"class.mojo::InlinedStructPtr"* %27 to i8*
  %31 = load i32, i32* %13, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %44, label %33, !prof !3

33:                                               ; preds = %29
  %34 = zext i32 %31 to i64
  %35 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %27, i64 %34
  br label %36

36:                                               ; preds = %36, %33
  %37 = phi %"class.mojo::InlinedStructPtr"* [ %39, %36 ], [ %27, %33 ]
  %38 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %37, i64 0, i32 0
  call void @_ZN5blink5mojom5blink20SpellCheckSuggestionD1Ev(%"class.blink::mojom::blink::SpellCheckSuggestion"* %38) #8
  %39 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %37, i64 1
  %40 = icmp eq %"class.mojo::InlinedStructPtr"* %39, %35
  br i1 %40, label %41, label %36

41:                                               ; preds = %36
  store i32 0, i32* %13, align 4
  %42 = bitcast %"class.WTF::Vector"* %6 to i8**
  %43 = load i8*, i8** %42, align 8
  br label %44

44:                                               ; preds = %41, %29
  %45 = phi i8* [ %43, %41 ], [ %30, %29 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %45) #8
  store %"class.mojo::InlinedStructPtr"* null, %"class.mojo::InlinedStructPtr"** %26, align 8
  br label %46

46:                                               ; preds = %5, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink39TextSuggestionHostInterceptorForTesting22ShowTextSuggestionMenuEddRKN3WTF6StringENS3_6VectorIN4mojo9StructPtrINS1_14TextSuggestionEEELj0ENS3_18PartitionAllocatorEEE(%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*, double, double, %"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector.1"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::Vector.1", align 8
  %7 = bitcast %"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::TextSuggestionHost"* (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)***
  %8 = load %"class.blink::mojom::blink::TextSuggestionHost"* (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::TextSuggestionHost"* (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::mojom::blink::TextSuggestionHost"* (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::TextSuggestionHost"* (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)** %8, i64 5
  %10 = load %"class.blink::mojom::blink::TextSuggestionHost"* (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::TextSuggestionHost"* (%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*)** %9, align 8
  %11 = tail call %"class.blink::mojom::blink::TextSuggestionHost"* %10(%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"* %0) #8
  %12 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %6, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %6, i64 0, i32 0, i32 0, i32 2
  %14 = bitcast %"class.WTF::Vector.1"* %4 to i64*
  %15 = bitcast %"class.WTF::Vector.1"* %6 to i64*
  store i64 0, i64* %15, align 8
  %16 = load i64, i64* %14, align 8
  %17 = bitcast %"class.WTF::Vector.1"* %6 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %4, i64 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %12, align 8
  store i32 0, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %4, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %13, align 4
  store i32 0, i32* %20, align 4
  %22 = bitcast %"class.blink::mojom::blink::TextSuggestionHost"* %11 to void (%"class.blink::mojom::blink::TextSuggestionHost"*, double, double, %"class.WTF::String"*, %"class.WTF::Vector.1"*)***
  %23 = load void (%"class.blink::mojom::blink::TextSuggestionHost"*, double, double, %"class.WTF::String"*, %"class.WTF::Vector.1"*)**, void (%"class.blink::mojom::blink::TextSuggestionHost"*, double, double, %"class.WTF::String"*, %"class.WTF::Vector.1"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::mojom::blink::TextSuggestionHost"*, double, double, %"class.WTF::String"*, %"class.WTF::Vector.1"*)*, void (%"class.blink::mojom::blink::TextSuggestionHost"*, double, double, %"class.WTF::String"*, %"class.WTF::Vector.1"*)** %23, i64 4
  %25 = load void (%"class.blink::mojom::blink::TextSuggestionHost"*, double, double, %"class.WTF::String"*, %"class.WTF::Vector.1"*)*, void (%"class.blink::mojom::blink::TextSuggestionHost"*, double, double, %"class.WTF::String"*, %"class.WTF::Vector.1"*)** %24, align 8
  call void %25(%"class.blink::mojom::blink::TextSuggestionHost"* %11, double %1, double %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::Vector.1"* nonnull %6) #8
  %26 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %6, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %26, align 8
  %28 = icmp eq %"class.mojo::StructPtr"* %27, null
  br i1 %28, label %51, label %29, !prof !2

29:                                               ; preds = %5
  %30 = bitcast %"class.mojo::StructPtr"* %27 to i8*
  %31 = load i32, i32* %13, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %49, label %33, !prof !3

33:                                               ; preds = %29
  %34 = zext i32 %31 to i64
  %35 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %27, i64 %34
  br label %36

36:                                               ; preds = %43, %33
  %37 = phi %"class.mojo::StructPtr"* [ %44, %43 ], [ %27, %33 ]
  %38 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::mojom::blink::TextSuggestion"*, %"class.blink::mojom::blink::TextSuggestion"** %38, align 8
  store %"class.blink::mojom::blink::TextSuggestion"* null, %"class.blink::mojom::blink::TextSuggestion"** %38, align 8
  %40 = icmp eq %"class.blink::mojom::blink::TextSuggestion"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %36
  call void @_ZN5blink5mojom5blink14TextSuggestionD1Ev(%"class.blink::mojom::blink::TextSuggestion"* nonnull %39) #8
  %42 = bitcast %"class.blink::mojom::blink::TextSuggestion"* %39 to i8*
  call void @_ZdlPv(i8* %42) #9
  br label %43

43:                                               ; preds = %41, %36
  %44 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %37, i64 1
  %45 = icmp eq %"class.mojo::StructPtr"* %44, %35
  br i1 %45, label %46, label %36

46:                                               ; preds = %43
  store i32 0, i32* %13, align 4
  %47 = bitcast %"class.WTF::Vector.1"* %6 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %29
  %50 = phi i8* [ %48, %46 ], [ %30, %29 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  store %"class.mojo::StructPtr"* null, %"class.mojo::StructPtr"** %26, align 8
  br label %51

51:                                               ; preds = %5, %49
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink29TextSuggestionHostAsyncWaiterC2EPNS1_18TextSuggestionHostE(%"class.blink::mojom::blink::TextSuggestionHostAsyncWaiter"* nocapture, %"class.blink::mojom::blink::TextSuggestionHost"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::TextSuggestionHostAsyncWaiter", %"class.blink::mojom::blink::TextSuggestionHostAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::TextSuggestionHost"* %1, %"class.blink::mojom::blink::TextSuggestionHost"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink29TextSuggestionHostAsyncWaiterD2Ev(%"class.blink::mojom::blink::TextSuggestionHostAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink18TextSuggestionHostD2Ev(%"class.blink::mojom::blink::TextSuggestionHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink39TextSuggestionHostInterceptorForTestingD0Ev(%"class.blink::mojom::blink::TextSuggestionHostInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink20SpellCheckSuggestionD1Ev(%"class.blink::mojom::blink::SpellCheckSuggestion"*) unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink14TextSuggestionD1Ev(%"class.blink::mojom::blink::TextSuggestion"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
