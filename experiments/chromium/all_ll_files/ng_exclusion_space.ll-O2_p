; ModuleID = '../../third_party/blink/renderer/core/layout/ng/exclusions/ng_exclusion_space.cc'
source_filename = "../../third_party/blink/renderer/core/layout/ng/exclusions/ng_exclusion_space.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.3" }
%class.scoped_refptr = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe", %"class.WTF::Vector" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr.1*, i32, i32 }
%class.scoped_refptr.1 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"class.blink::LayoutBox" = type opaque
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.6", %"class.WTF::Vector.19", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.6" = type { %"class.WTF::VectorBuffer.7" }
%"class.WTF::VectorBuffer.7" = type { %"class.WTF::VectorBufferBase.8", [320 x i8] }
%"class.WTF::VectorBufferBase.8" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.9", %"class.WTF::Vector.9", %class.scoped_refptr.14, i8, [7 x i8] }>
%"class.WTF::Vector.9" = type { %"class.WTF::VectorBuffer.10" }
%"class.WTF::VectorBuffer.10" = type { %"class.WTF::VectorBufferBase.11", [8 x i8] }
%"class.WTF::VectorBufferBase.11" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.14 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.15", %"class.WTF::Vector", %"class.WTF::Vector" }
%"class.WTF::RefCounted.15" = type { %"class.base::RefCounted.16" }
%"class.base::RefCounted.16" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.19" = type { %"class.WTF::VectorBuffer.20" }
%"class.WTF::VectorBuffer.20" = type { %"class.WTF::VectorBufferBase.21", [288 x i8] }
%"class.WTF::VectorBufferBase.21" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.9", %"class.WTF::Vector.9" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.22 }
%class.scoped_refptr.22 = type { %"class.blink::NGShapeExclusions"* }
%"struct.std::__1::default_delete.26" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.41 }
%union.anon.41 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon }
%union.anon = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf" }
%class.anon = type { %"struct.blink::NGLayoutOpportunity"*, %"struct.blink::NGBfcOffset"*, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"* }
%"class.WTF::Vector.28" = type { %"class.WTF::VectorBuffer.29" }
%"class.WTF::VectorBuffer.29" = type { %"class.WTF::VectorBufferBase.30", [192 x i8] }
%"class.WTF::VectorBufferBase.30" = type { %"struct.blink::NGLayoutOpportunity"*, i32, i32 }

$_ZN3WTF6VectorI13scoped_refptrIKN5blink11NGExclusionEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN13scoped_refptrIN4base14RefCountedDataIN3WTF6VectorIS_IKN5blink11NGExclusionEELj0ENS2_18PartitionAllocatorEEEEEED2Ev = comdat any

$_ZN5blink17NGShapeExclusionsC2ERKS0_ = comdat any

$_ZN5blink24NGExclusionSpaceInternal12NGClosedAreaC2ENS_19NGLayoutOpportunityERKN3WTF6VectorINS0_11NGShelfEdgeELj1ENS3_18PartitionAllocatorEEES9_ = comdat any

$_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE7EraseAtEj = comdat any

$_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE6insertIRS3_EEvjOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink11NGExclusionEEEEmm = comdat any

$_ZN5blink17NGShapeExclusionsD2Ev = comdat any

$_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE6insertIRKS3_EEvjOT_ = comdat any

$_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24NGExclusionSpaceInternal12NGClosedAreaEEEmm = comdat any

$_ZN5blink24NGExclusionSpaceInternal12NGClosedAreaC2EOS1_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEmm = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN5blink24NGExclusionSpaceInternal12NGClosedAreaC2ERKS1_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE16SwapVectorBufferERS5_NS_16VectorBufferBaseIS3_S4_E11OffsetRangeES9_ = comdat any

$_ZN3WTF12VectorBufferIN5blink19NGLayoutOpportunityELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24NGExclusionSpaceInternal7NGShelfEEEmm = comdat any

$_ZN3WTF11VectorMoverILb0EN5blink24NGExclusionSpaceInternal7NGShelfENS_18PartitionAllocatorEE4MoveEPS3_S6_S6_b = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink11NGExclusionEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS5_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink24NGExclusionSpaceInternal7NGShelfC2ERKS1_ = comdat any

$_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF11VectorMoverILb0EN5blink24NGExclusionSpaceInternal7NGShelfENS_18PartitionAllocatorEE15MoveOverlappingEPS3_S6_S6_b = comdat any

$_ZN3WTF6VectorIN5blink19NGLayoutOpportunityELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIKS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink19NGLayoutOpportunityELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink19NGLayoutOpportunityELj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGLayoutOpportunityEEEmm = comdat any

@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink11NGExclusionEEEEPKcv = private unnamed_addr constant [87 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<const blink::NGExclusion>]\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24NGExclusionSpaceInternal12NGClosedAreaEEEPKcv = private unnamed_addr constant [93 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGExclusionSpaceInternal::NGClosedArea]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEPKcv = private unnamed_addr constant [92 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGExclusionSpaceInternal::NGShelfEdge]\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"position <= size()\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24NGExclusionSpaceInternal7NGShelfEEEPKcv = private unnamed_addr constant [88 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGExclusionSpaceInternal::NGShelf]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19NGLayoutOpportunityEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGLayoutOpportunity]\00", align 1

@_ZN5blink24NGExclusionSpaceInternalC1Ev = hidden unnamed_addr alias void (%"class.blink::NGExclusionSpaceInternal"*), void (%"class.blink::NGExclusionSpaceInternal"*)* @_ZN5blink24NGExclusionSpaceInternalC2Ev
@_ZN5blink24NGExclusionSpaceInternalC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"*), void (%"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"*)* @_ZN5blink24NGExclusionSpaceInternalC2ERKS0_
@_ZN5blink24NGExclusionSpaceInternalC1EOS0_ = hidden unnamed_addr alias void (%"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"*), void (%"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"*)* @_ZN5blink24NGExclusionSpaceInternalC2EOS0_
@_ZN5blink24NGExclusionSpaceInternal15DerivedGeometryC1ENS_10LayoutUnitEb = hidden unnamed_addr alias void (%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, i32, i1), void (%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, i32, i1)* @_ZN5blink24NGExclusionSpaceInternal15DerivedGeometryC2ENS_10LayoutUnitEb

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24NGExclusionSpaceInternalC2Ev(%"class.blink::NGExclusionSpaceInternal"* nocapture) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #12
  %3 = bitcast i8* %2 to i32*
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #13
  %5 = atomicrmw add i32* %3, i32 1 monotonic
  %6 = bitcast %"class.blink::NGExclusionSpaceInternal"* %0 to i8**
  store i8* %2, i8** %6, align 8
  %7 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 1
  %8 = bitcast i32* %7 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -2147483648, i32 -2147483648, i32 -2147483648>, <4 x i32>* %8, align 8
  %9 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 5
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 6
  %11 = bitcast %"class.std::__1::unique_ptr.3"* %10 to i64*
  store i64 0, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24NGExclusionSpaceInternalC2ERKS0_(%"class.blink::NGExclusionSpaceInternal"* nocapture, %"class.blink::NGExclusionSpaceInternal"* dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 0, i32 0
  store %"class.base::RefCountedData"* %4, %"class.base::RefCountedData"** %5, align 8
  %6 = icmp eq %"class.base::RefCountedData"* %4, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %11, align 8
  %14 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 2, i32 0
  %15 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 2, i32 0
  %16 = load i32, i32* %14, align 4
  store i32 %16, i32* %15, align 4
  %17 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 3, i32 0
  %18 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 3, i32 0
  %19 = load i32, i32* %17, align 8
  store i32 %19, i32* %18, align 8
  %20 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 4, i32 0
  %21 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 4, i32 0
  %22 = load i32, i32* %20, align 4
  store i32 %22, i32* %21, align 4
  %23 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 5
  %24 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 5
  %25 = load i8, i8* %24, align 8, !range !2
  store i8 %25, i8* %23, align 8
  %26 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 6
  %27 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 6
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.std::__1::unique_ptr.3"* %27 to i64*
  %30 = load i64, i64* %29, align 8
  store %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* null, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %28, align 8
  %31 = bitcast %"class.std::__1::unique_ptr.3"* %26 to i64*
  store i64 %30, i64* %31, align 8
  %32 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %28, align 8
  store %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* null, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %28, align 8
  %33 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %10
  %35 = bitcast %"class.std::__1::unique_ptr.3"* %27 to %"struct.std::__1::default_delete.26"*
  tail call void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.26"* %35, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* nonnull %32) #13
  br label %36

36:                                               ; preds = %10, %34
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24NGExclusionSpaceInternalC2EOS0_(%"class.blink::NGExclusionSpaceInternal"* nocapture, %"class.blink::NGExclusionSpaceInternal"* nocapture dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 0, i32 0
  %4 = bitcast %"class.blink::NGExclusionSpaceInternal"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.blink::NGExclusionSpaceInternal"* %0 to i64*
  store i64 %5, i64* %6, align 8
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %3, align 8
  %7 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 1
  %9 = bitcast i32* %7 to i8*
  %10 = bitcast i32* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 17, i1 false)
  %11 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 6
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::unique_ptr.3"* %12 to i64*
  %15 = load i64, i64* %14, align 8
  store %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* null, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %13, align 8
  %16 = bitcast %"class.std::__1::unique_ptr.3"* %11 to i64*
  store i64 %15, i64* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.blink::NGExclusionSpaceInternal"* @_ZN5blink24NGExclusionSpaceInternalaSERKS0_(%"class.blink::NGExclusionSpaceInternal"* returned, %"class.blink::NGExclusionSpaceInternal"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr, align 8
  %4 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %4, align 8
  %6 = icmp eq %"class.base::RefCountedData"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %class.scoped_refptr* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = bitcast %"class.blink::NGExclusionSpaceInternal"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %class.scoped_refptr* %3 to i64*
  %15 = ptrtoint %"class.base::RefCountedData"* %5 to i64
  store i64 %15, i64* %12, align 8
  store i64 %13, i64* %14, align 8
  call void @_ZN13scoped_refptrIN4base14RefCountedDataIN3WTF6VectorIS_IKN5blink11NGExclusionEELj0ENS2_18PartitionAllocatorEEEEEED2Ev(%class.scoped_refptr* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  %16 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 1
  store i32 %17, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 2, i32 0
  %20 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 2, i32 0
  %21 = load i32, i32* %19, align 4
  store i32 %21, i32* %20, align 4
  %22 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 3, i32 0
  %23 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 3, i32 0
  %24 = load i32, i32* %22, align 4
  store i32 %24, i32* %23, align 8
  %25 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 4, i32 0
  %26 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 4, i32 0
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %26, align 4
  %28 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 5
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 5
  store i8 %29, i8* %30, align 8
  %31 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 6
  %32 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 6
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %31, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.std::__1::unique_ptr.3"* %31 to i64*
  %35 = load i64, i64* %34, align 8
  store %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* null, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %33, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %32, i64 0, i32 0, i32 0, i32 0
  %37 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %36, align 8
  %38 = bitcast %"class.std::__1::unique_ptr.3"* %32 to i64*
  store i64 %35, i64* %38, align 8
  %39 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %37, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %10
  %41 = bitcast %"class.std::__1::unique_ptr.3"* %32 to %"struct.std::__1::default_delete.26"*
  call void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.26"* %41, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* nonnull %37) #13
  br label %42

42:                                               ; preds = %10, %40
  %43 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %33, align 8
  store %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* null, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %33, align 8
  %44 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = bitcast %"class.std::__1::unique_ptr.3"* %31 to %"struct.std::__1::default_delete.26"*
  call void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.26"* %46, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* nonnull %43) #13
  br label %47

47:                                               ; preds = %42, %45
  ret %"class.blink::NGExclusionSpaceInternal"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.blink::NGExclusionSpaceInternal"* @_ZN5blink24NGExclusionSpaceInternalaSEOS0_(%"class.blink::NGExclusionSpaceInternal"* returned, %"class.blink::NGExclusionSpaceInternal"* nocapture dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr, align 8
  %4 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 0, i32 0
  %5 = bitcast %"class.blink::NGExclusionSpaceInternal"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %4, align 8
  %7 = bitcast %class.scoped_refptr* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = bitcast %"class.blink::NGExclusionSpaceInternal"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %class.scoped_refptr* %3 to i64*
  store i64 %6, i64* %8, align 8
  store i64 %9, i64* %10, align 8
  call void @_ZN13scoped_refptrIN4base14RefCountedDataIN3WTF6VectorIS_IKN5blink11NGExclusionEELj0ENS2_18PartitionAllocatorEEEEEED2Ev(%class.scoped_refptr* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  %11 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 1
  %13 = bitcast i32* %11 to i8*
  %14 = bitcast i32* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 17, i1 false)
  %15 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 6
  %16 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 6
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr.3"* %16 to i64*
  %19 = load i64, i64* %18, align 8
  store %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* null, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %17, align 8
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %15, i64 0, i32 0, i32 0, i32 0
  %21 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %20, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.3"* %15 to i64*
  store i64 %19, i64* %22, align 8
  %23 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %21, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %2
  %25 = bitcast %"class.std::__1::unique_ptr.3"* %15 to %"struct.std::__1::default_delete.26"*
  call void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.26"* %25, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* nonnull %21) #13
  br label %26

26:                                               ; preds = %2, %24
  ret %"class.blink::NGExclusionSpaceInternal"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24NGExclusionSpaceInternal15DerivedGeometryC2ENS_10LayoutUnitEb(%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 0, i32 0, i32 1, i64 0
  %6 = bitcast %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0 to i8**
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 1, i32 0, i32 1, i64 0
  %11 = bitcast %"class.WTF::Vector.19"* %9 to i8**
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 4, i32* %12, align 8
  %13 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 2, i32 0
  store i32 %1, i32* %14, align 8
  %15 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 3
  store i8 %4, i8* %15, align 4
  %16 = bitcast i32* %7 to <4 x i32>*
  store <4 x i32> <i32 4, i32 0, i32 -2147483648, i32 -2147483648>, <4 x i32>* %16, align 8
  %17 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 0, i32 0, i32 1, i64 8
  %18 = bitcast i8* %17 to i32*
  store i32 2147483647, i32* %18, align 8
  %19 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 0, i32 0, i32 1, i64 16
  %20 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 0, i32 0, i32 1, i64 32
  %21 = bitcast i8* %19 to i8**
  store i8* %20, i8** %21, align 8
  %22 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 0, i32 0, i32 1, i64 24
  %23 = bitcast i8* %22 to i32*
  store i32 1, i32* %23, align 8
  %24 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 0, i32 0, i32 1, i64 28
  %25 = bitcast i8* %24 to i32*
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 0, i32 0, i32 1, i64 40
  %27 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 0, i32 0, i32 1, i64 56
  %28 = bitcast i8* %26 to i8**
  store i8* %27, i8** %28, align 8
  %29 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 0, i32 0, i32 1, i64 48
  %30 = bitcast i8* %29 to i32*
  store i32 1, i32* %30, align 8
  %31 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 0, i32 0, i32 1, i64 52
  %32 = bitcast i8* %31 to i32*
  store i32 0, i32* %32, align 4
  %33 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 0, i32 0, i32 1, i64 64
  br i1 %2, label %34, label %39

34:                                               ; preds = %3
  %35 = tail call noalias i8* @malloc(i64 40) #13
  %36 = bitcast i8* %35 to i32*
  store i32 1, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %35, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 32, i1 false) #13
  %38 = bitcast i8* %33 to i8**
  store i8* %35, i8** %38, align 8
  br label %41

39:                                               ; preds = %3
  %40 = bitcast i8* %33 to %"class.blink::NGShapeExclusions"**
  store %"class.blink::NGShapeExclusions"* null, %"class.blink::NGShapeExclusions"** %40, align 8
  br label %41

41:                                               ; preds = %34, %39
  %42 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 0, i32 0, i32 1, i64 72
  store i8 0, i8* %42, align 8
  store i32 1, i32* %8, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24NGExclusionSpaceInternal3AddE13scoped_refptrIKNS_11NGExclusionEE(%"class.blink::NGExclusionSpaceInternal"*, %"struct.blink::NGExclusion"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr, align 8
  %4 = alloca %class.scoped_refptr, align 8
  %5 = alloca %class.scoped_refptr, align 8
  %6 = alloca %class.scoped_refptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = ptrtoint %"struct.blink::NGExclusion"* %1 to i64
  %10 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 0, i32 0
  %13 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %12, align 8
  %14 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %13, i64 0, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp ult i32 %11, %15
  br i1 %16, label %17, label %90

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %13, i64 0, i32 1
  %19 = tail call dereferenceable(8) %class.scoped_refptr.1* @_ZN3WTF6VectorI13scoped_refptrIKN5blink11NGExclusionEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %18, i32 %11)
  %20 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %19, i64 0, i32 0
  %21 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %20, align 8
  %22 = tail call zeroext i1 @_ZNK5blink11NGExclusioneqERKS0_(%"struct.blink::NGExclusion"* %1, %"struct.blink::NGExclusion"* dereferenceable(40) %21) #13
  br i1 %22, label %90, label %23

23:                                               ; preds = %17
  %24 = bitcast %class.scoped_refptr* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %25 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %6, i64 0, i32 0
  %26 = tail call i8* @_Znwm(i64 24) #12
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %26, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #13
  %29 = atomicrmw add i32* %27, i32 1 monotonic
  %30 = bitcast %class.scoped_refptr* %6 to i8**
  store i8* %26, i8** %30, align 8
  %31 = bitcast i8* %28 to %"class.WTF::Vector"*
  %32 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %12, align 8
  %33 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %32, i64 0, i32 1, i32 0, i32 0, i32 0
  %34 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %33, align 8
  %35 = load i32, i32* %10, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %34, i64 %36
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %23
  %40 = ptrtoint i8* %26 to i64
  %41 = ptrtoint %"class.base::RefCountedData"* %32 to i64
  %42 = bitcast %"class.blink::NGExclusionSpaceInternal"* %0 to i64*
  %43 = bitcast %class.scoped_refptr* %6 to i64*
  br label %79

44:                                               ; preds = %23
  %45 = getelementptr inbounds i8, i8* %26, i64 20
  %46 = bitcast i8* %45 to i32*
  %47 = getelementptr inbounds i8, i8* %26, i64 16
  %48 = bitcast i8* %47 to i32*
  %49 = bitcast i8* %28 to %class.scoped_refptr.1**
  br label %50

50:                                               ; preds = %71, %44
  %51 = phi i32 [ 0, %44 ], [ %73, %71 ]
  %52 = phi i32 [ 0, %44 ], [ %72, %71 ]
  %53 = phi %class.scoped_refptr.1* [ %34, %44 ], [ %69, %71 ]
  %54 = icmp eq i32 %52, %51
  br i1 %54, label %67, label %55, !prof !3

55:                                               ; preds = %50
  %56 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %49, align 8
  %57 = zext i32 %52 to i64
  %58 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %53, i64 0, i32 0
  %59 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %58, align 8
  %60 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %56, i64 %57, i32 0
  store %"struct.blink::NGExclusion"* %59, %"struct.blink::NGExclusion"** %60, align 8
  %61 = icmp eq %"struct.blink::NGExclusion"* %59, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %59, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %63) #13
  br label %64

64:                                               ; preds = %62, %55
  %65 = load i32, i32* %46, align 4
  %66 = add i32 %65, 1
  store i32 %66, i32* %46, align 4
  br label %68

67:                                               ; preds = %50
  tail call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink11NGExclusionEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS5_EEvOT_(%"class.WTF::Vector"* %31, %class.scoped_refptr.1* dereferenceable(8) %53) #13
  br label %68

68:                                               ; preds = %67, %64
  %69 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %53, i64 1
  %70 = icmp eq %class.scoped_refptr.1* %69, %37
  br i1 %70, label %74, label %71

71:                                               ; preds = %68
  %72 = load i32, i32* %46, align 4
  %73 = load i32, i32* %48, align 8
  br label %50

74:                                               ; preds = %68
  %75 = bitcast %"class.blink::NGExclusionSpaceInternal"* %0 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %class.scoped_refptr* %6 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %39, %74
  %80 = phi i64* [ %43, %39 ], [ %77, %74 ]
  %81 = phi i64* [ %42, %39 ], [ %75, %74 ]
  %82 = phi i64 [ %40, %39 ], [ %78, %74 ]
  %83 = phi i64 [ %41, %39 ], [ %76, %74 ]
  %84 = bitcast %class.scoped_refptr* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #13
  %85 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 0, i32 0
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %25, align 8
  %86 = bitcast %class.scoped_refptr* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #13
  %87 = bitcast %class.scoped_refptr* %3 to i64*
  store i64 %82, i64* %81, align 8
  store i64 0, i64* %87, align 8
  call void @_ZN13scoped_refptrIN4base14RefCountedDataIN3WTF6VectorIS_IKN5blink11NGExclusionEELj0ENS2_18PartitionAllocatorEEEEEED2Ev(%class.scoped_refptr* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #13
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %85, align 8
  %88 = bitcast %class.scoped_refptr* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #13
  %89 = bitcast %class.scoped_refptr* %4 to i64*
  store i64 %83, i64* %80, align 8
  store i64 0, i64* %89, align 8
  call void @_ZN13scoped_refptrIN4base14RefCountedDataIN3WTF6VectorIS_IKN5blink11NGExclusionEELj0ENS2_18PartitionAllocatorEEEEEED2Ev(%class.scoped_refptr* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #13
  call void @_ZN13scoped_refptrIN4base14RefCountedDataIN3WTF6VectorIS_IKN5blink11NGExclusionEELj0ENS2_18PartitionAllocatorEEEEEED2Ev(%class.scoped_refptr* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #13
  call void @_ZN13scoped_refptrIN4base14RefCountedDataIN3WTF6VectorIS_IKN5blink11NGExclusionEELj0ENS2_18PartitionAllocatorEEEEEED2Ev(%class.scoped_refptr* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  br label %90

90:                                               ; preds = %17, %79, %2
  %91 = phi i1 [ false, %79 ], [ false, %2 ], [ true, %17 ]
  %92 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 5
  %93 = load i8, i8* %92, align 8, !range !2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %106

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %97 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %96, align 8
  %98 = icmp eq %"struct.blink::NGExclusionShapeData"* %97, null
  br i1 %98, label %106, label %99

99:                                               ; preds = %95
  store i8 1, i8* %92, align 8
  %100 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 6
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %100, i64 0, i32 0, i32 0, i32 0
  %102 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %101, align 8
  store %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* null, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %101, align 8
  %103 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %99
  %105 = bitcast %"class.std::__1::unique_ptr.3"* %100 to %"struct.std::__1::default_delete.26"*
  call void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.26"* %105, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* nonnull %102) #13
  br label %106

106:                                              ; preds = %95, %104, %99, %90
  %107 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %107)
  %108 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %109 = load i32, i32* %108, align 4
  store i32 %109, i32* %7, align 4
  %110 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 2
  %111 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %110, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = icmp slt i32 %109, %112
  br i1 %113, label %119, label %114

114:                                              ; preds = %106
  %115 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 3, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = icmp sge i32 %109, %116
  %118 = zext i1 %117 to i8
  br label %119

119:                                              ; preds = %106, %114
  %120 = phi i8 [ 0, %106 ], [ %118, %114 ]
  %121 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %1, i64 0, i32 3
  store i8 %120, i8* %121, align 8
  %122 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 4
  %123 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %122, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp slt i32 %124, %109
  %126 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %127 = select i1 %125, %"class.blink::LayoutUnit"* %126, %"class.blink::LayoutUnit"* %122
  %128 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %127, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  store i32 %129, i32* %123, align 4
  %130 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %130)
  %131 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %1, i64 0, i32 1, i32 1, i32 1, i32 0
  %132 = load i32, i32* %131, align 4
  store i32 %132, i32* %8, align 4
  %133 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %1, i64 0, i32 2
  %134 = load i32, i32* %133, align 4
  switch i32 %134, label %151 [
    i32 1, label %135
    i32 2, label %142
  ]

135:                                              ; preds = %119
  %136 = load i32, i32* %111, align 4
  %137 = icmp slt i32 %136, %132
  %138 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  %139 = select i1 %137, %"class.blink::LayoutUnit"* %138, %"class.blink::LayoutUnit"* %110
  %140 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %139, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  store i32 %141, i32* %111, align 4
  br label %151

142:                                              ; preds = %119
  %143 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 3
  %144 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %143, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = icmp slt i32 %145, %132
  %147 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  %148 = select i1 %146, %"class.blink::LayoutUnit"* %147, %"class.blink::LayoutUnit"* %143
  %149 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %148, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  store i32 %150, i32* %144, align 8
  br label %151

151:                                              ; preds = %119, %142, %135
  %152 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %153 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %152, align 8
  %154 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %153, null
  br i1 %154, label %156, label %155

155:                                              ; preds = %151
  call void @_ZN5blink24NGExclusionSpaceInternal15DerivedGeometry3AddERKNS_11NGExclusionE(%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* nonnull %153, %"struct.blink::NGExclusion"* dereferenceable(40) %1)
  br label %156

156:                                              ; preds = %151, %155
  br i1 %91, label %213, label %157

157:                                              ; preds = %156
  %158 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %12, align 8
  %159 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %158, i64 0, i32 1
  %160 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %158, i64 0, i32 1, i32 0, i32 0, i32 2
  %161 = load i32, i32* %160, align 4
  %162 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %158, i64 0, i32 1, i32 0, i32 0, i32 1
  %163 = load i32, i32* %162, align 8
  %164 = icmp eq i32 %161, %163
  br i1 %164, label %165, label %204, !prof !3

165:                                              ; preds = %157
  %166 = add i32 %161, 1
  %167 = lshr i32 %161, 2
  %168 = add i32 %166, %167
  %169 = icmp ugt i32 %168, 4
  %170 = select i1 %169, i32 %168, i32 4
  %171 = icmp ugt i32 %170, %166
  %172 = select i1 %171, i32 %170, i32 %166
  %173 = icmp ult i32 %161, %172
  br i1 %173, label %174, label %204, !prof !4

174:                                              ; preds = %165
  %175 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %159, i64 0, i32 0, i32 0, i32 0
  %176 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %175, align 8
  %177 = icmp eq %class.scoped_refptr.1* %176, null
  %178 = zext i32 %172 to i64
  %179 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink11NGExclusionEEEEmm(i64 %178) #13
  %180 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %179, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink11NGExclusionEEEEPKcv, i64 0, i64 0)) #13
  br i1 %177, label %181, label %186

181:                                              ; preds = %174
  %182 = ptrtoint i8* %180 to i64
  %183 = bitcast %"class.WTF::Vector"* %159 to i64*
  store atomic i64 %182, i64* %183 monotonic, align 8
  %184 = lshr i64 %179, 3
  %185 = trunc i64 %184 to i32
  store i32 %185, i32* %162, align 8
  br label %204

186:                                              ; preds = %174
  %187 = lshr i64 %179, 3
  %188 = ptrtoint i8* %180 to i64
  %189 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %175, align 8
  %190 = icmp ne i8* %180, null
  %191 = icmp ne %class.scoped_refptr.1* %189, null
  %192 = and i1 %190, %191
  %193 = bitcast %class.scoped_refptr.1* %189 to i8*
  br i1 %192, label %194, label %200, !prof !4

194:                                              ; preds = %186
  %195 = load i32, i32* %160, align 4
  %196 = zext i32 %195 to i64
  %197 = shl nuw nsw i64 %196, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %180, i8* nonnull align 8 %193, i64 %197, i1 false) #13
  %198 = bitcast %"class.WTF::Vector"* %159 to i8**
  %199 = load i8*, i8** %198, align 8
  br label %200

200:                                              ; preds = %194, %186
  %201 = phi i8* [ %199, %194 ], [ %193, %186 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %201) #13
  %202 = bitcast %"class.WTF::Vector"* %159 to i64*
  store atomic i64 %188, i64* %202 monotonic, align 8
  %203 = trunc i64 %187 to i32
  store i32 %203, i32* %162, align 8
  br label %204

204:                                              ; preds = %157, %165, %181, %200
  %205 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %159, i64 0, i32 0, i32 0, i32 0
  %206 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %205, align 8
  %207 = load i32, i32* %160, align 4
  %208 = zext i32 %207 to i64
  %209 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %206, i64 %208
  %210 = bitcast %class.scoped_refptr.1* %209 to i64*
  store i64 %9, i64* %210, align 8
  %211 = load i32, i32* %160, align 4
  %212 = add i32 %211, 1
  store i32 %212, i32* %160, align 4
  br label %213

213:                                              ; preds = %204, %156
  %214 = phi i64 [ %9, %156 ], [ 0, %204 ]
  %215 = load i32, i32* %10, align 8
  %216 = add i32 %215, 1
  store i32 %216, i32* %10, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %130)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %107)
  %217 = inttoptr i64 %214 to %"struct.blink::NGExclusion"*
  %218 = icmp eq i64 %214, 0
  br i1 %218, label %234, label %219

219:                                              ; preds = %213
  %220 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %217, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %220) #13
  %221 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %217, i64 0, i32 0, i32 0, i32 0, i32 0
  %222 = load i32, i32* %221, align 4
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %234

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %217, i64 0, i32 0, i32 0
  %226 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %225, i64 8
  %227 = bitcast %"class.base::RefCounted"* %226 to %"struct.blink::NGExclusionShapeData"**
  %228 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %227, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %227, align 8
  %229 = icmp eq %"struct.blink::NGExclusionShapeData"* %228, null
  br i1 %229, label %232, label %230

230:                                              ; preds = %224
  %231 = bitcast %"struct.blink::NGExclusionShapeData"* %228 to i8*
  call void @_ZdlPv(i8* %231) #12
  br label %232

232:                                              ; preds = %230, %224
  %233 = inttoptr i64 %214 to i8*
  call void @free(i8* %233) #13
  br label %234

234:                                              ; preds = %213, %219, %232
  ret void
}

declare zeroext i1 @_ZNK5blink11NGExclusioneqERKS0_(%"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr.1* @_ZN3WTF6VectorI13scoped_refptrIKN5blink11NGExclusionEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %24, i64 %25
  ret %class.scoped_refptr.1* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIN4base14RefCountedDataIN3WTF6VectorIS_IKN5blink11NGExclusionEELj0ENS2_18PartitionAllocatorEEEEEED2Ev(%class.scoped_refptr*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %0, i64 0, i32 0
  %3 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %2, align 8
  %4 = icmp eq %"class.base::RefCountedData"* %3, null
  br i1 %4, label %52, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %52

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %3, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %11, align 8
  %13 = icmp eq %class.scoped_refptr.1* %12, null
  br i1 %13, label %50, label %14, !prof !4

14:                                               ; preds = %9
  %15 = bitcast %class.scoped_refptr.1* %12 to i8*
  %16 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %3, i64 0, i32 1, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %48, label %19, !prof !3

19:                                               ; preds = %14
  %20 = zext i32 %17 to i64
  %21 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %12, i64 %20
  br label %22

22:                                               ; preds = %42, %19
  %23 = phi %class.scoped_refptr.1* [ %43, %42 ], [ %12, %19 ]
  %24 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %23, i64 0, i32 0
  %25 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %24, align 8
  %26 = icmp eq %"struct.blink::NGExclusion"* %25, null
  br i1 %26, label %42, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %25, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %28) #13
  %29 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %42

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %25, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %33, i64 8
  %35 = bitcast %"class.base::RefCounted"* %34 to %"struct.blink::NGExclusionShapeData"**
  %36 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %35, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %35, align 8
  %37 = icmp eq %"struct.blink::NGExclusionShapeData"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %32
  %39 = bitcast %"struct.blink::NGExclusionShapeData"* %36 to i8*
  tail call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %38, %32
  %41 = bitcast %"struct.blink::NGExclusion"* %25 to i8*
  tail call void @free(i8* %41) #13
  br label %42

42:                                               ; preds = %40, %27, %22
  %43 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %23, i64 1
  %44 = icmp eq %class.scoped_refptr.1* %43, %21
  br i1 %44, label %45, label %22

45:                                               ; preds = %42
  store i32 0, i32* %16, align 4
  %46 = bitcast %"class.WTF::Vector"* %10 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %14
  %49 = phi i8* [ %47, %45 ], [ %15, %14 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #13
  br label %50

50:                                               ; preds = %9, %48
  %51 = bitcast %"class.base::RefCountedData"* %3 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %5, %50, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24NGExclusionSpaceInternal15DerivedGeometry3AddERKNS_11NGExclusionE(%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusion"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.absl::optional", align 8
  %10 = alloca %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", align 8
  %11 = alloca %"struct.blink::NGLayoutOpportunity", align 8
  %12 = alloca %"struct.blink::NGExclusionSpaceInternal::NGShelf", align 8
  %13 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %1, i64 0, i32 1, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %14, %16
  br i1 %17, label %18, label %919

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %1, i64 0, i32 1, i32 1, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 0
  %22 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %919, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = bitcast %union.anon* %27 to i8*
  %29 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 6, i32 0
  %30 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5
  %31 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5, i32 0, i32 0, i32 2
  %32 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %30, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5, i32 0, i32 1, i64 0
  %34 = bitcast i8* %33 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %35 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %30, i64 0, i32 0
  %36 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4
  %37 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 0, i32 0, i32 2
  %38 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %36, i64 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 0, i32 1, i64 0
  %40 = bitcast i8* %39 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %41 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %36, i64 0, i32 0
  %42 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %43 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %44 = bitcast %"struct.blink::NGLayoutOpportunity"* %11 to i64*
  %45 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %11, i64 0, i32 0, i32 1
  %46 = bitcast %"struct.blink::NGBfcOffset"* %45 to i64*
  %47 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %11, i64 0, i32 1, i32 0
  %48 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 1
  %49 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %50 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %51 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %48, i64 0, i32 0, i32 0, i32 0
  %53 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %10 to i8*
  %54 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %10, i64 0, i32 0, i32 1, i32 0
  %55 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %10, i64 0, i32 1, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %10, i64 0, i32 1, i32 0, i32 0, i32 2
  %57 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %10, i64 0, i32 2, i32 0, i32 0, i32 1
  %59 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %10, i64 0, i32 2, i32 0, i32 0, i32 2
  %60 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %10, i64 0, i32 2, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %10, i64 0, i32 2
  %62 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %10, i64 0, i32 2, i32 0, i32 1, i64 0
  %64 = bitcast i8* %63 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %65 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %61, i64 0, i32 0
  %66 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %10, i64 0, i32 1
  %67 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %10, i64 0, i32 1, i32 0, i32 1, i64 0
  %69 = bitcast i8* %68 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %70 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %66, i64 0, i32 0
  %71 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %1, i64 0, i32 2
  %72 = icmp eq %"struct.blink::NGExclusion"* %1, null
  %73 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %1, i64 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %75 = bitcast %"class.absl::optional"* %9 to i64*
  br label %76

76:                                               ; preds = %25, %888
  %77 = phi i32 [ 0, %25 ], [ %889, %888 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %26) #13
  store i64 -6148914691236517206, i64* %75, align 8
  store i8 0, i8* %26, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 80, i1 false) #13
  %78 = call dereferenceable(80) %"struct.blink::NGExclusionSpaceInternal::NGShelf"* @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"* %21, i32 %77) #13
  %79 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp slt i32 %20, %80
  br i1 %81, label %122, label %82

82:                                               ; preds = %76
  %83 = add nuw i32 %77, 1
  %84 = load i32, i32* %22, align 4
  %85 = icmp ult i32 %83, %84
  br i1 %85, label %86, label %91

86:                                               ; preds = %82
  %87 = call dereferenceable(80) %"struct.blink::NGExclusionSpaceInternal::NGShelf"* @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"* %21, i32 %83) #13
  %88 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %87, i64 0, i32 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp slt i32 %20, %89
  br i1 %90, label %91, label %122

91:                                               ; preds = %82, %86
  %92 = load i8, i8* %26, align 8, !range !2
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %121, label %94

94:                                               ; preds = %91
  %95 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %29, align 8
  %96 = icmp eq %"class.blink::NGShapeExclusions"* %95, null
  br i1 %96, label %104, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %95, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %98) #13
  %99 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %95, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %97
  call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %95) #13
  %103 = bitcast %"class.blink::NGShapeExclusions"* %95 to i8*
  call void @free(i8* %103) #13
  br label %104

104:                                              ; preds = %102, %97, %94
  %105 = load i32, i32* %31, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %108, label %107, !prof !3

107:                                              ; preds = %104
  store i32 0, i32* %31, align 4
  br label %108

108:                                              ; preds = %107, %104
  %109 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %32, align 8
  %110 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %109, %34
  br i1 %110, label %112, label %111, !prof !4

111:                                              ; preds = %108
  call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %35, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %109) #13
  br label %112

112:                                              ; preds = %111, %108
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %32, align 8
  %113 = load i32, i32* %37, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %116, label %115, !prof !3

115:                                              ; preds = %112
  store i32 0, i32* %37, align 4
  br label %116

116:                                              ; preds = %115, %112
  %117 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %38, align 8
  %118 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %117, %40
  br i1 %118, label %120, label %119, !prof !4

119:                                              ; preds = %116
  call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %41, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %117) #13
  br label %120

120:                                              ; preds = %116, %119
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %38, align 8
  store i8 0, i8* %26, align 8
  br label %121

121:                                              ; preds = %91, %120
  call void @_ZN5blink24NGExclusionSpaceInternal7NGShelfC2ERKS1_(%"struct.blink::NGExclusionSpaceInternal::NGShelf"* %42, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* dereferenceable(80) %78) #13
  store i8 1, i8* %26, align 8
  br label %122

122:                                              ; preds = %76, %121, %86
  %123 = phi i1 [ true, %121 ], [ false, %86 ], [ false, %76 ]
  %124 = load i32, i32* %43, align 4
  %125 = load i32, i32* %79, align 4
  %126 = icmp sgt i32 %124, %125
  br i1 %126, label %127, label %331

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 4
  %129 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 4, i32 0, i32 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %149, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %128, i64 0, i32 0, i32 0, i32 0
  %134 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %133, align 8
  %135 = zext i32 %130 to i64
  %136 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %134, i64 %135
  br label %137

137:                                              ; preds = %146, %132
  %138 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %147, %146 ], [ %134, %132 ]
  %139 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %138, i64 0, i32 1, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = icmp sgt i32 %140, %125
  br i1 %141, label %142, label %146

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %138, i64 0, i32 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = icmp slt i32 %144, %124
  br i1 %145, label %149, label %146

146:                                              ; preds = %142, %137
  %147 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %138, i64 1
  %148 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %147, %136
  br i1 %148, label %170, label %137

149:                                              ; preds = %142, %127
  %150 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 5, i32 0, i32 0, i32 2
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %170, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 5, i32 0, i32 0, i32 0
  %155 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %154, align 8
  %156 = zext i32 %151 to i64
  %157 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %155, i64 %156
  br label %158

158:                                              ; preds = %167, %153
  %159 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %168, %167 ], [ %155, %153 ]
  %160 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %159, i64 0, i32 1, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = icmp sgt i32 %161, %125
  br i1 %162, label %163, label %167

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %159, i64 0, i32 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = icmp slt i32 %165, %124
  br i1 %166, label %170, label %167

167:                                              ; preds = %163, %158
  %168 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %159, i64 1
  %169 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %168, %157
  br i1 %169, label %170, label %158

170:                                              ; preds = %146, %167, %163, %149
  %171 = phi i1 [ false, %149 ], [ true, %167 ], [ false, %163 ], [ true, %146 ]
  %172 = load i32, i32* %15, align 4
  %173 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 2, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = icmp sgt i32 %172, %174
  br i1 %175, label %333, label %176

176:                                              ; preds = %170
  %177 = load i32, i32* %13, align 4
  %178 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 1, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = icmp slt i32 %177, %179
  %181 = or i1 %171, %180
  br i1 %181, label %333, label %182

182:                                              ; preds = %176
  %183 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 7
  %184 = load i8, i8* %183, align 8, !range !2
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %192, label %186

186:                                              ; preds = %182
  %187 = call noalias i8* @malloc(i64 40) #13
  %188 = bitcast i8* %187 to %"class.blink::NGShapeExclusions"*
  %189 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 6, i32 0
  %190 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %189, align 8
  call void @_ZN5blink17NGShapeExclusionsC2ERKS0_(%"class.blink::NGShapeExclusions"* %188, %"class.blink::NGShapeExclusions"* dereferenceable(40) %190)
  %191 = ptrtoint i8* %187 to i64
  br label %192

192:                                              ; preds = %186, %182
  %193 = phi i64 [ %191, %186 ], [ 0, %182 ]
  %194 = inttoptr i64 %193 to %"class.blink::NGShapeExclusions"*
  %195 = zext i32 %125 to i64
  %196 = shl nuw i64 %195, 32
  %197 = zext i32 %179 to i64
  %198 = or i64 %196, %197
  store i64 %198, i64* %44, align 8
  %199 = zext i32 %124 to i64
  %200 = shl nuw i64 %199, 32
  %201 = zext i32 %174 to i64
  %202 = or i64 %200, %201
  store i64 %202, i64* %46, align 8
  store %"class.blink::NGShapeExclusions"* %194, %"class.blink::NGShapeExclusions"** %47, align 8
  %203 = icmp eq i64 %193, 0
  br i1 %203, label %206, label %204

204:                                              ; preds = %192
  %205 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %194, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %205) #13
  br label %206

206:                                              ; preds = %192, %204
  %207 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 5
  call void @_ZN5blink24NGExclusionSpaceInternal12NGClosedAreaC2ENS_19NGLayoutOpportunityERKN3WTF6VectorINS0_11NGShelfEdgeELj1ENS3_18PartitionAllocatorEEES9_(%"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* nonnull %10, %"struct.blink::NGLayoutOpportunity"* nonnull byval(%"struct.blink::NGLayoutOpportunity") align 8 %11, %"class.WTF::Vector.9"* dereferenceable(24) %128, %"class.WTF::Vector.9"* dereferenceable(24) %207)
  %208 = load i32, i32* %49, align 4
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %285

210:                                              ; preds = %206
  %211 = load i32, i32* %51, align 8
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %216, !prof !3

213:                                              ; preds = %210
  call void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.19"* %48, i32 1) #13
  %214 = load i32, i32* %49, align 4
  %215 = zext i32 %214 to i64
  br label %216

216:                                              ; preds = %213, %210
  %217 = phi i64 [ %215, %213 ], [ 0, %210 ]
  %218 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %52, align 8
  %219 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %218, i64 %217
  %220 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %219 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %220, i8* nonnull align 8 %53, i64 16, i1 false) #13
  %221 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %54, align 8
  %222 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %218, i64 %217, i32 0, i32 1, i32 0
  store %"class.blink::NGShapeExclusions"* %221, %"class.blink::NGShapeExclusions"** %222, align 8
  %223 = icmp eq %"class.blink::NGShapeExclusions"* %221, null
  br i1 %223, label %226, label %224

224:                                              ; preds = %216
  %225 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %221, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %225) #13
  br label %226

226:                                              ; preds = %224, %216
  %227 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %218, i64 %217, i32 1
  %228 = load i32, i32* %55, align 8
  %229 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %218, i64 %217, i32 1, i32 0, i32 1, i64 0
  %230 = bitcast %"class.WTF::Vector.9"* %227 to i8**
  store i8* %229, i8** %230, align 8
  %231 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %218, i64 %217, i32 1, i32 0, i32 0, i32 1
  store i32 1, i32* %231, align 8
  %232 = icmp ugt i32 %228, 1
  br i1 %232, label %233, label %241

233:                                              ; preds = %226
  %234 = zext i32 %228 to i64
  %235 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEmm(i64 %234) #13
  %236 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %235, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEPKcv, i64 0, i64 0)) #13
  %237 = ptrtoint i8* %236 to i64
  %238 = bitcast %"class.WTF::Vector.9"* %227 to i64*
  store atomic i64 %237, i64* %238 monotonic, align 8
  %239 = lshr i64 %235, 3
  %240 = trunc i64 %239 to i32
  store i32 %240, i32* %231, align 8
  br label %241

241:                                              ; preds = %233, %226
  %242 = phi i8* [ %229, %226 ], [ %236, %233 ]
  %243 = load i32, i32* %56, align 4
  %244 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %218, i64 %217, i32 1, i32 0, i32 0, i32 2
  store i32 %243, i32* %244, align 4
  %245 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %57, align 8
  %246 = icmp ne i8* %242, null
  %247 = icmp ne %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %245, null
  %248 = and i1 %246, %247
  br i1 %248, label %249, label %254, !prof !4

249:                                              ; preds = %241
  %250 = load i32, i32* %56, align 4
  %251 = zext i32 %250 to i64
  %252 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %245 to i8*
  %253 = shl nuw nsw i64 %251, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %242, i8* nonnull align 4 %252, i64 %253, i1 false) #13
  br label %254

254:                                              ; preds = %249, %241
  %255 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %218, i64 %217, i32 2
  %256 = load i32, i32* %58, align 8
  %257 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %218, i64 %217, i32 2, i32 0, i32 1, i64 0
  %258 = bitcast %"class.WTF::Vector.9"* %255 to i8**
  store i8* %257, i8** %258, align 8
  %259 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %218, i64 %217, i32 2, i32 0, i32 0, i32 1
  store i32 1, i32* %259, align 8
  %260 = icmp ugt i32 %256, 1
  br i1 %260, label %261, label %269

261:                                              ; preds = %254
  %262 = zext i32 %256 to i64
  %263 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEmm(i64 %262) #13
  %264 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %263, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEPKcv, i64 0, i64 0)) #13
  %265 = ptrtoint i8* %264 to i64
  %266 = bitcast %"class.WTF::Vector.9"* %255 to i64*
  store atomic i64 %265, i64* %266 monotonic, align 8
  %267 = lshr i64 %263, 3
  %268 = trunc i64 %267 to i32
  store i32 %268, i32* %259, align 8
  br label %269

269:                                              ; preds = %261, %254
  %270 = phi i8* [ %257, %254 ], [ %264, %261 ]
  %271 = load i32, i32* %59, align 4
  %272 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %218, i64 %217, i32 2, i32 0, i32 0, i32 2
  store i32 %271, i32* %272, align 4
  %273 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %60, align 8
  %274 = icmp ne i8* %270, null
  %275 = icmp ne %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %273, null
  %276 = and i1 %274, %275
  br i1 %276, label %277, label %282, !prof !4

277:                                              ; preds = %269
  %278 = load i32, i32* %59, align 4
  %279 = zext i32 %278 to i64
  %280 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %273 to i8*
  %281 = shl nuw nsw i64 %279, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %270, i8* nonnull align 4 %280, i64 %281, i1 false) #13
  br label %282

282:                                              ; preds = %269, %277
  %283 = load i32, i32* %49, align 4
  %284 = add i32 %283, 1
  store i32 %284, i32* %49, align 4
  br label %297

285:                                              ; preds = %206, %289
  %286 = phi i32 [ %287, %289 ], [ %208, %206 ]
  %287 = add i32 %286, -1
  %288 = icmp eq i32 %286, 0
  br i1 %288, label %296, label %289

289:                                              ; preds = %285
  %290 = call dereferenceable(72) %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.19"* %48, i32 %287) #13
  %291 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %290, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %292 = load i32, i32* %291, align 4
  %293 = load i32, i32* %50, align 4
  %294 = icmp sgt i32 %292, %293
  br i1 %294, label %285, label %295

295:                                              ; preds = %289
  call void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE6insertIRKS3_EEvjOT_(%"class.WTF::Vector.19"* %48, i32 %286, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* nonnull dereferenceable(72) %10) #13
  br label %297

296:                                              ; preds = %285
  call void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE6insertIRKS3_EEvjOT_(%"class.WTF::Vector.19"* %48, i32 0, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* nonnull dereferenceable(72) %10) #13
  br label %297

297:                                              ; preds = %282, %295, %296
  %298 = load i32, i32* %59, align 4
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %301, label %300, !prof !3

300:                                              ; preds = %297
  store i32 0, i32* %59, align 4
  br label %301

301:                                              ; preds = %300, %297
  %302 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %62, align 8
  %303 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %302, %64
  br i1 %303, label %305, label %304, !prof !4

304:                                              ; preds = %301
  call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %65, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %302) #13
  br label %305

305:                                              ; preds = %304, %301
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %62, align 8
  %306 = load i32, i32* %56, align 4
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %309, label %308, !prof !3

308:                                              ; preds = %305
  store i32 0, i32* %56, align 4
  br label %309

309:                                              ; preds = %308, %305
  %310 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %67, align 8
  %311 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %310, %69
  br i1 %311, label %313, label %312, !prof !4

312:                                              ; preds = %309
  call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %70, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %310) #13
  br label %313

313:                                              ; preds = %312, %309
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %67, align 8
  %314 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %54, align 8
  %315 = icmp eq %"class.blink::NGShapeExclusions"* %314, null
  br i1 %315, label %323, label %316

316:                                              ; preds = %313
  %317 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %314, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %317) #13
  %318 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %314, i64 0, i32 0, i32 0, i32 0, i32 0
  %319 = load i32, i32* %318, align 4
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %323

321:                                              ; preds = %316
  call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %314) #13
  %322 = bitcast %"class.blink::NGShapeExclusions"* %314 to i8*
  call void @free(i8* %322) #13
  br label %323

323:                                              ; preds = %313, %316, %321
  br i1 %203, label %333, label %324

324:                                              ; preds = %323
  %325 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %194, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %325) #13
  %326 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %194, i64 0, i32 0, i32 0, i32 0, i32 0
  %327 = load i32, i32* %326, align 4
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %333

329:                                              ; preds = %324
  call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %194) #13
  %330 = inttoptr i64 %193 to i8*
  call void @free(i8* %330) #13
  br label %333

331:                                              ; preds = %122
  %332 = icmp sgt i32 %20, %125
  br label %333

333:                                              ; preds = %170, %176, %323, %324, %329, %331
  %334 = phi i1 [ %332, %331 ], [ false, %329 ], [ false, %324 ], [ false, %323 ], [ false, %176 ], [ false, %170 ]
  %335 = or i1 %126, %334
  br i1 %335, label %336, label %587

336:                                              ; preds = %333
  %337 = load i32, i32* %71, align 4
  %338 = icmp eq i32 %337, 1
  br i1 %338, label %339, label %448

339:                                              ; preds = %336
  %340 = load i32, i32* %13, align 4
  %341 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 1, i32 0
  %342 = load i32, i32* %341, align 4
  %343 = icmp slt i32 %340, %342
  br i1 %343, label %388, label %344

344:                                              ; preds = %339
  %345 = icmp sgt i32 %340, %342
  br i1 %345, label %346, label %366

346:                                              ; preds = %344
  %347 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 4
  %348 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 4, i32 0, i32 0, i32 1
  %349 = load i32, i32* %348, align 8
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %366, label %351

351:                                              ; preds = %346
  %352 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 4, i32 0, i32 0, i32 2
  %353 = load i32, i32* %352, align 4
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %356, label %355

355:                                              ; preds = %351
  store i32 0, i32* %352, align 4
  br label %356

356:                                              ; preds = %355, %351
  %357 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %347, i64 0, i32 0, i32 0, i32 0
  %358 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %357, align 8
  %359 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 4, i32 0, i32 1, i64 0
  %360 = ptrtoint i8* %359 to i64
  %361 = bitcast %"class.WTF::Vector.9"* %347 to i64*
  store atomic i64 %360, i64* %361 monotonic, align 8
  store i32 1, i32* %348, align 8
  %362 = bitcast i8* %359 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %363 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %358, %362
  br i1 %363, label %366, label %364, !prof !4

364:                                              ; preds = %356
  %365 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %347, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %365, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %358) #13
  br label %366

366:                                              ; preds = %364, %356, %346, %344
  %367 = load i32, i32* %13, align 4
  store i32 %367, i32* %341, align 4
  %368 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 4
  %369 = load i32, i32* %43, align 4
  %370 = load i32, i32* %19, align 4
  %371 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 4, i32 0, i32 0, i32 2
  %372 = load i32, i32* %371, align 4
  %373 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 4, i32 0, i32 0, i32 1
  %374 = load i32, i32* %373, align 8
  %375 = icmp eq i32 %372, %374
  br i1 %375, label %376, label %379, !prof !3

376:                                              ; preds = %366
  %377 = add i32 %372, 1
  call void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.9"* %368, i32 %377) #13
  %378 = load i32, i32* %371, align 4
  br label %379

379:                                              ; preds = %366, %376
  %380 = phi i32 [ %378, %376 ], [ %372, %366 ]
  %381 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %368, i64 0, i32 0, i32 0, i32 0
  %382 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %381, align 8
  %383 = zext i32 %380 to i64
  %384 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %382, i64 %383, i32 0, i32 0
  store i32 %369, i32* %384, align 4
  %385 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %382, i64 %383, i32 1, i32 0
  store i32 %370, i32* %385, align 4
  %386 = load i32, i32* %371, align 4
  %387 = add i32 %386, 1
  store i32 %387, i32* %371, align 4
  br label %388

388:                                              ; preds = %339, %379
  %389 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 6, i32 0
  %390 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %389, align 8
  %391 = icmp eq %"class.blink::NGShapeExclusions"* %390, null
  br i1 %391, label %557, label %392

392:                                              ; preds = %388
  %393 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %390, i64 0, i32 1
  %394 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %390, i64 0, i32 1, i32 0, i32 0, i32 2
  %395 = load i32, i32* %394, align 4
  %396 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %390, i64 0, i32 1, i32 0, i32 0, i32 1
  %397 = load i32, i32* %396, align 8
  %398 = icmp eq i32 %395, %397
  br i1 %398, label %399, label %438, !prof !3

399:                                              ; preds = %392
  %400 = add i32 %395, 1
  %401 = lshr i32 %395, 2
  %402 = add i32 %400, %401
  %403 = icmp ugt i32 %402, 4
  %404 = select i1 %403, i32 %402, i32 4
  %405 = icmp ugt i32 %404, %400
  %406 = select i1 %405, i32 %404, i32 %400
  %407 = icmp ult i32 %395, %406
  br i1 %407, label %408, label %438, !prof !4

408:                                              ; preds = %399
  %409 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %393, i64 0, i32 0, i32 0, i32 0
  %410 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %409, align 8
  %411 = icmp eq %class.scoped_refptr.1* %410, null
  %412 = zext i32 %406 to i64
  %413 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink11NGExclusionEEEEmm(i64 %412) #13
  %414 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %413, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink11NGExclusionEEEEPKcv, i64 0, i64 0)) #13
  br i1 %411, label %415, label %420

415:                                              ; preds = %408
  %416 = ptrtoint i8* %414 to i64
  %417 = bitcast %"class.WTF::Vector"* %393 to i64*
  store atomic i64 %416, i64* %417 monotonic, align 8
  %418 = lshr i64 %413, 3
  %419 = trunc i64 %418 to i32
  store i32 %419, i32* %396, align 8
  br label %438

420:                                              ; preds = %408
  %421 = lshr i64 %413, 3
  %422 = ptrtoint i8* %414 to i64
  %423 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %409, align 8
  %424 = icmp ne i8* %414, null
  %425 = icmp ne %class.scoped_refptr.1* %423, null
  %426 = and i1 %424, %425
  %427 = bitcast %class.scoped_refptr.1* %423 to i8*
  br i1 %426, label %428, label %434, !prof !4

428:                                              ; preds = %420
  %429 = load i32, i32* %394, align 4
  %430 = zext i32 %429 to i64
  %431 = shl nuw nsw i64 %430, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %414, i8* nonnull align 8 %427, i64 %431, i1 false) #13
  %432 = bitcast %"class.WTF::Vector"* %393 to i8**
  %433 = load i8*, i8** %432, align 8
  br label %434

434:                                              ; preds = %428, %420
  %435 = phi i8* [ %433, %428 ], [ %427, %420 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %435) #13
  %436 = bitcast %"class.WTF::Vector"* %393 to i64*
  store atomic i64 %422, i64* %436 monotonic, align 8
  %437 = trunc i64 %421 to i32
  store i32 %437, i32* %396, align 8
  br label %438

438:                                              ; preds = %434, %415, %399, %392
  %439 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %393, i64 0, i32 0, i32 0, i32 0
  %440 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %439, align 8
  %441 = load i32, i32* %394, align 4
  %442 = zext i32 %441 to i64
  %443 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %440, i64 %442, i32 0
  store %"struct.blink::NGExclusion"* %1, %"struct.blink::NGExclusion"** %443, align 8
  br i1 %72, label %445, label %444

444:                                              ; preds = %438
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %73) #13
  br label %445

445:                                              ; preds = %438, %444
  %446 = load i32, i32* %394, align 4
  %447 = add i32 %446, 1
  store i32 %447, i32* %394, align 4
  br label %557

448:                                              ; preds = %336
  %449 = load i32, i32* %15, align 4
  %450 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 2, i32 0
  %451 = load i32, i32* %450, align 4
  %452 = icmp sgt i32 %449, %451
  br i1 %452, label %497, label %453

453:                                              ; preds = %448
  %454 = icmp slt i32 %449, %451
  br i1 %454, label %455, label %475

455:                                              ; preds = %453
  %456 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 5
  %457 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 5, i32 0, i32 0, i32 1
  %458 = load i32, i32* %457, align 8
  %459 = icmp eq i32 %458, 0
  br i1 %459, label %475, label %460

460:                                              ; preds = %455
  %461 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 5, i32 0, i32 0, i32 2
  %462 = load i32, i32* %461, align 4
  %463 = icmp eq i32 %462, 0
  br i1 %463, label %465, label %464

464:                                              ; preds = %460
  store i32 0, i32* %461, align 4
  br label %465

465:                                              ; preds = %464, %460
  %466 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %456, i64 0, i32 0, i32 0, i32 0
  %467 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %466, align 8
  %468 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 5, i32 0, i32 1, i64 0
  %469 = ptrtoint i8* %468 to i64
  %470 = bitcast %"class.WTF::Vector.9"* %456 to i64*
  store atomic i64 %469, i64* %470 monotonic, align 8
  store i32 1, i32* %457, align 8
  %471 = bitcast i8* %468 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %472 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %467, %471
  br i1 %472, label %475, label %473, !prof !4

473:                                              ; preds = %465
  %474 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %456, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %474, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %467) #13
  br label %475

475:                                              ; preds = %473, %465, %455, %453
  %476 = load i32, i32* %15, align 4
  store i32 %476, i32* %450, align 8
  %477 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 5
  %478 = load i32, i32* %43, align 4
  %479 = load i32, i32* %19, align 4
  %480 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 5, i32 0, i32 0, i32 2
  %481 = load i32, i32* %480, align 4
  %482 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 5, i32 0, i32 0, i32 1
  %483 = load i32, i32* %482, align 8
  %484 = icmp eq i32 %481, %483
  br i1 %484, label %485, label %488, !prof !3

485:                                              ; preds = %475
  %486 = add i32 %481, 1
  call void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.9"* %477, i32 %486) #13
  %487 = load i32, i32* %480, align 4
  br label %488

488:                                              ; preds = %475, %485
  %489 = phi i32 [ %487, %485 ], [ %481, %475 ]
  %490 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %477, i64 0, i32 0, i32 0, i32 0
  %491 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %490, align 8
  %492 = zext i32 %489 to i64
  %493 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %491, i64 %492, i32 0, i32 0
  store i32 %478, i32* %493, align 4
  %494 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %491, i64 %492, i32 1, i32 0
  store i32 %479, i32* %494, align 4
  %495 = load i32, i32* %480, align 4
  %496 = add i32 %495, 1
  store i32 %496, i32* %480, align 4
  br label %497

497:                                              ; preds = %448, %488
  %498 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 6, i32 0
  %499 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %498, align 8
  %500 = icmp eq %"class.blink::NGShapeExclusions"* %499, null
  br i1 %500, label %557, label %501

501:                                              ; preds = %497
  %502 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %499, i64 0, i32 2
  %503 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %499, i64 0, i32 2, i32 0, i32 0, i32 2
  %504 = load i32, i32* %503, align 4
  %505 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %499, i64 0, i32 2, i32 0, i32 0, i32 1
  %506 = load i32, i32* %505, align 8
  %507 = icmp eq i32 %504, %506
  br i1 %507, label %508, label %547, !prof !3

508:                                              ; preds = %501
  %509 = add i32 %504, 1
  %510 = lshr i32 %504, 2
  %511 = add i32 %509, %510
  %512 = icmp ugt i32 %511, 4
  %513 = select i1 %512, i32 %511, i32 4
  %514 = icmp ugt i32 %513, %509
  %515 = select i1 %514, i32 %513, i32 %509
  %516 = icmp ult i32 %504, %515
  br i1 %516, label %517, label %547, !prof !4

517:                                              ; preds = %508
  %518 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %502, i64 0, i32 0, i32 0, i32 0
  %519 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %518, align 8
  %520 = icmp eq %class.scoped_refptr.1* %519, null
  %521 = zext i32 %515 to i64
  %522 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink11NGExclusionEEEEmm(i64 %521) #13
  %523 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %522, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink11NGExclusionEEEEPKcv, i64 0, i64 0)) #13
  br i1 %520, label %524, label %529

524:                                              ; preds = %517
  %525 = ptrtoint i8* %523 to i64
  %526 = bitcast %"class.WTF::Vector"* %502 to i64*
  store atomic i64 %525, i64* %526 monotonic, align 8
  %527 = lshr i64 %522, 3
  %528 = trunc i64 %527 to i32
  store i32 %528, i32* %505, align 8
  br label %547

529:                                              ; preds = %517
  %530 = lshr i64 %522, 3
  %531 = ptrtoint i8* %523 to i64
  %532 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %518, align 8
  %533 = icmp ne i8* %523, null
  %534 = icmp ne %class.scoped_refptr.1* %532, null
  %535 = and i1 %533, %534
  %536 = bitcast %class.scoped_refptr.1* %532 to i8*
  br i1 %535, label %537, label %543, !prof !4

537:                                              ; preds = %529
  %538 = load i32, i32* %503, align 4
  %539 = zext i32 %538 to i64
  %540 = shl nuw nsw i64 %539, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %523, i8* nonnull align 8 %536, i64 %540, i1 false) #13
  %541 = bitcast %"class.WTF::Vector"* %502 to i8**
  %542 = load i8*, i8** %541, align 8
  br label %543

543:                                              ; preds = %537, %529
  %544 = phi i8* [ %542, %537 ], [ %536, %529 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %544) #13
  %545 = bitcast %"class.WTF::Vector"* %502 to i64*
  store atomic i64 %531, i64* %545 monotonic, align 8
  %546 = trunc i64 %530 to i32
  store i32 %546, i32* %505, align 8
  br label %547

547:                                              ; preds = %543, %524, %508, %501
  %548 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %502, i64 0, i32 0, i32 0, i32 0
  %549 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %548, align 8
  %550 = load i32, i32* %503, align 4
  %551 = zext i32 %550 to i64
  %552 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %549, i64 %551, i32 0
  store %"struct.blink::NGExclusion"* %1, %"struct.blink::NGExclusion"** %552, align 8
  br i1 %72, label %554, label %553

553:                                              ; preds = %547
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %73) #13
  br label %554

554:                                              ; preds = %547, %553
  %555 = load i32, i32* %503, align 4
  %556 = add i32 %555, 1
  store i32 %556, i32* %503, align 4
  br label %557

557:                                              ; preds = %388, %497, %554, %445
  %558 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %74, align 8
  %559 = icmp eq %"struct.blink::NGExclusionShapeData"* %558, null
  br i1 %559, label %562, label %560

560:                                              ; preds = %557
  %561 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 7
  store i8 1, i8* %561, align 8
  br label %562

562:                                              ; preds = %557, %560
  %563 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 1, i32 0
  %564 = load i32, i32* %563, align 4
  %565 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %78, i64 0, i32 2, i32 0
  %566 = load i32, i32* %565, align 4
  %567 = icmp sgt i32 %564, %566
  %568 = icmp eq i32 %77, 0
  br i1 %568, label %582, label %569

569:                                              ; preds = %562
  %570 = add i32 %77, -1
  %571 = call dereferenceable(80) %"struct.blink::NGExclusionSpaceInternal::NGShelf"* @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"* %21, i32 %570) #13
  %572 = load i32, i32* %563, align 4
  %573 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %571, i64 0, i32 1, i32 0
  %574 = load i32, i32* %573, align 4
  %575 = icmp eq i32 %572, %574
  br i1 %575, label %576, label %582

576:                                              ; preds = %569
  %577 = call dereferenceable(80) %"struct.blink::NGExclusionSpaceInternal::NGShelf"* @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"* %21, i32 %570) #13
  %578 = load i32, i32* %565, align 4
  %579 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %577, i64 0, i32 2, i32 0
  %580 = load i32, i32* %579, align 4
  %581 = icmp eq i32 %578, %580
  br label %582

582:                                              ; preds = %562, %576, %569
  %583 = phi i1 [ false, %569 ], [ false, %562 ], [ %581, %576 ]
  %584 = or i1 %567, %583
  br i1 %584, label %585, label %587

585:                                              ; preds = %582
  call void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector.6"* %21, i32 %77)
  %586 = add i32 %77, -1
  br label %587

587:                                              ; preds = %585, %582, %333
  %588 = phi i32 [ %77, %333 ], [ %586, %585 ], [ %77, %582 ]
  %589 = load i8, i8* %26, align 8, !range !2
  %590 = icmp eq i8 %589, 0
  br i1 %123, label %591, label %860

591:                                              ; preds = %587
  br i1 %590, label %592, label %593, !prof !3

592:                                              ; preds = %591
  call void @llvm.trap() #13
  unreachable

593:                                              ; preds = %591
  %594 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %595 = load i32, i32* %594, align 8
  %596 = icmp eq i32 %20, %595
  br i1 %596, label %892, label %597

597:                                              ; preds = %593
  %598 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %598) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %598, i8 -86, i64 80, i1 false)
  %599 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %0, i64 0, i32 3
  %600 = load i8, i8* %599, align 4, !range !2
  %601 = icmp eq i8 %600, 0
  %602 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %12, i64 0, i32 0, i32 0
  store i32 %20, i32* %602, align 8
  %603 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %12, i64 0, i32 1, i32 0
  store i32 -2147483648, i32* %603, align 4
  %604 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %12, i64 0, i32 2, i32 0
  store i32 2147483647, i32* %604, align 8
  %605 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %12, i64 0, i32 4
  %606 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %12, i64 0, i32 4, i32 0, i32 1, i64 0
  %607 = bitcast %"class.WTF::Vector.9"* %605 to i8**
  store i8* %606, i8** %607, align 8
  %608 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %12, i64 0, i32 4, i32 0, i32 0, i32 1
  store i32 1, i32* %608, align 8
  %609 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %12, i64 0, i32 4, i32 0, i32 0, i32 2
  store i32 0, i32* %609, align 4
  %610 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %12, i64 0, i32 5
  %611 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %12, i64 0, i32 5, i32 0, i32 1, i64 0
  %612 = bitcast %"class.WTF::Vector.9"* %610 to i8**
  store i8* %611, i8** %612, align 8
  %613 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %12, i64 0, i32 5, i32 0, i32 0, i32 1
  store i32 1, i32* %613, align 8
  %614 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %12, i64 0, i32 5, i32 0, i32 0, i32 2
  store i32 0, i32* %614, align 4
  %615 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %12, i64 0, i32 6
  br i1 %601, label %621, label %616

616:                                              ; preds = %597
  %617 = call noalias i8* @malloc(i64 40) #13
  %618 = bitcast i8* %617 to i32*
  store i32 1, i32* %618, align 4
  %619 = getelementptr inbounds i8, i8* %617, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %619, i8 0, i64 32, i1 false) #13
  %620 = bitcast %class.scoped_refptr.14* %615 to i8**
  store i8* %617, i8** %620, align 8
  br label %623

621:                                              ; preds = %597
  %622 = getelementptr inbounds %class.scoped_refptr.14, %class.scoped_refptr.14* %615, i64 0, i32 0
  store %"class.blink::NGShapeExclusions"* null, %"class.blink::NGShapeExclusions"** %622, align 8
  br label %623

623:                                              ; preds = %621, %616
  %624 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %12, i64 0, i32 7
  store i8 0, i8* %624, align 8
  %625 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %605, i64 0, i32 0
  %626 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE16SwapVectorBufferERS5_NS_16VectorBufferBaseIS3_S4_E11OffsetRangeES9_(%"class.WTF::VectorBuffer.10"* %625, %"class.WTF::VectorBuffer.10"* dereferenceable(24) %626, i64 0, i64 0) #13
  %627 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %605, i64 0, i32 0, i32 0, i32 0
  %628 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %627, align 8
  %629 = load i32, i32* %609, align 4
  %630 = icmp eq i32 %629, 0
  br i1 %630, label %691, label %631

631:                                              ; preds = %623
  %632 = ptrtoint %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %628 to i64
  %633 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  %634 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %635 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  %636 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %637 = bitcast %"class.logging::CheckError"* %5 to i8*
  br label %638

638:                                              ; preds = %631, %683
  %639 = phi i64 [ %684, %683 ], [ %632, %631 ]
  %640 = phi i32 [ %685, %683 ], [ %629, %631 ]
  %641 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %686, %683 ], [ %628, %631 ]
  %642 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %687, %683 ], [ %628, %631 ]
  %643 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %642, i64 0, i32 1, i32 0
  %644 = load i32, i32* %643, align 4
  %645 = icmp sgt i32 %644, %20
  br i1 %645, label %681, label %646

646:                                              ; preds = %638
  %647 = ptrtoint %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %642 to i64
  %648 = sub i64 %647, %639
  %649 = lshr exact i64 %648, 3
  %650 = trunc i64 %649 to i32
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %633) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %634, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %635) #13
  %651 = icmp ugt i32 %640, %650
  br i1 %651, label %652, label %653

652:                                              ; preds = %646
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %635) #13
  store i8* null, i8** %634, align 8
  br label %660

653:                                              ; preds = %646
  %654 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %650) #13
  %655 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %640) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* %654, i8* %655) #13
  %656 = load i8*, i8** %636, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %635) #13
  store i8* %656, i8** %634, align 8
  %657 = icmp eq i8* %656, null
  br i1 %657, label %660, label %658

658:                                              ; preds = %653
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %637) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #13
  %659 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %637) #13
  br label %660

660:                                              ; preds = %658, %653, %652
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %633) #13
  %661 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %627, align 8
  %662 = and i64 %649, 4294967295
  %663 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %661, i64 %662
  %664 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %663, i64 1
  %665 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %663, null
  br i1 %665, label %676, label %666, !prof !3

666:                                              ; preds = %660
  %667 = load i32, i32* %609, align 4
  %668 = zext i32 %667 to i64
  %669 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %661, i64 %668
  %670 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %663 to i8*
  %671 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %664 to i8*
  %672 = ptrtoint %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %669 to i64
  %673 = ptrtoint %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %664 to i64
  %674 = sub i64 %672, %673
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %670, i8* nonnull align 4 %671, i64 %674, i1 false) #13
  %675 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %627, align 8
  br label %676

676:                                              ; preds = %660, %666
  %677 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %661, %660 ], [ %675, %666 ]
  %678 = load i32, i32* %609, align 4
  %679 = add i32 %678, -1
  store i32 %679, i32* %609, align 4
  %680 = ptrtoint %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %677 to i64
  br label %683

681:                                              ; preds = %638
  %682 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %642, i64 1
  br label %683

683:                                              ; preds = %681, %676
  %684 = phi i64 [ %680, %676 ], [ %639, %681 ]
  %685 = phi i32 [ %679, %676 ], [ %640, %681 ]
  %686 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %677, %676 ], [ %641, %681 ]
  %687 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %642, %676 ], [ %682, %681 ]
  %688 = zext i32 %685 to i64
  %689 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %686, i64 %688
  %690 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %687, %689
  br i1 %690, label %691, label %638

691:                                              ; preds = %683, %623
  %692 = load i8, i8* %26, align 8, !range !2
  %693 = icmp eq i8 %692, 0
  br i1 %693, label %694, label %695, !prof !3

694:                                              ; preds = %691
  call void @llvm.trap() #13
  unreachable

695:                                              ; preds = %691
  %696 = load i32, i32* %602, align 8
  %697 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %610, i64 0, i32 0
  %698 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE16SwapVectorBufferERS5_NS_16VectorBufferBaseIS3_S4_E11OffsetRangeES9_(%"class.WTF::VectorBuffer.10"* %697, %"class.WTF::VectorBuffer.10"* dereferenceable(24) %698, i64 0, i64 0) #13
  %699 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %610, i64 0, i32 0, i32 0, i32 0
  %700 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %699, align 8
  %701 = load i32, i32* %614, align 4
  %702 = icmp eq i32 %701, 0
  br i1 %702, label %763, label %703

703:                                              ; preds = %695
  %704 = ptrtoint %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %700 to i64
  %705 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  %706 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %707 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  %708 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %709 = bitcast %"class.logging::CheckError"* %8 to i8*
  br label %710

710:                                              ; preds = %703, %755
  %711 = phi i64 [ %756, %755 ], [ %704, %703 ]
  %712 = phi i32 [ %757, %755 ], [ %701, %703 ]
  %713 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %758, %755 ], [ %700, %703 ]
  %714 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %759, %755 ], [ %700, %703 ]
  %715 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %714, i64 0, i32 1, i32 0
  %716 = load i32, i32* %715, align 4
  %717 = icmp sgt i32 %716, %696
  br i1 %717, label %753, label %718

718:                                              ; preds = %710
  %719 = ptrtoint %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %714 to i64
  %720 = sub i64 %719, %711
  %721 = lshr exact i64 %720, 3
  %722 = trunc i64 %721 to i32
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %705) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %706, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %707) #13
  %723 = icmp ugt i32 %712, %722
  br i1 %723, label %724, label %725

724:                                              ; preds = %718
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %707) #13
  store i8* null, i8** %706, align 8
  br label %732

725:                                              ; preds = %718
  %726 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %722) #13
  %727 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %712) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* %726, i8* %727) #13
  %728 = load i8*, i8** %708, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %707) #13
  store i8* %728, i8** %706, align 8
  %729 = icmp eq i8* %728, null
  br i1 %729, label %732, label %730

730:                                              ; preds = %725
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %709) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %7) #13
  %731 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %709) #13
  br label %732

732:                                              ; preds = %730, %725, %724
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %705) #13
  %733 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %699, align 8
  %734 = and i64 %721, 4294967295
  %735 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %733, i64 %734
  %736 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %735, i64 1
  %737 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %735, null
  br i1 %737, label %748, label %738, !prof !3

738:                                              ; preds = %732
  %739 = load i32, i32* %614, align 4
  %740 = zext i32 %739 to i64
  %741 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %733, i64 %740
  %742 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %735 to i8*
  %743 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %736 to i8*
  %744 = ptrtoint %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %741 to i64
  %745 = ptrtoint %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %736 to i64
  %746 = sub i64 %744, %745
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %742, i8* nonnull align 4 %743, i64 %746, i1 false) #13
  %747 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %699, align 8
  br label %748

748:                                              ; preds = %732, %738
  %749 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %733, %732 ], [ %747, %738 ]
  %750 = load i32, i32* %614, align 4
  %751 = add i32 %750, -1
  store i32 %751, i32* %614, align 4
  %752 = ptrtoint %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %749 to i64
  br label %755

753:                                              ; preds = %710
  %754 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %714, i64 1
  br label %755

755:                                              ; preds = %753, %748
  %756 = phi i64 [ %752, %748 ], [ %711, %753 ]
  %757 = phi i32 [ %751, %748 ], [ %712, %753 ]
  %758 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %749, %748 ], [ %713, %753 ]
  %759 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %714, %748 ], [ %754, %753 ]
  %760 = zext i32 %757 to i64
  %761 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %758, i64 %760
  %762 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %759, %761
  br i1 %762, label %763, label %710

763:                                              ; preds = %755, %695
  %764 = load i8, i8* %26, align 8, !range !2
  %765 = icmp eq i8 %764, 0
  br i1 %765, label %766, label %767, !prof !3

766:                                              ; preds = %763
  call void @llvm.trap() #13
  unreachable

767:                                              ; preds = %763
  %768 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 6
  %769 = getelementptr inbounds %class.scoped_refptr.14, %class.scoped_refptr.14* %768, i64 0, i32 0
  %770 = bitcast %class.scoped_refptr.14* %768 to i64*
  %771 = load i64, i64* %770, align 8
  store %"class.blink::NGShapeExclusions"* null, %"class.blink::NGShapeExclusions"** %769, align 8
  %772 = bitcast %class.scoped_refptr.14* %615 to i64*
  %773 = getelementptr inbounds %class.scoped_refptr.14, %class.scoped_refptr.14* %615, i64 0, i32 0
  %774 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %773, align 8
  store i64 %771, i64* %772, align 8
  %775 = icmp eq %"class.blink::NGShapeExclusions"* %774, null
  br i1 %775, label %783, label %776

776:                                              ; preds = %767
  %777 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %774, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %777) #13
  %778 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %774, i64 0, i32 0, i32 0, i32 0, i32 0
  %779 = load i32, i32* %778, align 4
  %780 = icmp eq i32 %779, 0
  br i1 %780, label %781, label %783

781:                                              ; preds = %776
  call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %774) #13
  %782 = bitcast %"class.blink::NGShapeExclusions"* %774 to i8*
  call void @free(i8* %782) #13
  br label %783

783:                                              ; preds = %767, %776, %781
  %784 = load i8, i8* %26, align 8, !range !2
  %785 = icmp eq i8 %784, 0
  br i1 %785, label %786, label %787, !prof !3

786:                                              ; preds = %783
  call void @llvm.trap() #13
  unreachable

787:                                              ; preds = %783
  %788 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 7
  %789 = load i8, i8* %788, align 8, !range !2
  store i8 %789, i8* %624, align 8
  %790 = load i32, i32* %609, align 4
  %791 = icmp eq i32 %790, 0
  %792 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %793 = load i32, i32* %792, align 4
  %794 = select i1 %791, i32 -2147483648, i32 %793
  store i32 %794, i32* %603, align 4
  %795 = load i32, i32* %614, align 4
  %796 = icmp eq i32 %795, 0
  %797 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0
  %798 = load i32, i32* %797, align 8
  %799 = select i1 %796, i32 2147483647, i32 %798
  store i32 %799, i32* %604, align 8
  %800 = add i32 %588, 1
  call void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE6insertIRS3_EEvjOT_(%"class.WTF::Vector.6"* %21, i32 %800, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* nonnull dereferenceable(80) %12)
  %801 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %12, i64 0, i32 6, i32 0
  %802 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %801, align 8
  %803 = icmp eq %"class.blink::NGShapeExclusions"* %802, null
  br i1 %803, label %811, label %804

804:                                              ; preds = %787
  %805 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %802, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %805) #13
  %806 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %802, i64 0, i32 0, i32 0, i32 0, i32 0
  %807 = load i32, i32* %806, align 4
  %808 = icmp eq i32 %807, 0
  br i1 %808, label %809, label %811

809:                                              ; preds = %804
  call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %802) #13
  %810 = bitcast %"class.blink::NGShapeExclusions"* %802 to i8*
  call void @free(i8* %810) #13
  br label %811

811:                                              ; preds = %809, %804, %787
  %812 = load i32, i32* %614, align 4
  %813 = icmp eq i32 %812, 0
  br i1 %813, label %815, label %814, !prof !3

814:                                              ; preds = %811
  store i32 0, i32* %614, align 4
  br label %815

815:                                              ; preds = %814, %811
  %816 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %699, align 8
  %817 = bitcast i8* %611 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %818 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %816, %817
  br i1 %818, label %820, label %819, !prof !4

819:                                              ; preds = %815
  call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %697, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %816) #13
  br label %820

820:                                              ; preds = %819, %815
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %699, align 8
  %821 = load i32, i32* %609, align 4
  %822 = icmp eq i32 %821, 0
  br i1 %822, label %824, label %823, !prof !3

823:                                              ; preds = %820
  store i32 0, i32* %609, align 4
  br label %824

824:                                              ; preds = %823, %820
  %825 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %627, align 8
  %826 = bitcast i8* %606 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %827 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %825, %826
  br i1 %827, label %829, label %828, !prof !4

828:                                              ; preds = %824
  call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %625, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %825) #13
  br label %829

829:                                              ; preds = %824, %828
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %598) #13
  %830 = load i8, i8* %26, align 8, !range !2
  %831 = icmp eq i8 %830, 0
  br i1 %831, label %859, label %832

832:                                              ; preds = %829
  %833 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %29, align 8
  %834 = icmp eq %"class.blink::NGShapeExclusions"* %833, null
  br i1 %834, label %842, label %835

835:                                              ; preds = %832
  %836 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %833, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %836) #13
  %837 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %833, i64 0, i32 0, i32 0, i32 0, i32 0
  %838 = load i32, i32* %837, align 4
  %839 = icmp eq i32 %838, 0
  br i1 %839, label %840, label %842

840:                                              ; preds = %835
  call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %833) #13
  %841 = bitcast %"class.blink::NGShapeExclusions"* %833 to i8*
  call void @free(i8* %841) #13
  br label %842

842:                                              ; preds = %840, %835, %832
  %843 = load i32, i32* %31, align 4
  %844 = icmp eq i32 %843, 0
  br i1 %844, label %846, label %845, !prof !3

845:                                              ; preds = %842
  store i32 0, i32* %31, align 4
  br label %846

846:                                              ; preds = %845, %842
  %847 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %32, align 8
  %848 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %847, %34
  br i1 %848, label %850, label %849, !prof !4

849:                                              ; preds = %846
  call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %35, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %847) #13
  br label %850

850:                                              ; preds = %849, %846
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %32, align 8
  %851 = load i32, i32* %37, align 4
  %852 = icmp eq i32 %851, 0
  br i1 %852, label %854, label %853, !prof !3

853:                                              ; preds = %850
  store i32 0, i32* %37, align 4
  br label %854

854:                                              ; preds = %853, %850
  %855 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %38, align 8
  %856 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %855, %40
  br i1 %856, label %858, label %857, !prof !4

857:                                              ; preds = %854
  call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %41, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %855) #13
  br label %858

858:                                              ; preds = %854, %857
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %38, align 8
  store i8 0, i8* %26, align 8
  br label %859

859:                                              ; preds = %829, %858
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %26) #13
  br label %919

860:                                              ; preds = %587
  br i1 %590, label %888, label %861

861:                                              ; preds = %860
  %862 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %29, align 8
  %863 = icmp eq %"class.blink::NGShapeExclusions"* %862, null
  br i1 %863, label %871, label %864

864:                                              ; preds = %861
  %865 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %862, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %865) #13
  %866 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %862, i64 0, i32 0, i32 0, i32 0, i32 0
  %867 = load i32, i32* %866, align 4
  %868 = icmp eq i32 %867, 0
  br i1 %868, label %869, label %871

869:                                              ; preds = %864
  call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %862) #13
  %870 = bitcast %"class.blink::NGShapeExclusions"* %862 to i8*
  call void @free(i8* %870) #13
  br label %871

871:                                              ; preds = %869, %864, %861
  %872 = load i32, i32* %31, align 4
  %873 = icmp eq i32 %872, 0
  br i1 %873, label %875, label %874, !prof !3

874:                                              ; preds = %871
  store i32 0, i32* %31, align 4
  br label %875

875:                                              ; preds = %874, %871
  %876 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %32, align 8
  %877 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %876, %34
  br i1 %877, label %879, label %878, !prof !4

878:                                              ; preds = %875
  call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %35, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %876) #13
  br label %879

879:                                              ; preds = %878, %875
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %32, align 8
  %880 = load i32, i32* %37, align 4
  %881 = icmp eq i32 %880, 0
  br i1 %881, label %883, label %882, !prof !3

882:                                              ; preds = %879
  store i32 0, i32* %37, align 4
  br label %883

883:                                              ; preds = %882, %879
  %884 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %38, align 8
  %885 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %884, %40
  br i1 %885, label %887, label %886, !prof !4

886:                                              ; preds = %883
  call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %41, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %884) #13
  br label %887

887:                                              ; preds = %883, %886
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %38, align 8
  store i8 0, i8* %26, align 8
  br label %888

888:                                              ; preds = %860, %887
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %26) #13
  %889 = add i32 %588, 1
  %890 = load i32, i32* %22, align 4
  %891 = icmp ult i32 %889, %890
  br i1 %891, label %76, label %919

892:                                              ; preds = %593
  %893 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %29, align 8
  %894 = icmp eq %"class.blink::NGShapeExclusions"* %893, null
  br i1 %894, label %902, label %895

895:                                              ; preds = %892
  %896 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %893, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %896) #13
  %897 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %893, i64 0, i32 0, i32 0, i32 0, i32 0
  %898 = load i32, i32* %897, align 4
  %899 = icmp eq i32 %898, 0
  br i1 %899, label %900, label %902

900:                                              ; preds = %895
  call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %893) #13
  %901 = bitcast %"class.blink::NGShapeExclusions"* %893 to i8*
  call void @free(i8* %901) #13
  br label %902

902:                                              ; preds = %900, %895, %892
  %903 = load i32, i32* %31, align 4
  %904 = icmp eq i32 %903, 0
  br i1 %904, label %906, label %905, !prof !3

905:                                              ; preds = %902
  store i32 0, i32* %31, align 4
  br label %906

906:                                              ; preds = %905, %902
  %907 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %32, align 8
  %908 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %907, %34
  br i1 %908, label %910, label %909, !prof !4

909:                                              ; preds = %906
  call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %35, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %907) #13
  br label %910

910:                                              ; preds = %909, %906
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %32, align 8
  %911 = load i32, i32* %37, align 4
  %912 = icmp eq i32 %911, 0
  br i1 %912, label %914, label %913, !prof !3

913:                                              ; preds = %910
  store i32 0, i32* %37, align 4
  br label %914

914:                                              ; preds = %913, %910
  %915 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %38, align 8
  %916 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %915, %40
  br i1 %916, label %918, label %917, !prof !4

917:                                              ; preds = %914
  call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %41, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %915) #13
  br label %918

918:                                              ; preds = %917, %914
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %26) #13
  br label %919

919:                                              ; preds = %888, %18, %2, %859, %918
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGShapeExclusionsC2ERKS0_(%"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  store %class.scoped_refptr.1* null, %class.scoped_refptr.1** %7, align 8
  %8 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %2
  %11 = zext i32 %6 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink11NGExclusionEEEEmm(i64 %11) #13
  %13 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %12, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink11NGExclusionEEEEPKcv, i64 0, i64 0)) #13
  %14 = ptrtoint i8* %13 to i64
  %15 = bitcast %"class.WTF::Vector"* %4 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = lshr i64 %12, 3
  %17 = trunc i64 %16 to i32
  store i32 %17, i32* %8, align 8
  %18 = bitcast i8* %13 to %class.scoped_refptr.1*
  br label %19

19:                                               ; preds = %10, %2
  %20 = phi %class.scoped_refptr.1* [ null, %2 ], [ %18, %10 ]
  %21 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %22, i32* %23, align 4
  %24 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %25 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %24, align 8
  %26 = load i32, i32* %21, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %25, i64 %27
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %43, label %30

30:                                               ; preds = %19, %39
  %31 = phi %class.scoped_refptr.1* [ %40, %39 ], [ %20, %19 ]
  %32 = phi %class.scoped_refptr.1* [ %41, %39 ], [ %25, %19 ]
  %33 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %32, i64 0, i32 0
  %34 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %33, align 8
  %35 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %31, i64 0, i32 0
  store %"struct.blink::NGExclusion"* %34, %"struct.blink::NGExclusion"** %35, align 8
  %36 = icmp eq %"struct.blink::NGExclusion"* %34, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %34, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %38) #13
  br label %39

39:                                               ; preds = %37, %30
  %40 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %31, i64 1
  %41 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %32, i64 1
  %42 = icmp eq %class.scoped_refptr.1* %41, %28
  br i1 %42, label %43, label %30

43:                                               ; preds = %39, %19
  %44 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2
  %45 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %44, i64 0, i32 0, i32 0, i32 0
  store %class.scoped_refptr.1* null, %class.scoped_refptr.1** %47, align 8
  %48 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  store i32 0, i32* %48, align 8
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %43
  %51 = zext i32 %46 to i64
  %52 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink11NGExclusionEEEEmm(i64 %51) #13
  %53 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %52, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink11NGExclusionEEEEPKcv, i64 0, i64 0)) #13
  %54 = ptrtoint i8* %53 to i64
  %55 = bitcast %"class.WTF::Vector"* %44 to i64*
  store atomic i64 %54, i64* %55 monotonic, align 8
  %56 = lshr i64 %52, 3
  %57 = trunc i64 %56 to i32
  store i32 %57, i32* %48, align 8
  %58 = bitcast i8* %53 to %class.scoped_refptr.1*
  br label %59

59:                                               ; preds = %50, %43
  %60 = phi %class.scoped_refptr.1* [ null, %43 ], [ %58, %50 ]
  %61 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  store i32 %62, i32* %63, align 4
  %64 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %65 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %64, align 8
  %66 = load i32, i32* %61, align 4
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %65, i64 %67
  %69 = icmp eq i32 %66, 0
  br i1 %69, label %83, label %70

70:                                               ; preds = %59, %79
  %71 = phi %class.scoped_refptr.1* [ %80, %79 ], [ %60, %59 ]
  %72 = phi %class.scoped_refptr.1* [ %81, %79 ], [ %65, %59 ]
  %73 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %72, i64 0, i32 0
  %74 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %73, align 8
  %75 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %71, i64 0, i32 0
  store %"struct.blink::NGExclusion"* %74, %"struct.blink::NGExclusion"** %75, align 8
  %76 = icmp eq %"struct.blink::NGExclusion"* %74, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %78) #13
  br label %79

79:                                               ; preds = %77, %70
  %80 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %71, i64 1
  %81 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %72, i64 1
  %82 = icmp eq %class.scoped_refptr.1* %81, %68
  br i1 %82, label %83, label %70

83:                                               ; preds = %79, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24NGExclusionSpaceInternal12NGClosedAreaC2ENS_19NGLayoutOpportunityERKN3WTF6VectorINS0_11NGShelfEdgeELj1ENS3_18PartitionAllocatorEEES9_(%"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGLayoutOpportunity"* byval(%"struct.blink::NGLayoutOpportunity") align 8, %"class.WTF::Vector.9"* dereferenceable(24), %"class.WTF::Vector.9"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0 to i8*
  %6 = bitcast %"struct.blink::NGLayoutOpportunity"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* nonnull align 8 %6, i64 16, i1 false) #13
  %7 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %1, i64 0, i32 1, i32 0
  %8 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::NGShapeExclusions"* %8, %"class.blink::NGShapeExclusions"** %9, align 8
  %10 = icmp eq %"class.blink::NGShapeExclusions"* %8, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %8, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %12) #13
  br label %13

13:                                               ; preds = %4, %11
  %14 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %2, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 1, i32 0, i32 1, i64 0
  %18 = bitcast %"class.WTF::Vector.9"* %14 to i8**
  store i8* %17, i8** %18, align 8
  %19 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 1, i32* %19, align 8
  %20 = icmp ugt i32 %16, 1
  br i1 %20, label %21, label %29

21:                                               ; preds = %13
  %22 = zext i32 %16 to i64
  %23 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEmm(i64 %22) #13
  %24 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %23, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEPKcv, i64 0, i64 0)) #13
  %25 = ptrtoint i8* %24 to i64
  %26 = bitcast %"class.WTF::Vector.9"* %14 to i64*
  store atomic i64 %25, i64* %26 monotonic, align 8
  %27 = lshr i64 %23, 3
  %28 = trunc i64 %27 to i32
  store i32 %28, i32* %19, align 8
  br label %29

29:                                               ; preds = %21, %13
  %30 = phi i8* [ %17, %13 ], [ %24, %21 ]
  %31 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %2, i64 0, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %2, i64 0, i32 0, i32 0, i32 0
  %35 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %34, align 8
  %36 = icmp ne i8* %30, null
  %37 = icmp ne %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %35, null
  %38 = and i1 %36, %37
  br i1 %38, label %39, label %44, !prof !4

39:                                               ; preds = %29
  %40 = load i32, i32* %31, align 4
  %41 = zext i32 %40 to i64
  %42 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %35 to i8*
  %43 = shl nuw nsw i64 %41, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* nonnull align 4 %42, i64 %43, i1 false) #13
  br label %44

44:                                               ; preds = %29, %39
  %45 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 2
  %46 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %3, i64 0, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 2, i32 0, i32 1, i64 0
  %49 = bitcast %"class.WTF::Vector.9"* %45 to i8**
  store i8* %48, i8** %49, align 8
  %50 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  store i32 1, i32* %50, align 8
  %51 = icmp ugt i32 %47, 1
  br i1 %51, label %52, label %60

52:                                               ; preds = %44
  %53 = zext i32 %47 to i64
  %54 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEmm(i64 %53) #13
  %55 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %54, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEPKcv, i64 0, i64 0)) #13
  %56 = ptrtoint i8* %55 to i64
  %57 = bitcast %"class.WTF::Vector.9"* %45 to i64*
  store atomic i64 %56, i64* %57 monotonic, align 8
  %58 = lshr i64 %54, 3
  %59 = trunc i64 %58 to i32
  store i32 %59, i32* %50, align 8
  br label %60

60:                                               ; preds = %52, %44
  %61 = phi i8* [ %48, %44 ], [ %55, %52 ]
  %62 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %3, i64 0, i32 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  store i32 %63, i32* %64, align 4
  %65 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %3, i64 0, i32 0, i32 0, i32 0
  %66 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %65, align 8
  %67 = icmp ne i8* %61, null
  %68 = icmp ne %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %66, null
  %69 = and i1 %67, %68
  br i1 %69, label %70, label %75, !prof !4

70:                                               ; preds = %60
  %71 = load i32, i32* %62, align 4
  %72 = zext i32 %71 to i64
  %73 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %66 to i8*
  %74 = shl nuw nsw i64 %72, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %61, i8* nonnull align 4 %73, i64 %74, i1 false) #13
  br label %75

75:                                               ; preds = %60, %70
  br i1 %10, label %83, label %76

76:                                               ; preds = %75
  %77 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %8, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %77) #13
  %78 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %8) #13
  %82 = bitcast %"class.blink::NGShapeExclusions"* %8 to i8*
  tail call void @free(i8* %82) #13
  br label %83

83:                                               ; preds = %75, %76, %81
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector.6"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %24, i64 %25
  %27 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %24, i64 %25, i32 6, i32 0
  %28 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %27, align 8
  %29 = icmp eq %"class.blink::NGShapeExclusions"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %28, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %31) #13
  %32 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %28) #13
  %36 = bitcast %"class.blink::NGShapeExclusions"* %28 to i8*
  call void @free(i8* %36) #13
  br label %37

37:                                               ; preds = %35, %30, %22
  %38 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %24, i64 %25, i32 5
  %39 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %24, i64 %25, i32 5, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %43, label %42, !prof !3

42:                                               ; preds = %37
  store i32 0, i32* %39, align 4
  br label %43

43:                                               ; preds = %42, %37
  %44 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %38, i64 0, i32 0, i32 0, i32 0
  %45 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %44, align 8
  %46 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %24, i64 %25, i32 5, i32 0, i32 1, i64 0
  %47 = bitcast i8* %46 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %48 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %45, %47
  br i1 %48, label %51, label %49, !prof !4

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %38, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %50, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %45) #13
  br label %51

51:                                               ; preds = %49, %43
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %44, align 8
  %52 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %24, i64 %25, i32 4
  %53 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %24, i64 %25, i32 4, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %57, label %56, !prof !3

56:                                               ; preds = %51
  store i32 0, i32* %53, align 4
  br label %57

57:                                               ; preds = %56, %51
  %58 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %52, i64 0, i32 0, i32 0, i32 0
  %59 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %58, align 8
  %60 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %24, i64 %25, i32 4, i32 0, i32 1, i64 0
  %61 = bitcast i8* %60 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %62 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %59, %61
  br i1 %62, label %65, label %63, !prof !4

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %52, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %64, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %59) #13
  br label %65

65:                                               ; preds = %57, %63
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %58, align 8
  %66 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %26, i64 1
  %67 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %23, align 8
  %68 = load i32, i32* %8, align 4
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %67, i64 %69
  call void @_ZN3WTF11VectorMoverILb0EN5blink24NGExclusionSpaceInternal7NGShelfENS_18PartitionAllocatorEE15MoveOverlappingEPS3_S6_S6_b(%"struct.blink::NGExclusionSpaceInternal::NGShelf"* %66, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %70, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %26, i1 zeroext true) #13
  %71 = load i32, i32* %8, align 4
  %72 = add i32 %71, -1
  store i32 %72, i32* %8, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE6insertIRS3_EEvjOT_(%"class.WTF::Vector.6"*, i32, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* dereferenceable(80)) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %45

28:                                               ; preds = %23
  %29 = add i32 %24, 1
  %30 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %30, align 8
  %32 = icmp ugt %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %31, %2
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = zext i32 %24 to i64
  %35 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %31, i64 %34
  %36 = icmp ugt %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %35, %2
  br i1 %36, label %38, label %37

37:                                               ; preds = %33, %28
  call void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.6"* %0, i32 %29) #13
  br label %45

38:                                               ; preds = %33
  %39 = ptrtoint %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %2 to i64
  %40 = ptrtoint %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %31 to i64
  %41 = sub i64 %39, %40
  %42 = sdiv exact i64 %41, 80
  call void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.6"* %0, i32 %29) #13
  %43 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %30, align 8
  %44 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %43, i64 %42
  br label %45

45:                                               ; preds = %38, %37, %23
  %46 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelf"* [ %2, %23 ], [ %2, %37 ], [ %44, %38 ]
  %47 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %47, align 8
  %49 = zext i32 %1 to i64
  %50 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %48, i64 %49
  %51 = load i32, i32* %9, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %48, i64 %52
  %54 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %50, i64 1
  call void @_ZN3WTF11VectorMoverILb0EN5blink24NGExclusionSpaceInternal7NGShelfENS_18PartitionAllocatorEE15MoveOverlappingEPS3_S6_S6_b(%"struct.blink::NGExclusionSpaceInternal::NGShelf"* %50, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %53, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %54, i1 zeroext true) #13
  call void @_ZN5blink24NGExclusionSpaceInternal7NGShelfC2ERKS1_(%"struct.blink::NGExclusionSpaceInternal::NGShelf"* %50, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* dereferenceable(80) %46) #13
  %55 = load i32, i32* %9, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink24NGExclusionSpaceInternal15DerivedGeometry21FindLayoutOpportunityERKNS_11NGBfcOffsetENS_10LayoutUnitES5_(%"struct.blink::NGLayoutOpportunity"* noalias sret, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* nocapture readonly, %"struct.blink::NGBfcOffset"* dereferenceable(8), i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"struct.blink::NGLayoutOpportunity", align 8
  %11 = alloca %"struct.blink::NGLayoutOpportunity", align 8
  %12 = alloca %"class.blink::LayoutUnit", align 4
  %13 = alloca %"class.blink::LayoutUnit", align 4
  %14 = alloca %class.anon, align 8
  %15 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %12, i64 0, i32 0
  store i32 %3, i32* %15, align 4
  %16 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %13, i64 0, i32 0
  store i32 %4, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %0, i64 0, i32 1, i32 0
  %18 = bitcast %"struct.blink::NGLayoutOpportunity"* %0 to <2 x i64>*
  store <2 x i64> <i64 -9223372034707292160, i64 9223372034707292159>, <2 x i64>* %18, align 8
  store %"class.blink::NGShapeExclusions"* null, %"class.blink::NGShapeExclusions"** %17, align 8
  %19 = bitcast %class.anon* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #13
  %20 = getelementptr inbounds %class.anon, %class.anon* %14, i64 0, i32 0
  store %"struct.blink::NGLayoutOpportunity"* %0, %"struct.blink::NGLayoutOpportunity"** %20, align 8
  %21 = getelementptr inbounds %class.anon, %class.anon* %14, i64 0, i32 1
  store %"struct.blink::NGBfcOffset"* %2, %"struct.blink::NGBfcOffset"** %21, align 8
  %22 = getelementptr inbounds %class.anon, %class.anon* %14, i64 0, i32 2
  store %"class.blink::LayoutUnit"* %12, %"class.blink::LayoutUnit"** %22, align 8
  %23 = getelementptr inbounds %class.anon, %class.anon* %14, i64 0, i32 3
  store %"class.blink::LayoutUnit"* %13, %"class.blink::LayoutUnit"** %23, align 8
  %24 = bitcast %"struct.blink::NGLayoutOpportunity"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24)
  %25 = bitcast %"struct.blink::NGLayoutOpportunity"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25)
  %26 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %26, align 8
  %28 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %28, align 8
  %30 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %27, i64 %32
  %34 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %29, i64 %36
  %38 = or i32 %35, %31
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %280, label %40

40:                                               ; preds = %5
  %41 = icmp eq i32 %35, 0
  %42 = getelementptr inbounds %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset"* %2, i64 0, i32 0, i32 0
  %43 = icmp slt i32 %3, 0
  %44 = select i1 %43, i32 -2147483648, i32 2147483647
  %45 = getelementptr inbounds %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset"* %2, i64 0, i32 1, i32 0
  %46 = getelementptr inbounds %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset"* %2, i64 0, i32 1
  %47 = getelementptr inbounds %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset"* %2, i64 0, i32 0
  %48 = bitcast %"struct.blink::NGLayoutOpportunity"* %10 to i64*
  %49 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %10, i64 0, i32 0, i32 1
  %50 = bitcast %"struct.blink::NGBfcOffset"* %49 to i64*
  %51 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %10, i64 0, i32 1
  %52 = bitcast %class.scoped_refptr.22* %51 to i64*
  %53 = bitcast %"struct.blink::NGLayoutOpportunity"* %11 to i64*
  %54 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %11, i64 0, i32 0, i32 1
  %55 = bitcast %"struct.blink::NGBfcOffset"* %54 to i64*
  %56 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %11, i64 0, i32 1
  %57 = bitcast %class.scoped_refptr.22* %56 to i64*
  %58 = bitcast i32* %9 to i8*
  %59 = bitcast i32* %9 to %"class.blink::LayoutUnit"*
  %60 = bitcast i32* %6 to i8*
  %61 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %62 = bitcast i32* %7 to i8*
  %63 = bitcast i32* %8 to i8*
  %64 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  %65 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  br label %66

66:                                               ; preds = %274, %40
  %67 = phi i1 [ %41, %40 ], [ %278, %274 ]
  %68 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelf"* [ %27, %40 ], [ %276, %274 ]
  %69 = phi %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* [ %29, %40 ], [ %275, %274 ]
  br i1 %67, label %70, label %72

70:                                               ; preds = %66
  %71 = load i32, i32* %45, align 4
  br label %180

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %69, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = load i32, i32* %42, align 4
  %76 = icmp slt i32 %74, %75
  br i1 %76, label %90, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %75, i32 %3) #13
  %81 = extractvalue { i32, i1 } %80, 1
  %82 = extractvalue { i32, i1 } %80, 0
  %83 = select i1 %81, i32 %44, i32 %82
  %84 = icmp sgt i32 %79, %83
  br i1 %84, label %90, label %85

85:                                               ; preds = %77
  %86 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %69, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = load i32, i32* %45, align 4
  %89 = icmp sgt i32 %87, %88
  br i1 %89, label %92, label %90

90:                                               ; preds = %85, %77, %72
  %91 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %69, i64 1
  br label %274

92:                                               ; preds = %85
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %58)
  %93 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %69, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %94 = load i32, i32* %93, align 4
  store i32 %94, i32* %9, align 4
  %95 = icmp slt i32 %94, %88
  %96 = select i1 %95, %"class.blink::LayoutUnit"* %46, %"class.blink::LayoutUnit"* %59
  %97 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %96, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58)
  %99 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %68, i64 0, i32 0
  %100 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %68, i64 0, i32 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = icmp slt i32 %101, %88
  %103 = select i1 %102, %"class.blink::LayoutUnit"* %46, %"class.blink::LayoutUnit"* %99
  %104 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %103, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = icmp sgt i32 %98, %105
  br i1 %106, label %180, label %107

107:                                              ; preds = %92
  %108 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %69, i64 0, i32 1, i32 0, i32 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %128, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %69, i64 0, i32 1, i32 0, i32 0, i32 0
  %113 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %112, align 8
  %114 = zext i32 %109 to i64
  %115 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %113, i64 %114
  br label %116

116:                                              ; preds = %125, %111
  %117 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %126, %125 ], [ %113, %111 ]
  %118 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %117, i64 0, i32 1, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp sgt i32 %119, %98
  br i1 %120, label %121, label %125

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %117, i64 0, i32 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = icmp slt i32 %123, %87
  br i1 %124, label %128, label %125

125:                                              ; preds = %121, %116
  %126 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %117, i64 1
  %127 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %126, %115
  br i1 %127, label %178, label %116

128:                                              ; preds = %121, %107
  %129 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %69, i64 0, i32 2, i32 0, i32 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %149, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %69, i64 0, i32 2, i32 0, i32 0, i32 0
  %134 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %133, align 8
  %135 = zext i32 %130 to i64
  %136 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %134, i64 %135
  br label %137

137:                                              ; preds = %146, %132
  %138 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %147, %146 ], [ %134, %132 ]
  %139 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %138, i64 0, i32 1, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = icmp sgt i32 %140, %98
  br i1 %141, label %142, label %146

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %138, i64 0, i32 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = icmp slt i32 %144, %87
  br i1 %145, label %149, label %146

146:                                              ; preds = %142, %137
  %147 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %138, i64 1
  %148 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %147, %136
  br i1 %148, label %178, label %137

149:                                              ; preds = %142, %128
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %60)
  store i32 %79, i32* %6, align 4, !noalias !5
  %150 = icmp slt i32 %79, %75
  %151 = select i1 %150, %"class.blink::LayoutUnit"* %47, %"class.blink::LayoutUnit"* %61
  %152 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %151, i64 0, i32 0
  %153 = load i32, i32* %152, align 4, !noalias !5
  %154 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %69, i64 0, i32 0, i32 0, i32 0, i32 1
  %155 = select i1 %95, %"class.blink::LayoutUnit"* %46, %"class.blink::LayoutUnit"* %154
  %156 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %155, i64 0, i32 0
  %157 = load i32, i32* %156, align 4, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %60)
  %158 = icmp slt i32 %83, %74
  %159 = select i1 %158, i32 %83, i32 %74
  %160 = zext i32 %157 to i64
  %161 = shl nuw i64 %160, 32
  %162 = zext i32 %153 to i64
  %163 = or i64 %161, %162
  %164 = zext i32 %87 to i64
  %165 = shl nuw i64 %164, 32
  %166 = zext i32 %159 to i64
  %167 = or i64 %165, %166
  %168 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %69, i64 0, i32 0, i32 1, i32 0
  %169 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %168, align 8, !noalias !5
  %170 = icmp eq %"class.blink::NGShapeExclusions"* %169, null
  br i1 %170, label %175, label %171

171:                                              ; preds = %149
  %172 = call noalias i8* @malloc(i64 40) #13, !noalias !5
  %173 = bitcast i8* %172 to %"class.blink::NGShapeExclusions"*
  call void @_ZN5blink17NGShapeExclusionsC2ERKS0_(%"class.blink::NGShapeExclusions"* %173, %"class.blink::NGShapeExclusions"* nonnull dereferenceable(40) %169) #13, !noalias !5
  %174 = ptrtoint i8* %172 to i64
  br label %175

175:                                              ; preds = %171, %149
  %176 = phi i64 [ %174, %171 ], [ 0, %149 ]
  store i64 %163, i64* %48, align 8, !alias.scope !5
  store i64 %167, i64* %50, align 8, !alias.scope !5
  store i64 %176, i64* %52, align 8, !alias.scope !5
  %177 = call fastcc zeroext i1 @"_ZZNK5blink24NGExclusionSpaceInternal15DerivedGeometry21FindLayoutOpportunityERKNS_11NGBfcOffsetENS_10LayoutUnitES5_ENK3$_0clENS_19NGLayoutOpportunityE"(%class.anon* nonnull %14, %"struct.blink::NGLayoutOpportunity"* nonnull byval(%"struct.blink::NGLayoutOpportunity") align 8 %10) #13
  br i1 %177, label %280, label %178

178:                                              ; preds = %125, %146, %175
  %179 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %69, i64 1
  br label %274

180:                                              ; preds = %92, %70
  %181 = phi i32 [ %71, %70 ], [ %88, %92 ]
  %182 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %68, i64 0, i32 4, i32 0, i32 0, i32 2
  %183 = load i32, i32* %182, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %202, label %185

185:                                              ; preds = %180
  %186 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %68, i64 0, i32 4, i32 0, i32 0, i32 0
  %187 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %186, align 8
  %188 = zext i32 %183 to i64
  %189 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %187, i64 %188
  br label %190

190:                                              ; preds = %199, %185
  %191 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %200, %199 ], [ %187, %185 ]
  %192 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %191, i64 0, i32 1, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = icmp sgt i32 %193, %181
  br i1 %194, label %195, label %199

195:                                              ; preds = %190
  %196 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %191, i64 0, i32 0, i32 0
  %197 = load i32, i32* %196, align 4
  %198 = icmp eq i32 %197, 2147483647
  br i1 %198, label %199, label %202

199:                                              ; preds = %195, %190
  %200 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %191, i64 1
  %201 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %200, %189
  br i1 %201, label %272, label %190

202:                                              ; preds = %195, %180
  %203 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %68, i64 0, i32 5, i32 0, i32 0, i32 2
  %204 = load i32, i32* %203, align 4
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %223, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %68, i64 0, i32 5, i32 0, i32 0, i32 0
  %208 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %207, align 8
  %209 = zext i32 %204 to i64
  %210 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %208, i64 %209
  br label %211

211:                                              ; preds = %220, %206
  %212 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %221, %220 ], [ %208, %206 ]
  %213 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %212, i64 0, i32 1, i32 0
  %214 = load i32, i32* %213, align 4
  %215 = icmp sgt i32 %214, %181
  br i1 %215, label %216, label %220

216:                                              ; preds = %211
  %217 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %212, i64 0, i32 0, i32 0
  %218 = load i32, i32* %217, align 4
  %219 = icmp eq i32 %218, 2147483647
  br i1 %219, label %220, label %223

220:                                              ; preds = %216, %211
  %221 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %212, i64 1
  %222 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %221, %210
  br i1 %222, label %272, label %211

223:                                              ; preds = %216, %202
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62)
  %224 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %68, i64 0, i32 1
  %225 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %224, i64 0, i32 0
  %226 = load i32, i32* %225, align 4, !noalias !8
  %227 = load i32, i32* %42, align 4, !noalias !8
  %228 = icmp slt i32 %226, %227
  %229 = select i1 %228, %"class.blink::LayoutUnit"* %47, %"class.blink::LayoutUnit"* %224
  %230 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %229, i64 0, i32 0
  %231 = load i32, i32* %230, align 4, !noalias !8
  %232 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %68, i64 0, i32 0
  %233 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %68, i64 0, i32 0, i32 0
  %234 = load i32, i32* %233, align 4, !noalias !8
  %235 = icmp slt i32 %234, %181
  %236 = select i1 %235, %"class.blink::LayoutUnit"* %46, %"class.blink::LayoutUnit"* %232
  %237 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %236, i64 0, i32 0
  %238 = load i32, i32* %237, align 4, !noalias !8
  store i32 %231, i32* %7, align 4, !noalias !8
  %239 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %68, i64 0, i32 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %63)
  %240 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %227, i32 %3) #13
  %241 = extractvalue { i32, i1 } %240, 1
  %242 = extractvalue { i32, i1 } %240, 0
  %243 = select i1 %241, i32 %44, i32 %242, !prof !3
  store i32 %243, i32* %8, align 4, !noalias !8
  %244 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %239, i64 0, i32 0
  %245 = load i32, i32* %244, align 4, !noalias !8
  %246 = icmp slt i32 %243, %245
  %247 = select i1 %246, %"class.blink::LayoutUnit"* %64, %"class.blink::LayoutUnit"* %239
  %248 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %247, i64 0, i32 0
  %249 = load i32, i32* %248, align 4, !noalias !8
  %250 = icmp slt i32 %249, %231
  %251 = select i1 %250, %"class.blink::LayoutUnit"* %65, %"class.blink::LayoutUnit"* %247
  %252 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %251, i64 0, i32 0
  %253 = load i32, i32* %252, align 4, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %63)
  %254 = zext i32 %253 to i64
  %255 = or i64 %254, 9223372032559808512
  %256 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %68, i64 0, i32 7
  %257 = load i8, i8* %256, align 8, !range !2, !noalias !8
  %258 = icmp eq i8 %257, 0
  br i1 %258, label %265, label %259

259:                                              ; preds = %223
  %260 = call noalias i8* @malloc(i64 40) #13, !noalias !8
  %261 = bitcast i8* %260 to %"class.blink::NGShapeExclusions"*
  %262 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %68, i64 0, i32 6, i32 0
  %263 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %262, align 8, !noalias !8
  call void @_ZN5blink17NGShapeExclusionsC2ERKS0_(%"class.blink::NGShapeExclusions"* %261, %"class.blink::NGShapeExclusions"* dereferenceable(40) %263) #13, !noalias !8
  %264 = ptrtoint i8* %260 to i64
  br label %265

265:                                              ; preds = %259, %223
  %266 = phi i64 [ %264, %259 ], [ 0, %223 ]
  %267 = zext i32 %238 to i64
  %268 = shl nuw i64 %267, 32
  %269 = zext i32 %231 to i64
  %270 = or i64 %268, %269
  store i64 %270, i64* %53, align 8, !alias.scope !8
  store i64 %255, i64* %55, align 8, !alias.scope !8
  store i64 %266, i64* %57, align 8, !alias.scope !8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62)
  %271 = call fastcc zeroext i1 @"_ZZNK5blink24NGExclusionSpaceInternal15DerivedGeometry21FindLayoutOpportunityERKNS_11NGBfcOffsetENS_10LayoutUnitES5_ENK3$_0clENS_19NGLayoutOpportunityE"(%class.anon* nonnull %14, %"struct.blink::NGLayoutOpportunity"* nonnull byval(%"struct.blink::NGLayoutOpportunity") align 8 %11) #13
  br i1 %271, label %280, label %272

272:                                              ; preds = %199, %220, %265
  %273 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %68, i64 1
  br label %274

274:                                              ; preds = %272, %178, %90
  %275 = phi %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* [ %69, %272 ], [ %179, %178 ], [ %91, %90 ]
  %276 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelf"* [ %273, %272 ], [ %68, %178 ], [ %68, %90 ]
  %277 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %276, %33
  %278 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %275, %37
  %279 = and i1 %278, %277
  br i1 %279, label %280, label %66

280:                                              ; preds = %175, %265, %274, %5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink24NGExclusionSpaceInternal15DerivedGeometry22AllLayoutOpportunitiesERKNS_11NGBfcOffsetENS_10LayoutUnitE(%"class.WTF::Vector.28"* noalias sret, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* nocapture readonly, %"struct.blink::NGBfcOffset"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"struct.blink::NGLayoutOpportunity", align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"struct.blink::NGLayoutOpportunity", align 8
  %10 = alloca i32, align 4
  %11 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0, i32 1, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -86, i64 192, i1 false)
  %12 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0, i32 1, i64 0
  %13 = bitcast %"class.WTF::Vector.28"* %0 to i8**
  store i8* %12, i8** %13, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %14, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %16, align 8
  %18 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %18, align 8
  %20 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %17, i64 %22
  %24 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %19, i64 %26
  %28 = or i32 %25, %21
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %329, label %30

30:                                               ; preds = %4
  %31 = icmp eq i32 %25, 0
  %32 = getelementptr inbounds %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset"* %2, i64 0, i32 0, i32 0
  %33 = icmp slt i32 %3, 0
  %34 = select i1 %33, i32 -2147483648, i32 2147483647
  %35 = getelementptr inbounds %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset"* %2, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset"* %2, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset"* %2, i64 0, i32 0
  %38 = bitcast %"struct.blink::NGLayoutOpportunity"* %6 to i8*
  %39 = bitcast %"struct.blink::NGLayoutOpportunity"* %6 to i64*
  %40 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %6, i64 0, i32 0, i32 1
  %41 = bitcast %"struct.blink::NGBfcOffset"* %40 to i64*
  %42 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %6, i64 0, i32 1
  %43 = bitcast %class.scoped_refptr.22* %42 to i64*
  %44 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %6, i64 0, i32 1, i32 0
  %45 = bitcast %"struct.blink::NGLayoutOpportunity"* %9 to i8*
  %46 = bitcast %"struct.blink::NGLayoutOpportunity"* %9 to i64*
  %47 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %9, i64 0, i32 0, i32 1
  %48 = bitcast %"struct.blink::NGBfcOffset"* %47 to i64*
  %49 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %9, i64 0, i32 1
  %50 = bitcast %class.scoped_refptr.22* %49 to i64*
  %51 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %9, i64 0, i32 1, i32 0
  %52 = bitcast i32* %10 to i8*
  %53 = bitcast i32* %10 to %"class.blink::LayoutUnit"*
  %54 = bitcast i32* %5 to i8*
  %55 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %56 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast i32* %7 to i8*
  %58 = bitcast i32* %8 to i8*
  %59 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  %60 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  br label %61

61:                                               ; preds = %323, %30
  %62 = phi i1 [ %31, %30 ], [ %327, %323 ]
  %63 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelf"* [ %17, %30 ], [ %325, %323 ]
  %64 = phi %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* [ %19, %30 ], [ %324, %323 ]
  br i1 %62, label %65, label %67

65:                                               ; preds = %61
  %66 = load i32, i32* %35, align 4
  br label %202

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %64, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = load i32, i32* %32, align 4
  %71 = icmp slt i32 %69, %70
  br i1 %71, label %85, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %70, i32 %3) #13
  %76 = extractvalue { i32, i1 } %75, 1
  %77 = extractvalue { i32, i1 } %75, 0
  %78 = select i1 %76, i32 %34, i32 %77
  %79 = icmp sgt i32 %74, %78
  br i1 %79, label %85, label %80

80:                                               ; preds = %72
  %81 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %64, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = load i32, i32* %35, align 4
  %84 = icmp sgt i32 %82, %83
  br i1 %84, label %87, label %85

85:                                               ; preds = %80, %72, %67
  %86 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %64, i64 1
  br label %323

87:                                               ; preds = %80
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52)
  %88 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %64, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %89 = load i32, i32* %88, align 4
  store i32 %89, i32* %10, align 4
  %90 = icmp slt i32 %89, %83
  %91 = select i1 %90, %"class.blink::LayoutUnit"* %36, %"class.blink::LayoutUnit"* %53
  %92 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %91, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52)
  %94 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %63, i64 0, i32 0
  %95 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %63, i64 0, i32 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = icmp slt i32 %96, %83
  %98 = select i1 %97, %"class.blink::LayoutUnit"* %36, %"class.blink::LayoutUnit"* %94
  %99 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %98, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp sgt i32 %93, %100
  br i1 %101, label %202, label %102

102:                                              ; preds = %87
  %103 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %64, i64 0, i32 1, i32 0, i32 0, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %123, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %64, i64 0, i32 1, i32 0, i32 0, i32 0
  %108 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %107, align 8
  %109 = zext i32 %104 to i64
  %110 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %108, i64 %109
  br label %111

111:                                              ; preds = %120, %106
  %112 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %121, %120 ], [ %108, %106 ]
  %113 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %112, i64 0, i32 1, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = icmp sgt i32 %114, %93
  br i1 %115, label %116, label %120

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %112, i64 0, i32 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = icmp slt i32 %118, %82
  br i1 %119, label %123, label %120

120:                                              ; preds = %116, %111
  %121 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %112, i64 1
  %122 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %121, %110
  br i1 %122, label %200, label %111

123:                                              ; preds = %116, %102
  %124 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %64, i64 0, i32 2, i32 0, i32 0, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %144, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %64, i64 0, i32 2, i32 0, i32 0, i32 0
  %129 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %128, align 8
  %130 = zext i32 %125 to i64
  %131 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %129, i64 %130
  br label %132

132:                                              ; preds = %141, %127
  %133 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %142, %141 ], [ %129, %127 ]
  %134 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %133, i64 0, i32 1, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = icmp sgt i32 %135, %93
  br i1 %136, label %137, label %141

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %133, i64 0, i32 0, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = icmp slt i32 %139, %82
  br i1 %140, label %144, label %141

141:                                              ; preds = %137, %132
  %142 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %133, i64 1
  %143 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %142, %131
  br i1 %143, label %200, label %132

144:                                              ; preds = %137, %123
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54)
  store i32 %74, i32* %5, align 4, !noalias !11
  %145 = icmp slt i32 %74, %70
  %146 = select i1 %145, %"class.blink::LayoutUnit"* %37, %"class.blink::LayoutUnit"* %55
  %147 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %146, i64 0, i32 0
  %148 = load i32, i32* %147, align 4, !noalias !11
  %149 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %64, i64 0, i32 0, i32 0, i32 0, i32 1
  %150 = select i1 %90, %"class.blink::LayoutUnit"* %36, %"class.blink::LayoutUnit"* %149
  %151 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %150, i64 0, i32 0
  %152 = load i32, i32* %151, align 4, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54)
  %153 = icmp slt i32 %78, %69
  %154 = select i1 %153, i32 %78, i32 %69
  %155 = zext i32 %152 to i64
  %156 = shl nuw i64 %155, 32
  %157 = zext i32 %148 to i64
  %158 = or i64 %156, %157
  %159 = zext i32 %82 to i64
  %160 = shl nuw i64 %159, 32
  %161 = zext i32 %154 to i64
  %162 = or i64 %160, %161
  %163 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %64, i64 0, i32 0, i32 1, i32 0
  %164 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %163, align 8, !noalias !11
  %165 = icmp eq %"class.blink::NGShapeExclusions"* %164, null
  br i1 %165, label %170, label %166

166:                                              ; preds = %144
  %167 = call noalias i8* @malloc(i64 40) #13, !noalias !11
  %168 = bitcast i8* %167 to %"class.blink::NGShapeExclusions"*
  call void @_ZN5blink17NGShapeExclusionsC2ERKS0_(%"class.blink::NGShapeExclusions"* %168, %"class.blink::NGShapeExclusions"* nonnull dereferenceable(40) %164) #13, !noalias !11
  %169 = ptrtoint i8* %167 to i64
  br label %170

170:                                              ; preds = %166, %144
  %171 = phi i64 [ %169, %166 ], [ 0, %144 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #13
  store i64 %158, i64* %39, align 8
  store i64 %162, i64* %41, align 8
  store i64 %171, i64* %43, align 8
  %172 = load i32, i32* %15, align 4
  %173 = load i32, i32* %14, align 8
  %174 = icmp eq i32 %172, %173
  br i1 %174, label %188, label %175, !prof !3

175:                                              ; preds = %170
  %176 = load %"struct.blink::NGLayoutOpportunity"*, %"struct.blink::NGLayoutOpportunity"** %56, align 8
  %177 = zext i32 %172 to i64
  %178 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %176, i64 %177
  %179 = bitcast %"struct.blink::NGLayoutOpportunity"* %178 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %179, i8* nonnull align 8 %38, i64 16, i1 false) #13
  %180 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %44, align 8
  %181 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %176, i64 %177, i32 1, i32 0
  store %"class.blink::NGShapeExclusions"* %180, %"class.blink::NGShapeExclusions"** %181, align 8
  %182 = icmp eq %"class.blink::NGShapeExclusions"* %180, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %175
  %184 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %180, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %184) #13
  br label %185

185:                                              ; preds = %183, %175
  %186 = load i32, i32* %15, align 4
  %187 = add i32 %186, 1
  store i32 %187, i32* %15, align 4
  br label %189

188:                                              ; preds = %170
  call void @_ZN3WTF6VectorIN5blink19NGLayoutOpportunityELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIKS2_EEvOT_(%"class.WTF::Vector.28"* %0, %"struct.blink::NGLayoutOpportunity"* nonnull dereferenceable(24) %6) #13
  br label %189

189:                                              ; preds = %188, %185
  %190 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %44, align 8
  %191 = icmp eq %"class.blink::NGShapeExclusions"* %190, null
  br i1 %191, label %199, label %192

192:                                              ; preds = %189
  %193 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %190, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %193) #13
  %194 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %190, i64 0, i32 0, i32 0, i32 0, i32 0
  %195 = load i32, i32* %194, align 4
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %199

197:                                              ; preds = %192
  call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %190) #13
  %198 = bitcast %"class.blink::NGShapeExclusions"* %190 to i8*
  call void @free(i8* %198) #13
  br label %199

199:                                              ; preds = %197, %192, %189
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #13
  br label %200

200:                                              ; preds = %120, %141, %199
  %201 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %64, i64 1
  br label %323

202:                                              ; preds = %87, %65
  %203 = phi i32 [ %66, %65 ], [ %83, %87 ]
  %204 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %63, i64 0, i32 4, i32 0, i32 0, i32 2
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %224, label %207

207:                                              ; preds = %202
  %208 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %63, i64 0, i32 4, i32 0, i32 0, i32 0
  %209 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %208, align 8
  %210 = zext i32 %205 to i64
  %211 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %209, i64 %210
  br label %212

212:                                              ; preds = %221, %207
  %213 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %222, %221 ], [ %209, %207 ]
  %214 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %213, i64 0, i32 1, i32 0
  %215 = load i32, i32* %214, align 4
  %216 = icmp sgt i32 %215, %203
  br i1 %216, label %217, label %221

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %213, i64 0, i32 0, i32 0
  %219 = load i32, i32* %218, align 4
  %220 = icmp eq i32 %219, 2147483647
  br i1 %220, label %221, label %224

221:                                              ; preds = %217, %212
  %222 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %213, i64 1
  %223 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %222, %211
  br i1 %223, label %321, label %212

224:                                              ; preds = %217, %202
  %225 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %63, i64 0, i32 5, i32 0, i32 0, i32 2
  %226 = load i32, i32* %225, align 4
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %245, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %63, i64 0, i32 5, i32 0, i32 0, i32 0
  %230 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %229, align 8
  %231 = zext i32 %226 to i64
  %232 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %230, i64 %231
  br label %233

233:                                              ; preds = %242, %228
  %234 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %243, %242 ], [ %230, %228 ]
  %235 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %234, i64 0, i32 1, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = icmp sgt i32 %236, %203
  br i1 %237, label %238, label %242

238:                                              ; preds = %233
  %239 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %234, i64 0, i32 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 2147483647
  br i1 %241, label %242, label %245

242:                                              ; preds = %238, %233
  %243 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %234, i64 1
  %244 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %243, %232
  br i1 %244, label %321, label %233

245:                                              ; preds = %238, %224
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57)
  %246 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %63, i64 0, i32 1
  %247 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %246, i64 0, i32 0
  %248 = load i32, i32* %247, align 4, !noalias !14
  %249 = load i32, i32* %32, align 4, !noalias !14
  %250 = icmp slt i32 %248, %249
  %251 = select i1 %250, %"class.blink::LayoutUnit"* %37, %"class.blink::LayoutUnit"* %246
  %252 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %251, i64 0, i32 0
  %253 = load i32, i32* %252, align 4, !noalias !14
  %254 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %63, i64 0, i32 0
  %255 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %63, i64 0, i32 0, i32 0
  %256 = load i32, i32* %255, align 4, !noalias !14
  %257 = icmp slt i32 %256, %203
  %258 = select i1 %257, %"class.blink::LayoutUnit"* %36, %"class.blink::LayoutUnit"* %254
  %259 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %258, i64 0, i32 0
  %260 = load i32, i32* %259, align 4, !noalias !14
  store i32 %253, i32* %7, align 4, !noalias !14
  %261 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %63, i64 0, i32 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %58)
  %262 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %249, i32 %3) #13
  %263 = extractvalue { i32, i1 } %262, 1
  %264 = extractvalue { i32, i1 } %262, 0
  %265 = select i1 %263, i32 %34, i32 %264, !prof !3
  store i32 %265, i32* %8, align 4, !noalias !14
  %266 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %261, i64 0, i32 0
  %267 = load i32, i32* %266, align 4, !noalias !14
  %268 = icmp slt i32 %265, %267
  %269 = select i1 %268, %"class.blink::LayoutUnit"* %59, %"class.blink::LayoutUnit"* %261
  %270 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %269, i64 0, i32 0
  %271 = load i32, i32* %270, align 4, !noalias !14
  %272 = icmp slt i32 %271, %253
  %273 = select i1 %272, %"class.blink::LayoutUnit"* %60, %"class.blink::LayoutUnit"* %269
  %274 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %273, i64 0, i32 0
  %275 = load i32, i32* %274, align 4, !noalias !14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58)
  %276 = zext i32 %275 to i64
  %277 = or i64 %276, 9223372032559808512
  %278 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %63, i64 0, i32 7
  %279 = load i8, i8* %278, align 8, !range !2, !noalias !14
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %287, label %281

281:                                              ; preds = %245
  %282 = call noalias i8* @malloc(i64 40) #13, !noalias !14
  %283 = bitcast i8* %282 to %"class.blink::NGShapeExclusions"*
  %284 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %63, i64 0, i32 6, i32 0
  %285 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %284, align 8, !noalias !14
  call void @_ZN5blink17NGShapeExclusionsC2ERKS0_(%"class.blink::NGShapeExclusions"* %283, %"class.blink::NGShapeExclusions"* dereferenceable(40) %285) #13, !noalias !14
  %286 = ptrtoint i8* %282 to i64
  br label %287

287:                                              ; preds = %281, %245
  %288 = phi i64 [ %286, %281 ], [ 0, %245 ]
  %289 = zext i32 %260 to i64
  %290 = shl nuw i64 %289, 32
  %291 = zext i32 %253 to i64
  %292 = or i64 %290, %291
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #13
  store i64 %292, i64* %46, align 8
  store i64 %277, i64* %48, align 8
  store i64 %288, i64* %50, align 8
  %293 = load i32, i32* %15, align 4
  %294 = load i32, i32* %14, align 8
  %295 = icmp eq i32 %293, %294
  br i1 %295, label %309, label %296, !prof !3

296:                                              ; preds = %287
  %297 = load %"struct.blink::NGLayoutOpportunity"*, %"struct.blink::NGLayoutOpportunity"** %56, align 8
  %298 = zext i32 %293 to i64
  %299 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %297, i64 %298
  %300 = bitcast %"struct.blink::NGLayoutOpportunity"* %299 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %300, i8* nonnull align 8 %45, i64 16, i1 false) #13
  %301 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %51, align 8
  %302 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %297, i64 %298, i32 1, i32 0
  store %"class.blink::NGShapeExclusions"* %301, %"class.blink::NGShapeExclusions"** %302, align 8
  %303 = icmp eq %"class.blink::NGShapeExclusions"* %301, null
  br i1 %303, label %306, label %304

304:                                              ; preds = %296
  %305 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %301, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %305) #13
  br label %306

306:                                              ; preds = %304, %296
  %307 = load i32, i32* %15, align 4
  %308 = add i32 %307, 1
  store i32 %308, i32* %15, align 4
  br label %310

309:                                              ; preds = %287
  call void @_ZN3WTF6VectorIN5blink19NGLayoutOpportunityELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIKS2_EEvOT_(%"class.WTF::Vector.28"* %0, %"struct.blink::NGLayoutOpportunity"* nonnull dereferenceable(24) %9) #13
  br label %310

310:                                              ; preds = %309, %306
  %311 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %51, align 8
  %312 = icmp eq %"class.blink::NGShapeExclusions"* %311, null
  br i1 %312, label %320, label %313

313:                                              ; preds = %310
  %314 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %311, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %314) #13
  %315 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %311, i64 0, i32 0, i32 0, i32 0, i32 0
  %316 = load i32, i32* %315, align 4
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %320

318:                                              ; preds = %313
  call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %311) #13
  %319 = bitcast %"class.blink::NGShapeExclusions"* %311 to i8*
  call void @free(i8* %319) #13
  br label %320

320:                                              ; preds = %318, %313, %310
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #13
  br label %321

321:                                              ; preds = %221, %242, %320
  %322 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %63, i64 1
  br label %323

323:                                              ; preds = %321, %200, %85
  %324 = phi %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* [ %64, %321 ], [ %201, %200 ], [ %86, %85 ]
  %325 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelf"* [ %322, %321 ], [ %63, %200 ], [ %63, %85 ]
  %326 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %325, %23
  %327 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %324, %27
  %328 = and i1 %327, %326
  br i1 %328, label %329, label %61

329:                                              ; preds = %323, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(648) %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* @_ZNK5blink24NGExclusionSpaceInternal18GetDerivedGeometryENS_10LayoutUnitE(%"class.blink::NGExclusionSpaceInternal"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %4, align 8
  %6 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %5, i64 0, i32 2, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, %1
  br i1 %10, label %11, label %122

11:                                               ; preds = %7
  store %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* null, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %4, align 8
  %12 = bitcast %"class.std::__1::unique_ptr.3"* %3 to %"struct.std::__1::default_delete.26"*
  tail call void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.26"* %12, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* nonnull %5) #13
  %13 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %4, align 8
  %14 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %13, null
  br i1 %14, label %15, label %122

15:                                               ; preds = %11, %2
  %16 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 0, i32 0
  %17 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %16, align 8
  %18 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %17, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %18, align 8
  %20 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %19, i64 %22
  %24 = icmp eq i32 %21, 0
  br i1 %24, label %61, label %25

25:                                               ; preds = %15, %25
  %26 = phi i64 [ %39, %25 ], [ %22, %15 ]
  %27 = phi %class.scoped_refptr.1* [ %38, %25 ], [ %19, %15 ]
  %28 = lshr i64 %26, 1
  %29 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %27, i64 %28
  %30 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %29, i64 0, i32 0
  %31 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %30, align 8
  %32 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %31, i64 0, i32 1, i32 0, i32 1, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %33, %1
  %35 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %29, i64 1
  %36 = xor i64 %28, -1
  %37 = add i64 %26, %36
  %38 = select i1 %34, %class.scoped_refptr.1* %35, %class.scoped_refptr.1* %27
  %39 = select i1 %34, i64 %37, i64 %28
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %25

41:                                               ; preds = %25
  %42 = icmp eq %class.scoped_refptr.1* %38, %19
  br i1 %42, label %61, label %43

43:                                               ; preds = %41, %50
  %44 = phi %class.scoped_refptr.1* [ %45, %50 ], [ %38, %41 ]
  %45 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %44, i64 -1
  %46 = icmp eq %class.scoped_refptr.1* %45, %19
  br i1 %46, label %47, label %50

47:                                               ; preds = %43
  %48 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %19, i64 0, i32 0
  %49 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %48, align 8
  br label %56

50:                                               ; preds = %43
  %51 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %45, i64 0, i32 0
  %52 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %51, align 8
  %53 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %52, i64 0, i32 3
  %54 = load i8, i8* %53, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %43, label %56

56:                                               ; preds = %50, %47
  %57 = phi %"struct.blink::NGExclusion"* [ %49, %47 ], [ %52, %50 ]
  %58 = phi %class.scoped_refptr.1* [ %19, %47 ], [ %45, %50 ]
  %59 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %57, i64 0, i32 1, i32 0, i32 1, i32 0
  %60 = load i32, i32* %59, align 4
  br label %61

61:                                               ; preds = %15, %41, %56
  %62 = phi i32 [ %60, %56 ], [ -2147483648, %41 ], [ -2147483648, %15 ]
  %63 = phi %class.scoped_refptr.1* [ %58, %56 ], [ %19, %41 ], [ %19, %15 ]
  %64 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 5
  %65 = tail call noalias i8* @malloc(i64 648) #13
  %66 = load i8, i8* %64, align 1, !range !2
  %67 = icmp eq i8 %66, 0
  %68 = getelementptr inbounds i8, i8* %65, i64 16
  %69 = bitcast i8* %65 to i8**
  store i8* %68, i8** %69, align 8
  %70 = getelementptr inbounds i8, i8* %65, i64 8
  %71 = getelementptr inbounds i8, i8* %65, i64 12
  %72 = bitcast i8* %71 to i32*
  %73 = getelementptr inbounds i8, i8* %65, i64 336
  %74 = getelementptr inbounds i8, i8* %65, i64 352
  %75 = bitcast i8* %73 to i8**
  store i8* %74, i8** %75, align 8
  %76 = getelementptr inbounds i8, i8* %65, i64 344
  %77 = bitcast i8* %76 to i32*
  store i32 4, i32* %77, align 8
  %78 = getelementptr inbounds i8, i8* %65, i64 348
  %79 = bitcast i8* %78 to i32*
  store i32 0, i32* %79, align 4
  %80 = getelementptr inbounds i8, i8* %65, i64 640
  %81 = bitcast i8* %80 to i32*
  store i32 %62, i32* %81, align 8
  %82 = getelementptr inbounds i8, i8* %65, i64 644
  store i8 %66, i8* %82, align 4
  %83 = bitcast i8* %70 to <4 x i32>*
  store <4 x i32> <i32 4, i32 0, i32 -2147483648, i32 -2147483648>, <4 x i32>* %83, align 8
  %84 = getelementptr inbounds i8, i8* %65, i64 24
  %85 = bitcast i8* %84 to i32*
  store i32 2147483647, i32* %85, align 8
  %86 = getelementptr inbounds i8, i8* %65, i64 32
  %87 = getelementptr inbounds i8, i8* %65, i64 48
  %88 = bitcast i8* %86 to i8**
  store i8* %87, i8** %88, align 8
  %89 = getelementptr inbounds i8, i8* %65, i64 40
  %90 = bitcast i8* %89 to i32*
  store i32 1, i32* %90, align 8
  %91 = getelementptr inbounds i8, i8* %65, i64 44
  %92 = bitcast i8* %91 to i32*
  store i32 0, i32* %92, align 4
  %93 = getelementptr inbounds i8, i8* %65, i64 56
  %94 = getelementptr inbounds i8, i8* %65, i64 72
  %95 = bitcast i8* %93 to i8**
  store i8* %94, i8** %95, align 8
  %96 = getelementptr inbounds i8, i8* %65, i64 64
  %97 = bitcast i8* %96 to i32*
  store i32 1, i32* %97, align 8
  %98 = getelementptr inbounds i8, i8* %65, i64 68
  %99 = bitcast i8* %98 to i32*
  store i32 0, i32* %99, align 4
  %100 = getelementptr inbounds i8, i8* %65, i64 80
  br i1 %67, label %106, label %101

101:                                              ; preds = %61
  %102 = tail call noalias i8* @malloc(i64 40) #13
  %103 = bitcast i8* %102 to i32*
  store i32 1, i32* %103, align 4
  %104 = getelementptr inbounds i8, i8* %102, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 32, i1 false) #13
  %105 = bitcast i8* %100 to i8**
  store i8* %102, i8** %105, align 8
  br label %108

106:                                              ; preds = %61
  %107 = bitcast i8* %100 to %"class.blink::NGShapeExclusions"**
  store %"class.blink::NGShapeExclusions"* null, %"class.blink::NGShapeExclusions"** %107, align 8
  br label %108

108:                                              ; preds = %101, %106
  %109 = getelementptr inbounds i8, i8* %65, i64 88
  store i8 0, i8* %109, align 8
  store i32 1, i32* %72, align 4
  %110 = ptrtoint i8* %65 to i64
  %111 = bitcast %"class.std::__1::unique_ptr.3"* %3 to i64*
  store i64 %110, i64* %111, align 8
  %112 = icmp ult %class.scoped_refptr.1* %63, %23
  %113 = bitcast i8* %65 to %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*
  br i1 %112, label %114, label %122

114:                                              ; preds = %108, %114
  %115 = phi %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* [ %121, %114 ], [ %113, %108 ]
  %116 = phi %class.scoped_refptr.1* [ %119, %114 ], [ %63, %108 ]
  %117 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %116, i64 0, i32 0
  %118 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %117, align 8
  tail call void @_ZN5blink24NGExclusionSpaceInternal15DerivedGeometry3AddERKNS_11NGExclusionE(%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %115, %"struct.blink::NGExclusion"* dereferenceable(40) %118)
  %119 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %116, i64 1
  %120 = icmp ult %class.scoped_refptr.1* %119, %23
  %121 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %4, align 8
  br i1 %120, label %114, label %122

122:                                              ; preds = %114, %7, %108, %11
  %123 = phi %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* [ %113, %108 ], [ %13, %11 ], [ %5, %7 ], [ %121, %114 ]
  ret %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %123
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink24NGExclusionSpaceInternaleqERKS0_(%"class.blink::NGExclusionSpaceInternal"* nocapture readonly, %"class.blink::NGExclusionSpaceInternal"* nocapture readonly dereferenceable(40)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = or i32 %4, %6
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %2
  %10 = icmp eq i32 %4, %6
  br i1 %10, label %11, label %17

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 0, i32 0
  %13 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 0, i32 0
  %15 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %14, align 8
  %16 = icmp eq %"class.base::RefCountedData"* %13, %15
  br label %17

17:                                               ; preds = %2, %9, %11
  %18 = phi i1 [ false, %9 ], [ %16, %11 ], [ true, %2 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink11NGExclusionEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %3, align 8
  %5 = icmp eq %class.scoped_refptr.1* %4, null
  br i1 %5, label %42, label %6, !prof !4

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.1* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %40, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %4, i64 %12
  br label %14

14:                                               ; preds = %34, %11
  %15 = phi %class.scoped_refptr.1* [ %35, %34 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %15, i64 0, i32 0
  %17 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %16, align 8
  %18 = icmp eq %"struct.blink::NGExclusion"* %17, null
  br i1 %18, label %34, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #13
  %21 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 8
  %27 = bitcast %"class.base::RefCounted"* %26 to %"struct.blink::NGExclusionShapeData"**
  %28 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %27, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %27, align 8
  %29 = icmp eq %"struct.blink::NGExclusionShapeData"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = bitcast %"struct.blink::NGExclusionShapeData"* %28 to i8*
  tail call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %30, %24
  %33 = bitcast %"struct.blink::NGExclusion"* %17 to i8*
  tail call void @free(i8* %33) #13
  br label %34

34:                                               ; preds = %32, %19, %14
  %35 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %15, i64 1
  %36 = icmp eq %class.scoped_refptr.1* %35, %13
  br i1 %36, label %37, label %14

37:                                               ; preds = %34
  store i32 0, i32* %8, align 4
  %38 = bitcast %"class.WTF::Vector"* %2 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %6
  %41 = phi i8* [ %39, %37 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %41) #13
  store %class.scoped_refptr.1* null, %class.scoped_refptr.1** %3, align 8
  br label %42

42:                                               ; preds = %1, %40
  %43 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %44, align 8
  %46 = icmp eq %class.scoped_refptr.1* %45, null
  br i1 %46, label %83, label %47, !prof !4

47:                                               ; preds = %42
  %48 = bitcast %class.scoped_refptr.1* %45 to i8*
  %49 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %81, label %52, !prof !3

52:                                               ; preds = %47
  %53 = zext i32 %50 to i64
  %54 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %45, i64 %53
  br label %55

55:                                               ; preds = %75, %52
  %56 = phi %class.scoped_refptr.1* [ %76, %75 ], [ %45, %52 ]
  %57 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %56, i64 0, i32 0
  %58 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %57, align 8
  %59 = icmp eq %"struct.blink::NGExclusion"* %58, null
  br i1 %59, label %75, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #13
  %62 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %75

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %66, i64 8
  %68 = bitcast %"class.base::RefCounted"* %67 to %"struct.blink::NGExclusionShapeData"**
  %69 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %68, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %68, align 8
  %70 = icmp eq %"struct.blink::NGExclusionShapeData"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %65
  %72 = bitcast %"struct.blink::NGExclusionShapeData"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #12
  br label %73

73:                                               ; preds = %71, %65
  %74 = bitcast %"struct.blink::NGExclusion"* %58 to i8*
  tail call void @free(i8* %74) #13
  br label %75

75:                                               ; preds = %73, %60, %55
  %76 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %56, i64 1
  %77 = icmp eq %class.scoped_refptr.1* %76, %54
  br i1 %77, label %78, label %55

78:                                               ; preds = %75
  store i32 0, i32* %49, align 4
  %79 = bitcast %"class.WTF::Vector"* %43 to i8**
  %80 = load i8*, i8** %79, align 8
  br label %81

81:                                               ; preds = %78, %47
  %82 = phi i8* [ %80, %78 ], [ %48, %47 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %82) #13
  store %class.scoped_refptr.1* null, %class.scoped_refptr.1** %44, align 8
  br label %83

83:                                               ; preds = %42, %81
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(72) %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.19"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %24, i64 %25
  ret %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %26
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE6insertIRKS3_EEvjOT_(%"class.WTF::Vector.19"*, i32, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* dereferenceable(72)) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %45

28:                                               ; preds = %23
  %29 = add i32 %24, 1
  %30 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %30, align 8
  %32 = icmp ugt %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %31, %2
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = zext i32 %24 to i64
  %35 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %31, i64 %34
  %36 = icmp ugt %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %35, %2
  br i1 %36, label %38, label %37

37:                                               ; preds = %33, %28
  call void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.19"* %0, i32 %29) #13
  br label %45

38:                                               ; preds = %33
  %39 = ptrtoint %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %2 to i64
  %40 = ptrtoint %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %31 to i64
  %41 = sub i64 %39, %40
  %42 = sdiv exact i64 %41, 72
  call void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.19"* %0, i32 %29) #13
  %43 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %30, align 8
  %44 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %43, i64 %42
  br label %45

45:                                               ; preds = %38, %37, %23
  %46 = phi %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* [ %2, %23 ], [ %2, %37 ], [ %44, %38 ]
  %47 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %47, align 8
  %49 = zext i32 %1 to i64
  %50 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %48, i64 %49
  %51 = load i32, i32* %9, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %48, i64 %52
  %54 = icmp eq i32 %51, %1
  br i1 %54, label %107, label %55

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %50, i64 1
  %57 = ptrtoint %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %53 to i64
  %58 = ptrtoint %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %50 to i64
  %59 = sub i64 %57, %58
  %60 = sdiv exact i64 %59, 72
  %61 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %56, i64 %60
  br label %62

62:                                               ; preds = %105, %55
  %63 = phi %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* [ %66, %105 ], [ %61, %55 ]
  %64 = phi %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* [ %65, %105 ], [ %53, %55 ]
  %65 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %64, i64 -1
  %66 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %63, i64 -1
  call void @_ZN5blink24NGExclusionSpaceInternal12NGClosedAreaC2EOS1_(%"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %66, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* dereferenceable(72) %65) #13
  %67 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %64, i64 -1, i32 2
  %68 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %64, i64 -1, i32 2, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %72, label %71, !prof !3

71:                                               ; preds = %62
  store i32 0, i32* %68, align 4
  br label %72

72:                                               ; preds = %71, %62
  %73 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %67, i64 0, i32 0, i32 0, i32 0
  %74 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %73, align 8
  %75 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %64, i64 -1, i32 2, i32 0, i32 1, i64 0
  %76 = bitcast i8* %75 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %77 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %74, %76
  br i1 %77, label %80, label %78, !prof !4

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %67, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %79, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %74) #13
  br label %80

80:                                               ; preds = %78, %72
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %73, align 8
  %81 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %64, i64 -1, i32 1
  %82 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %64, i64 -1, i32 1, i32 0, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %86, label %85, !prof !3

85:                                               ; preds = %80
  store i32 0, i32* %82, align 4
  br label %86

86:                                               ; preds = %85, %80
  %87 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %81, i64 0, i32 0, i32 0, i32 0
  %88 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %87, align 8
  %89 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %64, i64 -1, i32 1, i32 0, i32 1, i64 0
  %90 = bitcast i8* %89 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %91 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %88, %90
  br i1 %91, label %94, label %92, !prof !4

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %81, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %93, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %88) #13
  br label %94

94:                                               ; preds = %92, %86
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %87, align 8
  %95 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %64, i64 -1, i32 0, i32 1, i32 0
  %96 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %95, align 8
  %97 = icmp eq %"class.blink::NGShapeExclusions"* %96, null
  br i1 %97, label %105, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %96, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %99) #13
  %100 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %98
  call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %96) #13
  %104 = bitcast %"class.blink::NGShapeExclusions"* %96 to i8*
  call void @free(i8* %104) #13
  br label %105

105:                                              ; preds = %94, %98, %103
  %106 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %65, %50
  br i1 %106, label %107, label %62

107:                                              ; preds = %105, %45
  call void @_ZN5blink24NGExclusionSpaceInternal12NGClosedAreaC2ERKS1_(%"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %50, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* dereferenceable(72) %46) #13
  %108 = load i32, i32* %9, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.19"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %31, align 8
  %33 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 4
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24NGExclusionSpaceInternal12NGClosedAreaEEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24NGExclusionSpaceInternal12NGClosedAreaEEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.19"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = udiv i64 %38, 72
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.19"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 4, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.19"* %0, i32 %27) #13
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.19"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %5, align 8
  %7 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*
  %10 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.19"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %145

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %6, i64 %19
  %21 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0
  %22 = ptrtoint i8* %8 to i64
  %23 = bitcast %"class.WTF::Vector.19"* %0 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %24, align 8
  %25 = icmp eq i32 %18, 0
  br i1 %25, label %71, label %26

26:                                               ; preds = %16, %67
  %27 = phi %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* [ %69, %67 ], [ %6, %16 ]
  %28 = phi %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* [ %68, %67 ], [ %9, %16 ]
  tail call void @_ZN5blink24NGExclusionSpaceInternal12NGClosedAreaC2EOS1_(%"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %28, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* dereferenceable(72) %27) #13
  %29 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %27, i64 0, i32 2
  %30 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %27, i64 0, i32 2, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %34, label %33, !prof !3

33:                                               ; preds = %26
  store i32 0, i32* %30, align 4
  br label %34

34:                                               ; preds = %33, %26
  %35 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %29, i64 0, i32 0, i32 0, i32 0
  %36 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %35, align 8
  %37 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %27, i64 0, i32 2, i32 0, i32 1, i64 0
  %38 = bitcast i8* %37 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %39 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %36, %38
  br i1 %39, label %42, label %40, !prof !4

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %29, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %41, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %36) #13
  br label %42

42:                                               ; preds = %40, %34
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %35, align 8
  %43 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %27, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %27, i64 0, i32 1, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47, !prof !3

47:                                               ; preds = %42
  store i32 0, i32* %44, align 4
  br label %48

48:                                               ; preds = %47, %42
  %49 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %43, i64 0, i32 0, i32 0, i32 0
  %50 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %49, align 8
  %51 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %27, i64 0, i32 1, i32 0, i32 1, i64 0
  %52 = bitcast i8* %51 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %53 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %50, %52
  br i1 %53, label %56, label %54, !prof !4

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %43, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %55, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %50) #13
  br label %56

56:                                               ; preds = %54, %48
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %49, align 8
  %57 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %27, i64 0, i32 0, i32 1, i32 0
  %58 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %57, align 8
  %59 = icmp eq %"class.blink::NGShapeExclusions"* %58, null
  br i1 %59, label %67, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %58, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #13
  %62 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %60
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %58) #13
  %66 = bitcast %"class.blink::NGShapeExclusions"* %58 to i8*
  tail call void @free(i8* %66) #13
  br label %67

67:                                               ; preds = %56, %60, %65
  %68 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %28, i64 1
  %69 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %27, i64 1
  %70 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %69, %20
  br i1 %70, label %71, label %26

71:                                               ; preds = %67, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.20"* %21, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %6) #13
  br label %145

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24NGExclusionSpaceInternal12NGClosedAreaEEEmm(i64 %73) #13
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24NGExclusionSpaceInternal12NGClosedAreaEEEPKcv, i64 0, i64 0)) #13
  %76 = udiv i64 %74, 72
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %134, label %85

85:                                               ; preds = %72
  %86 = bitcast i8* %75 to %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*
  br label %87

87:                                               ; preds = %85, %128
  %88 = phi %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* [ %130, %128 ], [ %79, %85 ]
  %89 = phi %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* [ %129, %128 ], [ %86, %85 ]
  tail call void @_ZN5blink24NGExclusionSpaceInternal12NGClosedAreaC2EOS1_(%"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %89, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* dereferenceable(72) %88) #13
  %90 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %88, i64 0, i32 2
  %91 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %88, i64 0, i32 2, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %95, label %94, !prof !3

94:                                               ; preds = %87
  store i32 0, i32* %91, align 4
  br label %95

95:                                               ; preds = %94, %87
  %96 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %90, i64 0, i32 0, i32 0, i32 0
  %97 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %96, align 8
  %98 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %88, i64 0, i32 2, i32 0, i32 1, i64 0
  %99 = bitcast i8* %98 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %100 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %97, %99
  br i1 %100, label %103, label %101, !prof !4

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %90, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %102, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %97) #13
  br label %103

103:                                              ; preds = %101, %95
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %96, align 8
  %104 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %88, i64 0, i32 1
  %105 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %88, i64 0, i32 1, i32 0, i32 0, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %109, label %108, !prof !3

108:                                              ; preds = %103
  store i32 0, i32* %105, align 4
  br label %109

109:                                              ; preds = %108, %103
  %110 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %104, i64 0, i32 0, i32 0, i32 0
  %111 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %110, align 8
  %112 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %88, i64 0, i32 1, i32 0, i32 1, i64 0
  %113 = bitcast i8* %112 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %114 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %111, %113
  br i1 %114, label %117, label %115, !prof !4

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %104, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %116, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %111) #13
  br label %117

117:                                              ; preds = %115, %109
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %110, align 8
  %118 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %88, i64 0, i32 0, i32 1, i32 0
  %119 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %118, align 8
  %120 = icmp eq %"class.blink::NGShapeExclusions"* %119, null
  br i1 %120, label %128, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %119, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %122) #13
  %123 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %119, i64 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %128

126:                                              ; preds = %121
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %119) #13
  %127 = bitcast %"class.blink::NGShapeExclusions"* %119 to i8*
  tail call void @free(i8* %127) #13
  br label %128

128:                                              ; preds = %117, %121, %126
  %129 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %89, i64 1
  %130 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %88, i64 1
  %131 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %130, %83
  br i1 %131, label %132, label %87

132:                                              ; preds = %128
  %133 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %78, align 8
  br label %134

134:                                              ; preds = %132, %72
  %135 = phi %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* [ %133, %132 ], [ %79, %72 ]
  %136 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 1, i64 0
  %137 = bitcast i8* %136 to %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*
  %138 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %135, %137
  br i1 %138, label %141, label %139, !prof !4

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.20"* %140, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %135) #13
  br label %141

141:                                              ; preds = %134, %139
  %142 = bitcast %"class.WTF::Vector.19"* %0 to i64*
  store atomic i64 %77, i64* %142 monotonic, align 8
  %143 = trunc i64 %76 to i32
  %144 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %143, i32* %144, align 8
  br label %145

145:                                              ; preds = %71, %141, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24NGExclusionSpaceInternal12NGClosedAreaEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 29797034
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 29797034) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = mul i64 %0, 72
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24NGExclusionSpaceInternal12NGClosedAreaC2EOS1_(%"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* dereferenceable(72)) unnamed_addr #3 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0 to i8*
  %4 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false) #13
  %5 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1, i64 0, i32 0, i32 1, i32 0
  %6 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %5, align 8
  %7 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::NGShapeExclusions"* %6, %"class.blink::NGShapeExclusions"** %7, align 8
  %8 = icmp eq %"class.blink::NGShapeExclusions"* %6, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %6, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %10) #13
  br label %11

11:                                               ; preds = %2, %9
  %12 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 1, i32 0, i32 1, i64 0
  %16 = bitcast %"class.WTF::Vector.9"* %12 to i8**
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 1, i32* %17, align 8
  %18 = icmp ugt i32 %14, 1
  br i1 %18, label %19, label %27

19:                                               ; preds = %11
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEmm(i64 %20) #13
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEPKcv, i64 0, i64 0)) #13
  %23 = ptrtoint i8* %22 to i64
  %24 = bitcast %"class.WTF::Vector.9"* %12 to i64*
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = lshr i64 %21, 3
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %17, align 8
  br label %27

27:                                               ; preds = %19, %11
  %28 = phi i8* [ %15, %11 ], [ %22, %19 ]
  %29 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %32, align 8
  %34 = icmp ne i8* %28, null
  %35 = icmp ne %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %33, null
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %42, !prof !4

37:                                               ; preds = %27
  %38 = load i32, i32* %29, align 4
  %39 = zext i32 %38 to i64
  %40 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %33 to i8*
  %41 = shl nuw nsw i64 %39, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %40, i64 %41, i1 false) #13
  br label %42

42:                                               ; preds = %27, %37
  %43 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 2
  %44 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 2, i32 0, i32 1, i64 0
  %47 = bitcast %"class.WTF::Vector.9"* %43 to i8**
  store i8* %46, i8** %47, align 8
  %48 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  store i32 1, i32* %48, align 8
  %49 = icmp ugt i32 %45, 1
  br i1 %49, label %50, label %58

50:                                               ; preds = %42
  %51 = zext i32 %45 to i64
  %52 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEmm(i64 %51) #13
  %53 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %52, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEPKcv, i64 0, i64 0)) #13
  %54 = ptrtoint i8* %53 to i64
  %55 = bitcast %"class.WTF::Vector.9"* %43 to i64*
  store atomic i64 %54, i64* %55 monotonic, align 8
  %56 = lshr i64 %52, 3
  %57 = trunc i64 %56 to i32
  store i32 %57, i32* %48, align 8
  br label %58

58:                                               ; preds = %50, %42
  %59 = phi i8* [ %46, %42 ], [ %53, %50 ]
  %60 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  store i32 %61, i32* %62, align 4
  %63 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %64 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %63, align 8
  %65 = icmp ne i8* %59, null
  %66 = icmp ne %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %64, null
  %67 = and i1 %65, %66
  br i1 %67, label %68, label %73, !prof !4

68:                                               ; preds = %58
  %69 = load i32, i32* %60, align 4
  %70 = zext i32 %69 to i64
  %71 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %64 to i8*
  %72 = shl nuw nsw i64 %70, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %59, i8* nonnull align 4 %71, i64 %72, i1 false) #13
  br label %73

73:                                               ; preds = %58, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.20"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24NGExclusionSpaceInternal12NGClosedAreaC2ERKS1_(%"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* dereferenceable(72)) unnamed_addr #3 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0 to i8*
  %4 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false) #13
  %5 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1, i64 0, i32 0, i32 1, i32 0
  %6 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %5, align 8
  %7 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::NGShapeExclusions"* %6, %"class.blink::NGShapeExclusions"** %7, align 8
  %8 = icmp eq %"class.blink::NGShapeExclusions"* %6, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %6, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %10) #13
  br label %11

11:                                               ; preds = %2, %9
  %12 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 1, i32 0, i32 1, i64 0
  %16 = bitcast %"class.WTF::Vector.9"* %12 to i8**
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 1, i32* %17, align 8
  %18 = icmp ugt i32 %14, 1
  br i1 %18, label %19, label %27

19:                                               ; preds = %11
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEmm(i64 %20) #13
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEPKcv, i64 0, i64 0)) #13
  %23 = ptrtoint i8* %22 to i64
  %24 = bitcast %"class.WTF::Vector.9"* %12 to i64*
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = lshr i64 %21, 3
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %17, align 8
  br label %27

27:                                               ; preds = %19, %11
  %28 = phi i8* [ %15, %11 ], [ %22, %19 ]
  %29 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %32, align 8
  %34 = icmp ne i8* %28, null
  %35 = icmp ne %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %33, null
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %42, !prof !4

37:                                               ; preds = %27
  %38 = load i32, i32* %29, align 4
  %39 = zext i32 %38 to i64
  %40 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %33 to i8*
  %41 = shl nuw nsw i64 %39, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %40, i64 %41, i1 false) #13
  br label %42

42:                                               ; preds = %27, %37
  %43 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 2
  %44 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 2, i32 0, i32 1, i64 0
  %47 = bitcast %"class.WTF::Vector.9"* %43 to i8**
  store i8* %46, i8** %47, align 8
  %48 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  store i32 1, i32* %48, align 8
  %49 = icmp ugt i32 %45, 1
  br i1 %49, label %50, label %58

50:                                               ; preds = %42
  %51 = zext i32 %45 to i64
  %52 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEmm(i64 %51) #13
  %53 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %52, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEPKcv, i64 0, i64 0)) #13
  %54 = ptrtoint i8* %53 to i64
  %55 = bitcast %"class.WTF::Vector.9"* %43 to i64*
  store atomic i64 %54, i64* %55 monotonic, align 8
  %56 = lshr i64 %52, 3
  %57 = trunc i64 %56 to i32
  store i32 %57, i32* %48, align 8
  br label %58

58:                                               ; preds = %50, %42
  %59 = phi i8* [ %46, %42 ], [ %53, %50 ]
  %60 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  store i32 %61, i32* %62, align 4
  %63 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %64 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %63, align 8
  %65 = icmp ne i8* %59, null
  %66 = icmp ne %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %64, null
  %67 = and i1 %65, %66
  br i1 %67, label %68, label %73, !prof !4

68:                                               ; preds = %58
  %69 = load i32, i32* %60, align 4
  %70 = zext i32 %69 to i64
  %71 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %64 to i8*
  %72 = shl nuw nsw i64 %70, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %59, i8* nonnull align 4 %71, i64 %72, i1 false) #13
  br label %73

73:                                               ; preds = %58, %68
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE16SwapVectorBufferERS5_NS_16VectorBufferBaseIS3_S4_E11OffsetRangeES9_(%"class.WTF::VectorBuffer.10"*, %"class.WTF::VectorBuffer.10"* dereferenceable(24), i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = trunc i64 %3 to i32
  %6 = lshr i64 %3, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.WTF::VectorBuffer.10", %"class.WTF::VectorBuffer.10"* %0, i64 0, i32 0, i32 0
  %9 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::VectorBuffer.10", %"class.WTF::VectorBuffer.10"* %0, i64 0, i32 1, i64 0
  %11 = bitcast i8* %10 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %12 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %9, %11
  %13 = ptrtoint %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %9 to i64
  br i1 %12, label %32, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::VectorBuffer.10", %"class.WTF::VectorBuffer.10"* %1, i64 0, i32 0, i32 0
  %16 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBuffer.10", %"class.WTF::VectorBuffer.10"* %1, i64 0, i32 1, i64 0
  %18 = bitcast i8* %17 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %19 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %16, %18
  br i1 %19, label %43, label %20

20:                                               ; preds = %14
  %21 = ptrtoint %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %16 to i64
  %22 = bitcast %"class.WTF::VectorBuffer.10"* %1 to i64*
  %23 = bitcast %"class.WTF::VectorBuffer.10"* %0 to i64*
  store atomic i64 %13, i64* %22 monotonic, align 8
  store atomic i64 %21, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::VectorBuffer.10", %"class.WTF::VectorBuffer.10"* %0, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::VectorBuffer.10", %"class.WTF::VectorBuffer.10"* %1, i64 0, i32 0, i32 1
  %26 = load i32, i32* %24, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %24, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBuffer.10", %"class.WTF::VectorBuffer.10"* %0, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::VectorBuffer.10", %"class.WTF::VectorBuffer.10"* %1, i64 0, i32 0, i32 2
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %28, align 4
  store i32 %30, i32* %29, align 4
  br label %172

32:                                               ; preds = %4
  %33 = lshr i64 %2, 32
  %34 = trunc i64 %33 to i32
  %35 = trunc i64 %2 to i32
  %36 = getelementptr inbounds %"class.WTF::VectorBuffer.10", %"class.WTF::VectorBuffer.10"* %0, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::VectorBuffer.10", %"class.WTF::VectorBuffer.10"* %1, i64 0, i32 1, i64 0
  %39 = bitcast i8* %38 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %40 = bitcast i8* %38 to i64*
  %41 = getelementptr inbounds %"class.WTF::VectorBuffer.10", %"class.WTF::VectorBuffer.10"* %1, i64 0, i32 0, i32 0
  %42 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %41, align 8
  br label %43

43:                                               ; preds = %14, %32
  %44 = phi i8* [ %17, %14 ], [ %38, %32 ]
  %45 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %18, %14 ], [ %39, %32 ]
  %46 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %16, %14 ], [ %42, %32 ]
  %47 = phi i32 [ 0, %14 ], [ %34, %32 ]
  %48 = phi i32 [ 0, %14 ], [ %35, %32 ]
  %49 = phi i32 [ 0, %14 ], [ %37, %32 ]
  %50 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ null, %14 ], [ %9, %32 ]
  %51 = phi i64* [ null, %14 ], [ %40, %32 ]
  %52 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ null, %14 ], [ %39, %32 ]
  %53 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %50 to i8*
  %54 = getelementptr inbounds %"class.WTF::VectorBuffer.10", %"class.WTF::VectorBuffer.10"* %1, i64 0, i32 1, i64 0
  %55 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %46, %45
  br i1 %55, label %56, label %60

56:                                               ; preds = %43
  %57 = getelementptr inbounds %"class.WTF::VectorBuffer.10", %"class.WTF::VectorBuffer.10"* %1, i64 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = bitcast i8* %10 to i64*
  br label %60

60:                                               ; preds = %43, %56
  %61 = phi i32 [ %7, %56 ], [ 0, %43 ]
  %62 = phi i32 [ %5, %56 ], [ 0, %43 ]
  %63 = phi i32 [ %58, %56 ], [ 0, %43 ]
  %64 = phi i8* [ %44, %56 ], [ null, %43 ]
  %65 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %45, %56 ], [ null, %43 ]
  %66 = phi i64* [ %59, %56 ], [ null, %43 ]
  %67 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %11, %56 ], [ null, %43 ]
  %68 = getelementptr inbounds %"class.WTF::VectorBuffer.10", %"class.WTF::VectorBuffer.10"* %0, i64 0, i32 0, i32 1
  %69 = getelementptr inbounds %"class.WTF::VectorBuffer.10", %"class.WTF::VectorBuffer.10"* %1, i64 0, i32 0, i32 1
  %70 = load i32, i32* %68, align 4
  %71 = load i32, i32* %69, align 4
  store i32 %71, i32* %68, align 4
  store i32 %70, i32* %69, align 4
  %72 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %50, null
  %73 = icmp ne %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %65, null
  %74 = or i1 %72, %73
  br i1 %74, label %80, label %75

75:                                               ; preds = %60
  %76 = bitcast %"class.WTF::VectorBuffer.10"* %1 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.WTF::VectorBuffer.10"* %0 to i64*
  store atomic i64 %77, i64* %78 monotonic, align 8
  %79 = ptrtoint i8* %54 to i64
  store atomic i64 %79, i64* %76 monotonic, align 8
  br label %94

80:                                               ; preds = %60
  %81 = and i1 %72, %73
  br i1 %81, label %82, label %94

82:                                               ; preds = %80
  %83 = bitcast %"class.WTF::VectorBuffer.10"* %0 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.WTF::VectorBuffer.10"* %1 to i64*
  store atomic i64 %84, i64* %85 monotonic, align 8
  %86 = ptrtoint i8* %10 to i64
  store atomic i64 %86, i64* %83 monotonic, align 8
  %87 = getelementptr inbounds %"class.WTF::VectorBuffer.10", %"class.WTF::VectorBuffer.10"* %0, i64 0, i32 0, i32 2
  %88 = getelementptr inbounds %"class.WTF::VectorBuffer.10", %"class.WTF::VectorBuffer.10"* %1, i64 0, i32 0, i32 2
  %89 = load i32, i32* %87, align 4
  %90 = load i32, i32* %88, align 4
  store i32 %90, i32* %87, align 4
  store i32 %89, i32* %88, align 4
  %91 = icmp ne i32 %62, %61
  %92 = icmp ne i32 %63, 0
  %93 = and i1 %73, %92
  br i1 %93, label %112, label %172

94:                                               ; preds = %80, %75
  %95 = getelementptr inbounds %"class.WTF::VectorBuffer.10", %"class.WTF::VectorBuffer.10"* %0, i64 0, i32 0, i32 2
  %96 = getelementptr inbounds %"class.WTF::VectorBuffer.10", %"class.WTF::VectorBuffer.10"* %1, i64 0, i32 0, i32 2
  %97 = load i32, i32* %95, align 4
  %98 = load i32, i32* %96, align 4
  store i32 %98, i32* %95, align 4
  store i32 %97, i32* %96, align 4
  %99 = icmp ne %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %50, null
  %100 = icmp ne i32 %62, %61
  %101 = icmp ne i32 %49, 0
  %102 = and i1 %99, %101
  %103 = icmp ne i32 %63, 0
  %104 = and i1 %73, %103
  br i1 %102, label %105, label %111

105:                                              ; preds = %94
  %106 = icmp eq i32 %48, %47
  %107 = icmp ne i32 %48, 0
  %108 = or i1 %106, %107
  %109 = icmp eq i32 %47, 0
  %110 = or i1 %109, %108
  br i1 %104, label %112, label %155

111:                                              ; preds = %94
  br i1 %104, label %112, label %172

112:                                              ; preds = %82, %105, %111
  %113 = phi i1 [ %110, %105 ], [ false, %111 ], [ false, %82 ]
  %114 = phi i1 [ %99, %105 ], [ %99, %111 ], [ false, %82 ]
  %115 = phi i1 [ %100, %105 ], [ %100, %111 ], [ %91, %82 ]
  %116 = icmp eq i32 %62, 0
  %117 = and i1 %116, %115
  %118 = icmp ne i32 %61, 0
  %119 = and i1 %118, %117
  %120 = xor i1 %113, true
  %121 = or i1 %119, %120
  %122 = xor i1 %119, true
  br i1 %121, label %155, label %123

123:                                              ; preds = %112
  %124 = load i8, i8* %53, align 1
  %125 = load i8, i8* %64, align 1
  store i8 %125, i8* %53, align 1
  store i8 %124, i8* %64, align 1
  %126 = getelementptr inbounds i8, i8* %53, i64 1
  %127 = getelementptr inbounds i8, i8* %64, i64 1
  %128 = load i8, i8* %126, align 1
  %129 = load i8, i8* %127, align 1
  store i8 %129, i8* %126, align 1
  store i8 %128, i8* %127, align 1
  %130 = getelementptr inbounds i8, i8* %53, i64 2
  %131 = getelementptr inbounds i8, i8* %64, i64 2
  %132 = load i8, i8* %130, align 1
  %133 = load i8, i8* %131, align 1
  store i8 %133, i8* %130, align 1
  store i8 %132, i8* %131, align 1
  %134 = getelementptr inbounds i8, i8* %53, i64 3
  %135 = getelementptr inbounds i8, i8* %64, i64 3
  %136 = load i8, i8* %134, align 1
  %137 = load i8, i8* %135, align 1
  store i8 %137, i8* %134, align 1
  store i8 %136, i8* %135, align 1
  %138 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge", %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %50, i64 0, i32 1
  %139 = bitcast %"class.blink::LayoutUnit"* %138 to i8*
  %140 = getelementptr inbounds i8, i8* %64, i64 4
  %141 = load i8, i8* %139, align 1
  %142 = load i8, i8* %140, align 1
  store i8 %142, i8* %139, align 1
  store i8 %141, i8* %140, align 1
  %143 = getelementptr inbounds i8, i8* %139, i64 1
  %144 = getelementptr inbounds i8, i8* %64, i64 5
  %145 = load i8, i8* %143, align 1
  %146 = load i8, i8* %144, align 1
  store i8 %146, i8* %143, align 1
  store i8 %145, i8* %144, align 1
  %147 = getelementptr inbounds i8, i8* %139, i64 2
  %148 = getelementptr inbounds i8, i8* %64, i64 6
  %149 = load i8, i8* %147, align 1
  %150 = load i8, i8* %148, align 1
  store i8 %150, i8* %147, align 1
  store i8 %149, i8* %148, align 1
  %151 = getelementptr inbounds i8, i8* %139, i64 3
  %152 = getelementptr inbounds i8, i8* %64, i64 7
  %153 = load i8, i8* %151, align 1
  %154 = load i8, i8* %152, align 1
  store i8 %154, i8* %151, align 1
  store i8 %153, i8* %152, align 1
  br label %172

155:                                              ; preds = %105, %112
  %156 = phi i1 [ %113, %112 ], [ %110, %105 ]
  %157 = phi i1 [ %114, %112 ], [ %99, %105 ]
  %158 = phi i1 [ %122, %112 ], [ false, %105 ]
  br i1 %156, label %159, label %165

159:                                              ; preds = %155
  %160 = icmp ne %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %52, null
  %161 = and i1 %157, %160
  br i1 %161, label %162, label %172, !prof !4

162:                                              ; preds = %159
  %163 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %50 to i64*
  %164 = load i64, i64* %163, align 4
  store i64 %164, i64* %51, align 4
  br label %172

165:                                              ; preds = %155
  %166 = icmp ne %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %67, null
  %167 = and i1 %73, %166
  %168 = and i1 %158, %167
  br i1 %168, label %169, label %172, !prof !17

169:                                              ; preds = %165
  %170 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %65 to i64*
  %171 = load i64, i64* %170, align 4
  store i64 %171, i64* %66, align 4
  br label %172

172:                                              ; preds = %111, %82, %123, %169, %162, %159, %165, %20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink19NGLayoutOpportunityELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.29"*, %"struct.blink::NGLayoutOpportunity"*) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast %"struct.blink::NGLayoutOpportunity"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.26"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, null
  br i1 %3, label %127, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %5, i64 0, i32 0, i32 0, i32 0
  br i1 %8, label %58, label %10, !prof !3

10:                                               ; preds = %4
  %11 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %12 = zext i32 %7 to i64
  %13 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %11, i64 %12
  br label %14

14:                                               ; preds = %54, %10
  %15 = phi %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* [ %55, %54 ], [ %11, %10 ]
  %16 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !3

20:                                               ; preds = %14
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %14
  %22 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %16, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %22, align 8
  %24 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2, i32 0, i32 1, i64 0
  %25 = bitcast i8* %24 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %26 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %23, %25
  br i1 %26, label %29, label %27, !prof !4

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %16, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %28, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %23) #13
  br label %29

29:                                               ; preds = %27, %21
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %22, align 8
  %30 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34, !prof !3

34:                                               ; preds = %29
  store i32 0, i32* %31, align 4
  br label %35

35:                                               ; preds = %34, %29
  %36 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %30, i64 0, i32 0, i32 0, i32 0
  %37 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %36, align 8
  %38 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1, i32 0, i32 1, i64 0
  %39 = bitcast i8* %38 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %40 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %37, %39
  br i1 %40, label %43, label %41, !prof !4

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %30, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %42, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %37) #13
  br label %43

43:                                               ; preds = %41, %35
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %36, align 8
  %44 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 0, i32 1, i32 0
  %45 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %44, align 8
  %46 = icmp eq %"class.blink::NGShapeExclusions"* %45, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #13
  %49 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %45) #13
  %53 = bitcast %"class.blink::NGShapeExclusions"* %45 to i8*
  tail call void @free(i8* %53) #13
  br label %54

54:                                               ; preds = %43, %47, %52
  %55 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 1
  %56 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %55, %13
  br i1 %56, label %57, label %14

57:                                               ; preds = %54
  store i32 0, i32* %6, align 4
  br label %58

58:                                               ; preds = %57, %4
  %59 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %60 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 1, i64 0
  %61 = bitcast i8* %60 to %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*
  %62 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %59, %61
  br i1 %62, label %65, label %63, !prof !4

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %5, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.20"* %64, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %59) #13
  br label %65

65:                                               ; preds = %63, %58
  store %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* null, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %66 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %68, label %118, label %70, !prof !3

70:                                               ; preds = %65
  %71 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %69, align 8
  %72 = zext i32 %67 to i64
  %73 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %71, i64 %72
  br label %74

74:                                               ; preds = %114, %70
  %75 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelf"* [ %115, %114 ], [ %71, %70 ]
  %76 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 6, i32 0
  %77 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %76, align 8
  %78 = icmp eq %"class.blink::NGShapeExclusions"* %77, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %77, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %80) #13
  %81 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %77) #13
  %85 = bitcast %"class.blink::NGShapeExclusions"* %77 to i8*
  tail call void @free(i8* %85) #13
  br label %86

86:                                               ; preds = %84, %79, %74
  %87 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5
  %88 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %92, label %91, !prof !3

91:                                               ; preds = %86
  store i32 0, i32* %88, align 4
  br label %92

92:                                               ; preds = %91, %86
  %93 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %87, i64 0, i32 0, i32 0, i32 0
  %94 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %93, align 8
  %95 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5, i32 0, i32 1, i64 0
  %96 = bitcast i8* %95 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %97 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %94, %96
  br i1 %97, label %100, label %98, !prof !4

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %87, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %99, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %94) #13
  br label %100

100:                                              ; preds = %98, %92
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %93, align 8
  %101 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4
  %102 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4, i32 0, i32 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %106, label %105, !prof !3

105:                                              ; preds = %100
  store i32 0, i32* %102, align 4
  br label %106

106:                                              ; preds = %105, %100
  %107 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %101, i64 0, i32 0, i32 0, i32 0
  %108 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %107, align 8
  %109 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4, i32 0, i32 1, i64 0
  %110 = bitcast i8* %109 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %111 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %108, %110
  br i1 %111, label %114, label %112, !prof !4

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %101, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %113, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %108) #13
  br label %114

114:                                              ; preds = %106, %112
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %107, align 8
  %115 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 1
  %116 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %115, %73
  br i1 %116, label %117, label %74

117:                                              ; preds = %114
  store i32 0, i32* %66, align 4
  br label %118

118:                                              ; preds = %117, %65
  %119 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %69, align 8
  %120 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 1, i64 0
  %121 = bitcast i8* %120 to %"struct.blink::NGExclusionSpaceInternal::NGShelf"*
  %122 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %119, %121
  br i1 %122, label %125, label %123, !prof !4

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.7"* %124, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %119) #13
  br label %125

125:                                              ; preds = %118, %123
  %126 = bitcast %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1 to i8*
  tail call void @free(i8* %126) #13
  br label %127

127:                                              ; preds = %125, %2
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.7"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"*) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.6"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %31, align 8
  %33 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 4
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24NGExclusionSpaceInternal7NGShelfEEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24NGExclusionSpaceInternal7NGShelfEEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = udiv i64 %38, 80
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 4, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.6"* %0, i32 %27) #13
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.6"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %25

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %5, align 8
  %7 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"struct.blink::NGExclusionSpaceInternal::NGShelf"*
  %10 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %51

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %6, i64 %19
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %23, align 8
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink24NGExclusionSpaceInternal7NGShelfENS_18PartitionAllocatorEE4MoveEPS3_S6_S6_b(%"struct.blink::NGExclusionSpaceInternal::NGShelf"* nonnull %6, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %20, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %9, i1 zeroext true) #13
  %24 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.7"* %24, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* nonnull %6) #13
  br label %51

25:                                               ; preds = %2
  %26 = zext i32 %1 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24NGExclusionSpaceInternal7NGShelfEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24NGExclusionSpaceInternal7NGShelfEEEPKcv, i64 0, i64 0)) #13
  %29 = udiv i64 %27, 80
  %30 = bitcast i8* %28 to %"struct.blink::NGExclusionSpaceInternal::NGShelf"*
  %31 = ptrtoint i8* %28 to i64
  %32 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %33 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %32, align 8
  %34 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %33, i64 %36
  %38 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %33, null
  %39 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 1, i64 0
  %40 = bitcast i8* %39 to %"struct.blink::NGExclusionSpaceInternal::NGShelf"*
  %41 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %33, %40
  %42 = or i1 %41, %38
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink24NGExclusionSpaceInternal7NGShelfENS_18PartitionAllocatorEE4MoveEPS3_S6_S6_b(%"struct.blink::NGExclusionSpaceInternal::NGShelf"* %33, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %37, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %30, i1 zeroext %42) #13
  %43 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %32, align 8
  %44 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %43, %40
  br i1 %44, label %47, label %45, !prof !4

45:                                               ; preds = %25
  %46 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.7"* %46, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %43) #13
  br label %47

47:                                               ; preds = %25, %45
  %48 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %31, i64* %48 monotonic, align 8
  %49 = trunc i64 %29 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %16, %47, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24NGExclusionSpaceInternal7NGShelfEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 26817331
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 26817331) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = mul i64 %0, 80
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11VectorMoverILb0EN5blink24NGExclusionSpaceInternal7NGShelfENS_18PartitionAllocatorEE4MoveEPS3_S6_S6_b(%"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %0, %1
  br i1 %5, label %76, label %6

6:                                                ; preds = %4, %72
  %7 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelf"* [ %74, %72 ], [ %0, %4 ]
  %8 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelf"* [ %73, %72 ], [ %2, %4 ]
  %9 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %8 to i8*
  %10 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 12, i1 false) #13
  %11 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %8, i64 0, i32 4
  %12 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %11, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %8, i64 0, i32 4, i32 0, i32 1, i64 0
  %14 = bitcast %"class.WTF::Vector.9"* %11 to i8**
  store i8* %13, i8** %14, align 8
  %15 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %8, i64 0, i32 4, i32 0, i32 0, i32 1
  store i32 1, i32* %15, align 8
  %16 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %8, i64 0, i32 4, i32 0, i32 0, i32 2
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %7, i64 0, i32 4, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE16SwapVectorBufferERS5_NS_16VectorBufferBaseIS3_S4_E11OffsetRangeES9_(%"class.WTF::VectorBuffer.10"* %12, %"class.WTF::VectorBuffer.10"* dereferenceable(24) %17, i64 0, i64 0) #13
  %18 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %8, i64 0, i32 5
  %19 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %18, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %8, i64 0, i32 5, i32 0, i32 1, i64 0
  %21 = bitcast %"class.WTF::Vector.9"* %18 to i8**
  store i8* %20, i8** %21, align 8
  %22 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %8, i64 0, i32 5, i32 0, i32 0, i32 1
  store i32 1, i32* %22, align 8
  %23 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %8, i64 0, i32 5, i32 0, i32 0, i32 2
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %7, i64 0, i32 5, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE16SwapVectorBufferERS5_NS_16VectorBufferBaseIS3_S4_E11OffsetRangeES9_(%"class.WTF::VectorBuffer.10"* %19, %"class.WTF::VectorBuffer.10"* dereferenceable(24) %24, i64 0, i64 0) #13
  %25 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %8, i64 0, i32 6
  %26 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %7, i64 0, i32 6
  %27 = getelementptr inbounds %class.scoped_refptr.14, %class.scoped_refptr.14* %26, i64 0, i32 0
  %28 = bitcast %class.scoped_refptr.14* %26 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %class.scoped_refptr.14* %25 to i64*
  store i64 %29, i64* %30, align 8
  store %"class.blink::NGShapeExclusions"* null, %"class.blink::NGShapeExclusions"** %27, align 8
  %31 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %8, i64 0, i32 7
  %32 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %7, i64 0, i32 7
  %33 = load i8, i8* %32, align 8, !range !2
  store i8 %33, i8* %31, align 8
  %34 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %7, i64 0, i32 6, i32 0
  %35 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %34, align 8
  %36 = icmp eq %"class.blink::NGShapeExclusions"* %35, null
  br i1 %36, label %44, label %37

37:                                               ; preds = %6
  %38 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %35, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %38) #13
  %39 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %37
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %35) #13
  %43 = bitcast %"class.blink::NGShapeExclusions"* %35 to i8*
  tail call void @free(i8* %43) #13
  br label %44

44:                                               ; preds = %42, %37, %6
  %45 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %7, i64 0, i32 5
  %46 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %7, i64 0, i32 5, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %50, label %49, !prof !3

49:                                               ; preds = %44
  store i32 0, i32* %46, align 4
  br label %50

50:                                               ; preds = %49, %44
  %51 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %45, i64 0, i32 0, i32 0, i32 0
  %52 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %51, align 8
  %53 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %7, i64 0, i32 5, i32 0, i32 1, i64 0
  %54 = bitcast i8* %53 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %55 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %52, %54
  br i1 %55, label %58, label %56, !prof !4

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %45, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %57, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %52) #13
  br label %58

58:                                               ; preds = %56, %50
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %51, align 8
  %59 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %7, i64 0, i32 4
  %60 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %7, i64 0, i32 4, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %64, label %63, !prof !3

63:                                               ; preds = %58
  store i32 0, i32* %60, align 4
  br label %64

64:                                               ; preds = %63, %58
  %65 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %59, i64 0, i32 0, i32 0, i32 0
  %66 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %7, i64 0, i32 4, i32 0, i32 1, i64 0
  %68 = bitcast i8* %67 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %69 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %66, %68
  br i1 %69, label %72, label %70, !prof !4

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %59, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %71, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %66) #13
  br label %72

72:                                               ; preds = %64, %70
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %65, align 8
  %73 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %8, i64 1
  %74 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %7, i64 1
  %75 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %74, %1
  br i1 %75, label %76, label %6

76:                                               ; preds = %72, %4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIKN5blink11NGExclusionEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS5_EEvOT_(%"class.WTF::Vector"*, %class.scoped_refptr.1* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %6, align 8
  %8 = icmp ugt %class.scoped_refptr.1* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %7, i64 %10
  %12 = icmp ugt %class.scoped_refptr.1* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %class.scoped_refptr.1* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink11NGExclusionEEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink11NGExclusionEEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %class.scoped_refptr.1*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %class.scoped_refptr.1* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %class.scoped_refptr.1* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %class.scoped_refptr.1*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %class.scoped_refptr.1* %1 to i64
  %56 = ptrtoint %class.scoped_refptr.1* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %class.scoped_refptr.1* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink11NGExclusionEEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink11NGExclusionEEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %class.scoped_refptr.1* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %class.scoped_refptr.1* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %class.scoped_refptr.1*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %class.scoped_refptr.1* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %class.scoped_refptr.1* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %class.scoped_refptr.1* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %101, i64 0, i32 0
  %105 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %104, align 8
  %106 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %100, i64 %103, i32 0
  store %"struct.blink::NGExclusion"* %105, %"struct.blink::NGExclusion"** %106, align 8
  %107 = icmp eq %"struct.blink::NGExclusion"* %105, null
  br i1 %107, label %110, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %105, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %109) #13
  br label %110

110:                                              ; preds = %99, %108
  %111 = load i32, i32* %3, align 4
  %112 = add i32 %111, 1
  store i32 %112, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(80) %"struct.blink::NGExclusionSpaceInternal::NGShelf"* @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.6"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %24, i64 %25
  ret %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24NGExclusionSpaceInternal7NGShelfC2ERKS1_(%"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %0, i64 0, i32 0, i32 0
  %5 = load i32, i32* %3, align 8
  store i32 %5, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %0, i64 0, i32 1, i32 0
  %8 = load i32, i32* %6, align 4
  store i32 %8, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %0, i64 0, i32 2, i32 0
  %11 = load i32, i32* %9, align 8
  store i32 %11, i32* %10, align 8
  %12 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1, i64 0, i32 4, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %0, i64 0, i32 4, i32 0, i32 1, i64 0
  %16 = bitcast %"class.WTF::Vector.9"* %12 to i8**
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  store i32 1, i32* %17, align 8
  %18 = icmp ugt i32 %14, 1
  br i1 %18, label %19, label %27

19:                                               ; preds = %2
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEmm(i64 %20) #13
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEPKcv, i64 0, i64 0)) #13
  %23 = ptrtoint i8* %22 to i64
  %24 = bitcast %"class.WTF::Vector.9"* %12 to i64*
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = lshr i64 %21, 3
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %17, align 8
  br label %27

27:                                               ; preds = %19, %2
  %28 = phi i8* [ %15, %2 ], [ %22, %19 ]
  %29 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1, i64 0, i32 4, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %33 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %32, align 8
  %34 = icmp ne i8* %28, null
  %35 = icmp ne %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %33, null
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %42, !prof !4

37:                                               ; preds = %27
  %38 = load i32, i32* %29, align 4
  %39 = zext i32 %38 to i64
  %40 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %33 to i8*
  %41 = shl nuw nsw i64 %39, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %40, i64 %41, i1 false) #13
  br label %42

42:                                               ; preds = %27, %37
  %43 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %0, i64 0, i32 5
  %44 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1, i64 0, i32 5, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %0, i64 0, i32 5, i32 0, i32 1, i64 0
  %47 = bitcast %"class.WTF::Vector.9"* %43 to i8**
  store i8* %46, i8** %47, align 8
  %48 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  store i32 1, i32* %48, align 8
  %49 = icmp ugt i32 %45, 1
  br i1 %49, label %50, label %58

50:                                               ; preds = %42
  %51 = zext i32 %45 to i64
  %52 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEmm(i64 %51) #13
  %53 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %52, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEPKcv, i64 0, i64 0)) #13
  %54 = ptrtoint i8* %53 to i64
  %55 = bitcast %"class.WTF::Vector.9"* %43 to i64*
  store atomic i64 %54, i64* %55 monotonic, align 8
  %56 = lshr i64 %52, 3
  %57 = trunc i64 %56 to i32
  store i32 %57, i32* %48, align 8
  br label %58

58:                                               ; preds = %50, %42
  %59 = phi i8* [ %46, %42 ], [ %53, %50 ]
  %60 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1, i64 0, i32 5, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  store i32 %61, i32* %62, align 4
  %63 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %64 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %63, align 8
  %65 = icmp ne i8* %59, null
  %66 = icmp ne %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %64, null
  %67 = and i1 %65, %66
  br i1 %67, label %68, label %73, !prof !4

68:                                               ; preds = %58
  %69 = load i32, i32* %60, align 4
  %70 = zext i32 %69 to i64
  %71 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %64 to i8*
  %72 = shl nuw nsw i64 %70, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %59, i8* nonnull align 4 %71, i64 %72, i1 false) #13
  br label %73

73:                                               ; preds = %58, %68
  %74 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %0, i64 0, i32 6
  %75 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1, i64 0, i32 6, i32 0
  %76 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %75, align 8
  %77 = icmp eq %"class.blink::NGShapeExclusions"* %76, null
  br i1 %77, label %82, label %78

78:                                               ; preds = %73
  %79 = tail call noalias i8* @malloc(i64 40) #13
  %80 = bitcast i8* %79 to %"class.blink::NGShapeExclusions"*
  tail call void @_ZN5blink17NGShapeExclusionsC2ERKS0_(%"class.blink::NGShapeExclusions"* %80, %"class.blink::NGShapeExclusions"* nonnull dereferenceable(40) %76)
  %81 = bitcast %class.scoped_refptr.14* %74 to i8**
  store i8* %79, i8** %81, align 8
  br label %84

82:                                               ; preds = %73
  %83 = getelementptr inbounds %class.scoped_refptr.14, %class.scoped_refptr.14* %74, i64 0, i32 0
  store %"class.blink::NGShapeExclusions"* null, %"class.blink::NGShapeExclusions"** %83, align 8
  br label %84

84:                                               ; preds = %82, %78
  %85 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %0, i64 0, i32 7
  %86 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1, i64 0, i32 7
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %85, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.9"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %5, align 8
  %7 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %10 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.9"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.9"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #13
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %19, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* nonnull %6) #13
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEmm(i64 %30) #13
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEPKcv, i64 0, i64 0)) #13
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #13
  %46 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %51 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %53, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %48) #13
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.9"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.9"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %31, align 8
  %33 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 1
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24NGExclusionSpaceInternal11NGShelfEdgeEEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.9"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.9"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 1, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.9"* %0, i32 %27) #13
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11VectorMoverILb0EN5blink24NGExclusionSpaceInternal7NGShelfENS_18PartitionAllocatorEE15MoveOverlappingEPS3_S6_S6_b(%"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp ugt %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %0, %2
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink24NGExclusionSpaceInternal7NGShelfENS_18PartitionAllocatorEE4MoveEPS3_S6_S6_b(%"struct.blink::NGExclusionSpaceInternal::NGShelf"* %0, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %2, i1 zeroext %3)
  br label %85

7:                                                ; preds = %4
  %8 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1, %0
  br i1 %8, label %85, label %9

9:                                                ; preds = %7
  %10 = ptrtoint %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1 to i64
  %11 = ptrtoint %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %0 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 80
  %14 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %2, i64 %13
  br label %15

15:                                               ; preds = %9, %83
  %16 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelf"* [ %19, %83 ], [ %14, %9 ]
  %17 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelf"* [ %18, %83 ], [ %1, %9 ]
  %18 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %17, i64 -1
  %19 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %16, i64 -1
  %20 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %19 to i8*
  %21 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 12, i1 false) #13
  %22 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %16, i64 -1, i32 4
  %23 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %22, i64 0, i32 0
  %24 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %16, i64 -1, i32 4, i32 0, i32 1, i64 0
  %25 = bitcast %"class.WTF::Vector.9"* %22 to i8**
  store i8* %24, i8** %25, align 8
  %26 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %16, i64 -1, i32 4, i32 0, i32 0, i32 1
  store i32 1, i32* %26, align 8
  %27 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %16, i64 -1, i32 4, i32 0, i32 0, i32 2
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %17, i64 -1, i32 4, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE16SwapVectorBufferERS5_NS_16VectorBufferBaseIS3_S4_E11OffsetRangeES9_(%"class.WTF::VectorBuffer.10"* %23, %"class.WTF::VectorBuffer.10"* dereferenceable(24) %28, i64 0, i64 0) #13
  %29 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %16, i64 -1, i32 5
  %30 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %29, i64 0, i32 0
  %31 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %16, i64 -1, i32 5, i32 0, i32 1, i64 0
  %32 = bitcast %"class.WTF::Vector.9"* %29 to i8**
  store i8* %31, i8** %32, align 8
  %33 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %16, i64 -1, i32 5, i32 0, i32 0, i32 1
  store i32 1, i32* %33, align 8
  %34 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %16, i64 -1, i32 5, i32 0, i32 0, i32 2
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %17, i64 -1, i32 5, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE16SwapVectorBufferERS5_NS_16VectorBufferBaseIS3_S4_E11OffsetRangeES9_(%"class.WTF::VectorBuffer.10"* %30, %"class.WTF::VectorBuffer.10"* dereferenceable(24) %35, i64 0, i64 0) #13
  %36 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %16, i64 -1, i32 6
  %37 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %17, i64 -1, i32 6
  %38 = getelementptr inbounds %class.scoped_refptr.14, %class.scoped_refptr.14* %37, i64 0, i32 0
  %39 = bitcast %class.scoped_refptr.14* %37 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %class.scoped_refptr.14* %36 to i64*
  store i64 %40, i64* %41, align 8
  store %"class.blink::NGShapeExclusions"* null, %"class.blink::NGShapeExclusions"** %38, align 8
  %42 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %16, i64 -1, i32 7
  %43 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %17, i64 -1, i32 7
  %44 = load i8, i8* %43, align 8, !range !2
  store i8 %44, i8* %42, align 8
  %45 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %17, i64 -1, i32 6, i32 0
  %46 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %45, align 8
  %47 = icmp eq %"class.blink::NGShapeExclusions"* %46, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %15
  %49 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %46, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %49) #13
  %50 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %46, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %46) #13
  %54 = bitcast %"class.blink::NGShapeExclusions"* %46 to i8*
  tail call void @free(i8* %54) #13
  br label %55

55:                                               ; preds = %53, %48, %15
  %56 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %17, i64 -1, i32 5
  %57 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %17, i64 -1, i32 5, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %61, label %60, !prof !3

60:                                               ; preds = %55
  store i32 0, i32* %57, align 4
  br label %61

61:                                               ; preds = %60, %55
  %62 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %56, i64 0, i32 0, i32 0, i32 0
  %63 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %62, align 8
  %64 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %17, i64 -1, i32 5, i32 0, i32 1, i64 0
  %65 = bitcast i8* %64 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %66 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %63, %65
  br i1 %66, label %69, label %67, !prof !4

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %56, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %68, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %63) #13
  br label %69

69:                                               ; preds = %67, %61
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %62, align 8
  %70 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %17, i64 -1, i32 4
  %71 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %17, i64 -1, i32 4, i32 0, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %75, label %74, !prof !3

74:                                               ; preds = %69
  store i32 0, i32* %71, align 4
  br label %75

75:                                               ; preds = %74, %69
  %76 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %70, i64 0, i32 0, i32 0, i32 0
  %77 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %76, align 8
  %78 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %17, i64 -1, i32 4, i32 0, i32 1, i64 0
  %79 = bitcast i8* %78 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %80 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %77, %79
  br i1 %80, label %83, label %81, !prof !4

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %70, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.10"* %82, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %77) #13
  br label %83

83:                                               ; preds = %75, %81
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %76, align 8
  %84 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %18, %0
  br i1 %84, label %85, label %15

85:                                               ; preds = %83, %7, %6
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZZNK5blink24NGExclusionSpaceInternal15DerivedGeometry21FindLayoutOpportunityERKNS_11NGBfcOffsetENS_10LayoutUnitES5_ENK3$_0clENS_19NGLayoutOpportunityE"(%class.anon* nocapture readonly, %"struct.blink::NGLayoutOpportunity"* nocapture readonly byval(%"struct.blink::NGLayoutOpportunity") align 8) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2147483647
  br i1 %5, label %32, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, -1
  %10 = select i1 %9, i32 -2147483648, i32 2147483647
  %11 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %4, i32 %8) #13
  %12 = extractvalue { i32, i1 } %11, 1
  %13 = extractvalue { i32, i1 } %11, 0
  %14 = select i1 %12, i32 %10, i32 %13
  %15 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 3
  %16 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %16, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %14, %18
  br i1 %19, label %20, label %32

20:                                               ; preds = %6
  %21 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 2
  %22 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %22, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %14, %24
  br i1 %25, label %26, label %56

26:                                               ; preds = %20
  %27 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 1
  %28 = load %"struct.blink::NGBfcOffset"*, %"struct.blink::NGBfcOffset"** %27, align 8
  %29 = getelementptr inbounds %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset"* %28, i64 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %8, %30
  br i1 %31, label %32, label %56

32:                                               ; preds = %6, %2, %26
  %33 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 0
  %34 = load %"struct.blink::NGLayoutOpportunity"*, %"struct.blink::NGLayoutOpportunity"** %33, align 8
  %35 = bitcast %"struct.blink::NGLayoutOpportunity"* %34 to i8*
  %36 = bitcast %"struct.blink::NGLayoutOpportunity"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* nonnull align 8 %36, i64 16, i1 false) #13
  %37 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %34, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %1, i64 0, i32 1, i32 0
  %39 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %38, align 8
  %40 = icmp eq %"class.blink::NGShapeExclusions"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %39, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %42) #13
  br label %43

43:                                               ; preds = %41, %32
  %44 = ptrtoint %"class.blink::NGShapeExclusions"* %39 to i64
  %45 = bitcast %class.scoped_refptr.22* %37 to i64*
  %46 = getelementptr inbounds %class.scoped_refptr.22, %class.scoped_refptr.22* %37, i64 0, i32 0
  %47 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %46, align 8
  store i64 %44, i64* %45, align 8
  %48 = icmp eq %"class.blink::NGShapeExclusions"* %47, null
  br i1 %48, label %56, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %47, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %50) #13
  %51 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %49
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %47) #13
  %55 = bitcast %"class.blink::NGShapeExclusions"* %47 to i8*
  tail call void @free(i8* %55) #13
  br label %56

56:                                               ; preds = %20, %54, %49, %43, %26
  %57 = phi i1 [ false, %26 ], [ true, %43 ], [ true, %49 ], [ true, %54 ], [ false, %20 ]
  %58 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %1, i64 0, i32 1, i32 0
  %59 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %58, align 8
  %60 = icmp eq %"class.blink::NGShapeExclusions"* %59, null
  br i1 %60, label %68, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %59, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %62) #13
  %63 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %59, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %61
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %59) #13
  %67 = bitcast %"class.blink::NGShapeExclusions"* %59 to i8*
  tail call void @free(i8* %67) #13
  br label %68

68:                                               ; preds = %56, %61, %66
  ret i1 %57
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #11

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #11

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink19NGLayoutOpportunityELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIKS2_EEvOT_(%"class.WTF::Vector.28"*, %"struct.blink::NGLayoutOpportunity"* dereferenceable(24)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::NGLayoutOpportunity"*, %"struct.blink::NGLayoutOpportunity"** %6, align 8
  %8 = icmp ugt %"struct.blink::NGLayoutOpportunity"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::NGLayoutOpportunity"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink19NGLayoutOpportunityELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.28"* %0, i32 %5) #13
  %14 = load %"struct.blink::NGLayoutOpportunity"*, %"struct.blink::NGLayoutOpportunity"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"struct.blink::NGLayoutOpportunity"* %1 to i64
  %17 = ptrtoint %"struct.blink::NGLayoutOpportunity"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 24
  tail call void @_ZN3WTF6VectorIN5blink19NGLayoutOpportunityELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.28"* %0, i32 %5) #13
  %20 = load %"struct.blink::NGLayoutOpportunity"*, %"struct.blink::NGLayoutOpportunity"** %6, align 8
  %21 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"struct.blink::NGLayoutOpportunity"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"struct.blink::NGLayoutOpportunity"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %23, i64 %26
  %28 = bitcast %"struct.blink::NGLayoutOpportunity"* %27 to i8*
  %29 = bitcast %"struct.blink::NGLayoutOpportunity"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false) #13
  %30 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %24, i64 0, i32 1, i32 0
  %31 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %30, align 8
  %32 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %23, i64 %26, i32 1, i32 0
  store %"class.blink::NGShapeExclusions"* %31, %"class.blink::NGShapeExclusions"** %32, align 8
  %33 = icmp eq %"class.blink::NGShapeExclusions"* %31, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %31, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %35) #13
  br label %36

36:                                               ; preds = %22, %34
  %37 = load i32, i32* %3, align 4
  %38 = add i32 %37, 1
  store i32 %38, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink19NGLayoutOpportunityELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.28"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"struct.blink::NGLayoutOpportunity"*, %"struct.blink::NGLayoutOpportunity"** %31, align 8
  %33 = icmp eq %"struct.blink::NGLayoutOpportunity"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGLayoutOpportunityEEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19NGLayoutOpportunityEEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.28"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = udiv i64 %38, 24
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.28"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink19NGLayoutOpportunityELj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.28"* %0, i32 %27) #13
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink19NGLayoutOpportunityELj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.28"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %41

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::NGLayoutOpportunity"*, %"struct.blink::NGLayoutOpportunity"** %5, align 8
  %7 = icmp eq %"struct.blink::NGLayoutOpportunity"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"struct.blink::NGLayoutOpportunity"*
  %10 = icmp eq %"struct.blink::NGLayoutOpportunity"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.28"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %83

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %6, i64 %19
  %21 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0
  %22 = ptrtoint i8* %8 to i64
  %23 = bitcast %"class.WTF::Vector.28"* %0 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %24, align 8
  %25 = icmp eq i32 %18, 0
  br i1 %25, label %40, label %26

26:                                               ; preds = %16, %26
  %27 = phi %"struct.blink::NGLayoutOpportunity"* [ %38, %26 ], [ %6, %16 ]
  %28 = phi %"struct.blink::NGLayoutOpportunity"* [ %37, %26 ], [ %9, %16 ]
  %29 = bitcast %"struct.blink::NGLayoutOpportunity"* %28 to i8*
  %30 = bitcast %"struct.blink::NGLayoutOpportunity"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 16, i1 false) #13
  %31 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %28, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %27, i64 0, i32 1
  %33 = getelementptr inbounds %class.scoped_refptr.22, %class.scoped_refptr.22* %32, i64 0, i32 0
  %34 = bitcast %class.scoped_refptr.22* %32 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %class.scoped_refptr.22* %31 to i64*
  store i64 %35, i64* %36, align 8
  store %"class.blink::NGShapeExclusions"* null, %"class.blink::NGShapeExclusions"** %33, align 8
  %37 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %28, i64 1
  %38 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %27, i64 1
  %39 = icmp eq %"struct.blink::NGLayoutOpportunity"* %38, %20
  br i1 %39, label %40, label %26

40:                                               ; preds = %26, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink19NGLayoutOpportunityELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.29"* %21, %"struct.blink::NGLayoutOpportunity"* %6) #13
  br label %83

41:                                               ; preds = %2
  %42 = zext i32 %1 to i64
  %43 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGLayoutOpportunityEEEmm(i64 %42) #13
  %44 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %43, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19NGLayoutOpportunityEEEPKcv, i64 0, i64 0)) #13
  %45 = udiv i64 %43, 24
  %46 = ptrtoint i8* %44 to i64
  %47 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = load %"struct.blink::NGLayoutOpportunity"*, %"struct.blink::NGLayoutOpportunity"** %47, align 8
  %49 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %48, i64 %51
  %53 = icmp eq i32 %50, 0
  br i1 %53, label %72, label %54

54:                                               ; preds = %41
  %55 = bitcast i8* %44 to %"struct.blink::NGLayoutOpportunity"*
  br label %56

56:                                               ; preds = %54, %56
  %57 = phi %"struct.blink::NGLayoutOpportunity"* [ %68, %56 ], [ %48, %54 ]
  %58 = phi %"struct.blink::NGLayoutOpportunity"* [ %67, %56 ], [ %55, %54 ]
  %59 = bitcast %"struct.blink::NGLayoutOpportunity"* %58 to i8*
  %60 = bitcast %"struct.blink::NGLayoutOpportunity"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 16, i1 false) #13
  %61 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %58, i64 0, i32 1
  %62 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %57, i64 0, i32 1
  %63 = getelementptr inbounds %class.scoped_refptr.22, %class.scoped_refptr.22* %62, i64 0, i32 0
  %64 = bitcast %class.scoped_refptr.22* %62 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %class.scoped_refptr.22* %61 to i64*
  store i64 %65, i64* %66, align 8
  store %"class.blink::NGShapeExclusions"* null, %"class.blink::NGShapeExclusions"** %63, align 8
  %67 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %58, i64 1
  %68 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %57, i64 1
  %69 = icmp eq %"struct.blink::NGLayoutOpportunity"* %68, %52
  br i1 %69, label %70, label %56

70:                                               ; preds = %56
  %71 = load %"struct.blink::NGLayoutOpportunity"*, %"struct.blink::NGLayoutOpportunity"** %47, align 8
  br label %72

72:                                               ; preds = %70, %41
  %73 = phi %"struct.blink::NGLayoutOpportunity"* [ %71, %70 ], [ %48, %41 ]
  %74 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0, i32 1, i64 0
  %75 = bitcast i8* %74 to %"struct.blink::NGLayoutOpportunity"*
  %76 = icmp eq %"struct.blink::NGLayoutOpportunity"* %73, %75
  br i1 %76, label %79, label %77, !prof !4

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink19NGLayoutOpportunityELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.29"* %78, %"struct.blink::NGLayoutOpportunity"* %73) #13
  br label %79

79:                                               ; preds = %72, %77
  %80 = bitcast %"class.WTF::Vector.28"* %0 to i64*
  store atomic i64 %46, i64* %80 monotonic, align 8
  %81 = trunc i64 %45 to i32
  %82 = getelementptr inbounds %"class.WTF::Vector.28", %"class.WTF::Vector.28"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %81, i32* %82, align 8
  br label %83

83:                                               ; preds = %40, %79, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGLayoutOpportunityEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink12_GLOBAL__N_123CreateLayoutOpportunityERKNS_19NGLayoutOpportunityERKNS_11NGBfcOffsetENS_10LayoutUnitE: argument 0"}
!7 = distinct !{!7, !"_ZN5blink12_GLOBAL__N_123CreateLayoutOpportunityERKNS_19NGLayoutOpportunityERKNS_11NGBfcOffsetENS_10LayoutUnitE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink12_GLOBAL__N_123CreateLayoutOpportunityERKNS_24NGExclusionSpaceInternal7NGShelfERKNS_11NGBfcOffsetENS_10LayoutUnitE: argument 0"}
!10 = distinct !{!10, !"_ZN5blink12_GLOBAL__N_123CreateLayoutOpportunityERKNS_24NGExclusionSpaceInternal7NGShelfERKNS_11NGBfcOffsetENS_10LayoutUnitE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink12_GLOBAL__N_123CreateLayoutOpportunityERKNS_19NGLayoutOpportunityERKNS_11NGBfcOffsetENS_10LayoutUnitE: argument 0"}
!13 = distinct !{!13, !"_ZN5blink12_GLOBAL__N_123CreateLayoutOpportunityERKNS_19NGLayoutOpportunityERKNS_11NGBfcOffsetENS_10LayoutUnitE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink12_GLOBAL__N_123CreateLayoutOpportunityERKNS_24NGExclusionSpaceInternal7NGShelfERKNS_11NGBfcOffsetENS_10LayoutUnitE: argument 0"}
!16 = distinct !{!16, !"_ZN5blink12_GLOBAL__N_123CreateLayoutOpportunityERKNS_24NGExclusionSpaceInternal7NGShelfERKNS_11NGBfcOffsetENS_10LayoutUnitE"}
!17 = !{!"branch_weights", i32 2000, i32 2002}
