; ModuleID = '../../third_party/skia/src/codec/SkWebpCodec.cpp'
source_filename = "../../third_party/skia/src/codec/SkWebpCodec.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkWebpCodec = type <{ %class.SkScalingCodec.base, [6 x i8], %class.SkAutoTCallVProc, %class.sk_sp, %"class.SkWebpCodec::FrameHolder", i8, [7 x i8] }>
%class.SkScalingCodec.base = type { %class.SkCodec.base }
%class.SkCodec.base = type <{ i32 (...)**, %struct.SkEncodedInfo, i32, [4 x i8], %"class.std::__1::unique_ptr.6", i8, [3 x i8], i32, %struct.SkImageInfo, %"struct.SkCodec::Options", i32, i32, %struct.skcms_ICCProfile, i32, i32, i8, i8 }>
%struct.SkEncodedInfo = type { i32, i32, i32, i32, i8, %"class.std::__1::unique_ptr.0" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.SkEncodedInfo::ICCProfile"* }
%"class.SkEncodedInfo::ICCProfile" = type { %struct.skcms_ICCProfile, %class.sk_sp }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.SkStream* }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.12, i32, i32 }
%class.sk_sp.12 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.13, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.13 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"struct.SkCodec::Options" = type { i32, %struct.SkIRect*, i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.3, [8 x i8] }
%struct.anon.3 = type { i32, i8*, i8* }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%class.SkAutoTCallVProc = type { %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %struct.WebPDemuxer* }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"class.SkWebpCodec::FrameHolder" = type { %class.SkFrameHolder, %"class.std::__1::vector" }
%class.SkFrameHolder = type { i32 (...)**, i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkWebpCodec::Frame"*, %"class.SkWebpCodec::Frame"*, %"class.std::__1::__compressed_pair.38" }
%"class.SkWebpCodec::Frame" = type <{ %class.SkFrame, i32, [4 x i8] }>
%class.SkFrame = type { i32 (...)**, i32, i8, i32, %struct.SkIRect, i32, i32, i32 }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.SkWebpCodec::Frame"* }
%class.SkStream = type { i32 (...)** }
%struct.WebPDemuxer = type opaque
%class.SkCodec = type <{ i32 (...)**, %struct.SkEncodedInfo, i32, [4 x i8], %"class.std::__1::unique_ptr.6", i8, [3 x i8], i32, %struct.SkImageInfo, %"struct.SkCodec::Options", i32, i32, %struct.skcms_ICCProfile, i32, i32, i8, i8, [6 x i8] }>
%struct.WebPData = type { i8*, i64 }
%struct.WebPChunkIterator = type { i32, i32, %struct.WebPData, [6 x i32], i8* }
%struct.WebPIterator = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.WebPData, i32, i32, [2 x i32], i8* }
%struct.WebPBitstreamFeatures = type { i32, i32, i32, i32, i32, [5 x i32] }
%"struct.SkCodec::FrameInfo" = type { i32, i32, i8, i32, i8, i32, i32, %struct.SkIRect }
%struct.WebPDecoderConfig = type { %struct.WebPBitstreamFeatures, %struct.WebPDecBuffer, %struct.WebPDecoderOptions }
%struct.WebPDecBuffer = type { i32, i32, i32, i32, %union.anon, [4 x i32], i8* }
%union.anon = type { %struct.WebPYUVABuffer }
%struct.WebPYUVABuffer = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, i64, i64, i64, i64 }
%struct.WebPDecoderOptions = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [5 x i32] }
%class.SkBitmap = type { %class.sk_sp.47, %class.SkPixmap, %class.sk_sp.48 }
%class.sk_sp.47 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.48 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%struct.WebPIDecoder = type opaque
%struct.SkRasterPipeline_MemoryCtx = type { i8*, i32 }
%class.SkRasterPipeline_ = type { %class.SkRasterPipeline, %class.SkSTArenaAlloc }
%class.SkRasterPipeline = type { %class.SkArenaAlloc*, %"struct.SkRasterPipeline::StageList"*, i32, i32 }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"struct.SkRasterPipeline::StageList" = type { %"struct.SkRasterPipeline::StageList"*, i32, i8* }
%class.SkSTArenaAlloc = type { %"struct.std::__1::array.59", %class.SkArenaAlloc.base, [4 x i8] }
%"struct.std::__1::array.59" = type { [256 x i8] }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.SkScalingCodec = type { %class.SkCodec.base, [6 x i8] }
%"class.SkYUVAPixmapInfo::SupportedDataTypes" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%class.SkYUVAPixmapInfo = type <{ %class.SkYUVAInfo, %"struct.std::__1::array", %"struct.std::__1::array.55", i32, [4 x i8] }>
%class.SkYUVAInfo = type { %struct.SkISize, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [4 x %struct.SkImageInfo] }
%"struct.std::__1::array.55" = type { [4 x i64] }
%class.SkYUVAPixmaps = type <{ %"struct.std::__1::array.56", %class.sk_sp, %class.SkYUVAInfo, i32, [4 x i8] }>
%"struct.std::__1::array.56" = type { [4 x %class.SkPixmap] }
%class.SkSampler = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN11SkWebpCodec11FrameHolderD2Ev = comdat any

$_ZN11SkWebpCodec11FrameHolderD0Ev = comdat any

$_ZN11SkWebpCodecD2Ev = comdat any

$_ZN11SkWebpCodecD0Ev = comdat any

$_ZNK14SkScalingCodec21onGetScaledDimensionsEf = comdat any

$_ZN14SkScalingCodec21onDimensionsSupportedERK7SkISize = comdat any

$_ZNK11SkWebpCodec18onGetEncodedFormatEv = comdat any

$_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ = comdat any

$_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps = comdat any

$_ZN7SkCodec8onRewindEv = comdat any

$_ZNK7SkCodec18onGetScanlineOrderEv = comdat any

$_ZNK7SkCodec14usesColorXformEv = comdat any

$_ZNK11SkWebpCodec14getFrameHolderEv = comdat any

$_ZN7SkCodec21onStartScanlineDecodeERK11SkImageInfoRKNS_7OptionsE = comdat any

$_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE = comdat any

$_ZN7SkCodec19onIncrementalDecodeEPi = comdat any

$_ZN7SkCodec15onSkipScanlinesEi = comdat any

$_ZN7SkCodec14onGetScanlinesEPvim = comdat any

$_ZN7SkCodec10getSamplerEb = comdat any

$_ZNSt3__16vectorIN11SkWebpCodec5FrameENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZN11SkWebpCodec5FrameD0Ev = comdat any

$_ZNK11SkWebpCodec5Frame15onReportedAlphaEv = comdat any

$_ZN7SkFrameD2Ev = comdat any

$_ZN7SkFrameD0Ev = comdat any

$_ZNSt3__16vectorIN11SkWebpCodec5FrameENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKiN13SkEncodedInfo5AlphaEEEEvDpOT_ = comdat any

$_ZTVN11SkWebpCodec5FrameE = comdat any

$_ZTV7SkFrame = comdat any

@.str = private unnamed_addr constant [5 x i8] c"RIFF\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"WEBPVP\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"ICCP\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"EXIF\00", align 1
@_ZTV11SkWebpCodec = hidden unnamed_addr constant { [26 x i8*] } { [26 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkWebpCodec*)* @_ZN11SkWebpCodecD2Ev to i8*), i8* bitcast (void (%class.SkWebpCodec*)* @_ZN11SkWebpCodecD0Ev to i8*), i8* bitcast (i64 (%class.SkScalingCodec*, float)* @_ZNK14SkScalingCodec21onGetScaledDimensionsEf to i8*), i8* bitcast (i1 (%class.SkScalingCodec*, %struct.SkISize*)* @_ZN14SkScalingCodec21onDimensionsSupportedERK7SkISize to i8*), i8* bitcast (i32 (%class.SkWebpCodec*)* @_ZNK11SkWebpCodec18onGetEncodedFormatEv to i8*), i8* bitcast (i32 (%class.SkWebpCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*, i32*)* @_ZN11SkWebpCodec11onGetPixelsERK11SkImageInfoPvmRKN7SkCodec7OptionsEPi to i8*), i8* bitcast (i1 (%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)* @_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ to i8*), i8* bitcast (i32 (%class.SkCodec*, %class.SkYUVAPixmaps*)* @_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps to i8*), i8* bitcast (i1 (%class.SkWebpCodec*, %struct.SkIRect*)* @_ZNK11SkWebpCodec16onGetValidSubsetEP7SkIRect to i8*), i8* bitcast (i1 (%class.SkCodec*)* @_ZN7SkCodec8onRewindEv to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZNK7SkCodec18onGetScanlineOrderEv to i8*), i8* bitcast (i32 (%class.SkCodec*, i32)* @_ZNK7SkCodec16onOutputScanlineEi to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkImageInfo*, i1, i1)* @_ZN7SkCodec19conversionSupportedERK11SkImageInfobb to i8*), i8* bitcast (i1 (%class.SkCodec*)* @_ZNK7SkCodec14usesColorXformEv to i8*), i8* bitcast (i32 (%class.SkWebpCodec*)* @_ZN11SkWebpCodec15onGetFrameCountEv to i8*), i8* bitcast (i1 (%class.SkWebpCodec*, i32, %"struct.SkCodec::FrameInfo"*)* @_ZNK11SkWebpCodec14onGetFrameInfoEiPN7SkCodec9FrameInfoE to i8*), i8* bitcast (i32 (%class.SkWebpCodec*)* @_ZN11SkWebpCodec20onGetRepetitionCountEv to i8*), i8* bitcast (%class.SkFrameHolder* (%class.SkWebpCodec*)* @_ZNK11SkWebpCodec14getFrameHolderEv to i8*), i8* bitcast (i32 (%class.SkCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)* @_ZN7SkCodec21onStartScanlineDecodeERK11SkImageInfoRKNS_7OptionsE to i8*), i8* bitcast (i32 (%class.SkCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)* @_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE to i8*), i8* bitcast (i32 (%class.SkCodec*, i32*)* @_ZN7SkCodec19onIncrementalDecodeEPi to i8*), i8* bitcast (i1 (%class.SkCodec*, i32)* @_ZN7SkCodec15onSkipScanlinesEi to i8*), i8* bitcast (i32 (%class.SkCodec*, i8*, i32, i64)* @_ZN7SkCodec14onGetScanlinesEPvim to i8*), i8* bitcast (%class.SkSampler* (%class.SkCodec*, i1)* @_ZN7SkCodec10getSamplerEb to i8*)] }, align 8
@_ZTVN11SkWebpCodec11FrameHolderE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkWebpCodec::FrameHolder"*)* @_ZN11SkWebpCodec11FrameHolderD2Ev to i8*), i8* bitcast (void (%"class.SkWebpCodec::FrameHolder"*)* @_ZN11SkWebpCodec11FrameHolderD0Ev to i8*), i8* bitcast (%class.SkFrame* (%"class.SkWebpCodec::FrameHolder"*, i32)* @_ZNK11SkWebpCodec11FrameHolder10onGetFrameEi to i8*)] }, align 8
@_ZTVN11SkWebpCodec5FrameE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkFrame*)* @_ZN7SkFrameD2Ev to i8*), i8* bitcast (void (%"class.SkWebpCodec::Frame"*)* @_ZN11SkWebpCodec5FrameD0Ev to i8*), i8* bitcast (i32 (%"class.SkWebpCodec::Frame"*)* @_ZNK11SkWebpCodec5Frame15onReportedAlphaEv to i8*)] }, comdat, align 8
@_ZTV7SkFrame = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkFrame*)* @_ZN7SkFrameD2Ev to i8*), i8* bitcast (void (%class.SkFrame*)* @_ZN7SkFrameD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8

@_ZN11SkWebpCodecC1EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEP11WebPDemuxer5sk_spI6SkDataE15SkEncodedOrigin = hidden unnamed_addr alias void (%class.SkWebpCodec*, %struct.SkEncodedInfo*, %class.SkStream*, %struct.WebPDemuxer*, %class.sk_sp*, i32), void (%class.SkWebpCodec*, %struct.SkEncodedInfo*, %class.SkStream*, %struct.WebPDemuxer*, %class.sk_sp*, i32)* @_ZN11SkWebpCodecC2EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEP11WebPDemuxer5sk_spI6SkDataE15SkEncodedOrigin

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN11SkWebpCodec6IsWebpEPKvm(i8* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp ugt i64 %1, 13
  br i1 %3, label %4, label %11

4:                                                ; preds = %2
  %5 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4)
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i64 8
  %9 = tail call i32 @bcmp(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i64 6)
  %10 = icmp eq i32 %9, 0
  br label %11

11:                                               ; preds = %4, %7, %2
  %12 = phi i1 [ false, %4 ], [ false, %2 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCodec* @_ZN11SkWebpCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultE(%class.SkStream*, i32* nocapture) local_unnamed_addr #2 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %struct.WebPData*
  %7 = alloca i32, align 4
  %8 = alloca %struct.WebPChunkIterator, align 8
  %9 = alloca %class.sk_sp, align 8
  %10 = alloca %class.sk_sp, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.WebPChunkIterator, align 8
  %13 = alloca %struct.WebPIterator, align 8
  %14 = alloca %struct.WebPBitstreamFeatures, align 4
  %15 = alloca %struct.SkEncodedInfo, align 8
  %16 = bitcast %class.SkStream* %0 to i8* (%class.SkStream*)***
  %17 = load i8* (%class.SkStream*)**, i8* (%class.SkStream*)*** %16, align 8
  %18 = getelementptr inbounds i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %17, i64 12
  %19 = load i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %18, align 8
  %20 = tail call i8* %19(%class.SkStream* %0) #14
  %21 = icmp eq i8* %20, null
  br i1 %21, label %36, label %22

22:                                               ; preds = %2
  %23 = ptrtoint %class.SkStream* %0 to i64
  %24 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #14
  %25 = load i8* (%class.SkStream*)**, i8* (%class.SkStream*)*** %16, align 8
  %26 = getelementptr inbounds i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %25, i64 12
  %27 = load i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %26, align 8
  %28 = tail call i8* %27(%class.SkStream* %0) #14
  %29 = bitcast %class.SkStream* %0 to i64 (%class.SkStream*)***
  %30 = load i64 (%class.SkStream*)**, i64 (%class.SkStream*)*** %29, align 8
  %31 = getelementptr inbounds i64 (%class.SkStream*)*, i64 (%class.SkStream*)** %30, i64 11
  %32 = load i64 (%class.SkStream*)*, i64 (%class.SkStream*)** %31, align 8
  %33 = tail call i64 %32(%class.SkStream* %0) #14
  call void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp* nonnull sret %3, i8* %28, i64 %33, void (i8*, i8*)* nonnull @_ZN6SkData16DummyReleaseProcEPKvPv, i8* null) #14
  %34 = bitcast %class.sk_sp* %3 to i64*
  %35 = load i64, i64* %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #14
  br label %46

36:                                               ; preds = %2
  %37 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #14
  call void @_Z18SkCopyStreamToDataP8SkStream(%class.sk_sp* nonnull sret %4, %class.SkStream* %0) #14
  %38 = bitcast %class.sk_sp* %4 to i64*
  %39 = load i64, i64* %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #14
  %40 = icmp eq %class.SkStream* %0, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = bitcast %class.SkStream* %0 to void (%class.SkStream*)***
  %43 = load void (%class.SkStream*)**, void (%class.SkStream*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.SkStream*)*, void (%class.SkStream*)** %43, i64 1
  %45 = load void (%class.SkStream*)*, void (%class.SkStream*)** %44, align 8
  call void %45(%class.SkStream* nonnull %0) #14
  br label %46

46:                                               ; preds = %41, %36, %22
  %47 = phi i64 [ %35, %22 ], [ %39, %36 ], [ %39, %41 ]
  %48 = phi i64 [ %23, %22 ], [ 0, %36 ], [ 0, %41 ]
  %49 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #14
  %50 = inttoptr i64 %47 to %class.SkData*
  %51 = getelementptr inbounds %class.SkData, %class.SkData* %50, i64 0, i32 3
  %52 = bitcast i8** %51 to <2 x i64>*
  %53 = load <2 x i64>, <2 x i64>* %52, align 8
  store <2 x i64> %53, <2 x i64>* %5, align 16
  %54 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #14
  store i32 -1431655766, i32* %7, align 4
  %55 = call %struct.WebPDemuxer* @WebPDemuxInternal(%struct.WebPData* nonnull %6, i32 1, i32* nonnull %7, i32 263) #14
  %56 = ptrtoint %struct.WebPDemuxer* %55 to i64
  %57 = load i32, i32* %7, align 4
  switch i32 %57, label %60 [
    i32 -1, label %58
    i32 0, label %59
  ]

58:                                               ; preds = %46
  store i32 6, i32* %1, align 4
  br label %247

59:                                               ; preds = %46
  store i32 1, i32* %1, align 4
  br label %247

60:                                               ; preds = %46
  %61 = call i32 @WebPDemuxGetI(%struct.WebPDemuxer* %55, i32 1) #14
  %62 = call i32 @WebPDemuxGetI(%struct.WebPDemuxer* %55, i32 2) #14
  %63 = sext i32 %61 to i64
  %64 = sext i32 %62 to i64
  %65 = mul nsw i64 %64, %63
  %66 = add nsw i64 %65, 2147483648
  %67 = icmp ugt i64 %66, 4294967295
  %68 = trunc i64 %65 to i32
  %69 = icmp sgt i32 %68, 536870911
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72

71:                                               ; preds = %60
  store i32 6, i32* %1, align 4
  br label %247

72:                                               ; preds = %60
  %73 = bitcast %struct.WebPChunkIterator* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %73) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 56, i1 false)
  %74 = call i32 @WebPDemuxGetChunk(%struct.WebPDemuxer* %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i32 1, %struct.WebPChunkIterator* nonnull %8) #14
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %124, label %76

76:                                               ; preds = %72
  %77 = bitcast %class.sk_sp* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #14
  %78 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %9, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %78, align 8
  %79 = getelementptr inbounds %struct.WebPChunkIterator, %struct.WebPChunkIterator* %8, i64 0, i32 2, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds %struct.WebPChunkIterator, %struct.WebPChunkIterator* %8, i64 0, i32 2, i32 1
  %82 = load i64, i64* %81, align 8
  call void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp* nonnull sret %9, i8* %80, i64 %82) #14
  %83 = bitcast %class.sk_sp* %9 to i64*
  %84 = load i64, i64* %83, align 8
  store %class.SkData* null, %class.SkData** %78, align 8
  %85 = bitcast %class.sk_sp* %10 to i64*
  store i64 %84, i64* %85, align 8
  %86 = call %"class.SkEncodedInfo::ICCProfile"* @_ZN13SkEncodedInfo10ICCProfile4MakeE5sk_spI6SkDataE(%class.sk_sp* nonnull %10) #14
  %87 = ptrtoint %"class.SkEncodedInfo::ICCProfile"* %86 to i64
  %88 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %10, i64 0, i32 0
  %89 = load %class.SkData*, %class.SkData** %88, align 8
  %90 = icmp eq %class.SkData* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %76
  %92 = getelementptr inbounds %class.SkData, %class.SkData* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = atomicrmw add i32* %92, i32 -1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %89) #14
  %96 = bitcast %class.SkData* %89 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %96) #14
  br label %97

97:                                               ; preds = %76, %91, %95
  %98 = load %class.SkData*, %class.SkData** %78, align 8
  %99 = icmp eq %class.SkData* %98, null
  br i1 %99, label %106, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %class.SkData, %class.SkData* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw add i32* %101, i32 -1 acq_rel
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %98) #14
  %105 = bitcast %class.SkData* %98 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %105) #14
  br label %106

106:                                              ; preds = %104, %100, %97
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #14
  %107 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %86, null
  br i1 %107, label %124, label %108

108:                                              ; preds = %106
  %109 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %86, i64 0, i32 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 1380401696
  br i1 %111, label %124, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %86, i64 0, i32 1, i32 0
  %114 = load %class.SkData*, %class.SkData** %113, align 8
  %115 = icmp eq %class.SkData* %114, null
  br i1 %115, label %122, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %class.SkData, %class.SkData* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = atomicrmw add i32* %117, i32 -1 acq_rel
  %119 = icmp eq i32 %118, 1
  br i1 %119, label %120, label %122

120:                                              ; preds = %116
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %114) #14
  %121 = bitcast %class.SkData* %114 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %121) #14
  br label %122

122:                                              ; preds = %112, %116, %120
  %123 = bitcast %"class.SkEncodedInfo::ICCProfile"* %86 to i8*
  call void @_ZdlPv(i8* %123) #15
  br label %124

124:                                              ; preds = %106, %72, %108, %122
  %125 = phi i64 [ %87, %108 ], [ 0, %122 ], [ %87, %106 ], [ 0, %72 ]
  call void @WebPDemuxReleaseChunkIterator(%struct.WebPChunkIterator* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %73) #14
  %126 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %126) #14
  store i32 1, i32* %11, align 4
  %127 = bitcast %struct.WebPChunkIterator* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %127) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 -86, i64 56, i1 false)
  %128 = call i32 @WebPDemuxGetChunk(%struct.WebPDemuxer* %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i32 1, %struct.WebPChunkIterator* nonnull %12) #14
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %136, label %130

130:                                              ; preds = %124
  %131 = getelementptr inbounds %struct.WebPChunkIterator, %struct.WebPChunkIterator* %12, i64 0, i32 2, i32 0
  %132 = load i8*, i8** %131, align 8
  %133 = getelementptr inbounds %struct.WebPChunkIterator, %struct.WebPChunkIterator* %12, i64 0, i32 2, i32 1
  %134 = load i64, i64* %133, align 8
  %135 = call zeroext i1 @_Z20SkParseEncodedOriginPKhmP15SkEncodedOrigin(i8* %132, i64 %134, i32* nonnull %11) #14
  br label %136

136:                                              ; preds = %124, %130
  call void @WebPDemuxReleaseChunkIterator(%struct.WebPChunkIterator* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %127) #14
  %137 = bitcast %struct.WebPIterator* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %137) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 -86, i64 80, i1 false)
  %138 = call i32 @WebPDemuxGetFrame(%struct.WebPDemuxer* %55, i32 1, %struct.WebPIterator* nonnull %13) #14
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %136
  store i32 1, i32* %1, align 4
  br label %227

141:                                              ; preds = %136
  %142 = bitcast %struct.WebPBitstreamFeatures* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %142) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %142, i8 -86, i64 40, i1 false)
  %143 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %13, i64 0, i32 9, i32 0
  %144 = load i8*, i8** %143, align 8
  %145 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %13, i64 0, i32 9, i32 1
  %146 = load i64, i64* %145, align 8
  %147 = call i32 @WebPGetFeaturesInternal(i8* %144, i64 %146, %struct.WebPBitstreamFeatures* nonnull %14, i32 521) #14
  switch i32 %147, label %149 [
    i32 0, label %150
    i32 5, label %148
    i32 7, label %148
  ]

148:                                              ; preds = %141, %141
  store i32 1, i32* %1, align 4
  br label %221

149:                                              ; preds = %141
  store i32 6, i32* %1, align 4
  br label %221

150:                                              ; preds = %141
  %151 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %13, i64 0, i32 10
  %152 = load i32, i32* %151, align 8
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %162

154:                                              ; preds = %150
  %155 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %13, i64 0, i32 4
  %156 = load i32, i32* %155, align 8
  %157 = icmp eq i32 %156, %61
  br i1 %157, label %158, label %162

158:                                              ; preds = %154
  %159 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %13, i64 0, i32 5
  %160 = load i32, i32* %159, align 4
  %161 = icmp ne i32 %160, %62
  br label %162

162:                                              ; preds = %150, %154, %158
  %163 = phi i1 [ true, %154 ], [ true, %150 ], [ %161, %158 ]
  %164 = getelementptr inbounds %struct.WebPBitstreamFeatures, %struct.WebPBitstreamFeatures* %14, i64 0, i32 4
  %165 = load i32, i32* %164, align 4
  switch i32 %165, label %170 [
    i32 0, label %166
    i32 2, label %166
    i32 1, label %168
  ]

166:                                              ; preds = %162, %162
  %167 = select i1 %163, i32 9, i32 8
  br label %171

168:                                              ; preds = %162
  %169 = select i1 %163, i32 11, i32 10
  br label %171

170:                                              ; preds = %162
  store i32 6, i32* %1, align 4
  br label %221

171:                                              ; preds = %166, %168
  %172 = phi i32 [ %167, %166 ], [ %169, %168 ]
  %173 = zext i1 %163 to i32
  store i32 0, i32* %1, align 4
  %174 = bitcast %struct.SkEncodedInfo* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %174) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 -86, i64 24, i1 false)
  %175 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %15, i64 0, i32 0
  store i32 %61, i32* %175, align 8, !alias.scope !2
  %176 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %15, i64 0, i32 1
  store i32 %62, i32* %176, align 4, !alias.scope !2
  %177 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %15, i64 0, i32 2
  store i32 %172, i32* %177, align 8, !alias.scope !2
  %178 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %15, i64 0, i32 3
  store i32 %173, i32* %178, align 4, !alias.scope !2
  %179 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %15, i64 0, i32 4
  store i8 8, i8* %179, align 8, !alias.scope !2
  %180 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %15, i64 0, i32 5
  %181 = bitcast %"class.std::__1::unique_ptr.0"* %180 to i64*
  store i64 %125, i64* %181, align 8, !alias.scope !2
  %182 = call i8* @_Znwm(i64 1208) #15
  %183 = load i32, i32* %11, align 4
  %184 = inttoptr i64 %48 to %class.SkStream*
  %185 = bitcast i8* %182 to %class.SkCodec*
  call void @_ZN7SkCodecC2EO13SkEncodedInfo17skcms_PixelFormatNSt3__110unique_ptrI8SkStreamNS3_14default_deleteIS5_EEEE15SkEncodedOrigin(%class.SkCodec* nonnull %185, %struct.SkEncodedInfo* nonnull dereferenceable(32) %15, i32 13, %class.SkStream* %184, i32 %183) #14
  %186 = bitcast i8* %182 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV11SkWebpCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %186, align 8
  %187 = getelementptr inbounds i8, i8* %182, i64 1144
  %188 = bitcast i8* %187 to i64*
  store i64 %56, i64* %188, align 8
  %189 = getelementptr inbounds i8, i8* %182, i64 1152
  %190 = bitcast i8* %189 to i64*
  store i64 %47, i64* %190, align 8
  %191 = getelementptr inbounds i8, i8* %182, i64 1160
  %192 = bitcast i8* %191 to i32 (...)***
  %193 = getelementptr inbounds i8, i8* %182, i64 1168
  %194 = bitcast i8* %193 to i32*
  %195 = getelementptr inbounds i8, i8* %182, i64 1172
  %196 = bitcast i8* %195 to i32*
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11SkWebpCodec11FrameHolderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %192, align 8
  %197 = getelementptr inbounds i8, i8* %182, i64 1176
  %198 = getelementptr inbounds i8, i8* %182, i64 8
  %199 = bitcast i8* %198 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %197, i8 0, i64 25, i1 false) #14
  %200 = load i32, i32* %199, align 8
  %201 = getelementptr inbounds i8, i8* %182, i64 12
  %202 = bitcast i8* %201 to i32*
  %203 = load i32, i32* %202, align 4
  store i32 %200, i32* %194, align 8
  store i32 %203, i32* %196, align 4
  %204 = ptrtoint i8* %182 to i64
  %205 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %15, i64 0, i32 5, i32 0, i32 0, i32 0
  %206 = load %"class.SkEncodedInfo::ICCProfile"*, %"class.SkEncodedInfo::ICCProfile"** %205, align 8
  store %"class.SkEncodedInfo::ICCProfile"* null, %"class.SkEncodedInfo::ICCProfile"** %205, align 8
  %207 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %206, null
  br i1 %207, label %220, label %208

208:                                              ; preds = %171
  %209 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %206, i64 0, i32 1, i32 0
  %210 = load %class.SkData*, %class.SkData** %209, align 8
  %211 = icmp eq %class.SkData* %210, null
  br i1 %211, label %218, label %212

212:                                              ; preds = %208
  %213 = getelementptr inbounds %class.SkData, %class.SkData* %210, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = atomicrmw add i32* %213, i32 -1 acq_rel
  %215 = icmp eq i32 %214, 1
  br i1 %215, label %216, label %218

216:                                              ; preds = %212
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %210) #14
  %217 = bitcast %class.SkData* %210 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %217) #14
  br label %218

218:                                              ; preds = %216, %212, %208
  %219 = bitcast %"class.SkEncodedInfo::ICCProfile"* %206 to i8*
  call void @_ZdlPv(i8* %219) #15
  br label %220

220:                                              ; preds = %171, %218
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %174) #14
  br label %221

221:                                              ; preds = %170, %220, %149, %148
  %222 = phi i64 [ %56, %149 ], [ %56, %148 ], [ %56, %170 ], [ 0, %220 ]
  %223 = phi i64 [ %125, %149 ], [ %125, %148 ], [ %125, %170 ], [ 0, %220 ]
  %224 = phi i64 [ %47, %149 ], [ %47, %148 ], [ %47, %170 ], [ 0, %220 ]
  %225 = phi i64 [ %48, %149 ], [ %48, %148 ], [ %48, %170 ], [ 0, %220 ]
  %226 = phi i64 [ 0, %149 ], [ 0, %148 ], [ 0, %170 ], [ %204, %220 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %142) #14
  br label %227

227:                                              ; preds = %221, %140
  %228 = phi i64 [ %56, %140 ], [ %222, %221 ]
  %229 = phi i64 [ %125, %140 ], [ %223, %221 ]
  %230 = phi i64 [ %47, %140 ], [ %224, %221 ]
  %231 = phi i64 [ %48, %140 ], [ %225, %221 ]
  %232 = phi i64 [ 0, %140 ], [ %226, %221 ]
  call void @WebPDemuxReleaseIterator(%struct.WebPIterator* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %137) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %126) #14
  %233 = icmp eq i64 %229, 0
  br i1 %233, label %247, label %234

234:                                              ; preds = %227
  %235 = inttoptr i64 %229 to %"class.SkEncodedInfo::ICCProfile"*
  %236 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %235, i64 0, i32 1, i32 0
  %237 = load %class.SkData*, %class.SkData** %236, align 8
  %238 = icmp eq %class.SkData* %237, null
  br i1 %238, label %245, label %239

239:                                              ; preds = %234
  %240 = getelementptr inbounds %class.SkData, %class.SkData* %237, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = atomicrmw add i32* %240, i32 -1 acq_rel
  %242 = icmp eq i32 %241, 1
  br i1 %242, label %243, label %245

243:                                              ; preds = %239
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %237) #14
  %244 = bitcast %class.SkData* %237 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %244) #14
  br label %245

245:                                              ; preds = %243, %239, %234
  %246 = inttoptr i64 %229 to i8*
  call void @_ZdlPv(i8* %246) #15
  br label %247

247:                                              ; preds = %245, %227, %71, %59, %58
  %248 = phi i64 [ %56, %71 ], [ %56, %59 ], [ %56, %58 ], [ %228, %227 ], [ %228, %245 ]
  %249 = phi i64 [ %47, %71 ], [ %47, %59 ], [ %47, %58 ], [ %230, %227 ], [ %230, %245 ]
  %250 = phi i64 [ %48, %71 ], [ %48, %59 ], [ %48, %58 ], [ %231, %227 ], [ %231, %245 ]
  %251 = phi i64 [ 0, %71 ], [ 0, %59 ], [ 0, %58 ], [ %232, %227 ], [ %232, %245 ]
  %252 = icmp eq i64 %248, 0
  br i1 %252, label %255, label %253

253:                                              ; preds = %247
  %254 = inttoptr i64 %248 to %struct.WebPDemuxer*
  call void @WebPDemuxDelete(%struct.WebPDemuxer* nonnull %254) #14
  br label %255

255:                                              ; preds = %247, %253
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #14
  %256 = inttoptr i64 %249 to %class.SkData*
  %257 = icmp eq i64 %249, 0
  br i1 %257, label %264, label %258

258:                                              ; preds = %255
  %259 = getelementptr inbounds %class.SkData, %class.SkData* %256, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %260 = atomicrmw add i32* %259, i32 -1 acq_rel
  %261 = icmp eq i32 %260, 1
  br i1 %261, label %262, label %264

262:                                              ; preds = %258
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %256) #14
  %263 = inttoptr i64 %249 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %263) #14
  br label %264

264:                                              ; preds = %255, %258, %262
  %265 = icmp eq i64 %250, 0
  br i1 %265, label %272, label %266

266:                                              ; preds = %264
  %267 = inttoptr i64 %250 to %class.SkStream*
  %268 = inttoptr i64 %250 to void (%class.SkStream*)***
  %269 = load void (%class.SkStream*)**, void (%class.SkStream*)*** %268, align 8
  %270 = getelementptr inbounds void (%class.SkStream*)*, void (%class.SkStream*)** %269, i64 1
  %271 = load void (%class.SkStream*)*, void (%class.SkStream*)** %270, align 8
  call void %271(%class.SkStream* nonnull %267) #14
  br label %272

272:                                              ; preds = %264, %266
  %273 = inttoptr i64 %251 to %class.SkCodec*
  ret %class.SkCodec* %273
}

declare void @_Z18SkCopyStreamToDataP8SkStream(%class.sk_sp* sret, %class.SkStream*) local_unnamed_addr #3

declare i32 @WebPDemuxGetI(%struct.WebPDemuxer*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @WebPDemuxGetChunk(%struct.WebPDemuxer*, i8*, i32, %struct.WebPChunkIterator*) local_unnamed_addr #3

declare void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp* sret, i8*, i64) local_unnamed_addr #3

declare %"class.SkEncodedInfo::ICCProfile"* @_ZN13SkEncodedInfo10ICCProfile4MakeE5sk_spI6SkDataE(%class.sk_sp*) local_unnamed_addr #3

declare zeroext i1 @_Z20SkParseEncodedOriginPKhmP15SkEncodedOrigin(i8*, i64, i32*) local_unnamed_addr #3

declare i32 @WebPDemuxGetFrame(%struct.WebPDemuxer*, i32, %struct.WebPIterator*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkWebpCodec::Frame"* @_ZN11SkWebpCodec11FrameHolder14appendNewFrameEb(%"class.SkWebpCodec::FrameHolder"*, i1 zeroext) local_unnamed_addr #2 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.SkWebpCodec::FrameHolder", %"class.SkWebpCodec::FrameHolder"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.SkWebpCodec::FrameHolder", %"class.SkWebpCodec::FrameHolder"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"class.SkWebpCodec::Frame"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 56
  %14 = trunc i64 %13 to i32
  store i32 %14, i32* %3, align 4
  %15 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #14
  %16 = zext i1 %1 to i32
  store i32 %16, i32* %4, align 4
  %17 = inttoptr i64 %9 to %"class.SkWebpCodec::Frame"*
  %18 = getelementptr inbounds %"class.SkWebpCodec::FrameHolder", %"class.SkWebpCodec::FrameHolder"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %19 = load %"class.SkWebpCodec::Frame"*, %"class.SkWebpCodec::Frame"** %18, align 8
  %20 = icmp ugt %"class.SkWebpCodec::Frame"* %19, %17
  br i1 %20, label %21, label %34

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %17, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %17, i64 0, i32 0, i32 1
  store i32 %14, i32* %23, align 8
  %24 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %17, i64 0, i32 0, i32 2
  store i8 0, i8* %24, align 4
  %25 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %17, i64 0, i32 0, i32 3
  store i32 -2, i32* %25, align 8
  %26 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %17, i64 0, i32 0, i32 5
  store i32 1, i32* %26, align 4
  %27 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %17, i64 0, i32 0, i32 6
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %17, i64 0, i32 0, i32 7
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %17, i64 0, i32 0, i32 4
  %30 = bitcast %struct.SkIRect* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 16, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11SkWebpCodec5FrameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %31 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %17, i64 0, i32 1
  store i32 %16, i32* %31, align 8
  %32 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %17, i64 1
  %33 = ptrtoint %"class.SkWebpCodec::Frame"* %32 to i64
  store i64 %33, i64* %8, align 8
  br label %36

34:                                               ; preds = %2
  call void @_ZNSt3__16vectorIN11SkWebpCodec5FrameENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKiN13SkEncodedInfo5AlphaEEEEvDpOT_(%"class.std::__1::vector"* %6, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %4) #14
  %35 = load i32, i32* %3, align 4
  br label %36

36:                                               ; preds = %21, %34
  %37 = phi i32 [ %14, %21 ], [ %35, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #14
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %40 = load %"class.SkWebpCodec::Frame"*, %"class.SkWebpCodec::Frame"** %39, align 8
  %41 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %40, i64 %38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #14
  ret %"class.SkWebpCodec::Frame"* %41
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11SkWebpCodec16onGetValidSubsetEP7SkIRect(%class.SkWebpCodec* nocapture readonly, %struct.SkIRect*) unnamed_addr #2 align 2 {
  %3 = icmp eq %struct.SkIRect* %1, null
  br i1 %3, label %50, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 0, i32 0, i32 1, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  %15 = sub nsw i64 %11, %14
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = sub nsw i64 %18, %21
  %23 = icmp slt i64 %15, 1
  %24 = icmp slt i64 %22, 1
  %25 = or i1 %23, %24
  br i1 %25, label %50, label %26

26:                                               ; preds = %4
  %27 = or i64 %22, %15
  %28 = add nsw i64 %27, 2147483648
  %29 = icmp ugt i64 %28, 4294967295
  br i1 %29, label %50, label %30

30:                                               ; preds = %26
  %31 = icmp slt i32 %6, 1
  %32 = icmp slt i32 %8, 1
  %33 = or i1 %31, %32
  br i1 %33, label %50, label %34

34:                                               ; preds = %30
  %35 = or i32 %8, %6
  %36 = sext i32 %35 to i64
  %37 = add nsw i64 %36, 2147483648
  %38 = icmp ugt i64 %37, 4294967295
  %39 = or i32 %20, %13
  %40 = icmp slt i32 %39, 0
  %41 = or i1 %38, %40
  %42 = icmp slt i32 %6, %10
  %43 = or i1 %42, %41
  %44 = icmp sge i32 %8, %17
  %45 = xor i1 %43, true
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %50

47:                                               ; preds = %34
  %48 = and i32 %13, -2
  store i32 %48, i32* %12, align 4
  %49 = and i32 %20, -2
  store i32 %49, i32* %19, align 4
  br label %50

50:                                               ; preds = %4, %26, %30, %34, %2, %47
  %51 = phi i1 [ true, %47 ], [ false, %2 ], [ false, %34 ], [ false, %30 ], [ false, %26 ], [ false, %4 ]
  ret i1 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11SkWebpCodec20onGetRepetitionCountEv(%class.SkWebpCodec* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %2, align 8
  %4 = tail call i32 @WebPDemuxGetI(%struct.WebPDemuxer* %3, i32 0) #14
  %5 = and i32 %4, 2
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %2, align 8
  %9 = tail call i32 @WebPDemuxGetI(%struct.WebPDemuxer* %8, i32 3) #14
  %10 = icmp eq i32 %9, 0
  %11 = add nsw i32 %9, -1
  %12 = select i1 %10, i32 -1, i32 %11
  br label %13

13:                                               ; preds = %7, %1
  %14 = phi i32 [ 0, %1 ], [ %12, %7 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11SkWebpCodec15onGetFrameCountEv(%class.SkWebpCodec*) unnamed_addr #2 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.WebPIterator, align 8
  %5 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %6 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %5, align 8
  %7 = tail call i32 @WebPDemuxGetI(%struct.WebPDemuxer* %6, i32 0) #14
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %126, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 4, i32 1
  %12 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %13 = bitcast %"class.SkWebpCodec::Frame"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 56
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 5
  %21 = load i8, i8* %20, align 8, !range !5
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %126

23:                                               ; preds = %10
  %24 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %5, align 8
  %25 = tail call i32 @WebPDemuxGetI(%struct.WebPDemuxer* %24, i32 5) #14
  %26 = icmp eq i32 %25, %19
  br i1 %26, label %126, label %27

27:                                               ; preds = %23
  %28 = sext i32 %25 to i64
  tail call void @_ZNSt3__16vectorIN11SkWebpCodec5FrameENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector"* %11, i64 %28) #14
  %29 = icmp ugt i32 %25, %19
  br i1 %29, label %30, label %120

30:                                               ; preds = %27
  %31 = bitcast %struct.WebPIterator* %4 to i8*
  %32 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %4, i64 0, i32 10
  %33 = bitcast i32* %2 to i8*
  %34 = bitcast i32* %3 to i8*
  %35 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 4, i32 1, i32 0, i32 2, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %4, i64 0, i32 2
  %38 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %4, i64 0, i32 3
  %39 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %4, i64 0, i32 4
  %40 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %4, i64 0, i32 5
  %41 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %4, i64 0, i32 7
  %42 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %4, i64 0, i32 6
  %43 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %4, i64 0, i32 11
  %44 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 4, i32 0
  br label %45

45:                                               ; preds = %118, %30
  %46 = phi i32 [ %19, %30 ], [ %48, %118 ]
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %31) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 80, i1 false)
  %47 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %5, align 8
  %48 = add i32 %46, 1
  %49 = call i32 @WebPDemuxGetFrame(%struct.WebPDemuxer* %47, i32 %48, %struct.WebPIterator* nonnull %4) #14
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %45
  store i8 1, i8* %20, align 8
  call void @WebPDemuxReleaseIterator(%struct.WebPIterator* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %31) #14
  br label %120

52:                                               ; preds = %45
  %53 = load i32, i32* %32, align 8
  %54 = icmp ne i32 %53, 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #14
  %55 = load i64, i64* %13, align 8
  %56 = load i64, i64* %15, align 8
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 56
  %59 = trunc i64 %58 to i32
  store i32 %59, i32* %2, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #14
  %60 = zext i1 %54 to i32
  store i32 %60, i32* %3, align 4
  %61 = inttoptr i64 %55 to %"class.SkWebpCodec::Frame"*
  %62 = load %"class.SkWebpCodec::Frame"*, %"class.SkWebpCodec::Frame"** %35, align 8
  %63 = icmp ugt %"class.SkWebpCodec::Frame"* %62, %61
  br i1 %63, label %64, label %77

64:                                               ; preds = %52
  %65 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %61, i64 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %61, i64 0, i32 0, i32 1
  store i32 %59, i32* %66, align 8
  %67 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %61, i64 0, i32 0, i32 2
  store i8 0, i8* %67, align 4
  %68 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %61, i64 0, i32 0, i32 3
  store i32 -2, i32* %68, align 8
  %69 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %61, i64 0, i32 0, i32 5
  store i32 1, i32* %69, align 4
  %70 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %61, i64 0, i32 0, i32 6
  store i32 0, i32* %70, align 8
  %71 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %61, i64 0, i32 0, i32 7
  store i32 0, i32* %71, align 4
  %72 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %61, i64 0, i32 0, i32 4
  %73 = bitcast %struct.SkIRect* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %73, i8 0, i64 16, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11SkWebpCodec5FrameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %65, align 8
  %74 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %61, i64 0, i32 1
  store i32 %60, i32* %74, align 8
  %75 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %61, i64 1
  %76 = ptrtoint %"class.SkWebpCodec::Frame"* %75 to i64
  store i64 %76, i64* %13, align 8
  br label %79

77:                                               ; preds = %52
  call void @_ZNSt3__16vectorIN11SkWebpCodec5FrameENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKiN13SkEncodedInfo5AlphaEEEEvDpOT_(%"class.std::__1::vector"* %11, i32* nonnull dereferenceable(4) %2, i32* nonnull dereferenceable(4) %3) #14
  %78 = load i32, i32* %2, align 4
  br label %79

79:                                               ; preds = %64, %77
  %80 = phi i32 [ %59, %64 ], [ %78, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #14
  %81 = sext i32 %80 to i64
  %82 = load %"class.SkWebpCodec::Frame"*, %"class.SkWebpCodec::Frame"** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #14
  %83 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %82, i64 %81, i32 0
  %84 = load i32, i32* %37, align 8
  %85 = load i32, i32* %38, align 4
  %86 = load i32, i32* %39, align 8
  %87 = load i32, i32* %40, align 4
  %88 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %82, i64 %81, i32 0, i32 4, i32 0
  store i32 %84, i32* %88, align 4
  %89 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %82, i64 %81, i32 0, i32 4, i32 1
  store i32 %85, i32* %89, align 4
  %90 = sext i32 %84 to i64
  %91 = sext i32 %86 to i64
  %92 = add nsw i64 %91, %90
  %93 = icmp slt i64 %92, 2147483647
  %94 = select i1 %93, i64 %92, i64 2147483647
  %95 = icmp sgt i64 %94, -2147483647
  %96 = select i1 %95, i64 %94, i64 -2147483647
  %97 = trunc i64 %96 to i32
  %98 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %82, i64 %81, i32 0, i32 4, i32 2
  store i32 %97, i32* %98, align 4
  %99 = sext i32 %85 to i64
  %100 = sext i32 %87 to i64
  %101 = add nsw i64 %100, %99
  %102 = icmp slt i64 %101, 2147483647
  %103 = select i1 %102, i64 %101, i64 2147483647
  %104 = icmp sgt i64 %103, -2147483647
  %105 = select i1 %104, i64 %103, i64 -2147483647
  %106 = trunc i64 %105 to i32
  %107 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %82, i64 %81, i32 0, i32 4, i32 3
  store i32 %106, i32* %107, align 4
  %108 = load i32, i32* %41, align 4
  %109 = icmp eq i32 %108, 1
  %110 = select i1 %109, i32 2, i32 1
  %111 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %82, i64 %81, i32 0, i32 5
  store i32 %110, i32* %111, align 4
  %112 = load i32, i32* %42, align 8
  %113 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %82, i64 %81, i32 0, i32 6
  store i32 %112, i32* %113, align 8
  %114 = load i32, i32* %43, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %118, label %116

116:                                              ; preds = %79
  %117 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %82, i64 %81, i32 0, i32 7
  store i32 1, i32* %117, align 4
  br label %118

118:                                              ; preds = %79, %116
  call void @_ZN13SkFrameHolder24setAlphaAndRequiredFrameEP7SkFrame(%class.SkFrameHolder* %44, %class.SkFrame* %83) #14
  call void @WebPDemuxReleaseIterator(%struct.WebPIterator* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %31) #14
  %119 = icmp eq i32 %48, %25
  br i1 %119, label %120, label %45

120:                                              ; preds = %118, %27, %51
  %121 = load i64, i64* %13, align 8
  %122 = load i64, i64* %15, align 8
  %123 = sub i64 %121, %122
  %124 = sdiv exact i64 %123, 56
  %125 = trunc i64 %124 to i32
  br label %126

126:                                              ; preds = %10, %23, %120, %1
  %127 = phi i32 [ 1, %1 ], [ %19, %10 ], [ %125, %120 ], [ %19, %23 ]
  ret i32 %127
}

declare void @_ZN13SkFrameHolder24setAlphaAndRequiredFrameEP7SkFrame(%class.SkFrameHolder*, %class.SkFrame*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkFrame* @_ZNK11SkWebpCodec11FrameHolder10onGetFrameEi(%"class.SkWebpCodec::FrameHolder"* nocapture readonly, i32) unnamed_addr #5 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.SkWebpCodec::FrameHolder", %"class.SkWebpCodec::FrameHolder"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.SkWebpCodec::Frame"*, %"class.SkWebpCodec::Frame"** %4, align 8
  %6 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %5, i64 %3, i32 0
  ret %class.SkFrame* %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.SkWebpCodec::Frame"* @_ZNK11SkWebpCodec11FrameHolder5frameEi(%"class.SkWebpCodec::FrameHolder"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.SkWebpCodec::FrameHolder", %"class.SkWebpCodec::FrameHolder"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.SkWebpCodec::Frame"*, %"class.SkWebpCodec::Frame"** %4, align 8
  %6 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %5, i64 %3
  ret %"class.SkWebpCodec::Frame"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11SkWebpCodec14onGetFrameInfoEiPN7SkCodec9FrameInfoE(%class.SkWebpCodec* nocapture readonly, i32, %"struct.SkCodec::FrameInfo"*) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 4, i32 1
  %5 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %6 = bitcast %"class.SkWebpCodec::Frame"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 56
  %12 = trunc i64 %11 to i32
  %13 = icmp sgt i32 %12, %1
  br i1 %13, label %14, label %23

14:                                               ; preds = %3
  %15 = inttoptr i64 %9 to %"class.SkWebpCodec::Frame"*
  %16 = sext i32 %1 to i64
  %17 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %15, i64 %16
  %18 = icmp eq %"class.SkWebpCodec::Frame"* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  %20 = icmp eq %"struct.SkCodec::FrameInfo"* %2, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %17, i64 0, i32 0
  tail call void @_ZNK7SkFrame6fillInEPN7SkCodec9FrameInfoEb(%class.SkFrame* %22, %"struct.SkCodec::FrameInfo"* nonnull %2, i1 zeroext true) #14
  br label %23

23:                                               ; preds = %14, %19, %21, %3
  %24 = phi i1 [ false, %3 ], [ false, %14 ], [ true, %19 ], [ true, %21 ]
  ret i1 %24
}

declare void @_ZNK7SkFrame6fillInEPN7SkCodec9FrameInfoEb(%class.SkFrame*, %"struct.SkCodec::FrameInfo"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11SkWebpCodec11onGetPixelsERK11SkImageInfoPvmRKN7SkCodec7OptionsEPi(%class.SkWebpCodec*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"* nocapture readonly dereferenceable(24), i32* nocapture) unnamed_addr #2 align 2 {
  %7 = alloca %struct.SkIRect, align 4
  %8 = alloca %struct.WebPDecoderConfig, align 8
  %9 = alloca %struct.WebPIterator, align 8
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %struct.SkIRect*
  %12 = alloca { i64, i64 }, align 8
  %13 = alloca %struct.SkIRect, align 4
  %14 = alloca %struct.SkIRect, align 4
  %15 = alloca %struct.SkImageInfo, align 8
  %16 = alloca %class.SkBitmap, align 8
  %17 = alloca i32, align 4
  %18 = alloca %class.SkBitmap, align 8
  %19 = alloca %struct.SkImageInfo, align 8
  %20 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %4, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = bitcast %struct.WebPDecoderConfig* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %22) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 240, i1 false)
  %23 = call i32 @WebPInitDecoderConfigInternal(%struct.WebPDecoderConfig* nonnull %8, i32 521) #14
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %581, label %25

25:                                               ; preds = %6
  %26 = getelementptr inbounds %struct.WebPDecoderConfig, %struct.WebPDecoderConfig* %8, i64 0, i32 1
  %27 = bitcast %struct.WebPIterator* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %27) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 80, i1 false)
  %28 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %29 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %28, align 8
  %30 = add nsw i32 %21, 1
  %31 = call i32 @WebPDemuxGetFrame(%struct.WebPDemuxer* %29, i32 %30, %struct.WebPIterator* nonnull %9) #14
  %32 = icmp eq i32 %21, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %25
  %34 = sext i32 %21 to i64
  %35 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %36 = load %"class.SkWebpCodec::Frame"*, %"class.SkWebpCodec::Frame"** %35, align 8
  %37 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %36, i64 %34, i32 0, i32 3
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, -1
  br label %40

40:                                               ; preds = %25, %33
  %41 = phi i1 [ %39, %33 ], [ true, %25 ]
  %42 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #14
  %43 = bitcast { i64, i64 }* %10 to i32*
  %44 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %11, i64 0, i32 1
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %46 = bitcast i64* %45 to i32*
  %47 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %11, i64 0, i32 3
  %48 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %9, i64 0, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %9, i64 0, i32 3
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %9, i64 0, i32 4
  %53 = load i32, i32* %52, align 8
  %54 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %9, i64 0, i32 5
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %49 to i64
  %57 = sext i32 %53 to i64
  %58 = add nsw i64 %57, %56
  %59 = icmp slt i64 %58, 2147483647
  %60 = select i1 %59, i64 %58, i64 2147483647
  %61 = icmp sgt i64 %60, -2147483647
  %62 = select i1 %61, i64 %60, i64 -2147483647
  %63 = sext i32 %51 to i64
  %64 = sext i32 %55 to i64
  %65 = add nsw i64 %64, %63
  %66 = icmp slt i64 %65, 2147483647
  %67 = select i1 %66, i64 %65, i64 2147483647
  %68 = icmp sgt i64 %67, -2147483647
  %69 = select i1 %68, i64 %67, i64 -2147483647
  %70 = zext i32 %51 to i64
  %71 = shl nuw i64 %70, 32
  %72 = zext i32 %49 to i64
  %73 = or i64 %71, %72
  %74 = shl nsw i64 %69, 32
  %75 = and i64 %62, 4294967295
  %76 = or i64 %74, %75
  %77 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  store i64 %73, i64* %77, align 8
  store i64 %76, i64* %45, align 8
  %78 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #14
  %79 = bitcast %class.SkWebpCodec* %0 to %class.SkCodec*
  %80 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %81 = load i32, i32* %80, align 8
  %82 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 0, i32 0, i32 1, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw i64 %84, 32
  %86 = zext i32 %81 to i64
  %87 = or i64 %85, %86
  %88 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  store i64 0, i64* %88, align 8
  %89 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  store i64 %87, i64* %89, align 8
  %90 = call i32 @bcmp(i8* nonnull %42, i8* nonnull %78, i64 16) #14
  %91 = icmp ne i32 %90, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #14
  %92 = and i1 %41, %91
  %93 = trunc i64 %62 to i32
  %94 = trunc i64 %69 to i32
  br i1 %92, label %95, label %102

95:                                               ; preds = %40
  %96 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %4, i64 0, i32 0
  %97 = load i32, i32* %96, align 8
  call void @_ZN9SkSampler4FillERK11SkImageInfoPvmN7SkCodec15ZeroInitializedE(%struct.SkImageInfo* dereferenceable(24) %1, i8* %2, i64 %3, i32 %97) #14
  %98 = load i32, i32* %43, align 8
  %99 = load i32, i32* %44, align 4
  %100 = load i32, i32* %46, align 8
  %101 = load i32, i32* %47, align 4
  br label %102

102:                                              ; preds = %40, %95
  %103 = phi i32 [ %94, %40 ], [ %101, %95 ]
  %104 = phi i32 [ %93, %40 ], [ %100, %95 ]
  %105 = phi i32 [ %51, %40 ], [ %99, %95 ]
  %106 = phi i32 [ %49, %40 ], [ %98, %95 ]
  %107 = sub i32 %104, %106
  %108 = sub i32 %103, %105
  %109 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %4, i64 0, i32 1
  %110 = load %struct.SkIRect*, %struct.SkIRect** %109, align 8
  %111 = icmp eq %struct.SkIRect* %110, null
  %112 = insertelement <4 x i32> undef, i32 %105, i32 0
  %113 = insertelement <4 x i32> %112, i32 %106, i32 1
  %114 = insertelement <4 x i32> %113, i32 %107, i32 2
  %115 = insertelement <4 x i32> %114, i32 %108, i32 3
  br i1 %111, label %235, label %116

116:                                              ; preds = %102
  %117 = bitcast %struct.SkIRect* %110 to i8*
  %118 = bitcast %struct.SkIRect* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %118) #14
  %119 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %13, i64 0, i32 0
  %120 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %13, i64 0, i32 1
  %121 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %13, i64 0, i32 2
  %122 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %13, i64 0, i32 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %118, i8* nonnull align 4 %117, i64 16, i1 false)
  %123 = bitcast %struct.SkIRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %123) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %123, i8 -86, i64 16, i1 false) #14
  %124 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %7, %struct.SkIRect* nonnull dereferenceable(16) %13, %struct.SkIRect* nonnull dereferenceable(16) %11) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %123) #14
  br i1 %124, label %126, label %125

125:                                              ; preds = %116
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %118) #14
  br label %577

126:                                              ; preds = %116
  %127 = load i32, i32* %119, align 4
  %128 = icmp slt i32 %127, %106
  %129 = select i1 %128, i32 %127, i32 %106
  %130 = load i32, i32* %120, align 4
  %131 = icmp slt i32 %130, %105
  %132 = select i1 %131, i32 %130, i32 %105
  %133 = sub nsw i32 0, %129
  %134 = sub nsw i32 0, %132
  %135 = load i32, i32* %43, align 8
  %136 = sext i32 %135 to i64
  %137 = sext i32 %133 to i64
  %138 = add nsw i64 %136, %137
  %139 = icmp slt i64 %138, 2147483647
  %140 = select i1 %139, i64 %138, i64 2147483647
  %141 = icmp sgt i64 %140, -2147483647
  %142 = select i1 %141, i64 %140, i64 -2147483647
  %143 = trunc i64 %142 to i32
  store i32 %143, i32* %43, align 8
  %144 = load i32, i32* %44, align 4
  %145 = sext i32 %144 to i64
  %146 = sext i32 %134 to i64
  %147 = add nsw i64 %145, %146
  %148 = icmp slt i64 %147, 2147483647
  %149 = select i1 %148, i64 %147, i64 2147483647
  %150 = icmp sgt i64 %149, -2147483647
  %151 = select i1 %150, i64 %149, i64 -2147483647
  %152 = trunc i64 %151 to i32
  store i32 %152, i32* %44, align 4
  %153 = load i32, i32* %46, align 8
  %154 = sext i32 %153 to i64
  %155 = add nsw i64 %154, %137
  %156 = icmp slt i64 %155, 2147483647
  %157 = select i1 %156, i64 %155, i64 2147483647
  %158 = icmp sgt i64 %157, -2147483647
  %159 = select i1 %158, i64 %157, i64 -2147483647
  %160 = trunc i64 %159 to i32
  store i32 %160, i32* %46, align 8
  %161 = load i32, i32* %47, align 4
  %162 = sext i32 %161 to i64
  %163 = add nsw i64 %162, %146
  %164 = icmp slt i64 %163, 2147483647
  %165 = select i1 %164, i64 %163, i64 2147483647
  %166 = icmp sgt i64 %165, -2147483647
  %167 = select i1 %166, i64 %165, i64 -2147483647
  %168 = trunc i64 %167 to i32
  store i32 %168, i32* %47, align 4
  %169 = sext i32 %127 to i64
  %170 = add nsw i64 %137, %169
  %171 = icmp slt i64 %170, 2147483647
  %172 = select i1 %171, i64 %170, i64 2147483647
  %173 = icmp sgt i64 %172, -2147483647
  %174 = select i1 %173, i64 %172, i64 -2147483647
  %175 = trunc i64 %174 to i32
  store i32 %175, i32* %119, align 4
  %176 = sext i32 %130 to i64
  %177 = add nsw i64 %146, %176
  %178 = icmp slt i64 %177, 2147483647
  %179 = select i1 %178, i64 %177, i64 2147483647
  %180 = icmp sgt i64 %179, -2147483647
  %181 = select i1 %180, i64 %179, i64 -2147483647
  %182 = trunc i64 %181 to i32
  store i32 %182, i32* %120, align 4
  %183 = load i32, i32* %121, align 4
  %184 = sext i32 %183 to i64
  %185 = add nsw i64 %184, %137
  %186 = icmp slt i64 %185, 2147483647
  %187 = select i1 %186, i64 %185, i64 2147483647
  %188 = icmp sgt i64 %187, -2147483647
  %189 = select i1 %188, i64 %187, i64 -2147483647
  %190 = trunc i64 %189 to i32
  store i32 %190, i32* %121, align 4
  %191 = load i32, i32* %122, align 4
  %192 = sext i32 %191 to i64
  %193 = add nsw i64 %192, %146
  %194 = icmp slt i64 %193, 2147483647
  %195 = select i1 %194, i64 %193, i64 2147483647
  %196 = icmp sgt i64 %195, -2147483647
  %197 = select i1 %196, i64 %195, i64 -2147483647
  %198 = trunc i64 %197 to i32
  store i32 %198, i32* %122, align 4
  %199 = bitcast %struct.SkIRect* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %199) #14
  %200 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %14, i64 0, i32 0
  %201 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %14, i64 0, i32 1
  %202 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %14, i64 0, i32 2
  %203 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %14, i64 0, i32 3
  %204 = bitcast %struct.SkIRect* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %204, i8 -86, i64 16, i1 false)
  %205 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %14, %struct.SkIRect* nonnull dereferenceable(16) %11, %struct.SkIRect* nonnull dereferenceable(16) %13) #14
  %206 = load i32, i32* %202, align 4
  %207 = load i32, i32* %200, align 4
  %208 = load i32, i32* %203, align 4
  %209 = load i32, i32* %201, align 4
  %210 = insertelement <4 x i32> %113, i32 %206, i32 2
  %211 = insertelement <4 x i32> %210, i32 %208, i32 3
  %212 = insertelement <4 x i32> undef, i32 %132, i32 0
  %213 = insertelement <4 x i32> %212, i32 %129, i32 1
  %214 = insertelement <4 x i32> %213, i32 %207, i32 2
  %215 = insertelement <4 x i32> %214, i32 %209, i32 3
  %216 = sub <4 x i32> %211, %215
  %217 = getelementptr inbounds %struct.WebPDecoderConfig, %struct.WebPDecoderConfig* %8, i64 0, i32 2, i32 2
  store i32 1, i32* %217, align 8
  %218 = load i32, i32* %119, align 4
  %219 = getelementptr inbounds %struct.WebPDecoderConfig, %struct.WebPDecoderConfig* %8, i64 0, i32 2, i32 3
  store i32 %218, i32* %219, align 4
  %220 = load i32, i32* %120, align 4
  %221 = getelementptr inbounds %struct.WebPDecoderConfig, %struct.WebPDecoderConfig* %8, i64 0, i32 2, i32 4
  store i32 %220, i32* %221, align 8
  %222 = getelementptr inbounds %struct.WebPDecoderConfig, %struct.WebPDecoderConfig* %8, i64 0, i32 2, i32 5
  %223 = extractelement <4 x i32> %216, i32 2
  store i32 %223, i32* %222, align 4
  %224 = getelementptr inbounds %struct.WebPDecoderConfig, %struct.WebPDecoderConfig* %8, i64 0, i32 2, i32 6
  %225 = extractelement <4 x i32> %216, i32 3
  store i32 %225, i32* %224, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %199) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %118) #14
  %226 = load %struct.SkIRect*, %struct.SkIRect** %109, align 8
  %227 = icmp eq %struct.SkIRect* %226, null
  br i1 %227, label %235, label %228

228:                                              ; preds = %126
  %229 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %226, i64 0, i32 2
  %230 = bitcast i32* %229 to <2 x i32>*
  %231 = load <2 x i32>, <2 x i32>* %230, align 4
  %232 = bitcast %struct.SkIRect* %226 to <2 x i32>*
  %233 = load <2 x i32>, <2 x i32>* %232, align 4
  %234 = sub <2 x i32> %231, %233
  br label %239

235:                                              ; preds = %102, %126
  %236 = phi <4 x i32> [ %216, %126 ], [ %115, %102 ]
  %237 = bitcast i32* %80 to <2 x i32>*
  %238 = load <2 x i32>, <2 x i32>* %237, align 8
  br label %239

239:                                              ; preds = %235, %228
  %240 = phi <4 x i32> [ %216, %228 ], [ %236, %235 ]
  %241 = phi <2 x i32> [ %234, %228 ], [ %238, %235 ]
  %242 = extractelement <2 x i32> %241, i32 1
  %243 = zext i32 %242 to i64
  %244 = shl nuw i64 %243, 32
  %245 = extractelement <2 x i32> %241, i32 0
  %246 = zext i32 %245 to i64
  %247 = or i64 %244, %246
  %248 = insertelement <2 x i64> undef, i64 %243, i32 0
  %249 = insertelement <2 x i64> %248, i64 %247, i32 1
  %250 = trunc <2 x i64> %249 to <2 x i32>
  %251 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1
  %252 = bitcast %struct.SkISize* %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = trunc i64 %253 to i32
  %255 = lshr i64 %253, 32
  %256 = trunc i64 %255 to i32
  %257 = extractelement <2 x i32> %250, i32 1
  %258 = icmp ne i32 %257, %254
  %259 = extractelement <2 x i32> %250, i32 0
  %260 = icmp ne i32 %259, %256
  %261 = or i1 %258, %260
  br i1 %261, label %262, label %294

262:                                              ; preds = %239
  %263 = getelementptr inbounds %struct.WebPDecoderConfig, %struct.WebPDecoderConfig* %8, i64 0, i32 2, i32 7
  store i32 1, i32* %263, align 4
  %264 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %265 = load i32, i32* %264, align 4
  br i1 %91, label %266, label %281

266:                                              ; preds = %262
  %267 = insertelement <2 x i32> undef, i32 %265, i32 0
  %268 = insertelement <2 x i32> %267, i32 %254, i32 1
  %269 = sitofp <2 x i32> %268 to <2 x float>
  %270 = sitofp <2 x i32> %250 to <2 x float>
  %271 = fdiv <2 x float> %269, %270
  %272 = shufflevector <2 x float> %271, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 1, i32 0>
  %273 = sitofp <4 x i32> %240 to <4 x float>
  %274 = fmul <4 x float> %272, %273
  %275 = fptosi <4 x float> %274 to <4 x i32>
  %276 = extractelement <4 x i32> %275, i32 2
  %277 = icmp ne i32 %276, 0
  %278 = extractelement <4 x i32> %275, i32 3
  %279 = icmp ne i32 %278, 0
  %280 = and i1 %277, %279
  br i1 %280, label %288, label %577

281:                                              ; preds = %262
  %282 = extractelement <4 x i32> %240, i32 0
  %283 = insertelement <4 x i32> undef, i32 %282, i32 0
  %284 = extractelement <4 x i32> %240, i32 1
  %285 = insertelement <4 x i32> %283, i32 %284, i32 1
  %286 = insertelement <4 x i32> %285, i32 %254, i32 2
  %287 = insertelement <4 x i32> %286, i32 %265, i32 3
  br label %288

288:                                              ; preds = %266, %281
  %289 = phi <4 x i32> [ %275, %266 ], [ %287, %281 ]
  %290 = getelementptr inbounds %struct.WebPDecoderConfig, %struct.WebPDecoderConfig* %8, i64 0, i32 2, i32 8
  %291 = extractelement <4 x i32> %289, i32 2
  store i32 %291, i32* %290, align 8
  %292 = getelementptr inbounds %struct.WebPDecoderConfig, %struct.WebPDecoderConfig* %8, i64 0, i32 2, i32 9
  %293 = extractelement <4 x i32> %289, i32 3
  store i32 %293, i32* %292, align 4
  br label %294

294:                                              ; preds = %239, %288
  %295 = phi <4 x i32> [ %289, %288 ], [ %240, %239 ]
  br i1 %41, label %304, label %296

296:                                              ; preds = %294
  %297 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %9, i64 0, i32 11
  %298 = load i32, i32* %297, align 4
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %304

300:                                              ; preds = %296
  %301 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %9, i64 0, i32 10
  %302 = load i32, i32* %301, align 8
  %303 = icmp ne i32 %302, 0
  br label %304

304:                                              ; preds = %300, %296, %294
  %305 = phi i1 [ false, %296 ], [ false, %294 ], [ %303, %300 ]
  %306 = bitcast %struct.SkImageInfo* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %306) #14
  %307 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %15, i64 0, i32 0, i32 0, i32 0
  %308 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %15, i64 0, i32 0, i32 1
  %309 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %15, i64 0, i32 0, i32 2
  %310 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %311 = bitcast %struct.SkImageInfo* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %311, i8 -86, i64 24, i1 false)
  %312 = load %class.SkColorSpace*, %class.SkColorSpace** %310, align 8
  %313 = icmp eq %class.SkColorSpace* %312, null
  br i1 %313, label %318, label %314

314:                                              ; preds = %304
  %315 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %312, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %316 = atomicrmw add i32* %315, i32 1 monotonic
  %317 = load i64, i64* %252, align 8
  br label %318

318:                                              ; preds = %304, %314
  %319 = phi i64 [ %253, %304 ], [ %317, %314 ]
  store %class.SkColorSpace* %312, %class.SkColorSpace** %307, align 8
  %320 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %321 = bitcast i32* %320 to i64*
  %322 = bitcast i32* %308 to i64*
  %323 = load i64, i64* %321, align 8
  store i64 %323, i64* %322, align 8
  %324 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %15, i64 0, i32 1
  %325 = bitcast %struct.SkISize* %324 to i64*
  store i64 %319, i64* %325, align 8
  %326 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %9, i64 0, i32 10
  %327 = load i32, i32* %326, align 8
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %350

329:                                              ; preds = %318
  br i1 %313, label %330, label %335

330:                                              ; preds = %329
  %331 = ptrtoint %class.SkColorSpace* %312 to i64
  %332 = and i64 %323, 4294967295
  %333 = or i64 %332, 4294967296
  %334 = bitcast %struct.SkImageInfo* %15 to i64*
  store i64 %331, i64* %334, align 8
  br label %378

335:                                              ; preds = %329
  %336 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %312, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = atomicrmw add i32* %336, i32 1 monotonic, !noalias !6
  %338 = load %class.SkColorSpace*, %class.SkColorSpace** %307, align 8
  %339 = bitcast %class.SkColorSpace* %338 to i8*
  %340 = ptrtoint %class.SkColorSpace* %312 to i64
  %341 = and i64 %323, 4294967295
  %342 = or i64 %341, 4294967296
  %343 = bitcast %struct.SkImageInfo* %15 to i64*
  store i64 %340, i64* %343, align 8
  %344 = icmp eq %class.SkColorSpace* %338, null
  br i1 %344, label %378, label %345

345:                                              ; preds = %335
  %346 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %338, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %347 = atomicrmw add i32* %346, i32 -1 acq_rel
  %348 = icmp eq i32 %347, 1
  br i1 %348, label %349, label %378

349:                                              ; preds = %345
  call void @_ZdlPv(i8* %339) #15
  br label %378

350:                                              ; preds = %318
  %351 = lshr i64 %323, 32
  %352 = trunc i64 %351 to i32
  %353 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 0, i32 0, i32 10
  %354 = load i32, i32* %353, align 8
  %355 = icmp ne i32 %354, 0
  %356 = or i1 %305, %355
  br i1 %356, label %357, label %381

357:                                              ; preds = %350
  br i1 %313, label %358, label %363

358:                                              ; preds = %357
  %359 = ptrtoint %class.SkColorSpace* %312 to i64
  %360 = and i64 %323, 4294967295
  %361 = or i64 %360, 12884901888
  %362 = bitcast %struct.SkImageInfo* %15 to i64*
  store i64 %359, i64* %362, align 8
  br label %378

363:                                              ; preds = %357
  %364 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %312, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %365 = atomicrmw add i32* %364, i32 1 monotonic, !noalias !13
  %366 = load %class.SkColorSpace*, %class.SkColorSpace** %307, align 8
  %367 = bitcast %class.SkColorSpace* %366 to i8*
  %368 = ptrtoint %class.SkColorSpace* %312 to i64
  %369 = and i64 %323, 4294967295
  %370 = or i64 %369, 12884901888
  %371 = bitcast %struct.SkImageInfo* %15 to i64*
  store i64 %368, i64* %371, align 8
  %372 = icmp eq %class.SkColorSpace* %366, null
  br i1 %372, label %378, label %373

373:                                              ; preds = %363
  %374 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %366, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %375 = atomicrmw add i32* %374, i32 -1 acq_rel
  %376 = icmp eq i32 %375, 1
  br i1 %376, label %377, label %378

377:                                              ; preds = %373
  call void @_ZdlPv(i8* %367) #15
  br label %378

378:                                              ; preds = %363, %373, %377, %358, %335, %345, %349, %330
  %379 = phi i64 [ %333, %330 ], [ %342, %349 ], [ %342, %345 ], [ %342, %335 ], [ %361, %358 ], [ %370, %377 ], [ %370, %373 ], [ %370, %363 ]
  %380 = phi i32 [ 1, %330 ], [ 1, %349 ], [ 1, %345 ], [ 1, %335 ], [ 3, %358 ], [ 3, %377 ], [ 3, %373 ], [ 3, %363 ]
  store i64 %379, i64* %322, align 8
  store i64 %319, i64* %325, align 8
  br label %381

381:                                              ; preds = %378, %350
  %382 = phi i32 [ %352, %350 ], [ %380, %378 ]
  %383 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 0, i32 0, i32 10
  %384 = load i32, i32* %383, align 8
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %412, label %386

386:                                              ; preds = %381
  %387 = load %class.SkColorSpace*, %class.SkColorSpace** %307, align 8
  %388 = icmp eq %class.SkColorSpace* %387, null
  br i1 %388, label %389, label %394

389:                                              ; preds = %386
  %390 = zext i32 %382 to i64
  %391 = shl nuw i64 %390, 32
  %392 = or i64 %391, 6
  %393 = bitcast %struct.SkImageInfo* %15 to i64*
  store i64 0, i64* %393, align 8
  br label %410

394:                                              ; preds = %386
  %395 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %387, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %396 = atomicrmw add i32* %395, i32 1 monotonic, !noalias !20
  %397 = load %class.SkColorSpace*, %class.SkColorSpace** %307, align 8
  %398 = ptrtoint %class.SkColorSpace* %387 to i64
  %399 = zext i32 %382 to i64
  %400 = shl nuw i64 %399, 32
  %401 = or i64 %400, 6
  %402 = bitcast %struct.SkImageInfo* %15 to i64*
  store i64 %398, i64* %402, align 8
  %403 = icmp eq %class.SkColorSpace* %397, null
  br i1 %403, label %410, label %404

404:                                              ; preds = %394
  %405 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %397, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %406 = atomicrmw add i32* %405, i32 -1 acq_rel
  %407 = icmp eq i32 %406, 1
  br i1 %407, label %408, label %410

408:                                              ; preds = %404
  %409 = bitcast %class.SkColorSpace* %397 to i8*
  call void @_ZdlPv(i8* %409) #15
  br label %410

410:                                              ; preds = %408, %404, %394, %389
  %411 = phi i64 [ %392, %389 ], [ %401, %394 ], [ %401, %404 ], [ %401, %408 ]
  store i64 %411, i64* %322, align 8
  store i64 %319, i64* %325, align 8
  br label %412

412:                                              ; preds = %381, %410
  %413 = bitcast %class.SkBitmap* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %413) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %413, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %16) #14
  %414 = load i32, i32* %383, align 8
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %419, label %416

416:                                              ; preds = %412
  %417 = load i32, i32* %320, align 8
  switch i32 %417, label %420 [
    i32 4, label %418
    i32 6, label %418
  ]

418:                                              ; preds = %416, %416
  br i1 %305, label %420, label %421

419:                                              ; preds = %412
  br i1 %305, label %420, label %421

420:                                              ; preds = %416, %418, %419
  call void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap* nonnull %16, %struct.SkImageInfo* nonnull dereferenceable(24) %15) #14
  br label %423

421:                                              ; preds = %418, %419
  %422 = call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* nonnull %16, %struct.SkImageInfo* nonnull dereferenceable(24) %15, i8* %2, i64 %3, void (i8*, i8*)* null, i8* null) #14
  br label %423

423:                                              ; preds = %421, %420
  %424 = load i32, i32* %308, align 8
  %425 = load i32, i32* %309, align 4
  %426 = icmp eq i32 %425, 2
  switch i32 %424, label %431 [
    i32 6, label %427
    i32 4, label %429
    i32 2, label %432
  ]

427:                                              ; preds = %423
  %428 = select i1 %426, i32 8, i32 3
  br label %432

429:                                              ; preds = %423
  %430 = select i1 %426, i32 7, i32 1
  br label %432

431:                                              ; preds = %423
  br label %432

432:                                              ; preds = %423, %427, %429, %431
  %433 = phi i32 [ 13, %431 ], [ %430, %429 ], [ %428, %427 ], [ 6, %423 ]
  %434 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %26, i64 0, i32 0
  store i32 %433, i32* %434, align 8
  %435 = getelementptr inbounds %struct.WebPDecoderConfig, %struct.WebPDecoderConfig* %8, i64 0, i32 1, i32 3
  store i32 1, i32* %435, align 4
  %436 = extractelement <4 x i32> %295, i32 0
  %437 = extractelement <4 x i32> %295, i32 1
  %438 = call i8* @_ZNK8SkBitmap7getAddrEii(%class.SkBitmap* nonnull %16, i32 %437, i32 %436) #14
  %439 = getelementptr inbounds %struct.WebPDecoderConfig, %struct.WebPDecoderConfig* %8, i64 0, i32 1, i32 4, i32 0, i32 0
  store i8* %438, i8** %439, align 8
  %440 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %16, i64 0, i32 1, i32 1
  %441 = load i64, i64* %440, align 8
  %442 = trunc i64 %441 to i32
  %443 = getelementptr inbounds %struct.WebPDecoderConfig, %struct.WebPDecoderConfig* %8, i64 0, i32 1, i32 4, i32 0, i32 1
  %444 = bitcast i8** %443 to i32*
  store i32 %442, i32* %444, align 8
  %445 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %16, i64 0, i32 1, i32 2
  %446 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %445, i64 %441) #14
  %447 = getelementptr inbounds %struct.WebPDecoderConfig, %struct.WebPDecoderConfig* %8, i64 0, i32 1, i32 4, i32 0, i32 2
  %448 = bitcast i8** %447 to i64*
  store i64 %446, i64* %448, align 8
  %449 = call %struct.WebPIDecoder* @WebPIDecode(i8* null, i64 0, %struct.WebPDecoderConfig* nonnull %8) #14
  %450 = icmp eq %struct.WebPIDecoder* %449, null
  br i1 %450, label %566, label %451

451:                                              ; preds = %432
  %452 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %452) #14
  store i32 0, i32* %17, align 4
  %453 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %9, i64 0, i32 9, i32 0
  %454 = load i8*, i8** %453, align 8
  %455 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %9, i64 0, i32 9, i32 1
  %456 = load i64, i64* %455, align 8
  %457 = call i32 @WebPIUpdate(%struct.WebPIDecoder* nonnull %449, i8* %454, i64 %456) #14
  switch i32 %457, label %564 [
    i32 0, label %458
    i32 5, label %460
  ]

458:                                              ; preds = %451
  %459 = extractelement <4 x i32> %295, i32 3
  store i32 %459, i32* %17, align 4
  br label %468

460:                                              ; preds = %451
  %461 = call i8* @WebPIDecGetRGB(%struct.WebPIDecoder* nonnull %449, i32* nonnull %17, i32* null, i32* null, i32* null) #14
  %462 = icmp eq i8* %461, null
  %463 = load i32, i32* %17, align 4
  %464 = icmp slt i32 %463, 1
  %465 = or i1 %462, %464
  br i1 %465, label %564, label %466

466:                                              ; preds = %460
  %467 = add nsw i32 %463, %436
  store i32 %467, i32* %5, align 4
  br label %468

468:                                              ; preds = %466, %458
  %469 = phi i32 [ 1, %466 ], [ 0, %458 ]
  %470 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0
  %471 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %470) #14
  %472 = sext i32 %471 to i64
  %473 = sext i32 %437 to i64
  %474 = mul nsw i64 %472, %473
  %475 = sext i32 %436 to i64
  %476 = mul i64 %475, %3
  %477 = add i64 %474, %476
  %478 = getelementptr inbounds i8, i8* %2, i64 %477
  %479 = load i32, i32* %444, align 8
  %480 = sext i32 %479 to i64
  %481 = load i32, i32* %320, align 8
  %482 = load i32, i32* %383, align 8
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %542, label %484

484:                                              ; preds = %468
  %485 = load i8*, i8** %439, align 8
  %486 = bitcast %class.SkBitmap* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %486) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %486, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %18) #14
  br i1 %305, label %487, label %515

487:                                              ; preds = %484
  %488 = bitcast %struct.SkImageInfo* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %488) #14
  %489 = extractelement <4 x i32> %295, i32 2
  %490 = zext i32 %489 to i64
  %491 = or i64 %490, 4294967296
  %492 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %19, i64 0, i32 0, i32 0, i32 0
  %493 = load %class.SkColorSpace*, %class.SkColorSpace** %310, align 8, !noalias !27
  %494 = icmp eq %class.SkColorSpace* %493, null
  br i1 %494, label %498, label %495

495:                                              ; preds = %487
  %496 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %493, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %497 = atomicrmw add i32* %496, i32 1 monotonic, !noalias !27
  br label %498

498:                                              ; preds = %487, %495
  store %class.SkColorSpace* %493, %class.SkColorSpace** %492, align 8, !alias.scope !27
  %499 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %19, i64 0, i32 0, i32 1
  %500 = bitcast i32* %499 to i64*
  %501 = load i64, i64* %321, align 8, !noalias !27
  store i64 %501, i64* %500, align 8, !alias.scope !27
  %502 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %19, i64 0, i32 1
  %503 = bitcast %struct.SkISize* %502 to i64*
  store i64 %491, i64* %503, align 8, !alias.scope !27
  call void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap* nonnull %18, %struct.SkImageInfo* nonnull dereferenceable(24) %19) #14
  %504 = load %class.SkColorSpace*, %class.SkColorSpace** %492, align 8
  %505 = icmp eq %class.SkColorSpace* %504, null
  br i1 %505, label %512, label %506

506:                                              ; preds = %498
  %507 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %504, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %508 = atomicrmw add i32* %507, i32 -1 acq_rel
  %509 = icmp eq i32 %508, 1
  br i1 %509, label %510, label %512

510:                                              ; preds = %506
  %511 = bitcast %class.SkColorSpace* %504 to i8*
  call void @_ZdlPv(i8* %511) #15
  br label %512

512:                                              ; preds = %498, %506, %510
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %488) #14
  %513 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %18, i64 0, i32 1, i32 0
  %514 = load i8*, i8** %513, align 8
  br label %515

515:                                              ; preds = %484, %512
  %516 = phi i8* [ %514, %512 ], [ %478, %484 ]
  %517 = load i32, i32* %17, align 4
  %518 = icmp sgt i32 %517, 0
  br i1 %518, label %519, label %522

519:                                              ; preds = %515
  %520 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %521 = extractelement <4 x i32> %295, i32 2
  br label %523

522:                                              ; preds = %535, %515
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %18) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %486) #14
  br label %564

523:                                              ; preds = %519, %535
  %524 = phi i32 [ 0, %519 ], [ %539, %535 ]
  %525 = phi i8* [ %516, %519 ], [ %537, %535 ]
  %526 = phi i8* [ %485, %519 ], [ %538, %535 ]
  %527 = phi i8* [ %478, %519 ], [ %536, %535 ]
  call void @_ZNK7SkCodec15applyColorXformEPvPKvi(%class.SkCodec* %79, i8* %525, i8* %526, i32 %521) #14
  br i1 %305, label %528, label %533

528:                                              ; preds = %523
  %529 = load i32, i32* %520, align 4
  %530 = load i32, i32* %326, align 8
  %531 = icmp ne i32 %530, 0
  call fastcc void @_ZL10blend_line11SkColorTypePvS_PKv11SkAlphaTypebi(i32 %481, i8* %527, i32 %481, i8* %525, i32 %529, i1 zeroext %531, i32 %521)
  %532 = getelementptr inbounds i8, i8* %527, i64 %3
  br label %535

533:                                              ; preds = %523
  %534 = getelementptr inbounds i8, i8* %525, i64 %3
  br label %535

535:                                              ; preds = %533, %528
  %536 = phi i8* [ %532, %528 ], [ %527, %533 ]
  %537 = phi i8* [ %525, %528 ], [ %534, %533 ]
  %538 = getelementptr inbounds i8, i8* %526, i64 %480
  %539 = add nuw nsw i32 %524, 1
  %540 = load i32, i32* %17, align 4
  %541 = icmp slt i32 %539, %540
  br i1 %541, label %523, label %522

542:                                              ; preds = %468
  %543 = load i32, i32* %17, align 4
  %544 = icmp sgt i32 %543, 0
  %545 = and i1 %305, %544
  br i1 %545, label %546, label %564

546:                                              ; preds = %542
  %547 = load i8*, i8** %439, align 8
  %548 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %16, i64 0, i32 1, i32 2, i32 0, i32 1
  %549 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %550 = extractelement <4 x i32> %295, i32 2
  br label %551

551:                                              ; preds = %546, %551
  %552 = phi i32 [ 0, %546 ], [ %561, %551 ]
  %553 = phi i8* [ %547, %546 ], [ %559, %551 ]
  %554 = phi i8* [ %478, %546 ], [ %560, %551 ]
  %555 = load i32, i32* %548, align 8
  %556 = load i32, i32* %549, align 4
  %557 = load i32, i32* %326, align 8
  %558 = icmp ne i32 %557, 0
  call fastcc void @_ZL10blend_line11SkColorTypePvS_PKv11SkAlphaTypebi(i32 %481, i8* %554, i32 %555, i8* %553, i32 %556, i1 zeroext %558, i32 %550)
  %559 = getelementptr inbounds i8, i8* %553, i64 %480
  %560 = getelementptr inbounds i8, i8* %554, i64 %3
  %561 = add nuw nsw i32 %552, 1
  %562 = load i32, i32* %17, align 4
  %563 = icmp slt i32 %561, %562
  br i1 %563, label %551, label %564

564:                                              ; preds = %551, %522, %542, %451, %460
  %565 = phi i32 [ %469, %542 ], [ 6, %451 ], [ 6, %460 ], [ %469, %522 ], [ %469, %551 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %452) #14
  call void @WebPIDelete(%struct.WebPIDecoder* nonnull %449) #14
  br label %566

566:                                              ; preds = %432, %564
  %567 = phi i32 [ %565, %564 ], [ 6, %432 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %16) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %413) #14
  %568 = load %class.SkColorSpace*, %class.SkColorSpace** %307, align 8
  %569 = icmp eq %class.SkColorSpace* %568, null
  br i1 %569, label %576, label %570

570:                                              ; preds = %566
  %571 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %568, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %572 = atomicrmw add i32* %571, i32 -1 acq_rel
  %573 = icmp eq i32 %572, 1
  br i1 %573, label %574, label %576

574:                                              ; preds = %570
  %575 = bitcast %class.SkColorSpace* %568 to i8*
  call void @_ZdlPv(i8* %575) #15
  br label %576

576:                                              ; preds = %566, %570, %574
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %306) #14
  br label %577

577:                                              ; preds = %576, %266, %125
  %578 = phi i32 [ 0, %125 ], [ %567, %576 ], [ 0, %266 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #14
  call void @WebPDemuxReleaseIterator(%struct.WebPIterator* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %27) #14
  %579 = icmp eq %struct.WebPDecBuffer* %26, null
  br i1 %579, label %581, label %580

580:                                              ; preds = %577
  call void @WebPFreeDecBuffer(%struct.WebPDecBuffer* nonnull %26) #14
  br label %581

581:                                              ; preds = %580, %577, %6
  %582 = phi i32 [ 6, %6 ], [ %578, %577 ], [ %578, %580 ]
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %22) #14
  ret i32 %582
}

declare void @_ZN9SkSampler4FillERK11SkImageInfoPvmN7SkCodec15ZeroInitializedE(%struct.SkImageInfo* dereferenceable(24), i8*, i64, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #3

declare void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #3

declare i8* @_ZNK8SkBitmap7getAddrEii(%class.SkBitmap*, i32, i32) local_unnamed_addr #3

declare %struct.WebPIDecoder* @WebPIDecode(i8*, i64, %struct.WebPDecoderConfig*) local_unnamed_addr #3

declare i32 @WebPIUpdate(%struct.WebPIDecoder*, i8*, i64) local_unnamed_addr #3

declare i8* @WebPIDecGetRGB(%struct.WebPIDecoder*, i32*, i32*, i32*, i32*) local_unnamed_addr #3

declare void @_ZNK7SkCodec15applyColorXformEPvPKvi(%class.SkCodec*, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL10blend_line11SkColorTypePvS_PKv11SkAlphaTypebi(i32, i8*, i32, i8*, i32, i1 zeroext, i32) unnamed_addr #2 {
  %8 = alloca %struct.SkRasterPipeline_MemoryCtx, align 8
  %9 = alloca %struct.SkRasterPipeline_MemoryCtx, align 8
  %10 = alloca %class.SkRasterPipeline_, align 8
  %11 = bitcast %struct.SkRasterPipeline_MemoryCtx* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  %12 = getelementptr inbounds %struct.SkRasterPipeline_MemoryCtx, %struct.SkRasterPipeline_MemoryCtx* %8, i64 0, i32 0
  store i8* %1, i8** %12, align 8
  %13 = getelementptr inbounds %struct.SkRasterPipeline_MemoryCtx, %struct.SkRasterPipeline_MemoryCtx* %8, i64 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = bitcast %struct.SkRasterPipeline_MemoryCtx* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  %15 = getelementptr inbounds %struct.SkRasterPipeline_MemoryCtx, %struct.SkRasterPipeline_MemoryCtx* %9, i64 0, i32 0
  store i8* %3, i8** %15, align 8
  %16 = getelementptr inbounds %struct.SkRasterPipeline_MemoryCtx, %struct.SkRasterPipeline_MemoryCtx* %9, i64 0, i32 1
  store i32 0, i32* %16, align 8
  %17 = bitcast %class.SkRasterPipeline_* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 312, i8* nonnull %17) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 312, i1 false)
  %18 = getelementptr inbounds %class.SkRasterPipeline_, %class.SkRasterPipeline_* %10, i64 0, i32 0
  %19 = getelementptr inbounds %class.SkRasterPipeline_, %class.SkRasterPipeline_* %10, i64 0, i32 1, i32 0, i32 0, i64 256
  %20 = bitcast i8* %19 to %class.SkArenaAlloc*
  call void @_ZN16SkRasterPipelineC2EP12SkArenaAlloc(%class.SkRasterPipeline* nonnull %18, %class.SkArenaAlloc* %20) #14
  %21 = getelementptr inbounds %class.SkRasterPipeline_, %class.SkRasterPipeline_* %10, i64 0, i32 1, i32 0, i32 0, i64 0
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %20, i8* %21, i64 256, i64 256) #14
  call void @_ZN16SkRasterPipeline15append_load_dstE11SkColorTypePK26SkRasterPipeline_MemoryCtx(%class.SkRasterPipeline* nonnull %18, i32 %0, %struct.SkRasterPipeline_MemoryCtx* nonnull %8) #14
  %22 = icmp eq i32 %4, 3
  br i1 %22, label %23, label %24

23:                                               ; preds = %7
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* nonnull %18, i32 9, i8* null) #14
  br label %24

24:                                               ; preds = %23, %7
  call void @_ZN16SkRasterPipeline11append_loadE11SkColorTypePK26SkRasterPipeline_MemoryCtx(%class.SkRasterPipeline* nonnull %18, i32 %2, %struct.SkRasterPipeline_MemoryCtx* nonnull %9) #14
  br i1 %5, label %25, label %26

25:                                               ; preds = %24
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* nonnull %18, i32 8, i8* null) #14
  br label %26

26:                                               ; preds = %25, %24
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* nonnull %18, i32 104, i8* null) #14
  br i1 %22, label %27, label %28

27:                                               ; preds = %26
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* nonnull %18, i32 7, i8* null) #14
  br label %28

28:                                               ; preds = %27, %26
  call void @_ZN16SkRasterPipeline12append_storeE11SkColorTypePK26SkRasterPipeline_MemoryCtx(%class.SkRasterPipeline* nonnull %18, i32 %0, %struct.SkRasterPipeline_MemoryCtx* nonnull %8) #14
  %29 = sext i32 %6 to i64
  call void @_ZNK16SkRasterPipeline3runEmmmm(%class.SkRasterPipeline* nonnull %18, i64 0, i64 0, i64 %29, i64 1) #14
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %20) #14
  call void @llvm.lifetime.end.p0i8(i64 312, i8* nonnull %17) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkWebpCodecC2EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEP11WebPDemuxer5sk_spI6SkDataE15SkEncodedOrigin(%class.SkWebpCodec*, %struct.SkEncodedInfo* dereferenceable(32), %class.SkStream*, %struct.WebPDemuxer*, %class.sk_sp* nocapture, i32) unnamed_addr #2 align 2 {
  %7 = bitcast %class.SkWebpCodec* %0 to %class.SkCodec*
  tail call void @_ZN7SkCodecC2EO13SkEncodedInfo17skcms_PixelFormatNSt3__110unique_ptrI8SkStreamNS3_14default_deleteIS5_EEEE15SkEncodedOrigin(%class.SkCodec* %7, %struct.SkEncodedInfo* dereferenceable(32) %1, i32 13, %class.SkStream* %2, i32 %5) #14
  %8 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV11SkWebpCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 2
  %10 = ptrtoint %struct.WebPDemuxer* %3 to i64
  %11 = bitcast %class.SkAutoTCallVProc* %9 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 3
  %13 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %14 = bitcast %class.sk_sp* %4 to i64*
  %15 = load i64, i64* %14, align 8
  store %class.SkData* null, %class.SkData** %13, align 8
  %16 = bitcast %class.sk_sp* %12 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 4, i32 0, i32 0
  %18 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 4, i32 0, i32 1
  %19 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 4, i32 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11SkWebpCodec11FrameHolderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %20 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 4, i32 1
  %21 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %22 = bitcast %"class.std::__1::vector"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 25, i1 false)
  %23 = load i32, i32* %21, align 8
  %24 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 0, i32 0, i32 1, i32 1
  %25 = load i32, i32* %24, align 4
  store i32 %23, i32* %18, align 8
  store i32 %25, i32* %19, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11SkWebpCodec11FrameHolderD2Ev(%"class.SkWebpCodec::FrameHolder"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkWebpCodec::FrameHolder", %"class.SkWebpCodec::FrameHolder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11SkWebpCodec11FrameHolderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkWebpCodec::FrameHolder", %"class.SkWebpCodec::FrameHolder"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.SkWebpCodec::Frame"*, %"class.SkWebpCodec::Frame"** %4, align 8
  %6 = icmp eq %"class.SkWebpCodec::Frame"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.SkWebpCodec::Frame"* %5 to i8*
  %9 = getelementptr inbounds %"class.SkWebpCodec::FrameHolder", %"class.SkWebpCodec::FrameHolder"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.SkWebpCodec::Frame"*, %"class.SkWebpCodec::Frame"** %9, align 8
  %11 = icmp eq %"class.SkWebpCodec::Frame"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.SkWebpCodec::Frame"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %13, i64 -1
  %15 = bitcast %"class.SkWebpCodec::Frame"* %14 to void (%"class.SkWebpCodec::Frame"*)***
  %16 = load void (%"class.SkWebpCodec::Frame"*)**, void (%"class.SkWebpCodec::Frame"*)*** %15, align 8
  %17 = load void (%"class.SkWebpCodec::Frame"*)*, void (%"class.SkWebpCodec::Frame"*)** %16, align 8
  tail call void %17(%"class.SkWebpCodec::Frame"* %14) #14
  %18 = icmp eq %"class.SkWebpCodec::Frame"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.SkWebpCodec::Frame"* %5, %"class.SkWebpCodec::Frame"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #15
  br label %24

24:                                               ; preds = %1, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11SkWebpCodec11FrameHolderD0Ev(%"class.SkWebpCodec::FrameHolder"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkWebpCodec::FrameHolder", %"class.SkWebpCodec::FrameHolder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11SkWebpCodec11FrameHolderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkWebpCodec::FrameHolder", %"class.SkWebpCodec::FrameHolder"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.SkWebpCodec::Frame"*, %"class.SkWebpCodec::Frame"** %4, align 8
  %6 = icmp eq %"class.SkWebpCodec::Frame"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.SkWebpCodec::Frame"* %5 to i8*
  %9 = getelementptr inbounds %"class.SkWebpCodec::FrameHolder", %"class.SkWebpCodec::FrameHolder"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.SkWebpCodec::Frame"*, %"class.SkWebpCodec::Frame"** %9, align 8
  %11 = icmp eq %"class.SkWebpCodec::Frame"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.SkWebpCodec::Frame"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %13, i64 -1
  %15 = bitcast %"class.SkWebpCodec::Frame"* %14 to void (%"class.SkWebpCodec::Frame"*)***
  %16 = load void (%"class.SkWebpCodec::Frame"*)**, void (%"class.SkWebpCodec::Frame"*)*** %15, align 8
  %17 = load void (%"class.SkWebpCodec::Frame"*)*, void (%"class.SkWebpCodec::Frame"*)** %16, align 8
  tail call void %17(%"class.SkWebpCodec::Frame"* %14) #14
  %18 = icmp eq %"class.SkWebpCodec::Frame"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.SkWebpCodec::Frame"* %5, %"class.SkWebpCodec::Frame"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #15
  br label %24

24:                                               ; preds = %1, %22
  %25 = bitcast %"class.SkWebpCodec::FrameHolder"* %0 to i8*
  tail call void @_ZdlPv(i8* %25) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11SkWebpCodecD2Ev(%class.SkWebpCodec*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV11SkWebpCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 4, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11SkWebpCodec11FrameHolderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 4, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.SkWebpCodec::Frame"*, %"class.SkWebpCodec::Frame"** %5, align 8
  %7 = icmp eq %"class.SkWebpCodec::Frame"* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.SkWebpCodec::Frame"* %6 to i8*
  %10 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %11 = load %"class.SkWebpCodec::Frame"*, %"class.SkWebpCodec::Frame"** %10, align 8
  %12 = icmp eq %"class.SkWebpCodec::Frame"* %11, %6
  br i1 %12, label %23, label %13

13:                                               ; preds = %8, %13
  %14 = phi %"class.SkWebpCodec::Frame"* [ %15, %13 ], [ %11, %8 ]
  %15 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %14, i64 -1
  %16 = bitcast %"class.SkWebpCodec::Frame"* %15 to void (%"class.SkWebpCodec::Frame"*)***
  %17 = load void (%"class.SkWebpCodec::Frame"*)**, void (%"class.SkWebpCodec::Frame"*)*** %16, align 8
  %18 = load void (%"class.SkWebpCodec::Frame"*)*, void (%"class.SkWebpCodec::Frame"*)** %17, align 8
  tail call void %18(%"class.SkWebpCodec::Frame"* %15) #14
  %19 = icmp eq %"class.SkWebpCodec::Frame"* %15, %6
  br i1 %19, label %20, label %13

20:                                               ; preds = %13
  %21 = bitcast %"class.std::__1::vector"* %4 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %20, %8
  %24 = phi i8* [ %22, %20 ], [ %9, %8 ]
  store %"class.SkWebpCodec::Frame"* %6, %"class.SkWebpCodec::Frame"** %10, align 8
  tail call void @_ZdlPv(i8* %24) #15
  br label %25

25:                                               ; preds = %1, %23
  %26 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 3, i32 0
  %27 = load %class.SkData*, %class.SkData** %26, align 8
  %28 = icmp eq %class.SkData* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.SkData, %class.SkData* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 -1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %35

33:                                               ; preds = %29
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %27) #14
  %34 = bitcast %class.SkData* %27 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %34) #14
  br label %35

35:                                               ; preds = %25, %29, %33
  %36 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %37 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %36, align 8
  store %struct.WebPDemuxer* null, %struct.WebPDemuxer** %36, align 8
  %38 = icmp eq %struct.WebPDemuxer* %37, null
  br i1 %38, label %40, label %39

39:                                               ; preds = %35
  tail call void @WebPDemuxDelete(%struct.WebPDemuxer* nonnull %37) #14
  br label %40

40:                                               ; preds = %35, %39
  %41 = bitcast %class.SkWebpCodec* %0 to %class.SkCodec*
  tail call void @_ZN7SkCodecD2Ev(%class.SkCodec* %41) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11SkWebpCodecD0Ev(%class.SkWebpCodec*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV11SkWebpCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 4, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11SkWebpCodec11FrameHolderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 4, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.SkWebpCodec::Frame"*, %"class.SkWebpCodec::Frame"** %5, align 8
  %7 = icmp eq %"class.SkWebpCodec::Frame"* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.SkWebpCodec::Frame"* %6 to i8*
  %10 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %11 = load %"class.SkWebpCodec::Frame"*, %"class.SkWebpCodec::Frame"** %10, align 8
  %12 = icmp eq %"class.SkWebpCodec::Frame"* %11, %6
  br i1 %12, label %23, label %13

13:                                               ; preds = %8, %13
  %14 = phi %"class.SkWebpCodec::Frame"* [ %15, %13 ], [ %11, %8 ]
  %15 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %14, i64 -1
  %16 = bitcast %"class.SkWebpCodec::Frame"* %15 to void (%"class.SkWebpCodec::Frame"*)***
  %17 = load void (%"class.SkWebpCodec::Frame"*)**, void (%"class.SkWebpCodec::Frame"*)*** %16, align 8
  %18 = load void (%"class.SkWebpCodec::Frame"*)*, void (%"class.SkWebpCodec::Frame"*)** %17, align 8
  tail call void %18(%"class.SkWebpCodec::Frame"* %15) #14
  %19 = icmp eq %"class.SkWebpCodec::Frame"* %15, %6
  br i1 %19, label %20, label %13

20:                                               ; preds = %13
  %21 = bitcast %"class.std::__1::vector"* %4 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %20, %8
  %24 = phi i8* [ %22, %20 ], [ %9, %8 ]
  store %"class.SkWebpCodec::Frame"* %6, %"class.SkWebpCodec::Frame"** %10, align 8
  tail call void @_ZdlPv(i8* %24) #15
  br label %25

25:                                               ; preds = %23, %1
  %26 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 3, i32 0
  %27 = load %class.SkData*, %class.SkData** %26, align 8
  %28 = icmp eq %class.SkData* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.SkData, %class.SkData* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 -1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %35

33:                                               ; preds = %29
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %27) #14
  %34 = bitcast %class.SkData* %27 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %34) #14
  br label %35

35:                                               ; preds = %33, %29, %25
  %36 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %37 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %36, align 8
  store %struct.WebPDemuxer* null, %struct.WebPDemuxer** %36, align 8
  %38 = icmp eq %struct.WebPDemuxer* %37, null
  br i1 %38, label %40, label %39

39:                                               ; preds = %35
  tail call void @WebPDemuxDelete(%struct.WebPDemuxer* nonnull %37) #14
  br label %40

40:                                               ; preds = %35, %39
  %41 = bitcast %class.SkWebpCodec* %0 to %class.SkCodec*
  tail call void @_ZN7SkCodecD2Ev(%class.SkCodec* %41) #14
  %42 = bitcast %class.SkWebpCodec* %0 to i8*
  tail call void @_ZdlPv(i8* %42) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK14SkScalingCodec21onGetScaledDimensionsEf(%class.SkScalingCodec*, float) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %class.SkScalingCodec, %class.SkScalingCodec* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %class.SkScalingCodec, %class.SkScalingCodec* %0, i64 0, i32 0, i32 1, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = sitofp i32 %4 to float
  %8 = fmul float %7, %1
  %9 = fadd float %8, 5.000000e-01
  %10 = tail call float @llvm.floor.f32(float %9)
  %11 = fcmp olt float %10, 0x41DFFFFFE0000000
  %12 = select i1 %11, float %10, float 0x41DFFFFFE0000000
  %13 = fcmp ogt float %12, 0xC1DFFFFFE0000000
  %14 = select i1 %13, float %12, float 0xC1DFFFFFE0000000
  %15 = fptosi float %14 to i32
  %16 = icmp sgt i32 %15, 1
  %17 = select i1 %16, i32 %15, i32 1
  %18 = sitofp i32 %6 to float
  %19 = fmul float %18, %1
  %20 = fadd float %19, 5.000000e-01
  %21 = tail call float @llvm.floor.f32(float %20)
  %22 = fcmp olt float %21, 0x41DFFFFFE0000000
  %23 = select i1 %22, float %21, float 0x41DFFFFFE0000000
  %24 = fcmp ogt float %23, 0xC1DFFFFFE0000000
  %25 = select i1 %24, float %23, float 0xC1DFFFFFE0000000
  %26 = fptosi float %25 to i32
  %27 = icmp sgt i32 %26, 1
  %28 = select i1 %27, i32 %26, i32 1
  %29 = zext i32 %28 to i64
  %30 = shl nuw nsw i64 %29, 32
  %31 = zext i32 %17 to i64
  %32 = or i64 %30, %31
  ret i64 %32
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN14SkScalingCodec21onDimensionsSupportedERK7SkISize(%class.SkScalingCodec*, %struct.SkISize* dereferenceable(8)) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.SkISize, %struct.SkISize* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %4, 0
  br i1 %7, label %8, label %18

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkScalingCodec, %class.SkScalingCodec* %0, i64 0, i32 0, i32 1, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %class.SkScalingCodec, %class.SkScalingCodec* %0, i64 0, i32 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp sle i32 %4, %12
  %14 = icmp sgt i32 %6, 0
  %15 = and i1 %14, %13
  %16 = icmp sle i32 %6, %10
  %17 = and i1 %16, %15
  ret i1 %17

18:                                               ; preds = %2
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK11SkWebpCodec18onGetEncodedFormatEv(%class.SkWebpCodec*) unnamed_addr #2 comdat align 2 {
  ret i32 6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_(%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8), %class.SkYUVAPixmapInfo*) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps(%class.SkCodec*, %class.SkYUVAPixmaps* dereferenceable(208)) unnamed_addr #2 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7SkCodec8onRewindEv(%class.SkCodec*) unnamed_addr #2 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK7SkCodec18onGetScanlineOrderEv(%class.SkCodec*) unnamed_addr #2 comdat align 2 {
  ret i32 0
}

declare i32 @_ZNK7SkCodec16onOutputScanlineEi(%class.SkCodec*, i32) unnamed_addr #3

declare zeroext i1 @_ZN7SkCodec19conversionSupportedERK11SkImageInfobb(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i1 zeroext, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec14usesColorXformEv(%class.SkCodec*) unnamed_addr #2 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkFrameHolder* @_ZNK11SkWebpCodec14getFrameHolderEv(%class.SkWebpCodec*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %class.SkWebpCodec, %class.SkWebpCodec* %0, i64 0, i32 4, i32 0
  ret %class.SkFrameHolder* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec21onStartScanlineDecodeERK11SkImageInfoRKNS_7OptionsE(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"* dereferenceable(24)) unnamed_addr #2 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKNS_7OptionsE(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"* dereferenceable(24)) unnamed_addr #2 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec19onIncrementalDecodeEPi(%class.SkCodec*, i32*) unnamed_addr #2 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7SkCodec15onSkipScanlinesEi(%class.SkCodec*, i32) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec14onGetScanlinesEPvim(%class.SkCodec*, i8*, i32, i64) unnamed_addr #2 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkSampler* @_ZN7SkCodec10getSamplerEb(%class.SkCodec*, i1 zeroext) unnamed_addr #2 comdat align 2 {
  ret %class.SkSampler* null
}

declare void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp* sret, i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #3

declare void @_ZN6SkData16DummyReleaseProcEPKvPv(i8*, i8*) #3

declare %struct.WebPDemuxer* @WebPDemuxInternal(%struct.WebPData*, i32, i32*, i32) local_unnamed_addr #3

declare void @WebPDemuxReleaseChunkIterator(%struct.WebPChunkIterator*) local_unnamed_addr #3

declare i32 @WebPGetFeaturesInternal(i8*, i64, %struct.WebPBitstreamFeatures*, i32) local_unnamed_addr #3

declare void @WebPDemuxReleaseIterator(%struct.WebPIterator*) local_unnamed_addr #3

declare void @WebPDemuxDelete(%struct.WebPDemuxer*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN11SkWebpCodec5FrameENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.SkWebpCodec::Frame"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 56
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.SkWebpCodec::Frame"*
  br i1 %10, label %12, label %66

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.SkWebpCodec::Frame"** %13 to i64*
  %15 = icmp ugt i64 %1, 329406144173384850
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #16
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 56
  %21 = mul i64 %1, 56
  %22 = tail call i8* @_Znwm(i64 %21) #15
  %23 = bitcast i8* %22 to %"class.SkWebpCodec::Frame"*
  %24 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %23, i64 %20
  %25 = ptrtoint %"class.SkWebpCodec::Frame"* %24 to i64
  %26 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %23, i64 %1
  %27 = ptrtoint %"class.SkWebpCodec::Frame"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.SkWebpCodec::Frame"*
  %29 = icmp eq %"class.SkWebpCodec::Frame"* %28, %11
  br i1 %29, label %49, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"class.SkWebpCodec::Frame"* [ %42, %30 ], [ %24, %17 ]
  %32 = phi %"class.SkWebpCodec::Frame"* [ %33, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %32, i64 -1
  %34 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %31, i64 -1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV7SkFrame, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %31, i64 -1, i32 0, i32 1
  %36 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %32, i64 -1, i32 0, i32 1
  %37 = bitcast i32* %35 to i8*
  %38 = bitcast i32* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 40, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11SkWebpCodec5FrameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %39 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %31, i64 -1, i32 1
  %40 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %32, i64 -1, i32 1
  %41 = load i32, i32* %40, align 8
  store i32 %41, i32* %39, align 8
  %42 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %31, i64 -1
  %43 = icmp eq %"class.SkWebpCodec::Frame"* %33, %11
  br i1 %43, label %44, label %30

44:                                               ; preds = %30
  %45 = ptrtoint %"class.SkWebpCodec::Frame"* %42 to i64
  %46 = load i64, i64* %6, align 8
  %47 = load %"class.SkWebpCodec::Frame"*, %"class.SkWebpCodec::Frame"** %13, align 8
  %48 = inttoptr i64 %46 to %"class.SkWebpCodec::Frame"*
  br label %49

49:                                               ; preds = %17, %44
  %50 = phi %"class.SkWebpCodec::Frame"* [ %48, %44 ], [ %28, %17 ]
  %51 = phi %"class.SkWebpCodec::Frame"* [ %47, %44 ], [ %11, %17 ]
  %52 = phi i64 [ %45, %44 ], [ %25, %17 ]
  %53 = phi i64 [ %46, %44 ], [ %18, %17 ]
  store i64 %52, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %54 = icmp eq %"class.SkWebpCodec::Frame"* %51, %50
  br i1 %54, label %62, label %55

55:                                               ; preds = %49, %55
  %56 = phi %"class.SkWebpCodec::Frame"* [ %57, %55 ], [ %51, %49 ]
  %57 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %56, i64 -1
  %58 = bitcast %"class.SkWebpCodec::Frame"* %57 to void (%"class.SkWebpCodec::Frame"*)***
  %59 = load void (%"class.SkWebpCodec::Frame"*)**, void (%"class.SkWebpCodec::Frame"*)*** %58, align 8
  %60 = load void (%"class.SkWebpCodec::Frame"*)*, void (%"class.SkWebpCodec::Frame"*)** %59, align 8
  tail call void %60(%"class.SkWebpCodec::Frame"* %57) #14
  %61 = icmp eq %"class.SkWebpCodec::Frame"* %57, %50
  br i1 %61, label %62, label %55

62:                                               ; preds = %55, %49
  %63 = icmp eq i64 %53, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = inttoptr i64 %53 to i8*
  tail call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %64, %62, %2
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11SkWebpCodec5FrameD0Ev(%"class.SkWebpCodec::Frame"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.SkWebpCodec::Frame"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK11SkWebpCodec5Frame15onReportedAlphaEv(%"class.SkWebpCodec::Frame"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7SkFrameD2Ev(%class.SkFrame*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7SkFrameD0Ev(%class.SkFrame*) unnamed_addr #2 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare i32 @WebPInitDecoderConfigInternal(%struct.WebPDecoderConfig*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #3

declare i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo*, i64) local_unnamed_addr #3

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #3

declare void @_ZN16SkRasterPipeline15append_load_dstE11SkColorTypePK26SkRasterPipeline_MemoryCtx(%class.SkRasterPipeline*, i32, %struct.SkRasterPipeline_MemoryCtx*) local_unnamed_addr #3

declare void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline*, i32, i8*) local_unnamed_addr #3

declare void @_ZN16SkRasterPipeline11append_loadE11SkColorTypePK26SkRasterPipeline_MemoryCtx(%class.SkRasterPipeline*, i32, %struct.SkRasterPipeline_MemoryCtx*) local_unnamed_addr #3

declare void @_ZN16SkRasterPipeline12append_storeE11SkColorTypePK26SkRasterPipeline_MemoryCtx(%class.SkRasterPipeline*, i32, %struct.SkRasterPipeline_MemoryCtx*) local_unnamed_addr #3

declare void @_ZNK16SkRasterPipeline3runEmmmm(%class.SkRasterPipeline*, i64, i64, i64, i64) local_unnamed_addr #3

declare void @_ZN16SkRasterPipelineC2EP12SkArenaAlloc(%class.SkRasterPipeline*, %class.SkArenaAlloc*) unnamed_addr #3

declare void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc*, i8*, i64, i64) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc*) unnamed_addr #6

declare void @WebPIDelete(%struct.WebPIDecoder*) local_unnamed_addr #3

declare void @WebPFreeDecBuffer(%struct.WebPDecBuffer*) local_unnamed_addr #3

declare void @_ZN7SkCodecC2EO13SkEncodedInfo17skcms_PixelFormatNSt3__110unique_ptrI8SkStreamNS3_14default_deleteIS5_EEEE15SkEncodedOrigin(%class.SkCodec*, %struct.SkEncodedInfo* dereferenceable(32), i32, %class.SkStream*, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7SkCodecD2Ev(%class.SkCodec*) unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #11

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN11SkWebpCodec5FrameENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKiN13SkEncodedInfo5AlphaEEEEvDpOT_(%"class.std::__1::vector"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #7 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.SkWebpCodec::Frame"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 56
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 329406144173384850
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #16
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.SkWebpCodec::Frame"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = sdiv exact i64 %19, 56
  %21 = icmp ult i64 %20, 164703072086692425
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = shl nsw i64 %20, 1
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 329406144173384850, %15 ]
  %29 = mul i64 %28, 56
  %30 = tail call i8* @_Znwm(i64 %29) #15
  %31 = bitcast i8* %30 to %"class.SkWebpCodec::Frame"*
  br label %32

32:                                               ; preds = %22, %27
  %33 = phi i64 [ %28, %27 ], [ 0, %22 ]
  %34 = phi %"class.SkWebpCodec::Frame"* [ %31, %27 ], [ null, %22 ]
  %35 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %34, i64 %10
  %36 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %34, i64 %33
  %37 = ptrtoint %"class.SkWebpCodec::Frame"* %36 to i64
  %38 = load i32, i32* %1, align 4
  %39 = load i32, i32* %2, align 4
  %40 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %35, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %34, i64 %10, i32 0, i32 1
  store i32 %38, i32* %41, align 8
  %42 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %34, i64 %10, i32 0, i32 2
  store i8 0, i8* %42, align 4
  %43 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %34, i64 %10, i32 0, i32 3
  store i32 -2, i32* %43, align 8
  %44 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %34, i64 %10, i32 0, i32 5
  store i32 1, i32* %44, align 4
  %45 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %34, i64 %10, i32 0, i32 6
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %34, i64 %10, i32 0, i32 7
  store i32 0, i32* %46, align 4
  %47 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %34, i64 %10, i32 0, i32 4
  %48 = bitcast %struct.SkIRect* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %48, i8 0, i64 16, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11SkWebpCodec5FrameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %49 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %34, i64 %10, i32 1
  store i32 %39, i32* %49, align 8
  %50 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %35, i64 1
  %51 = ptrtoint %"class.SkWebpCodec::Frame"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.SkWebpCodec::Frame"*, %"class.SkWebpCodec::Frame"** %52, align 8
  %54 = load %"class.SkWebpCodec::Frame"*, %"class.SkWebpCodec::Frame"** %4, align 8
  %55 = icmp eq %"class.SkWebpCodec::Frame"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %32
  %57 = ptrtoint %"class.SkWebpCodec::Frame"* %53 to i64
  br label %75

58:                                               ; preds = %32, %58
  %59 = phi %"class.SkWebpCodec::Frame"* [ %70, %58 ], [ %35, %32 ]
  %60 = phi %"class.SkWebpCodec::Frame"* [ %61, %58 ], [ %54, %32 ]
  %61 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %60, i64 -1
  %62 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %59, i64 -1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV7SkFrame, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %63 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %59, i64 -1, i32 0, i32 1
  %64 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %60, i64 -1, i32 0, i32 1
  %65 = bitcast i32* %63 to i8*
  %66 = bitcast i32* %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 40, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11SkWebpCodec5FrameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %67 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %59, i64 -1, i32 1
  %68 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %60, i64 -1, i32 1
  %69 = load i32, i32* %68, align 8
  store i32 %69, i32* %67, align 8
  %70 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %59, i64 -1
  %71 = icmp eq %"class.SkWebpCodec::Frame"* %61, %53
  br i1 %71, label %72, label %58

72:                                               ; preds = %58
  %73 = load i64, i64* %7, align 8
  %74 = load %"class.SkWebpCodec::Frame"*, %"class.SkWebpCodec::Frame"** %4, align 8
  br label %75

75:                                               ; preds = %56, %72
  %76 = phi %"class.SkWebpCodec::Frame"* [ %53, %56 ], [ %74, %72 ]
  %77 = phi %"class.SkWebpCodec::Frame"* [ %35, %56 ], [ %70, %72 ]
  %78 = phi i64 [ %57, %56 ], [ %73, %72 ]
  %79 = ptrtoint %"class.SkWebpCodec::Frame"* %77 to i64
  store i64 %79, i64* %7, align 8
  store i64 %51, i64* %5, align 8
  store i64 %37, i64* %17, align 8
  %80 = inttoptr i64 %78 to %"class.SkWebpCodec::Frame"*
  %81 = icmp eq %"class.SkWebpCodec::Frame"* %76, %80
  br i1 %81, label %89, label %82

82:                                               ; preds = %75, %82
  %83 = phi %"class.SkWebpCodec::Frame"* [ %84, %82 ], [ %76, %75 ]
  %84 = getelementptr inbounds %"class.SkWebpCodec::Frame", %"class.SkWebpCodec::Frame"* %83, i64 -1
  %85 = bitcast %"class.SkWebpCodec::Frame"* %84 to void (%"class.SkWebpCodec::Frame"*)***
  %86 = load void (%"class.SkWebpCodec::Frame"*)**, void (%"class.SkWebpCodec::Frame"*)*** %85, align 8
  %87 = load void (%"class.SkWebpCodec::Frame"*)*, void (%"class.SkWebpCodec::Frame"*)** %86, align 8
  tail call void %87(%"class.SkWebpCodec::Frame"* %84) #14
  %88 = icmp eq %"class.SkWebpCodec::Frame"* %84, %80
  br i1 %88, label %89, label %82

89:                                               ; preds = %82, %75
  %90 = icmp eq i64 %78, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %89
  %92 = inttoptr i64 %78 to i8*
  tail call void @_ZdlPv(i8* %92) #15
  br label %93

93:                                               ; preds = %89, %91
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEiNSt3__110unique_ptrINS_10ICCProfileENS2_14default_deleteIS4_EEEE: argument 0"}
!4 = distinct !{!4, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEiNSt3__110unique_ptrINS_10ICCProfileENS2_14default_deleteIS4_EEEE"}
!5 = !{i8 0, i8 2}
!6 = !{!7, !9, !11}
!7 = distinct !{!7, !8, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!8 = distinct !{!8, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!9 = distinct !{!9, !10, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!10 = distinct !{!10, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType"}
!11 = distinct !{!11, !12, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!12 = distinct !{!12, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType"}
!13 = !{!14, !16, !18}
!14 = distinct !{!14, !15, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!15 = distinct !{!15, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!16 = distinct !{!16, !17, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!17 = distinct !{!17, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType"}
!18 = distinct !{!18, !19, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!19 = distinct !{!19, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType"}
!20 = !{!21, !23, !25}
!21 = distinct !{!21, !22, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!22 = distinct !{!22, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!23 = distinct !{!23, !24, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType: argument 0"}
!24 = distinct !{!24, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType"}
!25 = distinct !{!25, !26, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType: argument 0"}
!26 = distinct !{!26, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType"}
!27 = !{!28, !30}
!28 = distinct !{!28, !29, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!29 = distinct !{!29, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!30 = distinct !{!30, !31, !"_ZNK11SkImageInfo6makeWHEii: argument 0"}
!31 = distinct !{!31, !"_ZNK11SkImageInfo6makeWHEii"}
