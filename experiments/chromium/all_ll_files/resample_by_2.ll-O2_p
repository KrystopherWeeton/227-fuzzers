; ModuleID = '../../third_party/webrtc/common_audio/signal_processing/resample_by_2.c'
source_filename = "../../third_party/webrtc/common_audio/signal_processing/resample_by_2.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebRtcSpl_DownsampleBy2(i16* nocapture readonly, i64, i16* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %5 = load i32, i32* %3, align 4
  %6 = getelementptr inbounds i32, i32* %3, i64 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds i32, i32* %3, i64 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds i32, i32* %3, i64 3
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds i32, i32* %3, i64 4
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds i32, i32* %3, i64 5
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds i32, i32* %3, i64 6
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds i32, i32* %3, i64 7
  %19 = load i32, i32* %18, align 4
  %20 = lshr i64 %1, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %101, label %22

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %89, %22 ], [ %19, %4 ]
  %24 = phi i32 [ %81, %22 ], [ %17, %4 ]
  %25 = phi i32 [ %73, %22 ], [ %15, %4 ]
  %26 = phi i32 [ %65, %22 ], [ %13, %4 ]
  %27 = phi i32 [ %61, %22 ], [ %11, %4 ]
  %28 = phi i32 [ %53, %22 ], [ %9, %4 ]
  %29 = phi i32 [ %45, %22 ], [ %7, %4 ]
  %30 = phi i32 [ %37, %22 ], [ %5, %4 ]
  %31 = phi i64 [ %99, %22 ], [ %20, %4 ]
  %32 = phi i16* [ %62, %22 ], [ %0, %4 ]
  %33 = phi i16* [ %98, %22 ], [ %2, %4 ]
  %34 = getelementptr inbounds i16, i16* %32, i64 1
  %35 = load i16, i16* %32, align 2
  %36 = sext i16 %35 to i32
  %37 = shl nsw i32 %36, 10
  %38 = sub nsw i32 %37, %29
  %39 = ashr i32 %38, 16
  %40 = mul nsw i32 %39, 12199
  %41 = add nsw i32 %40, %30
  %42 = and i32 %38, 65535
  %43 = mul nuw nsw i32 %42, 12199
  %44 = lshr i32 %43, 16
  %45 = add i32 %41, %44
  %46 = sub nsw i32 %45, %28
  %47 = ashr i32 %46, 16
  %48 = mul nsw i32 %47, 37471
  %49 = add nsw i32 %48, %29
  %50 = and i32 %46, 65535
  %51 = mul nuw i32 %50, 37471
  %52 = lshr i32 %51, 16
  %53 = add i32 %49, %52
  %54 = sub nsw i32 %53, %27
  %55 = ashr i32 %54, 16
  %56 = mul nsw i32 %55, 60255
  %57 = add nsw i32 %56, %28
  %58 = and i32 %54, 65535
  %59 = mul nuw i32 %58, 60255
  %60 = lshr i32 %59, 16
  %61 = add i32 %57, %60
  %62 = getelementptr inbounds i16, i16* %32, i64 2
  %63 = load i16, i16* %34, align 2
  %64 = sext i16 %63 to i32
  %65 = shl nsw i32 %64, 10
  %66 = sub nsw i32 %65, %25
  %67 = ashr i32 %66, 16
  %68 = mul nsw i32 %67, 3284
  %69 = add nsw i32 %68, %26
  %70 = and i32 %66, 65535
  %71 = mul nuw nsw i32 %70, 3284
  %72 = lshr i32 %71, 16
  %73 = add i32 %69, %72
  %74 = sub nsw i32 %73, %24
  %75 = ashr i32 %74, 16
  %76 = mul nsw i32 %75, 24441
  %77 = add nsw i32 %76, %25
  %78 = and i32 %74, 65535
  %79 = mul nuw nsw i32 %78, 24441
  %80 = lshr i32 %79, 16
  %81 = add i32 %77, %80
  %82 = sub nsw i32 %81, %23
  %83 = ashr i32 %82, 16
  %84 = mul nsw i32 %83, 49528
  %85 = add nsw i32 %84, %24
  %86 = and i32 %82, 65535
  %87 = mul nuw i32 %86, 49528
  %88 = lshr i32 %87, 16
  %89 = add i32 %85, %88
  %90 = add i32 %61, 1024
  %91 = add i32 %90, %89
  %92 = ashr i32 %91, 11
  %93 = icmp sgt i32 %91, 67108863
  %94 = icmp sgt i32 %92, -32768
  %95 = select i1 %94, i32 %92, i32 -32768
  %96 = trunc i32 %95 to i16
  %97 = select i1 %93, i16 32767, i16 %96
  %98 = getelementptr inbounds i16, i16* %33, i64 1
  store i16 %97, i16* %33, align 2
  %99 = add nsw i64 %31, -1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %22

101:                                              ; preds = %22, %4
  %102 = phi i32 [ %5, %4 ], [ %37, %22 ]
  %103 = phi i32 [ %7, %4 ], [ %45, %22 ]
  %104 = phi i32 [ %9, %4 ], [ %53, %22 ]
  %105 = phi i32 [ %11, %4 ], [ %61, %22 ]
  %106 = phi i32 [ %13, %4 ], [ %65, %22 ]
  %107 = phi i32 [ %15, %4 ], [ %73, %22 ]
  %108 = phi i32 [ %17, %4 ], [ %81, %22 ]
  %109 = phi i32 [ %19, %4 ], [ %89, %22 ]
  store i32 %102, i32* %3, align 4
  store i32 %103, i32* %6, align 4
  store i32 %104, i32* %8, align 4
  store i32 %105, i32* %10, align 4
  store i32 %106, i32* %12, align 4
  store i32 %107, i32* %14, align 4
  store i32 %108, i32* %16, align 4
  store i32 %109, i32* %18, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebRtcSpl_UpsampleBy2(i16* nocapture readonly, i64, i16* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %5 = load i32, i32* %3, align 4
  %6 = getelementptr inbounds i32, i32* %3, i64 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds i32, i32* %3, i64 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds i32, i32* %3, i64 3
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds i32, i32* %3, i64 4
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds i32, i32* %3, i64 5
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds i32, i32* %3, i64 6
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds i32, i32* %3, i64 7
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i64 %1, 0
  br i1 %20, label %103, label %21

21:                                               ; preds = %4, %21
  %22 = phi i32 [ %92, %21 ], [ %19, %4 ]
  %23 = phi i32 [ %84, %21 ], [ %17, %4 ]
  %24 = phi i32 [ %76, %21 ], [ %15, %4 ]
  %25 = phi i32 [ %36, %21 ], [ %13, %4 ]
  %26 = phi i32 [ %60, %21 ], [ %11, %4 ]
  %27 = phi i32 [ %52, %21 ], [ %9, %4 ]
  %28 = phi i32 [ %44, %21 ], [ %7, %4 ]
  %29 = phi i32 [ %36, %21 ], [ %5, %4 ]
  %30 = phi i64 [ %101, %21 ], [ %1, %4 ]
  %31 = phi i16* [ %33, %21 ], [ %0, %4 ]
  %32 = phi i16* [ %100, %21 ], [ %2, %4 ]
  %33 = getelementptr inbounds i16, i16* %31, i64 1
  %34 = load i16, i16* %31, align 2
  %35 = sext i16 %34 to i32
  %36 = shl nsw i32 %35, 10
  %37 = sub nsw i32 %36, %28
  %38 = ashr i32 %37, 16
  %39 = mul nsw i32 %38, 3284
  %40 = add nsw i32 %39, %29
  %41 = and i32 %37, 65535
  %42 = mul nuw nsw i32 %41, 3284
  %43 = lshr i32 %42, 16
  %44 = add i32 %40, %43
  %45 = sub nsw i32 %44, %27
  %46 = ashr i32 %45, 16
  %47 = mul nsw i32 %46, 24441
  %48 = add nsw i32 %47, %28
  %49 = and i32 %45, 65535
  %50 = mul nuw nsw i32 %49, 24441
  %51 = lshr i32 %50, 16
  %52 = add i32 %48, %51
  %53 = sub nsw i32 %52, %26
  %54 = ashr i32 %53, 16
  %55 = mul nsw i32 %54, 49528
  %56 = add nsw i32 %55, %27
  %57 = and i32 %53, 65535
  %58 = mul nuw i32 %57, 49528
  %59 = lshr i32 %58, 16
  %60 = add i32 %56, %59
  %61 = add nsw i32 %60, 512
  %62 = ashr i32 %61, 10
  %63 = icmp sgt i32 %61, 33554431
  %64 = icmp sgt i32 %62, -32768
  %65 = select i1 %64, i32 %62, i32 -32768
  %66 = trunc i32 %65 to i16
  %67 = select i1 %63, i16 32767, i16 %66
  %68 = getelementptr inbounds i16, i16* %32, i64 1
  store i16 %67, i16* %32, align 2
  %69 = sub nsw i32 %36, %24
  %70 = ashr i32 %69, 16
  %71 = mul nsw i32 %70, 12199
  %72 = add nsw i32 %71, %25
  %73 = and i32 %69, 65535
  %74 = mul nuw nsw i32 %73, 12199
  %75 = lshr i32 %74, 16
  %76 = add i32 %72, %75
  %77 = sub nsw i32 %76, %23
  %78 = ashr i32 %77, 16
  %79 = mul nsw i32 %78, 37471
  %80 = add nsw i32 %79, %24
  %81 = and i32 %77, 65535
  %82 = mul nuw i32 %81, 37471
  %83 = lshr i32 %82, 16
  %84 = add i32 %80, %83
  %85 = sub nsw i32 %84, %22
  %86 = ashr i32 %85, 16
  %87 = mul nsw i32 %86, 60255
  %88 = add nsw i32 %87, %23
  %89 = and i32 %85, 65535
  %90 = mul nuw i32 %89, 60255
  %91 = lshr i32 %90, 16
  %92 = add i32 %88, %91
  %93 = add nsw i32 %92, 512
  %94 = ashr i32 %93, 10
  %95 = icmp sgt i32 %93, 33554431
  %96 = icmp sgt i32 %94, -32768
  %97 = select i1 %96, i32 %94, i32 -32768
  %98 = trunc i32 %97 to i16
  %99 = select i1 %95, i16 32767, i16 %98
  %100 = getelementptr inbounds i16, i16* %32, i64 2
  store i16 %99, i16* %68, align 2
  %101 = add i64 %30, -1
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %103, label %21

103:                                              ; preds = %21, %4
  %104 = phi i32 [ %5, %4 ], [ %36, %21 ]
  %105 = phi i32 [ %7, %4 ], [ %44, %21 ]
  %106 = phi i32 [ %9, %4 ], [ %52, %21 ]
  %107 = phi i32 [ %11, %4 ], [ %60, %21 ]
  %108 = phi i32 [ %13, %4 ], [ %36, %21 ]
  %109 = phi i32 [ %15, %4 ], [ %76, %21 ]
  %110 = phi i32 [ %17, %4 ], [ %84, %21 ]
  %111 = phi i32 [ %19, %4 ], [ %92, %21 ]
  store i32 %104, i32* %3, align 4
  store i32 %105, i32* %6, align 4
  store i32 %106, i32* %8, align 4
  store i32 %107, i32* %10, align 4
  store i32 %108, i32* %12, align 4
  store i32 %109, i32* %14, align 4
  store i32 %110, i32* %16, align 4
  store i32 %111, i32* %18, align 4
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
