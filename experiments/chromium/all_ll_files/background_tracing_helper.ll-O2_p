; ModuleID = '../../third_party/blink/renderer/core/timing/background_tracing_helper.cc'
source_filename = "../../third_party/blink/renderer/core/timing/background_tracing_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"struct.base::FeatureParam" = type { %"struct.base::Feature"*, i8*, i8* }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::BackgroundTracingHelper::SiteMarkHashMapContainer>::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::BackgroundTracingHelper::SiteMarkHashMapContainer>::InstanceStorage" = type { [24 x i8] }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.perfetto::Track" = type { i64, i64 }
%"struct.blink::BackgroundTracingHelper::SiteMarkHashMapContainer" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, [4 x i8], %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.0" }
%"class.WTF::HashTable.0" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::BackgroundTracingHelper" = type { %"class.WTF::String", i32, %"class.WTF::HashSet"* }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.40", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.46", %"class.blink::Member.48", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.57", %"class.blink::Member.63", %"class.blink::Member.65", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.7" }
%"class.WTF::HashMap.7" = type { %"class.WTF::HashTable.8" }
%"class.WTF::HashTable.8" = type <{ %"struct.WTF::KeyValuePair.10"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.10" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.16" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.13" }
%"class.WTF::HashSet.13" = type { %"class.WTF::HashTable.14" }
%"class.WTF::HashTable.14" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.16" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.17" }
%"class.blink::HeapHashMap.17" = type { %"class.WTF::HashMap.20" }
%"class.WTF::HashMap.20" = type { %"class.WTF::HashTable.21" }
%"class.WTF::HashTable.21" = type <{ %"struct.WTF::KeyValuePair.23"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.23" = type { i8*, %"class.blink::Member.334" }
%"class.blink::Member.334" = type { %"class.blink::MemberBase.335" }
%"class.blink::MemberBase.335" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.336" }
%"class.blink::Member.336" = type { %"class.blink::MemberBase.337" }
%"class.blink::MemberBase.337" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.24, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.36", i32, i32 }
%class.scoped_refptr.24 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.26 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.25 }
%union.anon.25 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.26 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.36" = type { %"class.WTF::HashTable.37" }
%"class.WTF::HashTable.37" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.40" = type { %"class.blink::MemberBase.41" }
%"class.blink::MemberBase.41" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.44"*, i32, i32 }
%"class.blink::Member.44" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.50", i32, i32 }
%"class.blink::HeapHashMap.50" = type { %"class.WTF::HashMap.53" }
%"class.WTF::HashMap.53" = type { %"class.WTF::HashTable.54" }
%"class.WTF::HashTable.54" = type <{ %"struct.WTF::KeyValuePair.56"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.56" = type opaque
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.base::MD5Digest" = type { [16 x i8] }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::PerformanceMark" = type { %"class.blink::PerformanceEntry.base", %class.scoped_refptr.69, %"class.blink::HeapHashMap.134", %"class.base::TimeTicks" }
%"class.blink::PerformanceEntry.base" = type <{ %"class.blink::ScriptWrappable", double, %"class.WTF::AtomicString", double, i32 }>
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%class.scoped_refptr.69 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.75", i64, %"class.WTF::Vector.79", %"class.WTF::Vector.84", %"class.WTF::Vector.90", %"class.WTF::Vector.108", %class.scoped_refptr.24, %"class.WTF::HashMap.114", %"class.WTF::Vector.119", %"class.WTF::Vector.79", %"class.WTF::Vector.124", %"class.WTF::HashMap.129", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.70" }
%"struct.std::__1::atomic.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__atomic_base.72" }
%"struct.std::__1::__atomic_base.72" = type { %"struct.std::__1::__cxx_atomic_impl.73" }
%"struct.std::__1::__cxx_atomic_impl.73" = type { %"struct.std::__1::__cxx_atomic_base_impl.74" }
%"struct.std::__1::__cxx_atomic_base_impl.74" = type { i32 }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { i8* }
%"class.WTF::Vector.84" = type { %"class.WTF::VectorBuffer.85" }
%"class.WTF::VectorBuffer.85" = type { %"class.WTF::VectorBufferBase.86", [8 x i8] }
%"class.WTF::VectorBufferBase.86" = type { %class.scoped_refptr.87*, i32, i32 }
%class.scoped_refptr.87 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.90" = type { %"class.WTF::VectorBuffer.91" }
%"class.WTF::VectorBuffer.91" = type { %"class.WTF::VectorBufferBase.92" }
%"class.WTF::VectorBufferBase.92" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.100" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.93 }
%class.scoped_refptr.93 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.108" = type { %"class.WTF::VectorBuffer.109" }
%"class.WTF::VectorBuffer.109" = type { %"class.WTF::VectorBufferBase.110" }
%"class.WTF::VectorBufferBase.110" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.111", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.111" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.114" = type { %"class.WTF::HashTable.115" }
%"class.WTF::HashTable.115" = type <{ %"struct.WTF::KeyValuePair.118"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.118" = type opaque
%"class.WTF::Vector.119" = type { %"class.WTF::VectorBuffer.120" }
%"class.WTF::VectorBuffer.120" = type { %"class.WTF::VectorBufferBase.121" }
%"class.WTF::VectorBufferBase.121" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.79" = type { %"class.WTF::VectorBuffer.80" }
%"class.WTF::VectorBuffer.80" = type { %"class.WTF::VectorBufferBase.81", [16 x i8] }
%"class.WTF::VectorBufferBase.81" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.124" = type { %"class.WTF::VectorBuffer.125" }
%"class.WTF::VectorBuffer.125" = type { %"class.WTF::VectorBufferBase.126" }
%"class.WTF::VectorBufferBase.126" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.129" = type { %"class.WTF::HashTable.130" }
%"class.WTF::HashTable.130" = type <{ %"struct.WTF::KeyValuePair.133"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.133" = type { i8**, %"class.std::__1::unique_ptr.338" }
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashMap.134" = type { %"class.WTF::HashMap.137" }
%"class.WTF::HashMap.137" = type { %"class.WTF::HashTable.138" }
%"class.WTF::HashTable.138" = type <{ %"struct.WTF::KeyValuePair.140"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.140" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.409", %"class.WTF::String" }
%"class.WTF::StringAppend.409" = type { %"class.WTF::String", i8* }
%"class.perfetto::EventContext" = type { %"class.protozero::MessageHandle", %"class.perfetto::protos::pbzero::TrackEvent"*, %"struct.perfetto::internal::TrackEventIncrementalState"* }
%"class.protozero::MessageHandle" = type { %"class.protozero::MessageHandleBase" }
%"class.protozero::MessageHandleBase" = type { %"class.protozero::Message"* }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.345" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { i64 }
%"class.perfetto::protos::pbzero::TrackEvent" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"struct.perfetto::internal::TrackEventIncrementalState" = type { i8, %"class.protozero::HeapBuffered", %"struct.std::__1::array", %"class.perfetto::base::FlatSet", %"class.std::__1::unordered_map" }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.349", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.349" = type { %"class.std::__1::__vector_base.350" }
%"class.std::__1::__vector_base.350" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.351", i64, i64 }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::InternedData.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::InternedData.base" = type { %"class.protozero::Message.base" }
%"struct.std::__1::array" = type { [32 x %"struct.std::__1::pair.361"] }
%"struct.std::__1::pair.361" = type { i64, %"class.std::__1::unique_ptr.362" }
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.perfetto::internal::BaseTrackEventInternedDataIndex"* }
%"class.perfetto::internal::BaseTrackEventInternedDataIndex" = type { i32 (...)** }
%"class.perfetto::base::FlatSet" = type { %"class.std::__1::vector.368" }
%"class.std::__1::vector.368" = type { %"class.std::__1::__vector_base.369" }
%"class.std::__1::__vector_base.369" = type { i64*, i64*, %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { i64* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.375" }
%"class.std::__1::__hash_table.375" = type <{ %"class.std::__1::unique_ptr.376", %"class.std::__1::__compressed_pair.386", %"class.std::__1::__compressed_pair.391", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378", %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"struct.std::__1::__hash_node_base.379"** }
%"struct.std::__1::__hash_node_base.379" = type { %"struct.std::__1::__hash_node_base.379"* }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.std::__1::__bucket_list_deallocator.381" }
%"class.std::__1::__bucket_list_deallocator.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"struct.std::__1::__hash_node_base.379" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { float }
%"class.base::trace_event::TrackEventHandle" = type { %"class.perfetto::protos::pbzero::TrackEvent"*, %"struct.perfetto::internal::TrackEventIncrementalState"*, %"class.base::trace_event::TrackEventHandle::CompletionListener"* }
%"class.base::trace_event::TrackEventHandle::CompletionListener" = type { i32 (...)** }
%"class.blink::RendererResourceCoordinator" = type { i32 (...)** }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.142", i32, [4 x i8], %"class.std::__1::unique_ptr.280", %"class.std::__1::unique_ptr.280", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.296", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.321", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.260", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.178" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.178" = type { %"struct.std::__1::__atomic_base.179" }
%"struct.std::__1::__atomic_base.179" = type { %"struct.std::__1::__atomic_base.180" }
%"struct.std::__1::__atomic_base.180" = type { %"struct.std::__1::__cxx_atomic_impl.181" }
%"struct.std::__1::__cxx_atomic_impl.181" = type { %"struct.std::__1::__cxx_atomic_base_impl.182" }
%"struct.std::__1::__cxx_atomic_base_impl.182" = type { i64 }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::Worklist.189"* }
%"class.blink::Worklist.189" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.178" }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::Worklist.196"* }
%"class.blink::Worklist.196" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.178" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::Worklist.203"* }
%"class.blink::Worklist.203" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.178" }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::Worklist.210"* }
%"class.blink::Worklist.210" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.178" }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::Worklist.217"* }
%"class.blink::Worklist.217" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.178" }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::Worklist.224"* }
%"class.blink::Worklist.224" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.178" }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::Worklist.231"* }
%"class.blink::Worklist.231" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.178" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.238", %"class.std::__1::__compressed_pair.247", %"class.std::__1::__compressed_pair.252", %"class.std::__1::__compressed_pair.254", [4 x i8] }>
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240", %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.263", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.272" }
%"class.WTF::Vector.272" = type { %"class.WTF::VectorBuffer.273" }
%"class.WTF::VectorBuffer.273" = type { %"class.WTF::VectorBufferBase.274" }
%"class.WTF::VectorBufferBase.274" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.288" }
%"class.WTF::VectorBuffer.288" = type { %"class.WTF::VectorBufferBase.289" }
%"class.WTF::VectorBufferBase.289" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.302" }
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.189"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.196"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.203"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.210"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.217"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.325" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.320 }
%class.scoped_refptr.320 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.321" = type { %"struct.std::__1::__atomic_base.322" }
%"struct.std::__1::__atomic_base.322" = type { %"struct.std::__1::__cxx_atomic_impl.323" }
%"struct.std::__1::__cxx_atomic_impl.323" = type { %"struct.std::__1::__cxx_atomic_base_impl.324" }
%"struct.std::__1::__cxx_atomic_base_impl.324" = type { i8 }
%"class.WTF::StringTypeAdapter.412" = type <{ i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringTypeAdapter.410" = type { %"class.WTF::StringTypeAdapter.411" }
%"class.WTF::StringTypeAdapter.411" = type { %"class.WTF::StringView" }

$_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKjRjEENS_18HashTableAddResultIS7_jEEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE6ExpandEPj = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE8RehashToEPjjS8_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjNS_7HashSetIjNS_7IntHashIjEENS_10HashTraitsIjEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E6insertINS_17HashMapTranslatorISD_S4_S7_EERjS8_EENS_18HashTableAddResultISE_S9_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjNS_7HashSetIjNS_7IntHashIjEENS_10HashTraitsIjEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E6ExpandEPS9_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjNS_7HashSetIjNS_7IntHashIjEENS_10HashTraitsIjEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E8RehashToEPS9_jSF_ = comdat any

@_ZN5blink8features33kBackgroundTracingPerformanceMarkE = external global %"struct.base::Feature", align 8
@_ZN5blink8features43kBackgroundTracingPerformanceMark_AllowListE = external global %"struct.base::FeatureParam", align 8
@_ZN3url11kHttpSchemeE = external constant [0 x i8], align 1
@_ZN3url12kHttpsSchemeE = external constant [0 x i8], align 1
@_ZZN5blink23BackgroundTracingHelper18GetSiteMarkHashMapEvE30s_site_mark_hash_map_container = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink23BackgroundTracingHelper18GetSiteMarkHashMapEvE30s_site_mark_hash_map_container = internal global i64 0, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [17 x i8] c"performance.mark\00", align 1
@_ZN20trace_event_internal13kDefaultTrackE = external local_unnamed_addr global %"struct.perfetto::Track", align 8
@_ZN5blink12_GLOBAL__N_114kTriggerPrefixE = internal constant [9 x i8] c"trigger:\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.3 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIjNS_7HashSetIjNS_7IntHashIjEENS_10HashTraitsIjEENS_18PartitionAllocatorEEEEEEEPKcv = private unnamed_addr constant [192 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<unsigned int, WTF::HashSet<unsigned int, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::PartitionAllocator> >]\00", align 1

@_ZN5blink23BackgroundTracingHelper24SiteMarkHashMapContainerC1Ev = hidden unnamed_addr alias void (%"struct.blink::BackgroundTracingHelper::SiteMarkHashMapContainer"*), void (%"struct.blink::BackgroundTracingHelper::SiteMarkHashMapContainer"*)* @_ZN5blink23BackgroundTracingHelper24SiteMarkHashMapContainerC2Ev
@_ZN5blink23BackgroundTracingHelperC1EPNS_16ExecutionContextE = hidden unnamed_addr alias void (%"class.blink::BackgroundTracingHelper"*, %"class.blink::ExecutionContext"*), void (%"class.blink::BackgroundTracingHelper"*, %"class.blink::ExecutionContext"*)* @_ZN5blink23BackgroundTracingHelperC2EPNS_16ExecutionContextE
@_ZN5blink23BackgroundTracingHelperD1Ev = hidden unnamed_addr alias void (%"class.blink::BackgroundTracingHelper"*), void (%"class.blink::BackgroundTracingHelper"*)* @_ZN5blink23BackgroundTracingHelperD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23BackgroundTracingHelper24SiteMarkHashMapContainerC2Ev(%"struct.blink::BackgroundTracingHelper::SiteMarkHashMapContainer"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"struct.blink::BackgroundTracingHelper::SiteMarkHashMapContainer"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 20, i1 false) #10
  %4 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features33kBackgroundTracingPerformanceMarkE) #10
  br i1 %4, label %5, label %26

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::BackgroundTracingHelper::SiteMarkHashMapContainer", %"struct.blink::BackgroundTracingHelper::SiteMarkHashMapContainer"* %0, i64 0, i32 0
  %7 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @_ZNK4base12FeatureParamINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELb0EE3GetEv(%"class.std::__1::basic_string"* nonnull sret %2, %"struct.base::FeatureParam"* nonnull @_ZN5blink8features43kBackgroundTracingPerformanceMark_AllowListE) #10
  %11 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = load i8*, i8** %8, align 8
  %16 = select i1 %14, i8* %15, i8* %7
  %17 = load i64, i64* %9, align 8
  %18 = zext i8 %13 to i64
  %19 = select i1 %14, i64 %17, i64 %18
  %20 = call zeroext i1 @_ZN5blink23BackgroundTracingHelper43ParseBackgroundTracingPerformanceMarkHashesEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERN3WTF7HashMapIjNS7_7HashSetIjNS7_7IntHashIjEENS7_10HashTraitsIjEENS7_18PartitionAllocatorEEESB_SD_NSC_ISF_EESE_EE(i8* %16, i64 %19, %"class.WTF::HashMap"* dereferenceable(24) %6)
  %21 = load i8, i8* %12, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %5
  %24 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %24) #11
  br label %25

25:                                               ; preds = %5, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  br label %26

26:                                               ; preds = %1, %25
  ret void
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK4base12FeatureParamINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELb0EE3GetEv(%"class.std::__1::basic_string"* sret, %"struct.base::FeatureParam"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23BackgroundTracingHelper43ParseBackgroundTracingPerformanceMarkHashesEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERN3WTF7HashMapIjNS7_7HashSetIjNS7_7IntHashIjEENS7_10HashTraitsIjEENS7_18PartitionAllocatorEEESB_SD_NSC_ISF_EESE_EE(i8*, i64, %"class.WTF::HashMap"* nocapture dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca %"class.WTF::HashMap", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.WTF::HashSet", align 8
  %9 = alloca i32, align 4
  %10 = bitcast %"class.WTF::HashMap"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %6, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %6, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %6, i64 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %6, i64 0, i32 0, i32 3
  %15 = bitcast %"class.WTF::HashMap"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 20, i1 false) #10
  %16 = getelementptr inbounds i8, i8* %0, i64 %1
  %17 = bitcast i32* %7 to i8*
  %18 = bitcast %"class.WTF::HashSet"* %8 to i8*
  %19 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %8, i64 0, i32 0, i32 0
  %20 = bitcast i32* %9 to i8*
  %21 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %8, i64 0, i32 0
  %22 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %6, i64 0, i32 0
  %23 = bitcast %"class.WTF::HashSet"* %8 to i8*
  br label %24

24:                                               ; preds = %172, %3
  %25 = phi i8* [ %0, %3 ], [ %165, %172 ]
  %26 = icmp ult i8* %25, %16
  br i1 %26, label %27, label %174

27:                                               ; preds = %24
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #10
  store i32 0, i32* %7, align 4
  %28 = ptrtoint i8* %25 to i64
  br label %29

29:                                               ; preds = %42, %27
  %30 = phi i8* [ %25, %27 ], [ %43, %42 ]
  %31 = icmp ult i8* %30, %16
  br i1 %31, label %32, label %47

32:                                               ; preds = %29
  %33 = load i8, i8* %30, align 1
  %34 = icmp eq i8 %33, 61
  br i1 %34, label %47, label %35

35:                                               ; preds = %32
  %36 = add i8 %33, -48
  %37 = icmp ult i8 %36, 10
  br i1 %37, label %42, label %38

38:                                               ; preds = %35
  %39 = or i8 %33, 32
  %40 = add i8 %39, -97
  %41 = icmp ult i8 %40, 6
  br i1 %41, label %42, label %171

42:                                               ; preds = %38, %35
  %43 = getelementptr inbounds i8, i8* %30, i64 1
  %44 = ptrtoint i8* %43 to i64
  %45 = sub i64 %44, %28
  %46 = icmp sgt i64 %45, 8
  br i1 %46, label %171, label %29

47:                                               ; preds = %32, %29
  %48 = phi i1 [ true, %32 ], [ false, %29 ]
  %49 = icmp eq i8* %30, %25
  %50 = icmp eq i8* %30, %16
  %51 = or i1 %49, %50
  br i1 %51, label %171, label %52

52:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #10
  store i8 0, i8* %5, align 1
  %53 = ptrtoint i8* %30 to i64
  %54 = sub i64 %53, %28
  %55 = call i32 @_ZN3WTF19HexCharactersToUIntEPKhmNS_20NumberParsingOptionsEPb(i8* %25, i64 %54, i32 0, i8* nonnull %5) #10
  store i32 %55, i32* %7, align 4
  %56 = getelementptr inbounds i8, i8* %30, i64 1
  %57 = select i1 %48, i8* %56, i8* %30
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #10
  %58 = icmp eq i8* %57, null
  br i1 %58, label %171, label %59

59:                                               ; preds = %52
  %60 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %61 = icmp eq %"struct.WTF::KeyValuePair"* %60, null
  br i1 %61, label %116, label %62

62:                                               ; preds = %59
  %63 = load i32, i32* %12, align 8
  %64 = add i32 %63, -1
  %65 = zext i32 %64 to i64
  %66 = shl i32 %55, 15
  %67 = xor i32 %66, -1
  %68 = add i32 %55, %67
  %69 = lshr i32 %68, 10
  %70 = xor i32 %69, %68
  %71 = mul i32 %70, 9
  %72 = lshr i32 %71, 6
  %73 = xor i32 %72, %71
  %74 = shl i32 %73, 11
  %75 = xor i32 %74, -1
  %76 = add i32 %73, %75
  %77 = lshr i32 %76, 16
  %78 = xor i32 %77, %76
  %79 = and i32 %78, %64
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %60, i64 %80
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, %55
  br i1 %84, label %113, label %85

85:                                               ; preds = %62
  %86 = xor i32 %78, -1
  %87 = lshr i32 %76, 23
  %88 = add i32 %87, %86
  %89 = shl i32 %88, 12
  %90 = xor i32 %89, %88
  %91 = lshr i32 %90, 7
  %92 = xor i32 %91, %90
  %93 = shl i32 %92, 2
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 20
  %96 = xor i32 %95, %94
  %97 = or i32 %96, 1
  %98 = zext i32 %97 to i64
  br label %99

99:                                               ; preds = %104, %85
  %100 = phi i32 [ %83, %85 ], [ %111, %104 ]
  %101 = phi i64 [ %80, %85 ], [ %108, %104 ]
  %102 = phi i64 [ 0, %85 ], [ %106, %104 ]
  %103 = icmp eq i32 %100, 0
  br i1 %103, label %116, label %104

104:                                              ; preds = %99
  %105 = icmp eq i64 %102, 0
  %106 = select i1 %105, i64 %98, i64 %102
  %107 = add i64 %106, %101
  %108 = and i64 %107, %65
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %60, i64 %108
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %109, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, %55
  br i1 %112, label %113, label %99

113:                                              ; preds = %104, %62
  %114 = phi %"struct.WTF::KeyValuePair"* [ %81, %62 ], [ %109, %104 ]
  %115 = icmp eq %"struct.WTF::KeyValuePair"* %114, null
  br i1 %115, label %116, label %171

116:                                              ; preds = %99, %113, %59
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 20, i1 false) #10
  br label %117

117:                                              ; preds = %160, %116
  %118 = phi i8* [ %57, %116 ], [ %145, %160 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #10
  store i32 0, i32* %9, align 4
  %119 = ptrtoint i8* %118 to i64
  br label %120

120:                                              ; preds = %132, %117
  %121 = phi i8* [ %118, %117 ], [ %133, %132 ]
  %122 = icmp ult i8* %121, %16
  br i1 %122, label %123, label %137

123:                                              ; preds = %120
  %124 = load i8, i8* %121, align 1
  switch i8 %124, label %125 [
    i8 95, label %137
    i8 59, label %137
    i8 44, label %137
  ]

125:                                              ; preds = %123
  %126 = add i8 %124, -48
  %127 = icmp ult i8 %126, 10
  br i1 %127, label %132, label %128

128:                                              ; preds = %125
  %129 = or i8 %124, 32
  %130 = add i8 %129, -97
  %131 = icmp ult i8 %130, 6
  br i1 %131, label %132, label %158

132:                                              ; preds = %128, %125
  %133 = getelementptr inbounds i8, i8* %121, i64 1
  %134 = ptrtoint i8* %133 to i64
  %135 = sub i64 %134, %119
  %136 = icmp sgt i64 %135, 8
  br i1 %136, label %158, label %120

137:                                              ; preds = %123, %123, %123, %120
  %138 = phi i1 [ true, %123 ], [ false, %120 ], [ true, %123 ], [ true, %123 ]
  %139 = icmp eq i8* %121, %118
  br i1 %139, label %158, label %140

140:                                              ; preds = %137
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 0, i8* %4, align 1
  %141 = ptrtoint i8* %121 to i64
  %142 = sub i64 %141, %119
  %143 = call i32 @_ZN3WTF19HexCharactersToUIntEPKhmNS_20NumberParsingOptionsEPb(i8* %118, i64 %142, i32 0, i8* nonnull %4) #10
  store i32 %143, i32* %9, align 4
  %144 = getelementptr inbounds i8, i8* %121, i64 1
  %145 = select i1 %138, i8* %144, i8* %121
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  %146 = icmp eq i8* %145, null
  br i1 %146, label %158, label %147

147:                                              ; preds = %140
  %148 = call { i32*, i8 } @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKjRjEENS_18HashTableAddResultIS7_jEEOT0_OT1_(%"class.WTF::HashTable.0"* nonnull %21, i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %9) #10
  %149 = extractvalue { i32*, i8 } %148, 1
  %150 = and i8 %149, 1
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %158, label %152

152:                                              ; preds = %147
  %153 = icmp eq i8* %145, %16
  br i1 %153, label %161, label %154

154:                                              ; preds = %152
  %155 = getelementptr inbounds i8, i8* %145, i64 -1
  %156 = load i8, i8* %155, align 1
  %157 = icmp eq i8 %156, 59
  br i1 %157, label %161, label %160

158:                                              ; preds = %140, %147, %137, %128, %132
  %159 = phi i8* [ null, %132 ], [ null, %128 ], [ null, %137 ], [ %145, %147 ], [ null, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #10
  br label %164

160:                                              ; preds = %154
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #10
  br label %117

161:                                              ; preds = %154, %152
  %162 = phi i8* [ %145, %154 ], [ %16, %152 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #10
  %163 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNS_7HashSetIjNS_7IntHashIjEENS_10HashTraitsIjEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E6insertINS_17HashMapTranslatorISD_S4_S7_EERjS8_EENS_18HashTableAddResultISE_S9_EEOT0_OT1_(%"class.WTF::HashTable"* nonnull %22, i32* nonnull dereferenceable(4) %7, %"class.WTF::HashSet"* nonnull dereferenceable(24) %8) #10
  br label %164

164:                                              ; preds = %158, %161
  %165 = phi i8* [ %162, %161 ], [ %159, %158 ]
  %166 = phi i32 [ 0, %161 ], [ 1, %158 ]
  %167 = load i32*, i32** %19, align 8
  %168 = icmp eq i32* %167, null
  br i1 %168, label %172, label %169, !prof !2

169:                                              ; preds = %164
  %170 = bitcast i32* %167 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %170) #10
  store i32* null, i32** %19, align 8
  br label %172

171:                                              ; preds = %113, %52, %47, %38, %42
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #10
  br label %194

172:                                              ; preds = %169, %164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #10
  %173 = icmp eq i32 %166, 0
  br i1 %173, label %24, label %194

174:                                              ; preds = %24
  %175 = bitcast %"class.WTF::HashMap"* %6 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast %"class.WTF::HashMap"* %2 to i64*
  %178 = load i64, i64* %177, align 8
  store atomic i64 %178, i64* %175 monotonic, align 8
  store atomic i64 %176, i64* %177 monotonic, align 8
  %179 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %2, i64 0, i32 0, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = load i32, i32* %12, align 8
  store i32 %181, i32* %179, align 4
  store i32 %180, i32* %12, align 8
  %182 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %2, i64 0, i32 0, i32 2
  %183 = load i32, i32* %182, align 4
  %184 = load i32, i32* %13, align 4
  store i32 %184, i32* %182, align 4
  store i32 %183, i32* %13, align 4
  %185 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %2, i64 0, i32 0, i32 3
  %186 = load i32, i32* %185, align 8
  %187 = and i32 %186, 2147483647
  %188 = load i32, i32* %14, align 8
  %189 = and i32 %188, 2147483647
  %190 = and i32 %186, -2147483648
  %191 = or i32 %189, %190
  store i32 %191, i32* %185, align 8
  %192 = and i32 %188, -2147483648
  %193 = or i32 %192, %187
  store i32 %193, i32* %14, align 8
  br label %194

194:                                              ; preds = %172, %171, %174
  %195 = phi i1 [ true, %174 ], [ false, %171 ], [ false, %172 ]
  %196 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %197 = icmp eq %"struct.WTF::KeyValuePair"* %196, null
  br i1 %197, label %219, label %198, !prof !2

198:                                              ; preds = %194
  %199 = load i32, i32* %12, align 8
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %217, label %201

201:                                              ; preds = %198
  %202 = zext i32 %199 to i64
  br label %203

203:                                              ; preds = %214, %201
  %204 = phi i64 [ 0, %201 ], [ %215, %214 ]
  %205 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %196, i64 %204, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, -1
  br i1 %207, label %214, label %208

208:                                              ; preds = %203
  %209 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %196, i64 %204, i32 2, i32 0, i32 0
  %210 = load i32*, i32** %209, align 8
  %211 = icmp eq i32* %210, null
  br i1 %211, label %214, label %212, !prof !2

212:                                              ; preds = %208
  %213 = bitcast i32* %210 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %213) #10
  store i32* null, i32** %209, align 8
  br label %214

214:                                              ; preds = %212, %208, %203
  %215 = add nuw nsw i64 %204, 1
  %216 = icmp eq i64 %215, %202
  br i1 %216, label %217, label %203

217:                                              ; preds = %214, %198
  %218 = bitcast %"struct.WTF::KeyValuePair"* %196 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %218) #10
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %11, align 8
  br label %219

219:                                              ; preds = %194, %217
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  ret i1 %195
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23BackgroundTracingHelperC2EPNS_16ExecutionContextE(%"class.blink::BackgroundTracingHelper"* nocapture, %"class.blink::ExecutionContext"*) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.base::MD5Digest", align 4
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = getelementptr inbounds %"class.blink::BackgroundTracingHelper", %"class.blink::BackgroundTracingHelper"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::BackgroundTracingHelper", %"class.blink::BackgroundTracingHelper"* %0, i64 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::BackgroundTracingHelper", %"class.blink::BackgroundTracingHelper"* %0, i64 0, i32 2
  store %"class.WTF::HashSet"* null, %"class.WTF::HashSet"** %13, align 8
  %14 = tail call dereferenceable(24) %"class.WTF::HashMap"* @_ZN5blink23BackgroundTracingHelper18GetSiteMarkHashMapEv()
  %15 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %14, i64 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %276, label %18

18:                                               ; preds = %2
  %19 = tail call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %1) #10
  %20 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin7IsLocalEv(%"class.blink::SecurityOrigin"* %19) #10
  br i1 %20, label %276, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %19, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %23 = load i8, i8* %22, align 8, !range !3
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %276

25:                                               ; preds = %21
  %26 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin11IsLocalhostEv(%"class.blink::SecurityOrigin"* %19) #10
  br i1 %26, label %276, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %19, i64 0, i32 1, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %53

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #10
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !4

45:                                               ; preds = %36
  tail call void @llvm.trap() #10
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  br label %53

48:                                               ; preds = %27
  %49 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #10
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %50, align 8
  %51 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %52 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %51, i64* %52, align 8
  br label %61

53:                                               ; preds = %31, %46
  %54 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #10
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %60 = bitcast i8** %59 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %60, align 8
  br label %61

61:                                               ; preds = %53, %48
  %62 = phi i8* [ %54, %53 ], [ %49, %48 ]
  %63 = phi i32 [ %57, %53 ], [ 0, %48 ]
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %63, i32* %64, align 8
  %65 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #10
  %66 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0)) #12
  %67 = icmp ult i64 %66, 4294967296
  br i1 %67, label %69, label %68, !prof !2

68:                                               ; preds = %61
  tail call void @llvm.trap() #10
  unreachable

69:                                               ; preds = %61
  %70 = trunc i64 %66 to i32
  %71 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %72 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0), i8** %73, align 8
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %70, i32* %74, align 8
  %75 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #10
  br i1 %75, label %138, label %76

76:                                               ; preds = %69
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %96, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %101

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i33
  %88 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #10
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !4

93:                                               ; preds = %84
  call void @llvm.trap() #10
  unreachable

94:                                               ; preds = %84
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %85, align 4
  br label %101

96:                                               ; preds = %76
  %97 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #10
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %98, align 8
  %99 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %100 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %99, i64* %100, align 8
  br label %109

101:                                              ; preds = %79, %94
  %102 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #10
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %103, align 8
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 1
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %108 = bitcast i8** %107 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %106, %"class.WTF::StringImpl"** %108, align 8
  br label %109

109:                                              ; preds = %101, %96
  %110 = phi i8* [ %102, %101 ], [ %97, %96 ]
  %111 = phi i32 [ %105, %101 ], [ 0, %96 ]
  %112 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %111, i32* %112, align 8
  %113 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #10
  %114 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0)) #12
  %115 = icmp ult i64 %114, 4294967296
  br i1 %115, label %117, label %116, !prof !2

116:                                              ; preds = %109
  call void @llvm.trap() #10
  unreachable

117:                                              ; preds = %109
  %118 = trunc i64 %114 to i32
  %119 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %120 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0), i8** %121, align 8
  %122 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %118, i32* %122, align 8
  %123 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #10
  %124 = xor i1 %123, true
  br i1 %78, label %138, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #10
  br label %138

138:                                              ; preds = %69, %137, %134, %117
  %139 = phi i1 [ false, %69 ], [ %124, %117 ], [ %124, %134 ], [ %124, %137 ]
  br i1 %30, label %153, label %140

140:                                              ; preds = %138
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #10
  br label %153

153:                                              ; preds = %138, %149, %152
  br i1 %139, label %276, label %154

154:                                              ; preds = %153
  %155 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #10
  %156 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %156, align 8
  %157 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #10
  %158 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %19, i64 0, i32 3, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %178, label %161

161:                                              ; preds = %154
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %178

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = zext i32 %168 to i33
  %170 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %169, i33 1) #10
  %171 = extractvalue { i33, i1 } %170, 1
  %172 = extractvalue { i33, i1 } %170, 0
  %173 = icmp slt i33 %172, 0
  %174 = or i1 %171, %173
  br i1 %174, label %175, label %176, !prof !4

175:                                              ; preds = %166
  call void @llvm.trap() #10
  unreachable

176:                                              ; preds = %166
  %177 = trunc i33 %172 to i32
  store i32 %177, i32* %167, align 4
  br label %178

178:                                              ; preds = %154, %161, %176
  %179 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %159, %"class.WTF::StringImpl"** %179, align 8
  %180 = call %"class.WTF::StringImpl"* @_ZN5blink28EncodeWithURLEscapeSequencesERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %9) #10
  store %"class.WTF::StringImpl"* %180, %"class.WTF::StringImpl"** %156, align 8
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %182 = icmp eq %"class.WTF::StringImpl"* %181, null
  br i1 %182, label %196, label %183

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = and i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  br i1 %187, label %190, label %192

190:                                              ; preds = %183
  %191 = add i32 %189, -1
  store i32 %191, i32* %188, align 4
  br label %192

192:                                              ; preds = %190, %183
  %193 = phi i32 [ %191, %190 ], [ %189, %183 ]
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %192
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %181) #10
  br label %196

196:                                              ; preds = %178, %192, %195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #10
  %197 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %197) #10
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %10, %"class.WTF::String"* nonnull %8) #10
  %198 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %199 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %198, i64 0, i32 1, i32 0
  %200 = load i8, i8* %199, align 1
  %201 = icmp slt i8 %200, 0
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i8*, i8** %202, align 8
  %204 = select i1 %201, i8* %203, i8* %197
  %205 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %206 = load i64, i64* %205, align 8
  %207 = zext i8 %200 to i64
  %208 = select i1 %201, i64 %206, i64 %207
  %209 = getelementptr inbounds %"struct.base::MD5Digest", %"struct.base::MD5Digest"* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %209) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %209, i8 -86, i64 16, i1 false) #10
  call void @_ZN4base6MD5SumEPKvmPNS_9MD5DigestE(i8* %204, i64 %208, %"struct.base::MD5Digest"* nonnull %3) #10
  %210 = bitcast %"struct.base::MD5Digest"* %3 to i32*
  %211 = load i32, i32* %210, align 4
  %212 = call i32 @llvm.bswap.i32(i32 %211) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %209) #10
  %213 = load i8, i8* %199, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %215, label %217

215:                                              ; preds = %196
  %216 = load i8*, i8** %202, align 8
  call void @_ZdlPv(i8* %216) #11
  br label %217

217:                                              ; preds = %196, %215
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %197) #10
  %218 = call %"class.WTF::HashSet"* @_ZN5blink23BackgroundTracingHelper25GetMarkHashSetForSiteHashEj(i32 %212)
  store %"class.WTF::HashSet"* %218, %"class.WTF::HashSet"** %13, align 8
  %219 = icmp eq %"class.WTF::HashSet"* %218, null
  br i1 %219, label %259, label %220

220:                                              ; preds = %217
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %240, label %223

223:                                              ; preds = %220
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %240

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %230 = load i32, i32* %229, align 4
  %231 = zext i32 %230 to i33
  %232 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %231, i33 1) #10
  %233 = extractvalue { i33, i1 } %232, 1
  %234 = extractvalue { i33, i1 } %232, 0
  %235 = icmp slt i33 %234, 0
  %236 = or i1 %233, %235
  br i1 %236, label %237, label %238, !prof !4

237:                                              ; preds = %228
  call void @llvm.trap() #10
  unreachable

238:                                              ; preds = %228
  %239 = trunc i33 %234 to i32
  store i32 %239, i32* %229, align 4
  br label %240

240:                                              ; preds = %238, %223, %220
  %241 = ptrtoint %"class.WTF::StringImpl"* %221 to i64
  %242 = bitcast %"class.blink::BackgroundTracingHelper"* %0 to i64*
  %243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  store i64 %241, i64* %242, align 8
  %244 = icmp eq %"class.WTF::StringImpl"* %243, null
  br i1 %244, label %258, label %245

245:                                              ; preds = %240
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load atomic i32, i32* %246 monotonic, align 4
  %248 = and i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  br i1 %249, label %252, label %254

252:                                              ; preds = %245
  %253 = add i32 %251, -1
  store i32 %253, i32* %250, align 4
  br label %254

254:                                              ; preds = %252, %245
  %255 = phi i32 [ %253, %252 ], [ %251, %245 ]
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %258

257:                                              ; preds = %254
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %243) #10
  br label %258

258:                                              ; preds = %240, %254, %257
  store i32 %212, i32* %12, align 8
  br label %259

259:                                              ; preds = %217, %258
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %261 = icmp eq %"class.WTF::StringImpl"* %260, null
  br i1 %261, label %275, label %262

262:                                              ; preds = %259
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 0
  %268 = load i32, i32* %267, align 4
  br i1 %266, label %269, label %271

269:                                              ; preds = %262
  %270 = add i32 %268, -1
  store i32 %270, i32* %267, align 4
  br label %271

271:                                              ; preds = %269, %262
  %272 = phi i32 [ %270, %269 ], [ %268, %262 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %271
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %260) #10
  br label %275

275:                                              ; preds = %259, %271, %274
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #10
  br label %276

276:                                              ; preds = %21, %275, %25, %18, %153, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.WTF::HashMap"* @_ZN5blink23BackgroundTracingHelper18GetSiteMarkHashMapEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.std::__1::basic_string", align 8
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink23BackgroundTracingHelper18GetSiteMarkHashMapEvE30s_site_mark_hash_map_container to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %29, !prof !5

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink23BackgroundTracingHelper18GetSiteMarkHashMapEvE30s_site_mark_hash_map_container) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %29, label %7

7:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink23BackgroundTracingHelper18GetSiteMarkHashMapEvE30s_site_mark_hash_map_container, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #10
  %8 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features33kBackgroundTracingPerformanceMarkE) #10
  br i1 %8, label %9, label %28

9:                                                ; preds = %7
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false) #10
  call void @_ZNK4base12FeatureParamINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELb0EE3GetEv(%"class.std::__1::basic_string"* nonnull sret %1, %"struct.base::FeatureParam"* nonnull @_ZN5blink8features43kBackgroundTracingPerformanceMark_AllowListE) #10
  %13 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = load i8*, i8** %11, align 8
  %18 = select i1 %16, i8* %17, i8* %10
  %19 = load i64, i64* %12, align 8
  %20 = zext i8 %15 to i64
  %21 = select i1 %16, i64 %19, i64 %20
  %22 = call zeroext i1 @_ZN5blink23BackgroundTracingHelper43ParseBackgroundTracingPerformanceMarkHashesEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERN3WTF7HashMapIjNS7_7HashSetIjNS7_7IntHashIjEENS7_10HashTraitsIjEENS7_18PartitionAllocatorEEESB_SD_NSC_ISF_EESE_EE(i8* %18, i64 %21, %"class.WTF::HashMap"* dereferenceable(24) bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink23BackgroundTracingHelper18GetSiteMarkHashMapEvE30s_site_mark_hash_map_container to %"class.WTF::HashMap"*)) #10
  %23 = load i8, i8* %14, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %9
  %26 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %25, %9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  br label %28

28:                                               ; preds = %7, %27
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink23BackgroundTracingHelper18GetSiteMarkHashMapEvE30s_site_mark_hash_map_container) #10
  br label %29

29:                                               ; preds = %4, %28, %0
  ret %"class.WTF::HashMap"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink23BackgroundTracingHelper18GetSiteMarkHashMapEvE30s_site_mark_hash_map_container to %"class.WTF::HashMap"*)
}

declare %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink14SecurityOrigin7IsLocalEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink14SecurityOrigin11IsLocalhostEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink28EncodeWithURLEscapeSequencesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink23BackgroundTracingHelper9MD5Hash32EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.base::MD5Digest", align 4
  %4 = getelementptr inbounds %"struct.base::MD5Digest", %"struct.base::MD5Digest"* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %4, i8 -86, i64 16, i1 false)
  call void @_ZN4base6MD5SumEPKvmPNS_9MD5DigestE(i8* %0, i64 %1, %"struct.base::MD5Digest"* nonnull %3) #10
  %5 = bitcast %"struct.base::MD5Digest"* %3 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = call i32 @llvm.bswap.i32(i32 %6) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #10
  ret i32 %7
}

declare void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::HashSet"* @_ZN5blink23BackgroundTracingHelper25GetMarkHashSetForSiteHashEj(i32) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(24) %"class.WTF::HashMap"* @_ZN5blink23BackgroundTracingHelper18GetSiteMarkHashMapEv()
  %3 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %2, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %63, label %8

8:                                                ; preds = %1
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = shl i32 %0, 15
  %12 = xor i32 %11, -1
  %13 = add i32 %12, %0
  %14 = lshr i32 %13, 10
  %15 = xor i32 %14, %13
  %16 = mul i32 %15, 9
  %17 = lshr i32 %16, 6
  %18 = xor i32 %17, %16
  %19 = shl i32 %18, 11
  %20 = xor i32 %19, -1
  %21 = add i32 %18, %20
  %22 = lshr i32 %21, 16
  %23 = xor i32 %22, %21
  %24 = and i32 %9, %23
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %25
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, %0
  br i1 %29, label %58, label %30

30:                                               ; preds = %8
  %31 = xor i32 %23, -1
  %32 = lshr i32 %21, 23
  %33 = add i32 %32, %31
  %34 = shl i32 %33, 12
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 7
  %37 = xor i32 %36, %35
  %38 = shl i32 %37, 2
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 20
  %41 = xor i32 %40, %39
  %42 = or i32 %41, 1
  %43 = zext i32 %42 to i64
  br label %44

44:                                               ; preds = %49, %30
  %45 = phi i32 [ %28, %30 ], [ %56, %49 ]
  %46 = phi i64 [ %25, %30 ], [ %53, %49 ]
  %47 = phi i64 [ 0, %30 ], [ %51, %49 ]
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %63, label %49

49:                                               ; preds = %44
  %50 = icmp eq i64 %47, 0
  %51 = select i1 %50, i64 %43, i64 %47
  %52 = add i64 %51, %46
  %53 = and i64 %52, %10
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %53
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %0
  br i1 %57, label %58, label %44

58:                                               ; preds = %49, %8
  %59 = phi %"struct.WTF::KeyValuePair"* [ %26, %8 ], [ %54, %49 ]
  %60 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %58
  %62 = zext i32 %7 to i64
  br label %66

63:                                               ; preds = %44, %58, %1
  %64 = zext i32 %7 to i64
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %64
  br label %66

66:                                               ; preds = %61, %63
  %67 = phi i64 [ %62, %61 ], [ %64, %63 ]
  %68 = phi %"struct.WTF::KeyValuePair"* [ %59, %61 ], [ %65, %63 ]
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %67
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %68, %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 0, i32 2
  %72 = select i1 %70, %"class.WTF::HashSet"* null, %"class.WTF::HashSet"* %71
  ret %"class.WTF::HashSet"* %72
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23BackgroundTracingHelperD2Ev(%"class.blink::BackgroundTracingHelper"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundTracingHelper", %"class.blink::BackgroundTracingHelper"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #10
  br label %18

18:                                               ; preds = %1, %14, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23BackgroundTracingHelper46MaybeEmitBackgroundTracingPerformanceMarkEventERKNS_15PerformanceMarkE(%"class.blink::BackgroundTracingHelper"*, %"class.blink::PerformanceMark"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringAppend", align 8
  %4 = alloca %"class.WTF::StringAppend.409", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca [15 x i8], align 1
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.perfetto::EventContext", align 8
  %10 = alloca %"class.base::trace_event::TrackEventHandle", align 8
  %11 = alloca %"class.perfetto::EventContext", align 8
  %12 = alloca %"struct.base::MD5Digest", align 4
  %13 = alloca %"class.perfetto::EventContext", align 8
  %14 = alloca %"class.base::trace_event::TrackEventHandle", align 8
  %15 = alloca %"class.perfetto::EventContext", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = getelementptr inbounds %"class.blink::BackgroundTracingHelper", %"class.blink::BackgroundTracingHelper"* %0, i64 0, i32 2
  %19 = load %"class.WTF::HashSet"*, %"class.WTF::HashSet"** %18, align 8
  %20 = icmp eq %"class.WTF::HashSet"* %19, null
  br i1 %20, label %421, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::PerformanceMark", %"class.blink::PerformanceMark"* %1, i64 0, i32 0, i32 2, i32 0
  %23 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #10
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %16, %"class.WTF::String"* %22) #10
  %27 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = load i8*, i8** %24, align 8
  %32 = select i1 %30, i8* %31, i8* %23
  %33 = load i64, i64* %25, align 8
  %34 = zext i8 %29 to i64
  %35 = select i1 %30, i64 %33, i64 %34
  %36 = getelementptr inbounds %"struct.base::MD5Digest", %"struct.base::MD5Digest"* %12, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %36, i8 -86, i64 16, i1 false) #10
  call void @_ZN4base6MD5SumEPKvmPNS_9MD5DigestE(i8* %32, i64 %35, %"struct.base::MD5Digest"* nonnull %12) #10
  %37 = bitcast %"struct.base::MD5Digest"* %12 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = call i32 @llvm.bswap.i32(i32 %38) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #10
  %40 = load %"class.WTF::HashSet"*, %"class.WTF::HashSet"** %18, align 8
  %41 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %40, i64 0, i32 0, i32 0
  %42 = load i32*, i32** %41, align 8
  %43 = icmp eq i32* %42, null
  br i1 %43, label %415, label %44

44:                                               ; preds = %21
  %45 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %40, i64 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = add i32 %46, -1
  %48 = zext i32 %47 to i64
  %49 = shl i32 %39, 15
  %50 = xor i32 %49, -1
  %51 = add i32 %39, %50
  %52 = lshr i32 %51, 10
  %53 = xor i32 %52, %51
  %54 = mul i32 %53, 9
  %55 = lshr i32 %54, 6
  %56 = xor i32 %55, %54
  %57 = shl i32 %56, 11
  %58 = xor i32 %57, -1
  %59 = add i32 %56, %58
  %60 = lshr i32 %59, 16
  %61 = xor i32 %60, %59
  %62 = and i32 %47, %61
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i32, i32* %42, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, %39
  br i1 %66, label %96, label %67

67:                                               ; preds = %44
  %68 = xor i32 %61, -1
  %69 = lshr i32 %59, 23
  %70 = add i32 %69, %68
  %71 = shl i32 %70, 12
  %72 = xor i32 %71, %70
  %73 = lshr i32 %72, 7
  %74 = xor i32 %73, %72
  %75 = shl i32 %74, 2
  %76 = xor i32 %75, %74
  %77 = lshr i32 %76, 20
  %78 = xor i32 %77, %76
  %79 = or i32 %78, 1
  %80 = zext i32 %79 to i64
  br label %81

81:                                               ; preds = %86, %67
  %82 = phi i32 [ %65, %67 ], [ %92, %86 ]
  %83 = phi i64 [ %63, %67 ], [ %90, %86 ]
  %84 = phi i64 [ 0, %67 ], [ %88, %86 ]
  %85 = icmp eq i32 %82, 0
  br i1 %85, label %415, label %86

86:                                               ; preds = %81
  %87 = icmp eq i64 %84, 0
  %88 = select i1 %87, i64 %80, i64 %84
  %89 = add i64 %88, %83
  %90 = and i64 %89, %48
  %91 = getelementptr inbounds i32, i32* %42, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, %39
  br i1 %93, label %94, label %81

94:                                               ; preds = %86
  %95 = getelementptr inbounds i32, i32* %42, i64 %90
  br label %96

96:                                               ; preds = %94, %44
  %97 = phi i32* [ %64, %44 ], [ %95, %94 ]
  %98 = icmp eq i32* %97, null
  br i1 %98, label %415, label %99

99:                                               ; preds = %96
  %100 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %101 = and i8 %100, 25
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %251, label %103, !prof !2

103:                                              ; preds = %99
  %104 = bitcast %"class.perfetto::EventContext"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #10
  %105 = bitcast %"class.base::trace_event::TrackEventHandle"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #10
  %106 = getelementptr inbounds %"class.base::trace_event::TrackEventHandle", %"class.base::trace_event::TrackEventHandle"* %10, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 -86, i64 24, i1 false) #10
  %107 = load i64, i64* getelementptr inbounds (%"struct.perfetto::Track", %"struct.perfetto::Track"* @_ZN20trace_event_internal13kDefaultTrackE, i64 0, i32 0), align 8
  call void @_ZN20trace_event_internal16CreateTrackEventEcPKhN8perfetto12StaticStringEN4base9TimeTicksEmb(%"class.base::trace_event::TrackEventHandle"* nonnull sret %10, i8 signext 66, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 0, i64 %107, i1 zeroext false) #10
  %108 = load %"class.perfetto::protos::pbzero::TrackEvent"*, %"class.perfetto::protos::pbzero::TrackEvent"** %106, align 8
  %109 = icmp eq %"class.perfetto::protos::pbzero::TrackEvent"* %108, null
  br i1 %109, label %250, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.base::trace_event::TrackEventHandle", %"class.base::trace_event::TrackEventHandle"* %10, i64 0, i32 1
  %112 = bitcast %"struct.perfetto::internal::TrackEventIncrementalState"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %11, i64 0, i32 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EPNS_7MessageE(%"class.protozero::MessageHandleBase"* nonnull %114, %"class.protozero::Message"* null) #10
  %115 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %11, i64 0, i32 1
  store %"class.perfetto::protos::pbzero::TrackEvent"* %108, %"class.perfetto::protos::pbzero::TrackEvent"** %115, align 8
  %116 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %11, i64 0, i32 2
  %117 = bitcast %"struct.perfetto::internal::TrackEventIncrementalState"** %116 to i64*
  store i64 %113, i64* %117, align 8
  %118 = bitcast %"class.perfetto::EventContext"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #10
  %119 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %9, i64 0, i32 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EOS0_(%"class.protozero::MessageHandleBase"* nonnull %119, %"class.protozero::MessageHandleBase"* nonnull dereferenceable(8) %114) #10
  %120 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %9, i64 0, i32 1
  %121 = bitcast %"class.perfetto::protos::pbzero::TrackEvent"** %120 to i8*
  %122 = bitcast %"class.perfetto::protos::pbzero::TrackEvent"** %115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %122, i64 16, i1 false) #10
  %123 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #10
  %124 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #10
  %125 = bitcast %"class.perfetto::protos::pbzero::TrackEvent"** %120 to %"class.protozero::Message"**
  %126 = load %"class.protozero::Message"*, %"class.protozero::Message"** %125, align 8
  %127 = call %"class.protozero::Message"* @_ZN9protozero7Message26BeginNestedMessageInternalEj(%"class.protozero::Message"* %126, i32 1011) #10
  %128 = getelementptr inbounds %"class.blink::BackgroundTracingHelper", %"class.blink::BackgroundTracingHelper"* %0, i64 0, i32 1
  %129 = load i32, i32* %128, align 8
  %130 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %127, i64 0, i32 2
  %131 = load %"class.protozero::Message"*, %"class.protozero::Message"** %130, align 8
  %132 = icmp eq %"class.protozero::Message"* %131, null
  br i1 %132, label %134, label %133

133:                                              ; preds = %110
  call void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"* %127) #10
  br label %134

134:                                              ; preds = %133, %110
  %135 = getelementptr inbounds [15 x i8], [15 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %135) #10
  %136 = getelementptr inbounds [15 x i8], [15 x i8]* %6, i64 0, i64 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %136, i8 -86, i64 14, i1 false) #10
  store i8 8, i8* %135, align 1
  %137 = icmp ugt i32 %129, 127
  %138 = trunc i32 %129 to i8
  br i1 %137, label %139, label %150

139:                                              ; preds = %134, %139
  %140 = phi i8 [ %147, %139 ], [ %138, %134 ]
  %141 = phi i32 [ %145, %139 ], [ %129, %134 ]
  %142 = phi i8* [ %144, %139 ], [ %136, %134 ]
  %143 = or i8 %140, -128
  %144 = getelementptr inbounds i8, i8* %142, i64 1
  store i8 %143, i8* %142, align 1
  %145 = lshr i32 %141, 7
  %146 = icmp ugt i32 %141, 16383
  %147 = trunc i32 %145 to i8
  br i1 %146, label %139, label %148

148:                                              ; preds = %139
  %149 = trunc i32 %145 to i8
  br label %150

150:                                              ; preds = %148, %134
  %151 = phi i8* [ %136, %134 ], [ %144, %148 ]
  %152 = phi i8 [ %138, %134 ], [ %149, %148 ]
  store i8 %152, i8* %151, align 1
  %153 = getelementptr inbounds i8, i8* %151, i64 1
  %154 = ptrtoint i8* %153 to i64
  %155 = ptrtoint [15 x i8]* %6 to i64
  %156 = sub i64 %154, %155
  %157 = trunc i64 %156 to i32
  %158 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %127, i64 0, i32 0
  %159 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %158, align 8
  %160 = and i64 %156, 4294967295
  %161 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %159, i64 0, i32 2
  %162 = load i8*, i8** %161, align 8
  %163 = getelementptr inbounds i8, i8* %162, i64 %160
  %164 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %159, i64 0, i32 1, i32 1
  %165 = load i8*, i8** %164, align 8
  %166 = icmp ugt i8* %163, %165
  br i1 %166, label %168, label %167, !prof !4

167:                                              ; preds = %150
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %162, i8* nonnull align 1 %135, i64 %160, i1 false) #10
  store i8* %163, i8** %161, align 8
  br label %169

168:                                              ; preds = %150
  call void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"* %159, i8* nonnull %135, i64 %160) #10
  br label %169

169:                                              ; preds = %168, %167
  %170 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %127, i64 0, i32 4
  %171 = load i32, i32* %170, align 8
  %172 = add i32 %171, %157
  store i32 %172, i32* %170, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %135) #10
  %173 = getelementptr inbounds %"class.blink::BackgroundTracingHelper", %"class.blink::BackgroundTracingHelper"* %0, i64 0, i32 0
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.WTF::String"* %173) #10
  %174 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %175 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %174, i64 0, i32 1, i32 0
  %176 = load i8, i8* %175, align 1
  %177 = icmp slt i8 %176, 0
  %178 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load i8*, i8** %178, align 8
  %180 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %181 = load i64, i64* %180, align 8
  %182 = zext i8 %176 to i64
  %183 = select i1 %177, i8* %179, i8* %123
  %184 = select i1 %177, i64 %181, i64 %182
  call void @_ZN9protozero7Message11AppendBytesEjPKvm(%"class.protozero::Message"* %127, i32 2, i8* %183, i64 %184) #10
  %185 = load i8, i8* %175, align 1
  %186 = icmp slt i8 %185, 0
  br i1 %186, label %187, label %189

187:                                              ; preds = %169
  %188 = load i8*, i8** %178, align 8
  call void @_ZdlPv(i8* %188) #11
  br label %189

189:                                              ; preds = %187, %169
  %190 = load %"class.protozero::Message"*, %"class.protozero::Message"** %130, align 8
  %191 = icmp eq %"class.protozero::Message"* %190, null
  br i1 %191, label %193, label %192

192:                                              ; preds = %189
  call void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"* %127) #10
  br label %193

193:                                              ; preds = %192, %189
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %135) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %136, i8 -86, i64 14, i1 false) #10
  store i8 24, i8* %135, align 1
  %194 = icmp ugt i32 %39, 127
  %195 = trunc i32 %39 to i8
  br i1 %194, label %196, label %207

196:                                              ; preds = %193, %196
  %197 = phi i8 [ %204, %196 ], [ %195, %193 ]
  %198 = phi i32 [ %202, %196 ], [ %39, %193 ]
  %199 = phi i8* [ %201, %196 ], [ %136, %193 ]
  %200 = or i8 %197, -128
  %201 = getelementptr inbounds i8, i8* %199, i64 1
  store i8 %200, i8* %199, align 1
  %202 = lshr i32 %198, 7
  %203 = icmp ugt i32 %198, 16383
  %204 = trunc i32 %202 to i8
  br i1 %203, label %196, label %205

205:                                              ; preds = %196
  %206 = trunc i32 %202 to i8
  br label %207

207:                                              ; preds = %205, %193
  %208 = phi i8* [ %136, %193 ], [ %201, %205 ]
  %209 = phi i8 [ %195, %193 ], [ %206, %205 ]
  store i8 %209, i8* %208, align 1
  %210 = getelementptr inbounds i8, i8* %208, i64 1
  %211 = ptrtoint i8* %210 to i64
  %212 = sub i64 %211, %155
  %213 = trunc i64 %212 to i32
  %214 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %158, align 8
  %215 = and i64 %212, 4294967295
  %216 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %214, i64 0, i32 2
  %217 = load i8*, i8** %216, align 8
  %218 = getelementptr inbounds i8, i8* %217, i64 %215
  %219 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %214, i64 0, i32 1, i32 1
  %220 = load i8*, i8** %219, align 8
  %221 = icmp ugt i8* %218, %220
  br i1 %221, label %223, label %222, !prof !4

222:                                              ; preds = %207
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %217, i8* nonnull align 1 %135, i64 %215, i1 false) #10
  store i8* %218, i8** %216, align 8
  br label %224

223:                                              ; preds = %207
  call void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"* %214, i8* nonnull %135, i64 %215) #10
  br label %224

224:                                              ; preds = %223, %222
  %225 = load i32, i32* %170, align 8
  %226 = add i32 %225, %213
  store i32 %226, i32* %170, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %135) #10
  %227 = load i8, i8* %28, align 1
  %228 = icmp slt i8 %227, 0
  br i1 %228, label %230, label %229

229:                                              ; preds = %224
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %124, i8* nonnull align 8 %23, i64 24, i1 false) #10
  br label %233

230:                                              ; preds = %224
  %231 = load i8*, i8** %24, align 8
  %232 = load i64, i64* %25, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %231, i64 %232) #10
  br label %233

233:                                              ; preds = %230, %229
  %234 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %235 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %234, i64 0, i32 1, i32 0
  %236 = load i8, i8* %235, align 1
  %237 = icmp slt i8 %236, 0
  %238 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = load i8*, i8** %238, align 8
  %240 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %241 = load i64, i64* %240, align 8
  %242 = zext i8 %236 to i64
  %243 = select i1 %237, i8* %239, i8* %124
  %244 = select i1 %237, i64 %241, i64 %242
  call void @_ZN9protozero7Message11AppendBytesEjPKvm(%"class.protozero::Message"* %127, i32 4, i8* %243, i64 %244) #10
  %245 = load i8, i8* %235, align 1
  %246 = icmp slt i8 %245, 0
  br i1 %246, label %247, label %249

247:                                              ; preds = %233
  %248 = load i8*, i8** %238, align 8
  call void @_ZdlPv(i8* %248) #11
  br label %249

249:                                              ; preds = %247, %233
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #10
  call void @_ZN8perfetto12EventContextD1Ev(%"class.perfetto::EventContext"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #10
  call void @_ZN8perfetto12EventContextD1Ev(%"class.perfetto::EventContext"* nonnull %11) #10
  br label %250

250:                                              ; preds = %103, %249
  call void @_ZN4base11trace_event16TrackEventHandleD1Ev(%"class.base::trace_event::TrackEventHandle"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #10
  br label %251

251:                                              ; preds = %99, %250
  %252 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %252) #10
  %253 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %254 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %253, i64* %254, align 8
  %255 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN5blink12_GLOBAL__N_114kTriggerPrefixE, i64 0, i64 0), i8** %255, align 8
  %256 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 8, i32* %256, align 8
  %257 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8
  %259 = icmp eq %"class.WTF::StringImpl"* %258, null
  br i1 %259, label %260, label %261

260:                                              ; preds = %251
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %252) #10
  br label %390

261:                                              ; preds = %251
  %262 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %258, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %252) #10
  br i1 %262, label %263, label %390

263:                                              ; preds = %261
  %264 = call %"class.blink::RendererResourceCoordinator"* @_ZN5blink27RendererResourceCoordinator3GetEv() #10
  %265 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %265) #10
  %266 = bitcast %"class.WTF::StringAppend"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %266) #10
  %267 = bitcast %"class.WTF::StringAppend.409"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %267) #10
  %268 = getelementptr inbounds %"class.blink::BackgroundTracingHelper", %"class.blink::BackgroundTracingHelper"* %0, i64 0, i32 0, i32 0, i32 0
  %269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %268, align 8
  %270 = icmp eq %"class.WTF::StringImpl"* %269, null
  br i1 %270, label %314, label %271

271:                                              ; preds = %263
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = load atomic i32, i32* %272 monotonic, align 4
  %274 = and i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 0
  %277 = load i32, i32* %276, align 4
  br i1 %275, label %278, label %288

278:                                              ; preds = %271
  %279 = zext i32 %277 to i33
  %280 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %279, i33 1) #10
  %281 = extractvalue { i33, i1 } %280, 1
  %282 = extractvalue { i33, i1 } %280, 0
  %283 = icmp slt i33 %282, 0
  %284 = or i1 %281, %283
  br i1 %284, label %285, label %286, !prof !4

285:                                              ; preds = %278
  call void @llvm.trap() #10
  unreachable

286:                                              ; preds = %278
  %287 = trunc i33 %282 to i32
  store i32 %287, i32* %276, align 4
  br label %288

288:                                              ; preds = %286, %271
  %289 = phi i32 [ %287, %286 ], [ %277, %271 ]
  %290 = load atomic i32, i32* %272 monotonic, align 4
  %291 = and i32 %290, 2
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %303

293:                                              ; preds = %288
  %294 = zext i32 %289 to i33
  %295 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %294, i33 1) #10
  %296 = extractvalue { i33, i1 } %295, 1
  %297 = extractvalue { i33, i1 } %295, 0
  %298 = icmp slt i33 %297, 0
  %299 = or i1 %296, %298
  br i1 %299, label %300, label %301, !prof !4

300:                                              ; preds = %293
  call void @llvm.trap() #10
  unreachable

301:                                              ; preds = %293
  %302 = trunc i33 %297 to i32
  store i32 %302, i32* %276, align 4
  br label %303

303:                                              ; preds = %301, %288
  %304 = phi i32 [ %302, %301 ], [ %289, %288 ]
  %305 = load atomic i32, i32* %272 monotonic, align 4
  %306 = and i32 %305, 2
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %310

308:                                              ; preds = %303
  %309 = add i32 %304, -1
  store i32 %309, i32* %276, align 4
  br label %310

310:                                              ; preds = %308, %303
  %311 = phi i32 [ %309, %308 ], [ %304, %303 ]
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %314

313:                                              ; preds = %310
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %269) #10
  br label %314

314:                                              ; preds = %313, %310, %263
  %315 = getelementptr inbounds %"class.WTF::StringAppend.409", %"class.WTF::StringAppend.409"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %269, %"class.WTF::StringImpl"** %315, align 8
  %316 = getelementptr inbounds %"class.WTF::StringAppend.409", %"class.WTF::StringAppend.409"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8** %316, align 8
  %317 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %22, i32 8, i32 -1) #10
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* nonnull sret %3, %"class.WTF::StringAppend.409"* nonnull dereferenceable(16) %4, %"class.WTF::StringImpl"* %317) #10
  %318 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %3) #10
  %319 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1, i32 0, i32 0
  %320 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %319, align 8
  %321 = icmp eq %"class.WTF::StringImpl"* %320, null
  br i1 %321, label %335, label %322

322:                                              ; preds = %314
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %320, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = load atomic i32, i32* %323 monotonic, align 4
  %325 = and i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %320, i64 0, i32 0
  %328 = load i32, i32* %327, align 4
  br i1 %326, label %329, label %331

329:                                              ; preds = %322
  %330 = add i32 %328, -1
  store i32 %330, i32* %327, align 4
  br label %331

331:                                              ; preds = %329, %322
  %332 = phi i32 [ %330, %329 ], [ %328, %322 ]
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %335

334:                                              ; preds = %331
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %320) #10
  br label %335

335:                                              ; preds = %334, %331, %314
  %336 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %337 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %336, align 8
  %338 = icmp eq %"class.WTF::StringImpl"* %337, null
  br i1 %338, label %352, label %339

339:                                              ; preds = %335
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %337, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %341 = load atomic i32, i32* %340 monotonic, align 4
  %342 = and i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %337, i64 0, i32 0
  %345 = load i32, i32* %344, align 4
  br i1 %343, label %346, label %348

346:                                              ; preds = %339
  %347 = add i32 %345, -1
  store i32 %347, i32* %344, align 4
  br label %348

348:                                              ; preds = %346, %339
  %349 = phi i32 [ %347, %346 ], [ %345, %339 ]
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %352

351:                                              ; preds = %348
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %337) #10
  br label %352

352:                                              ; preds = %351, %348, %335
  %353 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %315, align 8
  %354 = icmp eq %"class.WTF::StringImpl"* %353, null
  br i1 %354, label %368, label %355

355:                                              ; preds = %352
  %356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %357 = load atomic i32, i32* %356 monotonic, align 4
  %358 = and i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 0
  %361 = load i32, i32* %360, align 4
  br i1 %359, label %362, label %364

362:                                              ; preds = %355
  %363 = add i32 %361, -1
  store i32 %363, i32* %360, align 4
  br label %364

364:                                              ; preds = %362, %355
  %365 = phi i32 [ %363, %362 ], [ %361, %355 ]
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %368

367:                                              ; preds = %364
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %353) #10
  br label %368

368:                                              ; preds = %352, %364, %367
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %267) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %266) #10
  %369 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %318, %"class.WTF::StringImpl"** %369, align 8
  %370 = bitcast %"class.blink::RendererResourceCoordinator"* %264 to void (%"class.blink::RendererResourceCoordinator"*, %"class.WTF::String"*)***
  %371 = load void (%"class.blink::RendererResourceCoordinator"*, %"class.WTF::String"*)**, void (%"class.blink::RendererResourceCoordinator"*, %"class.WTF::String"*)*** %370, align 8
  %372 = getelementptr inbounds void (%"class.blink::RendererResourceCoordinator"*, %"class.WTF::String"*)*, void (%"class.blink::RendererResourceCoordinator"*, %"class.WTF::String"*)** %371, i64 8
  %373 = load void (%"class.blink::RendererResourceCoordinator"*, %"class.WTF::String"*)*, void (%"class.blink::RendererResourceCoordinator"*, %"class.WTF::String"*)** %372, align 8
  call void %373(%"class.blink::RendererResourceCoordinator"* %264, %"class.WTF::String"* nonnull dereferenceable(8) %17) #10
  %374 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %369, align 8
  %375 = icmp eq %"class.WTF::StringImpl"* %374, null
  br i1 %375, label %389, label %376

376:                                              ; preds = %368
  %377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %374, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %378 = load atomic i32, i32* %377 monotonic, align 4
  %379 = and i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %374, i64 0, i32 0
  %382 = load i32, i32* %381, align 4
  br i1 %380, label %383, label %385

383:                                              ; preds = %376
  %384 = add i32 %382, -1
  store i32 %384, i32* %381, align 4
  br label %385

385:                                              ; preds = %383, %376
  %386 = phi i32 [ %384, %383 ], [ %382, %376 ]
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %389

388:                                              ; preds = %385
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %374) #10
  br label %389

389:                                              ; preds = %368, %385, %388
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %265) #10
  br label %390

390:                                              ; preds = %260, %389, %261
  %391 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %392 = and i8 %391, 25
  %393 = icmp eq i8 %392, 0
  br i1 %393, label %415, label %394, !prof !2

394:                                              ; preds = %390
  %395 = bitcast %"class.perfetto::EventContext"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %395) #10
  %396 = bitcast %"class.base::trace_event::TrackEventHandle"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %396) #10
  %397 = getelementptr inbounds %"class.base::trace_event::TrackEventHandle", %"class.base::trace_event::TrackEventHandle"* %14, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %396, i8 -86, i64 24, i1 false) #10
  %398 = load i64, i64* getelementptr inbounds (%"struct.perfetto::Track", %"struct.perfetto::Track"* @_ZN20trace_event_internal13kDefaultTrackE, i64 0, i32 0), align 8
  call void @_ZN20trace_event_internal16CreateTrackEventEcPKhN8perfetto12StaticStringEN4base9TimeTicksEmb(%"class.base::trace_event::TrackEventHandle"* nonnull sret %14, i8 signext 69, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i64 0, i64 %398, i1 zeroext false) #10
  %399 = load %"class.perfetto::protos::pbzero::TrackEvent"*, %"class.perfetto::protos::pbzero::TrackEvent"** %397, align 8
  %400 = icmp eq %"class.perfetto::protos::pbzero::TrackEvent"* %399, null
  br i1 %400, label %414, label %401

401:                                              ; preds = %394
  %402 = getelementptr inbounds %"class.base::trace_event::TrackEventHandle", %"class.base::trace_event::TrackEventHandle"* %14, i64 0, i32 1
  %403 = bitcast %"struct.perfetto::internal::TrackEventIncrementalState"** %402 to i64*
  %404 = load i64, i64* %403, align 8
  %405 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %15, i64 0, i32 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EPNS_7MessageE(%"class.protozero::MessageHandleBase"* nonnull %405, %"class.protozero::Message"* null) #10
  %406 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %15, i64 0, i32 1
  store %"class.perfetto::protos::pbzero::TrackEvent"* %399, %"class.perfetto::protos::pbzero::TrackEvent"** %406, align 8
  %407 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %15, i64 0, i32 2
  %408 = bitcast %"struct.perfetto::internal::TrackEventIncrementalState"** %407 to i64*
  store i64 %404, i64* %408, align 8
  %409 = bitcast %"class.perfetto::EventContext"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %409) #10
  %410 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %13, i64 0, i32 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EOS0_(%"class.protozero::MessageHandleBase"* nonnull %410, %"class.protozero::MessageHandleBase"* nonnull dereferenceable(8) %405) #10
  %411 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %13, i64 0, i32 1
  %412 = bitcast %"class.perfetto::protos::pbzero::TrackEvent"** %411 to i8*
  %413 = bitcast %"class.perfetto::protos::pbzero::TrackEvent"** %406 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %412, i8* align 8 %413, i64 16, i1 false) #10
  call void @_ZN8perfetto12EventContextD1Ev(%"class.perfetto::EventContext"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %409) #10
  call void @_ZN8perfetto12EventContextD1Ev(%"class.perfetto::EventContext"* nonnull %15) #10
  br label %414

414:                                              ; preds = %394, %401
  call void @_ZN4base11trace_event16TrackEventHandleD1Ev(%"class.base::trace_event::TrackEventHandle"* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %396) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %395) #10
  br label %415

415:                                              ; preds = %81, %96, %21, %414, %390
  %416 = load i8, i8* %28, align 1
  %417 = icmp slt i8 %416, 0
  br i1 %417, label %418, label %420

418:                                              ; preds = %415
  %419 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %419) #11
  br label %420

420:                                              ; preds = %415, %418
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #10
  br label %421

421:                                              ; preds = %2, %420
  ret void
}

declare %"class.blink::RendererResourceCoordinator"* @_ZN5blink27RendererResourceCoordinator3GetEv() local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink23BackgroundTracingHelper5TraceEPNS_7VisitorE(%"class.blink::BackgroundTracingHelper"* nocapture, %"class.blink::Visitor"* nocapture) local_unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

declare void @_ZN4base6MD5SumEPKvmPNS_9MD5DigestE(i8*, i64, %"struct.base::MD5Digest"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN20trace_event_internal16CreateTrackEventEcPKhN8perfetto12StaticStringEN4base9TimeTicksEmb(%"class.base::trace_event::TrackEventHandle"* sret, i8 signext, i8*, i8*, i64, i64, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8perfetto12EventContextD1Ev(%"class.perfetto::EventContext"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN4base11trace_event16TrackEventHandleD1Ev(%"class.base::trace_event::TrackEventHandle"*) unnamed_addr #8

declare void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"*) local_unnamed_addr #1

declare void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"*, i8*, i64) local_unnamed_addr #1

declare %"class.protozero::Message"* @_ZN9protozero7Message26BeginNestedMessageInternalEj(%"class.protozero::Message"*, i32) local_unnamed_addr #1

declare void @_ZN9protozero7Message11AppendBytesEjPKvm(%"class.protozero::Message"*, i32, i8*, i64) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero17MessageHandleBaseC2EOS0_(%"class.protozero::MessageHandleBase"*, %"class.protozero::MessageHandleBase"* dereferenceable(8)) unnamed_addr #8

declare void @_ZN9protozero17MessageHandleBaseC2EPNS_7MessageE(%"class.protozero::MessageHandleBase"*, %"class.protozero::Message"*) unnamed_addr #1

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringAppend.409"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.409", %"class.WTF::StringAppend.409"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #10
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !4

21:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.409", %"class.WTF::StringAppend.409"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #10
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !4

43:                                               ; preds = %34
  tail call void @llvm.trap() #10
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #10
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.412", align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = select i1 %10, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %9
  %12 = bitcast %"class.WTF::StringTypeAdapter.412"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #10
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.412"* nonnull %2, i8* %14) #10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #10
  br i1 %18, label %62, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %6, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %6
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %62, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %28 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %3) #10
  %30 = load i8*, i8** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %30)
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %98, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %49

39:                                               ; preds = %32
  %40 = zext i32 %38 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #10
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %39
  call void @llvm.trap() #10
  unreachable

47:                                               ; preds = %39
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %37, align 4
  br label %49

49:                                               ; preds = %32, %47
  %50 = phi i32 [ %48, %47 ], [ %38, %32 ]
  %51 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %52 = load atomic i32, i32* %33 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %57 = add i32 %50, -1
  store i32 %57, i32* %56, align 4
  br label %58

58:                                               ; preds = %55, %49
  %59 = phi i32 [ %57, %55 ], [ %50, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %98

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #10
  br label %98

62:                                               ; preds = %19, %1
  %63 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %64 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %65 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %64, i16** nonnull dereferenceable(8) %4) #10
  %66 = load i16*, i16** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %66)
  %67 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %67, label %98, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %85

75:                                               ; preds = %68
  %76 = zext i32 %74 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #10
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !4

82:                                               ; preds = %75
  call void @llvm.trap() #10
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %73, align 4
  br label %85

85:                                               ; preds = %68, %83
  %86 = phi i32 [ %84, %83 ], [ %74, %68 ]
  %87 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %88 = load atomic i32, i32* %69 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %93 = add i32 %86, -1
  store i32 %93, i32* %92, align 4
  br label %94

94:                                               ; preds = %91, %85
  %95 = phi i32 [ %93, %91 ], [ %86, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #10
  br label %98

98:                                               ; preds = %97, %94, %62, %61, %58, %26
  %99 = phi i8* [ %27, %26 ], [ %27, %58 ], [ %27, %61 ], [ %63, %62 ], [ %63, %94 ], [ %63, %97 ]
  %100 = phi i64 [ 0, %26 ], [ %51, %58 ], [ %51, %61 ], [ 0, %62 ], [ %87, %94 ], [ %87, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #10
  %101 = inttoptr i64 %100 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #10
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !4

22:                                               ; preds = %13
  tail call void @llvm.trap() #10
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #10
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !4

44:                                               ; preds = %37
  tail call void @llvm.trap() #10
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #10
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #10
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.409"* %8) #10
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.409"* %8) #10
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #10
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8* %26, i8* %27) #10
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.3, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #10
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #10
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i8* %41, i8* %42) #10
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.3, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.410", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.412", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.410", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.410"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.410", %"class.WTF::StringTypeAdapter.410"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.410", %"class.WTF::StringTypeAdapter.410"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.410"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.410"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.410"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.410", %"class.WTF::StringTypeAdapter.410"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.410", %"class.WTF::StringTypeAdapter.410"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #10
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.410"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.412"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #10
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #10
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.412"* nonnull %4, i8* %48) #10
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.410", %"class.WTF::StringTypeAdapter.410"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.411"* nonnull %49, i8* %1) #10
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.412"* nonnull %4, i8* %52) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.410", %"class.WTF::StringTypeAdapter.410"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.409"* %6) #10
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.411"* nonnull %53, i8* %56) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.410", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.412", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.410", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.410"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.410", %"class.WTF::StringTypeAdapter.410"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.410", %"class.WTF::StringTypeAdapter.410"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.410"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.410"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.410"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.410", %"class.WTF::StringTypeAdapter.410"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.410", %"class.WTF::StringTypeAdapter.410"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #10
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.410"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.412"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #10
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #10
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.412"* nonnull %4, i8* %48) #10
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.410", %"class.WTF::StringTypeAdapter.410"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.411"* nonnull %49, i16* %1) #10
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.412"* nonnull %4, i16* %52) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.410", %"class.WTF::StringTypeAdapter.410"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.409"* %6) #10
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.411"* nonnull %53, i16* %56) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.412"*, i8*) unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.409"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.412", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.409", %"class.WTF::StringAppend.409"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.412"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.412", %"class.WTF::StringTypeAdapter.412"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.409", %"class.WTF::StringAppend.409"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.412"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.412"* nonnull %4, i8* %21) #10
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8* %30, i8* %31) #10
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.3, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i8* %46, i8* %47) #10
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.3, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #10
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #10
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.411"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.412"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.411"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.412"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #7

declare i32 @_ZN3WTF19HexCharactersToUIntEPKhmNS_20NumberParsingOptionsEPb(i8*, i64, i32, i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32*, i8 } @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKjRjEENS_18HashTableAddResultIS7_jEEOT0_OT1_(%"class.WTF::HashTable.0"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.0", %"class.WTF::HashTable.0"* %0, i64 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable.0"* %0, i32* null)
  %9 = load i32*, i32** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i32* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.0", %"class.WTF::HashTable.0"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %11, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %75, label %35

35:                                               ; preds = %10
  %36 = xor i32 %29, -1
  %37 = lshr i32 %27, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %35, %56
  %50 = phi i32 [ %33, %35 ], [ %64, %56 ]
  %51 = phi i32* [ %32, %35 ], [ %63, %56 ]
  %52 = phi i32* [ null, %35 ], [ %58, %56 ]
  %53 = phi i64 [ %31, %35 ], [ %62, %56 ]
  %54 = phi i64 [ 0, %35 ], [ %60, %56 ]
  %55 = icmp eq i32 %50, %16
  br i1 %55, label %89, label %56

56:                                               ; preds = %49
  %57 = icmp eq i32 %50, -1
  %58 = select i1 %57, i32* %51, i32* %52
  %59 = icmp eq i64 %54, 0
  %60 = select i1 %59, i64 %48, i64 %54
  %61 = add i64 %60, %53
  %62 = and i64 %61, %15
  %63 = getelementptr inbounds i32, i32* %11, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %56
  %67 = icmp eq i32* %58, null
  br i1 %67, label %75, label %68

68:                                               ; preds = %66
  store i32 0, i32* %58, align 4
  %69 = getelementptr inbounds %"class.WTF::HashTable.0", %"class.WTF::HashTable.0"* %0, i64 0, i32 3
  %70 = load i32, i32* %69, align 8
  %71 = add i32 %70, 2147483647
  %72 = and i32 %71, 2147483647
  %73 = and i32 %70, -2147483648
  %74 = or i32 %72, %73
  store i32 %74, i32* %69, align 8
  br label %75

75:                                               ; preds = %10, %66, %68
  %76 = phi i32* [ %58, %68 ], [ %63, %66 ], [ %32, %10 ]
  %77 = load i32, i32* %2, align 4
  store i32 %77, i32* %76, align 4
  %78 = getelementptr inbounds %"class.WTF::HashTable.0", %"class.WTF::HashTable.0"* %0, i64 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %78, align 4
  %81 = getelementptr inbounds %"class.WTF::HashTable.0", %"class.WTF::HashTable.0"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, %80
  %84 = shl i32 %83, 1
  %85 = load i32, i32* %12, align 8
  %86 = icmp ult i32 %84, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %75
  %88 = tail call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable.0"* %0, i32* %76)
  br label %89

89:                                               ; preds = %49, %75, %87
  %90 = phi i8 [ 1, %75 ], [ 1, %87 ], [ 0, %49 ]
  %91 = phi i32* [ %76, %75 ], [ %88, %87 ], [ %51, %49 ]
  %92 = insertvalue { i32*, i8 } undef, i32* %91, 0
  %93 = insertvalue { i32*, i8 } %92, i8 %90, 1
  ret { i32*, i8 } %93
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable.0"*, i32*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.0", %"class.WTF::HashTable.0"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.0", %"class.WTF::HashTable.0"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 2
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to i32*
  %37 = call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE8RehashToEPjjS8_(%"class.WTF::HashTable.0"* %0, i32* %36, i32 %32, i32* %1) #10
  ret i32* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_7IntHashIjEENS_10HashTraitsIjEES5_NS_18PartitionAllocatorEE8RehashToEPjjS8_(%"class.WTF::HashTable.0"*, i32*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i32* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.0", %"class.WTF::HashTable.0"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.0", %"class.WTF::HashTable.0"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.0"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load i32*, i32** %9, align 8
  %17 = ptrtoint i32* %16 to i64
  br label %31

18:                                               ; preds = %112
  %19 = bitcast %"class.WTF::HashTable.0"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %113, %18 ]
  %23 = phi i32* [ null, %10 ], [ %116, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #10
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.0", %"class.WTF::HashTable.0"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret i32* %23

31:                                               ; preds = %13, %112
  %32 = phi i64 [ %17, %13 ], [ %113, %112 ]
  %33 = phi i32 [ %7, %13 ], [ %114, %112 ]
  %34 = phi i32* [ %16, %13 ], [ %115, %112 ]
  %35 = phi i32* [ null, %13 ], [ %116, %112 ]
  %36 = phi i32 [ 0, %13 ], [ %117, %112 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %34, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, 1
  %41 = icmp ult i32 %40, 2
  br i1 %41, label %112, label %42

42:                                               ; preds = %31
  %43 = shl i32 %39, 15
  %44 = xor i32 %43, -1
  %45 = add i32 %39, %44
  %46 = lshr i32 %45, 10
  %47 = xor i32 %46, %45
  %48 = mul i32 %47, 9
  %49 = lshr i32 %48, 6
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 11
  %52 = xor i32 %51, -1
  %53 = add i32 %50, %52
  %54 = lshr i32 %53, 16
  %55 = xor i32 %54, %53
  %56 = and i32 %55, %14
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %1, i64 %57
  %59 = ptrtoint i32* %58 to i64
  %60 = load i32, i32* %58, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %79, label %62

62:                                               ; preds = %42
  %63 = xor i32 %55, -1
  %64 = lshr i32 %53, 23
  %65 = add i32 %64, %63
  %66 = shl i32 %65, 12
  %67 = xor i32 %66, %65
  %68 = lshr i32 %67, 7
  %69 = xor i32 %68, %67
  %70 = shl i32 %69, 2
  %71 = xor i32 %70, %69
  %72 = lshr i32 %71, 20
  %73 = xor i32 %72, %71
  %74 = or i32 %73, 1
  %75 = zext i32 %74 to i64
  br label %85

76:                                               ; preds = %92
  %77 = ptrtoint i32* %99 to i64
  %78 = inttoptr i64 %94 to i32*
  br label %79

79:                                               ; preds = %76, %42
  %80 = phi i64 [ %77, %76 ], [ %59, %42 ]
  %81 = phi i32* [ %78, %76 ], [ null, %42 ]
  %82 = icmp eq i32* %81, null
  %83 = ptrtoint i32* %81 to i64
  %84 = select i1 %82, i64 %80, i64 %83
  br label %103

85:                                               ; preds = %92, %62
  %86 = phi i64 [ 0, %62 ], [ %94, %92 ]
  %87 = phi i32 [ %60, %62 ], [ %101, %92 ]
  %88 = phi i64 [ %59, %62 ], [ %100, %92 ]
  %89 = phi i64 [ %57, %62 ], [ %98, %92 ]
  %90 = phi i64 [ 0, %62 ], [ %96, %92 ]
  %91 = icmp eq i32 %87, %39
  br i1 %91, label %103, label %92

92:                                               ; preds = %85
  %93 = icmp eq i32 %87, -1
  %94 = select i1 %93, i64 %88, i64 %86
  %95 = icmp eq i64 %90, 0
  %96 = select i1 %95, i64 %75, i64 %90
  %97 = add i64 %96, %89
  %98 = and i64 %97, %15
  %99 = getelementptr inbounds i32, i32* %1, i64 %98
  %100 = ptrtoint i32* %99 to i64
  %101 = load i32, i32* %99, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %76, label %85

103:                                              ; preds = %85, %79
  %104 = phi i64 [ %84, %79 ], [ %88, %85 ]
  %105 = inttoptr i64 %104 to i32*
  store i32 %39, i32* %105, align 4
  %106 = load i32*, i32** %9, align 8
  %107 = getelementptr inbounds i32, i32* %106, i64 %37
  %108 = icmp eq i32* %107, %3
  %109 = select i1 %108, i32* %105, i32* %35
  %110 = load i32, i32* %6, align 8
  %111 = ptrtoint i32* %106 to i64
  br label %112

112:                                              ; preds = %31, %103
  %113 = phi i64 [ %32, %31 ], [ %111, %103 ]
  %114 = phi i32 [ %33, %31 ], [ %110, %103 ]
  %115 = phi i32* [ %34, %31 ], [ %106, %103 ]
  %116 = phi i32* [ %35, %31 ], [ %109, %103 ]
  %117 = add i32 %36, 1
  %118 = icmp eq i32 %117, %114
  br i1 %118, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNS_7HashSetIjNS_7IntHashIjEENS_10HashTraitsIjEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E6insertINS_17HashMapTranslatorISD_S4_S7_EERjS8_EENS_18HashTableAddResultISE_S9_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), %"class.WTF::HashSet"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNS_7HashSetIjNS_7IntHashIjEENS_10HashTraitsIjEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E6ExpandEPS9_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %84, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %123, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %84, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 2
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 2, i32 0, i32 1
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 2, i32 0, i32 2
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 2, i32 0, i32 3
  %76 = bitcast %"class.WTF::HashSet"* %72 to i64*
  store atomic i64 0, i64* %76 monotonic, align 8
  store i32 0, i32* %73, align 4
  store i32 0, i32* %74, align 4
  store i32 0, i32* %75, align 8
  %77 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, 2147483647
  %80 = and i32 %79, 2147483647
  %81 = and i32 %78, -2147483648
  %82 = or i32 %80, %81
  store i32 %82, i32* %77, align 8
  %83 = load i32, i32* %1, align 4
  br label %84

84:                                               ; preds = %10, %68, %70
  %85 = phi i32 [ %83, %70 ], [ %16, %68 ], [ %16, %10 ]
  %86 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %86, i64 0, i32 0
  store i32 %85, i32* %87, align 8
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %86, i64 0, i32 2
  %89 = bitcast %"class.WTF::HashSet"* %2 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"class.WTF::HashSet"* %88 to i64*
  %92 = load i64, i64* %91, align 8
  store atomic i64 %92, i64* %89 monotonic, align 8
  store atomic i64 %90, i64* %91 monotonic, align 8
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %86, i64 0, i32 2, i32 0, i32 1
  %94 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %2, i64 0, i32 0, i32 1
  %95 = load i32, i32* %93, align 4
  %96 = load i32, i32* %94, align 4
  store i32 %96, i32* %93, align 4
  store i32 %95, i32* %94, align 4
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %86, i64 0, i32 2, i32 0, i32 2
  %98 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %2, i64 0, i32 0, i32 2
  %99 = load i32, i32* %97, align 4
  %100 = load i32, i32* %98, align 4
  store i32 %100, i32* %97, align 4
  store i32 %99, i32* %98, align 4
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %86, i64 0, i32 2, i32 0, i32 3
  %102 = load i32, i32* %101, align 8
  %103 = and i32 %102, 2147483647
  %104 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %2, i64 0, i32 0, i32 3
  %105 = load i32, i32* %104, align 8
  %106 = and i32 %105, 2147483647
  %107 = and i32 %102, -2147483648
  %108 = or i32 %106, %107
  store i32 %108, i32* %101, align 8
  %109 = load i32, i32* %104, align 8
  %110 = and i32 %109, -2147483648
  %111 = or i32 %110, %103
  store i32 %111, i32* %104, align 8
  %112 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %113 = load i32, i32* %112, align 4
  %114 = add i32 %113, 1
  store i32 %114, i32* %112, align 4
  %115 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %116 = load i32, i32* %115, align 8
  %117 = add i32 %116, %114
  %118 = shl i32 %117, 1
  %119 = load i32, i32* %12, align 8
  %120 = icmp ult i32 %118, %119
  br i1 %120, label %123, label %121

121:                                              ; preds = %84
  %122 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNS_7HashSetIjNS_7IntHashIjEENS_10HashTraitsIjEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E6ExpandEPS9_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %86)
  br label %123

123:                                              ; preds = %50, %84, %121
  %124 = phi i8 [ 1, %84 ], [ 1, %121 ], [ 0, %50 ]
  %125 = phi %"struct.WTF::KeyValuePair"* [ %86, %84 ], [ %122, %121 ], [ %52, %50 ]
  %126 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %125, 0
  %127 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %126, i8 %124, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %127
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNS_7HashSetIjNS_7IntHashIjEENS_10HashTraitsIjEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E6ExpandEPS9_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 5
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([192 x i8], [192 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIjNS_7HashSetIjNS_7IntHashIjEENS_10HashTraitsIjEENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %48, label %38

38:                                               ; preds = %31, %38
  %39 = phi i64 [ %46, %38 ], [ 0, %31 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %39, i32 0
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %39, i32 2
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %39, i32 2, i32 0, i32 1
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %39, i32 2, i32 0, i32 2
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %39, i32 2, i32 0, i32 3
  %45 = bitcast %"class.WTF::HashSet"* %41 to i64*
  store atomic i64 0, i64* %45 monotonic, align 8
  store i32 0, i32* %42, align 4
  store i32 0, i32* %43, align 4
  store i32 0, i32* %44, align 8
  %46 = add nuw nsw i64 %39, 1
  %47 = icmp eq i64 %46, %33
  br i1 %47, label %48, label %38

48:                                               ; preds = %38, %31
  %49 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNS_7HashSetIjNS_7IntHashIjEENS_10HashTraitsIjEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E8RehashToEPS9_jSF_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #10
  ret %"struct.WTF::KeyValuePair"* %49
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNS_7HashSetIjNS_7IntHashIjEENS_10HashTraitsIjEENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E8RehashToEPS9_jSF_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  br label %51

18:                                               ; preds = %168
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %169, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %172, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %170, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %47, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %42, %29
  %32 = phi i64 [ 0, %29 ], [ %43, %42 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %42, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 2, i32 0, i32 0
  %38 = load i32*, i32** %37, align 8
  %39 = icmp eq i32* %38, null
  br i1 %39, label %42, label %40, !prof !2

40:                                               ; preds = %36
  %41 = bitcast i32* %38 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %41) #10
  store i32* null, i32** %37, align 8
  br label %42

42:                                               ; preds = %40, %36, %31
  %43 = add nuw nsw i64 %32, 1
  %44 = icmp eq i64 %43, %30
  br i1 %44, label %45, label %31

45:                                               ; preds = %42, %27
  %46 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %46) #10
  br label %47

47:                                               ; preds = %20, %45
  %48 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, -2147483648
  store i32 %50, i32* %48, align 8
  ret %"struct.WTF::KeyValuePair"* %23

51:                                               ; preds = %13, %168
  %52 = phi i64 [ %17, %13 ], [ %169, %168 ]
  %53 = phi i32 [ %7, %13 ], [ %170, %168 ]
  %54 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %171, %168 ]
  %55 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %172, %168 ]
  %56 = phi i32 [ 0, %13 ], [ %173, %168 ]
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 %57, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %59, 1
  %61 = icmp ult i32 %60, 2
  br i1 %61, label %168, label %62

62:                                               ; preds = %51
  %63 = shl i32 %59, 15
  %64 = xor i32 %63, -1
  %65 = add i32 %59, %64
  %66 = lshr i32 %65, 10
  %67 = xor i32 %66, %65
  %68 = mul i32 %67, 9
  %69 = lshr i32 %68, 6
  %70 = xor i32 %69, %68
  %71 = shl i32 %70, 11
  %72 = xor i32 %71, -1
  %73 = add i32 %70, %72
  %74 = lshr i32 %73, 16
  %75 = xor i32 %74, %73
  %76 = and i32 %75, %14
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %77
  %79 = ptrtoint %"struct.WTF::KeyValuePair"* %78 to i64
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %78, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %100, label %83

83:                                               ; preds = %62
  %84 = xor i32 %75, -1
  %85 = lshr i32 %73, 23
  %86 = add i32 %85, %84
  %87 = shl i32 %86, 12
  %88 = xor i32 %87, %86
  %89 = lshr i32 %88, 7
  %90 = xor i32 %89, %88
  %91 = shl i32 %90, 2
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 20
  %94 = xor i32 %93, %92
  %95 = or i32 %94, 1
  %96 = zext i32 %95 to i64
  br label %106

97:                                               ; preds = %113
  %98 = ptrtoint %"struct.WTF::KeyValuePair"* %120 to i64
  %99 = inttoptr i64 %115 to %"struct.WTF::KeyValuePair"*
  br label %100

100:                                              ; preds = %97, %62
  %101 = phi i64 [ %98, %97 ], [ %79, %62 ]
  %102 = phi %"struct.WTF::KeyValuePair"* [ %99, %97 ], [ null, %62 ]
  %103 = icmp eq %"struct.WTF::KeyValuePair"* %102, null
  %104 = ptrtoint %"struct.WTF::KeyValuePair"* %102 to i64
  %105 = select i1 %103, i64 %101, i64 %104
  br label %125

106:                                              ; preds = %113, %83
  %107 = phi i64 [ 0, %83 ], [ %115, %113 ]
  %108 = phi i32 [ %81, %83 ], [ %123, %113 ]
  %109 = phi i64 [ %79, %83 ], [ %121, %113 ]
  %110 = phi i64 [ %77, %83 ], [ %119, %113 ]
  %111 = phi i64 [ 0, %83 ], [ %117, %113 ]
  %112 = icmp eq i32 %108, %59
  br i1 %112, label %125, label %113

113:                                              ; preds = %106
  %114 = icmp eq i32 %108, -1
  %115 = select i1 %114, i64 %109, i64 %107
  %116 = icmp eq i64 %111, 0
  %117 = select i1 %116, i64 %96, i64 %111
  %118 = add i64 %117, %110
  %119 = and i64 %118, %15
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %119
  %121 = ptrtoint %"struct.WTF::KeyValuePair"* %120 to i64
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %120, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %97, label %106

125:                                              ; preds = %106, %100
  %126 = phi i64 [ %105, %100 ], [ %109, %106 ]
  %127 = inttoptr i64 %126 to %"struct.WTF::KeyValuePair"*
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %127, i64 0, i32 2, i32 0, i32 0
  %129 = load i32*, i32** %128, align 8
  %130 = icmp eq i32* %129, null
  br i1 %130, label %134, label %131, !prof !2

131:                                              ; preds = %125
  %132 = bitcast i32* %129 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %132) #10
  store i32* null, i32** %128, align 8
  %133 = load i32, i32* %58, align 8
  br label %134

134:                                              ; preds = %125, %131
  %135 = phi i32 [ %59, %125 ], [ %133, %131 ]
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %127, i64 0, i32 0
  store i32 %135, i32* %136, align 8
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %127, i64 0, i32 2
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 %57, i32 2
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %127, i64 0, i32 2, i32 0, i32 1
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %127, i64 0, i32 2, i32 0, i32 2
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %127, i64 0, i32 2, i32 0, i32 3
  %142 = bitcast %"class.WTF::HashSet"* %138 to i64*
  %143 = bitcast %"class.WTF::HashSet"* %137 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 20, i1 false) #10
  %144 = load i64, i64* %142, align 8
  %145 = bitcast %"class.WTF::HashSet"* %137 to i64*
  store atomic i64 0, i64* %142 monotonic, align 8
  store atomic i64 %144, i64* %145 monotonic, align 8
  %146 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 %57, i32 2, i32 0, i32 1
  %147 = load i32, i32* %139, align 4
  %148 = load i32, i32* %146, align 4
  store i32 %148, i32* %139, align 4
  store i32 %147, i32* %146, align 4
  %149 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 %57, i32 2, i32 0, i32 2
  %150 = load i32, i32* %140, align 4
  %151 = load i32, i32* %149, align 4
  store i32 %151, i32* %140, align 4
  store i32 %150, i32* %149, align 4
  %152 = load i32, i32* %141, align 8
  %153 = and i32 %152, 2147483647
  %154 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 %57, i32 2, i32 0, i32 3
  %155 = load i32, i32* %154, align 8
  %156 = and i32 %155, 2147483647
  %157 = and i32 %152, -2147483648
  %158 = or i32 %156, %157
  store i32 %158, i32* %141, align 8
  %159 = load i32, i32* %154, align 8
  %160 = and i32 %159, -2147483648
  %161 = or i32 %160, %153
  store i32 %161, i32* %154, align 8
  %162 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %162, i64 %57
  %164 = icmp eq %"struct.WTF::KeyValuePair"* %163, %3
  %165 = select i1 %164, %"struct.WTF::KeyValuePair"* %127, %"struct.WTF::KeyValuePair"* %55
  %166 = load i32, i32* %6, align 8
  %167 = ptrtoint %"struct.WTF::KeyValuePair"* %162 to i64
  br label %168

168:                                              ; preds = %51, %134
  %169 = phi i64 [ %52, %51 ], [ %167, %134 ]
  %170 = phi i32 [ %53, %51 ], [ %166, %134 ]
  %171 = phi %"struct.WTF::KeyValuePair"* [ %54, %51 ], [ %162, %134 ]
  %172 = phi %"struct.WTF::KeyValuePair"* [ %55, %51 ], [ %165, %134 ]
  %173 = add i32 %56, 1
  %174 = icmp eq i32 %173, %170
  br i1 %174, label %18, label %51
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!"branch_weights", i32 1, i32 1048575}
