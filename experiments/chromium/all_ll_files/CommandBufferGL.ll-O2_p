; ModuleID = '../../third_party/dawn/src/dawn_native/opengl/CommandBufferGL.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/opengl/CommandBufferGL.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.dawn_native::opengl::CommandBuffer" = type { %"class.dawn_native::CommandBufferBase.base", [7 x i8] }
%"class.dawn_native::CommandBufferBase.base" = type <{ %"class.dawn_native::ObjectBase", %"class.dawn_native::CommandIterator", %"struct.dawn_native::CommandBufferResourceUsage", i8 }>
%"class.dawn_native::ObjectBase" = type { %class.RefCounted, %"class.dawn_native::DeviceBase"* }
%class.RefCounted = type { i32 (...)**, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.dawn_native::DeviceBase" = type { %class.RefCounted, i64, i64, i64, void (i32, i8*, i8*)*, i8*, void (i8*, i8*)*, i8*, %"class.std::__1::unique_ptr", %class.Ref, %"class.dawn_native::AdapterBase"*, %"class.std::__1::unique_ptr.2", %class.Ref.8, %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %class.Ref.22, %"class.std::__1::unique_ptr.24", i32, %"struct.std::__1::array", %"struct.dawn_native::TogglesSet", %"struct.dawn_native::TogglesSet", i64, %"struct.dawn_native::ExtensionsSet", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.dawn_native::ErrorScopeStack"* }
%"class.dawn_native::ErrorScopeStack" = type opaque
%class.Ref = type { %class.RefBase }
%class.RefBase = type { %"class.dawn_native::InstanceBase"* }
%"class.dawn_native::InstanceBase" = type opaque
%"class.dawn_native::AdapterBase" = type opaque
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.dawn_native::DeviceBase::Caches"* }
%"struct.dawn_native::DeviceBase::Caches" = type opaque
%class.Ref.8 = type { %class.RefBase.9 }
%class.RefBase.9 = type { %"class.dawn_native::BindGroupLayoutBase"* }
%"class.dawn_native::BindGroupLayoutBase" = type { %"class.dawn_native::CachedObject.base", %"struct.dawn_native::BindingCounts", %"class.ityp::vector", %"class.std::__1::map" }
%"class.dawn_native::CachedObject.base" = type <{ %"class.dawn_native::ObjectBase", i8, [7 x i8], i64, i8 }>
%"struct.dawn_native::BindingCounts" = type { i32, i32, i32, i32, i32, %"class.dawn_native::PerStage" }
%"class.dawn_native::PerStage" = type { %"struct.std::__1::array.171" }
%"struct.std::__1::array.171" = type { [3 x %"struct.dawn_native::PerStageBindingCounts"] }
%"struct.dawn_native::PerStageBindingCounts" = type { i32, i32, i32, i32, i32 }
%"class.ityp::vector" = type { %"class.std::__1::vector.172" }
%"class.std::__1::vector.172" = type { %"class.std::__1::__vector_base.173" }
%"class.std::__1::__vector_base.173" = type { %"struct.dawn_native::BindingInfo"*, %"struct.dawn_native::BindingInfo"*, %"class.std::__1::__compressed_pair.174" }
%"struct.dawn_native::BindingInfo" = type { i32, i32, i32, %"struct.dawn_native::BufferBindingLayout", %"struct.dawn_native::SamplerBindingLayout", %"struct.dawn_native::TextureBindingLayout", %"struct.dawn_native::StorageTextureBindingLayout" }
%"struct.dawn_native::BufferBindingLayout" = type { %"struct.dawn_native::ChainedStruct"*, i32, i8, i64 }
%"struct.dawn_native::ChainedStruct" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8] }>
%"struct.dawn_native::SamplerBindingLayout" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8] }>
%"struct.dawn_native::TextureBindingLayout" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, i32, i8, [7 x i8] }>
%"struct.dawn_native::StorageTextureBindingLayout" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.dawn_native::BindingInfo"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree.179" }
%"class.std::__1::__tree.179" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { i64 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.dawn_native::DynamicUploader"* }
%"class.dawn_native::DynamicUploader" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.dawn_native::CallbackTaskManager"* }
%"class.dawn_native::CallbackTaskManager" = type opaque
%class.Ref.22 = type { %class.RefBase.23 }
%class.RefBase.23 = type { %"class.dawn_native::QueueBase"* }
%"class.dawn_native::QueueBase" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.dawn_native::DeviceBase::DeprecationWarnings"* }
%"struct.dawn_native::DeviceBase::DeprecationWarnings" = type opaque
%"struct.std::__1::array" = type { [55 x %"struct.dawn_native::Format"] }
%"struct.dawn_native::Format" = type { i32, i8, i8, i8, i8, i8, %"struct.std::__1::array.30" }
%"struct.std::__1::array.30" = type { [3 x %"struct.dawn_native::AspectInfo"] }
%"struct.dawn_native::AspectInfo" = type { %"struct.dawn_native::TexelBlockInfo", i32, i8, i32 }
%"struct.dawn_native::TexelBlockInfo" = type { i32, i32, i32 }
%"struct.dawn_native::TogglesSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.dawn_native::ExtensionsSet" = type { %"class.std::__1::bitset.31" }
%"class.std::__1::bitset.31" = type { %"class.std::__1::__bitset.32" }
%"class.std::__1::__bitset.32" = type { i64 }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.dawn_native::InternalPipelineStore"* }
%"struct.dawn_native::InternalPipelineStore" = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.dawn_native::PersistentCache"* }
%"class.dawn_native::PersistentCache" = type opaque
%"class.dawn_native::CommandIterator" = type <{ %"class.std::__1::vector", i8*, i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.dawn_native::BlockDef"*, %"struct.dawn_native::BlockDef"*, %"class.std::__1::__compressed_pair.45" }
%"struct.dawn_native::BlockDef" = type { i64, i8* }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.dawn_native::BlockDef"* }
%"struct.dawn_native::CommandBufferResourceUsage" = type { %"class.std::__1::vector.48", %"class.std::__1::vector.130", %"class.std::__1::set", %"class.std::__1::set.146", %"class.std::__1::set.161" }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"struct.dawn_native::RenderPassResourceUsage"*, %"struct.dawn_native::RenderPassResourceUsage"*, %"class.std::__1::__compressed_pair.125" }
%"struct.dawn_native::RenderPassResourceUsage" = type { %"struct.dawn_native::SyncScopeResourceUsage", %"class.std::__1::vector.104", %"class.std::__1::vector.118" }
%"struct.dawn_native::SyncScopeResourceUsage" = type { %"class.std::__1::vector.50", %"class.std::__1::vector.63", %"class.std::__1::vector.70", %"class.std::__1::vector.83" }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %"class.dawn_native::BufferBase"**, %"class.dawn_native::BufferBase"**, %"class.std::__1::__compressed_pair.58" }
%"class.dawn_native::BufferBase" = type { %"class.dawn_native::ObjectBase", i64, i32, i32, i8, %"class.std::__1::unique_ptr.52", void (i32, i8*)*, i8*, i64, i32, i64, i64 }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.dawn_native::StagingBufferBase"* }
%"class.dawn_native::StagingBufferBase" = type opaque
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.dawn_native::BufferBase"** }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { i32*, i32*, %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { i32* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"class.dawn_native::TextureBase"**, %"class.dawn_native::TextureBase"**, %"class.std::__1::__compressed_pair.78" }
%"class.dawn_native::TextureBase" = type { %"class.dawn_native::ObjectBase", i32, %"struct.dawn_native::Format"*, %"struct.dawn_native::Extent3D", i32, i32, i32, i32, %"class.std::__1::vector.72" }
%"struct.dawn_native::Extent3D" = type { i32, i32, i32 }
%"class.std::__1::vector.72" = type { i64*, i64, %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.dawn_native::TextureBase"** }
%"class.std::__1::vector.83" = type { %"class.std::__1::__vector_base.84" }
%"class.std::__1::__vector_base.84" = type { %"class.dawn_native::SubresourceStorage"*, %"class.dawn_native::SubresourceStorage"*, %"class.std::__1::__compressed_pair.99" }
%"class.dawn_native::SubresourceStorage" = type { i8, i8, i16, %"struct.std::__1::array.85", %"struct.std::__1::array.86", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.93" }
%"struct.std::__1::array.85" = type { [2 x i8] }
%"struct.std::__1::array.86" = type { [2 x i32] }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { i8* }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { i32* }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.dawn_native::SubresourceStorage"* }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"class.dawn_native::QuerySetBase"**, %"class.dawn_native::QuerySetBase"**, %"class.std::__1::__compressed_pair.113" }
%"class.dawn_native::QuerySetBase" = type { %"class.dawn_native::ObjectBase", i32, i32, %"class.std::__1::vector.106", i32, %"class.std::__1::vector.72" }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { i32*, i32*, %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { i32* }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.dawn_native::QuerySetBase"** }
%"class.std::__1::vector.118" = type { %"class.std::__1::__vector_base.119" }
%"class.std::__1::__vector_base.119" = type { %"class.std::__1::vector.72"*, %"class.std::__1::vector.72"*, %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.std::__1::vector.72"* }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.dawn_native::RenderPassResourceUsage"* }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %"struct.dawn_native::ComputePassResourceUsage"*, %"struct.dawn_native::ComputePassResourceUsage"*, %"class.std::__1::__compressed_pair.156" }
%"struct.dawn_native::ComputePassResourceUsage" = type { %"class.std::__1::vector.132", %"class.std::__1::set", %"class.std::__1::set.146" }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.dawn_native::SyncScopeResourceUsage"*, %"struct.dawn_native::SyncScopeResourceUsage"*, %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.dawn_native::SyncScopeResourceUsage"* }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.dawn_native::ComputePassResourceUsage"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.139", %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::set.146" = type { %"class.std::__1::__tree.147" }
%"class.std::__1::__tree.147" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.148", %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::set.161" = type { %"class.std::__1::__tree.162" }
%"class.std::__1::__tree.162" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.163", %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.dawn_native::CommandEncoder" = type { %"class.dawn_native::ObjectBase", %"class.dawn_native::EncodingContext", %"class.std::__1::set", %"class.std::__1::set.146", %"class.std::__1::set.161", i64 }
%"class.dawn_native::EncodingContext" = type { %"class.dawn_native::DeviceBase"*, %"class.dawn_native::ObjectBase"*, %"class.dawn_native::ObjectBase"*, %"class.std::__1::vector.48", i8, %"class.std::__1::vector.130", i8, [7 x i8], %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandIterator", i8, i8, %"class.std::__1::unique_ptr.188" }
%"class.dawn_native::CommandAllocator" = type <{ %"class.std::__1::vector", i64, i8*, i8*, [1 x i32], [4 x i8] }>
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.dawn_native::ErrorData"* }
%"class.dawn_native::ErrorData" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.196" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.196" = type { %"class.std::__1::__vector_base.197" }
%"class.std::__1::__vector_base.197" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"class.std::__1::__compressed_pair.198" }
%"struct.dawn_native::ErrorData::BacktraceRecord" = type { i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"* }
%"struct.dawn_native::CommandBufferDescriptor" = type { %"struct.dawn_native::ChainedStruct"*, i8* }
%"class.dawn_native::CommandBufferBase" = type <{ %"class.dawn_native::ObjectBase", %"class.dawn_native::CommandIterator", %"struct.dawn_native::CommandBufferResourceUsage", i8, [7 x i8] }>
%class.Result = type { %"class.std::__1::unique_ptr.188" }
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>
%"class.BitSetIterator<6, unsigned char>::Iterator" = type { %"class.std::__1::bitset.31", i64, i64 }
%"class.dawn_native::EnumMaskIterator<dawn_native::Aspect>::Iterator" = type { %"class.BitSetIterator<6, unsigned char>::Iterator" }
%"struct.dawn_native::SubresourceRange" = type { i8, i32, i32, i32, i32 }
%"struct.dawn_native::TextureDataLayout" = type { %"struct.dawn_native::ChainedStruct"*, i64, i32, i32 }
%"struct.dawn_native::opengl::OpenGLFunctions" = type { %"struct.dawn_native::opengl::OpenGLFunctionsBase", %"struct.dawn_native::opengl::OpenGLVersion", [4 x i8], %"class.std::__1::unordered_set" }
%"struct.dawn_native::opengl::OpenGLFunctionsBase" = type { void (i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (float, float, float, float)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, i32 (i32)*, void (i32)*, void (float, float, float, float)*, void (float)*, void (i32)*, void (i8, i8, i8, i8)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, i32 ()*, i32 (i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i8)*, void (float, float)*, void (i32, i32)*, void (i32)*, void (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i8*)*, void (i32)*, void (i32)*, void ()*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i8*)*, void (i32, i32, i32*)*, i32 ()*, void (i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, i8* (i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i8**)*, void (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, void (float)*, void (i32)*, void (i32, i32)*, void (float, float)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void ()*, void (i32, i32, i32, i32)*, void (float, i8)*, void (i32, i32, i32, i32)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32)*, void (i32)*, void (i32, float)*, void (i32, float*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, i8 (i32)*, void (i32, i32, i8**)*, void (i32, i32*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32, i64, i64)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void (i32, i32, i32*)*, void (i32)*, void ()*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32)*, void (i32, i32, i8**, i32)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, float, i32)*, i8* (i32, i32)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i8*, i32)*, %struct.__GLsync* (i32, i32)*, i8 (%struct.__GLsync*)*, void (%struct.__GLsync*)*, i32 (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i64*)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i64*)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void ()*, void ()*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32)*, i32 (i32, i32, i8**)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, float)*, void (i32, i32, float, float)*, void (i32, i32, float, float, float)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32, i32, i8*)*, void (i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i64, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32)*, void ()*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i8*)*, void ()*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i8, i8, i8, i8)*, i8 (i32, i32)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i32)*, void (float, float, float, float, float, float, float, float)*, i32 ()*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (float)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (float)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32)*, void (double)*, void (i32)*, void (i32, float)*, void (i32, double*)*, void (i32, i32, i32, i32, i8*)*, void (double, double)*, void (i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i64, i64, i8*)*, i8* (i32, i32)*, void (i32, i32, double*)*, void (i32, double)*, void (i32, double*)*, void (i32, i16)*, void (i32, i16*)*, void (i32, double, double)*, void (i32, double*)*, void (i32, i16, i16)*, void (i32, i16*)*, void (i32, double, double, double)*, void (i32, double*)*, void (i32, i16, i16, i16)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i8, i8, i8, i8)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, double, double, double, double)*, void (i32, double*)*, void (i32, i32*)*, void (i32, i16, i16, i16, i16)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i32)*, void (i32, i32)*, void ()*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i8*)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i16*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32*, i32, i8**, i32, i32*)*, void (i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i8*)*, i32 (i32, i8*)*, void (i32, i32)*, void (i32, i32, i64*)*, void (i32, i32, i64*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, double)*, void (i32, double, double)*, void (i32, double, double, double)*, void (i32, double, double, double, double)*, void (i32, i32, double*)*, void (i32, i32, double*)*, void (i32, i32, double*)*, void (i32, i32, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, double*)*, i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, double)*, void (i32, i32, i32, double*)*, void (i32, i32, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, double, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, double, double, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, double)*, void (i32, double, double)*, void (i32, double, double, double)*, void (i32, double, double, double, double)*, void (i32, double*)*, void (i32, double*)*, void (i32, double*)*, void (i32, double*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, double*)*, void (i32, i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, double*)*, void (i32, double, double)*, void (i32, i32, float*)*, void (i32, i32, double*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i32, i32, i8*)*, void (i32, i32, i32, i32, i64*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i64, i64)*, void (i32)*, void (i32, i8*, i32, i32)*, void (i32, i32, i8*, i32, i32)*, i32 (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*, i64*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i64*, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i64*)*, void (i32, i32*)*, void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i32, i32, i8*)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, i8 (i32)*, void (i32, i64, i64)*, void (i32, i32, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i8**)*, void (i32, i64, i64, i8*)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, float, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i64, i32)*, void (i32, i32, i32, i32*, i64*, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i64*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, double*)*, void (i32, i32, i32, double*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i16*)*, void (i32, i8*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i8*, i32, i8*, i8*)*, void (i32, i8, i32, i32, i32, i8*)*, void (i32, i8, i32, i32, i32, i8*)*, void ()*, void (i32, i8*, i32, i32*, i32*)*, void (i32, i8*, i64, i32, i32)*, void (i32, i32, i8*, i64, i32, i32)*, void (float, float, float)* }
%struct.__GLsync = type opaque
%"struct.dawn_native::opengl::OpenGLVersion" = type { i32, i32, i32 }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.206", %"class.std::__1::__compressed_pair.214", %"class.std::__1::__compressed_pair.219", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208", %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { float }
%"struct.dawn_native::BeginRenderPassCmd" = type { %class.Ref.235, %"class.ityp::array.240", %"struct.dawn_native::RenderPassDepthStencilAttachmentInfo", i32, i32, %class.Ref.246 }
%class.Ref.235 = type { %class.RefBase.236 }
%class.RefBase.236 = type { %"class.dawn_native::AttachmentState"* }
%"class.dawn_native::AttachmentState" = type { %"class.dawn_native::CachedObject.base", %"class.dawn_native::AttachmentStateBlueprint" }
%"class.dawn_native::AttachmentStateBlueprint" = type { %"class.ityp::bitset", %"class.ityp::array", i32, i32 }
%"class.ityp::bitset" = type { %"class.std::__1::bitset.237" }
%"class.std::__1::bitset.237" = type { %"class.std::__1::__bitset.238" }
%"class.std::__1::__bitset.238" = type { i64 }
%"class.ityp::array" = type { %"struct.std::__1::array.239" }
%"struct.std::__1::array.239" = type { [4 x i32] }
%"class.ityp::array.240" = type { %"struct.std::__1::array.241" }
%"struct.std::__1::array.241" = type { [4 x %"struct.dawn_native::RenderPassColorAttachmentInfo"] }
%"struct.dawn_native::RenderPassColorAttachmentInfo" = type { %class.Ref.242, %class.Ref.242, i32, i32, %"struct.dawn_native::Color" }
%class.Ref.242 = type { %class.RefBase.243 }
%class.RefBase.243 = type { %"class.dawn_native::TextureViewBase"* }
%"class.dawn_native::TextureViewBase" = type { %"class.dawn_native::ObjectBase", %class.Ref.244, %"struct.dawn_native::Format"*, i32, %"struct.dawn_native::SubresourceRange" }
%class.Ref.244 = type { %class.RefBase.245 }
%class.RefBase.245 = type { %"class.dawn_native::TextureBase"* }
%"struct.dawn_native::Color" = type { double, double, double, double }
%"struct.dawn_native::RenderPassDepthStencilAttachmentInfo" = type { %class.Ref.242, i32, i32, i32, i32, float, i32 }
%class.Ref.246 = type { %class.RefBase.247 }
%class.RefBase.247 = type { %"class.dawn_native::QuerySetBase"* }
%"struct.dawn_native::CopyBufferToBufferCmd" = type { %class.Ref.248, i64, %class.Ref.248, i64, i64 }
%class.Ref.248 = type { %class.RefBase.249 }
%class.RefBase.249 = type { %"class.dawn_native::BufferBase"* }
%class.Ref.250 = type { %class.RefBase.251 }
%class.RefBase.251 = type { %"class.dawn_native::opengl::Buffer"* }
%"class.dawn_native::opengl::Buffer" = type { %"class.dawn_native::BufferBase", i32, i8* }
%"struct.dawn_native::CopyBufferToTextureCmd" = type <{ %"struct.dawn_native::BufferCopy", %"struct.dawn_native::TextureCopy", %"struct.dawn_native::Extent3D", [4 x i8] }>
%"struct.dawn_native::BufferCopy" = type { %class.Ref.248, i64, i32, i32 }
%"struct.dawn_native::TextureCopy" = type <{ %class.Ref.244, i32, %"struct.dawn_native::Origin3D", i8, [7 x i8] }>
%"struct.dawn_native::Origin3D" = type { i32, i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.dawn_native::opengl::Texture" = type { %"class.dawn_native::TextureBase", i32, i32 }
%"struct.dawn_native::CopyTextureToBufferCmd" = type <{ %"struct.dawn_native::TextureCopy", %"struct.dawn_native::BufferCopy", %"struct.dawn_native::Extent3D", [4 x i8] }>
%"struct.dawn_native::opengl::GLFormat" = type { i32, i32, i32, i8, i32 }
%"struct.dawn_native::CopyTextureToTextureCmd" = type { %"struct.dawn_native::TextureCopy", %"struct.dawn_native::TextureCopy", %"struct.dawn_native::Extent3D", [4 x i8] }
%"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker" = type { %"class.dawn_native::BindGroupTrackerBase", %"class.dawn_native::opengl::PipelineGL"* }
%"class.dawn_native::BindGroupTrackerBase" = type { %"class.ityp::bitset.337", %"class.ityp::bitset.337", %"class.ityp::bitset.337", %"class.ityp::array.367", %"class.ityp::array.375", %"class.ityp::array.377", %"class.dawn_native::PipelineLayoutBase"*, %"class.dawn_native::PipelineLayoutBase"* }
%"class.ityp::bitset.337" = type { %"class.std::__1::bitset.237" }
%"class.ityp::array.367" = type { %"struct.std::__1::array.368" }
%"struct.std::__1::array.368" = type { [4 x %"class.dawn_native::BindGroupBase"*] }
%"class.dawn_native::BindGroupBase" = type { %"class.dawn_native::ObjectBase", %class.Ref.8, %"struct.dawn_native::BindGroupLayoutBase::BindingDataPointers" }
%"struct.dawn_native::BindGroupLayoutBase::BindingDataPointers" = type { %"class.ityp::span", %"class.ityp::span.369", %"class.ityp::span.373" }
%"class.ityp::span" = type <{ %"struct.dawn_native::BindGroupLayoutBase::BufferBindingData"*, i32, [4 x i8] }>
%"struct.dawn_native::BindGroupLayoutBase::BufferBindingData" = type { i64, i64 }
%"class.ityp::span.369" = type <{ %class.Ref.370*, i32, [4 x i8] }>
%class.Ref.370 = type { %class.RefBase.371 }
%class.RefBase.371 = type { %"class.dawn_native::ObjectBase"* }
%"class.ityp::span.373" = type <{ i64*, i32, [4 x i8] }>
%"class.ityp::array.375" = type { %"struct.std::__1::array.376" }
%"struct.std::__1::array.376" = type { [4 x i32] }
%"class.ityp::array.377" = type { %"struct.std::__1::array.378" }
%"struct.std::__1::array.378" = type { [4 x %"struct.std::__1::array.379"] }
%"struct.std::__1::array.379" = type { [12 x i64] }
%"class.dawn_native::PipelineLayoutBase" = type { %"class.dawn_native::CachedObject.base", %"class.ityp::array.335", %"class.ityp::bitset.337" }
%"class.ityp::array.335" = type { %"struct.std::__1::array.336" }
%"struct.std::__1::array.336" = type { [4 x %class.Ref.8] }
%"class.dawn_native::opengl::PipelineGL" = type { i32, %"class.std::__1::vector.344", %"class.std::__1::vector.358", %"class.std::__1::vector.258", %class.Ref.365 }
%"class.std::__1::vector.344" = type { %"class.std::__1::__vector_base.345" }
%"class.std::__1::__vector_base.345" = type { %"class.std::__1::vector.346"*, %"class.std::__1::vector.346"*, %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::vector.346" = type { %"class.std::__1::__vector_base.347" }
%"class.std::__1::__vector_base.347" = type { %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"*, %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"*, %"class.std::__1::__compressed_pair.348" }
%"struct.dawn_native::opengl::PipelineGL::SamplerUnit" = type { i32, i8 }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.std::__1::vector.346"* }
%"class.std::__1::vector.358" = type { %"class.std::__1::__vector_base.359" }
%"class.std::__1::__vector_base.359" = type { %"class.std::__1::vector.258"*, %"class.std::__1::vector.258"*, %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.std::__1::vector.258"* }
%"class.std::__1::vector.258" = type { %"class.std::__1::__vector_base.259" }
%"class.std::__1::__vector_base.259" = type { i32*, i32*, %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { i32* }
%class.Ref.365 = type { %class.RefBase.366 }
%class.RefBase.366 = type { %"class.dawn_native::opengl::Sampler"* }
%"class.dawn_native::opengl::Sampler" = type { %"class.dawn_native::SamplerBase.base", i32, i32, [4 x i8] }
%"class.dawn_native::SamplerBase.base" = type <{ %"class.dawn_native::CachedObject.base", [3 x i8], i32, i32, i32, i32, i32, i32, float, float, i32, i16 }>
%"struct.dawn_native::DispatchCmd" = type { i32, i32, i32 }
%"struct.dawn_native::DispatchIndirectCmd" = type { %class.Ref.248, i64 }
%class.Ref.382 = type { %class.RefBase.383 }
%class.RefBase.383 = type { %"class.dawn_native::opengl::ComputePipeline"* }
%"class.dawn_native::opengl::ComputePipeline" = type { %"class.dawn_native::ComputePipelineBase", %"class.dawn_native::opengl::PipelineGL" }
%"class.dawn_native::ComputePipelineBase" = type { %"class.dawn_native::PipelineBase" }
%"class.dawn_native::PipelineBase" = type { %"class.dawn_native::CachedObject.base", i32, %"class.dawn_native::PerStage.254", %class.Ref.333, %"class.ityp::array.338" }
%"class.dawn_native::PerStage.254" = type { %"struct.std::__1::array.255" }
%"struct.std::__1::array.255" = type { [3 x %"struct.dawn_native::ProgrammableStage"] }
%"struct.dawn_native::ProgrammableStage" = type { %class.Ref.256, %"class.std::__1::basic_string", %"struct.dawn_native::EntryPointMetadata"* }
%class.Ref.256 = type { %class.RefBase.257 }
%class.RefBase.257 = type { %"class.dawn_native::ShaderModuleBase"* }
%"class.dawn_native::ShaderModuleBase" = type { %"class.dawn_native::CachedObject.base", i32, %"class.std::__1::vector.258", %"class.std::__1::basic_string", %"class.std::__1::unordered_map", %"class.std::__1::vector.258", %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.292", %"class.std::__1::unique_ptr.298" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.265" }
%"class.std::__1::__hash_table.265" = type <{ %"class.std::__1::unique_ptr.266", %"class.std::__1::__compressed_pair.276", %"class.std::__1::__compressed_pair.281", %"class.std::__1::__compressed_pair.283", [4 x i8] }>
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268", %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.std::__1::__hash_node_base.269"** }
%"struct.std::__1::__hash_node_base.269" = type { %"struct.std::__1::__hash_node_base.269"* }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.std::__1::__bucket_list_deallocator.271" }
%"class.std::__1::__bucket_list_deallocator.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"struct.std::__1::__hash_node_base.269" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.tint::Program"* }
%"class.tint::Program" = type opaque
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.dawn_native::TintSource"* }
%"class.dawn_native::TintSource" = type opaque
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.dawn_native::OwnedCompilationMessages"* }
%"class.dawn_native::OwnedCompilationMessages" = type { %struct.WGPUCompilationInfo, %"class.std::__1::vector.301", %"class.std::__1::vector.308" }
%struct.WGPUCompilationInfo = type { i32, %struct.WGPUCompilationMessage* }
%struct.WGPUCompilationMessage = type { i8*, i32, i64, i64, i64, i64 }
%"class.std::__1::vector.301" = type { %"class.std::__1::__vector_base.302" }
%"class.std::__1::__vector_base.302" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.308" = type { %"class.std::__1::__vector_base.309" }
%"class.std::__1::__vector_base.309" = type { %struct.WGPUCompilationMessage*, %struct.WGPUCompilationMessage*, %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %struct.WGPUCompilationMessage* }
%"struct.dawn_native::EntryPointMetadata" = type { %"class.ityp::array.318", %"class.std::__1::bitset.329", %"class.ityp::array.331", %"class.ityp::bitset", %"struct.dawn_native::Origin3D", i32 }
%"class.ityp::array.318" = type { %"struct.std::__1::array.319" }
%"struct.std::__1::array.319" = type { [4 x %"class.std::__1::map.320"] }
%"class.std::__1::map.320" = type { %"class.std::__1::__tree.321" }
%"class.std::__1::__tree.321" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.322", %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::bitset.329" = type { %"class.std::__1::__bitset.330" }
%"class.std::__1::__bitset.330" = type { i64 }
%"class.ityp::array.331" = type { %"struct.std::__1::array.332" }
%"struct.std::__1::array.332" = type { [4 x i32] }
%class.Ref.333 = type { %class.RefBase.334 }
%class.RefBase.334 = type { %"class.dawn_native::PipelineLayoutBase"* }
%"class.ityp::array.338" = type { %"struct.std::__1::array.339" }
%"struct.std::__1::array.339" = type { [4 x %"class.std::__1::vector.340"] }
%"class.std::__1::vector.340" = type { %"class.std::__1::__vector_base.341" }
%"class.std::__1::__vector_base.341" = type { i64*, i64*, %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { i64* }
%"struct.dawn_native::SetBindGroupCmd" = type <{ i32, [4 x i8], %class.Ref.384, i32, [4 x i8] }>
%class.Ref.384 = type { %class.RefBase.385 }
%class.RefBase.385 = type { %"class.dawn_native::BindGroupBase"* }
%"class.std::__1::__bit_iterator.418" = type <{ i64*, i32, [4 x i8] }>
%"class.BitSetIterator<4, unsigned char>::Iterator" = type { %"class.std::__1::bitset.237", i64, i64 }
%"class.ityp::array.386" = type { %"struct.std::__1::array.376" }
%"class.dawn_native::opengl::PersistentPipelineState" = type { i32, i32, i32, i32 }
%"class.dawn_native::opengl::RenderPipeline" = type { %"class.dawn_native::RenderPipelineBase.base", %"class.dawn_native::opengl::PipelineGL", i32, i32, %"class.ityp::array.401" }
%"class.dawn_native::RenderPipelineBase.base" = type <{ %"class.dawn_native::PipelineBase", i32, [4 x i8], %"class.ityp::bitset.389", %"class.ityp::array.390", %"class.ityp::bitset.392", %"class.ityp::array.395", %class.Ref.235, %"class.ityp::array.397", %"class.ityp::array.399", %"struct.dawn_native::PrimitiveState", %"struct.dawn_native::DepthStencilState", %"struct.dawn_native::MultisampleState", i8 }>
%"class.ityp::bitset.389" = type { %"class.std::__1::bitset.329" }
%"class.ityp::array.390" = type { %"struct.std::__1::array.391" }
%"struct.std::__1::array.391" = type { [16 x %"struct.dawn_native::VertexAttributeInfo"] }
%"struct.dawn_native::VertexAttributeInfo" = type { i32, i64, i8, i8 }
%"class.ityp::bitset.392" = type { %"class.std::__1::bitset.393" }
%"class.std::__1::bitset.393" = type { %"class.std::__1::__bitset.394" }
%"class.std::__1::__bitset.394" = type { i64 }
%"class.ityp::array.395" = type { %"struct.std::__1::array.396" }
%"struct.std::__1::array.396" = type { [8 x %"struct.dawn_native::VertexBufferInfo"] }
%"struct.dawn_native::VertexBufferInfo" = type { i64, i32 }
%"class.ityp::array.397" = type { %"struct.std::__1::array.398" }
%"struct.std::__1::array.398" = type { [4 x %"struct.dawn_native::ColorTargetState"] }
%"struct.dawn_native::ColorTargetState" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8], %"struct.dawn_native::BlendState"*, i32, [4 x i8] }>
%"struct.dawn_native::BlendState" = type { %"struct.dawn_native::BlendComponent", %"struct.dawn_native::BlendComponent" }
%"struct.dawn_native::BlendComponent" = type { i32, i32, i32 }
%"class.ityp::array.399" = type { %"struct.std::__1::array.400" }
%"struct.std::__1::array.400" = type { [4 x %"struct.dawn_native::BlendState"] }
%"struct.dawn_native::PrimitiveState" = type { %"struct.dawn_native::ChainedStruct"*, i32, i32, i32, i32 }
%"struct.dawn_native::DepthStencilState" = type { %"struct.dawn_native::ChainedStruct"*, i32, i8, i32, %"struct.dawn_native::StencilFaceState", %"struct.dawn_native::StencilFaceState", i32, i32, i32, float, float }
%"struct.dawn_native::StencilFaceState" = type { i32, i32, i32, i32 }
%"struct.dawn_native::MultisampleState" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, i32, i8, [7 x i8] }>
%"class.ityp::array.401" = type { %"struct.std::__1::array.402" }
%"struct.std::__1::array.402" = type { [8 x %"class.ityp::bitset.389"] }
%"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker" = type { i8, %"class.dawn_native::opengl::Buffer"*, %"class.ityp::bitset.392", %"class.ityp::array.403", %"class.ityp::array.405", %"class.dawn_native::RenderPipelineBase"* }
%"class.ityp::array.403" = type { %"struct.std::__1::array.404" }
%"struct.std::__1::array.404" = type { [8 x %"class.dawn_native::opengl::Buffer"*] }
%"class.ityp::array.405" = type { %"struct.std::__1::array.406" }
%"struct.std::__1::array.406" = type { [8 x i64] }
%"class.dawn_native::RenderPipelineBase" = type <{ %"class.dawn_native::PipelineBase", i32, [4 x i8], %"class.ityp::bitset.389", %"class.ityp::array.390", %"class.ityp::bitset.392", %"class.ityp::array.395", %class.Ref.235, %"class.ityp::array.397", %"class.ityp::array.399", %"struct.dawn_native::PrimitiveState", %"struct.dawn_native::DepthStencilState", %"struct.dawn_native::MultisampleState", i8, [7 x i8] }>
%class.anon.407 = type { %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"*, %"struct.dawn_native::opengl::OpenGLFunctions"*, %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"*, %"class.dawn_native::opengl::RenderPipeline"**, i32*, i32*, i64*, %"class.dawn_native::opengl::PersistentPipelineState"* }
%"struct.dawn_native::SetStencilReferenceCmd" = type { i32 }
%"struct.dawn_native::SetViewportCmd" = type { float, float, float, float, float, float }
%"struct.dawn_native::SetScissorRectCmd" = type { i32, i32, i32, i32 }
%"struct.dawn_native::ExecuteBundlesCmd" = type { i32 }
%class.Ref.408 = type { %class.RefBase.409 }
%class.RefBase.409 = type { %"class.dawn_native::RenderBundleBase"* }
%"class.dawn_native::RenderBundleBase" = type { %"class.dawn_native::ObjectBase", %"class.dawn_native::CommandIterator", %class.Ref.235, %"struct.dawn_native::RenderPassResourceUsage" }
%"struct.dawn_native::BufferBinding" = type { %"class.dawn_native::BufferBase"*, i64, i64 }
%"class.BitSetIterator<4, unsigned int>::Iterator" = type { %"class.std::__1::bitset.237", i64, i64 }
%"class.dawn_native::opengl::PipelineLayout" = type { %"class.dawn_native::PipelineLayoutBase", %"class.ityp::array.423", i64, i64 }
%"class.ityp::array.423" = type { %"struct.std::__1::array.424" }
%"struct.std::__1::array.424" = type { [4 x %"class.ityp::vector.422"] }
%"class.ityp::vector.422" = type { %"class.std::__1::vector.258" }
%"class.dawn_native::SamplerBase" = type <{ %"class.dawn_native::CachedObject.base", [3 x i8], i32, i32, i32, i32, i32, i32, float, float, i32, i16, [6 x i8] }>
%"class.dawn_native::opengl::TextureView" = type <{ %"class.dawn_native::TextureViewBase", i32, i32, i8, [7 x i8] }>
%"struct.dawn_native::DrawCmd" = type { i32, i32, i32, i32 }
%"struct.dawn_native::DrawIndexedCmd" = type { i32, i32, i32, i32, i32 }
%"struct.dawn_native::DrawIndirectCmd" = type { %class.Ref.248, i64 }
%"struct.dawn_native::DrawIndexedIndirectCmd" = type { %class.Ref.248, i64 }
%"struct.dawn_native::SetIndexBufferCmd" = type { %class.Ref.248, i32, i64, i64 }
%"struct.dawn_native::SetVertexBufferCmd" = type { i8, %class.Ref.248, i64, i64 }
%"class.std::__1::__bit_iterator.438" = type <{ i64*, i32, [4 x i8] }>
%"class.std::__1::__bit_iterator.434" = type <{ i64*, i32, [4 x i8] }>
%"class.BitSetIterator<8, unsigned char>::Iterator" = type { %"class.std::__1::bitset.393", i64, i64 }
%"class.BitSetIterator<16, unsigned char>::Iterator" = type { %"class.std::__1::bitset.329", i64, i64 }

$_ZN11dawn_native6opengl13CommandBufferD0Ev = comdat any

$_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm6EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_ = comdat any

$_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_ = comdat any

$_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm8EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_ = comdat any

$_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm16EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_ = comdat any

$_ZTVN11dawn_native6opengl13CommandBufferE = comdat any

$_ZZN14BitSetIteratorILm6EhE8Iterator10getNextBitEvE8wordMask = comdat any

$_ZZN14BitSetIteratorILm4EjE8Iterator10getNextBitEvE8wordMask = comdat any

$_ZZN14BitSetIteratorILm8EhE8Iterator10getNextBitEvE8wordMask = comdat any

$_ZZN14BitSetIteratorILm16EhE8Iterator10getNextBitEvE8wordMask = comdat any

$_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask = comdat any

@_ZTVN11dawn_native6opengl13CommandBufferE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dawn_native::CommandBufferBase"*)* @_ZN11dawn_native17CommandBufferBaseD2Ev to i8*), i8* bitcast (void (%"class.dawn_native::opengl::CommandBuffer"*)* @_ZN11dawn_native6opengl13CommandBufferD0Ev to i8*), i8* bitcast (void (%class.RefCounted*)* @_ZN10RefCounted10DeleteThisEv to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [66 x i8] c"../../third_party/dawn/src/dawn_native/opengl/CommandBufferGL.cpp\00", align 1
@__func__._ZN11dawn_native6opengl13CommandBuffer7ExecuteEv = private unnamed_addr constant [8 x i8] c"Execute\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"Copies to stencil textures unsupported on OpenGL\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"Unimplemented: \00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"WriteTimestamp unimplemented\00", align 1
@__func__._ZN11dawn_native6opengl13CommandBuffer18ExecuteComputePassEv = private unnamed_addr constant [19 x i8] c"ExecuteComputePass\00", align 1
@.str.4 = private unnamed_addr constant [35 x i8] c"BeginOcclusionQuery unimplemented.\00", align 1
@__func__._ZN11dawn_native6opengl13CommandBuffer17ExecuteRenderPassEPNS_18BeginRenderPassCmdE = private unnamed_addr constant [18 x i8] c"ExecuteRenderPass\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"EndOcclusionQuery unimplemented.\00", align 1
@_ZZN14BitSetIteratorILm6EhE8Iterator10getNextBitEvE8wordMask = linkonce_odr hidden local_unnamed_addr global { i64 } { i64 63 }, comdat, align 8
@_ZZN14BitSetIteratorILm4EjE8Iterator10getNextBitEvE8wordMask = linkonce_odr hidden local_unnamed_addr global { i64 } { i64 15 }, comdat, align 8
@_ZZN14BitSetIteratorILm8EhE8Iterator10getNextBitEvE8wordMask = linkonce_odr hidden local_unnamed_addr global { i64 } { i64 255 }, comdat, align 8
@_ZZN14BitSetIteratorILm16EhE8Iterator10getNextBitEvE8wordMask = linkonce_odr hidden local_unnamed_addr global { i64 } { i64 65535 }, comdat, align 8
@_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask = linkonce_odr hidden local_unnamed_addr global { i64 } { i64 15 }, comdat, align 8
@switch.table._ZN11dawn_native6opengl13CommandBuffer7ExecuteEv = private unnamed_addr constant [4 x i32] [i32 36064, i32 36096, i32 -1431655766, i32 36128], align 4
@switch.table._ZN11dawn_native6opengl12_GLOBAL__N_116BindGroupTracker5ApplyERKNS0_15OpenGLFunctionsE = private unnamed_addr constant [3 x i32] [i32 35345, i32 37074, i32 37074], align 4
@switch.table._ZN11dawn_native6opengl12_GLOBAL__N_131VertexStateBufferBindingTracker5ApplyERKNS0_15OpenGLFunctionsE = private unnamed_addr constant [30 x i32] [i32 5121, i32 5121, i32 5120, i32 5120, i32 5121, i32 5121, i32 5120, i32 5120, i32 5123, i32 5123, i32 5122, i32 5122, i32 5123, i32 5123, i32 5122, i32 5122, i32 5131, i32 5131, i32 5126, i32 5126, i32 5126, i32 5126, i32 5125, i32 5125, i32 5125, i32 5125, i32 5124, i32 5124, i32 5124, i32 5124], align 4
@switch.table._ZN11dawn_native6opengl12_GLOBAL__N_131VertexStateBufferBindingTracker5ApplyERKNS0_15OpenGLFunctionsE.10 = private unnamed_addr constant [12 x i8] c"\01\01\01\01\00\00\00\00\01\01\01\01", align 1

@_ZN11dawn_native6opengl13CommandBufferC1EPNS_14CommandEncoderEPKNS_23CommandBufferDescriptorE = hidden unnamed_addr alias void (%"class.dawn_native::opengl::CommandBuffer"*, %"class.dawn_native::CommandEncoder"*, %"struct.dawn_native::CommandBufferDescriptor"*), void (%"class.dawn_native::opengl::CommandBuffer"*, %"class.dawn_native::CommandEncoder"*, %"struct.dawn_native::CommandBufferDescriptor"*)* @_ZN11dawn_native6opengl13CommandBufferC2EPNS_14CommandEncoderEPKNS_23CommandBufferDescriptorE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl13CommandBufferC2EPNS_14CommandEncoderEPKNS_23CommandBufferDescriptorE(%"class.dawn_native::opengl::CommandBuffer"*, %"class.dawn_native::CommandEncoder"*, %"struct.dawn_native::CommandBufferDescriptor"*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.dawn_native::opengl::CommandBuffer"* %0 to %"class.dawn_native::CommandBufferBase"*
  tail call void @_ZN11dawn_native17CommandBufferBaseC2EPNS_14CommandEncoderEPKNS_23CommandBufferDescriptorE(%"class.dawn_native::CommandBufferBase"* %4, %"class.dawn_native::CommandEncoder"* %1, %"struct.dawn_native::CommandBufferDescriptor"* %2) #8
  %5 = getelementptr inbounds %"class.dawn_native::opengl::CommandBuffer", %"class.dawn_native::opengl::CommandBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11dawn_native6opengl13CommandBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

declare void @_ZN11dawn_native17CommandBufferBaseC2EPNS_14CommandEncoderEPKNS_23CommandBufferDescriptorE(%"class.dawn_native::CommandBufferBase"*, %"class.dawn_native::CommandEncoder"*, %"struct.dawn_native::CommandBufferDescriptor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl13CommandBuffer7ExecuteEv(%class.Result* noalias nocapture sret, %"class.dawn_native::opengl::CommandBuffer"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::__bit_iterator", align 8
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.BitSetIterator<6, unsigned char>::Iterator", align 8
  %8 = alloca %"class.std::__1::__bit_iterator", align 8
  %9 = alloca %"class.std::__1::__bit_iterator", align 8
  %10 = alloca %"class.std::__1::__bit_iterator", align 8
  %11 = alloca %"class.std::__1::__bit_iterator", align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %"class.dawn_native::EnumMaskIterator<dawn_native::Aspect>::Iterator", align 8
  %15 = alloca i32, align 4
  %16 = alloca %class.Result, align 8
  %17 = alloca %class.Result, align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"struct.dawn_native::SubresourceRange", align 4
  %20 = alloca %"struct.dawn_native::TextureDataLayout", align 16
  %21 = alloca %"struct.dawn_native::SubresourceRange", align 4
  %22 = alloca i32, align 4
  %23 = alloca %"struct.dawn_native::SubresourceRange", align 4
  %24 = alloca %"struct.dawn_native::SubresourceRange", align 4
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca %"class.std::__1::basic_string", align 8
  %27 = getelementptr inbounds %"class.dawn_native::opengl::CommandBuffer", %"class.dawn_native::opengl::CommandBuffer"* %1, i64 0, i32 0, i32 0
  %28 = tail call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %27) #8
  %29 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %28, i64 1
  %30 = bitcast %"class.dawn_native::DeviceBase"* %29 to %"struct.dawn_native::opengl::OpenGLFunctions"*
  %31 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #8
  store i32 -1431655766, i32* %15, align 4
  %32 = bitcast %"class.dawn_native::opengl::CommandBuffer"* %1 to %"class.dawn_native::CommandBufferBase"*
  %33 = getelementptr inbounds %"class.dawn_native::opengl::CommandBuffer", %"class.dawn_native::opengl::CommandBuffer"* %1, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.dawn_native::opengl::CommandBuffer", %"class.dawn_native::opengl::CommandBuffer"* %1, i64 0, i32 0, i32 1, i32 1
  %35 = bitcast i8** %34 to i64*
  %36 = getelementptr inbounds %"struct.dawn_native::SubresourceRange", %"struct.dawn_native::SubresourceRange"* %23, i64 0, i32 0
  %37 = getelementptr inbounds %"struct.dawn_native::SubresourceRange", %"struct.dawn_native::SubresourceRange"* %24, i64 0, i32 0
  %38 = bitcast i32* %12 to i8*
  %39 = bitcast i32* %13 to i8*
  %40 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %28, i64 1, i32 18, i32 0, i64 3, i32 5
  %41 = bitcast i8* %40 to void (i32, i32*)**
  %42 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %28, i64 1, i32 3
  %43 = bitcast i64* %42 to void (i32, i32)**
  %44 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %28, i64 1, i32 18, i32 0, i64 1, i32 6, i32 0, i64 2, i32 1
  %45 = bitcast i32* %44 to void (i32)**
  %46 = bitcast %"class.dawn_native::EnumMaskIterator<dawn_native::Aspect>::Iterator"* %14 to i8*
  %47 = getelementptr inbounds %"class.dawn_native::EnumMaskIterator<dawn_native::Aspect>::Iterator", %"class.dawn_native::EnumMaskIterator<dawn_native::Aspect>::Iterator"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.dawn_native::EnumMaskIterator<dawn_native::Aspect>::Iterator", %"class.dawn_native::EnumMaskIterator<dawn_native::Aspect>::Iterator"* %14, i64 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.dawn_native::EnumMaskIterator<dawn_native::Aspect>::Iterator", %"class.dawn_native::EnumMaskIterator<dawn_native::Aspect>::Iterator"* %14, i64 0, i32 0, i32 2
  %50 = bitcast %"class.BitSetIterator<6, unsigned char>::Iterator"* %7 to i8*
  %51 = getelementptr inbounds %"class.BitSetIterator<6, unsigned char>::Iterator", %"class.BitSetIterator<6, unsigned char>::Iterator"* %7, i64 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.BitSetIterator<6, unsigned char>::Iterator", %"class.BitSetIterator<6, unsigned char>::Iterator"* %7, i64 0, i32 1
  %53 = bitcast i64* %52 to i8*
  %54 = getelementptr inbounds %"class.BitSetIterator<6, unsigned char>::Iterator", %"class.BitSetIterator<6, unsigned char>::Iterator"* %7, i64 0, i32 2
  %55 = ptrtoint %"class.BitSetIterator<6, unsigned char>::Iterator"* %7 to i64
  %56 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  %57 = bitcast %"class.std::__1::__bit_iterator"* %3 to i8*
  %58 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  %59 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  %60 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %61 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %62 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  %63 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  %64 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  %65 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  %66 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %28, i64 1, i32 18, i32 0, i64 14, i32 6
  %67 = bitcast %"struct.std::__1::array.30"* %66 to void (i32, i32, i32, i32, i32)**
  %68 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %28, i64 1, i32 18, i32 0, i64 2, i32 6, i32 0, i64 2
  %69 = bitcast %"struct.dawn_native::AspectInfo"* %68 to void (i32, i32, i32, i32, i32)**
  %70 = ptrtoint %"class.dawn_native::EnumMaskIterator<dawn_native::Aspect>::Iterator"* %14 to i64
  %71 = bitcast %"class.std::__1::__bit_iterator"* %11 to i8*
  %72 = bitcast %"class.std::__1::__bit_iterator"* %8 to i8*
  %73 = bitcast %"class.std::__1::__bit_iterator"* %9 to i8*
  %74 = bitcast %"class.std::__1::__bit_iterator"* %10 to i8*
  %75 = bitcast %"class.std::__1::__bit_iterator"* %8 to i64*
  %76 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %8, i64 0, i32 1
  %77 = bitcast %"class.std::__1::__bit_iterator"* %9 to i64*
  %78 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %9, i64 0, i32 1
  %79 = bitcast %"class.std::__1::__bit_iterator"* %10 to i64*
  %80 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %10, i64 0, i32 1
  %81 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %28, i64 1, i32 18, i32 0, i64 13, i32 6, i32 0, i64 2, i32 3
  %82 = bitcast i32* %81 to void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)**
  %83 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %28, i64 1, i32 18, i32 0, i64 2, i32 6, i32 0, i64 0, i32 0, i32 2
  %84 = bitcast i32* %83 to void (i32)**
  %85 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %28, i64 1, i32 18, i32 0, i64 1
  %86 = bitcast %"struct.dawn_native::Format"* %85 to void (i32, i32*)**
  %87 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %28, i64 1, i32 18, i32 0, i64 28, i32 6, i32 0, i64 0, i32 0, i32 2
  %88 = bitcast i32* %87 to void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)**
  %89 = getelementptr inbounds %"struct.dawn_native::SubresourceRange", %"struct.dawn_native::SubresourceRange"* %21, i64 0, i32 0
  %90 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %28, i64 1, i32 5
  %91 = bitcast i8** %90 to void (i32, i32)**
  %92 = bitcast i32* %22 to i8*
  %93 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %28, i64 1, i32 2
  %94 = bitcast i64* %93 to void (i32, i32)**
  %95 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %28, i64 1, i32 18, i32 0, i64 6, i32 6, i32 0, i64 2, i32 0, i32 2
  %96 = bitcast i32* %95 to void (i32, i32)**
  %97 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %28, i64 1, i32 18, i32 0, i64 7
  %98 = bitcast %"struct.dawn_native::Format"* %97 to void (i32, i32, i32, i32, i32, i32, i8*)**
  %99 = getelementptr inbounds %"struct.dawn_native::SubresourceRange", %"struct.dawn_native::SubresourceRange"* %19, i64 0, i32 0
  %100 = bitcast %"struct.dawn_native::TextureDataLayout"* %20 to i8*
  %101 = getelementptr inbounds %"struct.dawn_native::TextureDataLayout", %"struct.dawn_native::TextureDataLayout"* %20, i64 0, i32 2
  %102 = getelementptr inbounds %"struct.dawn_native::TextureDataLayout", %"struct.dawn_native::TextureDataLayout"* %20, i64 0, i32 3
  %103 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %28, i64 1, i32 18, i32 0, i64 17, i32 6, i32 0, i64 1, i32 1
  %104 = bitcast i32* %103 to void (i32, i32, i64, i64, i64)**
  %105 = bitcast %class.Result* %17 to i8*
  %106 = getelementptr inbounds %class.Result, %class.Result* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %107 = bitcast %class.Result* %0 to i64*
  %108 = bitcast %class.Result* %16 to i8*
  %109 = getelementptr inbounds %class.Result, %class.Result* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %110 = bitcast %"struct.dawn_native::TextureDataLayout"* %20 to <2 x i64>*
  br label %111

111:                                              ; preds = %166, %2
  %112 = phi i64 [ 0, %2 ], [ %167, %166 ]
  %113 = phi i64 [ 0, %2 ], [ %168, %166 ]
  %114 = load i64, i64* %35, align 8
  %115 = add i64 %114, 3
  %116 = and i64 %115, -4
  %117 = inttoptr i64 %116 to i32*
  %118 = load i32, i32* %117, align 4
  %119 = icmp eq i32 %118, -1
  br i1 %119, label %123, label %120

120:                                              ; preds = %111
  %121 = inttoptr i64 %116 to i8*
  %122 = getelementptr inbounds i8, i8* %121, i64 4
  store i8* %122, i8** %34, align 8
  store i32 %118, i32* %15, align 4
  br label %127

123:                                              ; preds = %111
  %124 = call zeroext i1 @_ZN11dawn_native15CommandIterator23NextCommandIdInNewBlockEPj(%"class.dawn_native::CommandIterator"* %33, i32* nonnull %15) #8
  br i1 %124, label %125, label %641

125:                                              ; preds = %123
  %126 = load i32, i32* %15, align 4
  br label %127

127:                                              ; preds = %125, %120
  %128 = phi i32 [ %126, %125 ], [ %118, %120 ]
  switch i32 %128, label %640 [
    i32 0, label %129
    i32 2, label %151
    i32 3, label %169
    i32 4, label %199
    i32 5, label %253
    i32 6, label %367
    i32 20, label %614
    i32 30, label %615
    i32 17, label %639
    i32 18, label %639
    i32 19, label %639
  ]

129:                                              ; preds = %127
  %130 = load i8*, i8** %34, align 8
  %131 = getelementptr inbounds i8, i8* %130, i64 1
  store i8* %131, i8** %34, align 8
  %132 = call dereferenceable(120) %"struct.dawn_native::CommandBufferResourceUsage"* @_ZNK11dawn_native17CommandBufferBase17GetResourceUsagesEv(%"class.dawn_native::CommandBufferBase"* %32) #8
  %133 = getelementptr inbounds %"struct.dawn_native::CommandBufferResourceUsage", %"struct.dawn_native::CommandBufferResourceUsage"* %132, i64 0, i32 1, i32 0, i32 0
  %134 = load %"struct.dawn_native::ComputePassResourceUsage"*, %"struct.dawn_native::ComputePassResourceUsage"** %133, align 8
  %135 = getelementptr inbounds %"struct.dawn_native::ComputePassResourceUsage", %"struct.dawn_native::ComputePassResourceUsage"* %134, i64 %113, i32 0, i32 0, i32 0
  %136 = load %"struct.dawn_native::SyncScopeResourceUsage"*, %"struct.dawn_native::SyncScopeResourceUsage"** %135, align 8
  %137 = getelementptr inbounds %"struct.dawn_native::ComputePassResourceUsage", %"struct.dawn_native::ComputePassResourceUsage"* %134, i64 %113, i32 0, i32 0, i32 1
  %138 = load %"struct.dawn_native::SyncScopeResourceUsage"*, %"struct.dawn_native::SyncScopeResourceUsage"** %137, align 8
  %139 = icmp eq %"struct.dawn_native::SyncScopeResourceUsage"* %136, %138
  br i1 %139, label %140, label %143

140:                                              ; preds = %143, %129
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #8
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %109, align 8
  call void @_ZN11dawn_native6opengl13CommandBuffer18ExecuteComputePassEv(%class.Result* nonnull sret %16, %"class.dawn_native::opengl::CommandBuffer"* %1)
  %141 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %109, align 8
  %142 = icmp eq %"class.dawn_native::ErrorData"* %141, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %109, align 8
  br i1 %142, label %149, label %147, !prof !2

143:                                              ; preds = %129, %143
  %144 = phi %"struct.dawn_native::SyncScopeResourceUsage"* [ %145, %143 ], [ %136, %129 ]
  call fastcc void @"_ZZN11dawn_native6opengl13CommandBuffer7ExecuteEvENK3$_0clERKNS_22SyncScopeResourceUsageE"(%"struct.dawn_native::SyncScopeResourceUsage"* dereferenceable(96) %144)
  %145 = getelementptr inbounds %"struct.dawn_native::SyncScopeResourceUsage", %"struct.dawn_native::SyncScopeResourceUsage"* %144, i64 1
  %146 = icmp eq %"struct.dawn_native::SyncScopeResourceUsage"* %145, %138
  br i1 %146, label %140, label %143

147:                                              ; preds = %140
  %148 = ptrtoint %"class.dawn_native::ErrorData"* %141 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %141, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__func__._ZN11dawn_native6opengl13CommandBuffer7ExecuteEv, i64 0, i64 0), i32 573) #8
  store i64 %148, i64* %107, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #8
  br label %644

149:                                              ; preds = %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #8
  %150 = add i64 %113, 1
  br label %166

151:                                              ; preds = %127
  %152 = load i64, i64* %35, align 8
  %153 = add i64 %152, 7
  %154 = and i64 %153, -8
  %155 = inttoptr i64 %154 to i8*
  %156 = getelementptr inbounds i8, i8* %155, i64 280
  store i8* %156, i8** %34, align 8
  %157 = inttoptr i64 %154 to %"struct.dawn_native::BeginRenderPassCmd"*
  %158 = call dereferenceable(120) %"struct.dawn_native::CommandBufferResourceUsage"* @_ZNK11dawn_native17CommandBufferBase17GetResourceUsagesEv(%"class.dawn_native::CommandBufferBase"* %32) #8
  %159 = getelementptr inbounds %"struct.dawn_native::CommandBufferResourceUsage", %"struct.dawn_native::CommandBufferResourceUsage"* %158, i64 0, i32 0, i32 0, i32 0
  %160 = load %"struct.dawn_native::RenderPassResourceUsage"*, %"struct.dawn_native::RenderPassResourceUsage"** %159, align 8
  %161 = getelementptr inbounds %"struct.dawn_native::RenderPassResourceUsage", %"struct.dawn_native::RenderPassResourceUsage"* %160, i64 %112, i32 0
  call fastcc void @"_ZZN11dawn_native6opengl13CommandBuffer7ExecuteEvENK3$_0clERKNS_22SyncScopeResourceUsageE"(%"struct.dawn_native::SyncScopeResourceUsage"* dereferenceable(96) %161)
  call void @_ZN11dawn_native30LazyClearRenderPassAttachmentsEPNS_18BeginRenderPassCmdE(%"struct.dawn_native::BeginRenderPassCmd"* %157) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #8
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %106, align 8
  call void @_ZN11dawn_native6opengl13CommandBuffer17ExecuteRenderPassEPNS_18BeginRenderPassCmdE(%class.Result* nonnull sret %17, %"class.dawn_native::opengl::CommandBuffer"* %1, %"struct.dawn_native::BeginRenderPassCmd"* %157)
  %162 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %106, align 8
  %163 = icmp eq %"class.dawn_native::ErrorData"* %162, null
  br i1 %163, label %164, label %642, !prof !2

164:                                              ; preds = %151
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #8
  %165 = add i64 %112, 1
  br label %166

166:                                              ; preds = %164, %242, %639, %614, %613, %363, %169, %149
  %167 = phi i64 [ %112, %639 ], [ %112, %614 ], [ %112, %613 ], [ %112, %363 ], [ %112, %242 ], [ %112, %169 ], [ %112, %149 ], [ %165, %164 ]
  %168 = phi i64 [ %113, %639 ], [ %113, %614 ], [ %113, %613 ], [ %113, %363 ], [ %113, %242 ], [ %113, %169 ], [ %150, %149 ], [ %113, %164 ]
  br label %111

169:                                              ; preds = %127
  %170 = load i64, i64* %35, align 8
  %171 = add i64 %170, 7
  %172 = and i64 %171, -8
  %173 = inttoptr i64 %172 to i8*
  %174 = getelementptr inbounds i8, i8* %173, i64 40
  store i8* %174, i8** %34, align 8
  %175 = inttoptr i64 %172 to %"struct.dawn_native::CopyBufferToBufferCmd"*
  %176 = inttoptr i64 %172 to %class.Ref.250*
  %177 = getelementptr inbounds %class.Ref.250, %class.Ref.250* %176, i64 0, i32 0, i32 0
  %178 = load %"class.dawn_native::opengl::Buffer"*, %"class.dawn_native::opengl::Buffer"** %177, align 8
  call void @_ZN11dawn_native6opengl6Buffer21EnsureDataInitializedEv(%"class.dawn_native::opengl::Buffer"* %178) #8
  %179 = getelementptr inbounds %"struct.dawn_native::CopyBufferToBufferCmd", %"struct.dawn_native::CopyBufferToBufferCmd"* %175, i64 0, i32 2
  %180 = bitcast %class.Ref.248* %179 to %"class.dawn_native::opengl::Buffer"**
  %181 = load %"class.dawn_native::opengl::Buffer"*, %"class.dawn_native::opengl::Buffer"** %180, align 8
  %182 = getelementptr inbounds %"struct.dawn_native::CopyBufferToBufferCmd", %"struct.dawn_native::CopyBufferToBufferCmd"* %175, i64 0, i32 3
  %183 = load i64, i64* %182, align 8
  %184 = getelementptr inbounds %"struct.dawn_native::CopyBufferToBufferCmd", %"struct.dawn_native::CopyBufferToBufferCmd"* %175, i64 0, i32 4
  %185 = load i64, i64* %184, align 8
  call void @_ZN11dawn_native6opengl6Buffer34EnsureDataInitializedAsDestinationEmm(%"class.dawn_native::opengl::Buffer"* %181, i64 %183, i64 %185) #8
  %186 = load void (i32, i32)*, void (i32, i32)** %94, align 8
  %187 = load %"class.dawn_native::opengl::Buffer"*, %"class.dawn_native::opengl::Buffer"** %177, align 8
  %188 = call i32 @_ZNK11dawn_native6opengl6Buffer9GetHandleEv(%"class.dawn_native::opengl::Buffer"* %187) #8
  call void %186(i32 35051, i32 %188) #8
  %189 = load void (i32, i32)*, void (i32, i32)** %94, align 8
  %190 = load %"class.dawn_native::opengl::Buffer"*, %"class.dawn_native::opengl::Buffer"** %180, align 8
  %191 = call i32 @_ZNK11dawn_native6opengl6Buffer9GetHandleEv(%"class.dawn_native::opengl::Buffer"* %190) #8
  call void %189(i32 35052, i32 %191) #8
  %192 = load void (i32, i32, i64, i64, i64)*, void (i32, i32, i64, i64, i64)** %104, align 8
  %193 = getelementptr inbounds %"struct.dawn_native::CopyBufferToBufferCmd", %"struct.dawn_native::CopyBufferToBufferCmd"* %175, i64 0, i32 1
  %194 = load i64, i64* %193, align 8
  %195 = load i64, i64* %182, align 8
  %196 = load i64, i64* %184, align 8
  call void %192(i32 35051, i32 35052, i64 %194, i64 %195, i64 %196) #8
  %197 = load void (i32, i32)*, void (i32, i32)** %94, align 8
  call void %197(i32 35051, i32 0) #8
  %198 = load void (i32, i32)*, void (i32, i32)** %94, align 8
  call void %198(i32 35052, i32 0) #8
  br label %166

199:                                              ; preds = %127
  %200 = load i64, i64* %35, align 8
  %201 = add i64 %200, 7
  %202 = and i64 %201, -8
  %203 = inttoptr i64 %202 to i8*
  %204 = getelementptr inbounds i8, i8* %203, i64 72
  store i8* %204, i8** %34, align 8
  %205 = inttoptr i64 %202 to %"struct.dawn_native::CopyBufferToTextureCmd"*
  %206 = getelementptr inbounds %"struct.dawn_native::CopyBufferToTextureCmd", %"struct.dawn_native::CopyBufferToTextureCmd"* %205, i64 0, i32 1
  %207 = inttoptr i64 %202 to %"class.dawn_native::opengl::Buffer"**
  %208 = load %"class.dawn_native::opengl::Buffer"*, %"class.dawn_native::opengl::Buffer"** %207, align 8
  %209 = getelementptr inbounds %"struct.dawn_native::CopyBufferToTextureCmd", %"struct.dawn_native::CopyBufferToTextureCmd"* %205, i64 0, i32 1, i32 3
  %210 = load i8, i8* %209, align 8
  %211 = icmp eq i8 %210, 4
  br i1 %211, label %212, label %226

212:                                              ; preds = %199
  %213 = call i8* @_Znwm(i64 64) #9
  %214 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %213, i8** %214, align 8
  %215 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %216 = bitcast i64* %215 to <2 x i64>*
  store <2 x i64> <i64 48, i64 -9223372036854775744>, <2 x i64>* %216, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %213, i8* align 1 getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i64 48, i1 false) #8
  %217 = getelementptr inbounds i8, i8* %213, i64 48
  store i8 0, i8* %217, align 1
  %218 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %18, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__func__._ZN11dawn_native6opengl13CommandBuffer7ExecuteEv, i64 0, i64 0), i32 615) #8
  %219 = ptrtoint %"class.dawn_native::ErrorData"* %218 to i64
  store i64 %219, i64* %107, align 8
  %220 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %221 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %220, i64 0, i32 1, i32 0
  %222 = load i8, i8* %221, align 1
  %223 = icmp slt i8 %222, 0
  br i1 %223, label %224, label %644

224:                                              ; preds = %212
  %225 = load i8*, i8** %214, align 8
  call void @_ZdlPv(i8* %225) #9
  br label %644

226:                                              ; preds = %199
  call void @_ZN11dawn_native6opengl6Buffer21EnsureDataInitializedEv(%"class.dawn_native::opengl::Buffer"* %208) #8
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %99) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %99, i8 -86, i64 20, i1 false)
  %227 = getelementptr inbounds %"struct.dawn_native::CopyBufferToTextureCmd", %"struct.dawn_native::CopyBufferToTextureCmd"* %205, i64 0, i32 2
  call void @_ZN11dawn_native29GetSubresourcesAffectedByCopyERKNS_11TextureCopyERKNS_8Extent3DE(%"struct.dawn_native::SubresourceRange"* nonnull sret %19, %"struct.dawn_native::TextureCopy"* dereferenceable(32) %206, %"struct.dawn_native::Extent3D"* dereferenceable(12) %227) #8
  %228 = getelementptr inbounds %"struct.dawn_native::TextureCopy", %"struct.dawn_native::TextureCopy"* %206, i64 0, i32 0, i32 0, i32 0
  %229 = load %"class.dawn_native::TextureBase"*, %"class.dawn_native::TextureBase"** %228, align 8
  %230 = bitcast %"struct.dawn_native::Extent3D"* %227 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = getelementptr inbounds %"struct.dawn_native::CopyBufferToTextureCmd", %"struct.dawn_native::CopyBufferToTextureCmd"* %205, i64 0, i32 2, i32 2
  %233 = load i32, i32* %232, align 8
  %234 = getelementptr inbounds %"struct.dawn_native::CopyBufferToTextureCmd", %"struct.dawn_native::CopyBufferToTextureCmd"* %205, i64 0, i32 1, i32 1
  %235 = load i32, i32* %234, align 8
  %236 = call zeroext i1 @_ZN11dawn_native29IsCompleteSubresourceCopiedToEPKNS_11TextureBaseENS_8Extent3DEj(%"class.dawn_native::TextureBase"* %229, i64 %231, i32 %233, i32 %235) #8
  br i1 %236, label %237, label %239

237:                                              ; preds = %226
  %238 = load %"class.dawn_native::TextureBase"*, %"class.dawn_native::TextureBase"** %228, align 8
  call void @_ZN11dawn_native11TextureBase34SetIsSubresourceContentInitializedEbRKNS_16SubresourceRangeE(%"class.dawn_native::TextureBase"* %238, i1 zeroext true, %"struct.dawn_native::SubresourceRange"* nonnull dereferenceable(20) %19) #8
  br label %242

239:                                              ; preds = %226
  %240 = bitcast %"struct.dawn_native::TextureCopy"* %206 to %"class.dawn_native::opengl::Texture"**
  %241 = load %"class.dawn_native::opengl::Texture"*, %"class.dawn_native::opengl::Texture"** %240, align 8
  call void @_ZN11dawn_native6opengl7Texture35EnsureSubresourceContentInitializedERKNS_16SubresourceRangeE(%"class.dawn_native::opengl::Texture"* %241, %"struct.dawn_native::SubresourceRange"* nonnull dereferenceable(20) %19) #8
  br label %242

242:                                              ; preds = %239, %237
  %243 = load void (i32, i32)*, void (i32, i32)** %94, align 8
  %244 = call i32 @_ZNK11dawn_native6opengl6Buffer9GetHandleEv(%"class.dawn_native::opengl::Buffer"* %208) #8
  call void %243(i32 35052, i32 %244) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #8
  store i32 -1, i32* %101, align 16
  store i32 -1, i32* %102, align 4
  store <2 x i64> zeroinitializer, <2 x i64>* %110, align 16
  %245 = getelementptr inbounds %"struct.dawn_native::CopyBufferToTextureCmd", %"struct.dawn_native::CopyBufferToTextureCmd"* %205, i64 0, i32 0, i32 2
  %246 = load i32, i32* %245, align 8
  store i32 %246, i32* %101, align 16
  %247 = getelementptr inbounds %"struct.dawn_native::CopyBufferToTextureCmd", %"struct.dawn_native::CopyBufferToTextureCmd"* %205, i64 0, i32 0, i32 3
  %248 = load i32, i32* %247, align 4
  store i32 %248, i32* %102, align 4
  %249 = getelementptr inbounds %"struct.dawn_native::CopyBufferToTextureCmd", %"struct.dawn_native::CopyBufferToTextureCmd"* %205, i64 0, i32 0, i32 1
  %250 = bitcast i64* %249 to i8**
  %251 = load i8*, i8** %250, align 8
  call void @_ZN11dawn_native6opengl13DoTexSubImageERKNS0_15OpenGLFunctionsERKNS_11TextureCopyEPKvRKNS_17TextureDataLayoutERKNS_8Extent3DE(%"struct.dawn_native::opengl::OpenGLFunctions"* dereferenceable(5664) %30, %"struct.dawn_native::TextureCopy"* dereferenceable(32) %206, i8* %251, %"struct.dawn_native::TextureDataLayout"* nonnull dereferenceable(24) %20, %"struct.dawn_native::Extent3D"* dereferenceable(12) %227)
  %252 = load void (i32, i32)*, void (i32, i32)** %94, align 8
  call void %252(i32 35052, i32 0) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %99) #8
  br label %166

253:                                              ; preds = %127
  %254 = load i64, i64* %35, align 8
  %255 = add i64 %254, 7
  %256 = and i64 %255, -8
  %257 = inttoptr i64 %256 to i8*
  %258 = getelementptr inbounds i8, i8* %257, i64 72
  store i8* %258, i8** %34, align 8
  %259 = inttoptr i64 %256 to %"struct.dawn_native::CopyTextureToBufferCmd"*
  %260 = getelementptr inbounds %"struct.dawn_native::CopyTextureToBufferCmd", %"struct.dawn_native::CopyTextureToBufferCmd"* %259, i64 0, i32 0
  %261 = getelementptr inbounds %"struct.dawn_native::CopyTextureToBufferCmd", %"struct.dawn_native::CopyTextureToBufferCmd"* %259, i64 0, i32 2
  %262 = inttoptr i64 %256 to %"class.dawn_native::opengl::Texture"**
  %263 = load %"class.dawn_native::opengl::Texture"*, %"class.dawn_native::opengl::Texture"** %262, align 8
  %264 = getelementptr inbounds %"struct.dawn_native::CopyTextureToBufferCmd", %"struct.dawn_native::CopyTextureToBufferCmd"* %259, i64 0, i32 1, i32 0, i32 0, i32 0
  %265 = bitcast %"class.dawn_native::BufferBase"** %264 to %"class.dawn_native::opengl::Buffer"**
  %266 = load %"class.dawn_native::opengl::Buffer"*, %"class.dawn_native::opengl::Buffer"** %265, align 8
  %267 = getelementptr inbounds %"class.dawn_native::opengl::Texture", %"class.dawn_native::opengl::Texture"* %263, i64 0, i32 0
  %268 = call dereferenceable(84) %"struct.dawn_native::Format"* @_ZNK11dawn_native11TextureBase9GetFormatEv(%"class.dawn_native::TextureBase"* %267) #8
  %269 = call dereferenceable(20) %"struct.dawn_native::opengl::GLFormat"* @_ZNK11dawn_native6opengl7Texture11GetGLFormatEv(%"class.dawn_native::opengl::Texture"* %263) #8
  %270 = call i32 @_ZNK11dawn_native6opengl7Texture11GetGLTargetEv(%"class.dawn_native::opengl::Texture"* %263) #8
  %271 = getelementptr inbounds %"struct.dawn_native::Format", %"struct.dawn_native::Format"* %268, i64 0, i32 2
  %272 = load i8, i8* %271, align 1, !range !3
  %273 = icmp eq i8 %272, 0
  call void @llvm.assume(i1 %273)
  %274 = getelementptr inbounds %"struct.dawn_native::Format", %"struct.dawn_native::Format"* %268, i64 0, i32 0
  %275 = load i32, i32* %274, align 4
  switch i32 %275, label %280 [
    i32 20, label %276
    i32 9, label %276
    i32 2, label %276
  ]

276:                                              ; preds = %253, %253, %253
  %277 = call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %27) #8
  %278 = call zeroext i1 @_ZNK11dawn_native10DeviceBase15IsToggleEnabledENS_6ToggleE(%"class.dawn_native::DeviceBase"* %277, i32 16) #8
  %279 = xor i1 %278, true
  call void @llvm.assume(i1 %279)
  br label %280

280:                                              ; preds = %253, %276
  call void @_ZN11dawn_native6opengl6Buffer34EnsureDataInitializedAsDestinationEPKNS_22CopyTextureToBufferCmdE(%"class.dawn_native::opengl::Buffer"* %266, %"struct.dawn_native::CopyTextureToBufferCmd"* %259) #8
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %89) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %89, i8 -86, i64 20, i1 false)
  call void @_ZN11dawn_native29GetSubresourcesAffectedByCopyERKNS_11TextureCopyERKNS_8Extent3DE(%"struct.dawn_native::SubresourceRange"* nonnull sret %21, %"struct.dawn_native::TextureCopy"* dereferenceable(32) %260, %"struct.dawn_native::Extent3D"* dereferenceable(12) %261) #8
  call void @_ZN11dawn_native6opengl7Texture35EnsureSubresourceContentInitializedERKNS_16SubresourceRangeE(%"class.dawn_native::opengl::Texture"* %263, %"struct.dawn_native::SubresourceRange"* nonnull dereferenceable(20) %21) #8
  %281 = load void (i32, i32)*, void (i32, i32)** %91, align 8
  %282 = call i32 @_ZNK11dawn_native6opengl7Texture9GetHandleEv(%"class.dawn_native::opengl::Texture"* %263) #8
  call void %281(i32 %270, i32 %282) #8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %92) #8
  store i32 0, i32* %22, align 4
  %283 = load void (i32, i32*)*, void (i32, i32*)** %41, align 8
  call void %283(i32 1, i32* nonnull %22) #8
  %284 = load void (i32, i32)*, void (i32, i32)** %43, align 8
  %285 = load i32, i32* %22, align 4
  call void %284(i32 36008, i32 %285) #8
  %286 = getelementptr inbounds %"struct.dawn_native::CopyTextureToBufferCmd", %"struct.dawn_native::CopyTextureToBufferCmd"* %259, i64 0, i32 0, i32 3
  %287 = load i8, i8* %286, align 8
  %288 = call dereferenceable(24) %"struct.dawn_native::AspectInfo"* @_ZNK11dawn_native6Format13GetAspectInfoENS_6AspectE(%"struct.dawn_native::Format"* %268, i8 zeroext %287) #8
  %289 = load void (i32, i32)*, void (i32, i32)** %94, align 8
  %290 = call i32 @_ZNK11dawn_native6opengl6Buffer9GetHandleEv(%"class.dawn_native::opengl::Buffer"* %266) #8
  call void %289(i32 35051, i32 %290) #8
  %291 = load void (i32, i32)*, void (i32, i32)** %96, align 8
  %292 = getelementptr inbounds %"struct.dawn_native::CopyTextureToBufferCmd", %"struct.dawn_native::CopyTextureToBufferCmd"* %259, i64 0, i32 1, i32 2
  %293 = load i32, i32* %292, align 8
  %294 = getelementptr inbounds %"struct.dawn_native::AspectInfo", %"struct.dawn_native::AspectInfo"* %288, i64 0, i32 0, i32 0
  %295 = load i32, i32* %294, align 4
  %296 = udiv i32 %293, %295
  call void %291(i32 3330, i32 %296) #8
  %297 = load i8, i8* %286, align 8
  switch i8 %297, label %305 [
    i8 1, label %298
    i8 2, label %303
    i8 4, label %304
  ]

298:                                              ; preds = %280
  %299 = getelementptr inbounds %"struct.dawn_native::opengl::GLFormat", %"struct.dawn_native::opengl::GLFormat"* %269, i64 0, i32 1
  %300 = load i32, i32* %299, align 4
  %301 = getelementptr inbounds %"struct.dawn_native::opengl::GLFormat", %"struct.dawn_native::opengl::GLFormat"* %269, i64 0, i32 2
  %302 = load i32, i32* %301, align 4
  br label %305

303:                                              ; preds = %280
  br label %305

304:                                              ; preds = %280
  br label %305

305:                                              ; preds = %280, %304, %303, %298
  %306 = phi i32 [ -1431655766, %280 ], [ 36128, %304 ], [ 36096, %303 ], [ 36064, %298 ]
  %307 = phi i32 [ -1431655766, %280 ], [ 6401, %304 ], [ 6402, %303 ], [ %300, %298 ]
  %308 = phi i32 [ -1431655766, %280 ], [ 5121, %304 ], [ 5126, %303 ], [ %302, %298 ]
  %309 = getelementptr inbounds %"struct.dawn_native::CopyTextureToBufferCmd", %"struct.dawn_native::CopyTextureToBufferCmd"* %259, i64 0, i32 1, i32 1
  %310 = bitcast i64* %309 to i8**
  %311 = load i8*, i8** %310, align 8
  %312 = call i32 @_ZNK11dawn_native11TextureBase12GetDimensionEv(%"class.dawn_native::TextureBase"* %267) #8
  switch i32 %312, label %363 [
    i32 1, label %313
    i32 2, label %330
  ]

313:                                              ; preds = %305
  %314 = call i32 @_ZNK11dawn_native11TextureBase14GetArrayLayersEv(%"class.dawn_native::TextureBase"* %267) #8
  %315 = icmp eq i32 %314, 1
  br i1 %315, label %316, label %330

316:                                              ; preds = %313
  %317 = load void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** %69, align 8
  %318 = call i32 @_ZNK11dawn_native6opengl7Texture9GetHandleEv(%"class.dawn_native::opengl::Texture"* %263) #8
  %319 = getelementptr inbounds %"struct.dawn_native::CopyTextureToBufferCmd", %"struct.dawn_native::CopyTextureToBufferCmd"* %259, i64 0, i32 0, i32 1
  %320 = load i32, i32* %319, align 8
  call void %317(i32 36008, i32 %306, i32 %270, i32 %318, i32 %320) #8
  %321 = load void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)** %98, align 8
  %322 = getelementptr inbounds %"struct.dawn_native::CopyTextureToBufferCmd", %"struct.dawn_native::CopyTextureToBufferCmd"* %259, i64 0, i32 0, i32 2, i32 0
  %323 = load i32, i32* %322, align 4
  %324 = getelementptr inbounds %"struct.dawn_native::CopyTextureToBufferCmd", %"struct.dawn_native::CopyTextureToBufferCmd"* %259, i64 0, i32 0, i32 2, i32 1
  %325 = load i32, i32* %324, align 4
  %326 = getelementptr inbounds %"struct.dawn_native::Extent3D", %"struct.dawn_native::Extent3D"* %261, i64 0, i32 0
  %327 = load i32, i32* %326, align 8
  %328 = getelementptr inbounds %"struct.dawn_native::CopyTextureToBufferCmd", %"struct.dawn_native::CopyTextureToBufferCmd"* %259, i64 0, i32 2, i32 1
  %329 = load i32, i32* %328, align 4
  call void %321(i32 %323, i32 %325, i32 %327, i32 %329, i32 %307, i32 %308, i8* %311) #8
  br label %363

330:                                              ; preds = %313, %305
  %331 = load i32, i32* %292, align 8
  %332 = getelementptr inbounds %"struct.dawn_native::CopyTextureToBufferCmd", %"struct.dawn_native::CopyTextureToBufferCmd"* %259, i64 0, i32 1, i32 3
  %333 = load i32, i32* %332, align 4
  %334 = mul i32 %333, %331
  %335 = zext i32 %334 to i64
  %336 = getelementptr inbounds %"struct.dawn_native::CopyTextureToBufferCmd", %"struct.dawn_native::CopyTextureToBufferCmd"* %259, i64 0, i32 2, i32 2
  %337 = load i32, i32* %336, align 8
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %363, label %339

339:                                              ; preds = %330
  %340 = getelementptr inbounds %"struct.dawn_native::CopyTextureToBufferCmd", %"struct.dawn_native::CopyTextureToBufferCmd"* %259, i64 0, i32 0, i32 1
  %341 = getelementptr inbounds %"struct.dawn_native::CopyTextureToBufferCmd", %"struct.dawn_native::CopyTextureToBufferCmd"* %259, i64 0, i32 0, i32 2, i32 2
  %342 = getelementptr inbounds %"struct.dawn_native::CopyTextureToBufferCmd", %"struct.dawn_native::CopyTextureToBufferCmd"* %259, i64 0, i32 0, i32 2, i32 0
  %343 = getelementptr inbounds %"struct.dawn_native::CopyTextureToBufferCmd", %"struct.dawn_native::CopyTextureToBufferCmd"* %259, i64 0, i32 0, i32 2, i32 1
  %344 = getelementptr inbounds %"struct.dawn_native::Extent3D", %"struct.dawn_native::Extent3D"* %261, i64 0, i32 0
  %345 = getelementptr inbounds %"struct.dawn_native::CopyTextureToBufferCmd", %"struct.dawn_native::CopyTextureToBufferCmd"* %259, i64 0, i32 2, i32 1
  br label %346

346:                                              ; preds = %339, %346
  %347 = phi i32 [ 0, %339 ], [ %360, %346 ]
  %348 = phi i8* [ %311, %339 ], [ %359, %346 ]
  %349 = load void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** %67, align 8
  %350 = call i32 @_ZNK11dawn_native6opengl7Texture9GetHandleEv(%"class.dawn_native::opengl::Texture"* %263) #8
  %351 = load i32, i32* %340, align 8
  %352 = load i32, i32* %341, align 4
  %353 = add i32 %352, %347
  call void %349(i32 36008, i32 %306, i32 %350, i32 %351, i32 %353) #8
  %354 = load void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)** %98, align 8
  %355 = load i32, i32* %342, align 4
  %356 = load i32, i32* %343, align 4
  %357 = load i32, i32* %344, align 8
  %358 = load i32, i32* %345, align 4
  call void %354(i32 %355, i32 %356, i32 %357, i32 %358, i32 %307, i32 %308, i8* %348) #8
  %359 = getelementptr inbounds i8, i8* %348, i64 %335
  %360 = add nuw i32 %347, 1
  %361 = load i32, i32* %336, align 8
  %362 = icmp ult i32 %360, %361
  br i1 %362, label %346, label %363

363:                                              ; preds = %346, %330, %305, %316
  %364 = load void (i32, i32)*, void (i32, i32)** %96, align 8
  call void %364(i32 3330, i32 0) #8
  %365 = load void (i32, i32)*, void (i32, i32)** %94, align 8
  call void %365(i32 35051, i32 0) #8
  %366 = load void (i32, i32*)*, void (i32, i32*)** %86, align 8
  call void %366(i32 1, i32* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %92) #8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %89) #8
  br label %166

367:                                              ; preds = %127
  %368 = load i64, i64* %35, align 8
  %369 = add i64 %368, 7
  %370 = and i64 %369, -8
  %371 = inttoptr i64 %370 to i8*
  %372 = getelementptr inbounds i8, i8* %371, i64 80
  store i8* %372, i8** %34, align 8
  %373 = inttoptr i64 %370 to %"struct.dawn_native::CopyTextureToTextureCmd"*
  %374 = getelementptr inbounds %"struct.dawn_native::CopyTextureToTextureCmd", %"struct.dawn_native::CopyTextureToTextureCmd"* %373, i64 0, i32 0
  %375 = getelementptr inbounds %"struct.dawn_native::CopyTextureToTextureCmd", %"struct.dawn_native::CopyTextureToTextureCmd"* %373, i64 0, i32 1
  %376 = getelementptr inbounds %"struct.dawn_native::CopyTextureToTextureCmd", %"struct.dawn_native::CopyTextureToTextureCmd"* %373, i64 0, i32 2
  %377 = bitcast %"struct.dawn_native::Extent3D"* %376 to i64*
  %378 = load i64, i64* %377, align 8
  %379 = trunc i64 %378 to i32
  %380 = lshr i64 %378, 32
  %381 = trunc i64 %380 to i32
  %382 = getelementptr inbounds %"struct.dawn_native::CopyTextureToTextureCmd", %"struct.dawn_native::CopyTextureToTextureCmd"* %373, i64 0, i32 2, i32 2
  %383 = load i32, i32* %382, align 8
  %384 = getelementptr inbounds %"struct.dawn_native::TextureCopy", %"struct.dawn_native::TextureCopy"* %375, i64 0, i32 0, i32 0, i32 0
  %385 = load %"class.dawn_native::TextureBase"*, %"class.dawn_native::TextureBase"** %384, align 8
  %386 = getelementptr inbounds %"struct.dawn_native::CopyTextureToTextureCmd", %"struct.dawn_native::CopyTextureToTextureCmd"* %373, i64 0, i32 1, i32 1
  %387 = load i32, i32* %386, align 8
  %388 = call { i64, i32 } @_ZNK11dawn_native11TextureBase22GetMipLevelVirtualSizeEj(%"class.dawn_native::TextureBase"* %385, i32 %387) #8
  %389 = extractvalue { i64, i32 } %388, 0
  %390 = trunc i64 %389 to i32
  %391 = lshr i64 %389, 32
  %392 = trunc i64 %391 to i32
  %393 = getelementptr inbounds %"struct.dawn_native::CopyTextureToTextureCmd", %"struct.dawn_native::CopyTextureToTextureCmd"* %373, i64 0, i32 1, i32 2, i32 0
  %394 = load i32, i32* %393, align 4
  %395 = getelementptr inbounds %"struct.dawn_native::Extent3D", %"struct.dawn_native::Extent3D"* %376, i64 0, i32 0
  %396 = load i32, i32* %395, align 8
  %397 = add i32 %396, %394
  %398 = icmp ugt i32 %397, %390
  %399 = sub i32 %390, %394
  %400 = select i1 %398, i32 %399, i32 %379
  %401 = getelementptr inbounds %"struct.dawn_native::CopyTextureToTextureCmd", %"struct.dawn_native::CopyTextureToTextureCmd"* %373, i64 0, i32 1, i32 2, i32 1
  %402 = load i32, i32* %401, align 4
  %403 = getelementptr inbounds %"struct.dawn_native::CopyTextureToTextureCmd", %"struct.dawn_native::CopyTextureToTextureCmd"* %373, i64 0, i32 2, i32 1
  %404 = load i32, i32* %403, align 4
  %405 = add i32 %404, %402
  %406 = icmp ugt i32 %405, %392
  %407 = sub i32 %392, %402
  %408 = select i1 %406, i32 %407, i32 %381
  %409 = zext i32 %408 to i64
  %410 = shl nuw i64 %409, 32
  %411 = inttoptr i64 %370 to %"class.dawn_native::opengl::Texture"**
  %412 = load %"class.dawn_native::opengl::Texture"*, %"class.dawn_native::opengl::Texture"** %411, align 8
  %413 = bitcast %"struct.dawn_native::TextureCopy"* %375 to %"class.dawn_native::opengl::Texture"**
  %414 = load %"class.dawn_native::opengl::Texture"*, %"class.dawn_native::opengl::Texture"** %413, align 8
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %36) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %36, i8 -86, i64 20, i1 false)
  call void @_ZN11dawn_native29GetSubresourcesAffectedByCopyERKNS_11TextureCopyERKNS_8Extent3DE(%"struct.dawn_native::SubresourceRange"* nonnull sret %23, %"struct.dawn_native::TextureCopy"* dereferenceable(32) %374, %"struct.dawn_native::Extent3D"* dereferenceable(12) %376) #8
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %37) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %37, i8 -86, i64 20, i1 false)
  call void @_ZN11dawn_native29GetSubresourcesAffectedByCopyERKNS_11TextureCopyERKNS_8Extent3DE(%"struct.dawn_native::SubresourceRange"* nonnull sret %24, %"struct.dawn_native::TextureCopy"* dereferenceable(32) %375, %"struct.dawn_native::Extent3D"* dereferenceable(12) %376) #8
  call void @_ZN11dawn_native6opengl7Texture35EnsureSubresourceContentInitializedERKNS_16SubresourceRangeE(%"class.dawn_native::opengl::Texture"* %412, %"struct.dawn_native::SubresourceRange"* nonnull dereferenceable(20) %23) #8
  %415 = getelementptr inbounds %"class.dawn_native::opengl::Texture", %"class.dawn_native::opengl::Texture"* %414, i64 0, i32 0
  %416 = zext i32 %400 to i64
  %417 = or i64 %410, %416
  %418 = load i32, i32* %386, align 8
  %419 = call zeroext i1 @_ZN11dawn_native29IsCompleteSubresourceCopiedToEPKNS_11TextureBaseENS_8Extent3DEj(%"class.dawn_native::TextureBase"* %415, i64 %417, i32 %383, i32 %418) #8
  br i1 %419, label %420, label %421

420:                                              ; preds = %367
  call void @_ZN11dawn_native11TextureBase34SetIsSubresourceContentInitializedEbRKNS_16SubresourceRangeE(%"class.dawn_native::TextureBase"* %415, i1 zeroext true, %"struct.dawn_native::SubresourceRange"* nonnull dereferenceable(20) %24) #8
  br label %422

421:                                              ; preds = %367
  call void @_ZN11dawn_native6opengl7Texture35EnsureSubresourceContentInitializedERKNS_16SubresourceRangeE(%"class.dawn_native::opengl::Texture"* %414, %"struct.dawn_native::SubresourceRange"* nonnull dereferenceable(20) %24) #8
  br label %422

422:                                              ; preds = %421, %420
  %423 = call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions11IsAtLeastGLEjj(%"struct.dawn_native::opengl::OpenGLFunctions"* %30, i32 4, i32 3) #8
  br i1 %423, label %426, label %424

424:                                              ; preds = %422
  %425 = call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions13IsAtLeastGLESEjj(%"struct.dawn_native::opengl::OpenGLFunctions"* %30, i32 3, i32 2) #8
  br i1 %425, label %426, label %446

426:                                              ; preds = %424, %422
  %427 = load void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)** %88, align 8
  %428 = call i32 @_ZNK11dawn_native6opengl7Texture9GetHandleEv(%"class.dawn_native::opengl::Texture"* %412) #8
  %429 = call i32 @_ZNK11dawn_native6opengl7Texture11GetGLTargetEv(%"class.dawn_native::opengl::Texture"* %412) #8
  %430 = getelementptr inbounds %"struct.dawn_native::CopyTextureToTextureCmd", %"struct.dawn_native::CopyTextureToTextureCmd"* %373, i64 0, i32 0, i32 1
  %431 = load i32, i32* %430, align 8
  %432 = getelementptr inbounds %"struct.dawn_native::CopyTextureToTextureCmd", %"struct.dawn_native::CopyTextureToTextureCmd"* %373, i64 0, i32 0, i32 2, i32 0
  %433 = load i32, i32* %432, align 4
  %434 = getelementptr inbounds %"struct.dawn_native::CopyTextureToTextureCmd", %"struct.dawn_native::CopyTextureToTextureCmd"* %373, i64 0, i32 0, i32 2, i32 1
  %435 = load i32, i32* %434, align 4
  %436 = getelementptr inbounds %"struct.dawn_native::CopyTextureToTextureCmd", %"struct.dawn_native::CopyTextureToTextureCmd"* %373, i64 0, i32 0, i32 2, i32 2
  %437 = load i32, i32* %436, align 4
  %438 = call i32 @_ZNK11dawn_native6opengl7Texture9GetHandleEv(%"class.dawn_native::opengl::Texture"* %414) #8
  %439 = call i32 @_ZNK11dawn_native6opengl7Texture11GetGLTargetEv(%"class.dawn_native::opengl::Texture"* %414) #8
  %440 = load i32, i32* %386, align 8
  %441 = load i32, i32* %393, align 4
  %442 = load i32, i32* %401, align 4
  %443 = getelementptr inbounds %"struct.dawn_native::CopyTextureToTextureCmd", %"struct.dawn_native::CopyTextureToTextureCmd"* %373, i64 0, i32 1, i32 2, i32 2
  %444 = load i32, i32* %443, align 4
  %445 = load i32, i32* %382, align 8
  call void %427(i32 %428, i32 %429, i32 %431, i32 %433, i32 %435, i32 %437, i32 %438, i32 %439, i32 %440, i32 %441, i32 %442, i32 %444, i32 %400, i32 %408, i32 %445) #8
  br label %613

446:                                              ; preds = %424
  %447 = load %"class.dawn_native::opengl::Texture"*, %"class.dawn_native::opengl::Texture"** %411, align 8
  %448 = load %"class.dawn_native::opengl::Texture"*, %"class.dawn_native::opengl::Texture"** %413, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #8
  store i32 0, i32* %12, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #8
  store i32 0, i32* %13, align 4
  %449 = load void (i32, i32*)*, void (i32, i32*)** %41, align 8
  call void %449(i32 1, i32* nonnull %12) #8
  %450 = load void (i32, i32*)*, void (i32, i32*)** %41, align 8
  call void %450(i32 1, i32* nonnull %13) #8
  %451 = load void (i32, i32)*, void (i32, i32)** %43, align 8
  %452 = load i32, i32* %12, align 4
  call void %451(i32 36008, i32 %452) #8
  %453 = load void (i32, i32)*, void (i32, i32)** %43, align 8
  %454 = load i32, i32* %13, align 4
  call void %453(i32 36009, i32 %454) #8
  %455 = load void (i32)*, void (i32)** %45, align 8
  call void %455(i32 3089) #8
  %456 = getelementptr inbounds %"struct.dawn_native::CopyTextureToTextureCmd", %"struct.dawn_native::CopyTextureToTextureCmd"* %373, i64 0, i32 0, i32 3
  %457 = load i8, i8* %456, align 8
  %458 = and i8 %457, 1
  %459 = zext i8 %458 to i32
  %460 = shl nuw nsw i32 %459, 14
  %461 = and i8 %457, 2
  %462 = zext i8 %461 to i32
  %463 = shl nuw nsw i32 %462, 7
  %464 = or i32 %463, %460
  %465 = and i8 %457, 4
  %466 = zext i8 %465 to i32
  %467 = shl nuw nsw i32 %466, 8
  %468 = or i32 %464, %467
  %469 = icmp eq i32 %383, 0
  br i1 %469, label %609, label %470

470:                                              ; preds = %446
  %471 = getelementptr inbounds %"class.dawn_native::opengl::Texture", %"class.dawn_native::opengl::Texture"* %447, i64 0, i32 0
  %472 = getelementptr inbounds %"struct.dawn_native::CopyTextureToTextureCmd", %"struct.dawn_native::CopyTextureToTextureCmd"* %373, i64 0, i32 0, i32 1
  %473 = getelementptr inbounds %"struct.dawn_native::CopyTextureToTextureCmd", %"struct.dawn_native::CopyTextureToTextureCmd"* %373, i64 0, i32 0, i32 2, i32 2
  %474 = getelementptr inbounds %"class.dawn_native::opengl::Texture", %"class.dawn_native::opengl::Texture"* %448, i64 0, i32 0
  %475 = getelementptr inbounds %"struct.dawn_native::CopyTextureToTextureCmd", %"struct.dawn_native::CopyTextureToTextureCmd"* %373, i64 0, i32 1, i32 2, i32 2
  %476 = getelementptr inbounds %"struct.dawn_native::CopyTextureToTextureCmd", %"struct.dawn_native::CopyTextureToTextureCmd"* %373, i64 0, i32 0, i32 2, i32 0
  %477 = getelementptr inbounds %"struct.dawn_native::CopyTextureToTextureCmd", %"struct.dawn_native::CopyTextureToTextureCmd"* %373, i64 0, i32 0, i32 2, i32 1
  %478 = add i32 %383, -1
  br label %479

479:                                              ; preds = %526, %470
  %480 = phi i8 [ %457, %470 ], [ %528, %526 ]
  %481 = phi i32 [ 0, %470 ], [ %527, %526 ]
  %482 = and i8 %480, 63
  %483 = zext i8 %482 to i64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 24, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #8, !noalias !4
  store i64 %483, i64* %51, align 8, !alias.scope !7, !noalias !4
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #8, !alias.scope !7, !noalias !4
  %484 = icmp eq i8 %482, 0
  br i1 %484, label %505, label %485

485:                                              ; preds = %479, %497
  %486 = phi i64 [ %499, %497 ], [ %483, %479 ]
  %487 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm6EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8, !noalias !4
  %488 = and i64 %487, %486
  %489 = and i64 %488, 4294967295
  %490 = icmp eq i64 %489, 0
  br i1 %490, label %497, label %491

491:                                              ; preds = %485
  %492 = trunc i64 %488 to i32
  %493 = call i32 @_Z11ScanForwardj(i32 %492) #8, !noalias !4
  %494 = zext i32 %493 to i64
  %495 = load i64, i64* %54, align 8, !noalias !4
  %496 = add i64 %495, %494
  br label %503

497:                                              ; preds = %485
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #8, !noalias !4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #8, !noalias !4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #8, !noalias !4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #8, !noalias !4
  store i64 %55, i64* %60, align 8, !noalias !10
  store i32 6, i32* %61, align 8, !noalias !10
  store i64 %55, i64* %62, align 8, !noalias !10
  store i32 6, i32* %63, align 8, !noalias !10
  store i64 %55, i64* %64, align 8, !noalias !10
  store i32 0, i32* %65, align 8, !noalias !10
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm6EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %6, %"class.std::__1::__bit_iterator"* nonnull %3, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5) #8, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #8, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #8, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #8, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #8, !noalias !4
  %498 = load i64, i64* %51, align 8, !noalias !4
  %499 = and i64 %498, -64
  store i64 %499, i64* %51, align 8, !noalias !4
  %500 = load i64, i64* %54, align 8, !noalias !4
  %501 = add i64 %500, 32
  store i64 %501, i64* %54, align 8, !noalias !4
  %502 = icmp ult i64 %501, 6
  br i1 %502, label %485, label %503

503:                                              ; preds = %497, %491
  %504 = phi i64 [ %496, %491 ], [ 0, %497 ]
  store i64 %504, i64* %52, align 8, !alias.scope !7, !noalias !4
  br label %506

505:                                              ; preds = %479
  store i64 32, i64* %54, align 8, !alias.scope !7, !noalias !4
  br label %506

506:                                              ; preds = %505, %503
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* nonnull align 8 %50, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #8, !noalias !4
  %507 = load i64, i64* %49, align 8
  br label %508

508:                                              ; preds = %606, %506
  %509 = phi i64 [ %607, %606 ], [ %507, %506 ]
  %510 = icmp eq i64 %509, 32
  br i1 %510, label %511, label %529

511:                                              ; preds = %508
  %512 = load i64, i64* %47, align 8
  %513 = and i64 %512, 63
  %514 = icmp eq i64 %513, 0
  br i1 %514, label %515, label %529

515:                                              ; preds = %511
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #8
  %516 = load void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)** %82, align 8
  %517 = load i32, i32* %476, align 4
  %518 = load i32, i32* %477, align 4
  %519 = add i32 %517, %400
  %520 = add i32 %518, %408
  %521 = load i32, i32* %393, align 4
  %522 = load i32, i32* %401, align 4
  %523 = add i32 %521, %400
  %524 = add i32 %522, %408
  call void %516(i32 %517, i32 %518, i32 %519, i32 %520, i32 %521, i32 %522, i32 %523, i32 %524, i32 %468, i32 9728) #8
  %525 = icmp eq i32 %481, %478
  br i1 %525, label %609, label %526

526:                                              ; preds = %515
  %527 = add nuw i32 %481, 1
  %528 = load i8, i8* %456, align 8, !noalias !13
  br label %479

529:                                              ; preds = %511, %508
  %530 = load i64, i64* %48, align 8
  %531 = trunc i64 %530 to i32
  %532 = and i32 %531, 255
  %533 = shl i32 1, %532
  %534 = trunc i32 %533 to i8
  %535 = add i8 %534, -1
  %536 = icmp ult i8 %535, 4
  br i1 %536, label %537, label %541

537:                                              ; preds = %529
  %538 = sext i8 %535 to i64
  %539 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN11dawn_native6opengl13CommandBuffer7ExecuteEv, i64 0, i64 %538
  %540 = load i32, i32* %539, align 4
  br label %541

541:                                              ; preds = %537, %529
  %542 = phi i32 [ -1431655766, %529 ], [ %540, %537 ]
  %543 = call i32 @_ZNK11dawn_native11TextureBase14GetArrayLayersEv(%"class.dawn_native::TextureBase"* %471) #8
  %544 = icmp eq i32 %543, 1
  br i1 %544, label %545, label %553

545:                                              ; preds = %541
  %546 = call i32 @_ZNK11dawn_native11TextureBase12GetDimensionEv(%"class.dawn_native::TextureBase"* %471) #8
  %547 = icmp eq i32 %546, 1
  br i1 %547, label %548, label %553

548:                                              ; preds = %545
  %549 = load void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** %69, align 8
  %550 = call i32 @_ZNK11dawn_native6opengl7Texture11GetGLTargetEv(%"class.dawn_native::opengl::Texture"* %447) #8
  %551 = call i32 @_ZNK11dawn_native6opengl7Texture9GetHandleEv(%"class.dawn_native::opengl::Texture"* %447) #8
  %552 = load i32, i32* %472, align 8
  call void %549(i32 36008, i32 %542, i32 %550, i32 %551, i32 %552) #8
  br label %559

553:                                              ; preds = %545, %541
  %554 = load void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** %67, align 8
  %555 = call i32 @_ZNK11dawn_native6opengl7Texture9GetHandleEv(%"class.dawn_native::opengl::Texture"* %447) #8
  %556 = load i32, i32* %472, align 8
  %557 = load i32, i32* %473, align 4
  %558 = add i32 %557, %481
  call void %554(i32 36008, i32 %542, i32 %555, i32 %556, i32 %558) #8
  br label %559

559:                                              ; preds = %553, %548
  %560 = call i32 @_ZNK11dawn_native11TextureBase14GetArrayLayersEv(%"class.dawn_native::TextureBase"* %474) #8
  %561 = icmp eq i32 %560, 1
  br i1 %561, label %562, label %570

562:                                              ; preds = %559
  %563 = call i32 @_ZNK11dawn_native11TextureBase12GetDimensionEv(%"class.dawn_native::TextureBase"* %474) #8
  %564 = icmp eq i32 %563, 1
  br i1 %564, label %565, label %570

565:                                              ; preds = %562
  %566 = load void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** %69, align 8
  %567 = call i32 @_ZNK11dawn_native6opengl7Texture11GetGLTargetEv(%"class.dawn_native::opengl::Texture"* %448) #8
  %568 = call i32 @_ZNK11dawn_native6opengl7Texture9GetHandleEv(%"class.dawn_native::opengl::Texture"* %448) #8
  %569 = load i32, i32* %386, align 8
  call void %566(i32 36009, i32 %542, i32 %567, i32 %568, i32 %569) #8
  br label %576

570:                                              ; preds = %562, %559
  %571 = load void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** %67, align 8
  %572 = call i32 @_ZNK11dawn_native6opengl7Texture9GetHandleEv(%"class.dawn_native::opengl::Texture"* %448) #8
  %573 = load i32, i32* %386, align 8
  %574 = load i32, i32* %475, align 4
  %575 = add i32 %574, %481
  call void %571(i32 36009, i32 %542, i32 %572, i32 %573, i32 %575) #8
  br label %576

576:                                              ; preds = %570, %565
  %577 = load i64, i64* %48, align 8
  %578 = load i64, i64* %49, align 8
  %579 = sub i64 %577, %578
  %580 = icmp ugt i64 %579, 5
  br i1 %580, label %581, label %582

581:                                              ; preds = %576
  call void @abort() #10
  unreachable

582:                                              ; preds = %576
  %583 = shl i64 1, %579
  %584 = xor i64 %583, -1
  %585 = load i64, i64* %47, align 8
  %586 = and i64 %585, %584
  store i64 %586, i64* %47, align 8
  %587 = icmp ult i64 %578, 6
  br i1 %587, label %588, label %606

588:                                              ; preds = %582, %600
  %589 = phi i64 [ %602, %600 ], [ %586, %582 ]
  %590 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm6EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %591 = and i64 %590, %589
  %592 = and i64 %591, 4294967295
  %593 = icmp eq i64 %592, 0
  br i1 %593, label %600, label %594

594:                                              ; preds = %588
  %595 = trunc i64 %591 to i32
  %596 = call i32 @_Z11ScanForwardj(i32 %595) #8
  %597 = zext i32 %596 to i64
  %598 = load i64, i64* %49, align 8
  %599 = add i64 %598, %597
  br label %606

600:                                              ; preds = %588
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #8
  store i64 %70, i64* %75, align 8, !noalias !16
  store i32 6, i32* %76, align 8, !noalias !16
  store i64 %70, i64* %77, align 8, !noalias !16
  store i32 6, i32* %78, align 8, !noalias !16
  store i64 %70, i64* %79, align 8, !noalias !16
  store i32 0, i32* %80, align 8, !noalias !16
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm6EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %11, %"class.std::__1::__bit_iterator"* nonnull %8, %"class.std::__1::__bit_iterator"* nonnull %9, %"class.std::__1::__bit_iterator"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #8
  %601 = load i64, i64* %47, align 8
  %602 = and i64 %601, -64
  store i64 %602, i64* %47, align 8
  %603 = load i64, i64* %49, align 8
  %604 = add i64 %603, 32
  store i64 %604, i64* %49, align 8
  %605 = icmp ult i64 %604, 6
  br i1 %605, label %588, label %606

606:                                              ; preds = %600, %594, %582
  %607 = phi i64 [ %598, %594 ], [ %578, %582 ], [ %604, %600 ]
  %608 = phi i64 [ %599, %594 ], [ 0, %582 ], [ 0, %600 ]
  store i64 %608, i64* %48, align 8
  br label %508

609:                                              ; preds = %515, %446
  %610 = load void (i32)*, void (i32)** %84, align 8
  call void %610(i32 3089) #8
  %611 = load void (i32, i32*)*, void (i32, i32*)** %86, align 8
  call void %611(i32 1, i32* nonnull %12) #8
  %612 = load void (i32, i32*)*, void (i32, i32*)** %86, align 8
  call void %612(i32 1, i32* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #8
  br label %613

613:                                              ; preds = %609, %426
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %37) #8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %36) #8
  br label %166

614:                                              ; preds = %127
  call void @_ZN11dawn_native11SkipCommandEPNS_15CommandIteratorENS_7CommandE(%"class.dawn_native::CommandIterator"* %33, i32 20) #8
  br label %166

615:                                              ; preds = %127
  %616 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %616) #8
  %617 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %618 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %617, i64 0, i32 1, i32 0
  store i8 15, i8* %618, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %616, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 15, i1 false) #8
  %619 = getelementptr inbounds i8, i8* %616, i64 15
  store i8 0, i8* %619, align 1
  %620 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %26, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0)) #8, !noalias !19
  %621 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %622 = bitcast %"class.std::__1::basic_string"* %620 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %621, i8* align 8 %622, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %622, i8 0, i64 24, i1 false) #8, !noalias !19
  %623 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 2, %"class.std::__1::basic_string"* nonnull %25, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__func__._ZN11dawn_native6opengl13CommandBuffer7ExecuteEv, i64 0, i64 0), i32 790) #8
  %624 = ptrtoint %"class.dawn_native::ErrorData"* %623 to i64
  store i64 %624, i64* %107, align 8
  %625 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %626 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %625, i64 0, i32 1, i32 0
  %627 = load i8, i8* %626, align 1
  %628 = icmp slt i8 %627, 0
  br i1 %628, label %629, label %632

629:                                              ; preds = %615
  %630 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %631 = load i8*, i8** %630, align 8
  call void @_ZdlPv(i8* %631) #9
  br label %632

632:                                              ; preds = %615, %629
  %633 = load i8, i8* %618, align 1
  %634 = icmp slt i8 %633, 0
  br i1 %634, label %635, label %638

635:                                              ; preds = %632
  %636 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %637 = load i8*, i8** %636, align 8
  call void @_ZdlPv(i8* %637) #9
  br label %638

638:                                              ; preds = %632, %635
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %616) #8
  br label %644

639:                                              ; preds = %127, %127, %127
  call void @_ZN11dawn_native11SkipCommandEPNS_15CommandIteratorENS_7CommandE(%"class.dawn_native::CommandIterator"* %33, i32 %128) #8
  br label %166

640:                                              ; preds = %127
  unreachable

641:                                              ; preds = %123
  store i64 0, i64* %107, align 8
  br label %644

642:                                              ; preds = %151
  %643 = ptrtoint %"class.dawn_native::ErrorData"* %162 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %162, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__func__._ZN11dawn_native6opengl13CommandBuffer7ExecuteEv, i64 0, i64 0), i32 583) #8
  store i64 %643, i64* %107, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #8
  br label %644

644:                                              ; preds = %642, %224, %212, %147, %641, %638
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare dereferenceable(120) %"struct.dawn_native::CommandBufferResourceUsage"* @_ZNK11dawn_native17CommandBufferBase17GetResourceUsagesEv(%"class.dawn_native::CommandBufferBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZN11dawn_native6opengl13CommandBuffer7ExecuteEvENK3$_0clERKNS_22SyncScopeResourceUsageE"(%"struct.dawn_native::SyncScopeResourceUsage"* nocapture readonly dereferenceable(96)) unnamed_addr #3 align 2 {
  %2 = alloca %"class.std::__1::__bit_iterator", align 8
  %3 = alloca %"class.std::__1::__bit_iterator", align 8
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = alloca %"class.std::__1::__bit_iterator", align 8
  %9 = alloca %"class.std::__1::__bit_iterator", align 8
  %10 = alloca %"class.BitSetIterator<6, unsigned char>::Iterator", align 8
  %11 = alloca %"class.dawn_native::EnumMaskIterator<dawn_native::Aspect>::Iterator", align 8
  %12 = alloca %"struct.dawn_native::SubresourceRange", align 4
  %13 = alloca %"struct.dawn_native::SubresourceRange", align 4
  %14 = alloca %"struct.dawn_native::SubresourceRange", align 4
  %15 = getelementptr inbounds %"struct.dawn_native::SyncScopeResourceUsage", %"struct.dawn_native::SyncScopeResourceUsage"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"struct.dawn_native::SyncScopeResourceUsage", %"struct.dawn_native::SyncScopeResourceUsage"* %0, i64 0, i32 2, i32 0, i32 1
  %17 = bitcast %"class.dawn_native::TextureBase"*** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.70"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %18, %20
  br i1 %21, label %58, label %22

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"struct.dawn_native::SyncScopeResourceUsage", %"struct.dawn_native::SyncScopeResourceUsage"* %0, i64 0, i32 3, i32 0, i32 0
  %24 = bitcast %"class.dawn_native::EnumMaskIterator<dawn_native::Aspect>::Iterator"* %11 to i8*
  %25 = getelementptr inbounds %"class.dawn_native::EnumMaskIterator<dawn_native::Aspect>::Iterator", %"class.dawn_native::EnumMaskIterator<dawn_native::Aspect>::Iterator"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.dawn_native::EnumMaskIterator<dawn_native::Aspect>::Iterator", %"class.dawn_native::EnumMaskIterator<dawn_native::Aspect>::Iterator"* %11, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.dawn_native::EnumMaskIterator<dawn_native::Aspect>::Iterator", %"class.dawn_native::EnumMaskIterator<dawn_native::Aspect>::Iterator"* %11, i64 0, i32 0, i32 2
  %28 = bitcast %"class.BitSetIterator<6, unsigned char>::Iterator"* %10 to i8*
  %29 = getelementptr inbounds %"class.BitSetIterator<6, unsigned char>::Iterator", %"class.BitSetIterator<6, unsigned char>::Iterator"* %10, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.BitSetIterator<6, unsigned char>::Iterator", %"class.BitSetIterator<6, unsigned char>::Iterator"* %10, i64 0, i32 1
  %31 = bitcast i64* %30 to i8*
  %32 = getelementptr inbounds %"class.BitSetIterator<6, unsigned char>::Iterator", %"class.BitSetIterator<6, unsigned char>::Iterator"* %10, i64 0, i32 2
  %33 = ptrtoint %"class.BitSetIterator<6, unsigned char>::Iterator"* %10 to i64
  %34 = bitcast %"class.std::__1::__bit_iterator"* %9 to i8*
  %35 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  %36 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  %37 = bitcast %"class.std::__1::__bit_iterator"* %8 to i8*
  %38 = bitcast %"class.std::__1::__bit_iterator"* %6 to i64*
  %39 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %6, i64 0, i32 1
  %40 = bitcast %"class.std::__1::__bit_iterator"* %7 to i64*
  %41 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %7, i64 0, i32 1
  %42 = bitcast %"class.std::__1::__bit_iterator"* %8 to i64*
  %43 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %8, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.dawn_native::SubresourceRange", %"struct.dawn_native::SubresourceRange"* %12, i64 0, i32 0
  %45 = getelementptr inbounds %"struct.dawn_native::SubresourceRange", %"struct.dawn_native::SubresourceRange"* %13, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.dawn_native::SubresourceRange", %"struct.dawn_native::SubresourceRange"* %14, i64 0, i32 0
  %47 = ptrtoint %"class.dawn_native::EnumMaskIterator<dawn_native::Aspect>::Iterator"* %11 to i64
  %48 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  %49 = bitcast %"class.std::__1::__bit_iterator"* %2 to i8*
  %50 = bitcast %"class.std::__1::__bit_iterator"* %3 to i8*
  %51 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  %52 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %53 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %54 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %55 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %56 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  %57 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  br label %64

58:                                               ; preds = %233, %1
  %59 = getelementptr inbounds %"struct.dawn_native::SyncScopeResourceUsage", %"struct.dawn_native::SyncScopeResourceUsage"* %0, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.dawn_native::BufferBase"**, %"class.dawn_native::BufferBase"*** %59, align 8
  %61 = getelementptr inbounds %"struct.dawn_native::SyncScopeResourceUsage", %"struct.dawn_native::SyncScopeResourceUsage"* %0, i64 0, i32 0, i32 0, i32 1
  %62 = load %"class.dawn_native::BufferBase"**, %"class.dawn_native::BufferBase"*** %61, align 8
  %63 = icmp eq %"class.dawn_native::BufferBase"** %60, %62
  br i1 %63, label %240, label %241

64:                                               ; preds = %22, %233
  %65 = phi i64 [ %20, %22 ], [ %236, %233 ]
  %66 = phi i64 [ 0, %22 ], [ %234, %233 ]
  %67 = inttoptr i64 %65 to %"class.dawn_native::TextureBase"**
  %68 = getelementptr inbounds %"class.dawn_native::TextureBase"*, %"class.dawn_native::TextureBase"** %67, i64 %66
  %69 = bitcast %"class.dawn_native::TextureBase"** %68 to %"class.dawn_native::opengl::Texture"**
  %70 = load %"class.dawn_native::opengl::Texture"*, %"class.dawn_native::opengl::Texture"** %69, align 8
  %71 = load %"class.dawn_native::SubresourceStorage"*, %"class.dawn_native::SubresourceStorage"** %23, align 8
  %72 = getelementptr inbounds %"class.dawn_native::SubresourceStorage", %"class.dawn_native::SubresourceStorage"* %71, i64 %66, i32 0
  %73 = load i8, i8* %72, align 1, !noalias !22
  %74 = and i8 %73, 63
  %75 = zext i8 %74 to i64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #8, !noalias !25
  store i64 %75, i64* %29, align 8, !alias.scope !28, !noalias !25
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #8, !alias.scope !28, !noalias !25
  %76 = icmp eq i8 %74, 0
  br i1 %76, label %97, label %77

77:                                               ; preds = %64, %89
  %78 = phi i64 [ %91, %89 ], [ %75, %64 ]
  %79 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm6EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8, !noalias !25
  %80 = and i64 %79, %78
  %81 = and i64 %80, 4294967295
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %77
  %84 = trunc i64 %80 to i32
  %85 = call i32 @_Z11ScanForwardj(i32 %84) #8, !noalias !25
  %86 = zext i32 %85 to i64
  %87 = load i64, i64* %32, align 8, !noalias !25
  %88 = add i64 %87, %86
  br label %95

89:                                               ; preds = %77
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #8, !noalias !25
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #8, !noalias !25
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #8, !noalias !25
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #8, !noalias !25
  store i64 %33, i64* %38, align 8, !noalias !31
  store i32 6, i32* %39, align 8, !noalias !31
  store i64 %33, i64* %40, align 8, !noalias !31
  store i32 6, i32* %41, align 8, !noalias !31
  store i64 %33, i64* %42, align 8, !noalias !31
  store i32 0, i32* %43, align 8, !noalias !31
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm6EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %9, %"class.std::__1::__bit_iterator"* nonnull %6, %"class.std::__1::__bit_iterator"* nonnull %7, %"class.std::__1::__bit_iterator"* nonnull %8) #8, !noalias !25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #8, !noalias !25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #8, !noalias !25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #8, !noalias !25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #8, !noalias !25
  %90 = load i64, i64* %29, align 8, !noalias !25
  %91 = and i64 %90, -64
  store i64 %91, i64* %29, align 8, !noalias !25
  %92 = load i64, i64* %32, align 8, !noalias !25
  %93 = add i64 %92, 32
  store i64 %93, i64* %32, align 8, !noalias !25
  %94 = icmp ult i64 %93, 6
  br i1 %94, label %77, label %95

95:                                               ; preds = %89, %83
  %96 = phi i64 [ %88, %83 ], [ 0, %89 ]
  store i64 %96, i64* %30, align 8, !alias.scope !28, !noalias !25
  br label %98

97:                                               ; preds = %64
  store i64 32, i64* %32, align 8, !alias.scope !28, !noalias !25
  br label %98

98:                                               ; preds = %97, %95
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* nonnull align 8 %28, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #8, !noalias !25
  %99 = getelementptr inbounds %"class.dawn_native::SubresourceStorage", %"class.dawn_native::SubresourceStorage"* %71, i64 %66, i32 2
  %100 = getelementptr inbounds %"class.dawn_native::SubresourceStorage", %"class.dawn_native::SubresourceStorage"* %71, i64 %66, i32 1
  %101 = getelementptr inbounds %"class.dawn_native::SubresourceStorage", %"class.dawn_native::SubresourceStorage"* %71, i64 %66, i32 5, i32 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.dawn_native::SubresourceStorage", %"class.dawn_native::SubresourceStorage"* %71, i64 %66, i32 6, i32 0, i32 0, i32 0
  %103 = load i64, i64* %27, align 8
  br label %104

104:                                              ; preds = %230, %98
  %105 = phi i64 [ %231, %230 ], [ %103, %98 ]
  %106 = icmp eq i64 %105, 32
  br i1 %106, label %107, label %111

107:                                              ; preds = %104
  %108 = load i64, i64* %25, align 8
  %109 = and i64 %108, 63
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %233, label %111

111:                                              ; preds = %107, %104
  %112 = load i64, i64* %26, align 8
  %113 = trunc i64 %112 to i32
  %114 = and i32 %113, 255
  %115 = shl i32 1, %114
  %116 = trunc i32 %115 to i8
  %117 = call zeroext i8 @_ZN11dawn_native14GetAspectIndexENS_6AspectE(i8 zeroext %116) #8
  %118 = zext i8 %117 to i32
  %119 = zext i8 %117 to i64
  %120 = getelementptr inbounds %"class.dawn_native::SubresourceStorage", %"class.dawn_native::SubresourceStorage"* %71, i64 %66, i32 3, i32 0, i64 %119
  %121 = load i8, i8* %120, align 1, !range !3
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %111
  %124 = load i16, i16* %99, align 2
  %125 = icmp eq i16 %124, 0
  br i1 %125, label %200, label %137

126:                                              ; preds = %111
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %44) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %44, i8 -86, i64 20, i1 false) #8
  %127 = load i16, i16* %99, align 2
  %128 = zext i16 %127 to i32
  %129 = load i8, i8* %100, align 1
  %130 = zext i8 %129 to i32
  call void @_ZN11dawn_native16SubresourceRange8MakeFullENS_6AspectEjj(%"struct.dawn_native::SubresourceRange"* nonnull sret %12, i8 zeroext %116, i32 %128, i32 %130) #8
  %131 = getelementptr inbounds %"class.dawn_native::SubresourceStorage", %"class.dawn_native::SubresourceStorage"* %71, i64 %66, i32 4, i32 0, i64 %119
  %132 = load i32, i32* %131, align 4
  %133 = and i32 %132, -17
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %136, label %135

135:                                              ; preds = %126
  call void @_ZN11dawn_native6opengl7Texture35EnsureSubresourceContentInitializedERKNS_16SubresourceRangeE(%"class.dawn_native::opengl::Texture"* %70, %"struct.dawn_native::SubresourceRange"* nonnull dereferenceable(20) %12) #8
  br label %136

136:                                              ; preds = %135, %126
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %44) #8
  br label %200

137:                                              ; preds = %123, %195
  %138 = phi i64 [ %196, %195 ], [ 0, %123 ]
  %139 = phi i16 [ %197, %195 ], [ %124, %123 ]
  %140 = zext i16 %139 to i32
  %141 = mul nuw nsw i32 %140, %118
  %142 = trunc i64 %138 to i32
  %143 = add i32 %141, %142
  %144 = zext i32 %143 to i64
  %145 = load i8*, i8** %101, align 8
  %146 = getelementptr inbounds i8, i8* %145, i64 %144
  %147 = load i8, i8* %146, align 1, !range !3
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %149, label %152

149:                                              ; preds = %137
  %150 = load i8, i8* %100, align 1
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %195, label %172

152:                                              ; preds = %137
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %45) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %45, i8 -86, i64 20, i1 false) #8
  %153 = load i8, i8* %100, align 1, !noalias !34
  %154 = or i64 %138, 4294967296
  %155 = zext i8 %153 to i64
  %156 = shl nuw nsw i64 %155, 32
  call void @_ZN11dawn_native16SubresourceRangeC1ENS_6AspectENS_18FirstAndCountRangeIjEES3_(%"struct.dawn_native::SubresourceRange"* nonnull %13, i8 zeroext %116, i64 %154, i64 %156) #8
  %157 = load i16, i16* %99, align 2
  %158 = zext i16 %157 to i32
  %159 = mul nuw nsw i32 %158, %118
  %160 = add i32 %159, %142
  %161 = load i8, i8* %100, align 1
  %162 = zext i8 %161 to i32
  %163 = mul i32 %160, %162
  %164 = zext i32 %163 to i64
  %165 = load i32*, i32** %102, align 8
  %166 = getelementptr inbounds i32, i32* %165, i64 %164
  %167 = load i32, i32* %166, align 4
  %168 = and i32 %167, -17
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %171, label %170

170:                                              ; preds = %152
  call void @_ZN11dawn_native6opengl7Texture35EnsureSubresourceContentInitializedERKNS_16SubresourceRangeE(%"class.dawn_native::opengl::Texture"* %70, %"struct.dawn_native::SubresourceRange"* nonnull dereferenceable(20) %13) #8
  br label %171

171:                                              ; preds = %170, %152
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %45) #8
  br label %195

172:                                              ; preds = %149, %191
  %173 = phi i32 [ %193, %191 ], [ 0, %149 ]
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %46) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %46, i8 -86, i64 20, i1 false) #8
  call void @_ZN11dawn_native16SubresourceRange10MakeSingleENS_6AspectEjj(%"struct.dawn_native::SubresourceRange"* nonnull sret %14, i8 zeroext %116, i32 %142, i32 %173) #8
  %174 = load i16, i16* %99, align 2
  %175 = zext i16 %174 to i32
  %176 = mul nuw nsw i32 %175, %118
  %177 = add i32 %176, %142
  %178 = load i8, i8* %100, align 1
  %179 = zext i8 %178 to i32
  %180 = mul i32 %177, %179
  %181 = add i32 %180, %173
  %182 = zext i32 %181 to i64
  %183 = load i32*, i32** %102, align 8
  %184 = getelementptr inbounds i32, i32* %183, i64 %182
  %185 = load i32, i32* %184, align 4
  %186 = and i32 %185, -17
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %191, label %188

188:                                              ; preds = %172
  call void @_ZN11dawn_native6opengl7Texture35EnsureSubresourceContentInitializedERKNS_16SubresourceRangeE(%"class.dawn_native::opengl::Texture"* %70, %"struct.dawn_native::SubresourceRange"* nonnull dereferenceable(20) %14) #8
  %189 = load i8, i8* %100, align 1
  %190 = zext i8 %189 to i32
  br label %191

191:                                              ; preds = %188, %172
  %192 = phi i32 [ %179, %172 ], [ %190, %188 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %46) #8
  %193 = add nuw nsw i32 %173, 1
  %194 = icmp ult i32 %193, %192
  br i1 %194, label %172, label %195

195:                                              ; preds = %191, %171, %149
  %196 = add nuw nsw i64 %138, 1
  %197 = load i16, i16* %99, align 2
  %198 = zext i16 %197 to i64
  %199 = icmp ult i64 %196, %198
  br i1 %199, label %137, label %200

200:                                              ; preds = %195, %136, %123
  %201 = load i64, i64* %26, align 8
  %202 = load i64, i64* %27, align 8
  %203 = sub i64 %201, %202
  %204 = icmp ugt i64 %203, 5
  br i1 %204, label %205, label %206

205:                                              ; preds = %200
  call void @abort() #10
  unreachable

206:                                              ; preds = %200
  %207 = shl i64 1, %203
  %208 = xor i64 %207, -1
  %209 = load i64, i64* %25, align 8
  %210 = and i64 %209, %208
  store i64 %210, i64* %25, align 8
  %211 = icmp ult i64 %202, 6
  br i1 %211, label %212, label %230

212:                                              ; preds = %206, %224
  %213 = phi i64 [ %226, %224 ], [ %210, %206 ]
  %214 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm6EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %215 = and i64 %214, %213
  %216 = and i64 %215, 4294967295
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %224, label %218

218:                                              ; preds = %212
  %219 = trunc i64 %215 to i32
  %220 = call i32 @_Z11ScanForwardj(i32 %219) #8
  %221 = zext i32 %220 to i64
  %222 = load i64, i64* %27, align 8
  %223 = add i64 %222, %221
  br label %230

224:                                              ; preds = %212
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #8
  store i64 %47, i64* %52, align 8, !noalias !37
  store i32 6, i32* %53, align 8, !noalias !37
  store i64 %47, i64* %54, align 8, !noalias !37
  store i32 6, i32* %55, align 8, !noalias !37
  store i64 %47, i64* %56, align 8, !noalias !37
  store i32 0, i32* %57, align 8, !noalias !37
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm6EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %5, %"class.std::__1::__bit_iterator"* nonnull %2, %"class.std::__1::__bit_iterator"* nonnull %3, %"class.std::__1::__bit_iterator"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #8
  %225 = load i64, i64* %25, align 8
  %226 = and i64 %225, -64
  store i64 %226, i64* %25, align 8
  %227 = load i64, i64* %27, align 8
  %228 = add i64 %227, 32
  store i64 %228, i64* %27, align 8
  %229 = icmp ult i64 %228, 6
  br i1 %229, label %212, label %230

230:                                              ; preds = %224, %218, %206
  %231 = phi i64 [ %222, %218 ], [ %202, %206 ], [ %228, %224 ]
  %232 = phi i64 [ %223, %218 ], [ 0, %206 ], [ 0, %224 ]
  store i64 %232, i64* %26, align 8
  br label %104

233:                                              ; preds = %107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #8
  %234 = add nuw i64 %66, 1
  %235 = load i64, i64* %17, align 8
  %236 = load i64, i64* %19, align 8
  %237 = sub i64 %235, %236
  %238 = ashr exact i64 %237, 3
  %239 = icmp ult i64 %234, %238
  br i1 %239, label %64, label %58

240:                                              ; preds = %241, %58
  ret void

241:                                              ; preds = %58, %241
  %242 = phi %"class.dawn_native::BufferBase"** [ %245, %241 ], [ %60, %58 ]
  %243 = bitcast %"class.dawn_native::BufferBase"** %242 to %"class.dawn_native::opengl::Buffer"**
  %244 = load %"class.dawn_native::opengl::Buffer"*, %"class.dawn_native::opengl::Buffer"** %243, align 8
  call void @_ZN11dawn_native6opengl6Buffer21EnsureDataInitializedEv(%"class.dawn_native::opengl::Buffer"* %244) #8
  %245 = getelementptr inbounds %"class.dawn_native::BufferBase"*, %"class.dawn_native::BufferBase"** %242, i64 1
  %246 = icmp eq %"class.dawn_native::BufferBase"** %245, %62
  br i1 %246, label %240, label %241
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl13CommandBuffer18ExecuteComputePassEv(%class.Result* noalias nocapture sret, %"class.dawn_native::opengl::CommandBuffer"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", align 16
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.dawn_native::opengl::CommandBuffer", %"class.dawn_native::opengl::CommandBuffer"* %1, i64 0, i32 0, i32 0
  %9 = tail call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %8) #8
  %10 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %9, i64 1
  %11 = bitcast %"class.dawn_native::DeviceBase"* %10 to %"struct.dawn_native::opengl::OpenGLFunctions"*
  %12 = bitcast %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 480, i8* nonnull %12) #8
  %13 = bitcast i32* %5 to i8*
  %14 = bitcast %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 0, i64 480, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #8
  store i32 -1431655766, i32* %5, align 4
  %15 = getelementptr inbounds %"class.dawn_native::opengl::CommandBuffer", %"class.dawn_native::opengl::CommandBuffer"* %1, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.dawn_native::opengl::CommandBuffer", %"class.dawn_native::opengl::CommandBuffer"* %1, i64 0, i32 0, i32 1, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = bitcast i32* %3 to i8*
  %19 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4, i64 0, i32 0, i32 6
  %23 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4, i64 0, i32 0, i32 7
  %24 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4, i64 0, i32 1
  %25 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %9, i64 1, i32 2
  %26 = bitcast i64* %25 to void (i32, i32)**
  %27 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %9, i64 1, i32 18, i32 0, i64 21, i32 6, i32 0, i64 2, i32 0, i32 1
  %28 = bitcast i32* %27 to void (i64)**
  %29 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %9, i64 1, i32 18, i32 0, i64 27
  %30 = bitcast %"struct.dawn_native::Format"* %29 to void (i32)**
  %31 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %9, i64 1, i32 18, i32 0, i64 21, i32 6, i32 0, i64 1, i32 3
  %32 = bitcast i32* %31 to void (i32, i32, i32)**
  %33 = bitcast %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4 to <2 x i64>*
  %34 = bitcast %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4 to <2 x i64>*
  br label %35

35:                                               ; preds = %244, %2
  %36 = load i64, i64* %17, align 8
  %37 = add i64 %36, 3
  %38 = and i64 %37, -4
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, -1
  br i1 %41, label %45, label %42

42:                                               ; preds = %35
  %43 = inttoptr i64 %38 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 4
  store i8* %44, i8** %16, align 8
  store i32 %40, i32* %5, align 4
  br label %48

45:                                               ; preds = %35
  %46 = call zeroext i1 @_ZN11dawn_native15CommandIterator23NextCommandIdInNewBlockEPj(%"class.dawn_native::CommandIterator"* %15, i32* nonnull %5) #8
  %47 = load i32, i32* %5, align 4
  br label %48

48:                                               ; preds = %42, %45
  %49 = phi i32 [ %40, %42 ], [ %47, %45 ]
  %50 = phi i1 [ true, %42 ], [ %46, %45 ]
  call void @llvm.assume(i1 %50)
  switch i32 %49, label %313 [
    i32 13, label %51
    i32 7, label %55
    i32 8, label %70
    i32 21, label %85
    i32 27, label %106
    i32 17, label %287
    i32 18, label %287
    i32 19, label %287
    i32 30, label %288
  ]

51:                                               ; preds = %48
  %52 = load i8*, i8** %16, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 1
  store i8* %53, i8** %16, align 8
  %54 = bitcast %class.Result* %0 to i64*
  store i64 0, i64* %54, align 8
  br label %314

55:                                               ; preds = %48
  %56 = load i64, i64* %17, align 8
  %57 = add i64 %56, 3
  %58 = and i64 %57, -4
  %59 = inttoptr i64 %58 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 12
  store i8* %60, i8** %16, align 8
  %61 = inttoptr i64 %58 to %"struct.dawn_native::DispatchCmd"*
  call fastcc void @_ZN11dawn_native6opengl12_GLOBAL__N_116BindGroupTracker5ApplyERKNS0_15OpenGLFunctionsE(%"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* nonnull %4, %"struct.dawn_native::opengl::OpenGLFunctions"* dereferenceable(5664) %11)
  %62 = load void (i32, i32, i32)*, void (i32, i32, i32)** %32, align 8
  %63 = getelementptr inbounds %"struct.dawn_native::DispatchCmd", %"struct.dawn_native::DispatchCmd"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"struct.dawn_native::DispatchCmd", %"struct.dawn_native::DispatchCmd"* %61, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"struct.dawn_native::DispatchCmd", %"struct.dawn_native::DispatchCmd"* %61, i64 0, i32 2
  %68 = load i32, i32* %67, align 4
  call void %62(i32 %64, i32 %66, i32 %68) #8
  %69 = load void (i32)*, void (i32)** %30, align 8
  call void %69(i32 -1) #8
  br label %244

70:                                               ; preds = %48
  %71 = load i64, i64* %17, align 8
  %72 = add i64 %71, 7
  %73 = and i64 %72, -8
  %74 = inttoptr i64 %73 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 16
  store i8* %75, i8** %16, align 8
  %76 = inttoptr i64 %73 to %"struct.dawn_native::DispatchIndirectCmd"*
  call fastcc void @_ZN11dawn_native6opengl12_GLOBAL__N_116BindGroupTracker5ApplyERKNS0_15OpenGLFunctionsE(%"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* nonnull %4, %"struct.dawn_native::opengl::OpenGLFunctions"* dereferenceable(5664) %11)
  %77 = getelementptr inbounds %"struct.dawn_native::DispatchIndirectCmd", %"struct.dawn_native::DispatchIndirectCmd"* %76, i64 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = inttoptr i64 %73 to %"class.dawn_native::opengl::Buffer"**
  %80 = load %"class.dawn_native::opengl::Buffer"*, %"class.dawn_native::opengl::Buffer"** %79, align 8
  %81 = load void (i32, i32)*, void (i32, i32)** %26, align 8
  %82 = call i32 @_ZNK11dawn_native6opengl6Buffer9GetHandleEv(%"class.dawn_native::opengl::Buffer"* %80) #8
  call void %81(i32 37102, i32 %82) #8
  %83 = load void (i64)*, void (i64)** %28, align 8
  call void %83(i64 %78) #8
  %84 = load void (i32)*, void (i32)** %30, align 8
  call void %84(i32 -1) #8
  br label %244

85:                                               ; preds = %48
  %86 = load i64, i64* %17, align 8
  %87 = add i64 %86, 7
  %88 = and i64 %87, -8
  %89 = inttoptr i64 %88 to i8*
  %90 = getelementptr inbounds i8, i8* %89, i64 8
  store i8* %90, i8** %16, align 8
  %91 = inttoptr i64 %88 to %class.Ref.382*
  %92 = getelementptr inbounds %class.Ref.382, %class.Ref.382* %91, i64 0, i32 0, i32 0
  %93 = load %"class.dawn_native::opengl::ComputePipeline"*, %"class.dawn_native::opengl::ComputePipeline"** %92, align 8
  call void @_ZN11dawn_native6opengl15ComputePipeline8ApplyNowEv(%"class.dawn_native::opengl::ComputePipeline"* %93) #8
  %94 = getelementptr inbounds %"class.dawn_native::opengl::ComputePipeline", %"class.dawn_native::opengl::ComputePipeline"* %93, i64 0, i32 0, i32 0
  %95 = call %"class.dawn_native::PipelineLayoutBase"* @_ZN11dawn_native12PipelineBase9GetLayoutEv(%"class.dawn_native::PipelineBase"* %94) #8
  store %"class.dawn_native::PipelineLayoutBase"* %95, %"class.dawn_native::PipelineLayoutBase"** %22, align 8
  %96 = load %"class.dawn_native::PipelineLayoutBase"*, %"class.dawn_native::PipelineLayoutBase"** %23, align 16
  %97 = icmp eq %"class.dawn_native::PipelineLayoutBase"* %96, %95
  br i1 %97, label %102, label %98

98:                                               ; preds = %85
  %99 = call dereferenceable(8) %"class.ityp::bitset.337"* @_ZNK11dawn_native18PipelineLayoutBase23GetBindGroupLayoutsMaskEv(%"class.dawn_native::PipelineLayoutBase"* %95) #8
  %100 = getelementptr inbounds %"class.ityp::bitset.337", %"class.ityp::bitset.337"* %99, i64 0, i32 0, i32 0, i32 0
  %101 = load i64, i64* %100, align 8
  store i64 %101, i64* %19, align 16
  store i64 %101, i64* %20, align 16
  store i64 %101, i64* %21, align 8
  br label %102

102:                                              ; preds = %85, %98
  %103 = icmp eq %"class.dawn_native::opengl::ComputePipeline"* %93, null
  %104 = getelementptr inbounds %"class.dawn_native::opengl::ComputePipeline", %"class.dawn_native::opengl::ComputePipeline"* %93, i64 0, i32 1
  %105 = select i1 %103, %"class.dawn_native::opengl::PipelineGL"* null, %"class.dawn_native::opengl::PipelineGL"* %104
  store %"class.dawn_native::opengl::PipelineGL"* %105, %"class.dawn_native::opengl::PipelineGL"** %24, align 8
  br label %244

106:                                              ; preds = %48
  %107 = load i64, i64* %17, align 8
  %108 = add i64 %107, 7
  %109 = and i64 %108, -8
  %110 = inttoptr i64 %109 to i8*
  %111 = getelementptr inbounds i8, i8* %110, i64 24
  store i8* %111, i8** %16, align 8
  %112 = inttoptr i64 %109 to %"struct.dawn_native::SetBindGroupCmd"*
  %113 = getelementptr inbounds %"struct.dawn_native::SetBindGroupCmd", %"struct.dawn_native::SetBindGroupCmd"* %112, i64 0, i32 3
  %114 = load i32, i32* %113, align 8
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %136, label %116

116:                                              ; preds = %106
  %117 = zext i32 %114 to i64
  %118 = shl nuw nsw i64 %117, 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #8
  store i32 -1431655766, i32* %3, align 4
  %119 = bitcast i8* %111 to i32*
  %120 = load i32, i32* %119, align 8
  %121 = icmp eq i32 %120, -1
  br i1 %121, label %125, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds i8, i8* %110, i64 28
  store i8* %123, i8** %16, align 8
  store i32 %120, i32* %3, align 4
  %124 = ptrtoint i8* %123 to i64
  br label %128

125:                                              ; preds = %116
  %126 = call zeroext i1 @_ZN11dawn_native15CommandIterator23NextCommandIdInNewBlockEPj(%"class.dawn_native::CommandIterator"* %15, i32* nonnull %3) #8
  %127 = load i64, i64* %17, align 8
  br label %128

128:                                              ; preds = %122, %125
  %129 = phi i64 [ %124, %122 ], [ %127, %125 ]
  %130 = add i64 %129, 3
  %131 = and i64 %130, -4
  %132 = inttoptr i64 %131 to i8*
  %133 = getelementptr inbounds i8, i8* %132, i64 %118
  store i8* %133, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #8
  %134 = inttoptr i64 %131 to i32*
  %135 = load i32, i32* %113, align 8
  br label %136

136:                                              ; preds = %106, %128
  %137 = phi i32 [ %135, %128 ], [ 0, %106 ]
  %138 = phi i32* [ %134, %128 ], [ null, %106 ]
  %139 = getelementptr inbounds %"struct.dawn_native::SetBindGroupCmd", %"struct.dawn_native::SetBindGroupCmd"* %112, i64 0, i32 0
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %"struct.dawn_native::SetBindGroupCmd", %"struct.dawn_native::SetBindGroupCmd"* %112, i64 0, i32 2, i32 0, i32 0
  %142 = load %"class.dawn_native::BindGroupBase"*, %"class.dawn_native::BindGroupBase"** %141, align 8
  %143 = zext i32 %140 to i64
  %144 = shl i64 1, %143
  %145 = load i64, i64* %19, align 16
  %146 = and i64 %145, %144
  %147 = icmp eq i64 %146, 0
  %148 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4, i64 0, i32 0, i32 3, i32 0, i32 0, i64 %143
  br i1 %147, label %171, label %149

149:                                              ; preds = %136
  %150 = load %"class.dawn_native::BindGroupBase"*, %"class.dawn_native::BindGroupBase"** %148, align 8
  %151 = icmp eq %"class.dawn_native::BindGroupBase"* %150, %142
  br i1 %151, label %160, label %152

152:                                              ; preds = %149
  %153 = icmp ugt i32 %140, 3
  br i1 %153, label %154, label %155

154:                                              ; preds = %152
  call void @abort() #10
  unreachable

155:                                              ; preds = %152
  %156 = load <2 x i64>, <2 x i64>* %33, align 16
  %157 = insertelement <2 x i64> undef, i64 %144, i32 0
  %158 = shufflevector <2 x i64> %157, <2 x i64> undef, <2 x i32> zeroinitializer
  %159 = or <2 x i64> %156, %158
  store <2 x i64> %159, <2 x i64>* %34, align 16
  br label %160

160:                                              ; preds = %155, %149
  %161 = icmp eq i32 %137, 0
  br i1 %161, label %162, label %164

162:                                              ; preds = %160
  store %"class.dawn_native::BindGroupBase"* %142, %"class.dawn_native::BindGroupBase"** %148, align 8
  %163 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4, i64 0, i32 0, i32 4, i32 0, i32 0, i64 %143
  store i32 0, i32* %163, align 4
  br label %244

164:                                              ; preds = %160
  %165 = icmp ugt i32 %140, 3
  br i1 %165, label %166, label %167

166:                                              ; preds = %164
  call void @abort() #10
  unreachable

167:                                              ; preds = %164
  %168 = load i64, i64* %21, align 8
  %169 = or i64 %168, %144
  store i64 %169, i64* %21, align 8
  store %"class.dawn_native::BindGroupBase"* %142, %"class.dawn_native::BindGroupBase"** %148, align 8
  %170 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4, i64 0, i32 0, i32 4, i32 0, i32 0, i64 %143
  store i32 %137, i32* %170, align 4
  br label %174

171:                                              ; preds = %136
  store %"class.dawn_native::BindGroupBase"* %142, %"class.dawn_native::BindGroupBase"** %148, align 8
  %172 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4, i64 0, i32 0, i32 4, i32 0, i32 0, i64 %143
  store i32 %137, i32* %172, align 4
  %173 = icmp eq i32 %137, 0
  br i1 %173, label %244, label %174

174:                                              ; preds = %171, %167
  %175 = zext i32 %137 to i64
  %176 = icmp ult i32 %137, 4
  br i1 %176, label %245, label %177

177:                                              ; preds = %174
  %178 = getelementptr %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4, i64 0, i32 0, i32 5, i32 0, i32 0, i64 %143
  %179 = getelementptr %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4, i64 0, i32 0, i32 5, i32 0, i32 0, i64 %143, i32 0, i64 %175
  %180 = getelementptr i32, i32* %138, i64 %175
  %181 = bitcast i32* %180 to %"struct.std::__1::array.379"*
  %182 = icmp ult %"struct.std::__1::array.379"* %178, %181
  %183 = bitcast i64* %179 to i32*
  %184 = icmp ult i32* %138, %183
  %185 = and i1 %182, %184
  br i1 %185, label %245, label %186

186:                                              ; preds = %177
  %187 = and i64 %175, 4294967292
  %188 = add nsw i64 %187, -4
  %189 = lshr exact i64 %188, 2
  %190 = add nuw nsw i64 %189, 1
  %191 = and i64 %190, 1
  %192 = icmp eq i64 %188, 0
  br i1 %192, label %226, label %193

193:                                              ; preds = %186
  %194 = sub nuw nsw i64 %190, %191
  br label %195

195:                                              ; preds = %195, %193
  %196 = phi i64 [ 0, %193 ], [ %223, %195 ]
  %197 = phi i64 [ %194, %193 ], [ %224, %195 ]
  %198 = getelementptr inbounds i32, i32* %138, i64 %196
  %199 = bitcast i32* %198 to <2 x i32>*
  %200 = load <2 x i32>, <2 x i32>* %199, align 4, !alias.scope !40
  %201 = getelementptr inbounds i32, i32* %198, i64 2
  %202 = bitcast i32* %201 to <2 x i32>*
  %203 = load <2 x i32>, <2 x i32>* %202, align 4, !alias.scope !40
  %204 = zext <2 x i32> %200 to <2 x i64>
  %205 = zext <2 x i32> %203 to <2 x i64>
  %206 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4, i64 0, i32 0, i32 5, i32 0, i32 0, i64 %143, i32 0, i64 %196
  %207 = bitcast i64* %206 to <2 x i64>*
  store <2 x i64> %204, <2 x i64>* %207, align 8, !alias.scope !43, !noalias !40
  %208 = getelementptr inbounds i64, i64* %206, i64 2
  %209 = bitcast i64* %208 to <2 x i64>*
  store <2 x i64> %205, <2 x i64>* %209, align 8, !alias.scope !43, !noalias !40
  %210 = or i64 %196, 4
  %211 = getelementptr inbounds i32, i32* %138, i64 %210
  %212 = bitcast i32* %211 to <2 x i32>*
  %213 = load <2 x i32>, <2 x i32>* %212, align 4, !alias.scope !40
  %214 = getelementptr inbounds i32, i32* %211, i64 2
  %215 = bitcast i32* %214 to <2 x i32>*
  %216 = load <2 x i32>, <2 x i32>* %215, align 4, !alias.scope !40
  %217 = zext <2 x i32> %213 to <2 x i64>
  %218 = zext <2 x i32> %216 to <2 x i64>
  %219 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4, i64 0, i32 0, i32 5, i32 0, i32 0, i64 %143, i32 0, i64 %210
  %220 = bitcast i64* %219 to <2 x i64>*
  store <2 x i64> %217, <2 x i64>* %220, align 8, !alias.scope !43, !noalias !40
  %221 = getelementptr inbounds i64, i64* %219, i64 2
  %222 = bitcast i64* %221 to <2 x i64>*
  store <2 x i64> %218, <2 x i64>* %222, align 8, !alias.scope !43, !noalias !40
  %223 = add i64 %196, 8
  %224 = add i64 %197, -2
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %195, !llvm.loop !45

226:                                              ; preds = %195, %186
  %227 = phi i64 [ 0, %186 ], [ %223, %195 ]
  %228 = icmp eq i64 %191, 0
  br i1 %228, label %242, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds i32, i32* %138, i64 %227
  %231 = bitcast i32* %230 to <2 x i32>*
  %232 = load <2 x i32>, <2 x i32>* %231, align 4, !alias.scope !40
  %233 = getelementptr inbounds i32, i32* %230, i64 2
  %234 = bitcast i32* %233 to <2 x i32>*
  %235 = load <2 x i32>, <2 x i32>* %234, align 4, !alias.scope !40
  %236 = zext <2 x i32> %232 to <2 x i64>
  %237 = zext <2 x i32> %235 to <2 x i64>
  %238 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4, i64 0, i32 0, i32 5, i32 0, i32 0, i64 %143, i32 0, i64 %227
  %239 = bitcast i64* %238 to <2 x i64>*
  store <2 x i64> %236, <2 x i64>* %239, align 8, !alias.scope !43, !noalias !40
  %240 = getelementptr inbounds i64, i64* %238, i64 2
  %241 = bitcast i64* %240 to <2 x i64>*
  store <2 x i64> %237, <2 x i64>* %241, align 8, !alias.scope !43, !noalias !40
  br label %242

242:                                              ; preds = %226, %229
  %243 = icmp eq i64 %187, %175
  br i1 %243, label %244, label %245

244:                                              ; preds = %261, %264, %242, %171, %162, %287, %102, %70, %55
  br label %35

245:                                              ; preds = %242, %177, %174
  %246 = phi i64 [ 0, %177 ], [ 0, %174 ], [ %187, %242 ]
  %247 = xor i64 %246, -1
  %248 = add nsw i64 %247, %175
  %249 = and i64 %175, 3
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %261, label %251

251:                                              ; preds = %245, %251
  %252 = phi i64 [ %258, %251 ], [ %246, %245 ]
  %253 = phi i64 [ %259, %251 ], [ %249, %245 ]
  %254 = getelementptr inbounds i32, i32* %138, i64 %252
  %255 = load i32, i32* %254, align 4
  %256 = zext i32 %255 to i64
  %257 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4, i64 0, i32 0, i32 5, i32 0, i32 0, i64 %143, i32 0, i64 %252
  store i64 %256, i64* %257, align 8
  %258 = add nuw nsw i64 %252, 1
  %259 = add i64 %253, -1
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %251, !llvm.loop !47

261:                                              ; preds = %251, %245
  %262 = phi i64 [ %246, %245 ], [ %258, %251 ]
  %263 = icmp ult i64 %248, 3
  br i1 %263, label %244, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %285, %264 ], [ %262, %261 ]
  %266 = getelementptr inbounds i32, i32* %138, i64 %265
  %267 = load i32, i32* %266, align 4
  %268 = zext i32 %267 to i64
  %269 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4, i64 0, i32 0, i32 5, i32 0, i32 0, i64 %143, i32 0, i64 %265
  store i64 %268, i64* %269, align 8
  %270 = add nuw nsw i64 %265, 1
  %271 = getelementptr inbounds i32, i32* %138, i64 %270
  %272 = load i32, i32* %271, align 4
  %273 = zext i32 %272 to i64
  %274 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4, i64 0, i32 0, i32 5, i32 0, i32 0, i64 %143, i32 0, i64 %270
  store i64 %273, i64* %274, align 8
  %275 = add nuw nsw i64 %265, 2
  %276 = getelementptr inbounds i32, i32* %138, i64 %275
  %277 = load i32, i32* %276, align 4
  %278 = zext i32 %277 to i64
  %279 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4, i64 0, i32 0, i32 5, i32 0, i32 0, i64 %143, i32 0, i64 %275
  store i64 %278, i64* %279, align 8
  %280 = add nuw nsw i64 %265, 3
  %281 = getelementptr inbounds i32, i32* %138, i64 %280
  %282 = load i32, i32* %281, align 4
  %283 = zext i32 %282 to i64
  %284 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %4, i64 0, i32 0, i32 5, i32 0, i32 0, i64 %143, i32 0, i64 %280
  store i64 %283, i64* %284, align 8
  %285 = add nuw nsw i64 %265, 4
  %286 = icmp eq i64 %285, %175
  br i1 %286, label %244, label %264, !llvm.loop !49

287:                                              ; preds = %48, %48, %48
  call void @_ZN11dawn_native11SkipCommandEPNS_15CommandIteratorENS_7CommandE(%"class.dawn_native::CommandIterator"* %15, i32 %49) #8
  br label %244

288:                                              ; preds = %48
  %289 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %289) #8
  %290 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %291 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %290, i64 0, i32 1, i32 0
  store i8 15, i8* %291, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %289, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 15, i1 false) #8
  %292 = getelementptr inbounds i8, i8* %289, i64 15
  store i8 0, i8* %292, align 1
  %293 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0)) #8, !noalias !50
  %294 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %295 = bitcast %"class.std::__1::basic_string"* %293 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %294, i8* align 8 %295, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %295, i8 0, i64 24, i1 false) #8, !noalias !50
  %296 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 2, %"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__._ZN11dawn_native6opengl13CommandBuffer18ExecuteComputePassEv, i64 0, i64 0), i32 877) #8
  %297 = ptrtoint %"class.dawn_native::ErrorData"* %296 to i64
  %298 = bitcast %class.Result* %0 to i64*
  store i64 %297, i64* %298, align 8
  %299 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %300 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %299, i64 0, i32 1, i32 0
  %301 = load i8, i8* %300, align 1
  %302 = icmp slt i8 %301, 0
  br i1 %302, label %303, label %306

303:                                              ; preds = %288
  %304 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = load i8*, i8** %304, align 8
  call void @_ZdlPv(i8* %305) #9
  br label %306

306:                                              ; preds = %288, %303
  %307 = load i8, i8* %291, align 1
  %308 = icmp slt i8 %307, 0
  br i1 %308, label %309, label %312

309:                                              ; preds = %306
  %310 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %311 = load i8*, i8** %310, align 8
  call void @_ZdlPv(i8* %311) #9
  br label %312

312:                                              ; preds = %306, %309
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %289) #8
  br label %314

313:                                              ; preds = %48
  unreachable

314:                                              ; preds = %312, %51
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 480, i8* nonnull %12) #8
  ret void
}

declare void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"*, i8*, i8*, i32) local_unnamed_addr #1

declare void @_ZN11dawn_native30LazyClearRenderPassAttachmentsEPNS_18BeginRenderPassCmdE(%"struct.dawn_native::BeginRenderPassCmd"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl13CommandBuffer17ExecuteRenderPassEPNS_18BeginRenderPassCmdE(%class.Result* noalias nocapture sret, %"class.dawn_native::opengl::CommandBuffer"*, %"struct.dawn_native::BeginRenderPassCmd"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %5 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %6 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %7 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %8 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %9 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %10 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %11 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %"class.BitSetIterator<4, unsigned char>::Iterator", align 8
  %15 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %16 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %17 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %18 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %19 = alloca i32, align 4
  %20 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %21 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %22 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %23 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %24 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %25 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %26 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %27 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %28 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %29 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %30 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %31 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %32 = alloca i32, align 4
  %33 = alloca %"class.ityp::array.386", align 4
  %34 = alloca %"class.BitSetIterator<4, unsigned char>::Iterator", align 8
  %35 = alloca <4 x i32>, align 16
  %36 = bitcast <4 x i32>* %35 to %"class.dawn_native::opengl::PersistentPipelineState"*
  %37 = alloca %"class.BitSetIterator<4, unsigned char>::Iterator", align 8
  %38 = alloca { <2 x float>, <2 x float> }, align 8
  %39 = alloca { i64, i64 }, align 8
  %40 = alloca { i64, i64 }, align 8
  %41 = alloca i32, align 4
  %42 = alloca %"class.dawn_native::opengl::RenderPipeline"*, align 8
  %43 = alloca i64, align 8
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker", align 8
  %47 = alloca %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", align 8
  %48 = alloca %class.anon.407, align 8
  %49 = alloca i32, align 4
  %50 = alloca %"class.std::__1::basic_string", align 8
  %51 = alloca %"class.std::__1::basic_string", align 8
  %52 = alloca %"class.std::__1::basic_string", align 8
  %53 = alloca %"class.std::__1::basic_string", align 8
  %54 = alloca %"class.std::__1::basic_string", align 8
  %55 = alloca %"class.std::__1::basic_string", align 8
  %56 = getelementptr inbounds %"class.dawn_native::opengl::CommandBuffer", %"class.dawn_native::opengl::CommandBuffer"* %1, i64 0, i32 0, i32 0
  %57 = tail call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %56) #8
  %58 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %57, i64 1
  %59 = bitcast %"class.dawn_native::DeviceBase"* %58 to %"struct.dawn_native::opengl::OpenGLFunctions"*
  %60 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %60) #8
  store i32 0, i32* %32, align 4
  %61 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %57, i64 1, i32 3
  %62 = bitcast i64* %61 to void (i32, i32)**
  %63 = load void (i32, i32)*, void (i32, i32)** %62, align 8
  tail call void %63(i32 36008, i32 0) #8
  %64 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %57, i64 1, i32 18, i32 0, i64 3, i32 5
  %65 = bitcast i8* %64 to void (i32, i32*)**
  %66 = load void (i32, i32*)*, void (i32, i32*)** %65, align 8
  call void %66(i32 1, i32* nonnull %32) #8
  %67 = load void (i32, i32)*, void (i32, i32)** %62, align 8
  %68 = load i32, i32* %32, align 4
  call void %67(i32 36009, i32 %68) #8
  %69 = bitcast %"class.ityp::array.386"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %69, i8 0, i64 16, i1 false)
  %70 = getelementptr inbounds %"struct.dawn_native::BeginRenderPassCmd", %"struct.dawn_native::BeginRenderPassCmd"* %2, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.dawn_native::AttachmentState"*, %"class.dawn_native::AttachmentState"** %70, align 8
  %72 = call i64 @_ZNK11dawn_native15AttachmentState23GetColorAttachmentsMaskEv(%"class.dawn_native::AttachmentState"* %71) #8
  %73 = bitcast %"class.BitSetIterator<4, unsigned char>::Iterator"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #8
  %74 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %34, i64 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %34, i64 0, i32 1
  %76 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %34, i64 0, i32 2
  store i64 %72, i64* %74, align 8, !alias.scope !53
  %77 = bitcast i64* %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #8, !alias.scope !53
  %78 = and i64 %72, 15
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %113, label %80

80:                                               ; preds = %3
  %81 = ptrtoint %"class.BitSetIterator<4, unsigned char>::Iterator"* %34 to i64
  %82 = bitcast %"class.std::__1::__bit_iterator.418"* %31 to i8*
  %83 = bitcast %"class.std::__1::__bit_iterator.418"* %28 to i8*
  %84 = bitcast %"class.std::__1::__bit_iterator.418"* %29 to i8*
  %85 = bitcast %"class.std::__1::__bit_iterator.418"* %30 to i8*
  %86 = bitcast %"class.std::__1::__bit_iterator.418"* %28 to i64*
  %87 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %28, i64 0, i32 1
  %88 = bitcast %"class.std::__1::__bit_iterator.418"* %29 to i64*
  %89 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %29, i64 0, i32 1
  %90 = bitcast %"class.std::__1::__bit_iterator.418"* %30 to i64*
  %91 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %30, i64 0, i32 1
  br label %92

92:                                               ; preds = %104, %80
  %93 = phi i64 [ %72, %80 ], [ %106, %104 ]
  %94 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %95 = and i64 %94, %93
  %96 = and i64 %95, 4294967295
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %104, label %98

98:                                               ; preds = %92
  %99 = trunc i64 %95 to i32
  %100 = call i32 @_Z11ScanForwardj(i32 %99) #8
  %101 = zext i32 %100 to i64
  %102 = load i64, i64* %76, align 8, !alias.scope !53
  %103 = add i64 %102, %101
  br label %110

104:                                              ; preds = %92
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #8, !noalias !53
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #8, !noalias !53
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #8, !noalias !53
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #8, !noalias !53
  store i64 %81, i64* %86, align 8, !noalias !56
  store i32 4, i32* %87, align 8, !noalias !56
  store i64 %81, i64* %88, align 8, !noalias !56
  store i32 4, i32* %89, align 8, !noalias !56
  store i64 %81, i64* %90, align 8, !noalias !56
  store i32 0, i32* %91, align 8, !noalias !56
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.418"* nonnull sret %31, %"class.std::__1::__bit_iterator.418"* nonnull %28, %"class.std::__1::__bit_iterator.418"* nonnull %29, %"class.std::__1::__bit_iterator.418"* nonnull %30) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #8, !noalias !53
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #8, !noalias !53
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #8, !noalias !53
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #8, !noalias !53
  %105 = load i64, i64* %74, align 8, !alias.scope !53
  %106 = and i64 %105, -16
  store i64 %106, i64* %74, align 8, !alias.scope !53
  %107 = load i64, i64* %76, align 8, !alias.scope !53
  %108 = add i64 %107, 32
  store i64 %108, i64* %76, align 8, !alias.scope !53
  %109 = icmp ult i64 %108, 4
  br i1 %109, label %92, label %110

110:                                              ; preds = %104, %98
  %111 = phi i64 [ %102, %98 ], [ %108, %104 ]
  %112 = phi i64 [ %103, %98 ], [ 0, %104 ]
  store i64 %112, i64* %75, align 8, !alias.scope !53
  br label %115

113:                                              ; preds = %3
  store i64 32, i64* %76, align 8, !alias.scope !53
  %114 = ptrtoint %"class.BitSetIterator<4, unsigned char>::Iterator"* %34 to i64
  br label %115

115:                                              ; preds = %110, %113
  %116 = phi i64 [ %81, %110 ], [ %114, %113 ]
  %117 = phi i64 [ %112, %110 ], [ 0, %113 ]
  %118 = phi i64 [ %111, %110 ], [ 32, %113 ]
  %119 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %57, i64 1, i32 18, i32 0, i64 14, i32 6
  %120 = bitcast %"struct.std::__1::array.30"* %119 to void (i32, i32, i32, i32, i32)**
  %121 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %57, i64 1, i32 18, i32 0, i64 2, i32 6, i32 0, i64 2
  %122 = bitcast %"struct.dawn_native::AspectInfo"* %121 to void (i32, i32, i32, i32, i32)**
  %123 = bitcast %"class.std::__1::__bit_iterator.418"* %27 to i8*
  %124 = bitcast %"class.std::__1::__bit_iterator.418"* %24 to i8*
  %125 = bitcast %"class.std::__1::__bit_iterator.418"* %25 to i8*
  %126 = bitcast %"class.std::__1::__bit_iterator.418"* %26 to i8*
  %127 = bitcast %"class.std::__1::__bit_iterator.418"* %24 to i64*
  %128 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %24, i64 0, i32 1
  %129 = bitcast %"class.std::__1::__bit_iterator.418"* %25 to i64*
  %130 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %25, i64 0, i32 1
  %131 = bitcast %"class.std::__1::__bit_iterator.418"* %26 to i64*
  %132 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %26, i64 0, i32 1
  br label %133

133:                                              ; preds = %205, %115
  %134 = phi i64 [ %117, %115 ], [ %207, %205 ]
  %135 = phi i64 [ %118, %115 ], [ %206, %205 ]
  %136 = phi i32 [ 0, %115 ], [ %175, %205 ]
  %137 = icmp eq i64 %135, 32
  br i1 %137, label %138, label %150

138:                                              ; preds = %133
  %139 = load i64, i64* %74, align 8
  %140 = and i64 %139, 15
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %150

142:                                              ; preds = %138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #8
  %143 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %57, i64 1, i32 18, i32 0, i64 13, i32 6, i32 0, i64 0, i32 1
  %144 = bitcast i32* %143 to void (i32, i32*)**
  %145 = load void (i32, i32*)*, void (i32, i32*)** %144, align 8
  %146 = and i32 %136, 255
  %147 = getelementptr inbounds %"class.ityp::array.386", %"class.ityp::array.386"* %33, i64 0, i32 0, i32 0, i64 0
  call void %145(i32 %146, i32* nonnull %147) #8
  %148 = load %"class.dawn_native::AttachmentState"*, %"class.dawn_native::AttachmentState"** %70, align 8
  %149 = call zeroext i1 @_ZNK11dawn_native15AttachmentState25HasDepthStencilAttachmentEv(%"class.dawn_native::AttachmentState"* %148) #8
  br i1 %149, label %208, label %236

150:                                              ; preds = %138, %133
  %151 = trunc i64 %134 to i32
  %152 = and i64 %134, 255
  %153 = getelementptr inbounds %"struct.dawn_native::BeginRenderPassCmd", %"struct.dawn_native::BeginRenderPassCmd"* %2, i64 0, i32 1, i32 0, i32 0, i64 %152, i32 0, i32 0, i32 0
  %154 = load %"class.dawn_native::TextureViewBase"*, %"class.dawn_native::TextureViewBase"** %153, align 8
  %155 = call %"class.dawn_native::TextureBase"* @_ZN11dawn_native15TextureViewBase10GetTextureEv(%"class.dawn_native::TextureViewBase"* %154) #8
  %156 = bitcast %"class.dawn_native::TextureBase"* %155 to %"class.dawn_native::opengl::Texture"*
  %157 = call i32 @_ZNK11dawn_native6opengl7Texture9GetHandleEv(%"class.dawn_native::opengl::Texture"* %156) #8
  %158 = and i32 %151, 255
  %159 = add nuw nsw i32 %158, 36064
  %160 = call %"class.dawn_native::TextureBase"* @_ZN11dawn_native15TextureViewBase10GetTextureEv(%"class.dawn_native::TextureViewBase"* %154) #8
  %161 = call i32 @_ZNK11dawn_native11TextureBase14GetArrayLayersEv(%"class.dawn_native::TextureBase"* %160) #8
  %162 = icmp eq i32 %161, 1
  br i1 %162, label %163, label %169

163:                                              ; preds = %150
  %164 = call %"class.dawn_native::TextureBase"* @_ZN11dawn_native15TextureViewBase10GetTextureEv(%"class.dawn_native::TextureViewBase"* %154) #8
  %165 = bitcast %"class.dawn_native::TextureBase"* %164 to %"class.dawn_native::opengl::Texture"*
  %166 = call i32 @_ZNK11dawn_native6opengl7Texture11GetGLTargetEv(%"class.dawn_native::opengl::Texture"* %165) #8
  %167 = load void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** %122, align 8
  %168 = call i32 @_ZNK11dawn_native15TextureViewBase15GetBaseMipLevelEv(%"class.dawn_native::TextureViewBase"* %154) #8
  call void %167(i32 36009, i32 %159, i32 %166, i32 %157, i32 %168) #8
  br label %173

169:                                              ; preds = %150
  %170 = load void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** %120, align 8
  %171 = call i32 @_ZNK11dawn_native15TextureViewBase15GetBaseMipLevelEv(%"class.dawn_native::TextureViewBase"* %154) #8
  %172 = call i32 @_ZNK11dawn_native15TextureViewBase17GetBaseArrayLayerEv(%"class.dawn_native::TextureViewBase"* %154) #8
  call void %170(i32 36009, i32 %159, i32 %157, i32 %171, i32 %172) #8
  br label %173

173:                                              ; preds = %169, %163
  %174 = getelementptr inbounds %"class.ityp::array.386", %"class.ityp::array.386"* %33, i64 0, i32 0, i32 0, i64 %152
  store i32 %159, i32* %174, align 4
  %175 = add i32 %151, 1
  %176 = load i64, i64* %75, align 8
  %177 = load i64, i64* %76, align 8
  %178 = sub i64 %176, %177
  %179 = icmp ugt i64 %178, 3
  br i1 %179, label %180, label %181

180:                                              ; preds = %173
  call void @abort() #10
  unreachable

181:                                              ; preds = %173
  %182 = shl i64 1, %178
  %183 = xor i64 %182, -1
  %184 = load i64, i64* %74, align 8
  %185 = and i64 %184, %183
  store i64 %185, i64* %74, align 8
  %186 = icmp ult i64 %177, 4
  br i1 %186, label %187, label %205

187:                                              ; preds = %181, %199
  %188 = phi i64 [ %201, %199 ], [ %185, %181 ]
  %189 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %190 = and i64 %189, %188
  %191 = and i64 %190, 4294967295
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %199, label %193

193:                                              ; preds = %187
  %194 = trunc i64 %190 to i32
  %195 = call i32 @_Z11ScanForwardj(i32 %194) #8
  %196 = zext i32 %195 to i64
  %197 = load i64, i64* %76, align 8
  %198 = add i64 %197, %196
  br label %205

199:                                              ; preds = %187
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %123) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %124) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %125) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %126) #8
  store i64 %116, i64* %127, align 8, !noalias !59
  store i32 4, i32* %128, align 8, !noalias !59
  store i64 %116, i64* %129, align 8, !noalias !59
  store i32 4, i32* %130, align 8, !noalias !59
  store i64 %116, i64* %131, align 8, !noalias !59
  store i32 0, i32* %132, align 8, !noalias !59
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.418"* nonnull sret %27, %"class.std::__1::__bit_iterator.418"* nonnull %24, %"class.std::__1::__bit_iterator.418"* nonnull %25, %"class.std::__1::__bit_iterator.418"* nonnull %26) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %124) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %125) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %123) #8
  %200 = load i64, i64* %74, align 8
  %201 = and i64 %200, -16
  store i64 %201, i64* %74, align 8
  %202 = load i64, i64* %76, align 8
  %203 = add i64 %202, 32
  store i64 %203, i64* %76, align 8
  %204 = icmp ult i64 %203, 4
  br i1 %204, label %187, label %205

205:                                              ; preds = %199, %181, %193
  %206 = phi i64 [ %197, %193 ], [ %177, %181 ], [ %203, %199 ]
  %207 = phi i64 [ %198, %193 ], [ 0, %181 ], [ 0, %199 ]
  store i64 %207, i64* %75, align 8
  br label %133

208:                                              ; preds = %142
  %209 = getelementptr inbounds %"struct.dawn_native::BeginRenderPassCmd", %"struct.dawn_native::BeginRenderPassCmd"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %210 = load %"class.dawn_native::TextureViewBase"*, %"class.dawn_native::TextureViewBase"** %209, align 8
  %211 = call %"class.dawn_native::TextureBase"* @_ZN11dawn_native15TextureViewBase10GetTextureEv(%"class.dawn_native::TextureViewBase"* %210) #8
  %212 = bitcast %"class.dawn_native::TextureBase"* %211 to %"class.dawn_native::opengl::Texture"*
  %213 = call i32 @_ZNK11dawn_native6opengl7Texture9GetHandleEv(%"class.dawn_native::opengl::Texture"* %212) #8
  %214 = call %"class.dawn_native::TextureBase"* @_ZN11dawn_native15TextureViewBase10GetTextureEv(%"class.dawn_native::TextureViewBase"* %210) #8
  %215 = call dereferenceable(84) %"struct.dawn_native::Format"* @_ZNK11dawn_native11TextureBase9GetFormatEv(%"class.dawn_native::TextureBase"* %214) #8
  %216 = getelementptr inbounds %"struct.dawn_native::Format", %"struct.dawn_native::Format"* %215, i64 0, i32 5
  %217 = load i8, i8* %216, align 4
  switch i8 %217, label %218 [
    i8 6, label %221
    i8 2, label %220
  ]

218:                                              ; preds = %208
  %219 = icmp eq i8 %217, 4
  call void @llvm.assume(i1 %219)
  br label %221

220:                                              ; preds = %208
  br label %221

221:                                              ; preds = %208, %220, %218
  %222 = phi i32 [ 36128, %218 ], [ 33306, %208 ], [ 36096, %220 ]
  %223 = call %"class.dawn_native::TextureBase"* @_ZN11dawn_native15TextureViewBase10GetTextureEv(%"class.dawn_native::TextureViewBase"* %210) #8
  %224 = call i32 @_ZNK11dawn_native11TextureBase14GetArrayLayersEv(%"class.dawn_native::TextureBase"* %223) #8
  %225 = icmp eq i32 %224, 1
  br i1 %225, label %226, label %232

226:                                              ; preds = %221
  %227 = call %"class.dawn_native::TextureBase"* @_ZN11dawn_native15TextureViewBase10GetTextureEv(%"class.dawn_native::TextureViewBase"* %210) #8
  %228 = bitcast %"class.dawn_native::TextureBase"* %227 to %"class.dawn_native::opengl::Texture"*
  %229 = call i32 @_ZNK11dawn_native6opengl7Texture11GetGLTargetEv(%"class.dawn_native::opengl::Texture"* %228) #8
  %230 = load void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** %122, align 8
  %231 = call i32 @_ZNK11dawn_native15TextureViewBase15GetBaseMipLevelEv(%"class.dawn_native::TextureViewBase"* %210) #8
  call void %230(i32 36009, i32 %222, i32 %229, i32 %213, i32 %231) #8
  br label %236

232:                                              ; preds = %221
  %233 = load void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** %120, align 8
  %234 = call i32 @_ZNK11dawn_native15TextureViewBase15GetBaseMipLevelEv(%"class.dawn_native::TextureViewBase"* %210) #8
  %235 = call i32 @_ZNK11dawn_native15TextureViewBase17GetBaseArrayLayerEv(%"class.dawn_native::TextureViewBase"* %210) #8
  call void %233(i32 36009, i32 %222, i32 %213, i32 %234, i32 %235) #8
  br label %236

236:                                              ; preds = %226, %232, %142
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #8
  %237 = bitcast <4 x i32>* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %237) #8
  store <4 x i32> <i32 519, i32 519, i32 -1, i32 0>, <4 x i32>* %35, align 16
  call void @_ZN11dawn_native6opengl23PersistentPipelineState15SetDefaultStateERKNS0_15OpenGLFunctionsE(%"class.dawn_native::opengl::PersistentPipelineState"* nonnull %36, %"struct.dawn_native::opengl::OpenGLFunctions"* dereferenceable(5664) %59) #8
  %238 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %57, i64 1, i32 6
  %239 = bitcast void (i8*, i8*)** %238 to void (float, float, float, float)**
  %240 = load void (float, float, float, float)*, void (float, float, float, float)** %239, align 8
  call void %240(float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00) #8
  %241 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %57, i64 1, i32 18, i32 0, i64 11, i32 6, i32 0, i64 1, i32 3
  %242 = bitcast i32* %241 to void (i32, i32, i32, i32)**
  %243 = load void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** %242, align 8
  %244 = getelementptr inbounds %"struct.dawn_native::BeginRenderPassCmd", %"struct.dawn_native::BeginRenderPassCmd"* %2, i64 0, i32 3
  %245 = load i32, i32* %244, align 8
  %246 = getelementptr inbounds %"struct.dawn_native::BeginRenderPassCmd", %"struct.dawn_native::BeginRenderPassCmd"* %2, i64 0, i32 4
  %247 = load i32, i32* %246, align 4
  call void %243(i32 0, i32 0, i32 %245, i32 %247) #8
  %248 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %57, i64 1, i32 18, i32 0, i64 1, i32 6, i32 0, i64 1, i32 3
  %249 = bitcast i32* %248 to void (float, float)**
  %250 = load void (float, float)*, void (float, float)** %249, align 8
  call void %250(float 0.000000e+00, float 1.000000e+00) #8
  %251 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %57, i64 1, i32 18, i32 0, i64 7, i32 6, i32 0, i64 0, i32 3
  %252 = bitcast i32* %251 to void (i32, i32, i32, i32)**
  %253 = load void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** %252, align 8
  %254 = load i32, i32* %244, align 8
  %255 = load i32, i32* %246, align 4
  call void %253(i32 0, i32 0, i32 %254, i32 %255) #8
  %256 = load %"class.dawn_native::AttachmentState"*, %"class.dawn_native::AttachmentState"** %70, align 8
  %257 = call i64 @_ZNK11dawn_native15AttachmentState23GetColorAttachmentsMaskEv(%"class.dawn_native::AttachmentState"* %256) #8
  %258 = bitcast %"class.BitSetIterator<4, unsigned char>::Iterator"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %258) #8
  %259 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %37, i64 0, i32 0, i32 0, i32 0
  %260 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %37, i64 0, i32 1
  %261 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %37, i64 0, i32 2
  store i64 %257, i64* %259, align 8, !alias.scope !62
  %262 = bitcast i64* %260 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %262, i8 0, i64 16, i1 false) #8, !alias.scope !62
  %263 = and i64 %257, 15
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %298, label %265

265:                                              ; preds = %236
  %266 = ptrtoint %"class.BitSetIterator<4, unsigned char>::Iterator"* %37 to i64
  %267 = bitcast %"class.std::__1::__bit_iterator.418"* %23 to i8*
  %268 = bitcast %"class.std::__1::__bit_iterator.418"* %20 to i8*
  %269 = bitcast %"class.std::__1::__bit_iterator.418"* %21 to i8*
  %270 = bitcast %"class.std::__1::__bit_iterator.418"* %22 to i8*
  %271 = bitcast %"class.std::__1::__bit_iterator.418"* %20 to i64*
  %272 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %20, i64 0, i32 1
  %273 = bitcast %"class.std::__1::__bit_iterator.418"* %21 to i64*
  %274 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %21, i64 0, i32 1
  %275 = bitcast %"class.std::__1::__bit_iterator.418"* %22 to i64*
  %276 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %22, i64 0, i32 1
  br label %277

277:                                              ; preds = %289, %265
  %278 = phi i64 [ %257, %265 ], [ %291, %289 ]
  %279 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %280 = and i64 %279, %278
  %281 = and i64 %280, 4294967295
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %289, label %283

283:                                              ; preds = %277
  %284 = trunc i64 %280 to i32
  %285 = call i32 @_Z11ScanForwardj(i32 %284) #8
  %286 = zext i32 %285 to i64
  %287 = load i64, i64* %261, align 8, !alias.scope !62
  %288 = add i64 %287, %286
  br label %295

289:                                              ; preds = %277
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %267) #8, !noalias !62
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %268) #8, !noalias !62
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %269) #8, !noalias !62
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %270) #8, !noalias !62
  store i64 %266, i64* %271, align 8, !noalias !65
  store i32 4, i32* %272, align 8, !noalias !65
  store i64 %266, i64* %273, align 8, !noalias !65
  store i32 4, i32* %274, align 8, !noalias !65
  store i64 %266, i64* %275, align 8, !noalias !65
  store i32 0, i32* %276, align 8, !noalias !65
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.418"* nonnull sret %23, %"class.std::__1::__bit_iterator.418"* nonnull %20, %"class.std::__1::__bit_iterator.418"* nonnull %21, %"class.std::__1::__bit_iterator.418"* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %268) #8, !noalias !62
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %269) #8, !noalias !62
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %270) #8, !noalias !62
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %267) #8, !noalias !62
  %290 = load i64, i64* %259, align 8, !alias.scope !62
  %291 = and i64 %290, -16
  store i64 %291, i64* %259, align 8, !alias.scope !62
  %292 = load i64, i64* %261, align 8, !alias.scope !62
  %293 = add i64 %292, 32
  store i64 %293, i64* %261, align 8, !alias.scope !62
  %294 = icmp ult i64 %293, 4
  br i1 %294, label %277, label %295

295:                                              ; preds = %289, %283
  %296 = phi i64 [ %287, %283 ], [ %293, %289 ]
  %297 = phi i64 [ %288, %283 ], [ 0, %289 ]
  store i64 %297, i64* %260, align 8, !alias.scope !62
  br label %300

298:                                              ; preds = %236
  store i64 32, i64* %261, align 8, !alias.scope !62
  %299 = ptrtoint %"class.BitSetIterator<4, unsigned char>::Iterator"* %37 to i64
  br label %300

300:                                              ; preds = %295, %298
  %301 = phi i64 [ %266, %295 ], [ %299, %298 ]
  %302 = phi i64 [ %297, %295 ], [ 0, %298 ]
  %303 = phi i64 [ %296, %295 ], [ 32, %298 ]
  %304 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %57, i64 1, i32 18, i32 0, i64 0, i32 1
  %305 = bitcast i8* %304 to void (i8, i8, i8, i8)**
  %306 = bitcast { i64, i64 }* %40 to i8*
  %307 = bitcast { i64, i64 }* %40 to i32*
  %308 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %40, i64 0, i32 1
  %309 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %40, i64 0, i32 0
  %310 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %57, i64 1, i32 18, i32 0, i64 17, i32 5
  %311 = bitcast i8* %310 to void (i32, i32, i32*)**
  %312 = bitcast { i64, i64 }* %39 to i8*
  %313 = bitcast { i64, i64 }* %39 to i32*
  %314 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %39, i64 0, i32 1
  %315 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %39, i64 0, i32 0
  %316 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %57, i64 1, i32 18, i32 0, i64 17, i32 6, i32 0, i64 0, i32 0, i32 1
  %317 = bitcast i32* %316 to void (i32, i32, i32*)**
  %318 = bitcast { <2 x float>, <2 x float> }* %38 to i8*
  %319 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %38, i64 0, i32 0, i64 0
  %320 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %38, i64 0, i32 0
  %321 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %38, i64 0, i32 1
  %322 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %57, i64 1, i32 18, i32 0, i64 17, i32 6, i32 0, i64 0, i32 1
  %323 = bitcast i32* %322 to void (i32, i32, float*)**
  %324 = bitcast %"class.std::__1::__bit_iterator.418"* %18 to i8*
  %325 = bitcast %"class.std::__1::__bit_iterator.418"* %15 to i8*
  %326 = bitcast %"class.std::__1::__bit_iterator.418"* %16 to i8*
  %327 = bitcast %"class.std::__1::__bit_iterator.418"* %17 to i8*
  %328 = bitcast %"class.std::__1::__bit_iterator.418"* %15 to i64*
  %329 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %15, i64 0, i32 1
  %330 = bitcast %"class.std::__1::__bit_iterator.418"* %16 to i64*
  %331 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %16, i64 0, i32 1
  %332 = bitcast %"class.std::__1::__bit_iterator.418"* %17 to i64*
  %333 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %17, i64 0, i32 1
  %334 = bitcast { i64, i64 }* %40 to i8*
  %335 = bitcast { i64, i64 }* %39 to i8*
  %336 = bitcast { <2 x float>, <2 x float> }* %38 to i8*
  br label %337

337:                                              ; preds = %413, %300
  %338 = phi i64 [ %415, %413 ], [ %302, %300 ]
  %339 = phi i64 [ %414, %413 ], [ %303, %300 ]
  %340 = icmp eq i64 %339, 32
  br i1 %340, label %341, label %348

341:                                              ; preds = %337
  %342 = load i64, i64* %259, align 8
  %343 = and i64 %342, 15
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %348

345:                                              ; preds = %341
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %258) #8
  %346 = load %"class.dawn_native::AttachmentState"*, %"class.dawn_native::AttachmentState"** %70, align 8
  %347 = call zeroext i1 @_ZNK11dawn_native15AttachmentState25HasDepthStencilAttachmentEv(%"class.dawn_native::AttachmentState"* %346) #8
  br i1 %347, label %416, label %464

348:                                              ; preds = %341, %337
  %349 = trunc i64 %338 to i32
  %350 = and i64 %338, 255
  %351 = getelementptr inbounds %"struct.dawn_native::BeginRenderPassCmd", %"struct.dawn_native::BeginRenderPassCmd"* %2, i64 0, i32 1, i32 0, i32 0, i64 %350, i32 2
  %352 = load i32, i32* %351, align 8
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %383

354:                                              ; preds = %348
  %355 = load void (i8, i8, i8, i8)*, void (i8, i8, i8, i8)** %305, align 8
  call void %355(i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1) #8
  %356 = getelementptr inbounds %"struct.dawn_native::BeginRenderPassCmd", %"struct.dawn_native::BeginRenderPassCmd"* %2, i64 0, i32 1, i32 0, i32 0, i64 %350, i32 0, i32 0, i32 0
  %357 = load %"class.dawn_native::TextureViewBase"*, %"class.dawn_native::TextureViewBase"** %356, align 8
  %358 = call dereferenceable(84) %"struct.dawn_native::Format"* @_ZNK11dawn_native15TextureViewBase9GetFormatEv(%"class.dawn_native::TextureViewBase"* %357) #8
  %359 = call dereferenceable(24) %"struct.dawn_native::AspectInfo"* @_ZNK11dawn_native6Format13GetAspectInfoENS_6AspectE(%"struct.dawn_native::Format"* %358, i8 zeroext 1) #8
  %360 = getelementptr inbounds %"struct.dawn_native::AspectInfo", %"struct.dawn_native::AspectInfo"* %359, i64 0, i32 1
  %361 = load i32, i32* %360, align 4
  switch i32 %361, label %383 [
    i32 0, label %362
    i32 2, label %369
    i32 1, label %376
  ]

362:                                              ; preds = %354
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %318) #8
  %363 = getelementptr inbounds %"struct.dawn_native::BeginRenderPassCmd", %"struct.dawn_native::BeginRenderPassCmd"* %2, i64 0, i32 1, i32 0, i32 0, i64 %350, i32 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %336, i8 -1, i64 16, i1 false)
  %364 = call { <2 x float>, <2 x float> } @_ZN11dawn_native19ConvertToFloatColorENS_5ColorE(%"struct.dawn_native::Color"* nonnull byval(%"struct.dawn_native::Color") align 8 %363) #8
  %365 = extractvalue { <2 x float>, <2 x float> } %364, 0
  store <2 x float> %365, <2 x float>* %320, align 8
  %366 = extractvalue { <2 x float>, <2 x float> } %364, 1
  store <2 x float> %366, <2 x float>* %321, align 8
  %367 = load void (i32, i32, float*)*, void (i32, i32, float*)** %323, align 8
  %368 = and i32 %349, 255
  call void %367(i32 6144, i32 %368, float* nonnull %319) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %318) #8
  br label %383

369:                                              ; preds = %354
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %312) #8
  %370 = getelementptr inbounds %"struct.dawn_native::BeginRenderPassCmd", %"struct.dawn_native::BeginRenderPassCmd"* %2, i64 0, i32 1, i32 0, i32 0, i64 %350, i32 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %335, i8 -86, i64 16, i1 false)
  %371 = call { i64, i64 } @_ZN11dawn_native29ConvertToUnsignedIntegerColorENS_5ColorE(%"struct.dawn_native::Color"* nonnull byval(%"struct.dawn_native::Color") align 8 %370) #8
  %372 = extractvalue { i64, i64 } %371, 0
  store i64 %372, i64* %315, align 8
  %373 = extractvalue { i64, i64 } %371, 1
  store i64 %373, i64* %314, align 8
  %374 = load void (i32, i32, i32*)*, void (i32, i32, i32*)** %317, align 8
  %375 = and i32 %349, 255
  call void %374(i32 6144, i32 %375, i32* nonnull %313) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %312) #8
  br label %383

376:                                              ; preds = %354
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %306) #8
  %377 = getelementptr inbounds %"struct.dawn_native::BeginRenderPassCmd", %"struct.dawn_native::BeginRenderPassCmd"* %2, i64 0, i32 1, i32 0, i32 0, i64 %350, i32 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %334, i8 -86, i64 16, i1 false)
  %378 = call { i64, i64 } @_ZN11dawn_native27ConvertToSignedIntegerColorENS_5ColorE(%"struct.dawn_native::Color"* nonnull byval(%"struct.dawn_native::Color") align 8 %377) #8
  %379 = extractvalue { i64, i64 } %378, 0
  store i64 %379, i64* %309, align 8
  %380 = extractvalue { i64, i64 } %378, 1
  store i64 %380, i64* %308, align 8
  %381 = load void (i32, i32, i32*)*, void (i32, i32, i32*)** %311, align 8
  %382 = and i32 %349, 255
  call void %381(i32 6144, i32 %382, i32* nonnull %307) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %306) #8
  br label %383

383:                                              ; preds = %362, %369, %376, %354, %348
  %384 = load i64, i64* %260, align 8
  %385 = load i64, i64* %261, align 8
  %386 = sub i64 %384, %385
  %387 = icmp ugt i64 %386, 3
  br i1 %387, label %388, label %389

388:                                              ; preds = %383
  call void @abort() #10
  unreachable

389:                                              ; preds = %383
  %390 = shl i64 1, %386
  %391 = xor i64 %390, -1
  %392 = load i64, i64* %259, align 8
  %393 = and i64 %392, %391
  store i64 %393, i64* %259, align 8
  %394 = icmp ult i64 %385, 4
  br i1 %394, label %395, label %413

395:                                              ; preds = %389, %407
  %396 = phi i64 [ %409, %407 ], [ %393, %389 ]
  %397 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %398 = and i64 %397, %396
  %399 = and i64 %398, 4294967295
  %400 = icmp eq i64 %399, 0
  br i1 %400, label %407, label %401

401:                                              ; preds = %395
  %402 = trunc i64 %398 to i32
  %403 = call i32 @_Z11ScanForwardj(i32 %402) #8
  %404 = zext i32 %403 to i64
  %405 = load i64, i64* %261, align 8
  %406 = add i64 %405, %404
  br label %413

407:                                              ; preds = %395
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %324) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %325) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %326) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %327) #8
  store i64 %301, i64* %328, align 8, !noalias !68
  store i32 4, i32* %329, align 8, !noalias !68
  store i64 %301, i64* %330, align 8, !noalias !68
  store i32 4, i32* %331, align 8, !noalias !68
  store i64 %301, i64* %332, align 8, !noalias !68
  store i32 0, i32* %333, align 8, !noalias !68
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.418"* nonnull sret %18, %"class.std::__1::__bit_iterator.418"* nonnull %15, %"class.std::__1::__bit_iterator.418"* nonnull %16, %"class.std::__1::__bit_iterator.418"* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %325) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %326) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %327) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %324) #8
  %408 = load i64, i64* %259, align 8
  %409 = and i64 %408, -16
  store i64 %409, i64* %259, align 8
  %410 = load i64, i64* %261, align 8
  %411 = add i64 %410, 32
  store i64 %411, i64* %261, align 8
  %412 = icmp ult i64 %411, 4
  br i1 %412, label %395, label %413

413:                                              ; preds = %407, %389, %401
  %414 = phi i64 [ %405, %401 ], [ %385, %389 ], [ %411, %407 ]
  %415 = phi i64 [ %406, %401 ], [ 0, %389 ], [ 0, %407 ]
  store i64 %415, i64* %260, align 8
  br label %337

416:                                              ; preds = %345
  %417 = getelementptr inbounds %"struct.dawn_native::BeginRenderPassCmd", %"struct.dawn_native::BeginRenderPassCmd"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %418 = load %"class.dawn_native::TextureViewBase"*, %"class.dawn_native::TextureViewBase"** %417, align 8
  %419 = call %"class.dawn_native::TextureBase"* @_ZN11dawn_native15TextureViewBase10GetTextureEv(%"class.dawn_native::TextureViewBase"* %418) #8
  %420 = call dereferenceable(84) %"struct.dawn_native::Format"* @_ZNK11dawn_native11TextureBase9GetFormatEv(%"class.dawn_native::TextureBase"* %419) #8
  %421 = call zeroext i1 @_ZNK11dawn_native6Format8HasDepthEv(%"struct.dawn_native::Format"* %420) #8
  br i1 %421, label %422, label %426

422:                                              ; preds = %416
  %423 = getelementptr inbounds %"struct.dawn_native::BeginRenderPassCmd", %"struct.dawn_native::BeginRenderPassCmd"* %2, i64 0, i32 2, i32 1
  %424 = load i32, i32* %423, align 8
  %425 = icmp eq i32 %424, 0
  br label %426

426:                                              ; preds = %422, %416
  %427 = phi i1 [ false, %416 ], [ %425, %422 ]
  %428 = call zeroext i1 @_ZNK11dawn_native6Format10HasStencilEv(%"struct.dawn_native::Format"* %420) #8
  br i1 %428, label %429, label %433

429:                                              ; preds = %426
  %430 = getelementptr inbounds %"struct.dawn_native::BeginRenderPassCmd", %"struct.dawn_native::BeginRenderPassCmd"* %2, i64 0, i32 2, i32 3
  %431 = load i32, i32* %430, align 8
  %432 = icmp eq i32 %431, 0
  br label %433

433:                                              ; preds = %429, %426
  %434 = phi i1 [ false, %426 ], [ %432, %429 ]
  br i1 %427, label %435, label %439

435:                                              ; preds = %433
  %436 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %57, i64 1, i32 18, i32 0, i64 1, i32 6, i32 0, i64 1, i32 1
  %437 = bitcast i32* %436 to void (i8)**
  %438 = load void (i8)*, void (i8)** %437, align 8
  call void %438(i8 zeroext 1) #8
  br label %439

439:                                              ; preds = %435, %433
  br i1 %434, label %440, label %455

440:                                              ; preds = %439
  %441 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %57, i64 1, i32 18, i32 0, i64 7, i32 6, i32 0, i64 2, i32 1
  %442 = bitcast i32* %441 to void (i32)**
  %443 = load void (i32)*, void (i32)** %442, align 8
  %444 = getelementptr inbounds %"struct.dawn_native::Format", %"struct.dawn_native::Format"* %420, i64 0, i32 0
  %445 = load i32, i32* %444, align 4
  %446 = call i32 @_ZN11dawn_native6opengl31GetStencilMaskFromStencilFormatEN4wgpu13TextureFormatE(i32 %445) #8
  call void %443(i32 %446) #8
  br i1 %427, label %447, label %459

447:                                              ; preds = %440
  %448 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %57, i64 1, i32 18, i32 0, i64 17, i32 6, i32 0, i64 0, i32 3
  %449 = bitcast i32* %448 to void (i32, i32, float, i32)**
  %450 = load void (i32, i32, float, i32)*, void (i32, i32, float, i32)** %449, align 8
  %451 = getelementptr inbounds %"struct.dawn_native::BeginRenderPassCmd", %"struct.dawn_native::BeginRenderPassCmd"* %2, i64 0, i32 2, i32 5
  %452 = load float, float* %451, align 8
  %453 = getelementptr inbounds %"struct.dawn_native::BeginRenderPassCmd", %"struct.dawn_native::BeginRenderPassCmd"* %2, i64 0, i32 2, i32 6
  %454 = load i32, i32* %453, align 4
  call void %450(i32 34041, i32 0, float %452, i32 %454) #8
  br label %464

455:                                              ; preds = %439
  br i1 %427, label %456, label %464

456:                                              ; preds = %455
  %457 = load void (i32, i32, float*)*, void (i32, i32, float*)** %323, align 8
  %458 = getelementptr inbounds %"struct.dawn_native::BeginRenderPassCmd", %"struct.dawn_native::BeginRenderPassCmd"* %2, i64 0, i32 2, i32 5
  call void %457(i32 6145, i32 0, float* %458) #8
  br label %464

459:                                              ; preds = %440
  %460 = bitcast i32* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %460) #8
  %461 = getelementptr inbounds %"struct.dawn_native::BeginRenderPassCmd", %"struct.dawn_native::BeginRenderPassCmd"* %2, i64 0, i32 2, i32 6
  %462 = load i32, i32* %461, align 4
  store i32 %462, i32* %41, align 4
  %463 = load void (i32, i32, i32*)*, void (i32, i32, i32*)** %311, align 8
  call void %463(i32 6146, i32 0, i32* nonnull %41) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %460) #8
  br label %464

464:                                              ; preds = %455, %447, %459, %456, %345
  %465 = bitcast %"class.dawn_native::opengl::RenderPipeline"** %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %465) #8
  store %"class.dawn_native::opengl::RenderPipeline"* null, %"class.dawn_native::opengl::RenderPipeline"** %42, align 8
  %466 = bitcast i64* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %466) #8
  store i64 0, i64* %43, align 8
  %467 = bitcast i32* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %467) #8
  store i32 -1431655766, i32* %44, align 4
  %468 = bitcast i32* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %468) #8
  store i32 -1431655766, i32* %45, align 4
  %469 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker", %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* %46, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %469) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %469, i8 -86, i64 152, i1 false)
  store i8 0, i8* %469, align 8
  %470 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker", %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* %46, i64 0, i32 1
  %471 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker", %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* %46, i64 0, i32 5
  store %"class.dawn_native::RenderPipelineBase"* null, %"class.dawn_native::RenderPipelineBase"** %471, align 8
  %472 = bitcast %"class.dawn_native::opengl::Buffer"** %470 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %472, i8 0, i64 16, i1 false) #8
  %473 = bitcast %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 480, i8* nonnull %473) #8
  %474 = bitcast %class.anon.407* %48 to i8*
  %475 = bitcast %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %475, i8 0, i64 480, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %474) #8
  %476 = getelementptr inbounds %class.anon.407, %class.anon.407* %48, i64 0, i32 0
  store %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* %46, %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"** %476, align 8
  %477 = getelementptr inbounds %class.anon.407, %class.anon.407* %48, i64 0, i32 1
  %478 = bitcast %"struct.dawn_native::opengl::OpenGLFunctions"** %477 to %"class.dawn_native::DeviceBase"**
  store %"class.dawn_native::DeviceBase"* %58, %"class.dawn_native::DeviceBase"** %478, align 8
  %479 = getelementptr inbounds %class.anon.407, %class.anon.407* %48, i64 0, i32 2
  store %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %47, %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"** %479, align 8
  %480 = getelementptr inbounds %class.anon.407, %class.anon.407* %48, i64 0, i32 3
  store %"class.dawn_native::opengl::RenderPipeline"** %42, %"class.dawn_native::opengl::RenderPipeline"*** %480, align 8
  %481 = getelementptr inbounds %class.anon.407, %class.anon.407* %48, i64 0, i32 4
  store i32* %44, i32** %481, align 8
  %482 = getelementptr inbounds %class.anon.407, %class.anon.407* %48, i64 0, i32 5
  store i32* %45, i32** %482, align 8
  %483 = getelementptr inbounds %class.anon.407, %class.anon.407* %48, i64 0, i32 6
  store i64* %43, i64** %483, align 8
  %484 = getelementptr inbounds %class.anon.407, %class.anon.407* %48, i64 0, i32 7
  %485 = bitcast %"class.dawn_native::opengl::PersistentPipelineState"** %484 to <4 x i32>**
  store <4 x i32>* %35, <4 x i32>** %485, align 8
  %486 = bitcast i32* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %486) #8
  store i32 -1431655766, i32* %49, align 4
  %487 = getelementptr inbounds %"class.dawn_native::opengl::CommandBuffer", %"class.dawn_native::opengl::CommandBuffer"* %1, i64 0, i32 0, i32 1
  %488 = getelementptr inbounds %"class.dawn_native::opengl::CommandBuffer", %"class.dawn_native::opengl::CommandBuffer"* %1, i64 0, i32 0, i32 1, i32 1
  %489 = bitcast i8** %488 to i64*
  %490 = bitcast i32* %19 to i8*
  %491 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %57, i64 1, i32 18, i32 0, i64 49, i32 6, i32 0, i64 2, i32 3
  %492 = bitcast i32* %491 to void (i32, float, float, float, float)**
  br label %493

493:                                              ; preds = %779, %464
  %494 = load i64, i64* %489, align 8
  %495 = add i64 %494, 3
  %496 = and i64 %495, -4
  %497 = inttoptr i64 %496 to i32*
  %498 = load i32, i32* %497, align 4
  %499 = icmp eq i32 %498, -1
  br i1 %499, label %503, label %500

500:                                              ; preds = %493
  %501 = inttoptr i64 %496 to i8*
  %502 = getelementptr inbounds i8, i8* %501, i64 4
  store i8* %502, i8** %488, align 8
  store i32 %498, i32* %49, align 4
  br label %506

503:                                              ; preds = %493
  %504 = call zeroext i1 @_ZN11dawn_native15CommandIterator23NextCommandIdInNewBlockEPj(%"class.dawn_native::CommandIterator"* %487, i32* nonnull %49) #8
  %505 = load i32, i32* %49, align 4
  br label %506

506:                                              ; preds = %500, %503
  %507 = phi i32 [ %498, %500 ], [ %505, %503 ]
  %508 = phi i1 [ true, %500 ], [ %504, %503 ]
  call void @llvm.assume(i1 %508)
  switch i32 %507, label %883 [
    i32 15, label %509
    i32 23, label %672
    i32 24, label %681
    i32 25, label %719
    i32 26, label %735
    i32 16, label %750
    i32 1, label %808
    i32 14, label %833
    i32 30, label %858
  ]

509:                                              ; preds = %506
  %510 = load i8*, i8** %488, align 8
  %511 = getelementptr inbounds i8, i8* %510, i64 1
  store i8* %511, i8** %488, align 8
  %512 = load %"class.dawn_native::AttachmentState"*, %"class.dawn_native::AttachmentState"** %70, align 8
  %513 = call i32 @_ZNK11dawn_native15AttachmentState14GetSampleCountEv(%"class.dawn_native::AttachmentState"* %512) #8
  %514 = icmp ugt i32 %513, 1
  br i1 %514, label %515, label %667

515:                                              ; preds = %509
  %516 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %516) #8
  store i32 0, i32* %12, align 4
  %517 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %517) #8
  store i32 0, i32* %13, align 4
  %518 = load %"class.dawn_native::AttachmentState"*, %"class.dawn_native::AttachmentState"** %70, align 8
  %519 = call i64 @_ZNK11dawn_native15AttachmentState23GetColorAttachmentsMaskEv(%"class.dawn_native::AttachmentState"* %518) #8
  %520 = bitcast %"class.BitSetIterator<4, unsigned char>::Iterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %520) #8
  %521 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %14, i64 0, i32 0, i32 0, i32 0
  %522 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %14, i64 0, i32 1
  %523 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %14, i64 0, i32 2
  store i64 %519, i64* %521, align 8, !alias.scope !71
  %524 = bitcast i64* %522 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %524, i8 0, i64 16, i1 false) #8, !alias.scope !71
  %525 = and i64 %519, 15
  %526 = icmp eq i64 %525, 0
  br i1 %526, label %560, label %527

527:                                              ; preds = %515
  %528 = ptrtoint %"class.BitSetIterator<4, unsigned char>::Iterator"* %14 to i64
  %529 = bitcast %"class.std::__1::__bit_iterator.418"* %7 to i8*
  %530 = bitcast %"class.std::__1::__bit_iterator.418"* %4 to i8*
  %531 = bitcast %"class.std::__1::__bit_iterator.418"* %5 to i8*
  %532 = bitcast %"class.std::__1::__bit_iterator.418"* %6 to i8*
  %533 = bitcast %"class.std::__1::__bit_iterator.418"* %4 to i64*
  %534 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %4, i64 0, i32 1
  %535 = bitcast %"class.std::__1::__bit_iterator.418"* %5 to i64*
  %536 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %5, i64 0, i32 1
  %537 = bitcast %"class.std::__1::__bit_iterator.418"* %6 to i64*
  %538 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %6, i64 0, i32 1
  br label %539

539:                                              ; preds = %551, %527
  %540 = phi i64 [ %519, %527 ], [ %553, %551 ]
  %541 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %542 = and i64 %541, %540
  %543 = and i64 %542, 4294967295
  %544 = icmp eq i64 %543, 0
  br i1 %544, label %551, label %545

545:                                              ; preds = %539
  %546 = trunc i64 %542 to i32
  %547 = call i32 @_Z11ScanForwardj(i32 %546) #8
  %548 = zext i32 %547 to i64
  %549 = load i64, i64* %523, align 8, !alias.scope !71
  %550 = add i64 %549, %548
  br label %557

551:                                              ; preds = %539
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %529) #8, !noalias !71
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %530) #8, !noalias !71
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %531) #8, !noalias !71
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %532) #8, !noalias !71
  store i64 %528, i64* %533, align 8, !noalias !74
  store i32 4, i32* %534, align 8, !noalias !74
  store i64 %528, i64* %535, align 8, !noalias !74
  store i32 4, i32* %536, align 8, !noalias !74
  store i64 %528, i64* %537, align 8, !noalias !74
  store i32 0, i32* %538, align 8, !noalias !74
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.418"* nonnull sret %7, %"class.std::__1::__bit_iterator.418"* nonnull %4, %"class.std::__1::__bit_iterator.418"* nonnull %5, %"class.std::__1::__bit_iterator.418"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %530) #8, !noalias !71
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %531) #8, !noalias !71
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %532) #8, !noalias !71
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %529) #8, !noalias !71
  %552 = load i64, i64* %521, align 8, !alias.scope !71
  %553 = and i64 %552, -16
  store i64 %553, i64* %521, align 8, !alias.scope !71
  %554 = load i64, i64* %523, align 8, !alias.scope !71
  %555 = add i64 %554, 32
  store i64 %555, i64* %523, align 8, !alias.scope !71
  %556 = icmp ult i64 %555, 4
  br i1 %556, label %539, label %557

557:                                              ; preds = %551, %545
  %558 = phi i64 [ %549, %545 ], [ %555, %551 ]
  %559 = phi i64 [ %550, %545 ], [ 0, %551 ]
  store i64 %559, i64* %522, align 8, !alias.scope !71
  br label %562

560:                                              ; preds = %515
  store i64 32, i64* %523, align 8, !alias.scope !71
  %561 = ptrtoint %"class.BitSetIterator<4, unsigned char>::Iterator"* %14 to i64
  br label %562

562:                                              ; preds = %560, %557
  %563 = phi i64 [ %528, %557 ], [ %561, %560 ]
  %564 = phi i64 [ %559, %557 ], [ 0, %560 ]
  %565 = phi i64 [ %558, %557 ], [ 32, %560 ]
  %566 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %57, i64 1, i32 18, i32 0, i64 13, i32 6, i32 0, i64 2, i32 3
  %567 = bitcast i32* %566 to void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)**
  %568 = bitcast %"class.std::__1::__bit_iterator.418"* %11 to i8*
  %569 = bitcast %"class.std::__1::__bit_iterator.418"* %8 to i8*
  %570 = bitcast %"class.std::__1::__bit_iterator.418"* %9 to i8*
  %571 = bitcast %"class.std::__1::__bit_iterator.418"* %10 to i8*
  %572 = bitcast %"class.std::__1::__bit_iterator.418"* %8 to i64*
  %573 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %8, i64 0, i32 1
  %574 = bitcast %"class.std::__1::__bit_iterator.418"* %9 to i64*
  %575 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %9, i64 0, i32 1
  %576 = bitcast %"class.std::__1::__bit_iterator.418"* %10 to i64*
  %577 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %10, i64 0, i32 1
  br label %578

578:                                              ; preds = %659, %562
  %579 = phi i64 [ %660, %659 ], [ %565, %562 ]
  %580 = phi i64 [ %661, %659 ], [ %564, %562 ]
  %581 = icmp eq i64 %579, 32
  br i1 %581, label %582, label %586

582:                                              ; preds = %578
  %583 = load i64, i64* %521, align 8
  %584 = and i64 %583, 15
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %662, label %586

586:                                              ; preds = %582, %578
  %587 = and i64 %580, 255
  %588 = getelementptr inbounds %"struct.dawn_native::BeginRenderPassCmd", %"struct.dawn_native::BeginRenderPassCmd"* %2, i64 0, i32 1, i32 0, i32 0, i64 %587, i32 1, i32 0, i32 0
  %589 = load %"class.dawn_native::TextureViewBase"*, %"class.dawn_native::TextureViewBase"** %588, align 8
  %590 = icmp eq %"class.dawn_native::TextureViewBase"* %589, null
  br i1 %590, label %629, label %591

591:                                              ; preds = %586
  %592 = load i32, i32* %12, align 4
  %593 = icmp eq i32 %592, 0
  br i1 %593, label %594, label %597

594:                                              ; preds = %591
  %595 = load void (i32, i32*)*, void (i32, i32*)** %65, align 8
  call void %595(i32 1, i32* nonnull %12) #8
  %596 = load void (i32, i32*)*, void (i32, i32*)** %65, align 8
  call void %596(i32 1, i32* nonnull %13) #8
  br label %597

597:                                              ; preds = %594, %591
  %598 = getelementptr inbounds %"struct.dawn_native::BeginRenderPassCmd", %"struct.dawn_native::BeginRenderPassCmd"* %2, i64 0, i32 1, i32 0, i32 0, i64 %587, i32 0, i32 0, i32 0
  %599 = load %"class.dawn_native::TextureViewBase"*, %"class.dawn_native::TextureViewBase"** %598, align 8
  %600 = call %"class.dawn_native::TextureBase"* @_ZN11dawn_native15TextureViewBase10GetTextureEv(%"class.dawn_native::TextureViewBase"* %599) #8
  %601 = bitcast %"class.dawn_native::TextureBase"* %600 to %"class.dawn_native::opengl::Texture"*
  %602 = call i32 @_ZNK11dawn_native6opengl7Texture9GetHandleEv(%"class.dawn_native::opengl::Texture"* %601) #8
  %603 = load void (i32, i32)*, void (i32, i32)** %62, align 8
  %604 = load i32, i32* %12, align 4
  call void %603(i32 36008, i32 %604) #8
  %605 = load void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** %122, align 8
  %606 = call i32 @_ZNK11dawn_native6opengl7Texture11GetGLTargetEv(%"class.dawn_native::opengl::Texture"* %601) #8
  call void %605(i32 36008, i32 36064, i32 %606, i32 %602, i32 0) #8
  %607 = load %"class.dawn_native::TextureViewBase"*, %"class.dawn_native::TextureViewBase"** %588, align 8
  %608 = call %"class.dawn_native::TextureBase"* @_ZN11dawn_native15TextureViewBase10GetTextureEv(%"class.dawn_native::TextureViewBase"* %607) #8
  %609 = bitcast %"class.dawn_native::TextureBase"* %608 to %"class.dawn_native::opengl::Texture"*
  %610 = call i32 @_ZNK11dawn_native6opengl7Texture9GetHandleEv(%"class.dawn_native::opengl::Texture"* %609) #8
  %611 = load %"class.dawn_native::TextureViewBase"*, %"class.dawn_native::TextureViewBase"** %588, align 8
  %612 = call i32 @_ZNK11dawn_native15TextureViewBase15GetBaseMipLevelEv(%"class.dawn_native::TextureViewBase"* %611) #8
  %613 = load void (i32, i32)*, void (i32, i32)** %62, align 8
  %614 = load i32, i32* %13, align 4
  call void %613(i32 36009, i32 %614) #8
  %615 = call i32 @_ZNK11dawn_native11TextureBase14GetArrayLayersEv(%"class.dawn_native::TextureBase"* %608) #8
  %616 = icmp eq i32 %615, 1
  br i1 %616, label %617, label %619

617:                                              ; preds = %597
  %618 = load void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** %122, align 8
  call void %618(i32 36009, i32 36064, i32 3553, i32 %610, i32 %612) #8
  br label %623

619:                                              ; preds = %597
  %620 = load %"class.dawn_native::TextureViewBase"*, %"class.dawn_native::TextureViewBase"** %588, align 8
  %621 = call i32 @_ZNK11dawn_native15TextureViewBase17GetBaseArrayLayerEv(%"class.dawn_native::TextureViewBase"* %620) #8
  %622 = load void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** %120, align 8
  call void %622(i32 36009, i32 36064, i32 %610, i32 %612, i32 %621) #8
  br label %623

623:                                              ; preds = %619, %617
  %624 = load void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)** %567, align 8
  %625 = load i32, i32* %244, align 8
  %626 = load i32, i32* %246, align 4
  call void %624(i32 0, i32 0, i32 %625, i32 %626, i32 0, i32 0, i32 %625, i32 %626, i32 16384, i32 9728) #8
  %627 = load i64, i64* %522, align 8
  %628 = load i64, i64* %523, align 8
  br label %629

629:                                              ; preds = %623, %586
  %630 = phi i64 [ %579, %586 ], [ %628, %623 ]
  %631 = phi i64 [ %580, %586 ], [ %627, %623 ]
  %632 = sub i64 %631, %630
  %633 = icmp ugt i64 %632, 3
  br i1 %633, label %634, label %635

634:                                              ; preds = %629
  call void @abort() #10
  unreachable

635:                                              ; preds = %629
  %636 = shl i64 1, %632
  %637 = xor i64 %636, -1
  %638 = load i64, i64* %521, align 8
  %639 = and i64 %638, %637
  store i64 %639, i64* %521, align 8
  %640 = icmp ult i64 %630, 4
  br i1 %640, label %641, label %659

641:                                              ; preds = %635, %653
  %642 = phi i64 [ %655, %653 ], [ %639, %635 ]
  %643 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %644 = and i64 %643, %642
  %645 = and i64 %644, 4294967295
  %646 = icmp eq i64 %645, 0
  br i1 %646, label %653, label %647

647:                                              ; preds = %641
  %648 = trunc i64 %644 to i32
  %649 = call i32 @_Z11ScanForwardj(i32 %648) #8
  %650 = zext i32 %649 to i64
  %651 = load i64, i64* %523, align 8
  %652 = add i64 %651, %650
  br label %659

653:                                              ; preds = %641
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %568) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %569) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %570) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %571) #8
  store i64 %563, i64* %572, align 8, !noalias !77
  store i32 4, i32* %573, align 8, !noalias !77
  store i64 %563, i64* %574, align 8, !noalias !77
  store i32 4, i32* %575, align 8, !noalias !77
  store i64 %563, i64* %576, align 8, !noalias !77
  store i32 0, i32* %577, align 8, !noalias !77
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.418"* nonnull sret %11, %"class.std::__1::__bit_iterator.418"* nonnull %8, %"class.std::__1::__bit_iterator.418"* nonnull %9, %"class.std::__1::__bit_iterator.418"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %569) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %570) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %571) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %568) #8
  %654 = load i64, i64* %521, align 8
  %655 = and i64 %654, -16
  store i64 %655, i64* %521, align 8
  %656 = load i64, i64* %523, align 8
  %657 = add i64 %656, 32
  store i64 %657, i64* %523, align 8
  %658 = icmp ult i64 %657, 4
  br i1 %658, label %641, label %659

659:                                              ; preds = %653, %647, %635
  %660 = phi i64 [ %651, %647 ], [ %630, %635 ], [ %657, %653 ]
  %661 = phi i64 [ %652, %647 ], [ 0, %635 ], [ 0, %653 ]
  store i64 %661, i64* %522, align 8
  br label %578

662:                                              ; preds = %582
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %520) #8
  %663 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %57, i64 1, i32 18, i32 0, i64 1
  %664 = bitcast %"struct.dawn_native::Format"* %663 to void (i32, i32*)**
  %665 = load void (i32, i32*)*, void (i32, i32*)** %664, align 8
  call void %665(i32 1, i32* nonnull %12) #8
  %666 = load void (i32, i32*)*, void (i32, i32*)** %664, align 8
  call void %666(i32 1, i32* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %517) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %516) #8
  br label %667

667:                                              ; preds = %509, %662
  %668 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %57, i64 1, i32 18, i32 0, i64 1
  %669 = bitcast %"struct.dawn_native::Format"* %668 to void (i32, i32*)**
  %670 = load void (i32, i32*)*, void (i32, i32*)** %669, align 8
  call void %670(i32 1, i32* nonnull %32) #8
  %671 = bitcast %class.Result* %0 to i64*
  store i64 0, i64* %671, align 8
  br label %884

672:                                              ; preds = %506
  %673 = load i64, i64* %489, align 8
  %674 = add i64 %673, 3
  %675 = and i64 %674, -4
  %676 = inttoptr i64 %675 to i8*
  %677 = getelementptr inbounds i8, i8* %676, i64 4
  store i8* %677, i8** %488, align 8
  %678 = inttoptr i64 %675 to %"struct.dawn_native::SetStencilReferenceCmd"*
  %679 = getelementptr inbounds %"struct.dawn_native::SetStencilReferenceCmd", %"struct.dawn_native::SetStencilReferenceCmd"* %678, i64 0, i32 0
  %680 = load i32, i32* %679, align 4
  call void @_ZN11dawn_native6opengl23PersistentPipelineState19SetStencilReferenceERKNS0_15OpenGLFunctionsEj(%"class.dawn_native::opengl::PersistentPipelineState"* nonnull %36, %"struct.dawn_native::opengl::OpenGLFunctions"* dereferenceable(5664) %59, i32 %680) #8
  br label %779

681:                                              ; preds = %506
  %682 = load i64, i64* %489, align 8
  %683 = add i64 %682, 3
  %684 = and i64 %683, -4
  %685 = inttoptr i64 %684 to i8*
  %686 = getelementptr inbounds i8, i8* %685, i64 24
  store i8* %686, i8** %488, align 8
  %687 = inttoptr i64 %684 to %"struct.dawn_native::SetViewportCmd"*
  %688 = call zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions11IsAtLeastGLEjj(%"struct.dawn_native::opengl::OpenGLFunctions"* %59, i32 4, i32 1) #8
  br i1 %688, label %689, label %699

689:                                              ; preds = %681
  %690 = load void (i32, float, float, float, float)*, void (i32, float, float, float, float)** %492, align 8
  %691 = getelementptr inbounds %"struct.dawn_native::SetViewportCmd", %"struct.dawn_native::SetViewportCmd"* %687, i64 0, i32 0
  %692 = load float, float* %691, align 4
  %693 = getelementptr inbounds %"struct.dawn_native::SetViewportCmd", %"struct.dawn_native::SetViewportCmd"* %687, i64 0, i32 1
  %694 = load float, float* %693, align 4
  %695 = getelementptr inbounds %"struct.dawn_native::SetViewportCmd", %"struct.dawn_native::SetViewportCmd"* %687, i64 0, i32 2
  %696 = load float, float* %695, align 4
  %697 = getelementptr inbounds %"struct.dawn_native::SetViewportCmd", %"struct.dawn_native::SetViewportCmd"* %687, i64 0, i32 3
  %698 = load float, float* %697, align 4
  call void %690(i32 0, float %692, float %694, float %696, float %698) #8
  br label %713

699:                                              ; preds = %681
  %700 = load void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** %242, align 8
  %701 = getelementptr inbounds %"struct.dawn_native::SetViewportCmd", %"struct.dawn_native::SetViewportCmd"* %687, i64 0, i32 0
  %702 = load float, float* %701, align 4
  %703 = fptosi float %702 to i32
  %704 = getelementptr inbounds %"struct.dawn_native::SetViewportCmd", %"struct.dawn_native::SetViewportCmd"* %687, i64 0, i32 1
  %705 = load float, float* %704, align 4
  %706 = fptosi float %705 to i32
  %707 = getelementptr inbounds %"struct.dawn_native::SetViewportCmd", %"struct.dawn_native::SetViewportCmd"* %687, i64 0, i32 2
  %708 = load float, float* %707, align 4
  %709 = fptosi float %708 to i32
  %710 = getelementptr inbounds %"struct.dawn_native::SetViewportCmd", %"struct.dawn_native::SetViewportCmd"* %687, i64 0, i32 3
  %711 = load float, float* %710, align 4
  %712 = fptosi float %711 to i32
  call void %700(i32 %703, i32 %706, i32 %709, i32 %712) #8
  br label %713

713:                                              ; preds = %699, %689
  %714 = load void (float, float)*, void (float, float)** %249, align 8
  %715 = getelementptr inbounds %"struct.dawn_native::SetViewportCmd", %"struct.dawn_native::SetViewportCmd"* %687, i64 0, i32 4
  %716 = load float, float* %715, align 4
  %717 = getelementptr inbounds %"struct.dawn_native::SetViewportCmd", %"struct.dawn_native::SetViewportCmd"* %687, i64 0, i32 5
  %718 = load float, float* %717, align 4
  call void %714(float %716, float %718) #8
  br label %779

719:                                              ; preds = %506
  %720 = load i64, i64* %489, align 8
  %721 = add i64 %720, 3
  %722 = and i64 %721, -4
  %723 = inttoptr i64 %722 to i8*
  %724 = getelementptr inbounds i8, i8* %723, i64 16
  store i8* %724, i8** %488, align 8
  %725 = inttoptr i64 %722 to %"struct.dawn_native::SetScissorRectCmd"*
  %726 = load void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** %252, align 8
  %727 = getelementptr inbounds %"struct.dawn_native::SetScissorRectCmd", %"struct.dawn_native::SetScissorRectCmd"* %725, i64 0, i32 0
  %728 = load i32, i32* %727, align 4
  %729 = getelementptr inbounds %"struct.dawn_native::SetScissorRectCmd", %"struct.dawn_native::SetScissorRectCmd"* %725, i64 0, i32 1
  %730 = load i32, i32* %729, align 4
  %731 = getelementptr inbounds %"struct.dawn_native::SetScissorRectCmd", %"struct.dawn_native::SetScissorRectCmd"* %725, i64 0, i32 2
  %732 = load i32, i32* %731, align 4
  %733 = getelementptr inbounds %"struct.dawn_native::SetScissorRectCmd", %"struct.dawn_native::SetScissorRectCmd"* %725, i64 0, i32 3
  %734 = load i32, i32* %733, align 4
  call void %726(i32 %728, i32 %730, i32 %732, i32 %734) #8
  br label %779

735:                                              ; preds = %506
  %736 = load i64, i64* %489, align 8
  %737 = add i64 %736, 7
  %738 = and i64 %737, -8
  %739 = inttoptr i64 %738 to i8*
  %740 = getelementptr inbounds i8, i8* %739, i64 32
  store i8* %740, i8** %488, align 8
  %741 = inttoptr i64 %738 to %"struct.dawn_native::Color"*
  %742 = call { <2 x float>, <2 x float> } @_ZN11dawn_native19ConvertToFloatColorENS_5ColorE(%"struct.dawn_native::Color"* nonnull byval(%"struct.dawn_native::Color") align 8 %741) #8
  %743 = extractvalue { <2 x float>, <2 x float> } %742, 0
  %744 = extractvalue { <2 x float>, <2 x float> } %742, 1
  %745 = load void (float, float, float, float)*, void (float, float, float, float)** %239, align 8
  %746 = extractelement <2 x float> %743, i32 0
  %747 = extractelement <2 x float> %743, i32 1
  %748 = extractelement <2 x float> %744, i32 0
  %749 = extractelement <2 x float> %744, i32 1
  call void %745(float %746, float %747, float %748, float %749) #8
  br label %779

750:                                              ; preds = %506
  %751 = load i64, i64* %489, align 8
  %752 = add i64 %751, 3
  %753 = and i64 %752, -4
  %754 = inttoptr i64 %753 to i8*
  %755 = getelementptr inbounds i8, i8* %754, i64 4
  store i8* %755, i8** %488, align 8
  %756 = inttoptr i64 %753 to %"struct.dawn_native::ExecuteBundlesCmd"*
  %757 = getelementptr inbounds %"struct.dawn_native::ExecuteBundlesCmd", %"struct.dawn_native::ExecuteBundlesCmd"* %756, i64 0, i32 0
  %758 = load i32, i32* %757, align 4
  %759 = zext i32 %758 to i64
  %760 = shl nuw nsw i64 %759, 3
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %490) #8
  store i32 -1431655766, i32* %19, align 4
  %761 = bitcast i8* %755 to i32*
  %762 = load i32, i32* %761, align 4
  %763 = icmp eq i32 %762, -1
  br i1 %763, label %767, label %764

764:                                              ; preds = %750
  %765 = getelementptr inbounds i8, i8* %754, i64 8
  store i8* %765, i8** %488, align 8
  store i32 %762, i32* %19, align 4
  %766 = ptrtoint i8* %765 to i64
  br label %770

767:                                              ; preds = %750
  %768 = call zeroext i1 @_ZN11dawn_native15CommandIterator23NextCommandIdInNewBlockEPj(%"class.dawn_native::CommandIterator"* %487, i32* nonnull %19) #8
  %769 = load i64, i64* %489, align 8
  br label %770

770:                                              ; preds = %764, %767
  %771 = phi i64 [ %766, %764 ], [ %769, %767 ]
  %772 = add i64 %771, 7
  %773 = and i64 %772, -8
  %774 = inttoptr i64 %773 to i8*
  %775 = getelementptr inbounds i8, i8* %774, i64 %760
  store i8* %775, i8** %488, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %490) #8
  %776 = inttoptr i64 %773 to %class.Ref.408*
  %777 = load i32, i32* %757, align 4
  %778 = icmp eq i32 %777, 0
  br i1 %778, label %779, label %780

779:                                              ; preds = %803, %770, %883, %735, %719, %713, %672
  br label %493

780:                                              ; preds = %770, %803
  %781 = phi i64 [ %804, %803 ], [ 0, %770 ]
  %782 = getelementptr inbounds %class.Ref.408, %class.Ref.408* %776, i64 %781, i32 0, i32 0
  %783 = load %"class.dawn_native::RenderBundleBase"*, %"class.dawn_native::RenderBundleBase"** %782, align 8
  %784 = call %"class.dawn_native::CommandIterator"* @_ZN11dawn_native16RenderBundleBase11GetCommandsEv(%"class.dawn_native::RenderBundleBase"* %783) #8
  call void @_ZN11dawn_native15CommandIterator5ResetEv(%"class.dawn_native::CommandIterator"* %784) #8
  %785 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %784, i64 0, i32 1
  %786 = bitcast i8** %785 to i64*
  br label %787

787:                                              ; preds = %801, %780
  %788 = load i64, i64* %786, align 8
  %789 = add i64 %788, 3
  %790 = and i64 %789, -4
  %791 = inttoptr i64 %790 to i32*
  %792 = load i32, i32* %791, align 4
  %793 = icmp eq i32 %792, -1
  br i1 %793, label %797, label %794

794:                                              ; preds = %787
  %795 = inttoptr i64 %790 to i8*
  %796 = getelementptr inbounds i8, i8* %795, i64 4
  store i8* %796, i8** %785, align 8
  store i32 %792, i32* %49, align 4
  br label %801

797:                                              ; preds = %787
  %798 = call zeroext i1 @_ZN11dawn_native15CommandIterator23NextCommandIdInNewBlockEPj(%"class.dawn_native::CommandIterator"* %784, i32* nonnull %49) #8
  br i1 %798, label %799, label %803

799:                                              ; preds = %797
  %800 = load i32, i32* %49, align 4
  br label %801

801:                                              ; preds = %799, %794
  %802 = phi i32 [ %800, %799 ], [ %792, %794 ]
  call fastcc void @"_ZZN11dawn_native6opengl13CommandBuffer17ExecuteRenderPassEPNS_18BeginRenderPassCmdEENK3$_1clEPNS_15CommandIteratorENS_7CommandE"(%class.anon.407* nonnull %48, %"class.dawn_native::CommandIterator"* %784, i32 %802)
  br label %787

803:                                              ; preds = %797
  %804 = add nuw nsw i64 %781, 1
  %805 = load i32, i32* %757, align 4
  %806 = zext i32 %805 to i64
  %807 = icmp ult i64 %804, %806
  br i1 %807, label %780, label %779

808:                                              ; preds = %506
  %809 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %809) #8
  %810 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %811 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %810, i64 0, i32 1, i32 0
  store i8 15, i8* %811, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %809, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 15, i1 false) #8
  %812 = getelementptr inbounds i8, i8* %809, i64 15
  store i8 0, i8* %812, align 1
  %813 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %51, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i64 0, i64 0)) #8, !noalias !80
  %814 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %815 = bitcast %"class.std::__1::basic_string"* %813 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %814, i8* align 8 %815, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %815, i8 0, i64 24, i1 false) #8, !noalias !80
  %816 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 2, %"class.std::__1::basic_string"* nonnull %50, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._ZN11dawn_native6opengl13CommandBuffer17ExecuteRenderPassEPNS_18BeginRenderPassCmdE, i64 0, i64 0), i32 1256) #8
  %817 = ptrtoint %"class.dawn_native::ErrorData"* %816 to i64
  %818 = bitcast %class.Result* %0 to i64*
  store i64 %817, i64* %818, align 8
  %819 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %820 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %819, i64 0, i32 1, i32 0
  %821 = load i8, i8* %820, align 1
  %822 = icmp slt i8 %821, 0
  br i1 %822, label %823, label %826

823:                                              ; preds = %808
  %824 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %825 = load i8*, i8** %824, align 8
  call void @_ZdlPv(i8* %825) #9
  br label %826

826:                                              ; preds = %808, %823
  %827 = load i8, i8* %811, align 1
  %828 = icmp slt i8 %827, 0
  br i1 %828, label %829, label %832

829:                                              ; preds = %826
  %830 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %831 = load i8*, i8** %830, align 8
  call void @_ZdlPv(i8* %831) #9
  br label %832

832:                                              ; preds = %826, %829
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %809) #8
  br label %884

833:                                              ; preds = %506
  %834 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %834) #8
  %835 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %836 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %835, i64 0, i32 1, i32 0
  store i8 15, i8* %836, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %834, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 15, i1 false) #8
  %837 = getelementptr inbounds i8, i8* %834, i64 15
  store i8 0, i8* %837, align 1
  %838 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %53, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #8, !noalias !83
  %839 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  %840 = bitcast %"class.std::__1::basic_string"* %838 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %839, i8* align 8 %840, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %840, i8 0, i64 24, i1 false) #8, !noalias !83
  %841 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 2, %"class.std::__1::basic_string"* nonnull %52, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._ZN11dawn_native6opengl13CommandBuffer17ExecuteRenderPassEPNS_18BeginRenderPassCmdE, i64 0, i64 0), i32 1260) #8
  %842 = ptrtoint %"class.dawn_native::ErrorData"* %841 to i64
  %843 = bitcast %class.Result* %0 to i64*
  store i64 %842, i64* %843, align 8
  %844 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %845 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %844, i64 0, i32 1, i32 0
  %846 = load i8, i8* %845, align 1
  %847 = icmp slt i8 %846, 0
  br i1 %847, label %848, label %851

848:                                              ; preds = %833
  %849 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %850 = load i8*, i8** %849, align 8
  call void @_ZdlPv(i8* %850) #9
  br label %851

851:                                              ; preds = %833, %848
  %852 = load i8, i8* %836, align 1
  %853 = icmp slt i8 %852, 0
  br i1 %853, label %854, label %857

854:                                              ; preds = %851
  %855 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %856 = load i8*, i8** %855, align 8
  call void @_ZdlPv(i8* %856) #9
  br label %857

857:                                              ; preds = %851, %854
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %834) #8
  br label %884

858:                                              ; preds = %506
  %859 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %859) #8
  %860 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %861 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %860, i64 0, i32 1, i32 0
  store i8 15, i8* %861, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %859, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 15, i1 false) #8
  %862 = getelementptr inbounds i8, i8* %859, i64 15
  store i8 0, i8* %862, align 1
  %863 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %55, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0)) #8, !noalias !86
  %864 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  %865 = bitcast %"class.std::__1::basic_string"* %863 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %864, i8* align 8 %865, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %865, i8 0, i64 24, i1 false) #8, !noalias !86
  %866 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 2, %"class.std::__1::basic_string"* nonnull %54, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._ZN11dawn_native6opengl13CommandBuffer17ExecuteRenderPassEPNS_18BeginRenderPassCmdE, i64 0, i64 0), i32 1264) #8
  %867 = ptrtoint %"class.dawn_native::ErrorData"* %866 to i64
  %868 = bitcast %class.Result* %0 to i64*
  store i64 %867, i64* %868, align 8
  %869 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %870 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %869, i64 0, i32 1, i32 0
  %871 = load i8, i8* %870, align 1
  %872 = icmp slt i8 %871, 0
  br i1 %872, label %873, label %876

873:                                              ; preds = %858
  %874 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %875 = load i8*, i8** %874, align 8
  call void @_ZdlPv(i8* %875) #9
  br label %876

876:                                              ; preds = %858, %873
  %877 = load i8, i8* %861, align 1
  %878 = icmp slt i8 %877, 0
  br i1 %878, label %879, label %882

879:                                              ; preds = %876
  %880 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %881 = load i8*, i8** %880, align 8
  call void @_ZdlPv(i8* %881) #9
  br label %882

882:                                              ; preds = %876, %879
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %859) #8
  br label %884

883:                                              ; preds = %506
  call fastcc void @"_ZZN11dawn_native6opengl13CommandBuffer17ExecuteRenderPassEPNS_18BeginRenderPassCmdEENK3$_1clEPNS_15CommandIteratorENS_7CommandE"(%class.anon.407* nonnull %48, %"class.dawn_native::CommandIterator"* %487, i32 %507)
  br label %779

884:                                              ; preds = %882, %857, %832, %667
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %486) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %474) #8
  call void @llvm.lifetime.end.p0i8(i64 480, i8* nonnull %473) #8
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %469) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %468) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %467) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %466) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %465) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %237) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %60) #8
  ret void
}

declare void @_ZN11dawn_native6opengl6Buffer21EnsureDataInitializedEv(%"class.dawn_native::opengl::Buffer"*) local_unnamed_addr #1

declare void @_ZN11dawn_native6opengl6Buffer34EnsureDataInitializedAsDestinationEmm(%"class.dawn_native::opengl::Buffer"*, i64, i64) local_unnamed_addr #1

declare i32 @_ZNK11dawn_native6opengl6Buffer9GetHandleEv(%"class.dawn_native::opengl::Buffer"*) local_unnamed_addr #1

declare %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32, %"class.std::__1::basic_string"*, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN11dawn_native29GetSubresourcesAffectedByCopyERKNS_11TextureCopyERKNS_8Extent3DE(%"struct.dawn_native::SubresourceRange"* sret, %"struct.dawn_native::TextureCopy"* dereferenceable(32), %"struct.dawn_native::Extent3D"* dereferenceable(12)) local_unnamed_addr #1

declare zeroext i1 @_ZN11dawn_native29IsCompleteSubresourceCopiedToEPKNS_11TextureBaseENS_8Extent3DEj(%"class.dawn_native::TextureBase"*, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN11dawn_native11TextureBase34SetIsSubresourceContentInitializedEbRKNS_16SubresourceRangeE(%"class.dawn_native::TextureBase"*, i1 zeroext, %"struct.dawn_native::SubresourceRange"* dereferenceable(20)) local_unnamed_addr #1

declare void @_ZN11dawn_native6opengl7Texture35EnsureSubresourceContentInitializedERKNS_16SubresourceRangeE(%"class.dawn_native::opengl::Texture"*, %"struct.dawn_native::SubresourceRange"* dereferenceable(20)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl13DoTexSubImageERKNS0_15OpenGLFunctionsERKNS_11TextureCopyEPKvRKNS_17TextureDataLayoutERKNS_8Extent3DE(%"struct.dawn_native::opengl::OpenGLFunctions"* dereferenceable(5664), %"struct.dawn_native::TextureCopy"* nocapture readonly dereferenceable(32), i8*, %"struct.dawn_native::TextureDataLayout"* nocapture readonly dereferenceable(24), %"struct.dawn_native::Extent3D"* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 {
  %6 = bitcast %"struct.dawn_native::TextureCopy"* %1 to %"class.dawn_native::opengl::Texture"**
  %7 = load %"class.dawn_native::opengl::Texture"*, %"class.dawn_native::opengl::Texture"** %6, align 8
  %8 = tail call dereferenceable(20) %"struct.dawn_native::opengl::GLFormat"* @_ZNK11dawn_native6opengl7Texture11GetGLFormatEv(%"class.dawn_native::opengl::Texture"* %7) #8
  %9 = tail call i32 @_ZNK11dawn_native6opengl7Texture11GetGLTargetEv(%"class.dawn_native::opengl::Texture"* %7) #8
  %10 = getelementptr inbounds %"struct.dawn_native::TextureDataLayout", %"struct.dawn_native::TextureDataLayout"* %3, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 %11
  %13 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %0, i64 0, i32 0, i32 0
  %14 = load void (i32)*, void (i32)** %13, align 8
  tail call void %14(i32 33984) #8
  %15 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %0, i64 0, i32 0, i32 6
  %16 = load void (i32, i32)*, void (i32, i32)** %15, align 8
  %17 = tail call i32 @_ZNK11dawn_native6opengl7Texture9GetHandleEv(%"class.dawn_native::opengl::Texture"* %7) #8
  tail call void %16(i32 %9, i32 %17) #8
  %18 = getelementptr inbounds %"class.dawn_native::opengl::Texture", %"class.dawn_native::opengl::Texture"* %7, i64 0, i32 0
  %19 = tail call dereferenceable(84) %"struct.dawn_native::Format"* @_ZNK11dawn_native11TextureBase9GetFormatEv(%"class.dawn_native::TextureBase"* %18) #8
  %20 = getelementptr inbounds %"struct.dawn_native::TextureCopy", %"struct.dawn_native::TextureCopy"* %1, i64 0, i32 3
  %21 = load i8, i8* %20, align 8
  %22 = tail call dereferenceable(24) %"struct.dawn_native::AspectInfo"* @_ZNK11dawn_native6Format13GetAspectInfoENS_6AspectE(%"struct.dawn_native::Format"* %19, i8 zeroext %21) #8
  %23 = getelementptr inbounds %"struct.dawn_native::TextureCopy", %"struct.dawn_native::TextureCopy"* %1, i64 0, i32 2, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.dawn_native::TextureCopy", %"struct.dawn_native::TextureCopy"* %1, i64 0, i32 2, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"struct.dawn_native::TextureCopy", %"struct.dawn_native::TextureCopy"* %1, i64 0, i32 2, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = tail call dereferenceable(84) %"struct.dawn_native::Format"* @_ZNK11dawn_native11TextureBase9GetFormatEv(%"class.dawn_native::TextureBase"* %18) #8
  %30 = getelementptr inbounds %"struct.dawn_native::Format", %"struct.dawn_native::Format"* %29, i64 0, i32 2
  %31 = load i8, i8* %30, align 1, !range !3
  %32 = icmp eq i8 %31, 0
  %33 = getelementptr inbounds %"struct.dawn_native::Extent3D", %"struct.dawn_native::Extent3D"* %4, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %221, label %35

35:                                               ; preds = %5
  %36 = getelementptr inbounds %"struct.dawn_native::AspectInfo", %"struct.dawn_native::AspectInfo"* %22, i64 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = udiv i32 %34, %37
  %39 = getelementptr inbounds %"struct.dawn_native::AspectInfo", %"struct.dawn_native::AspectInfo"* %22, i64 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = mul i32 %40, %38
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"struct.dawn_native::TextureCopy", %"struct.dawn_native::TextureCopy"* %1, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = tail call { i64, i32 } @_ZNK11dawn_native11TextureBase22GetMipLevelVirtualSizeEj(%"class.dawn_native::TextureBase"* %18, i32 %44) #8
  %46 = extractvalue { i64, i32 } %45, 0
  %47 = trunc i64 %46 to i32
  %48 = lshr i64 %46, 32
  %49 = trunc i64 %48 to i32
  %50 = sub i32 %47, %24
  %51 = load i32, i32* %33, align 4
  %52 = icmp ult i32 %50, %51
  %53 = select i1 %52, i32 %50, i32 %51
  %54 = getelementptr inbounds %"struct.dawn_native::TextureDataLayout", %"struct.dawn_native::TextureDataLayout"* %3, i64 0, i32 2
  %55 = load i32, i32* %54, align 8
  %56 = load i32, i32* %39, align 4
  %57 = urem i32 %55, %56
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %123

59:                                               ; preds = %35
  %60 = tail call dereferenceable(12) %"struct.dawn_native::opengl::OpenGLVersion"* @_ZNK11dawn_native6opengl15OpenGLFunctions10GetVersionEv(%"struct.dawn_native::opengl::OpenGLFunctions"* %0) #8
  %61 = tail call zeroext i1 @_ZNK11dawn_native6opengl13OpenGLVersion9IsDesktopEv(%"struct.dawn_native::opengl::OpenGLVersion"* %60) #8
  br i1 %61, label %62, label %123

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"struct.dawn_native::Extent3D", %"struct.dawn_native::Extent3D"* %4, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"struct.dawn_native::AspectInfo", %"struct.dawn_native::AspectInfo"* %22, i64 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = udiv i32 %64, %66
  %68 = zext i32 %67 to i64
  %69 = mul nuw i64 %68, %42
  %70 = getelementptr inbounds %"struct.dawn_native::Extent3D", %"struct.dawn_native::Extent3D"* %4, i64 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i64
  %73 = mul i64 %69, %72
  %74 = sub i32 %49, %26
  %75 = icmp ult i32 %74, %64
  %76 = select i1 %75, i32 %74, i32 %64
  %77 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %0, i64 0, i32 0, i32 90
  %78 = load void (i32, i32)*, void (i32, i32)** %77, align 8
  %79 = load i32, i32* %54, align 8
  %80 = load i32, i32* %39, align 4
  %81 = udiv i32 %79, %80
  %82 = load i32, i32* %36, align 4
  %83 = mul i32 %82, %81
  tail call void %78(i32 3314, i32 %83) #8
  %84 = load void (i32, i32)*, void (i32, i32)** %77, align 8
  %85 = load i32, i32* %39, align 4
  tail call void %84(i32 37162, i32 %85) #8
  %86 = load void (i32, i32)*, void (i32, i32)** %77, align 8
  %87 = load i32, i32* %36, align 4
  tail call void %86(i32 37159, i32 %87) #8
  %88 = load void (i32, i32)*, void (i32, i32)** %77, align 8
  %89 = load i32, i32* %65, align 4
  tail call void %88(i32 37160, i32 %89) #8
  %90 = load void (i32, i32)*, void (i32, i32)** %77, align 8
  tail call void %90(i32 37161, i32 1) #8
  %91 = tail call i32 @_ZNK11dawn_native11TextureBase14GetArrayLayersEv(%"class.dawn_native::TextureBase"* %18) #8
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %103

93:                                               ; preds = %62
  %94 = tail call i32 @_ZNK11dawn_native11TextureBase12GetDimensionEv(%"class.dawn_native::TextureBase"* %18) #8
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %96, label %103

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %0, i64 0, i32 0, i32 22
  %98 = load void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %97, align 8
  %99 = load i32, i32* %43, align 8
  %100 = getelementptr inbounds %"struct.dawn_native::opengl::GLFormat", %"struct.dawn_native::opengl::GLFormat"* %8, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = trunc i64 %73 to i32
  tail call void %98(i32 %9, i32 %99, i32 %24, i32 %26, i32 %53, i32 %76, i32 %101, i32 %102, i8* %12) #8
  br label %117

103:                                              ; preds = %93, %62
  %104 = load void (i32, i32)*, void (i32, i32)** %77, align 8
  %105 = getelementptr inbounds %"struct.dawn_native::TextureDataLayout", %"struct.dawn_native::TextureDataLayout"* %3, i64 0, i32 3
  %106 = load i32, i32* %105, align 4
  %107 = load i32, i32* %65, align 4
  %108 = mul i32 %107, %106
  tail call void %104(i32 32878, i32 %108) #8
  %109 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %0, i64 0, i32 0, i32 148
  %110 = load void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %109, align 8
  %111 = load i32, i32* %43, align 8
  %112 = load i32, i32* %70, align 4
  %113 = getelementptr inbounds %"struct.dawn_native::opengl::GLFormat", %"struct.dawn_native::opengl::GLFormat"* %8, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = trunc i64 %73 to i32
  tail call void %110(i32 %9, i32 %111, i32 %24, i32 %26, i32 %28, i32 %53, i32 %76, i32 %112, i32 %114, i32 %115, i8* %12) #8
  %116 = load void (i32, i32)*, void (i32, i32)** %77, align 8
  tail call void %116(i32 32878, i32 0) #8
  br label %117

117:                                              ; preds = %103, %96
  %118 = load void (i32, i32)*, void (i32, i32)** %77, align 8
  tail call void %118(i32 3314, i32 0) #8
  %119 = load void (i32, i32)*, void (i32, i32)** %77, align 8
  tail call void %119(i32 37162, i32 0) #8
  %120 = load void (i32, i32)*, void (i32, i32)** %77, align 8
  tail call void %120(i32 37159, i32 0) #8
  %121 = load void (i32, i32)*, void (i32, i32)** %77, align 8
  tail call void %121(i32 37160, i32 0) #8
  %122 = load void (i32, i32)*, void (i32, i32)** %77, align 8
  tail call void %122(i32 37161, i32 0) #8
  br label %352

123:                                              ; preds = %59, %35
  %124 = tail call i32 @_ZNK11dawn_native11TextureBase14GetArrayLayersEv(%"class.dawn_native::TextureBase"* %18) #8
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %159

126:                                              ; preds = %123
  %127 = tail call i32 @_ZNK11dawn_native11TextureBase12GetDimensionEv(%"class.dawn_native::TextureBase"* %18) #8
  %128 = icmp eq i32 %127, 1
  br i1 %128, label %129, label %159

129:                                              ; preds = %126
  %130 = load i32, i32* %25, align 4
  %131 = getelementptr inbounds %"struct.dawn_native::Extent3D", %"struct.dawn_native::Extent3D"* %4, i64 0, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = add i32 %132, %130
  %134 = icmp ult i32 %26, %133
  br i1 %134, label %135, label %352

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"struct.dawn_native::AspectInfo", %"struct.dawn_native::AspectInfo"* %22, i64 0, i32 0, i32 2
  %137 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %0, i64 0, i32 0, i32 22
  %138 = getelementptr inbounds %"struct.dawn_native::opengl::GLFormat", %"struct.dawn_native::opengl::GLFormat"* %8, i64 0, i32 0
  %139 = load i32, i32* %136, align 4
  br label %140

140:                                              ; preds = %135, %140
  %141 = phi i32 [ %139, %135 ], [ %153, %140 ]
  %142 = phi i8* [ %12, %135 ], [ %152, %140 ]
  %143 = phi i32 [ %26, %135 ], [ %154, %140 ]
  %144 = sub i32 %49, %143
  %145 = icmp ult i32 %144, %141
  %146 = select i1 %145, i32 %144, i32 %141
  %147 = load void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %137, align 8
  %148 = load i32, i32* %43, align 8
  %149 = load i32, i32* %138, align 4
  tail call void %147(i32 %9, i32 %148, i32 %24, i32 %143, i32 %53, i32 %146, i32 %149, i32 %41, i8* %142) #8
  %150 = load i32, i32* %54, align 8
  %151 = zext i32 %150 to i64
  %152 = getelementptr inbounds i8, i8* %142, i64 %151
  %153 = load i32, i32* %136, align 4
  %154 = add i32 %153, %143
  %155 = load i32, i32* %25, align 4
  %156 = load i32, i32* %131, align 4
  %157 = add i32 %156, %155
  %158 = icmp ult i32 %154, %157
  br i1 %158, label %140, label %352

159:                                              ; preds = %126, %123
  %160 = load i32, i32* %27, align 4
  %161 = getelementptr inbounds %"struct.dawn_native::Extent3D", %"struct.dawn_native::Extent3D"* %4, i64 0, i32 2
  %162 = load i32, i32* %161, align 4
  %163 = add i32 %162, %160
  %164 = icmp ult i32 %28, %163
  br i1 %164, label %165, label %352

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"struct.dawn_native::Extent3D", %"struct.dawn_native::Extent3D"* %4, i64 0, i32 1
  %167 = getelementptr inbounds %"struct.dawn_native::AspectInfo", %"struct.dawn_native::AspectInfo"* %22, i64 0, i32 0, i32 2
  %168 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %0, i64 0, i32 0, i32 148
  %169 = getelementptr inbounds %"struct.dawn_native::opengl::GLFormat", %"struct.dawn_native::opengl::GLFormat"* %8, i64 0, i32 0
  %170 = getelementptr inbounds %"struct.dawn_native::TextureDataLayout", %"struct.dawn_native::TextureDataLayout"* %3, i64 0, i32 3
  %171 = load i32, i32* %25, align 4
  %172 = load i32, i32* %166, align 4
  br label %173

173:                                              ; preds = %165, %208
  %174 = phi i32 [ %162, %165 ], [ %209, %208 ]
  %175 = phi i32 [ %160, %165 ], [ %210, %208 ]
  %176 = phi i32 [ %172, %165 ], [ %212, %208 ]
  %177 = phi i32 [ %171, %165 ], [ %213, %208 ]
  %178 = phi i8* [ %12, %165 ], [ %217, %208 ]
  %179 = phi i32 [ %28, %165 ], [ %218, %208 ]
  %180 = add i32 %176, %177
  %181 = icmp ult i32 %177, %180
  br i1 %181, label %184, label %182

182:                                              ; preds = %173
  %183 = load i32, i32* %54, align 8
  br label %208

184:                                              ; preds = %173
  %185 = load i32, i32* %167, align 4
  br label %186

186:                                              ; preds = %184, %186
  %187 = phi i32 [ %199, %186 ], [ %185, %184 ]
  %188 = phi i8* [ %198, %186 ], [ %178, %184 ]
  %189 = phi i32 [ %200, %186 ], [ %177, %184 ]
  %190 = sub i32 %49, %189
  %191 = icmp ult i32 %190, %187
  %192 = select i1 %191, i32 %190, i32 %187
  %193 = load void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %168, align 8
  %194 = load i32, i32* %43, align 8
  %195 = load i32, i32* %169, align 4
  tail call void %193(i32 %9, i32 %194, i32 %24, i32 %189, i32 %179, i32 %53, i32 %192, i32 1, i32 %195, i32 %41, i8* %188) #8
  %196 = load i32, i32* %54, align 8
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds i8, i8* %188, i64 %197
  %199 = load i32, i32* %167, align 4
  %200 = add i32 %199, %189
  %201 = load i32, i32* %25, align 4
  %202 = load i32, i32* %166, align 4
  %203 = add i32 %202, %201
  %204 = icmp ult i32 %200, %203
  br i1 %204, label %186, label %205

205:                                              ; preds = %186
  %206 = load i32, i32* %27, align 4
  %207 = load i32, i32* %161, align 4
  br label %208

208:                                              ; preds = %182, %205
  %209 = phi i32 [ %207, %205 ], [ %174, %182 ]
  %210 = phi i32 [ %206, %205 ], [ %175, %182 ]
  %211 = phi i32 [ %196, %205 ], [ %183, %182 ]
  %212 = phi i32 [ %202, %205 ], [ %176, %182 ]
  %213 = phi i32 [ %201, %205 ], [ %177, %182 ]
  %214 = load i32, i32* %170, align 4
  %215 = mul i32 %211, %214
  %216 = zext i32 %215 to i64
  %217 = getelementptr inbounds i8, i8* %178, i64 %216
  %218 = add nuw i32 %179, 1
  %219 = add i32 %209, %210
  %220 = icmp ult i32 %218, %219
  br i1 %220, label %173, label %352

221:                                              ; preds = %5
  %222 = getelementptr inbounds %"struct.dawn_native::Extent3D", %"struct.dawn_native::Extent3D"* %4, i64 0, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = getelementptr inbounds %"struct.dawn_native::TextureDataLayout", %"struct.dawn_native::TextureDataLayout"* %3, i64 0, i32 2
  %225 = load i32, i32* %224, align 8
  %226 = getelementptr inbounds %"struct.dawn_native::AspectInfo", %"struct.dawn_native::AspectInfo"* %22, i64 0, i32 0, i32 0
  %227 = load i32, i32* %226, align 4
  %228 = urem i32 %225, %227
  %229 = udiv i32 %225, %227
  %230 = icmp eq i32 %228, 0
  br i1 %230, label %231, label %271

231:                                              ; preds = %221
  %232 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %0, i64 0, i32 0, i32 90
  %233 = load void (i32, i32)*, void (i32, i32)** %232, align 8
  %234 = getelementptr inbounds %"struct.dawn_native::AspectInfo", %"struct.dawn_native::AspectInfo"* %22, i64 0, i32 0, i32 1
  %235 = load i32, i32* %234, align 4
  %236 = mul i32 %235, %229
  tail call void %233(i32 3314, i32 %236) #8
  %237 = tail call i32 @_ZNK11dawn_native11TextureBase14GetArrayLayersEv(%"class.dawn_native::TextureBase"* %18) #8
  %238 = icmp eq i32 %237, 1
  br i1 %238, label %239, label %251

239:                                              ; preds = %231
  %240 = tail call i32 @_ZNK11dawn_native11TextureBase12GetDimensionEv(%"class.dawn_native::TextureBase"* %18) #8
  %241 = icmp eq i32 %240, 1
  br i1 %241, label %242, label %251

242:                                              ; preds = %239
  %243 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %0, i64 0, i32 0, i32 110
  %244 = load void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %243, align 8
  %245 = getelementptr inbounds %"struct.dawn_native::TextureCopy", %"struct.dawn_native::TextureCopy"* %1, i64 0, i32 1
  %246 = load i32, i32* %245, align 8
  %247 = getelementptr inbounds %"struct.dawn_native::opengl::GLFormat", %"struct.dawn_native::opengl::GLFormat"* %8, i64 0, i32 1
  %248 = load i32, i32* %247, align 4
  %249 = getelementptr inbounds %"struct.dawn_native::opengl::GLFormat", %"struct.dawn_native::opengl::GLFormat"* %8, i64 0, i32 2
  %250 = load i32, i32* %249, align 4
  tail call void %244(i32 %9, i32 %246, i32 %24, i32 %26, i32 %34, i32 %223, i32 %248, i32 %250, i8* %12) #8
  br label %269

251:                                              ; preds = %239, %231
  %252 = load void (i32, i32)*, void (i32, i32)** %232, align 8
  %253 = getelementptr inbounds %"struct.dawn_native::TextureDataLayout", %"struct.dawn_native::TextureDataLayout"* %3, i64 0, i32 3
  %254 = load i32, i32* %253, align 4
  %255 = getelementptr inbounds %"struct.dawn_native::AspectInfo", %"struct.dawn_native::AspectInfo"* %22, i64 0, i32 0, i32 2
  %256 = load i32, i32* %255, align 4
  %257 = mul i32 %256, %254
  tail call void %252(i32 32878, i32 %257) #8
  %258 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %0, i64 0, i32 0, i32 145
  %259 = load void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %258, align 8
  %260 = getelementptr inbounds %"struct.dawn_native::TextureCopy", %"struct.dawn_native::TextureCopy"* %1, i64 0, i32 1
  %261 = load i32, i32* %260, align 8
  %262 = getelementptr inbounds %"struct.dawn_native::Extent3D", %"struct.dawn_native::Extent3D"* %4, i64 0, i32 2
  %263 = load i32, i32* %262, align 4
  %264 = getelementptr inbounds %"struct.dawn_native::opengl::GLFormat", %"struct.dawn_native::opengl::GLFormat"* %8, i64 0, i32 1
  %265 = load i32, i32* %264, align 4
  %266 = getelementptr inbounds %"struct.dawn_native::opengl::GLFormat", %"struct.dawn_native::opengl::GLFormat"* %8, i64 0, i32 2
  %267 = load i32, i32* %266, align 4
  tail call void %259(i32 %9, i32 %261, i32 %24, i32 %26, i32 %28, i32 %34, i32 %223, i32 %263, i32 %265, i32 %267, i8* %12) #8
  %268 = load void (i32, i32)*, void (i32, i32)** %232, align 8
  tail call void %268(i32 32878, i32 0) #8
  br label %269

269:                                              ; preds = %251, %242
  %270 = load void (i32, i32)*, void (i32, i32)** %232, align 8
  tail call void %270(i32 3314, i32 0) #8
  br label %352

271:                                              ; preds = %221
  %272 = tail call i32 @_ZNK11dawn_native11TextureBase14GetArrayLayersEv(%"class.dawn_native::TextureBase"* %18) #8
  %273 = icmp eq i32 %272, 1
  br i1 %273, label %274, label %300

274:                                              ; preds = %271
  %275 = tail call i32 @_ZNK11dawn_native11TextureBase12GetDimensionEv(%"class.dawn_native::TextureBase"* %18) #8
  %276 = icmp eq i32 %275, 1
  br i1 %276, label %277, label %300

277:                                              ; preds = %274
  %278 = load i32, i32* %25, align 4
  %279 = add i32 %278, %223
  %280 = icmp ult i32 %26, %279
  br i1 %280, label %281, label %352

281:                                              ; preds = %277
  %282 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %0, i64 0, i32 0, i32 110
  %283 = getelementptr inbounds %"struct.dawn_native::TextureCopy", %"struct.dawn_native::TextureCopy"* %1, i64 0, i32 1
  %284 = getelementptr inbounds %"struct.dawn_native::opengl::GLFormat", %"struct.dawn_native::opengl::GLFormat"* %8, i64 0, i32 1
  %285 = getelementptr inbounds %"struct.dawn_native::opengl::GLFormat", %"struct.dawn_native::opengl::GLFormat"* %8, i64 0, i32 2
  br label %286

286:                                              ; preds = %281, %286
  %287 = phi i8* [ %12, %281 ], [ %295, %286 ]
  %288 = phi i32 [ %26, %281 ], [ %296, %286 ]
  %289 = load void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %282, align 8
  %290 = load i32, i32* %283, align 8
  %291 = load i32, i32* %284, align 4
  %292 = load i32, i32* %285, align 4
  tail call void %289(i32 %9, i32 %290, i32 %24, i32 %288, i32 %34, i32 1, i32 %291, i32 %292, i8* %287) #8
  %293 = load i32, i32* %224, align 8
  %294 = zext i32 %293 to i64
  %295 = getelementptr inbounds i8, i8* %287, i64 %294
  %296 = add nuw i32 %288, 1
  %297 = load i32, i32* %25, align 4
  %298 = add i32 %297, %223
  %299 = icmp ult i32 %296, %298
  br i1 %299, label %286, label %352

300:                                              ; preds = %274, %271
  %301 = load i32, i32* %27, align 4
  %302 = getelementptr inbounds %"struct.dawn_native::Extent3D", %"struct.dawn_native::Extent3D"* %4, i64 0, i32 2
  %303 = load i32, i32* %302, align 4
  %304 = add i32 %303, %301
  %305 = icmp ult i32 %28, %304
  br i1 %305, label %306, label %352

306:                                              ; preds = %300
  %307 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %0, i64 0, i32 0, i32 145
  %308 = getelementptr inbounds %"struct.dawn_native::TextureCopy", %"struct.dawn_native::TextureCopy"* %1, i64 0, i32 1
  %309 = getelementptr inbounds %"struct.dawn_native::opengl::GLFormat", %"struct.dawn_native::opengl::GLFormat"* %8, i64 0, i32 1
  %310 = getelementptr inbounds %"struct.dawn_native::opengl::GLFormat", %"struct.dawn_native::opengl::GLFormat"* %8, i64 0, i32 2
  %311 = getelementptr inbounds %"struct.dawn_native::TextureDataLayout", %"struct.dawn_native::TextureDataLayout"* %3, i64 0, i32 3
  %312 = load i32, i32* %25, align 4
  br label %313

313:                                              ; preds = %306, %340
  %314 = phi i32 [ %303, %306 ], [ %341, %340 ]
  %315 = phi i32 [ %301, %306 ], [ %342, %340 ]
  %316 = phi i32 [ %312, %306 ], [ %344, %340 ]
  %317 = phi i8* [ %12, %306 ], [ %348, %340 ]
  %318 = phi i32 [ %28, %306 ], [ %349, %340 ]
  %319 = add i32 %316, %223
  %320 = icmp ult i32 %316, %319
  br i1 %320, label %323, label %321

321:                                              ; preds = %313
  %322 = load i32, i32* %224, align 8
  br label %340

323:                                              ; preds = %313, %323
  %324 = phi i8* [ %332, %323 ], [ %317, %313 ]
  %325 = phi i32 [ %333, %323 ], [ %316, %313 ]
  %326 = load void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %307, align 8
  %327 = load i32, i32* %308, align 8
  %328 = load i32, i32* %309, align 4
  %329 = load i32, i32* %310, align 4
  tail call void %326(i32 %9, i32 %327, i32 %24, i32 %325, i32 %318, i32 %34, i32 1, i32 1, i32 %328, i32 %329, i8* %324) #8
  %330 = load i32, i32* %224, align 8
  %331 = zext i32 %330 to i64
  %332 = getelementptr inbounds i8, i8* %324, i64 %331
  %333 = add nuw i32 %325, 1
  %334 = load i32, i32* %25, align 4
  %335 = add i32 %334, %223
  %336 = icmp ult i32 %333, %335
  br i1 %336, label %323, label %337

337:                                              ; preds = %323
  %338 = load i32, i32* %27, align 4
  %339 = load i32, i32* %302, align 4
  br label %340

340:                                              ; preds = %321, %337
  %341 = phi i32 [ %339, %337 ], [ %314, %321 ]
  %342 = phi i32 [ %338, %337 ], [ %315, %321 ]
  %343 = phi i32 [ %330, %337 ], [ %322, %321 ]
  %344 = phi i32 [ %334, %337 ], [ %316, %321 ]
  %345 = load i32, i32* %311, align 4
  %346 = mul i32 %343, %345
  %347 = zext i32 %346 to i64
  %348 = getelementptr inbounds i8, i8* %317, i64 %347
  %349 = add nuw i32 %318, 1
  %350 = add i32 %341, %342
  %351 = icmp ult i32 %349, %350
  br i1 %351, label %313, label %352

352:                                              ; preds = %208, %140, %340, %286, %159, %129, %300, %277, %269, %117
  ret void
}

declare dereferenceable(84) %"struct.dawn_native::Format"* @_ZNK11dawn_native11TextureBase9GetFormatEv(%"class.dawn_native::TextureBase"*) local_unnamed_addr #1

declare dereferenceable(20) %"struct.dawn_native::opengl::GLFormat"* @_ZNK11dawn_native6opengl7Texture11GetGLFormatEv(%"class.dawn_native::opengl::Texture"*) local_unnamed_addr #1

declare i32 @_ZNK11dawn_native6opengl7Texture11GetGLTargetEv(%"class.dawn_native::opengl::Texture"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK11dawn_native10DeviceBase15IsToggleEnabledENS_6ToggleE(%"class.dawn_native::DeviceBase"*, i32) local_unnamed_addr #1

declare void @_ZN11dawn_native6opengl6Buffer34EnsureDataInitializedAsDestinationEPKNS_22CopyTextureToBufferCmdE(%"class.dawn_native::opengl::Buffer"*, %"struct.dawn_native::CopyTextureToBufferCmd"*) local_unnamed_addr #1

declare i32 @_ZNK11dawn_native6opengl7Texture9GetHandleEv(%"class.dawn_native::opengl::Texture"*) local_unnamed_addr #1

declare dereferenceable(24) %"struct.dawn_native::AspectInfo"* @_ZNK11dawn_native6Format13GetAspectInfoENS_6AspectE(%"struct.dawn_native::Format"*, i8 zeroext) local_unnamed_addr #1

declare i32 @_ZNK11dawn_native11TextureBase12GetDimensionEv(%"class.dawn_native::TextureBase"*) local_unnamed_addr #1

declare i32 @_ZNK11dawn_native11TextureBase14GetArrayLayersEv(%"class.dawn_native::TextureBase"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions11IsAtLeastGLEjj(%"struct.dawn_native::opengl::OpenGLFunctions"*, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK11dawn_native6opengl15OpenGLFunctions13IsAtLeastGLESEjj(%"struct.dawn_native::opengl::OpenGLFunctions"*, i32, i32) local_unnamed_addr #1

declare void @_ZN11dawn_native11SkipCommandEPNS_15CommandIteratorENS_7CommandE(%"class.dawn_native::CommandIterator"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN11dawn_native6opengl12_GLOBAL__N_116BindGroupTracker5ApplyERKNS0_15OpenGLFunctionsE(%"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* nocapture, %"struct.dawn_native::opengl::OpenGLFunctions"* nocapture readonly dereferenceable(5664)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.dawn_native::BufferBinding", align 8
  %4 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %5 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %6 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %7 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %8 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %9 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %10 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %11 = alloca %"class.std::__1::__bit_iterator.418", align 8
  %12 = alloca %"class.BitSetIterator<4, unsigned int>::Iterator", align 8
  %13 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8, !noalias !89
  %15 = bitcast %"class.BitSetIterator<4, unsigned int>::Iterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.BitSetIterator<4, unsigned int>::Iterator", %"class.BitSetIterator<4, unsigned int>::Iterator"* %12, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.BitSetIterator<4, unsigned int>::Iterator", %"class.BitSetIterator<4, unsigned int>::Iterator"* %12, i64 0, i32 1
  %18 = getelementptr inbounds %"class.BitSetIterator<4, unsigned int>::Iterator", %"class.BitSetIterator<4, unsigned int>::Iterator"* %12, i64 0, i32 2
  store i64 %14, i64* %16, align 8, !alias.scope !92
  %19 = bitcast i64* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #8, !alias.scope !92
  %20 = and i64 %14, 15
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %55, label %22

22:                                               ; preds = %2
  %23 = ptrtoint %"class.BitSetIterator<4, unsigned int>::Iterator"* %12 to i64
  %24 = bitcast %"class.std::__1::__bit_iterator.418"* %7 to i8*
  %25 = bitcast %"class.std::__1::__bit_iterator.418"* %4 to i8*
  %26 = bitcast %"class.std::__1::__bit_iterator.418"* %5 to i8*
  %27 = bitcast %"class.std::__1::__bit_iterator.418"* %6 to i8*
  %28 = bitcast %"class.std::__1::__bit_iterator.418"* %4 to i64*
  %29 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %4, i64 0, i32 1
  %30 = bitcast %"class.std::__1::__bit_iterator.418"* %5 to i64*
  %31 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %5, i64 0, i32 1
  %32 = bitcast %"class.std::__1::__bit_iterator.418"* %6 to i64*
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %6, i64 0, i32 1
  br label %34

34:                                               ; preds = %46, %22
  %35 = phi i64 [ %14, %22 ], [ %48, %46 ]
  %36 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EjE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %37 = and i64 %36, %35
  %38 = and i64 %37, 4294967295
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %34
  %41 = trunc i64 %37 to i32
  %42 = call i32 @_Z11ScanForwardj(i32 %41) #8
  %43 = zext i32 %42 to i64
  %44 = load i64, i64* %18, align 8, !alias.scope !92
  %45 = add i64 %44, %43
  br label %52

46:                                               ; preds = %34
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #8, !noalias !92
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #8, !noalias !92
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #8, !noalias !92
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #8, !noalias !92
  store i64 %23, i64* %28, align 8, !noalias !95
  store i32 4, i32* %29, align 8, !noalias !95
  store i64 %23, i64* %30, align 8, !noalias !95
  store i32 4, i32* %31, align 8, !noalias !95
  store i64 %23, i64* %32, align 8, !noalias !95
  store i32 0, i32* %33, align 8, !noalias !95
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.418"* nonnull sret %7, %"class.std::__1::__bit_iterator.418"* nonnull %4, %"class.std::__1::__bit_iterator.418"* nonnull %5, %"class.std::__1::__bit_iterator.418"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #8, !noalias !92
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #8, !noalias !92
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #8, !noalias !92
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #8, !noalias !92
  %47 = load i64, i64* %16, align 8, !alias.scope !92
  %48 = and i64 %47, -16
  store i64 %48, i64* %16, align 8, !alias.scope !92
  %49 = load i64, i64* %18, align 8, !alias.scope !92
  %50 = add i64 %49, 32
  store i64 %50, i64* %18, align 8, !alias.scope !92
  %51 = icmp ult i64 %50, 4
  br i1 %51, label %34, label %52

52:                                               ; preds = %46, %40
  %53 = phi i64 [ %44, %40 ], [ %50, %46 ]
  %54 = phi i64 [ %45, %40 ], [ 0, %46 ]
  store i64 %54, i64* %17, align 8, !alias.scope !92
  br label %57

55:                                               ; preds = %2
  store i64 32, i64* %18, align 8, !alias.scope !92
  %56 = ptrtoint %"class.BitSetIterator<4, unsigned int>::Iterator"* %12 to i64
  br label %57

57:                                               ; preds = %52, %55
  %58 = phi i64 [ %23, %52 ], [ %56, %55 ]
  %59 = phi i64 [ %54, %52 ], [ 0, %55 ]
  %60 = phi i64 [ %53, %52 ], [ 32, %55 ]
  %61 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %0, i64 0, i32 0, i32 6
  %62 = bitcast %"class.dawn_native::PipelineLayoutBase"** %61 to %"class.dawn_native::opengl::PipelineLayout"**
  %63 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 300
  %64 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %0, i64 0, i32 1
  %65 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 6
  %67 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 108
  %68 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 224
  %69 = bitcast %"struct.dawn_native::BufferBinding"* %3 to i8*
  %70 = getelementptr inbounds %"struct.dawn_native::BufferBinding", %"struct.dawn_native::BufferBinding"* %3, i64 0, i32 1
  %71 = getelementptr inbounds %"struct.dawn_native::BufferBinding", %"struct.dawn_native::BufferBinding"* %3, i64 0, i32 2
  %72 = bitcast %"struct.dawn_native::BufferBinding"* %3 to %"class.dawn_native::opengl::Buffer"**
  %73 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 177
  %74 = bitcast %"class.std::__1::__bit_iterator.418"* %11 to i8*
  %75 = bitcast %"class.std::__1::__bit_iterator.418"* %8 to i8*
  %76 = bitcast %"class.std::__1::__bit_iterator.418"* %9 to i8*
  %77 = bitcast %"class.std::__1::__bit_iterator.418"* %10 to i8*
  %78 = bitcast %"class.std::__1::__bit_iterator.418"* %8 to i64*
  %79 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %8, i64 0, i32 1
  %80 = bitcast %"class.std::__1::__bit_iterator.418"* %9 to i64*
  %81 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %9, i64 0, i32 1
  %82 = bitcast %"class.std::__1::__bit_iterator.418"* %10 to i64*
  %83 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %10, i64 0, i32 1
  br label %84

84:                                               ; preds = %288, %57
  %85 = phi i64 [ %290, %288 ], [ %59, %57 ]
  %86 = phi i64 [ %289, %288 ], [ %60, %57 ]
  %87 = icmp eq i64 %86, 32
  br i1 %87, label %88, label %101

88:                                               ; preds = %84
  %89 = load i64, i64* %16, align 8
  %90 = and i64 %89, 15
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %101

92:                                               ; preds = %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  %93 = bitcast %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %0 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8
  %95 = and <2 x i64> %94, <i64 -16, i64 -16>
  %96 = bitcast %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %0 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %96, align 8
  %97 = bitcast %"class.dawn_native::PipelineLayoutBase"** %61 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %0, i64 0, i32 0, i32 7
  %100 = bitcast %"class.dawn_native::PipelineLayoutBase"** %99 to i64*
  store i64 %98, i64* %100, align 8
  ret void

101:                                              ; preds = %88, %84
  %102 = and i64 %85, 4294967295
  %103 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i64 %102
  %104 = load %"class.dawn_native::BindGroupBase"*, %"class.dawn_native::BindGroupBase"** %103, align 8
  %105 = load %"class.dawn_native::opengl::PipelineLayout"*, %"class.dawn_native::opengl::PipelineLayout"** %62, align 8
  %106 = call dereferenceable(96) %"class.ityp::array.423"* @_ZNK11dawn_native6opengl14PipelineLayout19GetBindingIndexInfoEv(%"class.dawn_native::opengl::PipelineLayout"* %105) #8
  %107 = call %"class.dawn_native::BindGroupLayoutBase"* @_ZN11dawn_native13BindGroupBase9GetLayoutEv(%"class.dawn_native::BindGroupBase"* %104) #8
  %108 = call i32 @_ZNK11dawn_native19BindGroupLayoutBase15GetBindingCountEv(%"class.dawn_native::BindGroupLayoutBase"* %107) #8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %258, label %110

110:                                              ; preds = %101
  %111 = getelementptr inbounds %"class.ityp::array.423", %"class.ityp::array.423"* %106, i64 0, i32 0, i32 0, i64 %102, i32 0, i32 0, i32 0
  br label %112

112:                                              ; preds = %251, %110
  %113 = phi i64 [ 0, %110 ], [ %253, %251 ]
  %114 = phi i32 [ 0, %110 ], [ %252, %251 ]
  %115 = call %"class.dawn_native::BindGroupLayoutBase"* @_ZN11dawn_native13BindGroupBase9GetLayoutEv(%"class.dawn_native::BindGroupBase"* %104) #8
  %116 = getelementptr inbounds %"class.dawn_native::BindGroupLayoutBase", %"class.dawn_native::BindGroupLayoutBase"* %115, i64 0, i32 2, i32 0, i32 0, i32 0
  %117 = load %"struct.dawn_native::BindingInfo"*, %"struct.dawn_native::BindingInfo"** %116, align 8
  %118 = getelementptr inbounds %"struct.dawn_native::BindingInfo", %"struct.dawn_native::BindingInfo"* %117, i64 %113, i32 2
  %119 = load i32, i32* %118, align 8
  switch i32 %119, label %251 [
    i32 0, label %120
    i32 1, label %154
    i32 2, label %185
    i32 3, label %222
  ]

120:                                              ; preds = %112
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #8
  %121 = trunc i64 %113 to i32
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 24, i1 false) #8
  call void @_ZN11dawn_native13BindGroupBase25GetBindingAsBufferBindingEj(%"struct.dawn_native::BufferBinding"* nonnull sret %3, %"class.dawn_native::BindGroupBase"* %104, i32 %121) #8
  %122 = load %"class.dawn_native::opengl::Buffer"*, %"class.dawn_native::opengl::Buffer"** %72, align 8
  %123 = call i32 @_ZNK11dawn_native6opengl6Buffer9GetHandleEv(%"class.dawn_native::opengl::Buffer"* %122) #8
  %124 = load i32*, i32** %111, align 8
  %125 = getelementptr inbounds i32, i32* %124, i64 %113
  %126 = load i32, i32* %125, align 4
  %127 = load i64, i64* %70, align 8
  %128 = getelementptr inbounds %"struct.dawn_native::BindingInfo", %"struct.dawn_native::BindingInfo"* %117, i64 %113, i32 3, i32 2
  %129 = load i8, i8* %128, align 4, !range !3
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %138, label %131

131:                                              ; preds = %120
  %132 = zext i32 %114 to i64
  %133 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %0, i64 0, i32 0, i32 5, i32 0, i32 0, i64 %102, i32 0, i64 %132
  %134 = load i64, i64* %133, align 8
  %135 = and i64 %127, 4294967295
  %136 = add i64 %134, %135
  %137 = add i32 %114, 1
  br label %138

138:                                              ; preds = %131, %120
  %139 = phi i64 [ %136, %131 ], [ %127, %120 ]
  %140 = phi i32 [ %137, %131 ], [ %114, %120 ]
  %141 = getelementptr inbounds %"struct.dawn_native::BindingInfo", %"struct.dawn_native::BindingInfo"* %117, i64 %113, i32 3, i32 1
  %142 = load i32, i32* %141, align 8
  %143 = add i32 %142, -1
  %144 = icmp ult i32 %143, 3
  br i1 %144, label %145, label %149

145:                                              ; preds = %138
  %146 = sext i32 %143 to i64
  %147 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN11dawn_native6opengl12_GLOBAL__N_116BindGroupTracker5ApplyERKNS0_15OpenGLFunctionsE, i64 0, i64 %146
  %148 = load i32, i32* %147, align 4
  br label %149

149:                                              ; preds = %145, %138
  %150 = phi i32 [ -1431655766, %138 ], [ %148, %145 ]
  %151 = load void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i64, i64)** %73, align 8
  %152 = and i64 %139, 4294967295
  %153 = load i64, i64* %71, align 8
  call void %151(i32 %150, i32 %126, i32 %123, i64 %152, i64 %153) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #8
  br label %251

154:                                              ; preds = %112
  %155 = trunc i64 %113 to i32
  %156 = call %"class.dawn_native::SamplerBase"* @_ZNK11dawn_native13BindGroupBase19GetBindingAsSamplerEj(%"class.dawn_native::BindGroupBase"* %104, i32 %155) #8
  %157 = bitcast %"class.dawn_native::SamplerBase"* %156 to %"class.dawn_native::opengl::Sampler"*
  %158 = load i32*, i32** %111, align 8
  %159 = getelementptr inbounds i32, i32* %158, i64 %113
  %160 = load i32, i32* %159, align 4
  %161 = load %"class.dawn_native::opengl::PipelineGL"*, %"class.dawn_native::opengl::PipelineGL"** %64, align 8
  %162 = call dereferenceable(24) %"class.std::__1::vector.346"* @_ZNK11dawn_native6opengl10PipelineGL25GetTextureUnitsForSamplerEj(%"class.dawn_native::opengl::PipelineGL"* %161, i32 %160) #8
  %163 = getelementptr inbounds %"class.std::__1::vector.346", %"class.std::__1::vector.346"* %162, i64 0, i32 0, i32 0
  %164 = load %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"*, %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"** %163, align 8
  %165 = getelementptr inbounds %"class.std::__1::vector.346", %"class.std::__1::vector.346"* %162, i64 0, i32 0, i32 1
  %166 = load %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"*, %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"** %165, align 8
  %167 = icmp eq %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %164, %166
  br i1 %167, label %251, label %168

168:                                              ; preds = %154, %181
  %169 = phi %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* [ %183, %181 ], [ %164, %154 ]
  %170 = getelementptr inbounds %"struct.dawn_native::opengl::PipelineGL::SamplerUnit", %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %169, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = getelementptr inbounds %"struct.dawn_native::opengl::PipelineGL::SamplerUnit", %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %169, i64 0, i32 1
  %173 = load i8, i8* %172, align 4
  %174 = and i8 %173, 1
  %175 = icmp eq i8 %174, 0
  %176 = load void (i32, i32)*, void (i32, i32)** %68, align 8
  br i1 %175, label %179, label %177

177:                                              ; preds = %168
  %178 = call i32 @_ZNK11dawn_native6opengl7Sampler18GetFilteringHandleEv(%"class.dawn_native::opengl::Sampler"* %157) #8
  br label %181

179:                                              ; preds = %168
  %180 = call i32 @_ZNK11dawn_native6opengl7Sampler21GetNonFilteringHandleEv(%"class.dawn_native::opengl::Sampler"* %157) #8
  br label %181

181:                                              ; preds = %179, %177
  %182 = phi i32 [ %180, %179 ], [ %178, %177 ]
  call void %176(i32 %171, i32 %182) #8
  %183 = getelementptr inbounds %"struct.dawn_native::opengl::PipelineGL::SamplerUnit", %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %169, i64 1
  %184 = icmp eq %"struct.dawn_native::opengl::PipelineGL::SamplerUnit"* %183, %166
  br i1 %184, label %251, label %168

185:                                              ; preds = %112
  %186 = trunc i64 %113 to i32
  %187 = call %"class.dawn_native::TextureViewBase"* @_ZN11dawn_native13BindGroupBase23GetBindingAsTextureViewEj(%"class.dawn_native::BindGroupBase"* %104, i32 %186) #8
  %188 = bitcast %"class.dawn_native::TextureViewBase"* %187 to %"class.dawn_native::opengl::TextureView"*
  %189 = call i32 @_ZNK11dawn_native6opengl11TextureView9GetHandleEv(%"class.dawn_native::opengl::TextureView"* %188) #8
  %190 = call i32 @_ZNK11dawn_native6opengl11TextureView11GetGLTargetEv(%"class.dawn_native::opengl::TextureView"* %188) #8
  %191 = load i32*, i32** %111, align 8
  %192 = getelementptr inbounds i32, i32* %191, i64 %113
  %193 = load i32, i32* %192, align 4
  %194 = load %"class.dawn_native::opengl::PipelineGL"*, %"class.dawn_native::opengl::PipelineGL"** %64, align 8
  %195 = call dereferenceable(24) %"class.std::__1::vector.258"* @_ZNK11dawn_native6opengl10PipelineGL29GetTextureUnitsForTextureViewEj(%"class.dawn_native::opengl::PipelineGL"* %194, i32 %193) #8
  %196 = getelementptr inbounds %"class.std::__1::vector.258", %"class.std::__1::vector.258"* %195, i64 0, i32 0, i32 0
  %197 = load i32*, i32** %196, align 8
  %198 = getelementptr inbounds %"class.std::__1::vector.258", %"class.std::__1::vector.258"* %195, i64 0, i32 0, i32 1
  %199 = load i32*, i32** %198, align 8
  %200 = icmp eq i32* %197, %199
  br i1 %200, label %251, label %201

201:                                              ; preds = %185, %219
  %202 = phi i32* [ %220, %219 ], [ %197, %185 ]
  %203 = load i32, i32* %202, align 4
  %204 = load void (i32)*, void (i32)** %65, align 8
  %205 = add i32 %203, 33984
  call void %204(i32 %205) #8
  %206 = load void (i32, i32)*, void (i32, i32)** %66, align 8
  call void %206(i32 %190, i32 %189) #8
  %207 = call %"class.dawn_native::TextureBase"* @_ZN11dawn_native15TextureViewBase10GetTextureEv(%"class.dawn_native::TextureViewBase"* %187) #8
  %208 = bitcast %"class.dawn_native::TextureBase"* %207 to %"class.dawn_native::opengl::Texture"*
  %209 = call dereferenceable(20) %"struct.dawn_native::opengl::GLFormat"* @_ZNK11dawn_native6opengl7Texture11GetGLFormatEv(%"class.dawn_native::opengl::Texture"* %208) #8
  %210 = getelementptr inbounds %"struct.dawn_native::opengl::GLFormat", %"struct.dawn_native::opengl::GLFormat"* %209, i64 0, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = icmp eq i32 %211, 34041
  br i1 %212, label %213, label %219

213:                                              ; preds = %201
  %214 = call zeroext i8 @_ZNK11dawn_native15TextureViewBase10GetAspectsEv(%"class.dawn_native::TextureViewBase"* %187) #8
  switch i8 %214, label %219 [
    i8 4, label %217
    i8 2, label %215
  ]

215:                                              ; preds = %213
  %216 = load void (i32, i32, i32)*, void (i32, i32, i32)** %67, align 8
  call void %216(i32 %190, i32 37098, i32 6402) #8
  br label %219

217:                                              ; preds = %213
  %218 = load void (i32, i32, i32)*, void (i32, i32, i32)** %67, align 8
  call void %218(i32 %190, i32 37098, i32 6401) #8
  br label %219

219:                                              ; preds = %217, %215, %213, %201
  %220 = getelementptr inbounds i32, i32* %202, i64 1
  %221 = icmp eq i32* %220, %199
  br i1 %221, label %251, label %201

222:                                              ; preds = %112
  %223 = trunc i64 %113 to i32
  %224 = call %"class.dawn_native::TextureViewBase"* @_ZN11dawn_native13BindGroupBase23GetBindingAsTextureViewEj(%"class.dawn_native::BindGroupBase"* %104, i32 %223) #8
  %225 = call %"class.dawn_native::TextureBase"* @_ZN11dawn_native15TextureViewBase10GetTextureEv(%"class.dawn_native::TextureViewBase"* %224) #8
  %226 = bitcast %"class.dawn_native::TextureBase"* %225 to %"class.dawn_native::opengl::Texture"*
  %227 = call i32 @_ZNK11dawn_native6opengl7Texture9GetHandleEv(%"class.dawn_native::opengl::Texture"* %226) #8
  %228 = load i32*, i32** %111, align 8
  %229 = getelementptr inbounds i32, i32* %228, i64 %113
  %230 = load i32, i32* %229, align 4
  %231 = getelementptr inbounds %"struct.dawn_native::BindingInfo", %"struct.dawn_native::BindingInfo"* %117, i64 %113, i32 6, i32 1
  %232 = load i32, i32* %231, align 8
  %233 = icmp eq i32 %232, 2
  %234 = select i1 %233, i32 35001, i32 -1431655766
  %235 = icmp eq i32 %232, 1
  %236 = select i1 %235, i32 35000, i32 %234
  %237 = call i32 @_ZNK11dawn_native15TextureViewBase13GetLayerCountEv(%"class.dawn_native::TextureViewBase"* %224) #8
  %238 = icmp eq i32 %237, 1
  br i1 %238, label %243, label %239

239:                                              ; preds = %222
  %240 = call i32 @_ZNK11dawn_native11TextureBase14GetArrayLayersEv(%"class.dawn_native::TextureBase"* %225) #8
  %241 = call i32 @_ZNK11dawn_native15TextureViewBase13GetLayerCountEv(%"class.dawn_native::TextureViewBase"* %224) #8
  %242 = icmp eq i32 %240, %241
  call void @llvm.assume(i1 %242) #8
  br label %243

243:                                              ; preds = %239, %222
  %244 = phi i8 [ 1, %239 ], [ 0, %222 ]
  %245 = load void (i32, i32, i32, i8, i32, i32, i32)*, void (i32, i32, i32, i8, i32, i32, i32)** %63, align 8
  %246 = call i32 @_ZNK11dawn_native15TextureViewBase15GetBaseMipLevelEv(%"class.dawn_native::TextureViewBase"* %224) #8
  %247 = call i32 @_ZNK11dawn_native15TextureViewBase17GetBaseArrayLayerEv(%"class.dawn_native::TextureViewBase"* %224) #8
  %248 = call dereferenceable(20) %"struct.dawn_native::opengl::GLFormat"* @_ZNK11dawn_native6opengl7Texture11GetGLFormatEv(%"class.dawn_native::opengl::Texture"* %226) #8
  %249 = getelementptr inbounds %"struct.dawn_native::opengl::GLFormat", %"struct.dawn_native::opengl::GLFormat"* %248, i64 0, i32 0
  %250 = load i32, i32* %249, align 4
  call void %245(i32 %230, i32 %227, i32 %246, i8 zeroext %244, i32 %247, i32 %236, i32 %250) #8
  br label %251

251:                                              ; preds = %219, %181, %243, %185, %154, %149, %112
  %252 = phi i32 [ %114, %112 ], [ %114, %243 ], [ %140, %149 ], [ %114, %154 ], [ %114, %185 ], [ %114, %181 ], [ %114, %219 ]
  %253 = add nuw nsw i64 %113, 1
  %254 = call %"class.dawn_native::BindGroupLayoutBase"* @_ZN11dawn_native13BindGroupBase9GetLayoutEv(%"class.dawn_native::BindGroupBase"* %104) #8
  %255 = call i32 @_ZNK11dawn_native19BindGroupLayoutBase15GetBindingCountEv(%"class.dawn_native::BindGroupLayoutBase"* %254) #8
  %256 = zext i32 %255 to i64
  %257 = icmp ult i64 %253, %256
  br i1 %257, label %112, label %258

258:                                              ; preds = %251, %101
  %259 = load i64, i64* %17, align 8
  %260 = load i64, i64* %18, align 8
  %261 = sub i64 %259, %260
  %262 = icmp ugt i64 %261, 3
  br i1 %262, label %263, label %264

263:                                              ; preds = %258
  call void @abort() #10
  unreachable

264:                                              ; preds = %258
  %265 = shl i64 1, %261
  %266 = xor i64 %265, -1
  %267 = load i64, i64* %16, align 8
  %268 = and i64 %267, %266
  store i64 %268, i64* %16, align 8
  %269 = icmp ult i64 %260, 4
  br i1 %269, label %270, label %288

270:                                              ; preds = %264, %282
  %271 = phi i64 [ %284, %282 ], [ %268, %264 ]
  %272 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EjE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %273 = and i64 %272, %271
  %274 = and i64 %273, 4294967295
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %282, label %276

276:                                              ; preds = %270
  %277 = trunc i64 %273 to i32
  %278 = call i32 @_Z11ScanForwardj(i32 %277) #8
  %279 = zext i32 %278 to i64
  %280 = load i64, i64* %18, align 8
  %281 = add i64 %280, %279
  br label %288

282:                                              ; preds = %270
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #8
  store i64 %58, i64* %78, align 8, !noalias !98
  store i32 4, i32* %79, align 8, !noalias !98
  store i64 %58, i64* %80, align 8, !noalias !98
  store i32 4, i32* %81, align 8, !noalias !98
  store i64 %58, i64* %82, align 8, !noalias !98
  store i32 0, i32* %83, align 8, !noalias !98
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.418"* nonnull sret %11, %"class.std::__1::__bit_iterator.418"* nonnull %8, %"class.std::__1::__bit_iterator.418"* nonnull %9, %"class.std::__1::__bit_iterator.418"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #8
  %283 = load i64, i64* %16, align 8
  %284 = and i64 %283, -16
  store i64 %284, i64* %16, align 8
  %285 = load i64, i64* %18, align 8
  %286 = add i64 %285, 32
  store i64 %286, i64* %18, align 8
  %287 = icmp ult i64 %286, 4
  br i1 %287, label %270, label %288

288:                                              ; preds = %282, %264, %276
  %289 = phi i64 [ %280, %276 ], [ %260, %264 ], [ %286, %282 ]
  %290 = phi i64 [ %281, %276 ], [ 0, %264 ], [ 0, %282 ]
  store i64 %290, i64* %17, align 8
  br label %84
}

declare void @_ZN11dawn_native6opengl15ComputePipeline8ApplyNowEv(%"class.dawn_native::opengl::ComputePipeline"*) local_unnamed_addr #1

declare i64 @_ZNK11dawn_native15AttachmentState23GetColorAttachmentsMaskEv(%"class.dawn_native::AttachmentState"*) local_unnamed_addr #1

declare %"class.dawn_native::TextureBase"* @_ZN11dawn_native15TextureViewBase10GetTextureEv(%"class.dawn_native::TextureViewBase"*) local_unnamed_addr #1

declare i32 @_ZNK11dawn_native15TextureViewBase15GetBaseMipLevelEv(%"class.dawn_native::TextureViewBase"*) local_unnamed_addr #1

declare i32 @_ZNK11dawn_native15TextureViewBase17GetBaseArrayLayerEv(%"class.dawn_native::TextureViewBase"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK11dawn_native15AttachmentState25HasDepthStencilAttachmentEv(%"class.dawn_native::AttachmentState"*) local_unnamed_addr #1

declare void @_ZN11dawn_native6opengl23PersistentPipelineState15SetDefaultStateERKNS0_15OpenGLFunctionsE(%"class.dawn_native::opengl::PersistentPipelineState"*, %"struct.dawn_native::opengl::OpenGLFunctions"* dereferenceable(5664)) local_unnamed_addr #1

declare dereferenceable(84) %"struct.dawn_native::Format"* @_ZNK11dawn_native15TextureViewBase9GetFormatEv(%"class.dawn_native::TextureViewBase"*) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN11dawn_native19ConvertToFloatColorENS_5ColorE(%"struct.dawn_native::Color"* byval(%"struct.dawn_native::Color") align 8) local_unnamed_addr #1

declare { i64, i64 } @_ZN11dawn_native29ConvertToUnsignedIntegerColorENS_5ColorE(%"struct.dawn_native::Color"* byval(%"struct.dawn_native::Color") align 8) local_unnamed_addr #1

declare { i64, i64 } @_ZN11dawn_native27ConvertToSignedIntegerColorENS_5ColorE(%"struct.dawn_native::Color"* byval(%"struct.dawn_native::Color") align 8) local_unnamed_addr #1

declare zeroext i1 @_ZNK11dawn_native6Format8HasDepthEv(%"struct.dawn_native::Format"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK11dawn_native6Format10HasStencilEv(%"struct.dawn_native::Format"*) local_unnamed_addr #1

declare i32 @_ZN11dawn_native6opengl31GetStencilMaskFromStencilFormatEN4wgpu13TextureFormatE(i32) local_unnamed_addr #1

declare i32 @_ZNK11dawn_native15AttachmentState14GetSampleCountEv(%"class.dawn_native::AttachmentState"*) local_unnamed_addr #1

declare void @_ZN11dawn_native6opengl23PersistentPipelineState19SetStencilReferenceERKNS0_15OpenGLFunctionsEj(%"class.dawn_native::opengl::PersistentPipelineState"*, %"struct.dawn_native::opengl::OpenGLFunctions"* dereferenceable(5664), i32) local_unnamed_addr #1

declare %"class.dawn_native::CommandIterator"* @_ZN11dawn_native16RenderBundleBase11GetCommandsEv(%"class.dawn_native::RenderBundleBase"*) local_unnamed_addr #1

declare void @_ZN11dawn_native15CommandIterator5ResetEv(%"class.dawn_native::CommandIterator"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZN11dawn_native6opengl13CommandBuffer17ExecuteRenderPassEPNS_18BeginRenderPassCmdEENK3$_1clEPNS_15CommandIteratorENS_7CommandE"(%class.anon.407* readonly, %"class.dawn_native::CommandIterator"*, i32) unnamed_addr #3 align 2 {
  %4 = alloca i32, align 4
  switch i32 %2, label %546 [
    i32 9, label %5
    i32 10, label %53
    i32 11, label %162
    i32 12, label %195
    i32 17, label %231
    i32 18, label %231
    i32 19, label %231
    i32 22, label %232
    i32 27, label %290
    i32 28, label %486
    i32 29, label %517
  ]

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %1, i64 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 3
  %10 = and i64 %9, -4
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 16
  store i8* %12, i8** %6, align 8
  %13 = inttoptr i64 %10 to %"struct.dawn_native::DrawCmd"*
  %14 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 0
  %15 = load %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"*, %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"** %14, align 8
  %16 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 1
  %17 = load %"struct.dawn_native::opengl::OpenGLFunctions"*, %"struct.dawn_native::opengl::OpenGLFunctions"** %16, align 8
  tail call fastcc void @_ZN11dawn_native6opengl12_GLOBAL__N_131VertexStateBufferBindingTracker5ApplyERKNS0_15OpenGLFunctionsE(%"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* %15, %"struct.dawn_native::opengl::OpenGLFunctions"* dereferenceable(5664) %17)
  %18 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 2
  %19 = load %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"*, %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"** %18, align 8
  %20 = load %"struct.dawn_native::opengl::OpenGLFunctions"*, %"struct.dawn_native::opengl::OpenGLFunctions"** %16, align 8
  tail call fastcc void @_ZN11dawn_native6opengl12_GLOBAL__N_116BindGroupTracker5ApplyERKNS0_15OpenGLFunctionsE(%"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %19, %"struct.dawn_native::opengl::OpenGLFunctions"* dereferenceable(5664) %20)
  %21 = getelementptr inbounds %"struct.dawn_native::DrawCmd", %"struct.dawn_native::DrawCmd"* %13, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  %24 = bitcast %"struct.dawn_native::opengl::OpenGLFunctions"** %16 to %"struct.dawn_native::opengl::OpenGLFunctionsBase"**
  %25 = load %"struct.dawn_native::opengl::OpenGLFunctionsBase"*, %"struct.dawn_native::opengl::OpenGLFunctionsBase"** %24, align 8
  br i1 %23, label %40, label %26

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctionsBase", %"struct.dawn_native::opengl::OpenGLFunctionsBase"* %25, i64 0, i32 552
  %28 = load void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** %27, align 8
  %29 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 3
  %30 = load %"class.dawn_native::opengl::RenderPipeline"**, %"class.dawn_native::opengl::RenderPipeline"*** %29, align 8
  %31 = load %"class.dawn_native::opengl::RenderPipeline"*, %"class.dawn_native::opengl::RenderPipeline"** %30, align 8
  %32 = tail call i32 @_ZNK11dawn_native6opengl14RenderPipeline22GetGLPrimitiveTopologyEv(%"class.dawn_native::opengl::RenderPipeline"* %31) #8
  %33 = getelementptr inbounds %"struct.dawn_native::DrawCmd", %"struct.dawn_native::DrawCmd"* %13, i64 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.dawn_native::DrawCmd", %"struct.dawn_native::DrawCmd"* %13, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"struct.dawn_native::DrawCmd", %"struct.dawn_native::DrawCmd"* %13, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = load i32, i32* %21, align 4
  tail call void %28(i32 %32, i32 %34, i32 %36, i32 %38, i32 %39) #8
  br label %547

40:                                               ; preds = %5
  %41 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctionsBase", %"struct.dawn_native::opengl::OpenGLFunctionsBase"* %25, i64 0, i32 210
  %42 = load void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** %41, align 8
  %43 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 3
  %44 = load %"class.dawn_native::opengl::RenderPipeline"**, %"class.dawn_native::opengl::RenderPipeline"*** %43, align 8
  %45 = load %"class.dawn_native::opengl::RenderPipeline"*, %"class.dawn_native::opengl::RenderPipeline"** %44, align 8
  %46 = tail call i32 @_ZNK11dawn_native6opengl14RenderPipeline22GetGLPrimitiveTopologyEv(%"class.dawn_native::opengl::RenderPipeline"* %45) #8
  %47 = getelementptr inbounds %"struct.dawn_native::DrawCmd", %"struct.dawn_native::DrawCmd"* %13, i64 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"struct.dawn_native::DrawCmd", %"struct.dawn_native::DrawCmd"* %13, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"struct.dawn_native::DrawCmd", %"struct.dawn_native::DrawCmd"* %13, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  tail call void %42(i32 %46, i32 %48, i32 %50, i32 %52) #8
  br label %547

53:                                               ; preds = %3
  %54 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %1, i64 0, i32 1
  %55 = bitcast i8** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, 3
  %58 = and i64 %57, -4
  %59 = inttoptr i64 %58 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 20
  store i8* %60, i8** %54, align 8
  %61 = inttoptr i64 %58 to %"struct.dawn_native::DrawIndexedCmd"*
  %62 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 0
  %63 = load %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"*, %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"** %62, align 8
  %64 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 1
  %65 = load %"struct.dawn_native::opengl::OpenGLFunctions"*, %"struct.dawn_native::opengl::OpenGLFunctions"** %64, align 8
  tail call fastcc void @_ZN11dawn_native6opengl12_GLOBAL__N_131VertexStateBufferBindingTracker5ApplyERKNS0_15OpenGLFunctionsE(%"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* %63, %"struct.dawn_native::opengl::OpenGLFunctions"* dereferenceable(5664) %65)
  %66 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 2
  %67 = load %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"*, %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"** %66, align 8
  %68 = load %"struct.dawn_native::opengl::OpenGLFunctions"*, %"struct.dawn_native::opengl::OpenGLFunctions"** %64, align 8
  tail call fastcc void @_ZN11dawn_native6opengl12_GLOBAL__N_116BindGroupTracker5ApplyERKNS0_15OpenGLFunctionsE(%"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %67, %"struct.dawn_native::opengl::OpenGLFunctions"* dereferenceable(5664) %68)
  %69 = getelementptr inbounds %"struct.dawn_native::DrawIndexedCmd", %"struct.dawn_native::DrawIndexedCmd"* %61, i64 0, i32 4
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %103, label %72

72:                                               ; preds = %53
  %73 = bitcast %"struct.dawn_native::opengl::OpenGLFunctions"** %64 to %"struct.dawn_native::opengl::OpenGLFunctionsBase"**
  %74 = load %"struct.dawn_native::opengl::OpenGLFunctionsBase"*, %"struct.dawn_native::opengl::OpenGLFunctionsBase"** %73, align 8
  %75 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctionsBase", %"struct.dawn_native::opengl::OpenGLFunctionsBase"* %74, i64 0, i32 554
  %76 = load void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)** %75, align 8
  %77 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 3
  %78 = load %"class.dawn_native::opengl::RenderPipeline"**, %"class.dawn_native::opengl::RenderPipeline"*** %77, align 8
  %79 = load %"class.dawn_native::opengl::RenderPipeline"*, %"class.dawn_native::opengl::RenderPipeline"** %78, align 8
  %80 = tail call i32 @_ZNK11dawn_native6opengl14RenderPipeline22GetGLPrimitiveTopologyEv(%"class.dawn_native::opengl::RenderPipeline"* %79) #8
  %81 = getelementptr inbounds %"struct.dawn_native::DrawIndexedCmd", %"struct.dawn_native::DrawIndexedCmd"* %61, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 4
  %84 = load i32*, i32** %83, align 8
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"struct.dawn_native::DrawIndexedCmd", %"struct.dawn_native::DrawIndexedCmd"* %61, i64 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 5
  %89 = load i32*, i32** %88, align 8
  %90 = load i32, i32* %89, align 4
  %91 = mul i32 %90, %87
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 6
  %94 = load i64*, i64** %93, align 8
  %95 = load i64, i64* %94, align 8
  %96 = add i64 %95, %92
  %97 = inttoptr i64 %96 to i8*
  %98 = getelementptr inbounds %"struct.dawn_native::DrawIndexedCmd", %"struct.dawn_native::DrawIndexedCmd"* %61, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"struct.dawn_native::DrawIndexedCmd", %"struct.dawn_native::DrawIndexedCmd"* %61, i64 0, i32 3
  %101 = load i32, i32* %100, align 4
  %102 = load i32, i32* %69, align 4
  tail call void %76(i32 %80, i32 %82, i32 %85, i8* %97, i32 %99, i32 %101, i32 %102) #8
  br label %547

103:                                              ; preds = %53
  %104 = getelementptr inbounds %"struct.dawn_native::DrawIndexedCmd", %"struct.dawn_native::DrawIndexedCmd"* %61, i64 0, i32 3
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  %107 = bitcast %"struct.dawn_native::opengl::OpenGLFunctions"** %64 to %"struct.dawn_native::opengl::OpenGLFunctionsBase"**
  %108 = load %"struct.dawn_native::opengl::OpenGLFunctionsBase"*, %"struct.dawn_native::opengl::OpenGLFunctionsBase"** %107, align 8
  br i1 %106, label %136, label %109

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctionsBase", %"struct.dawn_native::opengl::OpenGLFunctionsBase"* %108, i64 0, i32 337
  %111 = load void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i8*, i32, i32)** %110, align 8
  %112 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 3
  %113 = load %"class.dawn_native::opengl::RenderPipeline"**, %"class.dawn_native::opengl::RenderPipeline"*** %112, align 8
  %114 = load %"class.dawn_native::opengl::RenderPipeline"*, %"class.dawn_native::opengl::RenderPipeline"** %113, align 8
  %115 = tail call i32 @_ZNK11dawn_native6opengl14RenderPipeline22GetGLPrimitiveTopologyEv(%"class.dawn_native::opengl::RenderPipeline"* %114) #8
  %116 = getelementptr inbounds %"struct.dawn_native::DrawIndexedCmd", %"struct.dawn_native::DrawIndexedCmd"* %61, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 4
  %119 = load i32*, i32** %118, align 8
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %"struct.dawn_native::DrawIndexedCmd", %"struct.dawn_native::DrawIndexedCmd"* %61, i64 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 5
  %124 = load i32*, i32** %123, align 8
  %125 = load i32, i32* %124, align 4
  %126 = mul i32 %125, %122
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 6
  %129 = load i64*, i64** %128, align 8
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %130, %127
  %132 = inttoptr i64 %131 to i8*
  %133 = getelementptr inbounds %"struct.dawn_native::DrawIndexedCmd", %"struct.dawn_native::DrawIndexedCmd"* %61, i64 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = load i32, i32* %104, align 4
  tail call void %111(i32 %115, i32 %117, i32 %120, i8* %132, i32 %134, i32 %135) #8
  br label %547

136:                                              ; preds = %103
  %137 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctionsBase", %"struct.dawn_native::opengl::OpenGLFunctionsBase"* %108, i64 0, i32 211
  %138 = load void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32)** %137, align 8
  %139 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 3
  %140 = load %"class.dawn_native::opengl::RenderPipeline"**, %"class.dawn_native::opengl::RenderPipeline"*** %139, align 8
  %141 = load %"class.dawn_native::opengl::RenderPipeline"*, %"class.dawn_native::opengl::RenderPipeline"** %140, align 8
  %142 = tail call i32 @_ZNK11dawn_native6opengl14RenderPipeline22GetGLPrimitiveTopologyEv(%"class.dawn_native::opengl::RenderPipeline"* %141) #8
  %143 = getelementptr inbounds %"struct.dawn_native::DrawIndexedCmd", %"struct.dawn_native::DrawIndexedCmd"* %61, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 4
  %146 = load i32*, i32** %145, align 8
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds %"struct.dawn_native::DrawIndexedCmd", %"struct.dawn_native::DrawIndexedCmd"* %61, i64 0, i32 2
  %149 = load i32, i32* %148, align 4
  %150 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 5
  %151 = load i32*, i32** %150, align 8
  %152 = load i32, i32* %151, align 4
  %153 = mul i32 %152, %149
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 6
  %156 = load i64*, i64** %155, align 8
  %157 = load i64, i64* %156, align 8
  %158 = add i64 %157, %154
  %159 = inttoptr i64 %158 to i8*
  %160 = getelementptr inbounds %"struct.dawn_native::DrawIndexedCmd", %"struct.dawn_native::DrawIndexedCmd"* %61, i64 0, i32 1
  %161 = load i32, i32* %160, align 4
  tail call void %138(i32 %142, i32 %144, i32 %147, i8* %159, i32 %161) #8
  br label %547

162:                                              ; preds = %3
  %163 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %1, i64 0, i32 1
  %164 = bitcast i8** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = add i64 %165, 7
  %167 = and i64 %166, -8
  %168 = inttoptr i64 %167 to i8*
  %169 = getelementptr inbounds i8, i8* %168, i64 16
  store i8* %169, i8** %163, align 8
  %170 = inttoptr i64 %167 to %"struct.dawn_native::DrawIndirectCmd"*
  %171 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 0
  %172 = load %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"*, %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"** %171, align 8
  %173 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 1
  %174 = load %"struct.dawn_native::opengl::OpenGLFunctions"*, %"struct.dawn_native::opengl::OpenGLFunctions"** %173, align 8
  tail call fastcc void @_ZN11dawn_native6opengl12_GLOBAL__N_131VertexStateBufferBindingTracker5ApplyERKNS0_15OpenGLFunctionsE(%"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* %172, %"struct.dawn_native::opengl::OpenGLFunctions"* dereferenceable(5664) %174)
  %175 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 2
  %176 = load %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"*, %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"** %175, align 8
  %177 = load %"struct.dawn_native::opengl::OpenGLFunctions"*, %"struct.dawn_native::opengl::OpenGLFunctions"** %173, align 8
  tail call fastcc void @_ZN11dawn_native6opengl12_GLOBAL__N_116BindGroupTracker5ApplyERKNS0_15OpenGLFunctionsE(%"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %176, %"struct.dawn_native::opengl::OpenGLFunctions"* dereferenceable(5664) %177)
  %178 = getelementptr inbounds %"struct.dawn_native::DrawIndirectCmd", %"struct.dawn_native::DrawIndirectCmd"* %170, i64 0, i32 1
  %179 = bitcast i64* %178 to i8**
  %180 = load i8*, i8** %179, align 8
  %181 = inttoptr i64 %167 to %"class.dawn_native::opengl::Buffer"**
  %182 = load %"class.dawn_native::opengl::Buffer"*, %"class.dawn_native::opengl::Buffer"** %181, align 8
  %183 = bitcast %"struct.dawn_native::opengl::OpenGLFunctions"** %173 to %"struct.dawn_native::opengl::OpenGLFunctionsBase"**
  %184 = load %"struct.dawn_native::opengl::OpenGLFunctionsBase"*, %"struct.dawn_native::opengl::OpenGLFunctionsBase"** %183, align 8
  %185 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctionsBase", %"struct.dawn_native::opengl::OpenGLFunctionsBase"* %184, i64 0, i32 3
  %186 = load void (i32, i32)*, void (i32, i32)** %185, align 8
  %187 = tail call i32 @_ZNK11dawn_native6opengl6Buffer9GetHandleEv(%"class.dawn_native::opengl::Buffer"* %182) #8
  tail call void %186(i32 36671, i32 %187) #8
  %188 = load %"struct.dawn_native::opengl::OpenGLFunctionsBase"*, %"struct.dawn_native::opengl::OpenGLFunctionsBase"** %183, align 8
  %189 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctionsBase", %"struct.dawn_native::opengl::OpenGLFunctionsBase"* %188, i64 0, i32 248
  %190 = load void (i32, i8*)*, void (i32, i8*)** %189, align 8
  %191 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 3
  %192 = load %"class.dawn_native::opengl::RenderPipeline"**, %"class.dawn_native::opengl::RenderPipeline"*** %191, align 8
  %193 = load %"class.dawn_native::opengl::RenderPipeline"*, %"class.dawn_native::opengl::RenderPipeline"** %192, align 8
  %194 = tail call i32 @_ZNK11dawn_native6opengl14RenderPipeline22GetGLPrimitiveTopologyEv(%"class.dawn_native::opengl::RenderPipeline"* %193) #8
  tail call void %190(i32 %194, i8* %180) #8
  br label %547

195:                                              ; preds = %3
  %196 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %1, i64 0, i32 1
  %197 = bitcast i8** %196 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = add i64 %198, 7
  %200 = and i64 %199, -8
  %201 = inttoptr i64 %200 to i8*
  %202 = getelementptr inbounds i8, i8* %201, i64 16
  store i8* %202, i8** %196, align 8
  %203 = inttoptr i64 %200 to %"struct.dawn_native::DrawIndexedIndirectCmd"*
  %204 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 0
  %205 = load %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"*, %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"** %204, align 8
  %206 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 1
  %207 = load %"struct.dawn_native::opengl::OpenGLFunctions"*, %"struct.dawn_native::opengl::OpenGLFunctions"** %206, align 8
  tail call fastcc void @_ZN11dawn_native6opengl12_GLOBAL__N_131VertexStateBufferBindingTracker5ApplyERKNS0_15OpenGLFunctionsE(%"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* %205, %"struct.dawn_native::opengl::OpenGLFunctions"* dereferenceable(5664) %207)
  %208 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 2
  %209 = load %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"*, %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"** %208, align 8
  %210 = load %"struct.dawn_native::opengl::OpenGLFunctions"*, %"struct.dawn_native::opengl::OpenGLFunctions"** %206, align 8
  tail call fastcc void @_ZN11dawn_native6opengl12_GLOBAL__N_116BindGroupTracker5ApplyERKNS0_15OpenGLFunctionsE(%"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %209, %"struct.dawn_native::opengl::OpenGLFunctions"* dereferenceable(5664) %210)
  %211 = getelementptr inbounds %"struct.dawn_native::DrawIndexedIndirectCmd", %"struct.dawn_native::DrawIndexedIndirectCmd"* %203, i64 0, i32 1
  %212 = bitcast i64* %211 to i8**
  %213 = load i8*, i8** %212, align 8
  %214 = inttoptr i64 %200 to %"class.dawn_native::opengl::Buffer"**
  %215 = load %"class.dawn_native::opengl::Buffer"*, %"class.dawn_native::opengl::Buffer"** %214, align 8
  %216 = bitcast %"struct.dawn_native::opengl::OpenGLFunctions"** %206 to %"struct.dawn_native::opengl::OpenGLFunctionsBase"**
  %217 = load %"struct.dawn_native::opengl::OpenGLFunctionsBase"*, %"struct.dawn_native::opengl::OpenGLFunctionsBase"** %216, align 8
  %218 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctionsBase", %"struct.dawn_native::opengl::OpenGLFunctionsBase"* %217, i64 0, i32 3
  %219 = load void (i32, i32)*, void (i32, i32)** %218, align 8
  %220 = tail call i32 @_ZNK11dawn_native6opengl6Buffer9GetHandleEv(%"class.dawn_native::opengl::Buffer"* %215) #8
  tail call void %219(i32 36671, i32 %220) #8
  %221 = load %"struct.dawn_native::opengl::OpenGLFunctionsBase"*, %"struct.dawn_native::opengl::OpenGLFunctionsBase"** %216, align 8
  %222 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctionsBase", %"struct.dawn_native::opengl::OpenGLFunctionsBase"* %221, i64 0, i32 249
  %223 = load void (i32, i32, i8*)*, void (i32, i32, i8*)** %222, align 8
  %224 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 3
  %225 = load %"class.dawn_native::opengl::RenderPipeline"**, %"class.dawn_native::opengl::RenderPipeline"*** %224, align 8
  %226 = load %"class.dawn_native::opengl::RenderPipeline"*, %"class.dawn_native::opengl::RenderPipeline"** %225, align 8
  %227 = tail call i32 @_ZNK11dawn_native6opengl14RenderPipeline22GetGLPrimitiveTopologyEv(%"class.dawn_native::opengl::RenderPipeline"* %226) #8
  %228 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 4
  %229 = load i32*, i32** %228, align 8
  %230 = load i32, i32* %229, align 4
  tail call void %223(i32 %227, i32 %230, i8* %213) #8
  br label %547

231:                                              ; preds = %3, %3, %3
  tail call void @_ZN11dawn_native11SkipCommandEPNS_15CommandIteratorENS_7CommandE(%"class.dawn_native::CommandIterator"* %1, i32 %2) #8
  br label %547

232:                                              ; preds = %3
  %233 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %1, i64 0, i32 1
  %234 = bitcast i8** %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = add i64 %235, 7
  %237 = and i64 %236, -8
  %238 = inttoptr i64 %237 to i8*
  %239 = getelementptr inbounds i8, i8* %238, i64 8
  store i8* %239, i8** %233, align 8
  %240 = inttoptr i64 %237 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 3
  %243 = bitcast %"class.dawn_native::opengl::RenderPipeline"*** %242 to i64**
  %244 = load i64*, i64** %243, align 8
  store i64 %241, i64* %244, align 8
  %245 = load %"class.dawn_native::opengl::RenderPipeline"**, %"class.dawn_native::opengl::RenderPipeline"*** %242, align 8
  %246 = load %"class.dawn_native::opengl::RenderPipeline"*, %"class.dawn_native::opengl::RenderPipeline"** %245, align 8
  %247 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 7
  %248 = load %"class.dawn_native::opengl::PersistentPipelineState"*, %"class.dawn_native::opengl::PersistentPipelineState"** %247, align 8
  tail call void @_ZN11dawn_native6opengl14RenderPipeline8ApplyNowERNS0_23PersistentPipelineStateE(%"class.dawn_native::opengl::RenderPipeline"* %246, %"class.dawn_native::opengl::PersistentPipelineState"* dereferenceable(16) %248) #8
  %249 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 0
  %250 = load %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"*, %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"** %249, align 8
  %251 = bitcast %"class.dawn_native::opengl::RenderPipeline"*** %242 to %"class.dawn_native::RenderPipelineBase"***
  %252 = load %"class.dawn_native::RenderPipelineBase"**, %"class.dawn_native::RenderPipelineBase"*** %251, align 8
  %253 = load %"class.dawn_native::RenderPipelineBase"*, %"class.dawn_native::RenderPipelineBase"** %252, align 8
  %254 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker", %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* %250, i64 0, i32 5
  %255 = load %"class.dawn_native::RenderPipelineBase"*, %"class.dawn_native::RenderPipelineBase"** %254, align 8
  %256 = icmp eq %"class.dawn_native::RenderPipelineBase"* %255, %253
  %257 = bitcast %"class.dawn_native::RenderPipelineBase"* %253 to %"class.dawn_native::opengl::RenderPipeline"*
  br i1 %256, label %268, label %258

258:                                              ; preds = %232
  %259 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker", %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* %250, i64 0, i32 0
  store i8 1, i8* %259, align 8
  %260 = tail call dereferenceable(8) %"class.ityp::bitset.392"* @_ZNK11dawn_native18RenderPipelineBase24GetVertexBufferSlotsUsedEv(%"class.dawn_native::RenderPipelineBase"* %253) #8
  %261 = getelementptr inbounds %"class.ityp::bitset.392", %"class.ityp::bitset.392"* %260, i64 0, i32 0, i32 0, i32 0
  %262 = load i64, i64* %261, align 8
  %263 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker", %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* %250, i64 0, i32 2, i32 0, i32 0, i32 0
  %264 = load i64, i64* %263, align 8
  %265 = or i64 %264, %262
  store i64 %265, i64* %263, align 8
  store %"class.dawn_native::RenderPipelineBase"* %253, %"class.dawn_native::RenderPipelineBase"** %254, align 8
  %266 = load %"class.dawn_native::opengl::RenderPipeline"**, %"class.dawn_native::opengl::RenderPipeline"*** %242, align 8
  %267 = load %"class.dawn_native::opengl::RenderPipeline"*, %"class.dawn_native::opengl::RenderPipeline"** %266, align 8
  br label %268

268:                                              ; preds = %232, %258
  %269 = phi %"class.dawn_native::opengl::RenderPipeline"* [ %257, %232 ], [ %267, %258 ]
  %270 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 2
  %271 = load %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"*, %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"** %270, align 8
  %272 = getelementptr inbounds %"class.dawn_native::opengl::RenderPipeline", %"class.dawn_native::opengl::RenderPipeline"* %269, i64 0, i32 0, i32 0
  %273 = tail call %"class.dawn_native::PipelineLayoutBase"* @_ZN11dawn_native12PipelineBase9GetLayoutEv(%"class.dawn_native::PipelineBase"* %272) #8
  %274 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %271, i64 0, i32 0, i32 6
  store %"class.dawn_native::PipelineLayoutBase"* %273, %"class.dawn_native::PipelineLayoutBase"** %274, align 8
  %275 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %271, i64 0, i32 0, i32 7
  %276 = load %"class.dawn_native::PipelineLayoutBase"*, %"class.dawn_native::PipelineLayoutBase"** %275, align 8
  %277 = icmp eq %"class.dawn_native::PipelineLayoutBase"* %276, %273
  br i1 %277, label %285, label %278

278:                                              ; preds = %268
  %279 = tail call dereferenceable(8) %"class.ityp::bitset.337"* @_ZNK11dawn_native18PipelineLayoutBase23GetBindGroupLayoutsMaskEv(%"class.dawn_native::PipelineLayoutBase"* %273) #8
  %280 = getelementptr inbounds %"class.ityp::bitset.337", %"class.ityp::bitset.337"* %279, i64 0, i32 0, i32 0, i32 0
  %281 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %271, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %282 = load i64, i64* %280, align 8
  store i64 %282, i64* %281, align 8
  %283 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %271, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %282, i64* %283, align 8
  %284 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %271, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i64 %282, i64* %284, align 8
  br label %285

285:                                              ; preds = %268, %278
  %286 = icmp eq %"class.dawn_native::opengl::RenderPipeline"* %269, null
  %287 = getelementptr inbounds %"class.dawn_native::opengl::RenderPipeline", %"class.dawn_native::opengl::RenderPipeline"* %269, i64 0, i32 1
  %288 = select i1 %286, %"class.dawn_native::opengl::PipelineGL"* null, %"class.dawn_native::opengl::PipelineGL"* %287
  %289 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker", %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"* %271, i64 0, i32 1
  store %"class.dawn_native::opengl::PipelineGL"* %288, %"class.dawn_native::opengl::PipelineGL"** %289, align 8
  br label %547

290:                                              ; preds = %3
  %291 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %1, i64 0, i32 1
  %292 = bitcast i8** %291 to i64*
  %293 = load i64, i64* %292, align 8
  %294 = add i64 %293, 7
  %295 = and i64 %294, -8
  %296 = inttoptr i64 %295 to i8*
  %297 = getelementptr inbounds i8, i8* %296, i64 24
  store i8* %297, i8** %291, align 8
  %298 = inttoptr i64 %295 to %"struct.dawn_native::SetBindGroupCmd"*
  %299 = getelementptr inbounds %"struct.dawn_native::SetBindGroupCmd", %"struct.dawn_native::SetBindGroupCmd"* %298, i64 0, i32 3
  %300 = load i32, i32* %299, align 8
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %323, label %302

302:                                              ; preds = %290
  %303 = zext i32 %300 to i64
  %304 = shl nuw nsw i64 %303, 2
  %305 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %305) #8
  store i32 -1431655766, i32* %4, align 4
  %306 = bitcast i8* %297 to i32*
  %307 = load i32, i32* %306, align 8
  %308 = icmp eq i32 %307, -1
  br i1 %308, label %312, label %309

309:                                              ; preds = %302
  %310 = getelementptr inbounds i8, i8* %296, i64 28
  store i8* %310, i8** %291, align 8
  store i32 %307, i32* %4, align 4
  %311 = ptrtoint i8* %310 to i64
  br label %315

312:                                              ; preds = %302
  %313 = call zeroext i1 @_ZN11dawn_native15CommandIterator23NextCommandIdInNewBlockEPj(%"class.dawn_native::CommandIterator"* %1, i32* nonnull %4) #8
  %314 = load i64, i64* %292, align 8
  br label %315

315:                                              ; preds = %309, %312
  %316 = phi i64 [ %311, %309 ], [ %314, %312 ]
  %317 = add i64 %316, 3
  %318 = and i64 %317, -4
  %319 = inttoptr i64 %318 to i8*
  %320 = getelementptr inbounds i8, i8* %319, i64 %304
  store i8* %320, i8** %291, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %305) #8
  %321 = inttoptr i64 %318 to i32*
  %322 = load i32, i32* %299, align 8
  br label %323

323:                                              ; preds = %290, %315
  %324 = phi i32 [ %322, %315 ], [ 0, %290 ]
  %325 = phi i32* [ %321, %315 ], [ null, %290 ]
  %326 = bitcast i32* %325 to i8*
  %327 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 2
  %328 = bitcast %"class.dawn_native::opengl::(anonymous namespace)::BindGroupTracker"** %327 to %"class.dawn_native::BindGroupTrackerBase"**
  %329 = load %"class.dawn_native::BindGroupTrackerBase"*, %"class.dawn_native::BindGroupTrackerBase"** %328, align 8
  %330 = bitcast %"class.dawn_native::BindGroupTrackerBase"* %329 to i8*
  %331 = getelementptr inbounds %"struct.dawn_native::SetBindGroupCmd", %"struct.dawn_native::SetBindGroupCmd"* %298, i64 0, i32 0
  %332 = load i32, i32* %331, align 8
  %333 = getelementptr inbounds %"struct.dawn_native::SetBindGroupCmd", %"struct.dawn_native::SetBindGroupCmd"* %298, i64 0, i32 2, i32 0, i32 0
  %334 = load %"class.dawn_native::BindGroupBase"*, %"class.dawn_native::BindGroupBase"** %333, align 8
  %335 = zext i32 %332 to i64
  %336 = getelementptr inbounds %"class.dawn_native::BindGroupTrackerBase", %"class.dawn_native::BindGroupTrackerBase"* %329, i64 0, i32 2, i32 0, i32 0, i32 0
  %337 = shl i64 1, %335
  %338 = load i64, i64* %336, align 8
  %339 = and i64 %338, %337
  %340 = icmp eq i64 %339, 0
  %341 = getelementptr inbounds %"class.dawn_native::BindGroupTrackerBase", %"class.dawn_native::BindGroupTrackerBase"* %329, i64 0, i32 3, i32 0, i32 0, i64 %335
  br i1 %340, label %367, label %342

342:                                              ; preds = %323
  %343 = load %"class.dawn_native::BindGroupBase"*, %"class.dawn_native::BindGroupBase"** %341, align 8
  %344 = icmp eq %"class.dawn_native::BindGroupBase"* %343, %334
  br i1 %344, label %355, label %345

345:                                              ; preds = %342
  %346 = icmp ugt i32 %332, 3
  br i1 %346, label %347, label %348

347:                                              ; preds = %345
  call void @abort() #10
  unreachable

348:                                              ; preds = %345
  %349 = bitcast %"class.dawn_native::BindGroupTrackerBase"* %329 to <2 x i64>*
  %350 = load <2 x i64>, <2 x i64>* %349, align 8
  %351 = insertelement <2 x i64> undef, i64 %337, i32 0
  %352 = shufflevector <2 x i64> %351, <2 x i64> undef, <2 x i32> zeroinitializer
  %353 = or <2 x i64> %350, %352
  %354 = bitcast %"class.dawn_native::BindGroupTrackerBase"* %329 to <2 x i64>*
  store <2 x i64> %353, <2 x i64>* %354, align 8
  br label %355

355:                                              ; preds = %348, %342
  %356 = icmp eq i32 %324, 0
  br i1 %356, label %357, label %359

357:                                              ; preds = %355
  store %"class.dawn_native::BindGroupBase"* %334, %"class.dawn_native::BindGroupBase"** %341, align 8
  %358 = getelementptr inbounds %"class.dawn_native::BindGroupTrackerBase", %"class.dawn_native::BindGroupTrackerBase"* %329, i64 0, i32 4, i32 0, i32 0, i64 %335
  store i32 0, i32* %358, align 4
  br label %547

359:                                              ; preds = %355
  %360 = icmp ugt i32 %332, 3
  br i1 %360, label %361, label %362

361:                                              ; preds = %359
  call void @abort() #10
  unreachable

362:                                              ; preds = %359
  %363 = getelementptr inbounds %"class.dawn_native::BindGroupTrackerBase", %"class.dawn_native::BindGroupTrackerBase"* %329, i64 0, i32 1, i32 0, i32 0, i32 0
  %364 = load i64, i64* %363, align 8
  %365 = or i64 %364, %337
  store i64 %365, i64* %363, align 8
  store %"class.dawn_native::BindGroupBase"* %334, %"class.dawn_native::BindGroupBase"** %341, align 8
  %366 = getelementptr inbounds %"class.dawn_native::BindGroupTrackerBase", %"class.dawn_native::BindGroupTrackerBase"* %329, i64 0, i32 4, i32 0, i32 0, i64 %335
  store i32 %324, i32* %366, align 4
  br label %370

367:                                              ; preds = %323
  store %"class.dawn_native::BindGroupBase"* %334, %"class.dawn_native::BindGroupBase"** %341, align 8
  %368 = getelementptr inbounds %"class.dawn_native::BindGroupTrackerBase", %"class.dawn_native::BindGroupTrackerBase"* %329, i64 0, i32 4, i32 0, i32 0, i64 %335
  store i32 %324, i32* %368, align 4
  %369 = icmp eq i32 %324, 0
  br i1 %369, label %547, label %370

370:                                              ; preds = %367, %362
  %371 = zext i32 %324 to i64
  %372 = icmp ult i32 %324, 4
  br i1 %372, label %444, label %373

373:                                              ; preds = %370
  %374 = mul nuw nsw i64 %335, 96
  %375 = add nuw nsw i64 %374, 72
  %376 = getelementptr i8, i8* %330, i64 %375
  %377 = shl nuw nsw i64 %371, 3
  %378 = add nuw nsw i64 %374, %377
  %379 = add nuw nsw i64 %378, 72
  %380 = getelementptr i8, i8* %330, i64 %379
  %381 = getelementptr i32, i32* %325, i64 %371
  %382 = bitcast i32* %381 to i8*
  %383 = icmp ult i8* %376, %382
  %384 = icmp ugt i8* %380, %326
  %385 = and i1 %383, %384
  br i1 %385, label %444, label %386

386:                                              ; preds = %373
  %387 = and i64 %371, 4294967292
  %388 = add nsw i64 %387, -4
  %389 = lshr exact i64 %388, 2
  %390 = add nuw nsw i64 %389, 1
  %391 = and i64 %390, 1
  %392 = icmp eq i64 %388, 0
  br i1 %392, label %426, label %393

393:                                              ; preds = %386
  %394 = sub nuw nsw i64 %390, %391
  br label %395

395:                                              ; preds = %395, %393
  %396 = phi i64 [ 0, %393 ], [ %423, %395 ]
  %397 = phi i64 [ %394, %393 ], [ %424, %395 ]
  %398 = getelementptr inbounds i32, i32* %325, i64 %396
  %399 = bitcast i32* %398 to <2 x i32>*
  %400 = load <2 x i32>, <2 x i32>* %399, align 4, !alias.scope !101
  %401 = getelementptr inbounds i32, i32* %398, i64 2
  %402 = bitcast i32* %401 to <2 x i32>*
  %403 = load <2 x i32>, <2 x i32>* %402, align 4, !alias.scope !101
  %404 = zext <2 x i32> %400 to <2 x i64>
  %405 = zext <2 x i32> %403 to <2 x i64>
  %406 = getelementptr inbounds %"class.dawn_native::BindGroupTrackerBase", %"class.dawn_native::BindGroupTrackerBase"* %329, i64 0, i32 5, i32 0, i32 0, i64 %335, i32 0, i64 %396
  %407 = bitcast i64* %406 to <2 x i64>*
  store <2 x i64> %404, <2 x i64>* %407, align 8, !alias.scope !104, !noalias !101
  %408 = getelementptr inbounds i64, i64* %406, i64 2
  %409 = bitcast i64* %408 to <2 x i64>*
  store <2 x i64> %405, <2 x i64>* %409, align 8, !alias.scope !104, !noalias !101
  %410 = or i64 %396, 4
  %411 = getelementptr inbounds i32, i32* %325, i64 %410
  %412 = bitcast i32* %411 to <2 x i32>*
  %413 = load <2 x i32>, <2 x i32>* %412, align 4, !alias.scope !101
  %414 = getelementptr inbounds i32, i32* %411, i64 2
  %415 = bitcast i32* %414 to <2 x i32>*
  %416 = load <2 x i32>, <2 x i32>* %415, align 4, !alias.scope !101
  %417 = zext <2 x i32> %413 to <2 x i64>
  %418 = zext <2 x i32> %416 to <2 x i64>
  %419 = getelementptr inbounds %"class.dawn_native::BindGroupTrackerBase", %"class.dawn_native::BindGroupTrackerBase"* %329, i64 0, i32 5, i32 0, i32 0, i64 %335, i32 0, i64 %410
  %420 = bitcast i64* %419 to <2 x i64>*
  store <2 x i64> %417, <2 x i64>* %420, align 8, !alias.scope !104, !noalias !101
  %421 = getelementptr inbounds i64, i64* %419, i64 2
  %422 = bitcast i64* %421 to <2 x i64>*
  store <2 x i64> %418, <2 x i64>* %422, align 8, !alias.scope !104, !noalias !101
  %423 = add i64 %396, 8
  %424 = add i64 %397, -2
  %425 = icmp eq i64 %424, 0
  br i1 %425, label %426, label %395, !llvm.loop !106

426:                                              ; preds = %395, %386
  %427 = phi i64 [ 0, %386 ], [ %423, %395 ]
  %428 = icmp eq i64 %391, 0
  br i1 %428, label %442, label %429

429:                                              ; preds = %426
  %430 = getelementptr inbounds i32, i32* %325, i64 %427
  %431 = bitcast i32* %430 to <2 x i32>*
  %432 = load <2 x i32>, <2 x i32>* %431, align 4, !alias.scope !101
  %433 = getelementptr inbounds i32, i32* %430, i64 2
  %434 = bitcast i32* %433 to <2 x i32>*
  %435 = load <2 x i32>, <2 x i32>* %434, align 4, !alias.scope !101
  %436 = zext <2 x i32> %432 to <2 x i64>
  %437 = zext <2 x i32> %435 to <2 x i64>
  %438 = getelementptr inbounds %"class.dawn_native::BindGroupTrackerBase", %"class.dawn_native::BindGroupTrackerBase"* %329, i64 0, i32 5, i32 0, i32 0, i64 %335, i32 0, i64 %427
  %439 = bitcast i64* %438 to <2 x i64>*
  store <2 x i64> %436, <2 x i64>* %439, align 8, !alias.scope !104, !noalias !101
  %440 = getelementptr inbounds i64, i64* %438, i64 2
  %441 = bitcast i64* %440 to <2 x i64>*
  store <2 x i64> %437, <2 x i64>* %441, align 8, !alias.scope !104, !noalias !101
  br label %442

442:                                              ; preds = %426, %429
  %443 = icmp eq i64 %387, %371
  br i1 %443, label %547, label %444

444:                                              ; preds = %442, %373, %370
  %445 = phi i64 [ 0, %373 ], [ 0, %370 ], [ %387, %442 ]
  %446 = xor i64 %445, -1
  %447 = add nsw i64 %446, %371
  %448 = and i64 %371, 3
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %460, label %450

450:                                              ; preds = %444, %450
  %451 = phi i64 [ %457, %450 ], [ %445, %444 ]
  %452 = phi i64 [ %458, %450 ], [ %448, %444 ]
  %453 = getelementptr inbounds i32, i32* %325, i64 %451
  %454 = load i32, i32* %453, align 4
  %455 = zext i32 %454 to i64
  %456 = getelementptr inbounds %"class.dawn_native::BindGroupTrackerBase", %"class.dawn_native::BindGroupTrackerBase"* %329, i64 0, i32 5, i32 0, i32 0, i64 %335, i32 0, i64 %451
  store i64 %455, i64* %456, align 8
  %457 = add nuw nsw i64 %451, 1
  %458 = add i64 %452, -1
  %459 = icmp eq i64 %458, 0
  br i1 %459, label %460, label %450, !llvm.loop !107

460:                                              ; preds = %450, %444
  %461 = phi i64 [ %445, %444 ], [ %457, %450 ]
  %462 = icmp ult i64 %447, 3
  br i1 %462, label %547, label %463

463:                                              ; preds = %460, %463
  %464 = phi i64 [ %484, %463 ], [ %461, %460 ]
  %465 = getelementptr inbounds i32, i32* %325, i64 %464
  %466 = load i32, i32* %465, align 4
  %467 = zext i32 %466 to i64
  %468 = getelementptr inbounds %"class.dawn_native::BindGroupTrackerBase", %"class.dawn_native::BindGroupTrackerBase"* %329, i64 0, i32 5, i32 0, i32 0, i64 %335, i32 0, i64 %464
  store i64 %467, i64* %468, align 8
  %469 = add nuw nsw i64 %464, 1
  %470 = getelementptr inbounds i32, i32* %325, i64 %469
  %471 = load i32, i32* %470, align 4
  %472 = zext i32 %471 to i64
  %473 = getelementptr inbounds %"class.dawn_native::BindGroupTrackerBase", %"class.dawn_native::BindGroupTrackerBase"* %329, i64 0, i32 5, i32 0, i32 0, i64 %335, i32 0, i64 %469
  store i64 %472, i64* %473, align 8
  %474 = add nuw nsw i64 %464, 2
  %475 = getelementptr inbounds i32, i32* %325, i64 %474
  %476 = load i32, i32* %475, align 4
  %477 = zext i32 %476 to i64
  %478 = getelementptr inbounds %"class.dawn_native::BindGroupTrackerBase", %"class.dawn_native::BindGroupTrackerBase"* %329, i64 0, i32 5, i32 0, i32 0, i64 %335, i32 0, i64 %474
  store i64 %477, i64* %478, align 8
  %479 = add nuw nsw i64 %464, 3
  %480 = getelementptr inbounds i32, i32* %325, i64 %479
  %481 = load i32, i32* %480, align 4
  %482 = zext i32 %481 to i64
  %483 = getelementptr inbounds %"class.dawn_native::BindGroupTrackerBase", %"class.dawn_native::BindGroupTrackerBase"* %329, i64 0, i32 5, i32 0, i32 0, i64 %335, i32 0, i64 %479
  store i64 %482, i64* %483, align 8
  %484 = add nuw nsw i64 %464, 4
  %485 = icmp eq i64 %484, %371
  br i1 %485, label %547, label %463, !llvm.loop !108

486:                                              ; preds = %3
  %487 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %1, i64 0, i32 1
  %488 = bitcast i8** %487 to i64*
  %489 = load i64, i64* %488, align 8
  %490 = add i64 %489, 7
  %491 = and i64 %490, -8
  %492 = inttoptr i64 %491 to i8*
  %493 = getelementptr inbounds i8, i8* %492, i64 32
  store i8* %493, i8** %487, align 8
  %494 = inttoptr i64 %491 to %"struct.dawn_native::SetIndexBufferCmd"*
  %495 = getelementptr inbounds %"struct.dawn_native::SetIndexBufferCmd", %"struct.dawn_native::SetIndexBufferCmd"* %494, i64 0, i32 2
  %496 = load i64, i64* %495, align 8
  %497 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 6
  %498 = load i64*, i64** %497, align 8
  store i64 %496, i64* %498, align 8
  %499 = getelementptr inbounds %"struct.dawn_native::SetIndexBufferCmd", %"struct.dawn_native::SetIndexBufferCmd"* %494, i64 0, i32 1
  %500 = load i32, i32* %499, align 8
  %501 = icmp eq i32 %500, 1
  %502 = select i1 %501, i32 5123, i32 5125
  %503 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 4
  %504 = load i32*, i32** %503, align 8
  store i32 %502, i32* %504, align 4
  %505 = load i32, i32* %499, align 8
  %506 = tail call i64 @_ZN11dawn_native15IndexFormatSizeEN4wgpu11IndexFormatE(i32 %505) #8
  %507 = trunc i64 %506 to i32
  %508 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 5
  %509 = load i32*, i32** %508, align 8
  store i32 %507, i32* %509, align 4
  %510 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 0
  %511 = load %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"*, %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"** %510, align 8
  %512 = inttoptr i64 %491 to i64*
  %513 = load i64, i64* %512, align 8
  %514 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker", %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* %511, i64 0, i32 0
  store i8 1, i8* %514, align 8
  %515 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker", %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* %511, i64 0, i32 1
  %516 = bitcast %"class.dawn_native::opengl::Buffer"** %515 to i64*
  store i64 %513, i64* %516, align 8
  br label %547

517:                                              ; preds = %3
  %518 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %1, i64 0, i32 1
  %519 = bitcast i8** %518 to i64*
  %520 = load i64, i64* %519, align 8
  %521 = add i64 %520, 7
  %522 = and i64 %521, -8
  %523 = inttoptr i64 %522 to i8*
  %524 = getelementptr inbounds i8, i8* %523, i64 32
  store i8* %524, i8** %518, align 8
  %525 = inttoptr i64 %522 to %"struct.dawn_native::SetVertexBufferCmd"*
  %526 = getelementptr inbounds %class.anon.407, %class.anon.407* %0, i64 0, i32 0
  %527 = load %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"*, %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"** %526, align 8
  %528 = getelementptr inbounds %"struct.dawn_native::SetVertexBufferCmd", %"struct.dawn_native::SetVertexBufferCmd"* %525, i64 0, i32 0
  %529 = load i8, i8* %528, align 8
  %530 = getelementptr inbounds %"struct.dawn_native::SetVertexBufferCmd", %"struct.dawn_native::SetVertexBufferCmd"* %525, i64 0, i32 1, i32 0, i32 0
  %531 = bitcast %"class.dawn_native::BufferBase"** %530 to i64*
  %532 = load i64, i64* %531, align 8
  %533 = getelementptr inbounds %"struct.dawn_native::SetVertexBufferCmd", %"struct.dawn_native::SetVertexBufferCmd"* %525, i64 0, i32 2
  %534 = load i64, i64* %533, align 8
  %535 = zext i8 %529 to i64
  %536 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker", %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* %527, i64 0, i32 3, i32 0, i32 0, i64 %535
  %537 = bitcast %"class.dawn_native::opengl::Buffer"** %536 to i64*
  store i64 %532, i64* %537, align 8
  %538 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker", %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* %527, i64 0, i32 4, i32 0, i32 0, i64 %535
  store i64 %534, i64* %538, align 8
  %539 = icmp ugt i8 %529, 7
  br i1 %539, label %540, label %541

540:                                              ; preds = %517
  tail call void @abort() #10
  unreachable

541:                                              ; preds = %517
  %542 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker", %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* %527, i64 0, i32 2, i32 0, i32 0, i32 0
  %543 = shl i64 1, %535
  %544 = load i64, i64* %542, align 8
  %545 = or i64 %544, %543
  store i64 %545, i64* %542, align 8
  br label %547

546:                                              ; preds = %3
  unreachable

547:                                              ; preds = %460, %463, %442, %367, %357, %72, %136, %109, %26, %40, %541, %486, %285, %231, %195, %162
  ret void
}

declare { i64, i32 } @_ZNK11dawn_native11TextureBase22GetMipLevelVirtualSizeEj(%"class.dawn_native::TextureBase"*, i32) local_unnamed_addr #1

declare dereferenceable(12) %"struct.dawn_native::opengl::OpenGLVersion"* @_ZNK11dawn_native6opengl15OpenGLFunctions10GetVersionEv(%"struct.dawn_native::opengl::OpenGLFunctions"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK11dawn_native6opengl13OpenGLVersion9IsDesktopEv(%"struct.dawn_native::opengl::OpenGLVersion"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN11dawn_native17CommandBufferBaseD2Ev(%"class.dawn_native::CommandBufferBase"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11dawn_native6opengl13CommandBufferD0Ev(%"class.dawn_native::opengl::CommandBuffer"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.dawn_native::opengl::CommandBuffer"* %0 to %"class.dawn_native::CommandBufferBase"*
  tail call void @_ZN11dawn_native17CommandBufferBaseD2Ev(%"class.dawn_native::CommandBufferBase"* %2) #8
  %3 = bitcast %"class.dawn_native::opengl::CommandBuffer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #9
  ret void
}

declare void @_ZN10RefCounted10DeleteThisEv(%class.RefCounted*) unnamed_addr #1

declare zeroext i8 @_ZN11dawn_native14GetAspectIndexENS_6AspectE(i8 zeroext) local_unnamed_addr #1

declare void @_ZN11dawn_native16SubresourceRange8MakeFullENS_6AspectEjj(%"struct.dawn_native::SubresourceRange"* sret, i8 zeroext, i32, i32) local_unnamed_addr #1

declare void @_ZN11dawn_native16SubresourceRange10MakeSingleENS_6AspectEjj(%"struct.dawn_native::SubresourceRange"* sret, i8 zeroext, i32, i32) local_unnamed_addr #1

declare i32 @_Z11ScanForwardj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm6EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* noalias sret, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

declare void @_ZN11dawn_native16SubresourceRangeC1ENS_6AspectENS_18FirstAndCountRangeIjEES3_(%"struct.dawn_native::SubresourceRange"*, i8 zeroext, i64, i64) unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.418"* noalias sret, %"class.std::__1::__bit_iterator.418"*, %"class.std::__1::__bit_iterator.418"*, %"class.std::__1::__bit_iterator.418"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator.418"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator.418"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator.418"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator.418"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator.418", %"class.std::__1::__bit_iterator.418"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

declare dereferenceable(96) %"class.ityp::array.423"* @_ZNK11dawn_native6opengl14PipelineLayout19GetBindingIndexInfoEv(%"class.dawn_native::opengl::PipelineLayout"*) local_unnamed_addr #1

declare %"class.dawn_native::BindGroupLayoutBase"* @_ZN11dawn_native13BindGroupBase9GetLayoutEv(%"class.dawn_native::BindGroupBase"*) local_unnamed_addr #1

declare i32 @_ZNK11dawn_native19BindGroupLayoutBase15GetBindingCountEv(%"class.dawn_native::BindGroupLayoutBase"*) local_unnamed_addr #1

declare void @_ZN11dawn_native13BindGroupBase25GetBindingAsBufferBindingEj(%"struct.dawn_native::BufferBinding"* sret, %"class.dawn_native::BindGroupBase"*, i32) local_unnamed_addr #1

declare %"class.dawn_native::SamplerBase"* @_ZNK11dawn_native13BindGroupBase19GetBindingAsSamplerEj(%"class.dawn_native::BindGroupBase"*, i32) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::vector.346"* @_ZNK11dawn_native6opengl10PipelineGL25GetTextureUnitsForSamplerEj(%"class.dawn_native::opengl::PipelineGL"*, i32) local_unnamed_addr #1

declare i32 @_ZNK11dawn_native6opengl7Sampler18GetFilteringHandleEv(%"class.dawn_native::opengl::Sampler"*) local_unnamed_addr #1

declare i32 @_ZNK11dawn_native6opengl7Sampler21GetNonFilteringHandleEv(%"class.dawn_native::opengl::Sampler"*) local_unnamed_addr #1

declare %"class.dawn_native::TextureViewBase"* @_ZN11dawn_native13BindGroupBase23GetBindingAsTextureViewEj(%"class.dawn_native::BindGroupBase"*, i32) local_unnamed_addr #1

declare i32 @_ZNK11dawn_native6opengl11TextureView9GetHandleEv(%"class.dawn_native::opengl::TextureView"*) local_unnamed_addr #1

declare i32 @_ZNK11dawn_native6opengl11TextureView11GetGLTargetEv(%"class.dawn_native::opengl::TextureView"*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::vector.258"* @_ZNK11dawn_native6opengl10PipelineGL29GetTextureUnitsForTextureViewEj(%"class.dawn_native::opengl::PipelineGL"*, i32) local_unnamed_addr #1

declare zeroext i8 @_ZNK11dawn_native15TextureViewBase10GetAspectsEv(%"class.dawn_native::TextureViewBase"*) local_unnamed_addr #1

declare i32 @_ZNK11dawn_native15TextureViewBase13GetLayerCountEv(%"class.dawn_native::TextureViewBase"*) local_unnamed_addr #1

declare %"class.dawn_native::PipelineLayoutBase"* @_ZN11dawn_native12PipelineBase9GetLayoutEv(%"class.dawn_native::PipelineBase"*) local_unnamed_addr #1

declare dereferenceable(8) %"class.ityp::bitset.337"* @_ZNK11dawn_native18PipelineLayoutBase23GetBindGroupLayoutsMaskEv(%"class.dawn_native::PipelineLayoutBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN11dawn_native6opengl12_GLOBAL__N_131VertexStateBufferBindingTracker5ApplyERKNS0_15OpenGLFunctionsE(%"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* nocapture, %"struct.dawn_native::opengl::OpenGLFunctions"* nocapture readonly dereferenceable(5664)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::__bit_iterator.438", align 8
  %4 = alloca %"class.std::__1::__bit_iterator.438", align 8
  %5 = alloca %"class.std::__1::__bit_iterator.438", align 8
  %6 = alloca %"class.std::__1::__bit_iterator.438", align 8
  %7 = alloca %"class.std::__1::__bit_iterator.434", align 8
  %8 = alloca %"class.std::__1::__bit_iterator.434", align 8
  %9 = alloca %"class.std::__1::__bit_iterator.434", align 8
  %10 = alloca %"class.std::__1::__bit_iterator.434", align 8
  %11 = alloca %"class.std::__1::__bit_iterator.434", align 8
  %12 = alloca %"class.std::__1::__bit_iterator.434", align 8
  %13 = alloca %"class.std::__1::__bit_iterator.434", align 8
  %14 = alloca %"class.std::__1::__bit_iterator.434", align 8
  %15 = alloca %"class.std::__1::__bit_iterator.438", align 8
  %16 = alloca %"class.std::__1::__bit_iterator.438", align 8
  %17 = alloca %"class.std::__1::__bit_iterator.438", align 8
  %18 = alloca %"class.std::__1::__bit_iterator.438", align 8
  %19 = alloca %"class.BitSetIterator<8, unsigned char>::Iterator", align 8
  %20 = alloca %"class.BitSetIterator<16, unsigned char>::Iterator", align 8
  %21 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker", %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* %0, i64 0, i32 0
  %22 = load i8, i8* %21, align 8, !range !3
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %32, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker", %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* %0, i64 0, i32 1
  %26 = load %"class.dawn_native::opengl::Buffer"*, %"class.dawn_native::opengl::Buffer"** %25, align 8
  %27 = icmp eq %"class.dawn_native::opengl::Buffer"* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 3
  %30 = load void (i32, i32)*, void (i32, i32)** %29, align 8
  %31 = tail call i32 @_ZNK11dawn_native6opengl6Buffer9GetHandleEv(%"class.dawn_native::opengl::Buffer"* nonnull %26) #8
  tail call void %30(i32 34963, i32 %31) #8
  store i8 0, i8* %21, align 8
  br label %32

32:                                               ; preds = %24, %2, %28
  %33 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker", %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* %0, i64 0, i32 5
  %34 = load %"class.dawn_native::RenderPipelineBase"*, %"class.dawn_native::RenderPipelineBase"** %33, align 8
  %35 = tail call dereferenceable(8) %"class.ityp::bitset.392"* @_ZNK11dawn_native18RenderPipelineBase24GetVertexBufferSlotsUsedEv(%"class.dawn_native::RenderPipelineBase"* %34) #8
  %36 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker", %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.ityp::bitset.392", %"class.ityp::bitset.392"* %35, i64 0, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = and i64 %39, %37
  %41 = bitcast %"class.BitSetIterator<8, unsigned char>::Iterator"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #8
  %42 = getelementptr inbounds %"class.BitSetIterator<8, unsigned char>::Iterator", %"class.BitSetIterator<8, unsigned char>::Iterator"* %19, i64 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.BitSetIterator<8, unsigned char>::Iterator", %"class.BitSetIterator<8, unsigned char>::Iterator"* %19, i64 0, i32 1
  %44 = getelementptr inbounds %"class.BitSetIterator<8, unsigned char>::Iterator", %"class.BitSetIterator<8, unsigned char>::Iterator"* %19, i64 0, i32 2
  store i64 %40, i64* %42, align 8, !alias.scope !109
  %45 = bitcast i64* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #8, !alias.scope !109
  %46 = and i64 %40, 255
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %81, label %48

48:                                               ; preds = %32
  %49 = ptrtoint %"class.BitSetIterator<8, unsigned char>::Iterator"* %19 to i64
  %50 = bitcast %"class.std::__1::__bit_iterator.434"* %14 to i8*
  %51 = bitcast %"class.std::__1::__bit_iterator.434"* %11 to i8*
  %52 = bitcast %"class.std::__1::__bit_iterator.434"* %12 to i8*
  %53 = bitcast %"class.std::__1::__bit_iterator.434"* %13 to i8*
  %54 = bitcast %"class.std::__1::__bit_iterator.434"* %11 to i64*
  %55 = getelementptr inbounds %"class.std::__1::__bit_iterator.434", %"class.std::__1::__bit_iterator.434"* %11, i64 0, i32 1
  %56 = bitcast %"class.std::__1::__bit_iterator.434"* %12 to i64*
  %57 = getelementptr inbounds %"class.std::__1::__bit_iterator.434", %"class.std::__1::__bit_iterator.434"* %12, i64 0, i32 1
  %58 = bitcast %"class.std::__1::__bit_iterator.434"* %13 to i64*
  %59 = getelementptr inbounds %"class.std::__1::__bit_iterator.434", %"class.std::__1::__bit_iterator.434"* %13, i64 0, i32 1
  br label %60

60:                                               ; preds = %72, %48
  %61 = phi i64 [ %40, %48 ], [ %74, %72 ]
  %62 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm8EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %63 = and i64 %62, %61
  %64 = and i64 %63, 4294967295
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %60
  %67 = trunc i64 %63 to i32
  %68 = call i32 @_Z11ScanForwardj(i32 %67) #8
  %69 = zext i32 %68 to i64
  %70 = load i64, i64* %44, align 8, !alias.scope !109
  %71 = add i64 %70, %69
  br label %78

72:                                               ; preds = %60
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #8, !noalias !109
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #8, !noalias !109
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #8, !noalias !109
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #8, !noalias !109
  store i64 %49, i64* %54, align 8, !noalias !112
  store i32 8, i32* %55, align 8, !noalias !112
  store i64 %49, i64* %56, align 8, !noalias !112
  store i32 8, i32* %57, align 8, !noalias !112
  store i64 %49, i64* %58, align 8, !noalias !112
  store i32 0, i32* %59, align 8, !noalias !112
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm8EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.434"* nonnull sret %14, %"class.std::__1::__bit_iterator.434"* nonnull %11, %"class.std::__1::__bit_iterator.434"* nonnull %12, %"class.std::__1::__bit_iterator.434"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #8, !noalias !109
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #8, !noalias !109
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #8, !noalias !109
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #8, !noalias !109
  %73 = load i64, i64* %42, align 8, !alias.scope !109
  %74 = and i64 %73, -256
  store i64 %74, i64* %42, align 8, !alias.scope !109
  %75 = load i64, i64* %44, align 8, !alias.scope !109
  %76 = add i64 %75, 32
  store i64 %76, i64* %44, align 8, !alias.scope !109
  %77 = icmp ult i64 %76, 8
  br i1 %77, label %60, label %78

78:                                               ; preds = %72, %66
  %79 = phi i64 [ %70, %66 ], [ %76, %72 ]
  %80 = phi i64 [ %71, %66 ], [ 0, %72 ]
  store i64 %80, i64* %43, align 8, !alias.scope !109
  br label %83

81:                                               ; preds = %32
  store i64 32, i64* %44, align 8, !alias.scope !109
  %82 = ptrtoint %"class.BitSetIterator<8, unsigned char>::Iterator"* %19 to i64
  br label %83

83:                                               ; preds = %78, %81
  %84 = phi i64 [ %49, %78 ], [ %82, %81 ]
  %85 = phi i64 [ %80, %78 ], [ 0, %81 ]
  %86 = phi i64 [ %79, %78 ], [ 32, %81 ]
  %87 = bitcast %"class.dawn_native::RenderPipelineBase"** %33 to %"class.dawn_native::opengl::RenderPipeline"**
  %88 = bitcast %"class.BitSetIterator<16, unsigned char>::Iterator"* %20 to i8*
  %89 = getelementptr inbounds %"class.BitSetIterator<16, unsigned char>::Iterator", %"class.BitSetIterator<16, unsigned char>::Iterator"* %20, i64 0, i32 0, i32 0, i32 0
  %90 = getelementptr inbounds %"class.BitSetIterator<16, unsigned char>::Iterator", %"class.BitSetIterator<16, unsigned char>::Iterator"* %20, i64 0, i32 1
  %91 = getelementptr inbounds %"class.BitSetIterator<16, unsigned char>::Iterator", %"class.BitSetIterator<16, unsigned char>::Iterator"* %20, i64 0, i32 2
  %92 = bitcast i64* %90 to i8*
  %93 = ptrtoint %"class.BitSetIterator<16, unsigned char>::Iterator"* %20 to i64
  %94 = bitcast %"class.std::__1::__bit_iterator.438"* %6 to i8*
  %95 = bitcast %"class.std::__1::__bit_iterator.438"* %3 to i8*
  %96 = bitcast %"class.std::__1::__bit_iterator.438"* %4 to i8*
  %97 = bitcast %"class.std::__1::__bit_iterator.438"* %5 to i8*
  %98 = bitcast %"class.std::__1::__bit_iterator.438"* %3 to i64*
  %99 = getelementptr inbounds %"class.std::__1::__bit_iterator.438", %"class.std::__1::__bit_iterator.438"* %3, i64 0, i32 1
  %100 = bitcast %"class.std::__1::__bit_iterator.438"* %4 to i64*
  %101 = getelementptr inbounds %"class.std::__1::__bit_iterator.438", %"class.std::__1::__bit_iterator.438"* %4, i64 0, i32 1
  %102 = bitcast %"class.std::__1::__bit_iterator.438"* %5 to i64*
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator.438", %"class.std::__1::__bit_iterator.438"* %5, i64 0, i32 1
  %104 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 3
  %105 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 181
  %106 = getelementptr inbounds %"struct.dawn_native::opengl::OpenGLFunctions", %"struct.dawn_native::opengl::OpenGLFunctions"* %1, i64 0, i32 0, i32 140
  %107 = bitcast %"class.std::__1::__bit_iterator.438"* %18 to i8*
  %108 = bitcast %"class.std::__1::__bit_iterator.438"* %15 to i8*
  %109 = bitcast %"class.std::__1::__bit_iterator.438"* %16 to i8*
  %110 = bitcast %"class.std::__1::__bit_iterator.438"* %17 to i8*
  %111 = bitcast %"class.std::__1::__bit_iterator.438"* %15 to i64*
  %112 = getelementptr inbounds %"class.std::__1::__bit_iterator.438", %"class.std::__1::__bit_iterator.438"* %15, i64 0, i32 1
  %113 = bitcast %"class.std::__1::__bit_iterator.438"* %16 to i64*
  %114 = getelementptr inbounds %"class.std::__1::__bit_iterator.438", %"class.std::__1::__bit_iterator.438"* %16, i64 0, i32 1
  %115 = bitcast %"class.std::__1::__bit_iterator.438"* %17 to i64*
  %116 = getelementptr inbounds %"class.std::__1::__bit_iterator.438", %"class.std::__1::__bit_iterator.438"* %17, i64 0, i32 1
  %117 = bitcast %"class.std::__1::__bit_iterator.434"* %10 to i8*
  %118 = bitcast %"class.std::__1::__bit_iterator.434"* %7 to i8*
  %119 = bitcast %"class.std::__1::__bit_iterator.434"* %8 to i8*
  %120 = bitcast %"class.std::__1::__bit_iterator.434"* %9 to i8*
  %121 = bitcast %"class.std::__1::__bit_iterator.434"* %7 to i64*
  %122 = getelementptr inbounds %"class.std::__1::__bit_iterator.434", %"class.std::__1::__bit_iterator.434"* %7, i64 0, i32 1
  %123 = bitcast %"class.std::__1::__bit_iterator.434"* %8 to i64*
  %124 = getelementptr inbounds %"class.std::__1::__bit_iterator.434", %"class.std::__1::__bit_iterator.434"* %8, i64 0, i32 1
  %125 = bitcast %"class.std::__1::__bit_iterator.434"* %9 to i64*
  %126 = getelementptr inbounds %"class.std::__1::__bit_iterator.434", %"class.std::__1::__bit_iterator.434"* %9, i64 0, i32 1
  br label %127

127:                                              ; preds = %210, %83
  %128 = phi i64 [ %212, %210 ], [ %85, %83 ]
  %129 = phi i64 [ %211, %210 ], [ %86, %83 ]
  %130 = icmp eq i64 %129, 32
  br i1 %130, label %131, label %138

131:                                              ; preds = %127
  %132 = load i64, i64* %42, align 8
  %133 = and i64 %132, 255
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #8
  %136 = load i64, i64* %36, align 8
  %137 = and i64 %136, -256
  store i64 %137, i64* %36, align 8
  ret void

138:                                              ; preds = %131, %127
  %139 = trunc i64 %128 to i8
  %140 = load %"class.dawn_native::opengl::RenderPipeline"*, %"class.dawn_native::opengl::RenderPipeline"** %87, align 8
  %141 = call i64 @_ZNK11dawn_native6opengl14RenderPipeline30GetAttributesUsingVertexBufferEh(%"class.dawn_native::opengl::RenderPipeline"* %140, i8 zeroext %139) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #8
  store i64 %141, i64* %89, align 8, !alias.scope !115
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 16, i1 false) #8, !alias.scope !115
  %142 = and i64 %141, 65535
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %165, label %144

144:                                              ; preds = %138, %156
  %145 = phi i64 [ %158, %156 ], [ %141, %138 ]
  %146 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm16EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %147 = and i64 %146, %145
  %148 = and i64 %147, 4294967295
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %156, label %150

150:                                              ; preds = %144
  %151 = trunc i64 %147 to i32
  %152 = call i32 @_Z11ScanForwardj(i32 %151) #8
  %153 = zext i32 %152 to i64
  %154 = load i64, i64* %91, align 8, !alias.scope !115
  %155 = add i64 %154, %153
  br label %162

156:                                              ; preds = %144
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #8, !noalias !115
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #8, !noalias !115
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #8, !noalias !115
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #8, !noalias !115
  store i64 %93, i64* %98, align 8, !noalias !118
  store i32 16, i32* %99, align 8, !noalias !118
  store i64 %93, i64* %100, align 8, !noalias !118
  store i32 16, i32* %101, align 8, !noalias !118
  store i64 %93, i64* %102, align 8, !noalias !118
  store i32 0, i32* %103, align 8, !noalias !118
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm16EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.438"* nonnull sret %6, %"class.std::__1::__bit_iterator.438"* nonnull %3, %"class.std::__1::__bit_iterator.438"* nonnull %4, %"class.std::__1::__bit_iterator.438"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #8, !noalias !115
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #8, !noalias !115
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #8, !noalias !115
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #8, !noalias !115
  %157 = load i64, i64* %89, align 8, !alias.scope !115
  %158 = and i64 %157, -65536
  store i64 %158, i64* %89, align 8, !alias.scope !115
  %159 = load i64, i64* %91, align 8, !alias.scope !115
  %160 = add i64 %159, 32
  store i64 %160, i64* %91, align 8, !alias.scope !115
  %161 = icmp ult i64 %160, 16
  br i1 %161, label %144, label %162

162:                                              ; preds = %156, %150
  %163 = phi i64 [ %154, %150 ], [ %160, %156 ]
  %164 = phi i64 [ %155, %150 ], [ 0, %156 ]
  store i64 %164, i64* %90, align 8, !alias.scope !115
  br label %166

165:                                              ; preds = %138
  store i64 32, i64* %91, align 8, !alias.scope !115
  br label %166

166:                                              ; preds = %162, %165
  %167 = phi i64 [ %164, %162 ], [ 0, %165 ]
  %168 = phi i64 [ %163, %162 ], [ 32, %165 ]
  %169 = and i64 %128, 255
  %170 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker", %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* %0, i64 0, i32 3, i32 0, i32 0, i64 %169
  %171 = getelementptr inbounds %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker", %"class.dawn_native::opengl::(anonymous namespace)::VertexStateBufferBindingTracker"* %0, i64 0, i32 4, i32 0, i32 0, i64 %169
  br label %172

172:                                              ; preds = %290, %166
  %173 = phi i64 [ %292, %290 ], [ %167, %166 ]
  %174 = phi i64 [ %291, %290 ], [ %168, %166 ]
  %175 = icmp eq i64 %174, 32
  br i1 %175, label %176, label %213

176:                                              ; preds = %172
  %177 = load i64, i64* %89, align 8
  %178 = and i64 %177, 65535
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %213

180:                                              ; preds = %176
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #8
  %181 = load i64, i64* %43, align 8
  %182 = load i64, i64* %44, align 8
  %183 = sub i64 %181, %182
  %184 = icmp ugt i64 %183, 7
  br i1 %184, label %185, label %186

185:                                              ; preds = %180
  call void @abort() #10
  unreachable

186:                                              ; preds = %180
  %187 = shl i64 1, %183
  %188 = xor i64 %187, -1
  %189 = load i64, i64* %42, align 8
  %190 = and i64 %189, %188
  store i64 %190, i64* %42, align 8
  %191 = icmp ult i64 %182, 8
  br i1 %191, label %192, label %210

192:                                              ; preds = %186, %204
  %193 = phi i64 [ %206, %204 ], [ %190, %186 ]
  %194 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm8EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %195 = and i64 %194, %193
  %196 = and i64 %195, 4294967295
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %204, label %198

198:                                              ; preds = %192
  %199 = trunc i64 %195 to i32
  %200 = call i32 @_Z11ScanForwardj(i32 %199) #8
  %201 = zext i32 %200 to i64
  %202 = load i64, i64* %44, align 8
  %203 = add i64 %202, %201
  br label %210

204:                                              ; preds = %192
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %118) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %119) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %120) #8
  store i64 %84, i64* %121, align 8, !noalias !121
  store i32 8, i32* %122, align 8, !noalias !121
  store i64 %84, i64* %123, align 8, !noalias !121
  store i32 8, i32* %124, align 8, !noalias !121
  store i64 %84, i64* %125, align 8, !noalias !121
  store i32 0, i32* %126, align 8, !noalias !121
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm8EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.434"* nonnull sret %10, %"class.std::__1::__bit_iterator.434"* nonnull %7, %"class.std::__1::__bit_iterator.434"* nonnull %8, %"class.std::__1::__bit_iterator.434"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %118) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %120) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #8
  %205 = load i64, i64* %42, align 8
  %206 = and i64 %205, -256
  store i64 %206, i64* %42, align 8
  %207 = load i64, i64* %44, align 8
  %208 = add i64 %207, 32
  store i64 %208, i64* %44, align 8
  %209 = icmp ult i64 %208, 8
  br i1 %209, label %192, label %210

210:                                              ; preds = %204, %186, %198
  %211 = phi i64 [ %202, %198 ], [ %182, %186 ], [ %208, %204 ]
  %212 = phi i64 [ %203, %198 ], [ 0, %186 ], [ 0, %204 ]
  store i64 %212, i64* %43, align 8
  br label %127

213:                                              ; preds = %176, %172
  %214 = trunc i64 %173 to i8
  %215 = load %"class.dawn_native::RenderPipelineBase"*, %"class.dawn_native::RenderPipelineBase"** %33, align 8
  %216 = call dereferenceable(24) %"struct.dawn_native::VertexAttributeInfo"* @_ZNK11dawn_native18RenderPipelineBase12GetAttributeEh(%"class.dawn_native::RenderPipelineBase"* %215, i8 zeroext %214) #8
  %217 = trunc i64 %173 to i32
  %218 = and i32 %217, 255
  %219 = load %"class.dawn_native::opengl::Buffer"*, %"class.dawn_native::opengl::Buffer"** %170, align 8
  %220 = call i32 @_ZNK11dawn_native6opengl6Buffer9GetHandleEv(%"class.dawn_native::opengl::Buffer"* %219) #8
  %221 = load i64, i64* %171, align 8
  %222 = load %"class.dawn_native::RenderPipelineBase"*, %"class.dawn_native::RenderPipelineBase"** %33, align 8
  %223 = call dereferenceable(16) %"struct.dawn_native::VertexBufferInfo"* @_ZNK11dawn_native18RenderPipelineBase15GetVertexBufferEh(%"class.dawn_native::RenderPipelineBase"* %222, i8 zeroext %139) #8
  %224 = getelementptr inbounds %"struct.dawn_native::VertexAttributeInfo", %"struct.dawn_native::VertexAttributeInfo"* %216, i64 0, i32 0
  %225 = load i32, i32* %224, align 8
  %226 = call i32 @_ZN4dawn25VertexFormatNumComponentsEN4wgpu12VertexFormatE(i32 %225) #8
  %227 = load i32, i32* %224, align 8
  %228 = add i32 %227, -1
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds [30 x i32], [30 x i32]* @switch.table._ZN11dawn_native6opengl12_GLOBAL__N_131VertexStateBufferBindingTracker5ApplyERKNS0_15OpenGLFunctionsE, i64 0, i64 %229
  %231 = load i32, i32* %230, align 4
  %232 = add i32 %227, -5
  %233 = icmp ult i32 %232, 12
  br i1 %233, label %234, label %238

234:                                              ; preds = %213
  %235 = sext i32 %232 to i64
  %236 = getelementptr inbounds [12 x i8], [12 x i8]* @switch.table._ZN11dawn_native6opengl12_GLOBAL__N_131VertexStateBufferBindingTracker5ApplyERKNS0_15OpenGLFunctionsE.10, i64 0, i64 %235
  %237 = load i8, i8* %236, align 1
  br label %238

238:                                              ; preds = %213, %234
  %239 = phi i8 [ %237, %234 ], [ 0, %213 ]
  %240 = load void (i32, i32)*, void (i32, i32)** %104, align 8
  call void %240(i32 34962, i32 %220) #8
  %241 = load i32, i32* %224, align 8
  switch i32 %241, label %251 [
    i32 1, label %242
    i32 2, label %242
    i32 3, label %242
    i32 4, label %242
    i32 9, label %242
    i32 10, label %242
    i32 11, label %242
    i32 12, label %242
    i32 23, label %242
    i32 24, label %242
    i32 25, label %242
    i32 26, label %242
    i32 27, label %242
    i32 28, label %242
    i32 29, label %242
    i32 30, label %242
  ]

242:                                              ; preds = %238, %238, %238, %238, %238, %238, %238, %238, %238, %238, %238, %238, %238, %238, %238, %238
  %243 = load void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i8*)** %105, align 8
  %244 = getelementptr inbounds %"struct.dawn_native::VertexBufferInfo", %"struct.dawn_native::VertexBufferInfo"* %223, i64 0, i32 0
  %245 = load i64, i64* %244, align 8
  %246 = trunc i64 %245 to i32
  %247 = getelementptr inbounds %"struct.dawn_native::VertexAttributeInfo", %"struct.dawn_native::VertexAttributeInfo"* %216, i64 0, i32 1
  %248 = load i64, i64* %247, align 8
  %249 = add i64 %248, %221
  %250 = inttoptr i64 %249 to i8*
  call void %243(i32 %218, i32 %226, i32 %231, i32 %246, i8* %250) #8
  br label %260

251:                                              ; preds = %238
  %252 = load void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)** %106, align 8
  %253 = getelementptr inbounds %"struct.dawn_native::VertexBufferInfo", %"struct.dawn_native::VertexBufferInfo"* %223, i64 0, i32 0
  %254 = load i64, i64* %253, align 8
  %255 = trunc i64 %254 to i32
  %256 = getelementptr inbounds %"struct.dawn_native::VertexAttributeInfo", %"struct.dawn_native::VertexAttributeInfo"* %216, i64 0, i32 1
  %257 = load i64, i64* %256, align 8
  %258 = add i64 %257, %221
  %259 = inttoptr i64 %258 to i8*
  call void %252(i32 %218, i32 %226, i32 %231, i8 zeroext %239, i32 %255, i8* %259) #8
  br label %260

260:                                              ; preds = %251, %242
  %261 = load i64, i64* %90, align 8
  %262 = load i64, i64* %91, align 8
  %263 = sub i64 %261, %262
  %264 = icmp ugt i64 %263, 15
  br i1 %264, label %265, label %266

265:                                              ; preds = %260
  call void @abort() #10
  unreachable

266:                                              ; preds = %260
  %267 = shl i64 1, %263
  %268 = xor i64 %267, -1
  %269 = load i64, i64* %89, align 8
  %270 = and i64 %269, %268
  store i64 %270, i64* %89, align 8
  %271 = icmp ult i64 %262, 16
  br i1 %271, label %272, label %290

272:                                              ; preds = %266, %284
  %273 = phi i64 [ %286, %284 ], [ %270, %266 ]
  %274 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm16EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %275 = and i64 %274, %273
  %276 = and i64 %275, 4294967295
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %284, label %278

278:                                              ; preds = %272
  %279 = trunc i64 %275 to i32
  %280 = call i32 @_Z11ScanForwardj(i32 %279) #8
  %281 = zext i32 %280 to i64
  %282 = load i64, i64* %91, align 8
  %283 = add i64 %282, %281
  br label %290

284:                                              ; preds = %272
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %108) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110) #8
  store i64 %93, i64* %111, align 8, !noalias !124
  store i32 16, i32* %112, align 8, !noalias !124
  store i64 %93, i64* %113, align 8, !noalias !124
  store i32 16, i32* %114, align 8, !noalias !124
  store i64 %93, i64* %115, align 8, !noalias !124
  store i32 0, i32* %116, align 8, !noalias !124
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm16EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.438"* nonnull sret %18, %"class.std::__1::__bit_iterator.438"* nonnull %15, %"class.std::__1::__bit_iterator.438"* nonnull %16, %"class.std::__1::__bit_iterator.438"* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %108) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #8
  %285 = load i64, i64* %89, align 8
  %286 = and i64 %285, -65536
  store i64 %286, i64* %89, align 8
  %287 = load i64, i64* %91, align 8
  %288 = add i64 %287, 32
  store i64 %288, i64* %91, align 8
  %289 = icmp ult i64 %288, 16
  br i1 %289, label %272, label %290

290:                                              ; preds = %284, %266, %278
  %291 = phi i64 [ %282, %278 ], [ %262, %266 ], [ %288, %284 ]
  %292 = phi i64 [ %283, %278 ], [ 0, %266 ], [ 0, %284 ]
  store i64 %292, i64* %90, align 8
  br label %172
}

declare i32 @_ZNK11dawn_native6opengl14RenderPipeline22GetGLPrimitiveTopologyEv(%"class.dawn_native::opengl::RenderPipeline"*) local_unnamed_addr #1

declare void @_ZN11dawn_native6opengl14RenderPipeline8ApplyNowERNS0_23PersistentPipelineStateE(%"class.dawn_native::opengl::RenderPipeline"*, %"class.dawn_native::opengl::PersistentPipelineState"* dereferenceable(16)) local_unnamed_addr #1

declare i64 @_ZN11dawn_native15IndexFormatSizeEN4wgpu11IndexFormatE(i32) local_unnamed_addr #1

declare dereferenceable(8) %"class.ityp::bitset.392"* @_ZNK11dawn_native18RenderPipelineBase24GetVertexBufferSlotsUsedEv(%"class.dawn_native::RenderPipelineBase"*) local_unnamed_addr #1

declare i64 @_ZNK11dawn_native6opengl14RenderPipeline30GetAttributesUsingVertexBufferEh(%"class.dawn_native::opengl::RenderPipeline"*, i8 zeroext) local_unnamed_addr #1

declare dereferenceable(24) %"struct.dawn_native::VertexAttributeInfo"* @_ZNK11dawn_native18RenderPipelineBase12GetAttributeEh(%"class.dawn_native::RenderPipelineBase"*, i8 zeroext) local_unnamed_addr #1

declare dereferenceable(16) %"struct.dawn_native::VertexBufferInfo"* @_ZNK11dawn_native18RenderPipelineBase15GetVertexBufferEh(%"class.dawn_native::RenderPipelineBase"*, i8 zeroext) local_unnamed_addr #1

declare i32 @_ZN4dawn25VertexFormatNumComponentsEN4wgpu12VertexFormatE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm8EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.434"* noalias sret, %"class.std::__1::__bit_iterator.434"*, %"class.std::__1::__bit_iterator.434"*, %"class.std::__1::__bit_iterator.434"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator.434"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator.434"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator.434", %"class.std::__1::__bit_iterator.434"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator.434", %"class.std::__1::__bit_iterator.434"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator.434", %"class.std::__1::__bit_iterator.434"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator.434", %"class.std::__1::__bit_iterator.434"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator.434", %"class.std::__1::__bit_iterator.434"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator.434", %"class.std::__1::__bit_iterator.434"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator.434", %"class.std::__1::__bit_iterator.434"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator.434", %"class.std::__1::__bit_iterator.434"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator.434", %"class.std::__1::__bit_iterator.434"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator.434"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator.434"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator.434", %"class.std::__1::__bit_iterator.434"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator.434", %"class.std::__1::__bit_iterator.434"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm16EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator.438"* noalias sret, %"class.std::__1::__bit_iterator.438"*, %"class.std::__1::__bit_iterator.438"*, %"class.std::__1::__bit_iterator.438"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator.438"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator.438"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator.438", %"class.std::__1::__bit_iterator.438"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator.438", %"class.std::__1::__bit_iterator.438"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator.438", %"class.std::__1::__bit_iterator.438"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator.438", %"class.std::__1::__bit_iterator.438"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator.438", %"class.std::__1::__bit_iterator.438"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator.438", %"class.std::__1::__bit_iterator.438"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator.438", %"class.std::__1::__bit_iterator.438"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator.438", %"class.std::__1::__bit_iterator.438"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator.438", %"class.std::__1::__bit_iterator.438"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator.438"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator.438"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator.438", %"class.std::__1::__bit_iterator.438"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator.438", %"class.std::__1::__bit_iterator.438"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare zeroext i1 @_ZN11dawn_native15CommandIterator23NextCommandIdInNewBlockEPj(%"class.dawn_native::CommandIterator"*, i32*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm.assume(i1) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK11dawn_native16EnumMaskIteratorINS_6AspectEE5beginEv: argument 0"}
!6 = distinct !{!6, !"_ZNK11dawn_native16EnumMaskIteratorINS_6AspectEE5beginEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK14BitSetIteratorILm6EhE5beginEv: argument 0"}
!9 = distinct !{!9, !"_ZNK14BitSetIteratorILm6EhE5beginEv"}
!10 = !{!11, !5}
!11 = distinct !{!11, !12, !"_ZNSt3__14copyINS_8__bitsetILm1ELm6EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__14copyINS_8__bitsetILm1ELm6EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN11dawn_native15IterateEnumMaskINS_6AspectEEENS_16EnumMaskIteratorIT_EERKS3_: argument 0"}
!15 = distinct !{!15, !"_ZN11dawn_native15IterateEnumMaskINS_6AspectEEENS_16EnumMaskIteratorIT_EERKS3_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__14copyINS_8__bitsetILm1ELm6EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__14copyINS_8__bitsetILm1ELm6EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN11dawn_native15IterateEnumMaskINS_6AspectEEENS_16EnumMaskIteratorIT_EERKS3_: argument 0"}
!24 = distinct !{!24, !"_ZN11dawn_native15IterateEnumMaskINS_6AspectEEENS_16EnumMaskIteratorIT_EERKS3_"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK11dawn_native16EnumMaskIteratorINS_6AspectEE5beginEv: argument 0"}
!27 = distinct !{!27, !"_ZNK11dawn_native16EnumMaskIteratorINS_6AspectEE5beginEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK14BitSetIteratorILm6EhE5beginEv: argument 0"}
!30 = distinct !{!30, !"_ZNK14BitSetIteratorILm6EhE5beginEv"}
!31 = !{!32, !26}
!32 = distinct !{!32, !33, !"_ZNSt3__14copyINS_8__bitsetILm1ELm6EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!33 = distinct !{!33, !"_ZNSt3__14copyINS_8__bitsetILm1ELm6EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK11dawn_native18SubresourceStorageIN4wgpu12TextureUsageEE17GetFullLayerRangeENS_6AspectEj: argument 0"}
!36 = distinct !{!36, !"_ZNK11dawn_native18SubresourceStorageIN4wgpu12TextureUsageEE17GetFullLayerRangeENS_6AspectEj"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNSt3__14copyINS_8__bitsetILm1ELm6EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!39 = distinct !{!39, !"_ZNSt3__14copyINS_8__bitsetILm1ELm6EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !46}
!46 = !{!"llvm.loop.isvectorized", i32 1}
!47 = distinct !{!47, !48}
!48 = !{!"llvm.loop.unroll.disable"}
!49 = distinct !{!49, !46}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNK14BitSetIteratorILm4EhE5beginEv: argument 0"}
!55 = distinct !{!55, !"_ZNK14BitSetIteratorILm4EhE5beginEv"}
!56 = !{!57, !54}
!57 = distinct !{!57, !58, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!58 = distinct !{!58, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!61 = distinct !{!61, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZNK14BitSetIteratorILm4EhE5beginEv: argument 0"}
!64 = distinct !{!64, !"_ZNK14BitSetIteratorILm4EhE5beginEv"}
!65 = !{!66, !63}
!66 = distinct !{!66, !67, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!67 = distinct !{!67, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!70 = distinct !{!70, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNK14BitSetIteratorILm4EhE5beginEv: argument 0"}
!73 = distinct !{!73, !"_ZNK14BitSetIteratorILm4EhE5beginEv"}
!74 = !{!75, !72}
!75 = distinct !{!75, !76, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!76 = distinct !{!76, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!79 = distinct !{!79, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!82 = distinct !{!82, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!85 = distinct !{!85, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!88 = distinct !{!88, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZN4ityp13IterateBitSetERKNS_6bitsetIjLm4EEE: argument 0"}
!91 = distinct !{!91, !"_ZN4ityp13IterateBitSetERKNS_6bitsetIjLm4EEE"}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZNK14BitSetIteratorILm4EjE5beginEv: argument 0"}
!94 = distinct !{!94, !"_ZNK14BitSetIteratorILm4EjE5beginEv"}
!95 = !{!96, !93}
!96 = distinct !{!96, !97, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!97 = distinct !{!97, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!98 = !{!99}
!99 = distinct !{!99, !100, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!100 = distinct !{!100, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!101 = !{!102}
!102 = distinct !{!102, !103}
!103 = distinct !{!103, !"LVerDomain"}
!104 = !{!105}
!105 = distinct !{!105, !103}
!106 = distinct !{!106, !46}
!107 = distinct !{!107, !48}
!108 = distinct !{!108, !46}
!109 = !{!110}
!110 = distinct !{!110, !111, !"_ZNK14BitSetIteratorILm8EhE5beginEv: argument 0"}
!111 = distinct !{!111, !"_ZNK14BitSetIteratorILm8EhE5beginEv"}
!112 = !{!113, !110}
!113 = distinct !{!113, !114, !"_ZNSt3__14copyINS_8__bitsetILm1ELm8EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!114 = distinct !{!114, !"_ZNSt3__14copyINS_8__bitsetILm1ELm8EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!115 = !{!116}
!116 = distinct !{!116, !117, !"_ZNK14BitSetIteratorILm16EhE5beginEv: argument 0"}
!117 = distinct !{!117, !"_ZNK14BitSetIteratorILm16EhE5beginEv"}
!118 = !{!119, !116}
!119 = distinct !{!119, !120, !"_ZNSt3__14copyINS_8__bitsetILm1ELm16EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!120 = distinct !{!120, !"_ZNSt3__14copyINS_8__bitsetILm1ELm16EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!121 = !{!122}
!122 = distinct !{!122, !123, !"_ZNSt3__14copyINS_8__bitsetILm1ELm8EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!123 = distinct !{!123, !"_ZNSt3__14copyINS_8__bitsetILm1ELm8EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!124 = !{!125}
!125 = distinct !{!125, !126, !"_ZNSt3__14copyINS_8__bitsetILm1ELm16EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!126 = distinct !{!126, !"_ZNSt3__14copyINS_8__bitsetILm1ELm16EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
