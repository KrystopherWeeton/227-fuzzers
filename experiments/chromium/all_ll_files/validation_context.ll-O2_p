; ModuleID = '../../mojo/public/cpp/bindings/lib/validation_context.cc'
source_filename = "../../mojo/public/cpp/bindings/lib/validation_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.2", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.0"*, %"class.mojo::ScopedHandleBase.0"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.0" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.0"* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.4" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.13, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.15", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.12", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.13 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.14" }>
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [10 x i8] c" response\00", align 1

@_ZN4mojo8internal17ValidationContextC1EPKvmmmPNS_7MessageEPKciNS1_13ValidatorTypeE = hidden unnamed_addr alias void (%"class.mojo::internal::ValidationContext"*, i8*, i64, i64, i64, %"class.mojo::Message"*, i8*, i32, i32), void (%"class.mojo::internal::ValidationContext"*, i8*, i64, i64, i64, %"class.mojo::Message"*, i8*, i32, i32)* @_ZN4mojo8internal17ValidationContextC2EPKvmmmPNS_7MessageEPKciNS1_13ValidatorTypeE
@_ZN4mojo8internal17ValidationContextC1EPNS_7MessageEPKcNS1_13ValidatorTypeE = hidden unnamed_addr alias void (%"class.mojo::internal::ValidationContext"*, %"class.mojo::Message"*, i8*, i32), void (%"class.mojo::internal::ValidationContext"*, %"class.mojo::Message"*, i8*, i32)* @_ZN4mojo8internal17ValidationContextC2EPNS_7MessageEPKcNS1_13ValidatorTypeE
@_ZN4mojo8internal17ValidationContextD1Ev = hidden unnamed_addr alias void (%"class.mojo::internal::ValidationContext"*), void (%"class.mojo::internal::ValidationContext"*)* @_ZN4mojo8internal17ValidationContextD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4mojo8internal17ValidationContextC2EPKvmmmPNS_7MessageEPKciNS1_13ValidatorTypeE(%"class.mojo::internal::ValidationContext"* nocapture, i8*, i64, i64, i64, %"class.mojo::Message"*, i8*, i32, i32) unnamed_addr #0 align 2 {
  %10 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %0, i64 0, i32 0
  store %"class.mojo::Message"* %5, %"class.mojo::Message"** %10, align 8
  %11 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %0, i64 0, i32 1
  store i8* %6, i8** %11, align 8
  %12 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %0, i64 0, i32 2
  store i32 %8, i32* %12, align 8
  %13 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %0, i64 0, i32 4
  %14 = ptrtoint i8* %1 to i64
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %0, i64 0, i32 5
  %16 = add i64 %14, %2
  store i64 %16, i64* %15, align 8
  %17 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %0, i64 0, i32 6
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %0, i64 0, i32 7
  %19 = trunc i64 %3 to i32
  store i32 %19, i32* %18, align 4
  %20 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %0, i64 0, i32 8
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %0, i64 0, i32 9
  %22 = trunc i64 %4 to i32
  store i32 %22, i32* %21, align 4
  %23 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %0, i64 0, i32 10
  store i32 %7, i32* %23, align 8
  %24 = icmp ult i64 %16, %14
  br i1 %24, label %25, label %26

25:                                               ; preds = %9
  store i64 %14, i64* %15, align 8
  br label %26

26:                                               ; preds = %25, %9
  %27 = icmp ugt i64 %3, 4294967295
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  store i32 0, i32* %18, align 4
  br label %29

29:                                               ; preds = %28, %26
  %30 = icmp ugt i64 %4, 4294967295
  br i1 %30, label %31, label %32

31:                                               ; preds = %29
  store i32 0, i32* %21, align 4
  br label %32

32:                                               ; preds = %31, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo8internal17ValidationContextC2EPNS_7MessageEPKcNS1_13ValidatorTypeE(%"class.mojo::internal::ValidationContext"* nocapture, %"class.mojo::Message"*, i8*, i32) unnamed_addr #1 align 2 {
  %5 = tail call i8* @_ZNK4mojo7Message7payloadEv(%"class.mojo::Message"* %1) #8
  %6 = tail call i32 @_ZNK4mojo7Message17payload_num_bytesEv(%"class.mojo::Message"* %1) #8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1, i64 0, i32 2
  %9 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1, i64 0, i32 2, i32 0, i32 1
  %10 = bitcast %"class.mojo::ScopedHandleBase.0"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 2
  %16 = tail call i32 @_ZNK4mojo7Message25payload_num_interface_idsEv(%"class.mojo::Message"* %1) #8
  %17 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %0, i64 0, i32 0
  store %"class.mojo::Message"* %1, %"class.mojo::Message"** %17, align 8
  %18 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %0, i64 0, i32 1
  store i8* %2, i8** %18, align 8
  %19 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %0, i64 0, i32 2
  store i32 %3, i32* %19, align 8
  %20 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %0, i64 0, i32 4
  %21 = ptrtoint i8* %5 to i64
  store i64 %21, i64* %20, align 8
  %22 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %0, i64 0, i32 5
  %23 = add i64 %7, %21
  store i64 %23, i64* %22, align 8
  %24 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %0, i64 0, i32 6
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %0, i64 0, i32 7
  %26 = trunc i64 %15 to i32
  store i32 %26, i32* %25, align 4
  %27 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %0, i64 0, i32 8
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %0, i64 0, i32 9
  store i32 %16, i32* %28, align 4
  %29 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %0, i64 0, i32 10
  store i32 0, i32* %29, align 8
  %30 = icmp ult i64 %23, %21
  br i1 %30, label %31, label %32

31:                                               ; preds = %4
  store i64 %21, i64* %22, align 8
  br label %32

32:                                               ; preds = %31, %4
  %33 = icmp ugt i64 %15, 4294967295
  br i1 %33, label %34, label %35

34:                                               ; preds = %32
  store i32 0, i32* %25, align 4
  br label %35

35:                                               ; preds = %32, %34
  ret void
}

declare i8* @_ZNK4mojo7Message7payloadEv(%"class.mojo::Message"*) local_unnamed_addr #2

declare i32 @_ZNK4mojo7Message17payload_num_bytesEv(%"class.mojo::Message"*) local_unnamed_addr #2

declare i32 @_ZNK4mojo7Message25payload_num_interface_idsEv(%"class.mojo::Message"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4mojo8internal17ValidationContextD2Ev(%"class.mojo::internal::ValidationContext"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4mojo8internal17ValidationContext18GetFullDescriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.mojo::internal::ValidationContext"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %6 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %1, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 24, i1 false)
  %8 = load i8*, i8** %6, align 8
  %9 = tail call i64 @strlen(i8* %8) #8
  %10 = icmp ugt i64 %9, -17
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #9
  unreachable

13:                                               ; preds = %2
  %14 = icmp ult i64 %9, 23
  br i1 %14, label %20, label %15

15:                                               ; preds = %13
  %16 = add nuw i64 %9, 16
  %17 = and i64 %16, -16
  %18 = tail call i8* @_Znwm(i64 %17) #10
  store i8* %18, i8** %3, align 8
  %19 = or i64 %17, -9223372036854775808
  store i64 %19, i64* %5, align 8
  store i64 %9, i64* %4, align 8
  br label %26

20:                                               ; preds = %13
  %21 = trunc i64 %9 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %25 = icmp eq i64 %9, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %20, %15
  %27 = phi i8* [ %18, %15 ], [ %24, %20 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %8, i64 %9, i1 false) #8
  br label %28

28:                                               ; preds = %20, %26
  %29 = phi i8* [ %24, %20 ], [ %27, %26 ]
  %30 = getelementptr inbounds i8, i8* %29, i64 %9
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %1, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 2
  br i1 %33, label %34, label %36

34:                                               ; preds = %28
  %35 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)) #8
  br label %36

36:                                               ; preds = %34, %28
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
