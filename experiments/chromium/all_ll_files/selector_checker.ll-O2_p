; ModuleID = '../../third_party/blink/renderer/core/css/selector_checker.cc'
source_filename = "../../third_party/blink/renderer/core/css/selector_checker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.344 }
%class.scoped_refptr.344 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.345", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.345" = type { %"class.base::RefCounted.346" }
%"class.base::RefCounted.346" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::SelectorChecker" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CustomScrollbar"*, %"class.blink::PartNames"*, %"class.WTF::String", i32, i32, i8, [7 x i8] }>
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.730", %"class.std::__1::unique_ptr.732" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.243", %"class.blink::DataRef.442", %"class.blink::DataRef.446", %"class.blink::DataRef.646", %"class.blink::DataRef.713", %"class.blink::DataRef.717", %"class.blink::DataRef.721", %"class.blink::DataRef.725", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.0", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.0" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.2", %"class.blink::Font" }
%"class.WTF::RefCounted.2" = type { %"class.base::RefCounted.3" }
%"class.base::RefCounted.3" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.28 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.7, %class.scoped_refptr.10, %class.scoped_refptr.20, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.27 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1843", [4 x i8] }>
%"class.WTF::RefCounted.1843" = type { %"class.base::RefCounted.1844" }
%"class.base::RefCounted.1844" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.7 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.8", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.8" = type { %"class.base::RefCounted.9" }
%"class.base::RefCounted.9" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.10 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.11", %"class.WTF::RefCounted.18", [4 x i8] }>
%"class.blink::FontSettings.11" = type { %"class.WTF::Vector.12" }
%"class.WTF::Vector.12" = type { %"class.WTF::VectorBuffer.13" }
%"class.WTF::VectorBuffer.13" = type { %"class.WTF::VectorBufferBase.14" }
%"class.WTF::VectorBufferBase.14" = type { %"class.blink::FontTagValuePair.15"*, i32, i32 }
%"class.blink::FontTagValuePair.15" = type { i32, float }
%"class.WTF::RefCounted.18" = type { %"class.base::RefCounted.19" }
%"class.base::RefCounted.19" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.20 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.21", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.24, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.21" = type { %"class.base::RefCounted.22" }
%"class.base::RefCounted.22" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.24 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.25", [4 x i8] }>
%"class.WTF::RefCounted.25" = type { %"class.base::RefCounted.26" }
%"class.base::RefCounted.26" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.27 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.28 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.29", %"class.WTF::Vector.31", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.29" = type { %"class.base::RefCounted.30" }
%"class.base::RefCounted.30" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.31" = type { %"class.WTF::VectorBuffer.32" }
%"class.WTF::VectorBuffer.32" = type { %"class.WTF::VectorBufferBase.33", [8 x i8] }
%"class.WTF::VectorBufferBase.33" = type { %class.scoped_refptr.34*, i32, i32 }
%class.scoped_refptr.34 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.35", [4 x i8] }>
%"class.WTF::RefCounted.35" = type { %"class.base::RefCounted.36" }
%"class.base::RefCounted.36" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.55, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.35" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.39 }
%union.anon.39 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.50, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.40" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.40" }>
%"struct.std::__1::atomic.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__cxx_atomic_impl.43" }
%"struct.std::__1::__cxx_atomic_impl.43" = type { %"struct.std::__1::__cxx_atomic_base_impl.44" }
%"struct.std::__1::__cxx_atomic_base_impl.44" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.45" }
%"struct.std::__1::atomic.45" = type { %"struct.std::__1::__atomic_base.46" }
%"struct.std::__1::__atomic_base.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__cxx_atomic_impl.48" }
%"struct.std::__1::__cxx_atomic_impl.48" = type { %"struct.std::__1::__cxx_atomic_base_impl.49" }
%"struct.std::__1::__cxx_atomic_base_impl.49" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.50 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.53, %class.scoped_refptr.53 }
%class.scoped_refptr.53 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.55 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.56", [4 x i8] }>
%"class.WTF::RefCounted.56" = type { %"class.base::RefCounted.57" }
%"class.base::RefCounted.57" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.58", i32, [4 x i8], %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.196", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.212", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.230", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.237", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.176", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.94" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.94" = type { %"struct.std::__1::__atomic_base.95" }
%"struct.std::__1::__atomic_base.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__cxx_atomic_impl.97" }
%"struct.std::__1::__cxx_atomic_impl.97" = type { %"struct.std::__1::__cxx_atomic_base_impl.98" }
%"struct.std::__1::__cxx_atomic_base_impl.98" = type { i64 }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.blink::Worklist.105"* }
%"class.blink::Worklist.105" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.94" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.blink::Worklist.112"* }
%"class.blink::Worklist.112" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.94" }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::Worklist.119"* }
%"class.blink::Worklist.119" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.94" }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::Worklist.126"* }
%"class.blink::Worklist.126" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.94" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::Worklist.133"* }
%"class.blink::Worklist.133" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.94" }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::Worklist.140"* }
%"class.blink::Worklist.140" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.94" }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::Worklist.147"* }
%"class.blink::Worklist.147" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.94" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.154", %"class.std::__1::__compressed_pair.163", %"class.std::__1::__compressed_pair.168", %"class.std::__1::__compressed_pair.170", [4 x i8] }>
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156", %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { i64 }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { float }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.179", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.188" }
%"class.WTF::Vector.188" = type { %"class.WTF::VectorBuffer.189" }
%"class.WTF::VectorBuffer.189" = type { %"class.WTF::VectorBufferBase.190" }
%"class.WTF::VectorBufferBase.190" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.204" }
%"class.WTF::VectorBuffer.204" = type { %"class.WTF::VectorBufferBase.205" }
%"class.WTF::VectorBufferBase.205" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.218" }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.105"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.112"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.119"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.126"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.133"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1836", i64 }
%"class.std::__1::vector.1836" = type { %"class.std::__1::__vector_base.1837" }
%"class.std::__1::__vector_base.1837" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1838" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1838" = type { %"struct.std::__1::__compressed_pair_elem.1839" }
%"struct.std::__1::__compressed_pair_elem.1839" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.236 }
%class.scoped_refptr.236 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.237" = type { %"struct.std::__1::__atomic_base.238" }
%"struct.std::__1::__atomic_base.238" = type { %"struct.std::__1::__cxx_atomic_impl.239" }
%"struct.std::__1::__cxx_atomic_impl.239" = type { %"struct.std::__1::__cxx_atomic_base_impl.240" }
%"struct.std::__1::__cxx_atomic_base_impl.240" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.241 }
%class.scoped_refptr.241 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.40" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.45" }
%"class.blink::Length" = type <{ %union.anon.242, i8, i8, i8, i8 }>
%union.anon.242 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.243" = type { %class.scoped_refptr.244 }
%class.scoped_refptr.244 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.245", [4 x i8], %"class.blink::DataRef.247", %"class.blink::DataRef.279", %"class.WTF::Vector.283", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.288, %class.scoped_refptr.297, %"class.blink::Persistent.305", %"class.blink::Persistent.307", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.245" = type { %"class.base::RefCounted.246" }
%"class.base::RefCounted.246" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.247" = type { %class.scoped_refptr.248 }
%class.scoped_refptr.248 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.249", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.251, %class.scoped_refptr.258, %"class.blink::Persistent.269", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.249" = type { %"class.base::RefCounted.250" }
%"class.base::RefCounted.250" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.251 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.252", %"class.WTF::Vector.253" }
%"class.base::RefCountedThreadSafe.252" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.253" = type { %"class.WTF::VectorBuffer.254" }
%"class.WTF::VectorBuffer.254" = type { %"class.WTF::VectorBufferBase.255" }
%"class.WTF::VectorBufferBase.255" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.258 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.259", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.259" = type { %"class.base::RefCounted.260" }
%"class.base::RefCounted.260" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3254 }
%class.scoped_refptr.3254 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.3255", %"class.WTF::Vector.629", %"class.WTF::Vector.3257", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.3255" = type { %"class.base::RefCounted.3256" }
%"class.base::RefCounted.3256" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.629" = type { %"class.WTF::VectorBuffer.630" }
%"class.WTF::VectorBuffer.630" = type { %"class.WTF::VectorBufferBase.631" }
%"class.WTF::VectorBufferBase.631" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.3257" = type { %"class.WTF::VectorBuffer.3258" }
%"class.WTF::VectorBuffer.3258" = type { %"class.WTF::VectorBufferBase.3259" }
%"class.WTF::VectorBufferBase.3259" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.3260 }
%union.anon.3260 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.263" }
%"class.blink::PersistentBase.263" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.268" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.264" }
%"class.WTF::HashMap.264" = type { %"class.WTF::HashTable.265" }
%"class.WTF::HashTable.265" = type <{ %"struct.WTF::KeyValuePair.267"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.267" = type opaque
%"class.blink::PersistentNodePtr.268" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.269" = type { %"class.blink::PersistentBase.270" }
%"class.blink::PersistentBase.270" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.268" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.273" }
%"class.WTF::Vector.273" = type { %"class.WTF::VectorBuffer.274" }
%"class.WTF::VectorBuffer.274" = type { %"class.WTF::VectorBufferBase.275" }
%"class.WTF::VectorBufferBase.275" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.279" = type { %class.scoped_refptr.280 }
%class.scoped_refptr.280 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.281", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.281" = type { %"class.base::RefCounted.282" }
%"class.base::RefCounted.282" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.283" = type { %"class.WTF::VectorBuffer.284" }
%"class.WTF::VectorBuffer.284" = type { %"class.WTF::VectorBufferBase.285" }
%"class.WTF::VectorBufferBase.285" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.288 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.289", %"class.WTF::Vector.291" }
%"class.WTF::RefCounted.289" = type { %"class.base::RefCounted.290" }
%"class.base::RefCounted.290" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.291" = type { %"class.WTF::VectorBuffer.292" }
%"class.WTF::VectorBuffer.292" = type { %"class.WTF::VectorBufferBase.293" }
%"class.WTF::VectorBufferBase.293" = type { %"struct.std::__1::pair.294"*, i32, i32 }
%"struct.std::__1::pair.294" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.297 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.298", [4 x i8], %"class.WTF::Vector.300" }
%"class.WTF::RefCounted.298" = type { %"class.base::RefCounted.299" }
%"class.base::RefCounted.299" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.300" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.302", [28 x i8] }>
%"class.WTF::VectorBufferBase.302" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.305" = type { %"class.blink::PersistentBase.306" }
%"class.blink::PersistentBase.306" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.268" }
%"class.blink::Persistent.307" = type { %"class.blink::PersistentBase.308" }
%"class.blink::PersistentBase.308" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.268" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.311", %"class.blink::Member.440" }
%"class.blink::Member.311" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.313", %"class.blink::Member.325", %"class.blink::Member.319", %"class.blink::Member.327", %"class.blink::Member.327", %"class.blink::Member.371", %"class.blink::Member.373", %"class.blink::Member.375", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.380", %"class.blink::HeapVector.382" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.313" = type { %"class.blink::MemberBase.314" }
%"class.blink::MemberBase.314" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.317", %"class.blink::Member.317" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.317", %"class.blink::Member.319", %"class.blink::Member.317", %"class.blink::Member.317", %"class.blink::Member.321" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.321" = type { %"class.blink::MemberBase.322" }
%"class.blink::MemberBase.322" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.317" = type { %"class.blink::MemberBase.318" }
%"class.blink::MemberBase.318" = type { %"class.blink::Node"* }
%"class.blink::Member.325" = type { %"class.blink::MemberBase.326" }
%"class.blink::MemberBase.326" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.757", %"class.WTF::Vector.757", i8, i32, %"class.blink::Member.793", %"class.blink::Member.795", %"class.blink::Member.797", %"class.blink::Member.799", %"class.blink::Member.801", %"class.blink::Member.803", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.811", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.817", %"class.blink::Member.819", %"class.blink::Member.388", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.822", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.843", %"class.blink::HeapVector.364", %"class.blink::Member.342", %"class.blink::Member.845", %"class.blink::Member.342", %"class.blink::Member.342", %"class.blink::Member.342", %"class.blink::UserActionElementSet", %"class.blink::Member.854", double, double, i64, i64, %"class.blink::HeapHashSet.856", %"class.blink::HeapHashSet.863", i16, i8, %"class.blink::Member.870", %"class.blink::Member.872", %"class.blink::Member.1233", %"class.blink::Member.1235", %"class.blink::TextLinkColors", %"class.blink::Member.1237", i8, [7 x i8], %"class.blink::HeapHashMap.1239", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.342", %"class.WTF::Vector.1246", %"class.blink::Member.1251", %"class.blink::Member.1255", i8, %"class.blink::Member.342", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1257", %"class.blink::HeapVector.1259", %"class.std::__1::unique_ptr.1267", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1273", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1286", %"class.WTF::Vector.1288", i8, i8, %"class.std::__1::unique_ptr.1293", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.364", %"class.blink::HeapVector.1301", i32, i8, %"class.blink::HeapTaskRunnerTimer.843", %"class.blink::HeapTaskRunnerTimer.843", %"class.blink::DocumentTiming", %"class.blink::Member.1309", i8, i32, %"class.blink::Member.1311", %"class.blink::Member.1313", %"class.blink::Member.1315", %"class.blink::HeapTaskRunnerTimer.843", %"class.blink::Member.1317", %"class.WTF::HashMap.1319", %"class.blink::Member.1324", %"class.blink::Member.1326", %"class.blink::Member.1328", %"class.blink::Member.1330", %"class.blink::Member.325", %"class.blink::Member.325", %"class.blink::HeapTaskRunnerTimer.843", %"class.blink::HeapHashSet.1332", i8, i32, %"class.blink::Member.1339", %"class.blink::Member.1341", i32, %"class.blink::Member.1343", %"class.blink::Member.1345", %"class.blink::Member.1347", %"class.std::__1::unique_ptr.1349", i64, %"class.std::__1::unique_ptr.1355", i32, i32, %"class.blink::Member.1366", %"class.blink::Member.1368", %"class.blink::Member.1370", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1372", %"class.WTF::Vector.1374", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1379", %"class.blink::Member.1386", %"class.std::__1::unique_ptr.1388", %"class.blink::Member.1394", i8, i8, %"class.WTF::String", %"class.blink::Member.1396", i8, [7 x i8], %"class.blink::HeapHashMap.1398", %"class.blink::HeapObserverSet", %"class.blink::Member.1412", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1414", i32, i8, i8, %"class.blink::WeakMember.1416", %"class.blink::Member.1417" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.786" }
%"class.blink::HeapHashMap.786" = type { %"class.WTF::HashMap.789" }
%"class.WTF::HashMap.789" = type { %"class.WTF::HashTable.790" }
%"class.WTF::HashTable.790" = type <{ %"struct.WTF::KeyValuePair.792"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.792" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.757" = type { %"class.WTF::VectorBuffer.758" }
%"class.WTF::VectorBuffer.758" = type { %"class.WTF::VectorBufferBase.759" }
%"class.WTF::VectorBufferBase.759" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.760 }
%class.scoped_refptr.760 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.761", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.761" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.793" = type { %"class.blink::MemberBase.794" }
%"class.blink::MemberBase.794" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.795" = type { %"class.blink::MemberBase.796" }
%"class.blink::MemberBase.796" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1618", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1677", i32, i8, [3 x i8], %"class.blink::HeapVector.1679", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1687", %"class.blink::Member.1689", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1698", %"class.blink::Member.1821", %"class.blink::Member.1823", i8, [7 x i8] }>
%"class.blink::Supplementable.1618" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1619" }
%"class.blink::HeapHashMap.1619" = type { %"class.WTF::HashMap.1622" }
%"class.WTF::HashMap.1622" = type { %"class.WTF::HashTable.1623" }
%"class.WTF::HashTable.1623" = type <{ %"struct.WTF::KeyValuePair.1625"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1625" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1626" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1440" }
%"class.blink::HeapObserverSet.1440" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1441" }
%"class.blink::HeapHashSet.1441" = type { %"class.WTF::HashSet.1444" }
%"class.WTF::HashSet.1444" = type { %"class.WTF::HashTable.1445" }
%"class.WTF::HashTable.1445" = type <{ %"class.blink::WeakMember.1447"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1447" = type opaque
%"class.blink::Supplementable.1626" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1627" }
%"class.blink::HeapHashMap.1627" = type { %"class.WTF::HashMap.1630" }
%"class.WTF::HashMap.1630" = type { %"class.WTF::HashTable.1631" }
%"class.WTF::HashTable.1631" = type <{ %"struct.WTF::KeyValuePair.1633"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1633" = type { i8*, %"class.blink::Member.3234" }
%"class.blink::Member.3234" = type { %"class.blink::MemberBase.3235" }
%"class.blink::MemberBase.3235" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3236" }
%"class.blink::Member.3236" = type { %"class.blink::MemberBase.3237" }
%"class.blink::MemberBase.3237" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1634, %"class.std::__1::unique_ptr.1643", %"class.std::__1::unique_ptr.1643", %"class.std::__1::unique_ptr.1667", %"class.std::__1::unique_ptr.1667", %"class.blink::Member.795", i32, [4 x i8], %"class.WTF::HashSet.1673", i32, i32 }
%class.scoped_refptr.1634 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1635", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1637", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1642 }
%"class.WTF::RefCounted.1635" = type { %"class.base::RefCounted.1636" }
%"class.base::RefCounted.1636" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1637" = type { %"class.absl::optional_internal::optional_data.1638" }
%"class.absl::optional_internal::optional_data.1638" = type { %"class.absl::optional_internal::optional_data_base.1639" }
%"class.absl::optional_internal::optional_data_base.1639" = type { %"class.absl::optional_internal::optional_data_dtor_base.1640" }
%"class.absl::optional_internal::optional_data_dtor_base.1640" = type { i8, %union.anon.1641 }
%union.anon.1641 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1642 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1643" = type { %"class.std::__1::__compressed_pair.1644" }
%"class.std::__1::__compressed_pair.1644" = type { %"struct.std::__1::__compressed_pair_elem.1645" }
%"struct.std::__1::__compressed_pair_elem.1645" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1654", %"class.std::__1::map.1663"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1637" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1646", %"class.std::__1::__compressed_pair.1651" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1646" = type { %"struct.std::__1::__compressed_pair_elem.1647" }
%"struct.std::__1::__compressed_pair_elem.1647" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1651" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"class.std::__1::map.1654" = type { %"class.std::__1::__tree.1655" }
%"class.std::__1::__tree.1655" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1656", %"class.std::__1::__compressed_pair.1660" }
%"class.std::__1::__compressed_pair.1656" = type { %"struct.std::__1::__compressed_pair_elem.1647" }
%"class.std::__1::__compressed_pair.1660" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"class.std::__1::map.1663" = type opaque
%"class.std::__1::unique_ptr.1667" = type { %"class.std::__1::__compressed_pair.1668" }
%"class.std::__1::__compressed_pair.1668" = type { %"struct.std::__1::__compressed_pair_elem.1669" }
%"struct.std::__1::__compressed_pair_elem.1669" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1673" = type { %"class.WTF::HashTable.1674" }
%"class.WTF::HashTable.1674" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1677" = type { %"class.blink::MemberBase.1678" }
%"class.blink::MemberBase.1678" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1679" = type { %"class.WTF::Vector.1682" }
%"class.WTF::Vector.1682" = type { %"class.WTF::VectorBuffer.1683" }
%"class.WTF::VectorBuffer.1683" = type { %"class.WTF::VectorBufferBase.1684" }
%"class.WTF::VectorBufferBase.1684" = type { %"class.blink::Member.1685"*, i32, i32 }
%"class.blink::Member.1685" = type opaque
%"class.blink::Member.1687" = type { %"class.blink::MemberBase.1688" }
%"class.blink::MemberBase.1688" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1689" = type { %"class.blink::MemberBase.1690" }
%"class.blink::MemberBase.1690" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1691", i32, i32 }
%"class.blink::HeapHashMap.1691" = type { %"class.WTF::HashMap.1694" }
%"class.WTF::HashMap.1694" = type { %"class.WTF::HashTable.1695" }
%"class.WTF::HashTable.1695" = type <{ %"struct.WTF::KeyValuePair.1697"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1697" = type opaque
%"class.std::__1::unique_ptr.1698" = type { %"class.std::__1::__compressed_pair.1699" }
%"class.std::__1::__compressed_pair.1699" = type { %"struct.std::__1::__compressed_pair_elem.1700" }
%"struct.std::__1::__compressed_pair_elem.1700" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1701" }
%"class.std::__1::unique_ptr.1701" = type { %"class.std::__1::__compressed_pair.1702" }
%"class.std::__1::__compressed_pair.1702" = type { %"struct.std::__1::__compressed_pair_elem.1703" }
%"struct.std::__1::__compressed_pair_elem.1703" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1704" }
%"class.WTF::Vector.1704" = type { %"class.WTF::VectorBuffer.1705" }
%"class.WTF::VectorBuffer.1705" = type { %"class.WTF::VectorBufferBase.1706" }
%"class.WTF::VectorBufferBase.1706" = type { %"class.mojo::StructPtr.1707"*, i32, i32 }
%"class.mojo::StructPtr.1707" = type { %"class.std::__1::unique_ptr.1708" }
%"class.std::__1::unique_ptr.1708" = type { %"class.std::__1::__compressed_pair.1709" }
%"class.std::__1::__compressed_pair.1709" = type { %"struct.std::__1::__compressed_pair_elem.1710" }
%"struct.std::__1::__compressed_pair_elem.1710" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1711", %"class.WTF::HashMap.1718", %"class.WTF::HashMap.1723", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.629", i32, %"class.mojo::StructPtr.1728", %"class.WTF::Vector.629" }
%"class.mojo::StructPtr.1711" = type { %"class.std::__1::unique_ptr.1712" }
%"class.std::__1::unique_ptr.1712" = type { %"class.std::__1::__compressed_pair.1713" }
%"class.std::__1::__compressed_pair.1713" = type { %"struct.std::__1::__compressed_pair_elem.1714" }
%"struct.std::__1::__compressed_pair_elem.1714" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1718" = type { %"class.WTF::HashTable.1719" }
%"class.WTF::HashTable.1719" = type <{ %"struct.WTF::KeyValuePair.1722"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1722" = type opaque
%"class.WTF::HashMap.1723" = type { %"class.WTF::HashTable.1724" }
%"class.WTF::HashTable.1724" = type <{ %"struct.WTF::KeyValuePair.1727"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1727" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1728" = type { %"class.std::__1::unique_ptr.1729" }
%"class.std::__1::unique_ptr.1729" = type { %"class.std::__1::__compressed_pair.1730" }
%"class.std::__1::__compressed_pair.1730" = type { %"struct.std::__1::__compressed_pair_elem.1731" }
%"struct.std::__1::__compressed_pair_elem.1731" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.629", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1812" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1743", i32 }>
%"class.std::__1::unique_ptr.1743" = type { %"class.std::__1::__compressed_pair.1744" }
%"class.std::__1::__compressed_pair.1744" = type { %"struct.std::__1::__compressed_pair_elem.1745" }
%"struct.std::__1::__compressed_pair_elem.1745" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1746", %"class.absl::optional.1747", %"class.absl::optional.1752", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1765", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1787", %"class.std::__1::map.1798", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1807", i8, %class.scoped_refptr.1757, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1808" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1746" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1747" = type { %"class.absl::optional_internal::optional_data.1748" }
%"class.absl::optional_internal::optional_data.1748" = type { %"class.absl::optional_internal::optional_data_base.1749" }
%"class.absl::optional_internal::optional_data_base.1749" = type { %"class.absl::optional_internal::optional_data_dtor_base.1750" }
%"class.absl::optional_internal::optional_data_dtor_base.1750" = type { i8, %union.anon.1751 }
%union.anon.1751 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1752" = type { %"class.absl::optional_internal::optional_data.1753" }
%"class.absl::optional_internal::optional_data.1753" = type { %"class.absl::optional_internal::optional_data_base.1754" }
%"class.absl::optional_internal::optional_data_base.1754" = type { %"class.absl::optional_internal::optional_data_dtor_base.1755" }
%"class.absl::optional_internal::optional_data_dtor_base.1755" = type { i8, %union.anon.1756 }
%union.anon.1756 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1757, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1758" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1758" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.766 }
%class.scoped_refptr.766 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1763 }
%class.scoped_refptr.1763 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1835", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1757, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1835" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1764 }
%class.scoped_refptr.1764 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1765" = type { %"class.std::__1::__compressed_pair.1766" }
%"class.std::__1::__compressed_pair.1766" = type { %"struct.std::__1::__compressed_pair_elem.1767" }
%"struct.std::__1::__compressed_pair_elem.1767" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1768", %class.scoped_refptr.1769 }
%"class.base::RepeatingCallback.1768" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1769 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1770", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1770" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1774", %"class.std::__1::unique_ptr.1780", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1786" }
%"class.std::__1::unique_ptr.1774" = type { %"class.std::__1::__compressed_pair.1775" }
%"class.std::__1::__compressed_pair.1775" = type { %"struct.std::__1::__compressed_pair_elem.1776" }
%"struct.std::__1::__compressed_pair_elem.1776" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1780" = type { %"class.std::__1::__compressed_pair.1781" }
%"class.std::__1::__compressed_pair.1781" = type { %"struct.std::__1::__compressed_pair_elem.1782" }
%"struct.std::__1::__compressed_pair_elem.1782" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1786" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1787" = type { %"class.std::__1::__tree.1788" }
%"class.std::__1::__tree.1788" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1789", %"class.std::__1::__compressed_pair.1793" }
%"class.std::__1::__compressed_pair.1789" = type { %"struct.std::__1::__compressed_pair_elem.1647" }
%"class.std::__1::__compressed_pair.1793" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"class.std::__1::map.1798" = type { %"class.std::__1::__tree.1799" }
%"class.std::__1::__tree.1799" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1800", %"class.std::__1::__compressed_pair.1804" }
%"class.std::__1::__compressed_pair.1800" = type { %"struct.std::__1::__compressed_pair_elem.1647" }
%"class.std::__1::__compressed_pair.1804" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"class.base::OnceCallback.1807" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1757 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.765" }>
%"class.base::RefCountedThreadSafe.765" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1808" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1812" = type { %"class.std::__1::__compressed_pair.1813" }
%"class.std::__1::__compressed_pair.1813" = type { %"struct.std::__1::__compressed_pair_elem.1814" }
%"struct.std::__1::__compressed_pair_elem.1814" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1821" = type { %"class.blink::MemberBase.1822" }
%"class.blink::MemberBase.1822" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1823" = type { %"class.blink::MemberBase.1824" }
%"class.blink::MemberBase.1824" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.1689", i8, [7 x i8], %"class.WTF::Vector.1704", %"class.blink::HeapVector.1827", i8, [7 x i8], %"class.WTF::HashSet.1673", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.1827" = type { %"class.WTF::Vector.1830" }
%"class.WTF::Vector.1830" = type { %"class.WTF::VectorBuffer.1831" }
%"class.WTF::VectorBuffer.1831" = type { %"class.WTF::VectorBufferBase.1832" }
%"class.WTF::VectorBufferBase.1832" = type { %"class.blink::Member.1833"*, i32, i32 }
%"class.blink::Member.1833" = type opaque
%"class.blink::Member.797" = type { %"class.blink::MemberBase.798" }
%"class.blink::MemberBase.798" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.799" = type { %"class.blink::MemberBase.800" }
%"class.blink::MemberBase.800" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.801" = type { %"class.blink::MemberBase.802" }
%"class.blink::MemberBase.802" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.803" = type { %"class.blink::MemberBase.804" }
%"class.blink::MemberBase.804" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.811" = type { %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.805" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.805" = type { %"class.std::__1::__compressed_pair.806" }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"class.blink::KURL"* }
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.819" = type { %"class.blink::MemberBase.820" }
%"class.blink::MemberBase.820" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.390", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.392, %"class.WTF::Vector.411", %"class.WTF::Vector.411", %"class.blink::Member.317", %"class.blink::Member.416", %"class.blink::HeapHashSet", %"class.blink::Member.325", %"class.WTF::HashSet.424", %"class.WTF::TextPosition", %"class.blink::Member.428", %"class.blink::HeapVector.430", %"class.blink::Member.437" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.392 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.393", %"class.WTF::Vector.395" }
%"class.WTF::RefCounted.393" = type { %"class.base::RefCounted.394" }
%"class.base::RefCounted.394" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.395" = type { %"class.WTF::VectorBuffer.396" }
%"class.WTF::VectorBuffer.396" = type { %"class.WTF::VectorBufferBase.397" }
%"class.WTF::VectorBufferBase.397" = type { %"class.std::__1::unique_ptr.398"*, i32, i32 }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.401", %"class.WTF::String" }
%"class.WTF::Vector.401" = type { %"class.WTF::VectorBuffer.402" }
%"class.WTF::VectorBuffer.402" = type { %"class.WTF::VectorBufferBase.403" }
%"class.WTF::VectorBufferBase.403" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.411" = type { %"class.WTF::VectorBuffer.412" }
%"class.WTF::VectorBuffer.412" = type { %"class.WTF::VectorBufferBase.413" }
%"class.WTF::VectorBufferBase.413" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.418" }
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.422" }
%"class.WTF::HashTable.422" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.320" }
%"class.blink::MemberBase.320" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.424" = type { %"class.WTF::HashTable.425" }
%"class.WTF::HashTable.425" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.428" = type { %"class.blink::MemberBase.429" }
%"class.blink::MemberBase.429" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.392, %"class.blink::Member.388", %"class.blink::Member.416" }
%"class.blink::HeapVector.430" = type { %"class.WTF::Vector.433" }
%"class.WTF::Vector.433" = type { %"class.WTF::VectorBuffer.434" }
%"class.WTF::VectorBuffer.434" = type { %"class.WTF::VectorBufferBase.435" }
%"class.WTF::VectorBufferBase.435" = type { %"class.blink::Member.416"*, i32, i32 }
%"class.blink::Member.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.821 }
%class.scoped_refptr.821 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.822" = type { %"class.WTF::VectorBuffer.823" }
%"class.WTF::VectorBuffer.823" = type { %"class.WTF::VectorBufferBase.824" }
%"class.WTF::VectorBufferBase.824" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.825 }
%class.scoped_refptr.825 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.826", i32, i32, %"class.blink::Persistent.828" }
%"class.WTF::RefCounted.826" = type { %"class.base::RefCounted.827" }
%"class.base::RefCounted.827" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.828" = type { %"class.blink::PersistentBase.829" }
%"class.blink::PersistentBase.829" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.268" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.832" }
%"class.blink::HeapHashMap.832" = type { %"class.WTF::HashMap.835" }
%"class.WTF::HashMap.835" = type { %"class.WTF::HashTable.836" }
%"class.WTF::HashTable.836" = type <{ %"struct.WTF::KeyValuePair.838"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.838" = type { %"class.blink::WeakMember.839", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.839" = type { %"class.blink::MemberBase.840" }
%"class.blink::MemberBase.840" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.845" = type { %"class.blink::MemberBase.846" }
%"class.blink::MemberBase.846" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.325", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.317", %"class.blink::Member.317", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.847" }
%"class.blink::HeapHashMap.847" = type { %"class.WTF::HashMap.850" }
%"class.WTF::HashMap.850" = type { %"class.WTF::HashTable.851" }
%"class.WTF::HashTable.851" = type <{ %"struct.WTF::KeyValuePair.853"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.853" = type opaque
%"class.blink::Member.854" = type { %"class.blink::MemberBase.855" }
%"class.blink::MemberBase.855" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.856" = type { %"class.WTF::HashSet.859" }
%"class.WTF::HashSet.859" = type { %"class.WTF::HashTable.860" }
%"class.WTF::HashTable.860" = type <{ %"class.blink::WeakMember.862"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.862" = type opaque
%"class.blink::HeapHashSet.863" = type { %"class.WTF::HashSet.866" }
%"class.WTF::HashSet.866" = type { %"class.WTF::HashTable.867" }
%"class.WTF::HashTable.867" = type <{ %"class.blink::WeakMember.869"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.869" = type opaque
%"class.blink::Member.870" = type { %"class.blink::MemberBase.871" }
%"class.blink::MemberBase.871" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.872" = type { %"class.blink::MemberBase.873" }
%"class.blink::MemberBase.873" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.325", i32, i32, i32, %"class.blink::Member.388", %"class.blink::Member.876", %"class.blink::Member.903", %"class.blink::HeapHashMap.905", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.912", %"class.blink::HeapHashSet.912", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.918", %"class.blink::Member.930", %"class.blink::Member.960", %"class.blink::Member.962", %"class.blink::Member.968", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1130", %"class.blink::Member.1136", %"class.blink::HeapHashMap.1138", %"class.blink::HeapHashMap.1145", %"class.std::__1::unique_ptr.1152", i32, %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.888", %"class.blink::HeapHashSet.1166", %"class.blink::HeapHashMap.1173", %"class.blink::Member.1180", %"class.blink::HeapHashMap.1182", %class.scoped_refptr.1189, %class.scoped_refptr.258, %"class.blink::Member.1094", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1190", %"class.blink::Member.342" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.876" = type { %"class.blink::MemberBase.877" }
%"class.blink::MemberBase.877" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.319", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.880", %"class.blink::HeapVector.888", i8 }>
%"class.blink::HeapVector.880" = type { %"class.WTF::Vector.883" }
%"class.WTF::Vector.883" = type { %"class.WTF::VectorBuffer.884" }
%"class.WTF::VectorBuffer.884" = type { %"class.WTF::VectorBufferBase.885" }
%"class.WTF::VectorBufferBase.885" = type { %"class.blink::Member.886"*, i32, i32 }
%"class.blink::Member.886" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.899", %"class.blink::Member.901", %"class.blink::Member.901", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.899" = type <{ %"class.blink::Member.901"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.901" = type { %"class.blink::MemberBase.902" }
%"class.blink::MemberBase.902" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.317", %"class.blink::Member.901", %"class.blink::Member.901" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.903" = type { %"class.blink::MemberBase.904" }
%"class.blink::MemberBase.904" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.905" = type { %"class.WTF::HashMap.908" }
%"class.WTF::HashMap.908" = type { %"class.WTF::HashTable.909" }
%"class.WTF::HashTable.909" = type <{ %"struct.WTF::KeyValuePair.911"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.911" = type opaque
%"class.blink::HeapHashSet.912" = type { %"class.WTF::HashSet.915" }
%"class.WTF::HashSet.915" = type { %"class.WTF::HashTable.916" }
%"class.WTF::HashTable.916" = type <{ %"class.blink::Member.319"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.918" = type { %"class.blink::MemberBase.919" }
%"class.blink::MemberBase.919" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.920", %"class.blink::Member.922" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.920" = type { %"class.blink::MemberBase.921" }
%"class.blink::MemberBase.921" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.342", %"class.blink::HeapHashMap.686" }
%"class.blink::HeapHashMap.686" = type { %"class.WTF::HashMap.689" }
%"class.WTF::HashMap.689" = type { %"class.WTF::HashTable.690" }
%"class.WTF::HashTable.690" = type <{ %"struct.WTF::KeyValuePair.692"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.692" = type opaque
%"class.blink::Member.922" = type { %"class.blink::MemberBase.923" }
%"class.blink::MemberBase.923" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.926", %"class.blink::Member.928" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.926" = type { %"class.blink::MemberBase.927" }
%"class.blink::MemberBase.927" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.928" = type { %"class.blink::MemberBase.929" }
%"class.blink::MemberBase.929" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1602", %"class.blink::Member.922", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.1609] }
%"class.blink::HeapVector.1602" = type { %"class.WTF::Vector.1605" }
%"class.WTF::Vector.1605" = type { %"class.WTF::VectorBuffer.1606" }
%"class.WTF::VectorBuffer.1606" = type { %"class.WTF::VectorBufferBase.1607" }
%"class.WTF::VectorBufferBase.1607" = type { %"class.blink::Member.928"*, i32, i32 }
%class.sk_sp.1609 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1610, i32, %"class.absl::optional.1611", i8, i32 }
%class.sk_sp.1610 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1611" = type { %"class.absl::optional_internal::optional_data.1612" }
%"class.absl::optional_internal::optional_data.1612" = type { %"class.absl::optional_internal::optional_data_base.1613" }
%"class.absl::optional_internal::optional_data_base.1613" = type { %"class.absl::optional_internal::optional_data_dtor_base.1614" }
%"class.absl::optional_internal::optional_data_dtor_base.1614" = type { i8, %union.anon.1615 }
%union.anon.1615 = type { %struct.SkRect }
%"class.blink::Member.930" = type { %"class.blink::MemberBase.931" }
%"class.blink::MemberBase.931" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.325", %class.scoped_refptr.941, %"class.blink::SelectorFilter", %"class.blink::Member.903", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.934" }
%"class.blink::HeapHashMap.934" = type { %"class.WTF::HashMap.937" }
%"class.WTF::HashMap.937" = type { %"class.WTF::HashTable.938" }
%"class.WTF::HashTable.938" = type <{ %"struct.WTF::KeyValuePair.940"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.940" = type opaque
%class.scoped_refptr.941 = type { %"class.blink::ComputedStyle"* }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.942", %"class.std::__1::unique_ptr.954" }
%"class.blink::HeapVector.942" = type { %"class.WTF::Vector.945" }
%"class.WTF::Vector.945" = type { %"class.WTF::VectorBuffer.946" }
%"class.WTF::VectorBuffer.946" = type { %"class.WTF::VectorBufferBase.947" }
%"class.WTF::VectorBufferBase.947" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.342", %"class.WTF::Vector.948" }
%"class.WTF::Vector.948" = type { %"class.WTF::VectorBuffer.949" }
%"class.WTF::VectorBuffer.949" = type { %"class.WTF::VectorBufferBase.950", [16 x i8] }
%"class.WTF::VectorBufferBase.950" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.954" = type { %"class.std::__1::__compressed_pair.955" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.956" }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.960" = type { %"class.blink::MemberBase.961" }
%"class.blink::MemberBase.961" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.962" = type { %"class.blink::MemberBase.963" }
%"class.blink::MemberBase.963" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.966", i8, [7 x i8] }>
%"class.blink::Member.966" = type { %"class.blink::MemberBase.967" }
%"class.blink::MemberBase.967" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.968" = type { %"class.blink::MemberBase.969" }
%"class.blink::MemberBase.969" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.990", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.972", %"class.WTF::HashMap.972", %"class.WTF::HashMap.972", %"class.WTF::HashMap.977", %class.scoped_refptr.982, %class.scoped_refptr.989, %class.scoped_refptr.988, %"class.WTF::Vector.411", %"class.WTF::Vector.411", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.976"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.976" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3228 }
%class.scoped_refptr.3228 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.983", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.985", %"union.blink::InvalidationSet::Backing.986", %"union.blink::InvalidationSet::Backing.987", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.983" = type { %"class.base::RefCounted.984" }
%"class.base::RefCounted.984" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.985" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.986" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.987" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.977" = type { %"class.WTF::HashTable.978" }
%"class.WTF::HashTable.978" = type <{ %"struct.WTF::KeyValuePair.981"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.981" = type opaque
%class.scoped_refptr.982 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.988, %class.scoped_refptr.988 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.983", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.985", %"union.blink::InvalidationSet::Backing.986", %"union.blink::InvalidationSet::Backing.987", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.989 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.988 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.990" = type { %"class.blink::MemberBase.991" }
%"class.blink::MemberBase.991" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.994", %"class.blink::HeapHashMap.994", %"class.blink::HeapHashMap.994", %"class.blink::HeapHashMap.994", %"class.blink::HeapVector.1001", %"class.blink::HeapVector.1001", %"class.blink::HeapVector.1001", %"class.blink::HeapVector.1001", %"class.blink::HeapVector.1001", %"class.blink::HeapVector.1001", %"class.blink::HeapVector.1001", %"class.blink::HeapVector.1001", %"class.blink::HeapVector.1001", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1037", %"class.blink::HeapVector.1045", %"class.blink::HeapVector.1053", %"class.blink::HeapVector.1070", %"class.blink::HeapVector.1078", %"class.blink::HeapVector.1086", %"class.blink::HeapVector.1099", %"class.WTF::Vector.1106", i32, %"class.blink::Member.1112" }
%"class.blink::HeapHashMap.994" = type { %"class.WTF::HashMap.997" }
%"class.WTF::HashMap.997" = type { %"class.WTF::HashTable.998" }
%"class.WTF::HashTable.998" = type <{ %"struct.WTF::KeyValuePair.1000"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1000" = type { %"class.WTF::AtomicString", %"class.blink::Member.3242" }
%"class.blink::Member.3242" = type { %"class.blink::MemberBase.3243" }
%"class.blink::MemberBase.3243" = type { %"class.blink::HeapVector.1001"* }
%"class.blink::HeapVector.1001" = type { %"class.WTF::Vector.1004" }
%"class.WTF::Vector.1004" = type { %"class.WTF::VectorBuffer.1005" }
%"class.WTF::VectorBuffer.1005" = type { %"class.WTF::VectorBufferBase.1006" }
%"class.WTF::VectorBufferBase.1006" = type { %"class.blink::Member.1007"*, i32, i32 }
%"class.blink::Member.1007" = type { %"class.blink::MemberBase.1008" }
%"class.blink::MemberBase.1008" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1011", i64, [4 x i32] }
%"class.blink::Member.1011" = type { %"class.blink::MemberBase.1012" }
%"class.blink::MemberBase.1012" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.353", %"class.blink::Member.1032" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.353" = type { %"class.blink::MemberBase.354" }
%"class.blink::MemberBase.354" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1032" = type { %"class.blink::MemberBase.1033" }
%"class.blink::MemberBase.1033" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1037" = type { %"class.WTF::Vector.1040" }
%"class.WTF::Vector.1040" = type { %"class.WTF::VectorBuffer.1041" }
%"class.WTF::VectorBuffer.1041" = type { %"class.WTF::VectorBufferBase.1042" }
%"class.WTF::VectorBufferBase.1042" = type { %"class.blink::Member.1043"*, i32, i32 }
%"class.blink::Member.1043" = type { %"class.blink::MemberBase.3238" }
%"class.blink::MemberBase.3238" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.353", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1045" = type { %"class.WTF::Vector.1048" }
%"class.WTF::Vector.1048" = type { %"class.WTF::VectorBuffer.1049" }
%"class.WTF::VectorBuffer.1049" = type { %"class.WTF::VectorBufferBase.1050" }
%"class.WTF::VectorBufferBase.1050" = type { %"class.blink::Member.1051"*, i32, i32 }
%"class.blink::Member.1051" = type { %"class.blink::MemberBase.3239" }
%"class.blink::MemberBase.3239" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.353" }
%"class.blink::HeapVector.1053" = type { %"class.WTF::Vector.1056" }
%"class.WTF::Vector.1056" = type { %"class.WTF::VectorBuffer.1057" }
%"class.WTF::VectorBuffer.1057" = type { %"class.WTF::VectorBufferBase.1058" }
%"class.WTF::VectorBufferBase.1058" = type { %"class.blink::Member.1059"*, i32, i32 }
%"class.blink::Member.1059" = type { %"class.blink::MemberBase.1060" }
%"class.blink::MemberBase.1060" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1061", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1061" = type { %"class.WTF::Vector.1064" }
%"class.WTF::Vector.1064" = type { %"class.WTF::VectorBuffer.1065" }
%"class.WTF::VectorBuffer.1065" = type { %"class.WTF::VectorBufferBase.1066" }
%"class.WTF::VectorBufferBase.1066" = type { %"class.blink::Member.1067"*, i32, i32 }
%"class.blink::Member.1067" = type opaque
%"class.blink::HeapVector.1070" = type { %"class.WTF::Vector.1073" }
%"class.WTF::Vector.1073" = type { %"class.WTF::VectorBuffer.1074" }
%"class.WTF::VectorBuffer.1074" = type { %"class.WTF::VectorBufferBase.1075" }
%"class.WTF::VectorBufferBase.1075" = type { %"class.blink::Member.1076"*, i32, i32 }
%"class.blink::Member.1076" = type { %"class.blink::MemberBase.3240" }
%"class.blink::MemberBase.3240" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.353" }
%"class.blink::HeapVector.1078" = type { %"class.WTF::Vector.1081" }
%"class.WTF::Vector.1081" = type { %"class.WTF::VectorBuffer.1082" }
%"class.WTF::VectorBuffer.1082" = type { %"class.WTF::VectorBufferBase.1083" }
%"class.WTF::VectorBufferBase.1083" = type { %"class.blink::Member.1084"*, i32, i32 }
%"class.blink::Member.1084" = type { %"class.blink::MemberBase.3241" }
%"class.blink::MemberBase.3241" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1094", %"class.blink::Member.1094", %"class.blink::Member.1094", %"class.blink::Member.1094", %"class.blink::Member.1094", %"class.blink::Member.1094", %"class.blink::Member.1094", %"class.blink::Member.1094", %"class.blink::Member.1094", %"class.blink::Member.1094", i32, [4 x i8] }>
%"class.blink::HeapVector.1086" = type { %"class.WTF::Vector.1089" }
%"class.WTF::Vector.1089" = type { %"class.WTF::VectorBuffer.1090" }
%"class.WTF::VectorBuffer.1090" = type { %"class.WTF::VectorBufferBase.1091" }
%"class.WTF::VectorBufferBase.1091" = type { %"class.blink::Member.1092"*, i32, i32 }
%"class.blink::Member.1092" = type { %"class.blink::MemberBase.1093" }
%"class.blink::MemberBase.1093" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1094", %"class.blink::Member.1094", %"class.blink::Member.1094", %"class.blink::Member.1094", %"class.blink::Member.1094" }
%"class.blink::HeapVector.1099" = type { %"class.WTF::Vector.1102" }
%"class.WTF::Vector.1102" = type { %"class.WTF::VectorBuffer.1103" }
%"class.WTF::VectorBuffer.1103" = type { %"class.WTF::VectorBufferBase.1104" }
%"class.WTF::VectorBufferBase.1104" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1011", i32, i32 }
%"class.WTF::Vector.1106" = type { %"class.WTF::VectorBuffer.1107" }
%"class.WTF::VectorBuffer.1107" = type { %"class.WTF::VectorBufferBase.1108" }
%"class.WTF::VectorBufferBase.1108" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1109, i8, [7 x i8] }>
%class.scoped_refptr.1109 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1112" = type { %"class.blink::MemberBase.1113" }
%"class.blink::MemberBase.1113" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1116", %"class.blink::HeapHashMap.1116", %"class.blink::HeapHashMap.1116", %"class.blink::HeapHashMap.1116" }
%"class.blink::HeapHashMap.1116" = type { %"class.WTF::HashMap.1119" }
%"class.WTF::HashMap.1119" = type { %"class.WTF::HashTable.1120" }
%"class.WTF::HashTable.1120" = type <{ %"struct.WTF::KeyValuePair.1122"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1122" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1123" }
%"class.blink::HeapHashMap.1123" = type { %"class.WTF::HashMap.1126" }
%"class.WTF::HashMap.1126" = type { %"class.WTF::HashTable.1127" }
%"class.WTF::HashTable.1127" = type <{ %"struct.WTF::KeyValuePair.1129"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1129" = type { %"class.blink::Member.313", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3229", %"class.WTF::Vector.3229" }
%"class.WTF::Vector.3229" = type { %"class.WTF::VectorBuffer.3230" }
%"class.WTF::VectorBuffer.3230" = type { %"class.WTF::VectorBufferBase.3231" }
%"class.WTF::VectorBufferBase.3231" = type { %class.scoped_refptr.3228*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.317", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1130" = type { %"class.WTF::HashSet.1133" }
%"class.WTF::HashSet.1133" = type { %"class.WTF::HashTable.1134" }
%"class.WTF::HashTable.1134" = type <{ %"class.blink::Member.342"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1136" = type { %"class.blink::MemberBase.1137" }
%"class.blink::MemberBase.1137" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1138" = type { %"class.WTF::HashMap.1141" }
%"class.WTF::HashMap.1141" = type { %"class.WTF::HashTable.1142" }
%"class.WTF::HashTable.1142" = type <{ %"struct.WTF::KeyValuePair.1144"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1144" = type opaque
%"class.blink::HeapHashMap.1145" = type { %"class.WTF::HashMap.1148" }
%"class.WTF::HashMap.1148" = type { %"class.WTF::HashTable.1149" }
%"class.WTF::HashTable.1149" = type <{ %"struct.WTF::KeyValuePair.1151"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1151" = type opaque
%"class.std::__1::unique_ptr.1152" = type { %"class.std::__1::__compressed_pair.1153" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.1154" }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"struct.std::__1::pair.1164"*, i32, i32 }
%"struct.std::__1::pair.1164" = type opaque
%"class.blink::HeapVector.888" = type { %"class.WTF::Vector.891" }
%"class.WTF::Vector.891" = type { %"class.WTF::VectorBuffer.892" }
%"class.WTF::VectorBuffer.892" = type { %"class.WTF::VectorBufferBase.893" }
%"class.WTF::VectorBufferBase.893" = type { %"struct.std::__1::pair.894"*, i32, i32 }
%"struct.std::__1::pair.894" = type opaque
%"class.blink::HeapHashSet.1166" = type { %"class.WTF::HashSet.1169" }
%"class.WTF::HashSet.1169" = type { %"class.WTF::HashTable.1170" }
%"class.WTF::HashTable.1170" = type <{ %"class.blink::WeakMember.1172"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1172" = type { %"class.blink::MemberBase.389" }
%"class.blink::HeapHashMap.1173" = type { %"class.WTF::HashMap.1176" }
%"class.WTF::HashMap.1176" = type { %"class.WTF::HashTable.1177" }
%"class.WTF::HashTable.1177" = type <{ %"struct.WTF::KeyValuePair.1179"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1179" = type { %"class.WTF::AtomicString", %"class.blink::Member.1059" }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1182" = type { %"class.WTF::HashMap.1185" }
%"class.WTF::HashMap.1185" = type { %"class.WTF::HashTable.1186" }
%"class.WTF::HashTable.1186" = type <{ %"struct.WTF::KeyValuePair.1188"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1188" = type opaque
%class.scoped_refptr.1189 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1094" = type { %"class.blink::MemberBase.1095" }
%"class.blink::MemberBase.1095" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1190" = type { %"class.WTF::HashSet.1193" }
%"class.WTF::HashSet.1193" = type { %"class.WTF::HashTable.1194" }
%"class.WTF::HashTable.1194" = type <{ %"class.blink::Member.1196"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1196" = type { %"class.blink::MemberBase.1197" }
%"class.blink::MemberBase.1197" = type { %"class.blink::TextTrack"* }
%"class.blink::TextTrack" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::TrackBase", %"class.blink::Member.1229", %"class.blink::Member.1229", %"class.blink::HeapVector.382", %"class.blink::Member.1231", %"class.WTF::AtomicString", i32, i32, i32, i32, i8, [7 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1212" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1200" }
%"class.blink::HeapVector.1200" = type { %"class.WTF::Vector.1203" }
%"class.WTF::Vector.1203" = type { %"class.WTF::VectorBuffer.1204" }
%"class.WTF::VectorBuffer.1204" = type { %"class.WTF::VectorBufferBase.1205", [32 x i8] }
%"class.WTF::VectorBufferBase.1205" = type { %"struct.std::__1::pair.1206"*, i32, i32 }
%"struct.std::__1::pair.1206" = type { %"class.WTF::AtomicString", %"class.blink::Member.1207" }
%"class.blink::Member.1207" = type { %"class.blink::MemberBase.1208" }
%"class.blink::MemberBase.1208" = type { %"class.blink::HeapVector.1209"* }
%"class.blink::HeapVector.1209" = type opaque
%"class.std::__1::unique_ptr.1212" = type { %"class.std::__1::__compressed_pair.1213" }
%"class.std::__1::__compressed_pair.1213" = type { %"struct.std::__1::__compressed_pair_elem.1214" }
%"struct.std::__1::__compressed_pair_elem.1214" = type { %"class.WTF::Vector.1215"* }
%"class.WTF::Vector.1215" = type opaque
%"class.blink::TrackBase" = type { %"class.blink::Supplementable.1219", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String", %"class.blink::Member.1227" }
%"class.blink::Supplementable.1219" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1220" }
%"class.blink::HeapHashMap.1220" = type { %"class.WTF::HashMap.1223" }
%"class.WTF::HashMap.1223" = type { %"class.WTF::HashTable.1224" }
%"class.WTF::HashTable.1224" = type <{ %"struct.WTF::KeyValuePair.1226"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1226" = type opaque
%"class.blink::Member.1227" = type { %"class.blink::MemberBase.1228" }
%"class.blink::MemberBase.1228" = type { %"class.blink::HTMLMediaElement"* }
%"class.blink::HTMLMediaElement" = type { %"class.blink::HTMLElement", %"class.blink::Supplementable.1430", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.media::mojom::blink::MediaPlayer", %"class.blink::WebMediaPlayerClient", %"class.blink::ThreadState::PrefinalizerRegistration.1448", %"class.blink::HeapTaskRunnerTimer.1449", %"class.blink::HeapTaskRunnerTimer.1449", %"class.blink::HeapTaskRunnerTimer.1449", %"class.blink::HeapTaskRunnerTimer.1449", %"class.blink::HeapTaskRunnerTimer.1449", %"class.blink::Member.1451", %"class.blink::Member.1453", double, double, i32, i32, i32, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::Member.1455", %"class.blink::Member.1457", double, double, %"class.absl::optional.1459", double, double, double, i32, %"class.blink::Member.1468", %"class.blink::Member.317", i32, %"class.blink::HeapTaskRunnerTimer.1449", %"class.std::__1::unique_ptr.1470", %"class.cc::Layer"*, %class.scoped_refptr.1476, %"class.blink::Member.1477", double, i8, double, i32, i16, %"class.absl::optional.1479", i8, %"class.base::TimeTicks", %"class.blink::Member.1484", %"class.blink::Member.1486", %"class.blink::Member.1231", %"class.blink::HeapVector.1488", %"class.blink::Member.1495", %"class.blink::HeapVector.1497", %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.blink::HeapVector.1497", %"class.blink::HeapVector.1497", i32, %"class.blink::Member.1524", %"class.blink::HTMLMediaElement::AudioSourceProviderImpl", %"class.blink::Member.1555", %"class.blink::WebRemotePlaybackClient"*, %"class.blink::Member.1583", %"class.blink::Member.1585", %"class.blink::Member.1559", %"class.blink::Member.1587", %"class.blink::Member.1590", %"class.blink::Member.1597" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.347" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.347" = type { %"class.blink::MemberBase.348" }
%"class.blink::MemberBase.348" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.351", %"class.blink::Member.353", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.351" = type { %"class.WTF::SingleThreadedBitField.352" }
%"class.WTF::SingleThreadedBitField.352" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.357 }
%class.scoped_refptr.357 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.358", %"class.WTF::AtomicString", %"class.WTF::Vector.360" }
%"class.WTF::RefCounted.358" = type { %"class.base::RefCounted.359" }
%"class.base::RefCounted.359" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.360" = type { %"class.WTF::VectorBuffer.361" }
%"class.WTF::VectorBuffer.361" = type { %"class.WTF::VectorBufferBase.285", [32 x i8] }
%"class.blink::Supplementable.1430" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1431" }
%"class.blink::HeapHashMap.1431" = type { %"class.WTF::HashMap.1434" }
%"class.WTF::HashMap.1434" = type { %"class.WTF::HashTable.1435" }
%"class.WTF::HashTable.1435" = type <{ %"struct.WTF::KeyValuePair.1437"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1437" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1438" }
%"class.blink::WeakMember.1438" = type { %"class.blink::MemberBase.1439" }
%"class.blink::MemberBase.1439" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.media::mojom::blink::MediaPlayer" = type { i32 (...)** }
%"class.blink::WebMediaPlayerClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration.1448" = type { i8 }
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::TimeRanges"* }
%"class.blink::TimeRanges" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::EventQueue"* }
%"class.blink::EventQueue" = type opaque
%"class.blink::Member.1455" = type { %"class.blink::MemberBase.1456" }
%"class.blink::MemberBase.1456" = type { %"class.blink::MediaStreamDescriptor"* }
%"class.blink::MediaStreamDescriptor" = type opaque
%"class.blink::Member.1457" = type { %"class.blink::MemberBase.1458" }
%"class.blink::MemberBase.1458" = type { %"class.blink::MediaError"* }
%"class.blink::MediaError" = type opaque
%"class.absl::optional.1459" = type { %"class.absl::optional_internal::optional_data.1460" }
%"class.absl::optional_internal::optional_data.1460" = type { %"class.absl::optional_internal::optional_data_base.1461" }
%"class.absl::optional_internal::optional_data_base.1461" = type { %"class.absl::optional_internal::optional_data_dtor_base.1462" }
%"class.absl::optional_internal::optional_data_dtor_base.1462" = type { i8, %union.anon.1463 }
%union.anon.1463 = type { %"class.base::ElapsedTimer" }
%"class.blink::Member.1468" = type { %"class.blink::MemberBase.1469" }
%"class.blink::MemberBase.1469" = type { %"class.blink::HTMLSourceElement"* }
%"class.blink::HTMLSourceElement" = type opaque
%"class.blink::HeapTaskRunnerTimer.1449" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1450", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.764, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.764 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1450" = type { %"class.blink::MemberBase.1228" }
%"class.std::__1::unique_ptr.1470" = type { %"class.std::__1::__compressed_pair.1471" }
%"class.std::__1::__compressed_pair.1471" = type { %"struct.std::__1::__compressed_pair_elem.1472" }
%"struct.std::__1::__compressed_pair_elem.1472" = type { %"class.blink::WebMediaPlayer"* }
%"class.blink::WebMediaPlayer" = type { i32 (...)** }
%"class.cc::Layer" = type opaque
%class.scoped_refptr.1476 = type { %"class.blink::MediaSourceAttachment"* }
%"class.blink::MediaSourceAttachment" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::MediaSourceTracer"* }
%"class.blink::MediaSourceTracer" = type opaque
%"class.absl::optional.1479" = type { %"class.absl::optional_internal::optional_data.1480" }
%"class.absl::optional_internal::optional_data.1480" = type { %"class.absl::optional_internal::optional_data_base.1481" }
%"class.absl::optional_internal::optional_data_base.1481" = type { %"class.absl::optional_internal::optional_data_dtor_base.1482" }
%"class.absl::optional_internal::optional_data_dtor_base.1482" = type { i8, %union.anon.1483 }
%union.anon.1483 = type { i8 }
%"class.blink::Member.1484" = type { %"class.blink::MemberBase.1485" }
%"class.blink::MemberBase.1485" = type { %"class.blink::AudioTrackList"* }
%"class.blink::AudioTrackList" = type opaque
%"class.blink::Member.1486" = type { %"class.blink::MemberBase.1487" }
%"class.blink::MemberBase.1487" = type { %"class.blink::VideoTrackList"* }
%"class.blink::VideoTrackList" = type opaque
%"class.blink::HeapVector.1488" = type { %"class.WTF::Vector.1491" }
%"class.WTF::Vector.1491" = type { %"class.WTF::VectorBuffer.1492" }
%"class.WTF::VectorBuffer.1492" = type { %"class.WTF::VectorBufferBase.1493" }
%"class.WTF::VectorBufferBase.1493" = type { %"class.blink::Member.1196"*, i32, i32 }
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::CueTimeline"* }
%"class.blink::CueTimeline" = type opaque
%"class.blink::HeapVector.1497" = type { %"class.WTF::Vector.1500" }
%"class.WTF::Vector.1500" = type { %"class.WTF::VectorBuffer.1501" }
%"class.WTF::VectorBuffer.1501" = type { %"class.WTF::VectorBufferBase.1502" }
%"class.WTF::VectorBufferBase.1502" = type { %"class.blink::Member.1503"*, i32, i32 }
%"class.blink::Member.1503" = type { %"class.blink::MemberBase.1504" }
%"class.blink::MemberBase.1504" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.1507", i32, %"class.blink::Member.1508", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.1517", %"class.blink::SelfKeepAlive.1520" }
%"class.blink::ThreadState::PrefinalizerRegistration.1507" = type { i8 }
%"class.blink::Member.1508" = type { %"class.blink::MemberBase.1509" }
%"class.blink::MemberBase.1509" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.1512, %"class.blink::Member.1513", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.1512 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1513" = type { %"class.blink::MemberBase.1514" }
%"class.blink::MemberBase.1514" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.1515" }
%"class.blink::Persistent.1515" = type { %"class.blink::PersistentBase.1516" }
%"class.blink::PersistentBase.1516" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.268" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.1508", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.1517", %class.scoped_refptr.825 }
%"class.blink::TraceWrapperV8Reference.1517" = type { %"class.v8::TracedReference.1518" }
%"class.v8::TracedReference.1518" = type { %"class.v8::BasicTracedReference.1519" }
%"class.v8::BasicTracedReference.1519" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.1520" = type { %"class.blink::Persistent.1521" }
%"class.blink::Persistent.1521" = type { %"class.blink::PersistentBase.1522" }
%"class.blink::PersistentBase.1522" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr.268" }
%"class.blink::Member.1524" = type { %"class.blink::MemberBase.1525" }
%"class.blink::MemberBase.1525" = type { %"class.blink::AudioSourceProviderClient"* }
%"class.blink::AudioSourceProviderClient" = type opaque
%"class.blink::HTMLMediaElement::AudioSourceProviderImpl" = type { %"class.blink::AudioSourceProvider", %class.scoped_refptr.1526, %"class.blink::Member.1551", %"class.WTF::Mutex" }
%"class.blink::AudioSourceProvider" = type { i32 (...)** }
%class.scoped_refptr.1526 = type { %"class.blink::WebAudioSourceProviderImpl"* }
%"class.blink::WebAudioSourceProviderImpl" = type { %"class.blink::WebAudioSourceProvider", %"class.media::SwitchableAudioRendererSink.base", double, i32, %"class.base::RepeatingCallback", %"class.blink::WebAudioSourceProviderClient"*, %"class.base::Lock", %class.scoped_refptr.1528, %"class.std::__1::unique_ptr.1529", %"class.std::__1::unique_ptr.1544", %"class.media::MediaLog"*, %"class.base::OnceCallback", %"class.base::WeakPtrFactory.1550" }
%"class.blink::WebAudioSourceProvider" = type { i32 (...)** }
%"class.media::SwitchableAudioRendererSink.base" = type { %"class.media::RestartableAudioRendererSink.base" }
%"class.media::RestartableAudioRendererSink.base" = type { %"class.media::AudioRendererSink.base" }
%"class.media::AudioRendererSink.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1527" }>
%"class.base::RefCountedThreadSafe.1527" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::WebAudioSourceProviderClient" = type { i32 (...)** }
%class.scoped_refptr.1528 = type { %"class.media::SwitchableAudioRendererSink"* }
%"class.media::SwitchableAudioRendererSink" = type { %"class.media::RestartableAudioRendererSink.base", [4 x i8] }
%"class.std::__1::unique_ptr.1529" = type { %"class.std::__1::__compressed_pair.1530" }
%"class.std::__1::__compressed_pair.1530" = type { %"struct.std::__1::__compressed_pair_elem.1531" }
%"struct.std::__1::__compressed_pair_elem.1531" = type { %"class.media::AudioBus"* }
%"class.media::AudioBus" = type { i32 (...)**, %"class.std::__1::unique_ptr.1532", i8, i64, i32, %"class.std::__1::vector", i32, i8, %"class.base::OnceCallback" }
%"class.std::__1::unique_ptr.1532" = type { %"class.std::__1::__compressed_pair.1533" }
%"class.std::__1::__compressed_pair.1533" = type { %"struct.std::__1::__compressed_pair_elem.1534" }
%"struct.std::__1::__compressed_pair_elem.1534" = type { float* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float**, float**, %"class.std::__1::__compressed_pair.1536" }
%"class.std::__1::__compressed_pair.1536" = type { %"struct.std::__1::__compressed_pair_elem.1537" }
%"struct.std::__1::__compressed_pair_elem.1537" = type { float** }
%"class.std::__1::unique_ptr.1544" = type { %"class.std::__1::__compressed_pair.1545" }
%"class.std::__1::__compressed_pair.1545" = type { %"struct.std::__1::__compressed_pair_elem.1546" }
%"struct.std::__1::__compressed_pair_elem.1546" = type { %"class.blink::WebAudioSourceProviderImpl::TeeFilter"* }
%"class.blink::WebAudioSourceProviderImpl::TeeFilter" = type opaque
%"class.media::MediaLog" = type opaque
%"class.base::WeakPtrFactory.1550" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1551" = type { %"class.blink::MemberBase.1552" }
%"class.blink::MemberBase.1552" = type { %"class.blink::HTMLMediaElement::AudioClientImpl"* }
%"class.blink::HTMLMediaElement::AudioClientImpl" = type { %"class.blink::WebAudioSourceProviderClient", %"class.blink::Member.1524" }
%"class.blink::Member.1555" = type { %"class.blink::MemberBase.1556" }
%"class.blink::MemberBase.1556" = type { %"class.blink::AutoplayPolicy"* }
%"class.blink::AutoplayPolicy" = type <{ i32 (...)**, i8, [7 x i8], %"class.blink::Member.1227", %"class.blink::Member.1559", %"class.blink::Member.1581", %"class.absl::optional.1479", [6 x i8] }>
%"class.blink::Member.1581" = type { %"class.blink::MemberBase.1582" }
%"class.blink::MemberBase.1582" = type { %"class.blink::AutoplayUmaHelper"* }
%"class.blink::AutoplayUmaHelper" = type opaque
%"class.blink::WebRemotePlaybackClient" = type opaque
%"class.blink::Member.1583" = type { %"class.blink::MemberBase.1584" }
%"class.blink::MemberBase.1584" = type { %"class.blink::MediaControls"* }
%"class.blink::MediaControls" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1227" }
%"class.blink::Member.1585" = type { %"class.blink::MemberBase.1586" }
%"class.blink::MemberBase.1586" = type { %"class.blink::HTMLMediaElementControlsList"* }
%"class.blink::HTMLMediaElementControlsList" = type opaque
%"class.blink::Member.1559" = type { %"class.blink::MemberBase.1560" }
%"class.blink::MemberBase.1560" = type { %"class.blink::IntersectionObserver"* }
%"class.blink::IntersectionObserver" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable.1561", %"class.blink::ExecutionContextClient", %"class.blink::Member.1563", %"class.blink::UntracedMember", %"class.blink::HeapLinkedHashSet", %"class.WTF::Vector.1576", double, %"class.WTF::Vector.700", i32, i8, [3 x i8] }>
%"class.blink::ActiveScriptWrappable.1561" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1562" }
%"class.blink::WeakMember.1562" = type { %"class.blink::MemberBase.796" }
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::IntersectionObserverDelegate"* }
%"class.blink::IntersectionObserverDelegate" = type opaque
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1565" }
%"class.blink::MemberBase.1565" = type { %"class.blink::Node"* }
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1568", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1568" = type { %"class.WTF::HashTable.1569" }
%"class.WTF::HashTable.1569" = type <{ %"struct.WTF::KeyValuePair.1571"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1571" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1572", i32, i32 }
%"class.WTF::Vector.1572" = type { %"class.WTF::VectorBuffer.1573" }
%"class.WTF::VectorBuffer.1573" = type { %"class.WTF::VectorBufferBase.1574" }
%"class.WTF::VectorBufferBase.1574" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.WTF::Vector.1576" = type { %"class.WTF::VectorBuffer.1577" }
%"class.WTF::VectorBuffer.1577" = type { %"class.WTF::VectorBufferBase.1578" }
%"class.WTF::VectorBufferBase.1578" = type { float*, i32, i32 }
%"class.WTF::Vector.700" = type { %"class.WTF::VectorBuffer.701" }
%"class.WTF::VectorBuffer.701" = type { %"class.WTF::VectorBufferBase.702" }
%"class.WTF::VectorBufferBase.702" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::Member.1587" = type { %"class.blink::MemberBase.1588" }
%"class.blink::MemberBase.1588" = type { %"class.blink::DisallowNewWrapper.1589"* }
%"class.blink::DisallowNewWrapper.1589" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::DisallowNewWrapper.1592"* }
%"class.blink::DisallowNewWrapper.1592" = type { %"class.blink::HeapMojoAssociatedRemoteSet" }
%"class.blink::HeapMojoAssociatedRemoteSet" = type { %"class.blink::Member.1595" }
%"class.blink::Member.1595" = type { %"class.blink::MemberBase.1596" }
%"class.blink::MemberBase.1596" = type { %"class.blink::HeapMojoAssociatedRemoteSet<media::mojom::blink::MediaPlayerObserver, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemoteSet<media::mojom::blink::MediaPlayerObserver, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1597" = type { %"class.blink::MemberBase.1598" }
%"class.blink::MemberBase.1598" = type { %"class.blink::DisallowNewWrapper.1599"* }
%"class.blink::DisallowNewWrapper.1599" = type opaque
%"class.blink::Member.1229" = type { %"class.blink::MemberBase.1230" }
%"class.blink::MemberBase.1230" = type { %"class.blink::TextTrackCueList"* }
%"class.blink::TextTrackCueList" = type opaque
%"class.blink::Member.1231" = type { %"class.blink::MemberBase.1232" }
%"class.blink::MemberBase.1232" = type { %"class.blink::TextTrackList"* }
%"class.blink::TextTrackList" = type opaque
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.319", %"class.blink::HeapVector.382" }
%"class.blink::Member.1235" = type { %"class.blink::MemberBase.1236" }
%"class.blink::MemberBase.1236" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1237" = type { %"class.blink::MemberBase.1238" }
%"class.blink::MemberBase.1238" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1239" = type { %"class.WTF::HashMap.1242" }
%"class.WTF::HashMap.1242" = type { %"class.WTF::HashTable.1243" }
%"class.WTF::HashTable.1243" = type <{ %"struct.WTF::KeyValuePair.1245"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1245" = type opaque
%"class.WTF::Vector.1246" = type { %"class.WTF::VectorBuffer.1247" }
%"class.WTF::VectorBuffer.1247" = type { %"class.WTF::VectorBufferBase.1248" }
%"class.WTF::VectorBufferBase.1248" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1251" = type { %"class.blink::MemberBase.1252" }
%"class.blink::MemberBase.1252" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1255" = type { %"class.blink::MemberBase.1256" }
%"class.blink::MemberBase.1256" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.342" = type { %"class.blink::MemberBase.343" }
%"class.blink::MemberBase.343" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1259" = type { %"class.WTF::Vector.1262" }
%"class.WTF::Vector.1262" = type { %"class.WTF::VectorBuffer.1263" }
%"class.WTF::VectorBuffer.1263" = type { %"class.WTF::VectorBufferBase.1264" }
%"class.WTF::VectorBufferBase.1264" = type { %"class.blink::Member.1265"*, i32, i32 }
%"class.blink::Member.1265" = type opaque
%"class.std::__1::unique_ptr.1267" = type { %"class.std::__1::__compressed_pair.1268" }
%"class.std::__1::__compressed_pair.1268" = type { %"struct.std::__1::__compressed_pair_elem.1269" }
%"struct.std::__1::__compressed_pair_elem.1269" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1273" = type { %"class.WTF::HashSet.1276" }
%"class.WTF::HashSet.1276" = type { %"class.WTF::HashTable.1277" }
%"class.WTF::HashTable.1277" = type <{ %"class.blink::WeakMember.1279"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1279" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1280", i32, [4 x i8] }>
%"class.WTF::Vector.1280" = type { %"class.WTF::VectorBuffer.1281" }
%"class.WTF::VectorBuffer.1281" = type { %"class.WTF::VectorBufferBase.1282" }
%"class.WTF::VectorBufferBase.1282" = type { %"struct.std::__1::pair.1283"*, i32, i32 }
%"struct.std::__1::pair.1283" = type opaque
%"class.blink::Member.1286" = type { %"class.blink::MemberBase.1287" }
%"class.blink::MemberBase.1287" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1288" = type { %"class.WTF::VectorBuffer.1289" }
%"class.WTF::VectorBuffer.1289" = type { %"class.WTF::VectorBufferBase.1290" }
%"class.WTF::VectorBufferBase.1290" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1293" = type { %"class.std::__1::__compressed_pair.1294" }
%"class.std::__1::__compressed_pair.1294" = type { %"struct.std::__1::__compressed_pair_elem.1295" }
%"struct.std::__1::__compressed_pair_elem.1295" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type { %"class.blink::Document"*, %"class.blink::HeapHashMap.1299"*, %"class.blink::HeapHashMap.1300"* }
%"class.blink::HeapHashMap.1299" = type opaque
%"class.blink::HeapHashMap.1300" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.364" = type { %"class.WTF::Vector.367" }
%"class.WTF::Vector.367" = type { %"class.WTF::VectorBuffer.368" }
%"class.WTF::VectorBuffer.368" = type { %"class.WTF::VectorBufferBase.369" }
%"class.WTF::VectorBufferBase.369" = type { %"class.blink::Member.342"*, i32, i32 }
%"class.blink::HeapVector.1301" = type { %"class.WTF::Vector.1304" }
%"class.WTF::Vector.1304" = type { %"class.WTF::VectorBuffer.1305" }
%"class.WTF::VectorBuffer.1305" = type { %"class.WTF::VectorBufferBase.1306" }
%"class.WTF::VectorBufferBase.1306" = type { %"class.blink::Member.1307"*, i32, i32 }
%"class.blink::Member.1307" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.325" }
%"class.blink::Member.1309" = type { %"class.blink::MemberBase.1310" }
%"class.blink::MemberBase.1310" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1311" = type { %"class.blink::MemberBase.1312" }
%"class.blink::MemberBase.1312" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1313" = type { %"class.blink::MemberBase.1314" }
%"class.blink::MemberBase.1314" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1315" = type { %"class.blink::MemberBase.1316" }
%"class.blink::MemberBase.1316" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1317" = type { %"class.blink::MemberBase.1318" }
%"class.blink::MemberBase.1318" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1319" = type { %"class.WTF::HashTable.1320" }
%"class.WTF::HashTable.1320" = type <{ %"struct.WTF::KeyValuePair.1323"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1323" = type opaque
%"class.blink::Member.1324" = type { %"class.blink::MemberBase.1325" }
%"class.blink::MemberBase.1325" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1326" = type { %"class.blink::MemberBase.1327" }
%"class.blink::MemberBase.1327" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1328" = type { %"class.blink::MemberBase.1329" }
%"class.blink::MemberBase.1329" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1330" = type { %"class.blink::MemberBase.1331" }
%"class.blink::MemberBase.1331" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.843" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.844", { i64, i64 } }
%"class.blink::WeakMember.844" = type { %"class.blink::MemberBase.326" }
%"class.blink::HeapHashSet.1332" = type { %"class.WTF::HashSet.1335" }
%"class.WTF::HashSet.1335" = type { %"class.WTF::HashTable.1336" }
%"class.WTF::HashTable.1336" = type <{ %"class.blink::Member.1338"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1338" = type opaque
%"class.blink::Member.1339" = type { %"class.blink::MemberBase.1340" }
%"class.blink::MemberBase.1340" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1341" = type { %"class.blink::MemberBase.1342" }
%"class.blink::MemberBase.1342" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1343" = type { %"class.blink::MemberBase.1344" }
%"class.blink::MemberBase.1344" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1345" = type { %"class.blink::MemberBase.1346" }
%"class.blink::MemberBase.1346" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1347" = type { %"class.blink::MemberBase.1348" }
%"class.blink::MemberBase.1348" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1349" = type { %"class.std::__1::__compressed_pair.1350" }
%"class.std::__1::__compressed_pair.1350" = type { %"struct.std::__1::__compressed_pair_elem.1351" }
%"struct.std::__1::__compressed_pair_elem.1351" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1355" = type { %"class.std::__1::__compressed_pair.1356" }
%"class.std::__1::__compressed_pair.1356" = type { %"struct.std::__1::__compressed_pair_elem.1357" }
%"struct.std::__1::__compressed_pair_elem.1357" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.424", %"class.WTF::HashSet.424", %"class.WTF::HashSet.424", %"class.WTF::HashSet.424", %"class.WTF::HashSet.424", %"class.WTF::HashSet.424", i32, [4 x i8], %"class.WTF::HashMap.1358", %"class.WTF::HashMap.1358", %"class.WTF::HashMap.1358", %"class.WTF::HashMap.1358", %"class.WTF::HashMap.1358", %"class.WTF::HashMap.1358", %"class.WTF::HashMap.1358", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1358" = type { %"class.WTF::HashTable.1359" }
%"class.WTF::HashTable.1359" = type <{ %"struct.WTF::KeyValuePair.1362"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1362" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1366" = type { %"class.blink::MemberBase.1367" }
%"class.blink::MemberBase.1367" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1368" = type { %"class.blink::MemberBase.1369" }
%"class.blink::MemberBase.1369" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1370" = type { %"class.blink::MemberBase.1371" }
%"class.blink::MemberBase.1371" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1372" = type { %"class.blink::MemberBase.1373" }
%"class.blink::MemberBase.1373" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1374" = type { %"class.WTF::VectorBuffer.1375" }
%"class.WTF::VectorBuffer.1375" = type { %"class.WTF::VectorBufferBase.1376" }
%"class.WTF::VectorBufferBase.1376" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1379" = type { %"class.WTF::HashMap.1382" }
%"class.WTF::HashMap.1382" = type { %"class.WTF::HashTable.1383" }
%"class.WTF::HashTable.1383" = type <{ %"struct.WTF::KeyValuePair.1385"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1385" = type opaque
%"class.blink::Member.1386" = type { %"class.blink::MemberBase.1387" }
%"class.blink::MemberBase.1387" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1388" = type { %"class.std::__1::__compressed_pair.1389" }
%"class.std::__1::__compressed_pair.1389" = type { %"struct.std::__1::__compressed_pair_elem.1390" }
%"struct.std::__1::__compressed_pair_elem.1390" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1398" = type { %"class.WTF::HashMap.1401" }
%"class.WTF::HashMap.1401" = type { %"class.WTF::HashTable.1402" }
%"class.WTF::HashTable.1402" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1405" }
%"class.blink::HeapHashSet.1405" = type { %"class.WTF::HashSet.1408" }
%"class.WTF::HashSet.1408" = type { %"class.WTF::HashTable.1409" }
%"class.WTF::HashTable.1409" = type <{ %"class.blink::WeakMember.1411"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1411" = type opaque
%"class.blink::Member.1412" = type { %"class.blink::MemberBase.1413" }
%"class.blink::MemberBase.1413" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1414" = type { %"class.blink::MemberBase.1415" }
%"class.blink::MemberBase.1415" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.325", %"class.blink::HeapHashSet.1421", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1428", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1421" = type { %"class.WTF::HashSet.1424" }
%"class.WTF::HashSet.1424" = type { %"class.WTF::HashTable.1425" }
%"class.WTF::HashTable.1425" = type <{ %"class.blink::Member.1427"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1427" = type opaque
%"class.blink::HeapTaskRunnerTimer.1428" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1429", { i64, i64 } }
%"class.blink::WeakMember.1429" = type { %"class.blink::MemberBase.1415" }
%"class.blink::WeakMember.1416" = type { %"class.blink::MemberBase.318" }
%"class.blink::Member.1417" = type { %"class.blink::MemberBase.1418" }
%"class.blink::MemberBase.1418" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.319" = type { %"class.blink::MemberBase.320" }
%"class.blink::Member.327" = type { %"class.blink::MemberBase.328" }
%"class.blink::MemberBase.328" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.331" }
%"class.blink::HeapHashMap.331" = type { %"class.WTF::HashMap.334" }
%"class.WTF::HashMap.334" = type { %"class.WTF::HashTable.335" }
%"class.WTF::HashTable.335" = type <{ %"struct.WTF::KeyValuePair.337"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.337" = type { %"class.WTF::AtomicString", %"class.blink::Member.338" }
%"class.blink::Member.338" = type { %"class.blink::MemberBase.339" }
%"class.blink::MemberBase.339" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.342", i32, %"class.blink::HeapVector.364" }
%"class.blink::Member.371" = type { %"class.blink::MemberBase.372" }
%"class.blink::MemberBase.372" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.373" = type { %"class.blink::MemberBase.374" }
%"class.blink::MemberBase.374" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.377" }
%"class.blink::Member.377" = type { %"class.blink::MemberBase.378" }
%"class.blink::MemberBase.378" = type { %"class.blink::HeapHashMap.379"* }
%"class.blink::HeapHashMap.379" = type opaque
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.382" = type { %"class.WTF::Vector.385" }
%"class.WTF::Vector.385" = type { %"class.WTF::VectorBuffer.386" }
%"class.WTF::VectorBuffer.386" = type { %"class.WTF::VectorBufferBase.387" }
%"class.WTF::VectorBufferBase.387" = type { %"class.blink::Member.388"*, i32, i32 }
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.442" = type { %class.scoped_refptr.443 }
%class.scoped_refptr.443 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.444", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.444" = type { %"class.base::RefCounted.445" }
%"class.base::RefCounted.445" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.446" = type { %class.scoped_refptr.447 }
%class.scoped_refptr.447 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.448", [4 x i8], %"class.blink::DataRef.450", %"class.blink::DataRef.516", %"class.blink::TransformOperations", %class.scoped_refptr.297, %"class.blink::Persistent.640", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.448" = type { %"class.base::RefCounted.449" }
%"class.base::RefCounted.449" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.450" = type { %class.scoped_refptr.451 }
%class.scoped_refptr.451 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.452", [4 x i8], %"class.blink::DataRef.454", %"class.blink::Persistent.492", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.452" = type { %"class.base::RefCounted.453" }
%"class.base::RefCounted.453" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.454" = type { %class.scoped_refptr.455 }
%class.scoped_refptr.455 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.456", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.474, %class.scoped_refptr.477, %class.scoped_refptr.480, %class.scoped_refptr.483, %class.scoped_refptr.484, %class.scoped_refptr.485, %"class.blink::Persistent.492", %"class.blink::Persistent.507", %"class.absl::optional.511", %"class.absl::optional.511", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.456" = type { %"class.base::RefCounted.457" }
%"class.base::RefCounted.457" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.458", %"class.std::__1::unique_ptr.463" }
%"class.WTF::Vector.458" = type { %"class.WTF::VectorBuffer.459" }
%"class.WTF::VectorBuffer.459" = type { %"class.WTF::VectorBufferBase.460" }
%"class.WTF::VectorBufferBase.460" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.466", %"class.WTF::Vector.458", i32, i32 }
%"class.WTF::Vector.466" = type { %"class.WTF::VectorBuffer.467" }
%"class.WTF::VectorBuffer.467" = type { %"class.WTF::VectorBufferBase.468" }
%"class.WTF::VectorBufferBase.468" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.474 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.475", [4 x i8] }>
%"class.WTF::RefCounted.475" = type { %"class.base::RefCounted.476" }
%"class.base::RefCounted.476" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.477 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.478", [4 x i8] }>
%"class.WTF::RefCounted.478" = type { %"class.base::RefCounted.479" }
%"class.base::RefCounted.479" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.480 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.481" }>
%"class.WTF::RefCounted.481" = type { %"class.base::RefCounted.482" }
%"class.base::RefCounted.482" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.483 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.484 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.486", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.486" = type { %"class.base::RefCounted.487" }
%"class.base::RefCounted.487" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.488" }
%"class.blink::DataRef.488" = type { %class.scoped_refptr.489 }
%class.scoped_refptr.489 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.305", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.490" }
%"class.WTF::RefCounted.490" = type { %"class.base::RefCounted.491" }
%"class.base::RefCounted.491" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.507" = type { %"class.blink::PersistentBase.508" }
%"class.blink::PersistentBase.508" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.268" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.477, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.511" = type { %"class.absl::optional_internal::optional_data.512" }
%"class.absl::optional_internal::optional_data.512" = type { %"class.absl::optional_internal::optional_data_base.513" }
%"class.absl::optional_internal::optional_data_base.513" = type { %"class.absl::optional_internal::optional_data_dtor_base.514" }
%"class.absl::optional_internal::optional_data_dtor_base.514" = type { i8, [3 x i8], %union.anon.515 }
%union.anon.515 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.492" = type { %"class.blink::PersistentBase.493" }
%"class.blink::PersistentBase.493" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.268" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.496" }
%"class.blink::HeapVector.496" = type { %"class.WTF::Vector.499" }
%"class.WTF::Vector.499" = type { %"class.WTF::VectorBuffer.500" }
%"class.WTF::VectorBuffer.500" = type { %"class.WTF::VectorBufferBase.501" }
%"class.WTF::VectorBufferBase.501" = type { %"class.blink::Member.502"*, i32, i32 }
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.516" = type { %class.scoped_refptr.517 }
%class.scoped_refptr.517 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.518", %"class.blink::DataRef.520", %"class.blink::DataRef.524", %"class.blink::DataRef.533", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.552", %"class.std::__1::unique_ptr.563", %"class.std::__1::unique_ptr.601", %"class.std::__1::unique_ptr.612", %"class.std::__1::unique_ptr.623", %"class.WTF::Vector.629", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.518" = type { %"class.base::RefCounted.519" }
%"class.base::RefCounted.519" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.520" = type { %class.scoped_refptr.521 }
%class.scoped_refptr.521 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.522", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.522" = type { %"class.base::RefCounted.523" }
%"class.base::RefCounted.523" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.524" = type { %class.scoped_refptr.525 }
%class.scoped_refptr.525 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.526", [4 x i8], %"class.WTF::Vector.528", i8, [7 x i8] }>
%"class.WTF::RefCounted.526" = type { %"class.base::RefCounted.527" }
%"class.base::RefCounted.527" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.528" = type { %"class.WTF::VectorBuffer.529" }
%"class.WTF::VectorBuffer.529" = type { %"class.WTF::VectorBufferBase.530" }
%"class.WTF::VectorBufferBase.530" = type { i32*, i32, i32 }
%"class.blink::DataRef.533" = type { %class.scoped_refptr.534 }
%class.scoped_refptr.534 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.535", [4 x i8], %"class.WTF::HashMap.537", %"class.WTF::HashMap.537", %"class.WTF::HashMap.537", %"class.WTF::HashMap.537", %"class.WTF::HashMap.537", %"class.WTF::HashMap.537", %"class.WTF::HashMap.542", %"class.WTF::HashMap.542", %"class.WTF::HashMap.542", %"class.WTF::HashMap.542", %"class.WTF::HashMap.547", %"class.WTF::Vector.458", %"class.WTF::Vector.458", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.535" = type { %"class.base::RefCounted.536" }
%"class.base::RefCounted.536" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.537" = type { %"class.WTF::HashTable.538" }
%"class.WTF::HashTable.538" = type <{ %"struct.WTF::KeyValuePair.541"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.541" = type { %"class.WTF::String", %"class.WTF::Vector.3244" }
%"class.WTF::Vector.3244" = type { %"class.WTF::VectorBuffer.3245" }
%"class.WTF::VectorBuffer.3245" = type { %"class.WTF::VectorBufferBase.3246" }
%"class.WTF::VectorBufferBase.3246" = type { i64*, i32, i32 }
%"class.WTF::HashMap.542" = type { %"class.WTF::HashTable.543" }
%"class.WTF::HashTable.543" = type <{ %"struct.WTF::KeyValuePair.546"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.546" = type { i64, %"class.WTF::Vector.629" }
%"class.WTF::HashMap.547" = type { %"class.WTF::HashTable.548" }
%"class.WTF::HashTable.548" = type <{ %"struct.WTF::KeyValuePair.551"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.551" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.552" = type { %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.555" }
%"class.WTF::HashMap.555" = type { %"class.WTF::HashTable.556" }
%"class.WTF::HashTable.556" = type <{ %"struct.WTF::KeyValuePair.559"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.559" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.3249", %"class.absl::optional.3249", %"class.absl::optional.3249" }
%"class.absl::optional.3249" = type { %"class.absl::optional_internal::optional_data.3250" }
%"class.absl::optional_internal::optional_data.3250" = type { %"class.absl::optional_internal::optional_data_base.3251" }
%"class.absl::optional_internal::optional_data_base.3251" = type { %"class.absl::optional_internal::optional_data_dtor_base.3252" }
%"class.absl::optional_internal::optional_data_dtor_base.3252" = type { i8, %union.anon.3253 }
%union.anon.3253 = type { i32 }
%"class.std::__1::unique_ptr.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.283", %"class.WTF::Vector.578", %"class.WTF::Vector.566", %"class.WTF::Vector.583", %"class.WTF::Vector.588", %"class.WTF::Vector.593" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.566", %"class.WTF::Vector.566", %"class.WTF::Vector.571" }
%"class.WTF::Vector.571" = type { %"class.WTF::VectorBuffer.572" }
%"class.WTF::VectorBuffer.572" = type { %"class.WTF::VectorBufferBase.573" }
%"class.WTF::VectorBufferBase.573" = type { %class.scoped_refptr.574*, i32, i32 }
%class.scoped_refptr.574 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.575" }
%"class.base::RefCountedThreadSafe.575" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.578" = type { %"class.WTF::VectorBuffer.579" }
%"class.WTF::VectorBuffer.579" = type { %"class.WTF::VectorBufferBase.580" }
%"class.WTF::VectorBufferBase.580" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.566" = type { %"class.WTF::VectorBuffer.567" }
%"class.WTF::VectorBuffer.567" = type { %"class.WTF::VectorBufferBase.568" }
%"class.WTF::VectorBufferBase.568" = type { double*, i32, i32 }
%"class.WTF::Vector.583" = type { %"class.WTF::VectorBuffer.584" }
%"class.WTF::VectorBuffer.584" = type { %"class.WTF::VectorBufferBase.585" }
%"class.WTF::VectorBufferBase.585" = type { i32*, i32, i32 }
%"class.WTF::Vector.588" = type { %"class.WTF::VectorBuffer.589" }
%"class.WTF::VectorBuffer.589" = type { %"class.WTF::VectorBufferBase.590" }
%"class.WTF::VectorBufferBase.590" = type { i32*, i32, i32 }
%"class.WTF::Vector.593" = type { %"class.WTF::VectorBuffer.594" }
%"class.WTF::VectorBuffer.594" = type { %"class.WTF::VectorBufferBase.595" }
%"class.WTF::VectorBufferBase.595" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.601" = type { %"class.std::__1::__compressed_pair.602" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"struct.std::__1::__compressed_pair_elem.603" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.604" }
%"class.WTF::Vector.604" = type { %"class.WTF::VectorBuffer.605" }
%"class.WTF::VectorBuffer.605" = type { %"class.WTF::VectorBufferBase.606" }
%"class.WTF::VectorBufferBase.606" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.612" = type { %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.614" }
%"struct.std::__1::__compressed_pair_elem.614" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.615" }
%"class.WTF::Vector.615" = type { %"class.WTF::VectorBuffer.616" }
%"class.WTF::VectorBuffer.616" = type { %"class.WTF::VectorBufferBase.617" }
%"class.WTF::VectorBufferBase.617" = type { %"class.blink::Persistent.305"*, i32, i32 }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.305", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.634" }
%"class.WTF::Vector.634" = type { %"class.WTF::VectorBuffer.635" }
%"class.WTF::VectorBuffer.635" = type { %"class.WTF::VectorBufferBase.636" }
%"class.WTF::VectorBufferBase.636" = type { %class.scoped_refptr.637*, i32, i32 }
%class.scoped_refptr.637 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.481", [4 x i8] }>
%"class.blink::Persistent.640" = type { %"class.blink::PersistentBase.641" }
%"class.blink::PersistentBase.641" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.268" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.644" }
%"class.blink::Member.644" = type { %"class.blink::MemberBase.645" }
%"class.blink::MemberBase.645" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.646" = type { %class.scoped_refptr.647 }
%class.scoped_refptr.647 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.648", [4 x i8], %"class.blink::DataRef.650", %"class.blink::DataRef.654", %"class.blink::DataRef.675", %"class.blink::DataRef.693", %"class.blink::DataRef.705", %"class.blink::DataRef.709", %class.scoped_refptr.679, i32, [4 x i8] }>
%"class.WTF::RefCounted.648" = type { %"class.base::RefCounted.649" }
%"class.base::RefCounted.649" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.650" = type { %class.scoped_refptr.651 }
%class.scoped_refptr.651 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.652", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.652" = type { %"class.base::RefCounted.653" }
%"class.base::RefCounted.653" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.654" = type { %class.scoped_refptr.655 }
%class.scoped_refptr.655 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.656", %class.scoped_refptr.658, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.656" = type { %"class.base::RefCounted.657" }
%"class.base::RefCounted.657" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.658 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.659", %"class.std::__1::unique_ptr.665", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.478" }>
%"class.std::__1::unique_ptr.659" = type { %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.661" }
%"struct.std::__1::__compressed_pair_elem.661" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.667" }
%"struct.std::__1::__compressed_pair_elem.667" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.668, i32, %"struct.std::__1::atomic.45", %"struct.std::__1::atomic.45", i8, i8 }>
%class.sk_sp.668 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.669, %class.SkTDArray.670, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.40" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.669 = type { i8*, i32, i32 }
%class.SkTDArray.670 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.671 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.40", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.671 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.237", [3 x i8] }
%"class.blink::DataRef.675" = type { %class.scoped_refptr.676 }
%class.scoped_refptr.676 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.677", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.677" = type { %"class.base::RefCounted.678" }
%"class.base::RefCounted.678" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.679, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.693" = type { %class.scoped_refptr.694 }
%class.scoped_refptr.694 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.695", [4 x i8], %class.scoped_refptr.697, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.695" = type { %"class.base::RefCounted.696" }
%"class.base::RefCounted.696" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.697 = type { %"class.base::RefCountedData.698"* }
%"class.base::RefCountedData.698" = type { %"class.base::RefCountedThreadSafe.699", %"class.WTF::Vector.700" }
%"class.base::RefCountedThreadSafe.699" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.705" = type { %class.scoped_refptr.706 }
%class.scoped_refptr.706 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.707", %class.scoped_refptr.679, %class.scoped_refptr.679, %class.scoped_refptr.679 }
%"class.WTF::RefCounted.707" = type { %"class.base::RefCounted.708" }
%"class.base::RefCounted.708" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.709" = type { %class.scoped_refptr.710 }
%class.scoped_refptr.710 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.711", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.711" = type { %"class.base::RefCounted.712" }
%"class.base::RefCounted.712" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.679 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.680", %"class.blink::Persistent.682", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.680" = type { %"class.base::RefCounted.681" }
%"class.base::RefCounted.681" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.682" = type { %"class.blink::PersistentBase.683" }
%"class.blink::PersistentBase.683" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.268" }
%"class.blink::DataRef.713" = type { %class.scoped_refptr.714 }
%class.scoped_refptr.714 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.715", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.715" = type { %"class.base::RefCounted.716" }
%"class.base::RefCounted.716" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.717" = type { %class.scoped_refptr.718 }
%class.scoped_refptr.718 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.719", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.719" = type { %"class.base::RefCounted.720" }
%"class.base::RefCounted.720" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.721" = type { %class.scoped_refptr.722 }
%class.scoped_refptr.722 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.723", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.723" = type { %"class.base::RefCounted.724" }
%"class.base::RefCounted.724" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.725" = type { %class.scoped_refptr.726 }
%class.scoped_refptr.726 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.727", %class.scoped_refptr.729 }
%"class.WTF::RefCounted.727" = type { %"class.base::RefCounted.728" }
%"class.base::RefCounted.728" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.729 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.784", %"class.blink::StyleVariables", %class.scoped_refptr.729 }
%"class.WTF::RefCounted.784" = type { %"class.base::RefCounted.785" }
%"class.base::RefCounted.785" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.730" = type { %"class.base::RefCounted.731" }
%"class.base::RefCounted.731" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.732" = type { %"class.std::__1::__compressed_pair.733" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.735" }
%"class.std::__1::unique_ptr.735" = type { %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.WTF::Vector.738"* }
%"class.WTF::Vector.738" = type { %"class.WTF::VectorBuffer.3264" }
%"class.WTF::VectorBuffer.3264" = type { %"class.WTF::VectorBufferBase.3265", [32 x i8] }
%"class.WTF::VectorBufferBase.3265" = type { %class.scoped_refptr.941*, i32, i32 }
%"class.blink::CustomScrollbar" = type <{ %"class.blink::Scrollbar", %"class.WTF::HashMap.769", i8, [7 x i8] }>
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.747", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.342" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.747" = type { %"class.blink::MemberBase.748" }
%"class.blink::MemberBase.748" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.749", %"class.blink::Member.751", %"class.blink::Member.753", %"class.blink::Member.755", %"class.WTF::Vector.757", i16, %class.scoped_refptr.764 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.749" = type { %"class.blink::MemberBase.750" }
%"class.blink::MemberBase.750" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.751" = type { %"class.blink::MemberBase.752" }
%"class.blink::MemberBase.752" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.753" = type { %"class.blink::MemberBase.754" }
%"class.blink::MemberBase.754" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.755" = type { %"class.blink::MemberBase.756" }
%"class.blink::MemberBase.756" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.767", { i64, i64 } }
%"class.blink::WeakMember.767" = type { %"class.blink::MemberBase.768" }
%"class.blink::MemberBase.768" = type { %"class.blink::Scrollbar"* }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.WTF::HashMap.769" = type { %"class.WTF::HashTable.770" }
%"class.WTF::HashTable.770" = type <{ %"struct.WTF::KeyValuePair.773"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.773" = type { i32, %"class.blink::LayoutCustomScrollbarPart"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::PartNames" = type { %"class.WTF::HashSet.424", %"class.WTF::Vector.774" }
%"class.WTF::Vector.774" = type { %"class.WTF::VectorBuffer.775" }
%"class.WTF::VectorBuffer.775" = type { %"class.WTF::VectorBufferBase.776" }
%"class.WTF::VectorBufferBase.776" = type { %"class.blink::NamesMap"**, i32, i32 }
%"class.blink::NamesMap" = type { %"class.WTF::HashMap.777" }
%"class.WTF::HashMap.777" = type { %"class.WTF::HashTable.778" }
%"class.WTF::HashTable.778" = type <{ %"struct.WTF::KeyValuePair.781"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.781" = type { %"class.WTF::AtomicString", %"class.absl::optional.3223" }
%"class.absl::optional.3223" = type { %"class.absl::optional_internal::optional_data.3224" }
%"class.absl::optional_internal::optional_data.3224" = type { %"class.absl::optional_internal::optional_data_base.3225" }
%"class.absl::optional_internal::optional_data_base.3225" = type { %"class.absl::optional_internal::optional_data_dtor_base.3226" }
%"class.absl::optional_internal::optional_data_dtor_base.3226" = type { i8, %union.anon.3227 }
%union.anon.3227 = type { %"class.blink::SpaceSplitString" }
%"struct.blink::SelectorChecker::SelectorCheckingContext" = type <{ %"class.blink::CSSSelector"*, %"class.blink::Element"*, %"class.blink::Element"*, %"class.blink::ContainerNode"*, i8, i8, i8, i8, i8, i8, [2 x i8], %"class.blink::Element"*, i8, i8, [6 x i8] }>
%"struct.blink::SelectorChecker::MatchResult" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"struct.blink::CSSSelector::RareData" = type { %"class.WTF::RefCounted.1016", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %union.anon.1018, %"class.blink::QualifiedName", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1020", %"class.std::__1::unique_ptr.1026" }
%"class.WTF::RefCounted.1016" = type { %"class.base::RefCounted.1017" }
%"class.base::RefCounted.1017" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.1018 = type { %struct.anon.1019 }
%struct.anon.1019 = type { i32, i32 }
%"class.std::__1::unique_ptr.1020" = type { %"class.std::__1::__compressed_pair.1021" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.1022" }
%"struct.std::__1::__compressed_pair_elem.1022" = type { %"class.blink::CSSSelectorList"* }
%"class.std::__1::unique_ptr.1026" = type { %"class.std::__1::__compressed_pair.1027" }
%"class.std::__1::__compressed_pair.1027" = type { %"struct.std::__1::__compressed_pair_elem.1028" }
%"struct.std::__1::__compressed_pair_elem.1028" = type { %"class.WTF::Vector.283"* }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.353", %"class.WTF::Vector.3330" }
%"class.WTF::Vector.3330" = type { %"class.WTF::VectorBuffer.3331" }
%"class.WTF::VectorBuffer.3331" = type { %"class.WTF::VectorBufferBase.3332", [64 x i8] }
%"class.WTF::VectorBufferBase.3332" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1233", %"class.blink::Member.2085", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.2085" = type { %"class.blink::MemberBase.2086" }
%"class.blink::MemberBase.2086" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::HTMLSlotElement" = type { %"class.blink::HTMLElement", %"class.blink::HeapVector.1845", %"class.blink::HeapVector.1845", i8, %"class.blink::HeapLinkedHashSet.1852" }
%"class.blink::HeapVector.1845" = type { %"class.WTF::Vector.1848" }
%"class.WTF::Vector.1848" = type { %"class.WTF::VectorBuffer.1849" }
%"class.WTF::VectorBuffer.1849" = type { %"class.WTF::VectorBufferBase.1850" }
%"class.WTF::VectorBufferBase.1850" = type { %"class.blink::Member.317"*, i32, i32 }
%"class.blink::HeapLinkedHashSet.1852" = type { %"class.WTF::LinkedHashSet.1855" }
%"class.WTF::LinkedHashSet.1855" = type { %"class.WTF::HashMap.1856", %"class.WTF::VectorBackedLinkedList.1860" }
%"class.WTF::HashMap.1856" = type { %"class.WTF::HashTable.1857" }
%"class.WTF::HashTable.1857" = type <{ %"struct.WTF::KeyValuePair.1859"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1859" = type opaque
%"class.WTF::VectorBackedLinkedList.1860" = type { %"class.WTF::Vector.1861", i32, i32 }
%"class.WTF::Vector.1861" = type { %"class.WTF::VectorBuffer.1862" }
%"class.WTF::VectorBuffer.1862" = type { %"class.WTF::VectorBufferBase.1863" }
%"class.WTF::VectorBufferBase.1863" = type { %"class.WTF::VectorBackedLinkedListNode.1864"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1864" = type opaque
%"class.blink::HasTagName" = type { %"class.blink::QualifiedName" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.1866 }
%class.scoped_refptr.1866 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.1867", %"class.WTF::String", %"class.std::__1::unique_ptr.1869" }
%"class.WTF::RefCounted.1867" = type { %"class.base::RefCounted.1868" }
%"class.base::RefCounted.1868" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1869" = type { %"class.std::__1::__compressed_pair.1870" }
%"class.std::__1::__compressed_pair.1870" = type { %"struct.std::__1::__compressed_pair_elem.1871" }
%"struct.std::__1::__compressed_pair_elem.1871" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.1872", %"class.std::__1::unique_ptr.1883", %"class.WTF::Vector.1889", i8, i32 }
%"class.std::__1::unique_ptr.1872" = type { %"class.std::__1::__compressed_pair.1873" }
%"class.std::__1::__compressed_pair.1873" = type { %"struct.std::__1::__compressed_pair_elem.1874" }
%"struct.std::__1::__compressed_pair_elem.1874" = type { %"class.WTF::Vector.1875"* }
%"class.WTF::Vector.1875" = type { %"class.WTF::VectorBuffer.1876" }
%"class.WTF::VectorBuffer.1876" = type { %"class.WTF::VectorBufferBase.1877" }
%"class.WTF::VectorBufferBase.1877" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.1883" = type { %"class.std::__1::__compressed_pair.1884" }
%"class.std::__1::__compressed_pair.1884" = type { %"struct.std::__1::__compressed_pair_elem.1885" }
%"struct.std::__1::__compressed_pair_elem.1885" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.1889" = type { %"class.WTF::VectorBuffer.1890" }
%"class.WTF::VectorBuffer.1890" = type { %"class.WTF::VectorBufferBase.1877", [32 x i8] }
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.1902", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.1896", %"class.blink::Member.1898", %"class.blink::Member.1900", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.1896" = type { %"class.blink::MemberBase.1897" }
%"class.blink::MemberBase.1897" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.1898" = type { %"class.blink::MemberBase.1899" }
%"class.blink::MemberBase.1899" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.1900" = type { %"class.blink::MemberBase.1901" }
%"class.blink::MemberBase.1901" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr.4 }
%"class.blink::Member.1902" = type { %"class.blink::MemberBase.1903" }
%"class.blink::MemberBase.1903" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.243", %"class.blink::DataRef.442", %"class.blink::DataRef.446", %"class.blink::DataRef.646", %"class.blink::DataRef.713", %"class.blink::DataRef.717", %"class.blink::DataRef.721", %"class.blink::DataRef.725", [20 x i8], [4 x i8] }>
%"class.blink::HTMLInputElement" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable.1904", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.1905", %"class.blink::Member.1907", %"class.blink::Member.1909", %"class.blink::Member.1965", i32, [4 x i8] }>
%"class.blink::ActiveScriptWrappable.1904" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Member.1905" = type { %"class.blink::MemberBase.1906" }
%"class.blink::MemberBase.1906" = type { %"class.blink::InputType"* }
%"class.blink::InputType" = type opaque
%"class.blink::Member.1907" = type { %"class.blink::MemberBase.1908" }
%"class.blink::MemberBase.1908" = type { %"class.blink::InputTypeView"* }
%"class.blink::InputTypeView" = type opaque
%"class.blink::Member.1909" = type { %"class.blink::MemberBase.1910" }
%"class.blink::MemberBase.1910" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type { %"class.blink::ImageLoader" }
%"class.blink::ImageLoader" = type { %"class.blink::ImageResourceObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1913", %"class.blink::Member.342", %"class.blink::Member.1914", %"class.blink::Member.1914", %"class.WTF::String", i32, %"class.WTF::AtomicString", %"class.base::WeakPtr.1950", %"class.std::__1::unique_ptr.1951", %"class.std::__1::unique_ptr.1951", %"class.blink::TaskHandle", %"class.blink::TaskHandle", i8, i32, %"class.blink::HeapVector.1957" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration.1913" = type { i8 }
%"class.blink::Member.1914" = type { %"class.blink::MemberBase.1915" }
%"class.blink::MemberBase.1915" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.1918", float, i8, %class.scoped_refptr.1920, %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1918" = type { %"class.blink::MemberBase.1919" }
%"class.blink::MemberBase.1919" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.1920 = type { %"class.blink::Image"* }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1921", i8, %class.scoped_refptr.1923, %"class.blink::WeakPersistent.1937", i32, i8, %"class.std::__1::unique_ptr.1939" }
%"class.WTF::ThreadSafeRefCounted.1921" = type { %"class.base::RefCountedThreadSafe.1922" }
%"class.base::RefCountedThreadSafe.1922" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.1923 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1924", i64, %"class.WTF::Vector.1926", %"class.WTF::Vector.1931" }
%"class.WTF::RefCounted.1924" = type { %"class.base::RefCounted.1925" }
%"class.base::RefCounted.1925" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1926" = type { %"class.WTF::VectorBuffer.1927" }
%"class.WTF::VectorBuffer.1927" = type { %"class.WTF::VectorBufferBase.1928" }
%"class.WTF::VectorBufferBase.1928" = type { i8*, i32, i32 }
%"class.WTF::Vector.1931" = type { %"class.WTF::VectorBuffer.1932" }
%"class.WTF::VectorBuffer.1932" = type { %"class.WTF::VectorBufferBase.1933" }
%"class.WTF::VectorBufferBase.1933" = type { %"class.std::__1::unique_ptr.1934"*, i32, i32 }
%"class.std::__1::unique_ptr.1934" = type opaque
%"class.blink::WeakPersistent.1937" = type { %"class.blink::PersistentBase.1938" }
%"class.blink::PersistentBase.1938" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.std::__1::unique_ptr.1939" = type { %"class.std::__1::__compressed_pair.1940" }
%"class.std::__1::__compressed_pair.1940" = type { %"struct.std::__1::__compressed_pair_elem.1941" }
%"struct.std::__1::__compressed_pair_elem.1941" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1945" }
%"class.WTF::HashMap.1945" = type { %"class.WTF::HashTable.1946" }
%"class.WTF::HashTable.1946" = type <{ %"struct.WTF::KeyValuePair.1949"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1949" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.base::WeakPtr.1950" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.1951" = type { %"class.std::__1::__compressed_pair.1952" }
%"class.std::__1::__compressed_pair.1952" = type { %"struct.std::__1::__compressed_pair_elem.1953" }
%"struct.std::__1::__compressed_pair_elem.1953" = type { %"class.blink::IncrementLoadEventDelayCount"* }
%"class.blink::IncrementLoadEventDelayCount" = type opaque
%"class.blink::HeapVector.1957" = type { %"class.WTF::Vector.1960" }
%"class.WTF::Vector.1960" = type { %"class.WTF::VectorBuffer.1961" }
%"class.WTF::VectorBuffer.1961" = type { %"class.WTF::VectorBufferBase.1962" }
%"class.WTF::VectorBufferBase.1962" = type { %"class.blink::Member.1963"*, i32, i32 }
%"class.blink::Member.1963" = type opaque
%"class.blink::Member.1965" = type { %"class.blink::MemberBase.1966" }
%"class.blink::MemberBase.1966" = type { %"class.blink::ListAttributeTargetObserver"* }
%"class.blink::ListAttributeTargetObserver" = type opaque
%"class.blink::HTMLOptionElement" = type <{ %"class.blink::HTMLElement", %"class.blink::Member.1967", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::Member.1967" = type { %"class.blink::MemberBase.1968" }
%"class.blink::MemberBase.1968" = type { %"class.blink::OptionTextObserver"* }
%"class.blink::OptionTextObserver" = type opaque
%"class.blink::HTMLPopupElement" = type { %"class.blink::HTMLElement", i8, i8, i8, %"class.blink::WeakMember.1969", %"class.blink::Member.1970", i8, %"class.blink::WeakMember.1972" }
%"class.blink::WeakMember.1969" = type { %"class.blink::MemberBase.343" }
%"class.blink::Member.1970" = type { %"class.blink::MemberBase.1971" }
%"class.blink::MemberBase.1971" = type { %"class.blink::ResizeObserver"* }
%"class.blink::ResizeObserver" = type opaque
%"class.blink::WeakMember.1972" = type { %"class.blink::MemberBase.1973" }
%"class.blink::MemberBase.1973" = type { %"class.blink::HTMLSelectMenuElement"* }
%"class.blink::HTMLSelectMenuElement" = type opaque
%"class.blink::HTMLVideoElement" = type { %"class.blink::HTMLMediaElement", %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", %"class.blink::Supplementable.1974", %"class.blink::Member.1909", %"class.blink::Member.1982", %"class.blink::Member.1984", %"class.blink::Member.1986", %"class.blink::Member.1988", %"class.WTF::AtomicString", i8, %"class.std::__1::unique_ptr.1990" }
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%"class.blink::Supplementable.1974" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1975" }
%"class.blink::HeapHashMap.1975" = type { %"class.WTF::HashMap.1978" }
%"class.WTF::HashMap.1978" = type { %"class.WTF::HashTable.1979" }
%"class.WTF::HashTable.1979" = type <{ %"struct.WTF::KeyValuePair.1981"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1981" = type opaque
%"class.blink::Member.1982" = type { %"class.blink::MemberBase.1983" }
%"class.blink::MemberBase.1983" = type { %"class.blink::MediaCustomControlsFullscreenDetector"* }
%"class.blink::MediaCustomControlsFullscreenDetector" = type opaque
%"class.blink::Member.1984" = type { %"class.blink::MemberBase.1985" }
%"class.blink::MemberBase.1985" = type { %"class.blink::VideoWakeLock"* }
%"class.blink::VideoWakeLock" = type opaque
%"class.blink::Member.1986" = type { %"class.blink::MemberBase.1987" }
%"class.blink::MemberBase.1987" = type { %"class.blink::MediaRemotingInterstitial"* }
%"class.blink::MediaRemotingInterstitial" = type opaque
%"class.blink::Member.1988" = type { %"class.blink::MemberBase.1989" }
%"class.blink::MemberBase.1989" = type { %"class.blink::PictureInPictureInterstitial"* }
%"class.blink::PictureInPictureInterstitial" = type opaque
%"class.std::__1::unique_ptr.1990" = type { %"class.std::__1::__compressed_pair.1991" }
%"class.std::__1::__compressed_pair.1991" = type { %"struct.std::__1::__compressed_pair_elem.1992" }
%"struct.std::__1::__compressed_pair_elem.1992" = type { %"class.blink::CanvasResourceProvider"* }
%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp.1994, i32, %"class.base::WeakPtr.1995", %"class.base::WeakPtr.1996", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr.1997", %"class.std::__1::unique_ptr.2003", %"class.std::__1::unique_ptr.2033", i8, i32, i32, i32, %"class.WTF::Vector.2051", i8, i8, i64, i64, %"class.base::RepeatingCallback.2057", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.2081" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.1993" }
%"class.base::WeakPtrFactory.1993" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp.1994 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%"class.base::WeakPtr.1995" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.1996" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1997" = type { %"class.std::__1::__compressed_pair.1998" }
%"class.std::__1::__compressed_pair.1998" = type { %"struct.std::__1::__compressed_pair_elem.1999" }
%"struct.std::__1::__compressed_pair_elem.1999" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.2003" = type { %"class.std::__1::__compressed_pair.2004" }
%"class.std::__1::__compressed_pair.2004" = type { %"struct.std::__1::__compressed_pair_elem.2005" }
%"struct.std::__1::__compressed_pair_elem.2005" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.2024", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.2006, [384 x i64], %class.sk_sp.2007, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.2008", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.2014" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.2006 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.2007 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.2008" = type { %"class.std::__1::__compressed_pair.2009" }
%"class.std::__1::__compressed_pair.2009" = type { %"struct.std::__1::__compressed_pair_elem.2010" }
%"struct.std::__1::__compressed_pair_elem.2010" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.2014" = type { %"class.std::__1::__compressed_pair.2015" }
%"class.std::__1::__compressed_pair.2015" = type { %"struct.std::__1::__compressed_pair_elem.2016" }
%"struct.std::__1::__compressed_pair_elem.2016" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBitmap = type { %class.sk_sp.2020, %class.SkPixmap, %class.sk_sp.2023 }
%class.sk_sp.2020 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.2021, i32, i32 }
%class.sk_sp.2021 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.2022, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.2022 = type { %"struct.std::__1::atomic.40" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.2023 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.2024" = type { %"class.std::__1::__compressed_pair.2025" }
%"class.std::__1::__compressed_pair.2025" = type { %"struct.std::__1::__compressed_pair_elem.2026" }
%"struct.std::__1::__compressed_pair_elem.2026" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.2033" = type { %"class.std::__1::__compressed_pair.2034" }
%"class.std::__1::__compressed_pair.2034" = type { %"struct.std::__1::__compressed_pair_elem.2035" }
%"struct.std::__1::__compressed_pair_elem.2035" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.2036, %"class.std::__1::unique_ptr.2037" }
%class.scoped_refptr.2036 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.2037" = type { %"class.std::__1::__compressed_pair.2038" }
%"class.std::__1::__compressed_pair.2038" = type { %"struct.std::__1::__compressed_pair_elem.2039" }
%"struct.std::__1::__compressed_pair_elem.2039" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.2040", %struct.SkRect }
%"class.absl::optional.2040" = type { %"class.absl::optional_internal::optional_data.2041" }
%"class.absl::optional_internal::optional_data.2041" = type { %"class.absl::optional_internal::optional_data_base.2042" }
%"class.absl::optional_internal::optional_data_base.2042" = type { %"class.absl::optional_internal::optional_data_dtor_base.2043" }
%"class.absl::optional_internal::optional_data_dtor_base.2043" = type { i8, %union.anon.2044 }
%union.anon.2044 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.WTF::Vector.2051" = type { %"class.WTF::VectorBuffer.2052" }
%"class.WTF::VectorBuffer.2052" = type { %"class.WTF::VectorBufferBase.2053" }
%"class.WTF::VectorBufferBase.2053" = type { %class.scoped_refptr.2054*, i32, i32 }
%class.scoped_refptr.2054 = type opaque
%"class.base::RepeatingCallback.2057" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map.2062", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2058" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2058" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"class.std::__1::map.2062" = type { %"class.std::__1::__tree.2063" }
%"class.std::__1::__tree.2063" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2064", %"class.std::__1::__compressed_pair.2068" }
%"class.std::__1::__compressed_pair.2064" = type { %"struct.std::__1::__compressed_pair_elem.1647" }
%"class.std::__1::__compressed_pair.2068" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.2075" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector.2075" = type { %"class.std::__1::__vector_base.2076" }
%"class.std::__1::__vector_base.2076" = type { %"struct.std::__1::pair.2077"*, %"struct.std::__1::pair.2077"*, %"class.std::__1::__compressed_pair.2078" }
%"struct.std::__1::pair.2077" = type { i32, i32 }
%"class.std::__1::__compressed_pair.2078" = type { %"struct.std::__1::__compressed_pair_elem.2079", %"struct.std::__1::__compressed_pair_elem.2080" }
%"struct.std::__1::__compressed_pair_elem.2079" = type { %"struct.std::__1::pair.2077"* }
%"struct.std::__1::__compressed_pair_elem.2080" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.2021, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.2081" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2379", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2387", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2401", %"class.blink::FrameLoader", %"class.blink::Member.2422", %"class.blink::Member.342", %"class.blink::Member.2424", %"class.blink::Member.2426", %"class.blink::Member.2442", %"class.blink::Member.2444", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2446", %class.scoped_refptr.2670, %"class.blink::Member.2671", %"class.blink::Member.2673", %"class.blink::Member.2684", %"class.blink::Member.2686", %"class.blink::Member.2688", %"class.blink::Member.2692", %"class.blink::Member.2694", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2698", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2704", %"class.std::__1::unique_ptr.2705", %"class.absl::optional.2367", i32, [4 x i8], %"class.std::__1::unique_ptr.2711", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2719", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2724", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2729", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2732", %"class.blink::Member.2734", %"class.blink::Member.2736", %"class.blink::Member.2738", %"class.mojo::StructPtr.2741", %"class.blink::Member.2750", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2752", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2121", %"class.blink::Member.2232", %"class.blink::Member.2234", i8, i32, i8, i32, %"class.blink::Member.2348", %"class.blink::Member.2236", %"class.blink::FrameLifecycle", %"class.blink::Member.2115", %"class.blink::Member.2115", %"class.blink::Member.2115", %"class.blink::Member.2115", %"class.blink::Member.2115", %"class.blink::Member.2115", %"class.blink::Member.2350", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2360", i8, %"class.base::UnguessableToken", %"class.absl::optional.2362", %"class.absl::optional.2367", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.2115", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2121" = type { %"class.blink::MemberBase.2122" }
%"class.blink::MemberBase.2122" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.2089", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.2115", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2117", %"class.blink::Member.2123", %"class.blink::Member.2125", %"class.blink::Member.2129", %"class.blink::Member.2131", %"class.blink::Member.2133", %"class.blink::Member.2144", %"class.blink::Member.2146", %"class.blink::HeapObserverSet.2148", %"class.blink::Member.2156", %"class.blink::Member.2158", %"class.blink::Member.2160", %"class.blink::Member.2162", %"class.blink::Member.2164", %"class.blink::Member.2166", %"class.blink::Member.2168", %"class.blink::Member.2170", %"class.blink::Member.2172", %"class.blink::Member.2176", %"class.blink::Member.2178", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.2203", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.2210", %"class.blink::Member.2121", %"class.blink::Member.2121", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2218", %"class.std::__1::unique_ptr.2224", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.2089" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2090" }
%"class.blink::HeapHashMap.2090" = type { %"class.WTF::HashMap.2093" }
%"class.WTF::HashMap.2093" = type { %"class.WTF::HashTable.2094" }
%"class.WTF::HashTable.2094" = type <{ %"struct.WTF::KeyValuePair.2096"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2096" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2097" }
%"class.std::__1::unique_ptr.2097" = type { %"class.std::__1::__compressed_pair.2098" }
%"class.std::__1::__compressed_pair.2098" = type { %"struct.std::__1::__compressed_pair_elem.2099" }
%"struct.std::__1::__compressed_pair_elem.2099" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.2100", %"class.WTF::HashMap.2100", %"class.WTF::HashMap.2100", %"class.WTF::HashMap.2100", %"class.WTF::HashMap.2100", %"class.WTF::HashMap.2100", %"class.WTF::HashMap.2100", %"class.std::__1::unique_ptr.2105" }
%"class.WTF::HashMap.2100" = type { %"class.WTF::HashTable.2101" }
%"class.WTF::HashTable.2101" = type <{ %"struct.WTF::KeyValuePair.2104"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2104" = type opaque
%"class.std::__1::unique_ptr.2105" = type { %"class.std::__1::__compressed_pair.2106" }
%"class.std::__1::__compressed_pair.2106" = type { %"struct.std::__1::__compressed_pair_elem.2107" }
%"struct.std::__1::__compressed_pair_elem.2107" = type { %"class.WTF::Vector.2108"* }
%"class.WTF::Vector.2108" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2117" = type { %"class.blink::MemberBase.2118" }
%"class.blink::MemberBase.2118" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.2121", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.2123" = type { %"class.blink::MemberBase.2124" }
%"class.blink::MemberBase.2124" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2125" = type { %"class.blink::MemberBase.2126" }
%"class.blink::MemberBase.2126" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember.1416", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.2129" = type { %"class.blink::MemberBase.2130" }
%"class.blink::MemberBase.2130" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2131" = type { %"class.blink::MemberBase.2132" }
%"class.blink::MemberBase.2132" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2133" = type { %"class.blink::MemberBase.2134" }
%"class.blink::MemberBase.2134" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type { %"class.blink::Member.2121", %"class.blink::Member.2115", i8, i8, i8, i8, [4 x i8], %"class.blink::HeapHashSet.2137" }
%"class.blink::HeapHashSet.2137" = type { %"class.WTF::HashSet.2140" }
%"class.WTF::HashSet.2140" = type { %"class.WTF::HashTable.2141" }
%"class.WTF::HashTable.2141" = type <{ %"class.blink::WeakMember.2143"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2143" = type opaque
%"class.blink::Member.2144" = type { %"class.blink::MemberBase.2145" }
%"class.blink::MemberBase.2145" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2146" = type { %"class.blink::MemberBase.2147" }
%"class.blink::MemberBase.2147" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.2148" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2149" }
%"class.blink::HeapHashSet.2149" = type { %"class.WTF::HashSet.2152" }
%"class.WTF::HashSet.2152" = type { %"class.WTF::HashTable.2153" }
%"class.WTF::HashTable.2153" = type <{ %"class.blink::WeakMember.2155"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2155" = type opaque
%"class.blink::Member.2156" = type { %"class.blink::MemberBase.2157" }
%"class.blink::MemberBase.2157" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.2158" = type { %"class.blink::MemberBase.2159" }
%"class.blink::MemberBase.2159" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.2160" = type { %"class.blink::MemberBase.2161" }
%"class.blink::MemberBase.2161" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.2162" = type { %"class.blink::MemberBase.2163" }
%"class.blink::MemberBase.2163" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.2164" = type { %"class.blink::MemberBase.2165" }
%"class.blink::MemberBase.2165" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.2166" = type { %"class.blink::MemberBase.2167" }
%"class.blink::MemberBase.2167" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.2168" = type { %"class.blink::MemberBase.2169" }
%"class.blink::MemberBase.2169" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.2170" = type { %"class.blink::MemberBase.2171" }
%"class.blink::MemberBase.2171" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.2172" = type { %"class.blink::MemberBase.2173" }
%"class.blink::MemberBase.2173" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type <{ %"class.blink::WeakMember.1969", %"class.blink::Member.2121", i8, i8, [6 x i8] }>
%"class.blink::Member.2176" = type { %"class.blink::MemberBase.2177" }
%"class.blink::MemberBase.2177" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.2178" = type { %"class.blink::MemberBase.2179" }
%"class.blink::MemberBase.2179" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2180" }
%"class.WTF::Deque.2180" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2183" }
%"class.WTF::VectorBuffer.2183" = type { %"class.WTF::VectorBufferBase.2184" }
%"class.WTF::VectorBufferBase.2184" = type { %"class.std::__1::unique_ptr.2185"*, i32, i32 }
%"class.std::__1::unique_ptr.2185" = type { %"class.std::__1::__compressed_pair.2186" }
%"class.std::__1::__compressed_pair.2186" = type { %"struct.std::__1::__compressed_pair_elem.2187" }
%"struct.std::__1::__compressed_pair_elem.2187" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2191", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2191" = type { %"class.std::__1::__bitset.2192" }
%"class.std::__1::__bitset.2192" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2193" }
%"class.absl::optional.2193" = type { %"class.absl::optional_internal::optional_data.2194" }
%"class.absl::optional_internal::optional_data.2194" = type { %"class.absl::optional_internal::optional_data_base.2195" }
%"class.absl::optional_internal::optional_data_base.2195" = type { %"class.absl::optional_internal::optional_data_dtor_base.2196" }
%"class.absl::optional_internal::optional_data_dtor_base.2196" = type { i8, %union.anon.2197 }
%union.anon.2197 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.2198", i64, %"class.absl::optional.1747", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.2198" = type { %"class.absl::optional_internal::optional_data.2199" }
%"class.absl::optional_internal::optional_data.2199" = type { %"class.absl::optional_internal::optional_data_base.2200" }
%"class.absl::optional_internal::optional_data_base.2200" = type { %"class.absl::optional_internal::optional_data_dtor_base.2201" }
%"class.absl::optional_internal::optional_data_dtor_base.2201" = type { i8, %union.anon.2202 }
%union.anon.2202 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.2203" = type { %"class.std::__1::unique_ptr.2204" }
%"class.std::__1::unique_ptr.2204" = type { %"class.std::__1::__compressed_pair.2205" }
%"class.std::__1::__compressed_pair.2205" = type { %"struct.std::__1::__compressed_pair_elem.2206" }
%"struct.std::__1::__compressed_pair_elem.2206" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.2210" = type { %"class.WTF::HashSet.2213" }
%"class.WTF::HashSet.2213" = type { %"class.WTF::HashTable.2214" }
%"class.WTF::HashTable.2214" = type <{ %"class.blink::WeakMember.2216"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2216" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2217" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.2217" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.2218" = type { %"class.std::__1::__compressed_pair.2219" }
%"class.std::__1::__compressed_pair.2219" = type { %"struct.std::__1::__compressed_pair_elem.2220" }
%"struct.std::__1::__compressed_pair_elem.2220" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2224" = type { %"class.std::__1::__compressed_pair.2225" }
%"class.std::__1::__compressed_pair.2225" = type { %"struct.std::__1::__compressed_pair_elem.2226" }
%"struct.std::__1::__compressed_pair_elem.2226" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::Member.2232" = type { %"class.blink::MemberBase.2233" }
%"class.blink::MemberBase.2233" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2234" = type { %"class.blink::MemberBase.2235" }
%"class.blink::MemberBase.2235" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.2115", %"class.blink::Member.2236", %"class.blink::Member.2238", %"class.blink::Member.2240", i8, %"class.WTF::Vector.2242" }
%"class.blink::Member.2238" = type { %"class.blink::MemberBase.2239" }
%"class.blink::MemberBase.2239" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2240" = type { %"class.blink::MemberBase.2241" }
%"class.blink::MemberBase.2241" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2242" = type { %"class.WTF::VectorBuffer.2243" }
%"class.WTF::VectorBuffer.2243" = type { %"class.WTF::VectorBufferBase.2244" }
%"class.WTF::VectorBufferBase.2244" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.2245", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType.2245" = type { %"class.base::StrongAlias.2246" }
%"class.base::StrongAlias.2246" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2340" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2247, %"class.std::__1::unique_ptr.1743", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1757, i32 }>
%class.scoped_refptr.2247 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1757, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2306", %"class.absl::optional.2311", %"class.absl::optional.2264", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2331", i8, [7 x i8], %class.scoped_refptr.1757, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1770" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1757, %"class.std::__1::unique_ptr.2248", %"class.absl::optional.2258", %"struct.std::__1::atomic.237", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2264", %"class.std::__1::unique_ptr.2269", i8, i64, %class.scoped_refptr.2303, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2304", %"class.base::WeakPtrFactory.2305" }
%"class.std::__1::unique_ptr.2248" = type { %"class.std::__1::__compressed_pair.2249" }
%"class.std::__1::__compressed_pair.2249" = type { %"struct.std::__1::__compressed_pair_elem.2250" }
%"struct.std::__1::__compressed_pair_elem.2250" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1757, i8, %"class.mojo::ScopedHandleBase.2251", %class.scoped_refptr.2252, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2253", i8*, %"class.base::WeakPtrFactory.2254" }
%"class.mojo::ScopedHandleBase.2251" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2252 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.2253" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2254" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2258" = type { %"class.absl::optional_internal::optional_data.2259" }
%"class.absl::optional_internal::optional_data.2259" = type { %"class.absl::optional_internal::optional_data_base.2260" }
%"class.absl::optional_internal::optional_data_base.2260" = type { %"class.absl::optional_internal::optional_data_dtor_base.2261" }
%"class.absl::optional_internal::optional_data_dtor_base.2261" = type { i8, %union.anon.2262 }
%union.anon.2262 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2263", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2263" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2269" = type { %"class.std::__1::__compressed_pair.2270" }
%"class.std::__1::__compressed_pair.2270" = type { %"struct.std::__1::__compressed_pair_elem.2271" }
%"struct.std::__1::__compressed_pair_elem.2271" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2272", i8, i64, %class.scoped_refptr.2273, %class.scoped_refptr.2298 }
%"class.base::RepeatingCallback.2272" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2273 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2274", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2276", %"class.std::__1::map.2287", i8, [7 x i8] }>
%"class.base::RefCounted.2274" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2275 }
%class.scoped_refptr.2275 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2276" = type { %"class.std::__1::__tree.2277" }
%"class.std::__1::__tree.2277" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2278", %"class.std::__1::__compressed_pair.2282" }
%"class.std::__1::__compressed_pair.2278" = type { %"struct.std::__1::__compressed_pair_elem.1647" }
%"class.std::__1::__compressed_pair.2282" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"class.std::__1::map.2287" = type { %"class.std::__1::__tree.2288" }
%"class.std::__1::__tree.2288" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2289", %"class.std::__1::__compressed_pair.2293" }
%"class.std::__1::__compressed_pair.2289" = type { %"struct.std::__1::__compressed_pair_elem.1647" }
%"class.std::__1::__compressed_pair.2293" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%class.scoped_refptr.2298 = type { %"class.base::RefCountedData.2299"* }
%"class.base::RefCountedData.2299" = type opaque
%class.scoped_refptr.2303 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2304" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2305" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2306" = type { %"class.absl::optional_internal::optional_data.2307" }
%"class.absl::optional_internal::optional_data.2307" = type { %"class.absl::optional_internal::optional_data_base.2308" }
%"class.absl::optional_internal::optional_data_base.2308" = type { %"class.absl::optional_internal::optional_data_dtor_base.2309" }
%"class.absl::optional_internal::optional_data_dtor_base.2309" = type { i8, %union.anon.2310 }
%union.anon.2310 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2311" = type { %"class.absl::optional_internal::optional_data.2312" }
%"class.absl::optional_internal::optional_data.2312" = type { %"class.absl::optional_internal::optional_data_base.2313" }
%"class.absl::optional_internal::optional_data_base.2313" = type { %"class.absl::optional_internal::optional_data_dtor_base.2314" }
%"class.absl::optional_internal::optional_data_dtor_base.2314" = type { i8, [7 x i8], %union.anon.2315 }
%union.anon.2315 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2264" = type { %"class.absl::optional_internal::optional_data.2265" }
%"class.absl::optional_internal::optional_data.2265" = type { %"class.absl::optional_internal::optional_data_base.2266" }
%"class.absl::optional_internal::optional_data_base.2266" = type { %"class.absl::optional_internal::optional_data_dtor_base.2267" }
%"class.absl::optional_internal::optional_data_dtor_base.2267" = type { i8, %union.anon.2268 }
%union.anon.2268 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2316 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2316 = type { %"class.std::__1::map.2319" }
%"class.std::__1::map.2319" = type { %"class.std::__1::__tree.2320" }
%"class.std::__1::__tree.2320" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2321", %"class.std::__1::__compressed_pair.2325" }
%"class.std::__1::__compressed_pair.2321" = type { %"struct.std::__1::__compressed_pair_elem.1647" }
%"class.std::__1::__compressed_pair.2325" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2330"*, i64 }
%"class.std::__1::unique_ptr.2330" = type opaque
%"class.std::__1::map.2331" = type { %"class.std::__1::__tree.2332" }
%"class.std::__1::__tree.2332" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2333", %"class.std::__1::__compressed_pair.2337" }
%"class.std::__1::__compressed_pair.2333" = type { %"struct.std::__1::__compressed_pair_elem.1647" }
%"class.std::__1::__compressed_pair.2337" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2340" = type { %"class.std::__1::__compressed_pair.2341" }
%"class.std::__1::__compressed_pair.2341" = type { %"struct.std::__1::__compressed_pair_elem.2342" }
%"struct.std::__1::__compressed_pair_elem.2342" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2348" = type { %"class.blink::MemberBase.2349" }
%"class.blink::MemberBase.2349" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2236" = type { %"class.blink::MemberBase.2237" }
%"class.blink::MemberBase.2237" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.2115" = type { %"class.blink::MemberBase.2116" }
%"class.blink::MemberBase.2116" = type { %"class.blink::Frame"* }
%"class.blink::Member.2350" = type { %"class.blink::MemberBase.2351" }
%"class.blink::MemberBase.2351" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.2115", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.2352" }
%"class.std::__1::vector.2352" = type { %"class.std::__1::__vector_base.2353" }
%"class.std::__1::__vector_base.2353" = type { %"struct.std::__1::pair.2354"*, %"struct.std::__1::pair.2354"*, %"class.std::__1::__compressed_pair.2355" }
%"struct.std::__1::pair.2354" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2355" = type { %"struct.std::__1::__compressed_pair_elem.2356" }
%"struct.std::__1::__compressed_pair_elem.2356" = type { %"struct.std::__1::pair.2354"* }
%"class.blink::Member.2360" = type { %"class.blink::MemberBase.2361" }
%"class.blink::MemberBase.2361" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2362" = type { %"class.absl::optional_internal::optional_data.2363" }
%"class.absl::optional_internal::optional_data.2363" = type { %"class.absl::optional_internal::optional_data_base.2364" }
%"class.absl::optional_internal::optional_data_base.2364" = type { %"class.absl::optional_internal::optional_data_dtor_base.2365" }
%"class.absl::optional_internal::optional_data_dtor_base.2365" = type { i8, %union.anon.2366 }
%union.anon.2366 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2372" }
%"class.blink::HeapHashSet.2372" = type { %"class.WTF::HashSet.2375" }
%"class.WTF::HashSet.2375" = type { %"class.WTF::HashTable.2376" }
%"class.WTF::HashTable.2376" = type <{ %"class.blink::WeakMember.2378"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2378" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2379" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2380" }
%"class.blink::HeapHashMap.2380" = type { %"class.WTF::HashMap.2383" }
%"class.WTF::HashMap.2383" = type { %"class.WTF::HashTable.2384" }
%"class.WTF::HashTable.2384" = type <{ %"struct.WTF::KeyValuePair.2386"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2386" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2387" = type { %"class.std::__1::__compressed_pair.2388" }
%"class.std::__1::__compressed_pair.2388" = type { %"struct.std::__1::__compressed_pair_elem.2389" }
%"struct.std::__1::__compressed_pair_elem.2389" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2390", %"class.base::WeakPtrFactory.2395" }
%"class.WTF::HashMap.2390" = type { %"class.WTF::HashTable.2391" }
%"class.WTF::HashTable.2391" = type <{ %"struct.WTF::KeyValuePair.2394"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2394" = type opaque
%"class.base::WeakPtrFactory.2395" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2399" }
%"class.blink::Member.2399" = type { %"class.blink::MemberBase.2400" }
%"class.blink::MemberBase.2400" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3270", i64, %"class.std::__1::map.3271", i8*, i64, %"class.base::WeakPtrFactory.3280" }
%"class.base::RepeatingCallback.3270" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3271" = type { %"class.std::__1::__tree.3272" }
%"class.std::__1::__tree.3272" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3273", %"class.std::__1::__compressed_pair.3277" }
%"class.std::__1::__compressed_pair.3273" = type { %"struct.std::__1::__compressed_pair_elem.1647" }
%"class.std::__1::__compressed_pair.3277" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"class.base::WeakPtrFactory.3280" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2401" = type { %"class.WTF::HashSet.2404" }
%"class.WTF::HashSet.2404" = type { %"class.WTF::HashTable.2405" }
%"class.WTF::HashTable.2405" = type <{ %"class.blink::WeakMember.2407"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2407" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.2350", %"class.blink::Member.2408", %"class.blink::Member.2410", %"class.std::__1::unique_ptr.2412", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2418" }
%"class.blink::Member.2408" = type { %"class.blink::MemberBase.2409" }
%"class.blink::MemberBase.2409" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2410" = type { %"class.blink::MemberBase.2411" }
%"class.blink::MemberBase.2411" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2412" = type { %"class.std::__1::__compressed_pair.2413" }
%"class.std::__1::__compressed_pair.2413" = type { %"struct.std::__1::__compressed_pair_elem.2414" }
%"struct.std::__1::__compressed_pair_elem.2414" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.2418" = type { %"class.WTF::HashTable.2419" }
%"class.WTF::HashTable.2419" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2422" = type { %"class.blink::MemberBase.2423" }
%"class.blink::MemberBase.2423" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2831", %"class.blink::Member.2350", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2836", i8, i32, %"class.blink::Color", %"class.absl::optional.2838", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2843", %"class.blink::Member.2845", %"class.blink::Member.2845", %"class.std::__1::unique_ptr.2848", i32, [4 x i8], %"class.WTF::HashSet.2851", %"class.blink::Member.3004", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.3006", %"class.blink::HeapHashSet.3013", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.3020", i8, %"class.blink::Member.3026", i8, i8, i32, %"class.blink::HeapLinkedHashSet.3028", %"class.blink::HeapLinkedHashSet.3042", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.3056", i8, %"class.std::__1::unique_ptr.3062", %"class.std::__1::unique_ptr.3143", %"class.WTF::Vector.3149", i32, %class.scoped_refptr.3154, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.3165", %"class.blink::Member.3167", %"class.blink::Member.3169", %"class.blink::HeapHashSet.3171", %"class.blink::HeapHashSet.3178", %"class.std::__1::unique_ptr.3185", %"class.std::__1::unique_ptr.3192", %"class.WTF::Vector.757" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2831" = type { %"class.WTF::HashTable.2832" }
%"class.WTF::HashTable.2832" = type <{ %class.scoped_refptr.2835*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2835 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2836" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2837", { i64, i64 } }
%"class.blink::WeakMember.2837" = type { %"class.blink::MemberBase.2423" }
%"class.absl::optional.2838" = type { %"class.absl::optional_internal::optional_data.2839" }
%"class.absl::optional_internal::optional_data.2839" = type { %"class.absl::optional_internal::optional_data_base.2840" }
%"class.absl::optional_internal::optional_data_base.2840" = type { %"class.absl::optional_internal::optional_data_dtor_base.2841" }
%"class.absl::optional_internal::optional_data_dtor_base.2841" = type { i8, %union.anon.2842 }
%union.anon.2842 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2843" = type { %"class.blink::MemberBase.2844" }
%"class.blink::MemberBase.2844" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2845" = type { %"class.blink::MemberBase.2846" }
%"class.blink::MemberBase.2846" = type { %"class.blink::HeapHashSet.2847"* }
%"class.blink::HeapHashSet.2847" = type opaque
%"class.std::__1::unique_ptr.2848" = type { %"class.std::__1::__compressed_pair.2849" }
%"class.std::__1::__compressed_pair.2849" = type { %"struct.std::__1::__compressed_pair_elem.2850" }
%"struct.std::__1::__compressed_pair_elem.2850" = type { %"class.WTF::HashSet.2851"* }
%"class.WTF::HashSet.2851" = type { %"class.WTF::HashTable.2852" }
%"class.WTF::HashTable.2852" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.941, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.2855" }
%"class.std::__1::unique_ptr.2855" = type { %"class.std::__1::__compressed_pair.2856" }
%"class.std::__1::__compressed_pair.2856" = type { %"struct.std::__1::__compressed_pair_elem.2857" }
%"struct.std::__1::__compressed_pair_elem.2857" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.2858", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.2864", %"class.std::__1::unique_ptr.2981", i8, %"class.absl::optional.2987", %class.scoped_refptr.2963, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.2992" }
%"class.std::__1::unique_ptr.2858" = type { %"class.std::__1::__compressed_pair.2859" }
%"class.std::__1::__compressed_pair.2859" = type { %"struct.std::__1::__compressed_pair_elem.2860" }
%"struct.std::__1::__compressed_pair_elem.2860" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.2864" = type { %"class.std::__1::__compressed_pair.2865" }
%"class.std::__1::__compressed_pair.2865" = type { %"struct.std::__1::__compressed_pair_elem.2866" }
%"struct.std::__1::__compressed_pair_elem.2866" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.2867, %class.scoped_refptr.2867, %class.scoped_refptr.2867, %class.scoped_refptr.2867, %class.scoped_refptr.2867, %class.scoped_refptr.2867, %class.scoped_refptr.2902, %class.scoped_refptr.2918, %class.scoped_refptr.2919, %class.scoped_refptr.2919, %class.scoped_refptr.2919, %class.scoped_refptr.2919, %class.scoped_refptr.2919, %class.scoped_refptr.2919, %class.scoped_refptr.2953, %class.scoped_refptr.2954, %class.scoped_refptr.2954, %class.scoped_refptr.2954, %class.scoped_refptr.2954, %class.scoped_refptr.2954, %class.scoped_refptr.2954, %class.scoped_refptr.2954, %class.scoped_refptr.2954, %class.scoped_refptr.2977 }
%class.scoped_refptr.2867 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.2884" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.2868", i8, i8, %class.scoped_refptr.2870, i32, i32 }
%"class.WTF::RefCounted.2868" = type { %"class.base::RefCounted.2869" }
%"class.base::RefCounted.2869" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2870 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.2877, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.2878", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.2871" }
%"class.std::__1::unique_ptr.2871" = type { %"class.std::__1::__compressed_pair.2872" }
%"class.std::__1::__compressed_pair.2872" = type { %"struct.std::__1::__compressed_pair_elem.2873" }
%"struct.std::__1::__compressed_pair_elem.2873" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.2877 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.2903", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.2903" = type { %"class.WTF::RefCounted.2904", i8, i8, %class.scoped_refptr.2877, i32, i32 }
%"class.WTF::RefCounted.2904" = type { %"class.base::RefCounted.2905" }
%"class.base::RefCounted.2905" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.2906" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.2906" = type { %"class.absl::optional_internal::optional_data.2907" }
%"class.absl::optional_internal::optional_data.2907" = type { %"class.absl::optional_internal::optional_data_base.2908" }
%"class.absl::optional_internal::optional_data_base.2908" = type { %"class.absl::optional_internal::optional_data_dtor_base.2909" }
%"class.absl::optional_internal::optional_data_dtor_base.2909" = type { i8, %union.anon.2910 }
%union.anon.2910 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.2911", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.2911" = type { %"class.std::__1::__vector_base.2912" }
%"class.std::__1::__vector_base.2912" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.2913" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.2913" = type { %"struct.std::__1::__compressed_pair_elem.2914" }
%"struct.std::__1::__compressed_pair_elem.2914" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.2878" = type { %"class.std::__1::__compressed_pair.2879" }
%"class.std::__1::__compressed_pair.2879" = type { %"struct.std::__1::__compressed_pair_elem.2880" }
%"struct.std::__1::__compressed_pair_elem.2880" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.2884" = type { %"class.std::__1::__compressed_pair.2885" }
%"class.std::__1::__compressed_pair.2885" = type { %"struct.std::__1::__compressed_pair_elem.2886" }
%"struct.std::__1::__compressed_pair_elem.2886" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.2887", %"class.std::__1::unique_ptr.2893", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2887" = type { %"class.std::__1::__compressed_pair.2888" }
%"class.std::__1::__compressed_pair.2888" = type { %"struct.std::__1::__compressed_pair_elem.2889" }
%"struct.std::__1::__compressed_pair_elem.2889" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2893" = type { %"class.std::__1::__compressed_pair.2894" }
%"class.std::__1::__compressed_pair.2894" = type { %"struct.std::__1::__compressed_pair_elem.2895" }
%"struct.std::__1::__compressed_pair_elem.2895" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.2902 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.2918 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.2919 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2920" }
%"class.blink::PaintPropertyNode.2920" = type { %"class.WTF::RefCounted.2921", i8, i8, %class.scoped_refptr.2923, i32, i32 }
%"class.WTF::RefCounted.2921" = type { %"class.base::RefCounted.2922" }
%"class.base::RefCounted.2922" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2923 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.2870, %class.scoped_refptr.2924, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.2939", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.2924 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2955" }
%"class.blink::PaintPropertyNode.2955" = type { %"class.WTF::RefCounted.2956", i8, i8, %class.scoped_refptr.2924, i32, i32 }
%"class.WTF::RefCounted.2956" = type { %"class.base::RefCounted.2957" }
%"class.base::RefCounted.2957" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.2925" }
%"class.std::__1::vector.2925" = type { %"class.std::__1::__vector_base.2926" }
%"class.std::__1::__vector_base.2926" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.2934" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1609, [20 x float], i32, [4 x i8], %"class.std::__1::vector.2927", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.2927" = type { %"class.std::__1::__vector_base.2928" }
%"class.std::__1::__vector_base.2928" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.2929" }
%"class.std::__1::__compressed_pair.2929" = type { %"struct.std::__1::__compressed_pair_elem.2930" }
%"struct.std::__1::__compressed_pair_elem.2930" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.2934" = type { %"struct.std::__1::__compressed_pair_elem.2935" }
%"struct.std::__1::__compressed_pair_elem.2935" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.2939" = type { %"class.std::__1::__compressed_pair.2940" }
%"class.std::__1::__compressed_pair.2940" = type { %"struct.std::__1::__compressed_pair_elem.2941" }
%"struct.std::__1::__compressed_pair_elem.2941" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.2945" }
%"class.base::internal::flat_tree.2945" = type { %"class.std::__1::vector.2946" }
%"class.std::__1::vector.2946" = type { %"class.std::__1::__vector_base.2947" }
%"class.std::__1::__vector_base.2947" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2948" }
%"class.std::__1::__compressed_pair.2948" = type { %"struct.std::__1::__compressed_pair_elem.2949" }
%"struct.std::__1::__compressed_pair_elem.2949" = type { i32* }
%class.scoped_refptr.2953 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.2954 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.2966" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.2870, %"class.absl::optional.2958", %class.scoped_refptr.2963, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.2958" = type { %"class.absl::optional_internal::optional_data.2959" }
%"class.absl::optional_internal::optional_data.2959" = type { %"class.absl::optional_internal::optional_data_base.2960" }
%"class.absl::optional_internal::optional_data_base.2960" = type { %"class.absl::optional_internal::optional_data_dtor_base.2961" }
%"class.absl::optional_internal::optional_data_dtor_base.2961" = type { i8, [3 x i8], %union.anon.2962 }
%union.anon.2962 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.2966" = type { %"class.std::__1::__compressed_pair.2967" }
%"class.std::__1::__compressed_pair.2967" = type { %"struct.std::__1::__compressed_pair_elem.2968" }
%"struct.std::__1::__compressed_pair_elem.2968" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.2969", i32, [4 x i8] }>
%"class.WTF::Vector.2969" = type { %"class.WTF::VectorBuffer.2970" }
%"class.WTF::VectorBuffer.2970" = type { %"class.WTF::VectorBufferBase.2971" }
%"class.WTF::VectorBufferBase.2971" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.2977 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.2981" = type { %"class.std::__1::__compressed_pair.2982" }
%"class.std::__1::__compressed_pair.2982" = type { %"struct.std::__1::__compressed_pair_elem.2983" }
%"struct.std::__1::__compressed_pair_elem.2983" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.2870, %class.scoped_refptr.2924, %class.scoped_refptr.2923 }
%"class.absl::optional.2987" = type { %"class.absl::optional_internal::optional_data.2988" }
%"class.absl::optional_internal::optional_data.2988" = type { %"class.absl::optional_internal::optional_data_base.2989" }
%"class.absl::optional_internal::optional_data_base.2989" = type { %"class.absl::optional_internal::optional_data_dtor_base.2990" }
%"class.absl::optional_internal::optional_data_dtor_base.2990" = type { i8, %union.anon.2991 }
%union.anon.2991 = type { %"class.blink::IntRect" }
%class.scoped_refptr.2963 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.2964", [4 x i8] }
%"class.WTF::RefCounted.2964" = type { %"class.base::RefCounted.2965" }
%"class.base::RefCounted.2965" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.2992" = type { %"class.std::__1::__compressed_pair.2993" }
%"class.std::__1::__compressed_pair.2993" = type { %"struct.std::__1::__compressed_pair_elem.2994" }
%"struct.std::__1::__compressed_pair_elem.2994" = type { %"class.blink::FragmentData"* }
%"class.blink::Member.3004" = type { %"class.blink::MemberBase.3005" }
%"class.blink::MemberBase.3005" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.3006" = type { %"class.WTF::HashSet.3009" }
%"class.WTF::HashSet.3009" = type { %"class.WTF::HashTable.3010" }
%"class.WTF::HashTable.3010" = type <{ %"class.blink::Member.3012"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3012" = type opaque
%"class.blink::HeapHashSet.3013" = type { %"class.WTF::HashSet.3016" }
%"class.WTF::HashSet.3016" = type { %"class.WTF::HashTable.3017" }
%"class.WTF::HashTable.3017" = type <{ %"class.blink::Member.3019"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3019" = type { %"class.blink::MemberBase.768" }
%"class.std::__1::unique_ptr.3020" = type { %"class.std::__1::__compressed_pair.3021" }
%"class.std::__1::__compressed_pair.3021" = type { %"struct.std::__1::__compressed_pair_elem.3022" }
%"struct.std::__1::__compressed_pair_elem.3022" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.3026" = type { %"class.blink::MemberBase.3027" }
%"class.blink::MemberBase.3027" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet.3028" = type { %"class.WTF::LinkedHashSet.3031" }
%"class.WTF::LinkedHashSet.3031" = type { %"class.WTF::HashMap.3032", %"class.WTF::VectorBackedLinkedList.3036" }
%"class.WTF::HashMap.3032" = type { %"class.WTF::HashTable.3033" }
%"class.WTF::HashTable.3033" = type <{ %"struct.WTF::KeyValuePair.3035"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3035" = type opaque
%"class.WTF::VectorBackedLinkedList.3036" = type { %"class.WTF::Vector.3037", i32, i32 }
%"class.WTF::Vector.3037" = type { %"class.WTF::VectorBuffer.3038" }
%"class.WTF::VectorBuffer.3038" = type { %"class.WTF::VectorBufferBase.3039" }
%"class.WTF::VectorBufferBase.3039" = type { %"class.WTF::VectorBackedLinkedListNode.3040"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.3040" = type opaque
%"class.blink::HeapLinkedHashSet.3042" = type { %"class.WTF::LinkedHashSet.3045" }
%"class.WTF::LinkedHashSet.3045" = type { %"class.WTF::HashMap.3046", %"class.WTF::VectorBackedLinkedList.3050" }
%"class.WTF::HashMap.3046" = type { %"class.WTF::HashTable.3047" }
%"class.WTF::HashTable.3047" = type <{ %"struct.WTF::KeyValuePair.3049"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3049" = type opaque
%"class.WTF::VectorBackedLinkedList.3050" = type { %"class.WTF::Vector.3051", i32, i32 }
%"class.WTF::Vector.3051" = type { %"class.WTF::VectorBuffer.3052" }
%"class.WTF::VectorBuffer.3052" = type { %"class.WTF::VectorBufferBase.3053" }
%"class.WTF::VectorBufferBase.3053" = type { %"class.WTF::VectorBackedLinkedListNode.3054"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.3054" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.3056" = type { %"class.std::__1::__compressed_pair.3057" }
%"class.std::__1::__compressed_pair.3057" = type { %"struct.std::__1::__compressed_pair_elem.3058" }
%"struct.std::__1::__compressed_pair_elem.3058" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.3062" = type { %"class.std::__1::__compressed_pair.3063" }
%"class.std::__1::__compressed_pair.3063" = type { %"struct.std::__1::__compressed_pair_elem.3064" }
%"struct.std::__1::__compressed_pair_elem.3064" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.3065, %class.scoped_refptr.3065, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.3120", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.3125", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.3065 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.3066", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.3073" }
%"class.WTF::RefCounted.3066" = type { %"class.base::RefCounted.3067" }
%"class.base::RefCounted.3067" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.3068", i32, [4 x i8] }>
%"class.WTF::Vector.3068" = type { %"class.WTF::VectorBuffer.3069" }
%"class.WTF::VectorBuffer.3069" = type { %"class.WTF::VectorBufferBase.3070" }
%"class.WTF::VectorBufferBase.3070" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.3073" = type { %"class.WTF::VectorBuffer.3074" }
%"class.WTF::VectorBuffer.3074" = type { %"class.WTF::VectorBufferBase.3075" }
%"class.WTF::VectorBufferBase.3075" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.3076", %"class.std::__1::unique_ptr.3092", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.3076" = type { %"class.std::__1::__compressed_pair.3077" }
%"class.std::__1::__compressed_pair.3077" = type { %"struct.std::__1::__compressed_pair_elem.3078" }
%"struct.std::__1::__compressed_pair_elem.3078" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.3079", %"class.WTF::Vector.3084", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.3079" = type { %"class.WTF::VectorBuffer.3080" }
%"class.WTF::VectorBuffer.3080" = type { %"class.WTF::VectorBufferBase.3081" }
%"class.WTF::VectorBufferBase.3081" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.3084" = type { %"class.WTF::VectorBuffer.3085" }
%"class.WTF::VectorBuffer.3085" = type { %"class.WTF::VectorBufferBase.3086" }
%"class.WTF::VectorBufferBase.3086" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.3092" = type { %"class.std::__1::__compressed_pair.3093" }
%"class.std::__1::__compressed_pair.3093" = type { %"struct.std::__1::__compressed_pair_elem.3094" }
%"struct.std::__1::__compressed_pair_elem.3094" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.3095", %"class.absl::optional.3095" }
%"class.absl::optional.3095" = type { %"class.absl::optional_internal::optional_data.3096" }
%"class.absl::optional_internal::optional_data.3096" = type { %"class.absl::optional_internal::optional_data_base.3097" }
%"class.absl::optional_internal::optional_data_base.3097" = type { %"class.absl::optional_internal::optional_data_dtor_base.3098" }
%"class.absl::optional_internal::optional_data_dtor_base.3098" = type { i8, [3 x i8], %union.anon.3099 }
%union.anon.3099 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.3073"*, %"class.absl::optional.3105", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.3105" = type { %"class.absl::optional_internal::optional_data.3106" }
%"class.absl::optional_internal::optional_data.3106" = type { %"class.absl::optional_internal::optional_data_base.3107" }
%"class.absl::optional_internal::optional_data_base.3107" = type { %"class.absl::optional_internal::optional_data_dtor_base.3108" }
%"class.absl::optional_internal::optional_data_dtor_base.3108" = type { i8, %union.anon.3109 }
%union.anon.3109 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.3110", %"class.WTF::Vector.3115" }
%"class.WTF::Vector.3110" = type { %"class.WTF::VectorBuffer.3111" }
%"class.WTF::VectorBuffer.3111" = type { %"class.WTF::VectorBufferBase.3112", [128 x i8] }
%"class.WTF::VectorBufferBase.3112" = type { i32*, i32, i32 }
%"class.WTF::Vector.3115" = type { %"class.WTF::VectorBuffer.3116" }
%"class.WTF::VectorBuffer.3116" = type { %"class.WTF::VectorBufferBase.3117", [128 x i8] }
%"class.WTF::VectorBufferBase.3117" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.3120" = type { %"class.WTF::VectorBuffer.3121" }
%"class.WTF::VectorBuffer.3121" = type { %"class.WTF::VectorBufferBase.3122" }
%"class.WTF::VectorBufferBase.3122" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.3125" = type { %"class.WTF::HashTable.3126" }
%"class.WTF::HashTable.3126" = type <{ %"struct.WTF::KeyValuePair.3129"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3129" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.3130", %"class.WTF::Vector.3135" }
%"class.WTF::HashMap.3130" = type { %"class.WTF::HashTable.3131" }
%"class.WTF::HashTable.3131" = type <{ %"struct.WTF::KeyValuePair.3134"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3134" = type opaque
%"class.WTF::Vector.3135" = type { %"class.WTF::VectorBuffer.3136" }
%"class.WTF::VectorBuffer.3136" = type { %"class.WTF::VectorBufferBase.3137" }
%"class.WTF::VectorBufferBase.3137" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.3143" = type { %"class.std::__1::__compressed_pair.3144" }
%"class.std::__1::__compressed_pair.3144" = type { %"struct.std::__1::__compressed_pair_elem.3145" }
%"struct.std::__1::__compressed_pair_elem.3145" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.3149" = type { %"class.WTF::VectorBuffer.3150" }
%"class.WTF::VectorBuffer.3150" = type { %"class.WTF::VectorBufferBase.3151" }
%"class.WTF::VectorBufferBase.3151" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.3154 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type { %"class.WTF::RefCounted.3155", i64, %"class.ukm::UkmRecorder"*, %"class.base::TickClock"*, i8*, %"struct.blink::LocalFrameUkmAggregator::AbsoluteMetricRecord", %"struct.std::__1::array.3163", %"struct.blink::LocalFrameUkmAggregator::SampleToRecord", i32, i32, i32, i8, i32, i32 }
%"class.WTF::RefCounted.3155" = type { %"class.base::RefCounted.3156" }
%"class.base::RefCounted.3156" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::LocalFrameUkmAggregator::AbsoluteMetricRecord" = type { %"class.std::__1::unique_ptr.3157", %"class.std::__1::unique_ptr.3157", %"class.std::__1::unique_ptr.3157", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.std::__1::unique_ptr.3157" = type { %"class.std::__1::__compressed_pair.3158" }
%"class.std::__1::__compressed_pair.3158" = type { %"struct.std::__1::__compressed_pair_elem.3159" }
%"struct.std::__1::__compressed_pair_elem.3159" = type { %"class.blink::CustomCountHistogram"* }
%"class.blink::CustomCountHistogram" = type { %"class.base::HistogramBase"* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.std::__1::array.3163" = type { [26 x %"struct.blink::LocalFrameUkmAggregator::AbsoluteMetricRecord"] }
%"struct.blink::LocalFrameUkmAggregator::SampleToRecord" = type <{ %"class.base::TimeDelta", %"struct.std::__1::array.3164", %"struct.std::__1::array.3164", i16, [6 x i8] }>
%"struct.std::__1::array.3164" = type { [26 x %"class.base::TimeDelta"] }
%"class.blink::Member.3165" = type { %"class.blink::MemberBase.3166" }
%"class.blink::MemberBase.3166" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.3167" = type { %"class.blink::MemberBase.3168" }
%"class.blink::MemberBase.3168" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.3169" = type { %"class.blink::MemberBase.3170" }
%"class.blink::MemberBase.3170" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.3171" = type { %"class.WTF::HashSet.3174" }
%"class.WTF::HashSet.3174" = type { %"class.WTF::HashTable.3175" }
%"class.WTF::HashTable.3175" = type <{ %"class.blink::WeakMember.3177"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3177" = type opaque
%"class.blink::HeapHashSet.3178" = type { %"class.WTF::HashSet.3181" }
%"class.WTF::HashSet.3181" = type { %"class.WTF::HashTable.3182" }
%"class.WTF::HashTable.3182" = type <{ %"class.blink::WeakMember.3184"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3184" = type opaque
%"class.std::__1::unique_ptr.3185" = type { %"class.std::__1::__compressed_pair.3186" }
%"class.std::__1::__compressed_pair.3186" = type { %"struct.std::__1::__compressed_pair_elem.3187" }
%"struct.std::__1::__compressed_pair_elem.3187" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.3188" }
%"class.base::time_internal::TimeBase.3188" = type { i64 }
%"class.std::__1::unique_ptr.3192" = type { %"class.std::__1::__compressed_pair.3193" }
%"class.std::__1::__compressed_pair.3193" = type { %"struct.std::__1::__compressed_pair_elem.3194" }
%"struct.std::__1::__compressed_pair_elem.3194" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.3195", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.3195" = type { %"class.absl::optional_internal::optional_data.3196" }
%"class.absl::optional_internal::optional_data.3196" = type { %"class.absl::optional_internal::optional_data_base.3197" }
%"class.absl::optional_internal::optional_data_base.3197" = type { %"class.absl::optional_internal::optional_data_dtor_base.3198" }
%"class.absl::optional_internal::optional_data_dtor_base.3198" = type { i8, %union.anon.3199 }
%union.anon.3199 = type { %"class.base::Time" }
%"class.blink::Member.2424" = type { %"class.blink::MemberBase.2425" }
%"class.blink::MemberBase.2425" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2426" = type { %"class.blink::MemberBase.2427" }
%"class.blink::MemberBase.2427" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.2350", %"class.blink::Member.2430", %"class.blink::Member.2432", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2434", %"class.blink::Member.2440" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.844" }
%"class.blink::Member.2430" = type { %"class.blink::MemberBase.2431" }
%"class.blink::MemberBase.2431" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2432" = type { %"class.blink::MemberBase.2433" }
%"class.blink::MemberBase.2433" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2434" = type { %"class.std::__1::__compressed_pair.2435" }
%"class.std::__1::__compressed_pair.2435" = type { %"struct.std::__1::__compressed_pair_elem.2436" }
%"struct.std::__1::__compressed_pair_elem.2436" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2440" = type { %"class.blink::MemberBase.2441" }
%"class.blink::MemberBase.2441" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2442" = type { %"class.blink::MemberBase.2443" }
%"class.blink::MemberBase.2443" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2444" = type { %"class.blink::MemberBase.2445" }
%"class.blink::MemberBase.2445" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2446" = type { %"class.blink::MemberBase.2447" }
%"class.blink::MemberBase.2447" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2450", %"class.blink::HeapListHashSet.2461", %"class.blink::HeapListHashSet.2472", %"class.blink::HeapListHashSet.2483", %"class.blink::HeapListHashSet.2494", %"class.blink::HeapListHashSet.2505", %"class.blink::HeapListHashSet.2516", %"class.blink::HeapListHashSet.2527", %"class.blink::HeapListHashSet.2538", %"class.blink::HeapListHashSet.2549", %"class.blink::HeapListHashSet.2560", %"class.blink::HeapListHashSet.2571", %"class.blink::HeapListHashSet.2582", %"class.blink::HeapListHashSet.2593", %"class.blink::HeapListHashSet.2604", %"class.blink::HeapListHashSet.2615", %"class.blink::HeapListHashSet.2626", %"class.blink::HeapListHashSet.2637", %"class.blink::HeapListHashSet.2648", %"class.blink::HeapListHashSet.2659" }
%"class.blink::HeapListHashSet.2450" = type { %"class.WTF::ListHashSet.base.2460", [7 x i8] }
%"class.WTF::ListHashSet.base.2460" = type <{ %"class.WTF::HashTable.2455", %"class.blink::Member.2457", %"class.blink::Member.2457", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2455" = type <{ %"class.blink::Member.2457"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2457" = type { %"class.blink::MemberBase.2458" }
%"class.blink::MemberBase.2458" = type { %"class.blink::HeapListHashSetNode.2459"* }
%"class.blink::HeapListHashSetNode.2459" = type { %"class.blink::Member.2673", %"class.blink::Member.2457", %"class.blink::Member.2457" }
%"class.blink::HeapListHashSet.2461" = type { %"class.WTF::ListHashSet.base.2471", [7 x i8] }
%"class.WTF::ListHashSet.base.2471" = type <{ %"class.WTF::HashTable.2466", %"class.blink::Member.2468", %"class.blink::Member.2468", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2466" = type <{ %"class.blink::Member.2468"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2468" = type { %"class.blink::MemberBase.2469" }
%"class.blink::MemberBase.2469" = type { %"class.blink::HeapListHashSetNode.2470"* }
%"class.blink::HeapListHashSetNode.2470" = type { %"class.blink::Member.2825", %"class.blink::Member.2468", %"class.blink::Member.2468" }
%"class.blink::Member.2825" = type { %"class.blink::MemberBase.2826" }
%"class.blink::MemberBase.2826" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2472" = type { %"class.WTF::ListHashSet.base.2482", [7 x i8] }
%"class.WTF::ListHashSet.base.2482" = type <{ %"class.WTF::HashTable.2477", %"class.blink::Member.2479", %"class.blink::Member.2479", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2477" = type <{ %"class.blink::Member.2479"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2479" = type { %"class.blink::MemberBase.2480" }
%"class.blink::MemberBase.2480" = type { %"class.blink::HeapListHashSetNode.2481"* }
%"class.blink::HeapListHashSetNode.2481" = type { %"class.blink::Member.2821", %"class.blink::Member.2479", %"class.blink::Member.2479" }
%"class.blink::Member.2821" = type { %"class.blink::MemberBase.2822" }
%"class.blink::MemberBase.2822" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2483" = type { %"class.WTF::ListHashSet.base.2493", [7 x i8] }
%"class.WTF::ListHashSet.base.2493" = type <{ %"class.WTF::HashTable.2488", %"class.blink::Member.2490", %"class.blink::Member.2490", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2488" = type <{ %"class.blink::Member.2490"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2490" = type { %"class.blink::MemberBase.2491" }
%"class.blink::MemberBase.2491" = type { %"class.blink::HeapListHashSetNode.2492"* }
%"class.blink::HeapListHashSetNode.2492" = type { %"class.blink::Member.2817", %"class.blink::Member.2490", %"class.blink::Member.2490" }
%"class.blink::Member.2817" = type { %"class.blink::MemberBase.2818" }
%"class.blink::MemberBase.2818" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2494" = type { %"class.WTF::ListHashSet.base.2504", [7 x i8] }
%"class.WTF::ListHashSet.base.2504" = type <{ %"class.WTF::HashTable.2499", %"class.blink::Member.2501", %"class.blink::Member.2501", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2499" = type <{ %"class.blink::Member.2501"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2501" = type { %"class.blink::MemberBase.2502" }
%"class.blink::MemberBase.2502" = type { %"class.blink::HeapListHashSetNode.2503"* }
%"class.blink::HeapListHashSetNode.2503" = type { %"class.blink::Member.2813", %"class.blink::Member.2501", %"class.blink::Member.2501" }
%"class.blink::Member.2813" = type { %"class.blink::MemberBase.2814" }
%"class.blink::MemberBase.2814" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2505" = type { %"class.WTF::ListHashSet.base.2515", [7 x i8] }
%"class.WTF::ListHashSet.base.2515" = type <{ %"class.WTF::HashTable.2510", %"class.blink::Member.2512", %"class.blink::Member.2512", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2510" = type <{ %"class.blink::Member.2512"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2512" = type { %"class.blink::MemberBase.2513" }
%"class.blink::MemberBase.2513" = type { %"class.blink::HeapListHashSetNode.2514"* }
%"class.blink::HeapListHashSetNode.2514" = type { %"class.blink::Member.2809", %"class.blink::Member.2512", %"class.blink::Member.2512" }
%"class.blink::Member.2809" = type { %"class.blink::MemberBase.2810" }
%"class.blink::MemberBase.2810" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2516" = type { %"class.WTF::ListHashSet.base.2526", [7 x i8] }
%"class.WTF::ListHashSet.base.2526" = type <{ %"class.WTF::HashTable.2521", %"class.blink::Member.2523", %"class.blink::Member.2523", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2521" = type <{ %"class.blink::Member.2523"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2523" = type { %"class.blink::MemberBase.2524" }
%"class.blink::MemberBase.2524" = type { %"class.blink::HeapListHashSetNode.2525"* }
%"class.blink::HeapListHashSetNode.2525" = type { %"class.blink::Member.2805", %"class.blink::Member.2523", %"class.blink::Member.2523" }
%"class.blink::Member.2805" = type { %"class.blink::MemberBase.2806" }
%"class.blink::MemberBase.2806" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2527" = type { %"class.WTF::ListHashSet.base.2537", [7 x i8] }
%"class.WTF::ListHashSet.base.2537" = type <{ %"class.WTF::HashTable.2532", %"class.blink::Member.2534", %"class.blink::Member.2534", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2532" = type <{ %"class.blink::Member.2534"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2534" = type { %"class.blink::MemberBase.2535" }
%"class.blink::MemberBase.2535" = type { %"class.blink::HeapListHashSetNode.2536"* }
%"class.blink::HeapListHashSetNode.2536" = type { %"class.blink::Member.2801", %"class.blink::Member.2534", %"class.blink::Member.2534" }
%"class.blink::Member.2801" = type { %"class.blink::MemberBase.2802" }
%"class.blink::MemberBase.2802" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2538" = type { %"class.WTF::ListHashSet.base.2548", [7 x i8] }
%"class.WTF::ListHashSet.base.2548" = type <{ %"class.WTF::HashTable.2543", %"class.blink::Member.2545", %"class.blink::Member.2545", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2543" = type <{ %"class.blink::Member.2545"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2545" = type { %"class.blink::MemberBase.2546" }
%"class.blink::MemberBase.2546" = type { %"class.blink::HeapListHashSetNode.2547"* }
%"class.blink::HeapListHashSetNode.2547" = type { %"class.blink::Member.2797", %"class.blink::Member.2545", %"class.blink::Member.2545" }
%"class.blink::Member.2797" = type { %"class.blink::MemberBase.2798" }
%"class.blink::MemberBase.2798" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2549" = type { %"class.WTF::ListHashSet.base.2559", [7 x i8] }
%"class.WTF::ListHashSet.base.2559" = type <{ %"class.WTF::HashTable.2554", %"class.blink::Member.2556", %"class.blink::Member.2556", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2554" = type <{ %"class.blink::Member.2556"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2556" = type { %"class.blink::MemberBase.2557" }
%"class.blink::MemberBase.2557" = type { %"class.blink::HeapListHashSetNode.2558"* }
%"class.blink::HeapListHashSetNode.2558" = type { %"class.blink::Member.2793", %"class.blink::Member.2556", %"class.blink::Member.2556" }
%"class.blink::Member.2793" = type { %"class.blink::MemberBase.2794" }
%"class.blink::MemberBase.2794" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2560" = type { %"class.WTF::ListHashSet.base.2570", [7 x i8] }
%"class.WTF::ListHashSet.base.2570" = type <{ %"class.WTF::HashTable.2565", %"class.blink::Member.2567", %"class.blink::Member.2567", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2565" = type <{ %"class.blink::Member.2567"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2567" = type { %"class.blink::MemberBase.2568" }
%"class.blink::MemberBase.2568" = type { %"class.blink::HeapListHashSetNode.2569"* }
%"class.blink::HeapListHashSetNode.2569" = type { %"class.blink::Member.2686", %"class.blink::Member.2567", %"class.blink::Member.2567" }
%"class.blink::HeapListHashSet.2571" = type { %"class.WTF::ListHashSet.base.2581", [7 x i8] }
%"class.WTF::ListHashSet.base.2581" = type <{ %"class.WTF::HashTable.2576", %"class.blink::Member.2578", %"class.blink::Member.2578", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2576" = type <{ %"class.blink::Member.2578"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2578" = type { %"class.blink::MemberBase.2579" }
%"class.blink::MemberBase.2579" = type { %"class.blink::HeapListHashSetNode.2580"* }
%"class.blink::HeapListHashSetNode.2580" = type { %"class.blink::Member.2787", %"class.blink::Member.2578", %"class.blink::Member.2578" }
%"class.blink::Member.2787" = type { %"class.blink::MemberBase.2788" }
%"class.blink::MemberBase.2788" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2582" = type { %"class.WTF::ListHashSet.base.2592", [7 x i8] }
%"class.WTF::ListHashSet.base.2592" = type <{ %"class.WTF::HashTable.2587", %"class.blink::Member.2589", %"class.blink::Member.2589", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2587" = type <{ %"class.blink::Member.2589"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2589" = type { %"class.blink::MemberBase.2590" }
%"class.blink::MemberBase.2590" = type { %"class.blink::HeapListHashSetNode.2591"* }
%"class.blink::HeapListHashSetNode.2591" = type { %"class.blink::Member.2783", %"class.blink::Member.2589", %"class.blink::Member.2589" }
%"class.blink::Member.2783" = type { %"class.blink::MemberBase.2784" }
%"class.blink::MemberBase.2784" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2593" = type { %"class.WTF::ListHashSet.base.2603", [7 x i8] }
%"class.WTF::ListHashSet.base.2603" = type <{ %"class.WTF::HashTable.2598", %"class.blink::Member.2600", %"class.blink::Member.2600", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2598" = type <{ %"class.blink::Member.2600"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2600" = type { %"class.blink::MemberBase.2601" }
%"class.blink::MemberBase.2601" = type { %"class.blink::HeapListHashSetNode.2602"* }
%"class.blink::HeapListHashSetNode.2602" = type { %"class.blink::Member.2779", %"class.blink::Member.2600", %"class.blink::Member.2600" }
%"class.blink::Member.2779" = type { %"class.blink::MemberBase.2780" }
%"class.blink::MemberBase.2780" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2604" = type { %"class.WTF::ListHashSet.base.2614", [7 x i8] }
%"class.WTF::ListHashSet.base.2614" = type <{ %"class.WTF::HashTable.2609", %"class.blink::Member.2611", %"class.blink::Member.2611", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2609" = type <{ %"class.blink::Member.2611"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2611" = type { %"class.blink::MemberBase.2612" }
%"class.blink::MemberBase.2612" = type { %"class.blink::HeapListHashSetNode.2613"* }
%"class.blink::HeapListHashSetNode.2613" = type { %"class.blink::Member.2775", %"class.blink::Member.2611", %"class.blink::Member.2611" }
%"class.blink::Member.2775" = type { %"class.blink::MemberBase.2776" }
%"class.blink::MemberBase.2776" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2615" = type { %"class.WTF::ListHashSet.base.2625", [7 x i8] }
%"class.WTF::ListHashSet.base.2625" = type <{ %"class.WTF::HashTable.2620", %"class.blink::Member.2622", %"class.blink::Member.2622", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2620" = type <{ %"class.blink::Member.2622"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2622" = type { %"class.blink::MemberBase.2623" }
%"class.blink::MemberBase.2623" = type { %"class.blink::HeapListHashSetNode.2624"* }
%"class.blink::HeapListHashSetNode.2624" = type { %"class.blink::Member.2771", %"class.blink::Member.2622", %"class.blink::Member.2622" }
%"class.blink::Member.2771" = type { %"class.blink::MemberBase.2772" }
%"class.blink::MemberBase.2772" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2626" = type { %"class.WTF::ListHashSet.base.2636", [7 x i8] }
%"class.WTF::ListHashSet.base.2636" = type <{ %"class.WTF::HashTable.2631", %"class.blink::Member.2633", %"class.blink::Member.2633", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2631" = type <{ %"class.blink::Member.2633"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2633" = type { %"class.blink::MemberBase.2634" }
%"class.blink::MemberBase.2634" = type { %"class.blink::HeapListHashSetNode.2635"* }
%"class.blink::HeapListHashSetNode.2635" = type { %"class.blink::Member.2767", %"class.blink::Member.2633", %"class.blink::Member.2633" }
%"class.blink::Member.2767" = type { %"class.blink::MemberBase.2768" }
%"class.blink::MemberBase.2768" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2637" = type { %"class.WTF::ListHashSet.base.2647", [7 x i8] }
%"class.WTF::ListHashSet.base.2647" = type <{ %"class.WTF::HashTable.2642", %"class.blink::Member.2644", %"class.blink::Member.2644", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2642" = type <{ %"class.blink::Member.2644"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2644" = type { %"class.blink::MemberBase.2645" }
%"class.blink::MemberBase.2645" = type { %"class.blink::HeapListHashSetNode.2646"* }
%"class.blink::HeapListHashSetNode.2646" = type { %"class.blink::Member.2763", %"class.blink::Member.2644", %"class.blink::Member.2644" }
%"class.blink::Member.2763" = type { %"class.blink::MemberBase.2764" }
%"class.blink::MemberBase.2764" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2648" = type { %"class.WTF::ListHashSet.base.2658", [7 x i8] }
%"class.WTF::ListHashSet.base.2658" = type <{ %"class.WTF::HashTable.2653", %"class.blink::Member.2655", %"class.blink::Member.2655", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2653" = type <{ %"class.blink::Member.2655"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2655" = type { %"class.blink::MemberBase.2656" }
%"class.blink::MemberBase.2656" = type { %"class.blink::HeapListHashSetNode.2657"* }
%"class.blink::HeapListHashSetNode.2657" = type { %"class.blink::Member.2688", %"class.blink::Member.2655", %"class.blink::Member.2655" }
%"class.blink::HeapListHashSet.2659" = type { %"class.WTF::ListHashSet.base.2669", [7 x i8] }
%"class.WTF::ListHashSet.base.2669" = type <{ %"class.WTF::HashTable.2664", %"class.blink::Member.2666", %"class.blink::Member.2666", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2664" = type <{ %"class.blink::Member.2666"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2666" = type { %"class.blink::MemberBase.2667" }
%"class.blink::MemberBase.2667" = type { %"class.blink::HeapListHashSetNode.2668"* }
%"class.blink::HeapListHashSetNode.2668" = type { %"class.blink::Member.2671", %"class.blink::Member.2666", %"class.blink::Member.2666" }
%class.scoped_refptr.2670 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2671" = type { %"class.blink::MemberBase.2672" }
%"class.blink::MemberBase.2672" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2673" = type { %"class.blink::MemberBase.2674" }
%"class.blink::MemberBase.2674" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.2350", %"class.WTF::Vector.1374", i32, [4 x i8], %"class.blink::HeapHashMap.2677", i32, i8, [3 x i8] }>
%"class.blink::HeapHashMap.2677" = type { %"class.WTF::HashMap.2680" }
%"class.WTF::HashMap.2680" = type { %"class.WTF::HashTable.2681" }
%"class.WTF::HashTable.2681" = type <{ %"struct.WTF::KeyValuePair.2683"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2683" = type opaque
%"class.blink::Member.2684" = type { %"class.blink::MemberBase.2685" }
%"class.blink::MemberBase.2685" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2686" = type { %"class.blink::MemberBase.2687" }
%"class.blink::MemberBase.2687" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2688" = type { %"class.blink::MemberBase.2689" }
%"class.blink::MemberBase.2689" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2692" = type { %"class.blink::MemberBase.2693" }
%"class.blink::MemberBase.2693" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2694" = type { %"class.blink::MemberBase.2695" }
%"class.blink::MemberBase.2695" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2696" }
%"class.blink::Member.2696" = type { %"class.blink::MemberBase.2697" }
%"class.blink::MemberBase.2697" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3283" }
%"class.mojo::Remote.3283" = type { %"class.mojo::internal::InterfacePtrState.3284" }
%"class.mojo::internal::InterfacePtrState.3284" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3285" }
%"class.std::__1::unique_ptr.3285" = type { %"class.std::__1::__compressed_pair.3286" }
%"class.std::__1::__compressed_pair.3286" = type { %"struct.std::__1::__compressed_pair_elem.3287" }
%"struct.std::__1::__compressed_pair_elem.3287" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2698" = type { %"class.std::__1::__compressed_pair.2699" }
%"class.std::__1::__compressed_pair.2699" = type { %"struct.std::__1::__compressed_pair_elem.2700" }
%"struct.std::__1::__compressed_pair_elem.2700" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2704" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2705" = type { %"class.std::__1::__compressed_pair.2706" }
%"class.std::__1::__compressed_pair.2706" = type { %"struct.std::__1::__compressed_pair_elem.2707" }
%"struct.std::__1::__compressed_pair_elem.2707" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2367" = type { %"class.absl::optional_internal::optional_data.2368" }
%"class.absl::optional_internal::optional_data.2368" = type { %"class.absl::optional_internal::optional_data_base.2369" }
%"class.absl::optional_internal::optional_data_base.2369" = type { %"class.absl::optional_internal::optional_data_dtor_base.2370" }
%"class.absl::optional_internal::optional_data_dtor_base.2370" = type { i8, %union.anon.2371 }
%union.anon.2371 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2711" = type { %"class.std::__1::__compressed_pair.2712" }
%"class.std::__1::__compressed_pair.2712" = type { %"struct.std::__1::__compressed_pair_elem.2713" }
%"struct.std::__1::__compressed_pair_elem.2713" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2717" }
%"class.blink::Member.2717" = type { %"class.blink::MemberBase.2718" }
%"class.blink::MemberBase.2718" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3293" }
%"class.mojo::AssociatedRemote.3293" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3294" }
%"class.mojo::internal::AssociatedInterfacePtrState.3294" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3295" }
%"class.std::__1::unique_ptr.3295" = type { %"class.std::__1::__compressed_pair.3296" }
%"class.std::__1::__compressed_pair.3296" = type { %"struct.std::__1::__compressed_pair_elem.3297" }
%"struct.std::__1::__compressed_pair_elem.3297" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2719" = type { %"class.blink::Member.2720" }
%"class.blink::Member.2720" = type { %"class.blink::MemberBase.2721" }
%"class.blink::MemberBase.2721" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3303" }
%"class.mojo::AssociatedRemote.3303" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3304" }
%"class.mojo::internal::AssociatedInterfacePtrState.3304" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3305" }
%"class.std::__1::unique_ptr.3305" = type { %"class.std::__1::__compressed_pair.3306" }
%"class.std::__1::__compressed_pair.3306" = type { %"struct.std::__1::__compressed_pair_elem.3307" }
%"struct.std::__1::__compressed_pair_elem.3307" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2722" }
%"class.blink::Member.2722" = type { %"class.blink::MemberBase.2723" }
%"class.blink::MemberBase.2723" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3313", %"class.blink::Member.2350", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3313" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3314" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1743" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3314" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2724" = type { %"class.blink::Member.2725" }
%"class.blink::Member.2725" = type { %"class.blink::MemberBase.2726" }
%"class.blink::MemberBase.2726" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3317", %"class.blink::Member.2350", %"class.mojo::AssociatedReceiver.3318" }
%"class.blink::ThreadState::PrefinalizerRegistration.3317" = type { i8 }
%"class.mojo::AssociatedReceiver.3318" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3319" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3319" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2727" }
%"class.blink::Member.2727" = type { %"class.blink::MemberBase.2728" }
%"class.blink::MemberBase.2728" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3322", %"class.blink::Member.2350", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3322" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2247, %"class.std::__1::unique_ptr.1743", %"class.base::WeakPtrFactory.3323" }
%"class.base::WeakPtrFactory.3323" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2729" = type { %"class.blink::Member.2730" }
%"class.blink::Member.2730" = type { %"class.blink::MemberBase.2731" }
%"class.blink::MemberBase.2731" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3326", %"class.blink::Member.2350", %"class.mojo::AssociatedReceiver.3327" }
%"class.blink::ThreadState::PrefinalizerRegistration.3326" = type { i8 }
%"class.mojo::AssociatedReceiver.3327" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3328" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3328" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2732" = type { %"class.blink::MemberBase.2733" }
%"class.blink::MemberBase.2733" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2734" = type { %"class.blink::MemberBase.2735" }
%"class.blink::MemberBase.2735" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2736" = type { %"class.blink::MemberBase.2737" }
%"class.blink::MemberBase.2737" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2738" = type { %"class.blink::MemberBase.2739" }
%"class.blink::MemberBase.2739" = type { %"class.blink::HeapHashMap.2740"* }
%"class.blink::HeapHashMap.2740" = type opaque
%"class.mojo::StructPtr.2741" = type { %"class.std::__1::unique_ptr.2742" }
%"class.std::__1::unique_ptr.2742" = type { %"class.std::__1::__compressed_pair.2743" }
%"class.std::__1::__compressed_pair.2743" = type { %"struct.std::__1::__compressed_pair_elem.2744" }
%"struct.std::__1::__compressed_pair_elem.2744" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2745", %"class.mojo::InlinedStructPtr.2746" }
%"class.mojo::InlinedStructPtr.2745" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2746" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2750" = type { %"class.blink::MemberBase.2751" }
%"class.blink::MemberBase.2751" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2752" = type { %"class.absl::optional_internal::optional_data.2753" }
%"class.absl::optional_internal::optional_data.2753" = type { %"class.absl::optional_internal::optional_data_base.2754" }
%"class.absl::optional_internal::optional_data_base.2754" = type { %"class.absl::optional_internal::optional_data_dtor_base.2755" }
%"class.absl::optional_internal::optional_data_dtor_base.2755" = type { i8, %union.anon.2756 }
%union.anon.2756 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.3361", %"class.blink::Member.3363", %"class.blink::Member.3365", %"class.blink::Member.3384", %"class.blink::Member.3386" }
%"class.blink::Member.3361" = type { %"class.blink::MemberBase.3362" }
%"class.blink::MemberBase.3362" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.941 }
%"class.blink::Member.3363" = type { %"class.blink::MemberBase.3364" }
%"class.blink::MemberBase.3364" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.3365" = type { %"class.blink::MemberBase.3366" }
%"class.blink::MemberBase.3366" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.3369", %"class.blink::HeapHashSet.3378" }
%"class.blink::HeapVector.3369" = type { %"class.WTF::Vector.3372" }
%"class.WTF::Vector.3372" = type { %"class.WTF::VectorBuffer.3373" }
%"class.WTF::VectorBuffer.3373" = type { %"class.WTF::VectorBufferBase.3374" }
%"class.WTF::VectorBufferBase.3374" = type { %"class.blink::Member.3375"*, i32, i32 }
%"class.blink::Member.3375" = type { %"class.blink::MemberBase.3376" }
%"class.blink::MemberBase.3376" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.3378" = type { %"class.WTF::HashSet.3381" }
%"class.WTF::HashSet.3381" = type { %"class.WTF::HashTable.3382" }
%"class.WTF::HashTable.3382" = type <{ %"class.blink::Member.3375"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3384" = type { %"class.blink::MemberBase.3385" }
%"class.blink::MemberBase.3385" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3386" = type { %"class.blink::MemberBase.3387" }
%"class.blink::MemberBase.3387" = type { %"class.blink::HeapHashSet.3388"* }
%"class.blink::HeapHashSet.3388" = type opaque
%"class.blink::ElementInternals" = type { %"class.blink::ScriptWrappable", %"class.blink::ListedElement.base", %"class.blink::Member.3203", %"class.blink::Member.3205", %"class.blink::Member.3205", i8, %"class.blink::Member.3207", %"class.blink::Member.342", %"class.blink::Member.3209", %"class.WTF::HashMap.3211", %"class.blink::HeapHashMap.3216" }
%"class.blink::Member.3203" = type { %"class.blink::MemberBase.3204" }
%"class.blink::MemberBase.3204" = type { %"class.blink::HTMLElement"* }
%"class.blink::Member.3205" = type { %"class.blink::MemberBase.3206" }
%"class.blink::MemberBase.3206" = type { %"class.blink::V8UnionFileOrFormDataOrUSVString"* }
%"class.blink::V8UnionFileOrFormDataOrUSVString" = type opaque
%"class.blink::Member.3207" = type { %"class.blink::MemberBase.3208" }
%"class.blink::MemberBase.3208" = type { %"class.blink::ValidityStateFlags"* }
%"class.blink::ValidityStateFlags" = type opaque
%"class.blink::Member.3209" = type { %"class.blink::MemberBase.3210" }
%"class.blink::MemberBase.3210" = type { %"class.blink::CustomStateSet"* }
%"class.blink::CustomStateSet" = type opaque
%"class.WTF::HashMap.3211" = type { %"class.WTF::HashTable.3212" }
%"class.WTF::HashTable.3212" = type <{ %"struct.WTF::KeyValuePair.3215"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3215" = type opaque
%"class.blink::HeapHashMap.3216" = type { %"class.WTF::HashMap.3219" }
%"class.WTF::HashMap.3219" = type { %"class.WTF::HashTable.3220" }
%"class.WTF::HashTable.3220" = type <{ %"struct.WTF::KeyValuePair.3222"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3222" = type opaque

$_ZN5blink11IsHTMLSpaceIDsEEbT_ = comdat any

@_ZN5blink20shadow_element_names23kPseudoFileUploadButtonE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink20shadow_element_names23kPseudoInputPlaceholderE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names8kSlotTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN3WTF11g_star_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10g_any_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink13CoreProbeSink16s_existingAgentsE = external local_unnamed_addr global %"struct.std::__1::atomic", align 4
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink10html_names10kOptionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kInputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kSelectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase40is_focusless_spatial_navigation_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZN5blink10html_names9kPopupTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase30is_html_popup_element_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase36is_html_select_menu_element_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink10html_names9kAudioTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kVideoTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kDialogTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15SelectorChecker5MatchERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"*, %"struct.blink::SelectorChecker::SelectorCheckingContext"* dereferenceable(56), %"struct.blink::SelectorChecker::MatchResult"* dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 11
  %5 = load %"class.blink::Element"*, %"class.blink::Element"** %4, align 8
  %6 = icmp eq %"class.blink::Element"* %5, null
  br i1 %6, label %13, label %7, !prof !2

7:                                                ; preds = %3
  %8 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1 to i32**
  %9 = load i32*, i32** %8, align 8
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 131072
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %7, %3
  %14 = tail call i32 @_ZNK5blink15SelectorChecker13MatchSelectorERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* dereferenceable(56) %1, %"struct.blink::SelectorChecker::MatchResult"* dereferenceable(1) %2)
  %15 = icmp eq i32 %14, 0
  br label %16

16:                                               ; preds = %7, %13
  %17 = phi i1 [ %15, %13 ], [ false, %7 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15SelectorChecker13MatchSelectorERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"*, %"struct.blink::SelectorChecker::SelectorCheckingContext"* dereferenceable(56), %"struct.blink::SelectorChecker::MatchResult"* dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::SelectorChecker::SelectorCheckingContext", align 8
  %5 = alloca %"struct.blink::SelectorChecker::MatchResult", align 1
  %6 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #7
  store i8 0, i8* %6, align 1
  %7 = call zeroext i1 @_ZNK5blink15SelectorChecker8CheckOneERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* dereferenceable(56) %1, %"struct.blink::SelectorChecker::MatchResult"* nonnull dereferenceable(1) %5)
  br i1 %7, label %8, label %90

8:                                                ; preds = %3
  %9 = load i8, i8* %6, align 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %2, i64 0, i32 0
  store i8 %9, i8* %12, align 1
  br label %13

13:                                               ; preds = %8, %11
  %14 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 0
  %15 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %14, align 8
  %16 = bitcast %"class.blink::CSSSelector"* %15 to i32*
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 131072
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %90

20:                                               ; preds = %13
  %21 = and i32 %17, 15
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %52, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 3
  %25 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %24, align 8
  %26 = icmp eq %"class.blink::ContainerNode"* %25, null
  %27 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %25, i64 0, i32 0
  br i1 %26, label %38, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %25, i64 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 512
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 1
  %35 = load %"class.blink::Element"*, %"class.blink::Element"** %34, align 8
  %36 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %27) #7
  %37 = icmp eq %"class.blink::Element"* %35, %36
  br i1 %37, label %90, label %38

38:                                               ; preds = %28, %23, %33
  %39 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 4
  %40 = load i8, i8* %39, align 8
  %41 = icmp eq i8 %40, 0
  %42 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %2, i64 0, i32 0
  %43 = load i8, i8* %42, align 1
  br i1 %41, label %46, label %44

44:                                               ; preds = %38
  %45 = icmp eq i8 %40, %43
  br i1 %45, label %46, label %90

46:                                               ; preds = %38, %44
  %47 = phi i8 [ %40, %44 ], [ %43, %38 ]
  %48 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %2, i64 0, i32 0
  store i8 0, i8* %48, align 1
  %49 = tail call i32 @_ZNK5blink15SelectorChecker16MatchForRelationERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* dereferenceable(56) %1, %"struct.blink::SelectorChecker::MatchResult"* dereferenceable(1) %2)
  %50 = icmp eq %"struct.blink::SelectorChecker::MatchResult"* %2, null
  br i1 %50, label %90, label %51

51:                                               ; preds = %46
  store i8 %47, i8* %48, align 1
  br label %90

52:                                               ; preds = %20
  %53 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %53) #7
  %54 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %53, i8* align 8 %54, i64 56, i1 false) #7
  %55 = load i32, i32* %16, align 8, !noalias !3
  %56 = and i32 %55, 131072
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %15, i64 1
  %59 = select i1 %57, %"class.blink::CSSSelector"* %58, %"class.blink::CSSSelector"* null
  %60 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 0
  store %"class.blink::CSSSelector"* %59, %"class.blink::CSSSelector"** %60, align 8, !alias.scope !3
  %61 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %2, i64 0, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp ne i8 %62, 0
  br i1 %63, label %64, label %71

64:                                               ; preds = %52
  %65 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 1
  %66 = load %"class.blink::CustomScrollbar"*, %"class.blink::CustomScrollbar"** %65, align 8
  %67 = icmp ne %"class.blink::CustomScrollbar"* %66, null
  %68 = or i8 %62, 1
  %69 = icmp eq i8 %68, 19
  %70 = or i1 %69, %67
  br label %71

71:                                               ; preds = %64, %52
  %72 = phi i1 [ false, %52 ], [ %70, %64 ]
  %73 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 7
  %74 = zext i1 %72 to i8
  store i8 %74, i8* %73, align 1
  %75 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 6
  %76 = load i8, i8* %75, align 2, !range !6
  %77 = icmp eq i8 %76, 0
  %78 = xor i1 %63, true
  %79 = or i1 %77, %78
  %80 = icmp eq i8 %62, 7
  %81 = or i1 %80, %79
  %82 = or i1 %72, %81
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 8
  %85 = zext i1 %80 to i8
  store i8 %85, i8* %84, align 4
  %86 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 5
  store i8 1, i8* %86, align 1
  %87 = call i32 @_ZNK5blink15SelectorChecker13MatchSelectorERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %4, %"struct.blink::SelectorChecker::MatchResult"* dereferenceable(1) %2) #7
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i32 [ %87, %83 ], [ 3, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %53) #7
  br label %90

90:                                               ; preds = %13, %51, %46, %33, %44, %88, %3
  %91 = phi i32 [ 1, %3 ], [ 0, %13 ], [ 3, %33 ], [ 3, %44 ], [ %89, %88 ], [ %49, %46 ], [ %49, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #7
  ret i32 %91
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15SelectorChecker8CheckOneERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"*, %"struct.blink::SelectorChecker::SelectorCheckingContext"* dereferenceable(56), %"struct.blink::SelectorChecker::MatchResult"* nocapture dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 1
  %6 = load %"class.blink::Element"*, %"class.blink::Element"** %5, align 8
  %7 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 0
  %8 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 3
  %10 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %9, align 8
  %11 = icmp eq %"class.blink::ContainerNode"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0
  %14 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %13) #7
  %15 = icmp eq %"class.blink::Element"* %14, %6
  br i1 %15, label %16, label %28

16:                                               ; preds = %12
  %17 = bitcast %"class.blink::CSSSelector"* %8 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = lshr i32 %18, 8
  %20 = trunc i32 %19 to i8
  switch i8 %20, label %21 [
    i8 96, label %28
    i8 95, label %28
    i8 57, label %28
  ]

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 9
  %23 = load i8, i8* %22, align 1, !range !6
  %24 = icmp ne i8 %23, 0
  %25 = and i32 %18, 240
  %26 = icmp eq i32 %25, 80
  %27 = or i1 %26, %24
  br i1 %27, label %28, label %364

28:                                               ; preds = %21, %16, %16, %16, %3, %12
  %29 = bitcast %"class.blink::CSSSelector"* %8 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 4
  %32 = and i32 %31, 15
  switch i32 %32, label %364 [
    i32 1, label %33
    i32 3, label %109
    i32 2, label %154
    i32 7, label %177
    i32 8, label %177
    i32 9, label %177
    i32 10, label %177
    i32 11, label %177
    i32 12, label %177
    i32 13, label %177
    i32 4, label %360
    i32 5, label %362
  ]

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %8, i64 0, i32 1
  %35 = bitcast %"union.blink::CSSSelector::DataUnion"* %34 to %"class.blink::QualifiedName"*
  %36 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10g_any_nameE, align 8
  %37 = bitcast %"union.blink::CSSSelector::DataUnion"* %34 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %36, i64 0, i32 0, i32 0
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %41 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %40
  br i1 %41, label %364, label %42

42:                                               ; preds = %33
  %43 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %43, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %45, %47
  br i1 %48, label %95, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %6, i64 0, i32 2, i32 0, i32 0
  %51 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 3, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %45, %53
  br i1 %54, label %95, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %6, i64 0, i32 0, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, 48
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %364, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %6, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %62 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %62, i64 0, i32 2, i32 0, i32 0
  %64 = load %"class.blink::Document"*, %"class.blink::Document"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %64, i64 0, i32 107
  %66 = load i8, i8* %65, align 8
  %67 = and i8 %66, 1
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %364, label %69

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 5
  %71 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %74, label %78

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %6, i64 0, i32 2
  %76 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13QualifiedName18LocalNameUpperSlowEv(%"class.blink::QualifiedName"* %75) #7
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  br label %78

78:                                               ; preds = %74, %69
  %79 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %77, %74 ], [ %38, %69 ]
  %80 = phi %"class.WTF::AtomicString"* [ %76, %74 ], [ %70, %69 ]
  %81 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %79, i64 0, i32 5, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %84, label %88

84:                                               ; preds = %78
  %85 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13QualifiedName18LocalNameUpperSlowEv(%"class.blink::QualifiedName"* %35) #7
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  br label %88

88:                                               ; preds = %84, %78
  %89 = phi %"class.WTF::StringImpl"* [ %87, %84 ], [ %82, %78 ]
  %90 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %80, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, %89
  br i1 %92, label %93, label %364

93:                                               ; preds = %88
  %94 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  br label %95

95:                                               ; preds = %93, %49, %42
  %96 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %94, %93 ], [ %38, %49 ], [ %38, %42 ]
  %97 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  %98 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %96, i64 0, i32 4, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %97, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %99, %101
  br i1 %102, label %364, label %103

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %6, i64 0, i32 2, i32 0, i32 0
  %105 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %105, i64 0, i32 4, i32 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %99, %107
  br label %364

109:                                              ; preds = %28
  %110 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %6, i64 0, i32 3, i32 0, i32 0
  %111 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %110, align 8
  %112 = icmp eq %"class.blink::ElementData"* %111, null
  br i1 %112, label %364, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %111, i64 0, i32 2, i32 0, i32 0
  %115 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %114, align 8
  %116 = icmp eq %"class.blink::SpaceSplitString::Data"* %115, null
  br i1 %116, label %364, label %117

117:                                              ; preds = %113
  %118 = and i32 %30, 262144
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %8, i64 0, i32 1
  br i1 %119, label %125, label %121

121:                                              ; preds = %117
  %122 = bitcast %"union.blink::CSSSelector::DataUnion"* %120 to %"struct.blink::CSSSelector::RareData"**
  %123 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %122, align 8
  %124 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %123, i64 0, i32 1
  br label %127

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %120, i64 0, i32 0
  br label %127

127:                                              ; preds = %125, %121
  %128 = phi %"class.WTF::AtomicString"* [ %124, %121 ], [ %126, %125 ]
  %129 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %115, i64 0, i32 2, i32 0, i32 0, i32 0
  %130 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %115, i64 0, i32 2, i32 0, i32 0, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %130, i64 %133
  %135 = icmp eq i32 %132, 0
  br i1 %135, label %364, label %136

136:                                              ; preds = %127
  %137 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %128, i64 0, i32 0, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  br label %139

139:                                              ; preds = %144, %136
  %140 = phi %"class.WTF::AtomicString"* [ %130, %136 ], [ %145, %144 ]
  %141 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %140, i64 0, i32 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, %138
  br i1 %143, label %147, label %144

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %140, i64 1
  %146 = icmp ult %"class.WTF::AtomicString"* %145, %134
  br i1 %146, label %139, label %364

147:                                              ; preds = %139
  %148 = ptrtoint %"class.WTF::AtomicString"* %140 to i64
  %149 = ptrtoint %"class.WTF::AtomicString"* %130 to i64
  %150 = sub i64 %148, %149
  %151 = lshr exact i64 %150, 3
  %152 = trunc i64 %151 to i32
  %153 = icmp ne i32 %152, -1
  br label %364

154:                                              ; preds = %28
  %155 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %6, i64 0, i32 3, i32 0, i32 0
  %156 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %155, align 8
  %157 = icmp eq %"class.blink::ElementData"* %156, null
  br i1 %157, label %364, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %156, i64 0, i32 3, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %364, label %162

162:                                              ; preds = %158
  %163 = and i32 %30, 262144
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %8, i64 0, i32 1
  br i1 %164, label %170, label %166

166:                                              ; preds = %162
  %167 = bitcast %"union.blink::CSSSelector::DataUnion"* %165 to %"struct.blink::CSSSelector::RareData"**
  %168 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %167, align 8
  %169 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %168, i64 0, i32 1
  br label %172

170:                                              ; preds = %162
  %171 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %165, i64 0, i32 0
  br label %172

172:                                              ; preds = %166, %170
  %173 = phi %"class.WTF::AtomicString"* [ %169, %166 ], [ %171, %170 ]
  %174 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %173, i64 0, i32 0, i32 0, i32 0
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %160, %175
  br label %364

177:                                              ; preds = %28, %28, %28, %28, %28, %28, %28
  %178 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %8, i64 0, i32 1
  %179 = bitcast %"union.blink::CSSSelector::DataUnion"* %178 to %"struct.blink::CSSSelector::RareData"**
  %180 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %179, align 8
  %181 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %180, i64 0, i32 4
  %182 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %181, i64 0, i32 0, i32 0
  %183 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %183, i64 0, i32 3
  %185 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %185) #7
  %186 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %184, i64 0, i32 0, i32 0, i32 0
  %187 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %186, align 8
  %188 = icmp eq %"class.WTF::StringImpl"* %187, null
  br i1 %188, label %189, label %193

189:                                              ; preds = %177
  %190 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %190, align 8
  %191 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %192 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %191, i64* %192, align 8
  br label %200

193:                                              ; preds = %177
  %194 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %187, %"class.WTF::StringImpl"** %194, align 8
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 1
  %198 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %199 = bitcast i8** %198 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %197, %"class.WTF::StringImpl"** %199, align 8
  br label %200

200:                                              ; preds = %193, %189
  %201 = phi i32 [ %196, %193 ], [ 0, %189 ]
  %202 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %201, i32* %202, align 8
  %203 = call i64 @_ZNK5blink7Element24WeakLowercaseIfNecessaryERKN3WTF10StringViewE(%"class.blink::Element"* %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #7
  call void @_ZNK5blink7Element26SynchronizeAttributeHintedERKN3WTF12AtomicStringENS1_17AtomicStringTable10WeakResultE(%"class.blink::Element"* %6, %"class.WTF::AtomicString"* dereferenceable(8) %184, i64 %203) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %185) #7
  %204 = load i32, i32* %29, align 8
  %205 = and i32 %204, 262144
  %206 = icmp eq i32 %205, 0
  %207 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %179, align 8
  %208 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %207, i64 0, i32 1
  %209 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %178, i64 0, i32 0
  %210 = select i1 %206, %"class.WTF::AtomicString"* %209, %"class.WTF::AtomicString"* %208
  %211 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %207, i64 0, i32 3, i32 0, i32 0
  %212 = load i32, i32* %211, align 8
  %213 = icmp eq i32 %212, 1
  %214 = zext i1 %213 to i32
  %215 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %6, i64 0, i32 3, i32 0, i32 0
  %216 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %215, align 8
  %217 = icmp eq %"class.blink::ElementData"* %216, null
  br i1 %217, label %364, label %218

218:                                              ; preds = %200
  %219 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %216, i64 0, i32 0, i32 0, i32 0
  %220 = load i32, i32* %219, align 4
  %221 = and i32 %220, 1
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %230, label %223

223:                                              ; preds = %218
  %224 = bitcast %"class.blink::ElementData"* %216 to %"class.blink::UniqueElementData"*
  %225 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %216, i64 1, i32 1
  %226 = bitcast %"class.blink::Member.353"* %225 to %"class.blink::Attribute"**
  %227 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %226, align 8
  %228 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %224, i64 0, i32 2, i32 0, i32 0, i32 2
  %229 = load i32, i32* %228, align 4
  br label %235

230:                                              ; preds = %218
  %231 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %216, i64 1
  %232 = bitcast %"class.blink::ElementData"* %231 to %"class.blink::Attribute"*
  %233 = lshr i32 %220, 1
  %234 = and i32 %233, 268435455
  br label %235

235:                                              ; preds = %230, %223
  %236 = phi i32 [ %234, %230 ], [ %229, %223 ]
  %237 = phi %"class.blink::Attribute"* [ %232, %230 ], [ %227, %223 ]
  %238 = zext i32 %236 to i64
  %239 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %237, i64 %238
  %240 = icmp eq i32 %236, 0
  br i1 %240, label %364, label %241

241:                                              ; preds = %235
  %242 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  %243 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %242, i64 0, i32 0, i32 0, i32 0
  %244 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %6, i64 0, i32 0, i32 0, i32 1
  %245 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %6, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  br label %246

246:                                              ; preds = %357, %241
  %247 = phi %"class.blink::Attribute"* [ %237, %241 ], [ %358, %357 ]
  %248 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %182, align 8
  %249 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %247, i64 0, i32 0, i32 0, i32 0
  %250 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %249, align 8
  %251 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %248, i64 0, i32 3, i32 0, i32 0, i32 0
  %252 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %251, align 8
  %253 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %250, i64 0, i32 3, i32 0, i32 0, i32 0
  %254 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %253, align 8
  %255 = icmp eq %"class.WTF::StringImpl"* %252, %254
  br i1 %255, label %256, label %267

256:                                              ; preds = %246
  %257 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %248, i64 0, i32 2, i32 0, i32 0, i32 0
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %243, align 8
  %260 = icmp eq %"class.WTF::StringImpl"* %258, %259
  br i1 %260, label %316, label %261

261:                                              ; preds = %256
  %262 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %248, i64 0, i32 4, i32 0, i32 0, i32 0
  %263 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %262, align 8
  %264 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %250, i64 0, i32 4, i32 0, i32 0, i32 0
  %265 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %264, align 8
  %266 = icmp eq %"class.WTF::StringImpl"* %263, %265
  br i1 %266, label %316, label %267

267:                                              ; preds = %261, %246
  %268 = load i32, i32* %244, align 8
  %269 = and i32 %268, 48
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %357, label %271

271:                                              ; preds = %267
  %272 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %245, align 8
  %273 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %272, i64 0, i32 2, i32 0, i32 0
  %274 = load %"class.blink::Document"*, %"class.blink::Document"** %273, align 8
  %275 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %274, i64 0, i32 107
  %276 = load i8, i8* %275, align 8
  %277 = and i8 %276, 1
  %278 = icmp eq i8 %277, 0
  br i1 %278, label %357, label %279

279:                                              ; preds = %271
  %280 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %248, i64 0, i32 5
  %281 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %280, i64 0, i32 0, i32 0, i32 0
  %282 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %281, align 8
  %283 = icmp eq %"class.WTF::StringImpl"* %282, null
  br i1 %283, label %284, label %287

284:                                              ; preds = %279
  %285 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13QualifiedName18LocalNameUpperSlowEv(%"class.blink::QualifiedName"* %181) #7
  %286 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %249, align 8
  br label %287

287:                                              ; preds = %284, %279
  %288 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %286, %284 ], [ %250, %279 ]
  %289 = phi %"class.WTF::AtomicString"* [ %285, %284 ], [ %280, %279 ]
  %290 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %288, i64 0, i32 5, i32 0, i32 0, i32 0
  %291 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %290, align 8
  %292 = icmp eq %"class.WTF::StringImpl"* %291, null
  br i1 %292, label %293, label %298

293:                                              ; preds = %287
  %294 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %247, i64 0, i32 0
  %295 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13QualifiedName18LocalNameUpperSlowEv(%"class.blink::QualifiedName"* %294) #7
  %296 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %295, i64 0, i32 0, i32 0, i32 0
  %297 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %296, align 8
  br label %298

298:                                              ; preds = %293, %287
  %299 = phi %"class.WTF::StringImpl"* [ %297, %293 ], [ %291, %287 ]
  %300 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %289, i64 0, i32 0, i32 0, i32 0
  %301 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %300, align 8
  %302 = icmp eq %"class.WTF::StringImpl"* %301, %299
  br i1 %302, label %303, label %357

303:                                              ; preds = %298
  %304 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %182, align 8
  %305 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %304, i64 0, i32 2, i32 0, i32 0, i32 0
  %306 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %305, align 8
  %307 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %243, align 8
  %308 = icmp eq %"class.WTF::StringImpl"* %306, %307
  br i1 %308, label %316, label %309

309:                                              ; preds = %303
  %310 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %249, align 8
  %311 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %304, i64 0, i32 4, i32 0, i32 0, i32 0
  %312 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %311, align 8
  %313 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %310, i64 0, i32 4, i32 0, i32 0, i32 0
  %314 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %313, align 8
  %315 = icmp eq %"class.WTF::StringImpl"* %312, %314
  br i1 %315, label %316, label %357

316:                                              ; preds = %309, %303, %261, %256
  %317 = call fastcc zeroext i1 @_ZN5blinkL21AttributeValueMatchesERKNS_9AttributeENS_11CSSSelector9MatchTypeERKN3WTF12AtomicStringENS5_19TextCaseSensitivityE(%"class.blink::Attribute"* dereferenceable(16) %247, i32 %32, %"class.WTF::AtomicString"* dereferenceable(8) %210, i32 %214) #7
  br i1 %317, label %364, label %318

318:                                              ; preds = %316
  br i1 %213, label %319, label %325

319:                                              ; preds = %318
  %320 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %182, align 8
  %321 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %320, i64 0, i32 4, i32 0, i32 0, i32 0
  %322 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %321, align 8
  %323 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %243, align 8
  %324 = icmp eq %"class.WTF::StringImpl"* %322, %323
  br i1 %324, label %357, label %364

325:                                              ; preds = %318
  %326 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %245, align 8
  %327 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %326, i64 0, i32 2, i32 0, i32 0
  %328 = load %"class.blink::Document"*, %"class.blink::Document"** %327, align 8
  %329 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %328, i64 0, i32 107
  %330 = load i8, i8* %329, align 8
  %331 = and i8 %330, 1
  %332 = icmp eq i8 %331, 0
  br i1 %332, label %351, label %333

333:                                              ; preds = %325
  %334 = call zeroext i1 @_ZN5blink12HTMLDocument24IsCaseSensitiveAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8) %181) #7
  br i1 %334, label %351, label %335

335:                                              ; preds = %333
  %336 = call fastcc zeroext i1 @_ZN5blinkL21AttributeValueMatchesERKNS_9AttributeENS_11CSSSelector9MatchTypeERKN3WTF12AtomicStringENS5_19TextCaseSensitivityE(%"class.blink::Attribute"* dereferenceable(16) %247, i32 %32, %"class.WTF::AtomicString"* dereferenceable(8) %210, i32 1) #7
  br i1 %336, label %337, label %351

337:                                              ; preds = %335
  %338 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %179, align 8
  %339 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %338, i64 0, i32 3, i32 0, i32 0
  %340 = load i32, i32* %339, align 8
  %341 = icmp eq i32 %340, 2
  br i1 %341, label %364, label %342

342:                                              ; preds = %337
  %343 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %245, align 8
  %344 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %343, i64 0, i32 2, i32 0, i32 0
  %345 = load %"class.blink::Document"*, %"class.blink::Document"** %344, align 8
  %346 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %345, i64 0, i32 2
  %347 = bitcast %"class.blink::UseCounter"* %346 to void (%"class.blink::UseCounter"*, i32)***
  %348 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %347, align 8
  %349 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %348, i64 3
  %350 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %349, align 8
  call void %350(%"class.blink::UseCounter"* %346, i32 244) #7
  br label %364

351:                                              ; preds = %335, %333, %325
  %352 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %182, align 8
  %353 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %352, i64 0, i32 4, i32 0, i32 0, i32 0
  %354 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %353, align 8
  %355 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %243, align 8
  %356 = icmp eq %"class.WTF::StringImpl"* %354, %355
  br i1 %356, label %357, label %364

357:                                              ; preds = %351, %319, %309, %298, %271, %267
  %358 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %247, i64 1
  %359 = icmp eq %"class.blink::Attribute"* %358, %239
  br i1 %359, label %364, label %246

360:                                              ; preds = %28
  %361 = tail call zeroext i1 @_ZNK5blink15SelectorChecker16CheckPseudoClassERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* dereferenceable(56) %1, %"struct.blink::SelectorChecker::MatchResult"* dereferenceable(1) %2)
  br label %364

362:                                              ; preds = %28
  %363 = tail call zeroext i1 @_ZNK5blink15SelectorChecker18CheckPseudoElementERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* dereferenceable(56) %1, %"struct.blink::SelectorChecker::MatchResult"* dereferenceable(1) %2)
  br label %364

364:                                              ; preds = %357, %351, %319, %316, %144, %21, %113, %158, %154, %109, %342, %337, %235, %200, %147, %127, %103, %95, %88, %60, %55, %33, %28, %172, %362, %360
  %365 = phi i1 [ %363, %362 ], [ %361, %360 ], [ false, %113 ], [ false, %158 ], [ %176, %172 ], [ false, %28 ], [ true, %33 ], [ false, %60 ], [ false, %55 ], [ false, %88 ], [ true, %95 ], [ %108, %103 ], [ %153, %147 ], [ false, %127 ], [ false, %337 ], [ true, %342 ], [ false, %235 ], [ false, %200 ], [ false, %109 ], [ false, %154 ], [ false, %21 ], [ false, %144 ], [ false, %319 ], [ false, %351 ], [ true, %316 ], [ false, %357 ]
  ret i1 %365
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15SelectorChecker16MatchForRelationERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"*, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nocapture readonly dereferenceable(56), %"struct.blink::SelectorChecker::MatchResult"* dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::SelectorChecker::SelectorCheckingContext", align 8
  %5 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #7
  %6 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %6, i64 56, i1 false) #7
  %7 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 0
  %8 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %7, align 8, !noalias !7
  %9 = bitcast %"class.blink::CSSSelector"* %8 to i32*
  %10 = load i32, i32* %9, align 8, !noalias !7
  %11 = and i32 %10, 131072
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %8, i64 1
  %14 = select i1 %12, %"class.blink::CSSSelector"* %13, %"class.blink::CSSSelector"* null
  %15 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 0
  store %"class.blink::CSSSelector"* %14, %"class.blink::CSSSelector"** %15, align 8, !alias.scope !7
  %16 = load i32, i32* %9, align 8
  %17 = and i32 %16, 15
  %18 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 5
  %19 = load i8, i8* %18, align 1, !range !6
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 12
  %23 = load i8, i8* %22, align 8, !range !6
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 1
  %27 = bitcast %"class.blink::Element"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = inttoptr i64 %28 to %"class.blink::Node"*
  br label %44

30:                                               ; preds = %21, %3
  %31 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 1
  %32 = bitcast %"class.blink::Element"** %31 to %"class.blink::Node"**
  %33 = load %"class.blink::Node"*, %"class.blink::Node"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 64
  %37 = icmp ne i32 %36, 0
  %38 = add nsw i32 %17, -1
  %39 = icmp ugt i32 %38, 1
  %40 = or i1 %39, %37
  %41 = ptrtoint %"class.blink::Node"* %33 to i64
  br i1 %40, label %42, label %44

42:                                               ; preds = %30
  %43 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 13
  store i8 0, i8* %43, align 1
  br label %44

44:                                               ; preds = %25, %30, %42
  %45 = phi %"class.blink::Node"* [ %29, %25 ], [ %33, %30 ], [ %33, %42 ]
  %46 = phi i64 [ %28, %25 ], [ %41, %30 ], [ %41, %42 ]
  %47 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 6
  store i8 0, i8* %47, align 2
  %48 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 5
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 1
  %50 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 2
  %51 = bitcast %"class.blink::Element"** %50 to i64*
  store i64 %46, i64* %51, align 8
  %52 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 4
  store i8 0, i8* %52, align 8
  switch i32 %17, label %400 [
    i32 1, label %58
    i32 2, label %162
    i32 3, label %211
    i32 4, label %249
    i32 5, label %302
    i32 6, label %335
    i32 7, label %53
  ]

53:                                               ; preds = %44
  %54 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 1
  %55 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 3
  %56 = bitcast %"class.blink::ContainerNode"** %55 to %"class.blink::Node"**
  %57 = load %"class.blink::Element"*, %"class.blink::Element"** %54, align 8
  br label %384

58:                                               ; preds = %44
  %59 = bitcast %"class.blink::CSSSelector"* %14 to i32*
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, 196352
  %62 = icmp eq i32 %61, 145664
  br i1 %62, label %63, label %71

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 3
  %65 = bitcast %"class.blink::ContainerNode"** %64 to %"class.blink::Node"**
  %66 = load %"class.blink::Node"*, %"class.blink::Node"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %66, i64 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = and i32 %68, 12
  %70 = icmp eq i32 %69, 8
  br i1 %70, label %400, label %71

71:                                               ; preds = %63, %58
  %72 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 3
  %73 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %72, align 8
  %74 = icmp eq %"class.blink::ContainerNode"* %73, null
  %75 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 1
  %76 = bitcast %"class.blink::Element"** %75 to %"class.blink::Node"**
  %77 = load %"class.blink::Node"*, %"class.blink::Node"** %76, align 8
  br i1 %74, label %90, label %78

78:                                               ; preds = %71
  %79 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %77) #7
  %80 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %79, i64 0, i32 0, i32 0
  %81 = icmp eq %"class.blink::ContainerNode"* %73, %80
  br i1 %81, label %88, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %73, i64 0, i32 0, i32 3, i32 0, i32 0
  %84 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %77, i64 0, i32 3, i32 0, i32 0
  %86 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %85, align 8
  %87 = icmp eq %"class.blink::TreeScope"* %84, %86
  br i1 %87, label %88, label %90

88:                                               ; preds = %78, %82
  %89 = tail call %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"* %77) #7
  br label %100

90:                                               ; preds = %82, %71
  %91 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %77) #7
  %92 = icmp eq %"class.blink::ContainerNode"* %91, null
  br i1 %92, label %99, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %91, i64 0, i32 0, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = and i32 %95, 12
  %97 = icmp eq i32 %96, 0
  %98 = bitcast %"class.blink::ContainerNode"* %91 to %"class.blink::Element"*
  br i1 %97, label %100, label %99

99:                                               ; preds = %93, %90
  store %"class.blink::Element"* null, %"class.blink::Element"** %75, align 8
  br label %400

100:                                              ; preds = %93, %88
  %101 = phi %"class.blink::Element"* [ %89, %88 ], [ %98, %93 ]
  store %"class.blink::Element"* %101, %"class.blink::Element"** %75, align 8
  %102 = icmp eq %"class.blink::Element"* %101, null
  br i1 %102, label %400, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 13
  %105 = bitcast %"class.blink::ContainerNode"** %72 to %"class.blink::Node"**
  br label %106

106:                                              ; preds = %103, %159
  %107 = call i32 @_ZNK5blink15SelectorChecker13MatchSelectorERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %4, %"struct.blink::SelectorChecker::MatchResult"* dereferenceable(1) %2)
  switch i32 %107, label %108 [
    i32 3, label %400
    i32 0, label %400
  ]

108:                                              ; preds = %106
  %109 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %72, align 8
  %110 = icmp eq %"class.blink::ContainerNode"* %109, null
  %111 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %109, i64 0, i32 0
  br i1 %110, label %121, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %109, i64 0, i32 0, i32 1
  %114 = load i32, i32* %113, align 8
  %115 = and i32 %114, 512
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %112
  %118 = load %"class.blink::Element"*, %"class.blink::Element"** %75, align 8
  %119 = call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %111) #7
  %120 = icmp eq %"class.blink::Element"* %118, %119
  br i1 %120, label %400, label %121

121:                                              ; preds = %112, %108, %117
  %122 = load %"class.blink::Node"*, %"class.blink::Node"** %76, align 8
  %123 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %122, i64 0, i32 1
  %124 = load i32, i32* %123, align 8
  %125 = and i32 %124, 64
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %128, label %127

127:                                              ; preds = %121
  store i8 0, i8* %104, align 1
  br label %128

128:                                              ; preds = %121, %127
  %129 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %72, align 8
  %130 = icmp eq %"class.blink::ContainerNode"* %129, null
  br i1 %130, label %148, label %131

131:                                              ; preds = %128
  %132 = call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %122) #7
  %133 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %132, i64 0, i32 0, i32 0
  %134 = icmp eq %"class.blink::ContainerNode"* %129, %133
  br i1 %134, label %135, label %137

135:                                              ; preds = %131
  %136 = load %"class.blink::Node"*, %"class.blink::Node"** %76, align 8
  br label %145

137:                                              ; preds = %131
  %138 = load %"class.blink::Node"*, %"class.blink::Node"** %105, align 8
  %139 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %138, i64 0, i32 3, i32 0, i32 0
  %140 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %139, align 8
  %141 = load %"class.blink::Node"*, %"class.blink::Node"** %76, align 8
  %142 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %141, i64 0, i32 3, i32 0, i32 0
  %143 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %142, align 8
  %144 = icmp eq %"class.blink::TreeScope"* %140, %143
  br i1 %144, label %145, label %148

145:                                              ; preds = %137, %135
  %146 = phi %"class.blink::Node"* [ %136, %135 ], [ %141, %137 ]
  %147 = call %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"* %146) #7
  br label %159

148:                                              ; preds = %137, %128
  %149 = phi %"class.blink::Node"* [ %141, %137 ], [ %122, %128 ]
  %150 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %149) #7
  %151 = icmp eq %"class.blink::ContainerNode"* %150, null
  br i1 %151, label %158, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %150, i64 0, i32 0, i32 1
  %154 = load i32, i32* %153, align 8
  %155 = and i32 %154, 12
  %156 = icmp eq i32 %155, 0
  %157 = bitcast %"class.blink::ContainerNode"* %150 to %"class.blink::Element"*
  br i1 %156, label %159, label %158

158:                                              ; preds = %152, %148
  store %"class.blink::Element"* null, %"class.blink::Element"** %75, align 8
  br label %400

159:                                              ; preds = %152, %145
  %160 = phi %"class.blink::Element"* [ %147, %145 ], [ %157, %152 ]
  store %"class.blink::Element"* %160, %"class.blink::Element"** %75, align 8
  %161 = icmp eq %"class.blink::Element"* %160, null
  br i1 %161, label %400, label %106

162:                                              ; preds = %44
  %163 = bitcast %"class.blink::CSSSelector"* %14 to i32*
  %164 = load i32, i32* %163, align 8
  %165 = and i32 %164, 196352
  %166 = icmp eq i32 %165, 145664
  br i1 %166, label %167, label %177

167:                                              ; preds = %162
  %168 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %45) #7
  %169 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 3
  %170 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %169, align 8
  %171 = icmp eq %"class.blink::ContainerNode"* %168, %170
  br i1 %171, label %172, label %177

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %168, i64 0, i32 0, i32 1
  %174 = load i32, i32* %173, align 8
  %175 = and i32 %174, 12
  %176 = icmp eq i32 %175, 8
  br i1 %176, label %400, label %177

177:                                              ; preds = %172, %167, %162
  %178 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 3
  %179 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %178, align 8
  %180 = icmp eq %"class.blink::ContainerNode"* %179, null
  %181 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 1
  %182 = bitcast %"class.blink::Element"** %181 to %"class.blink::Node"**
  %183 = load %"class.blink::Node"*, %"class.blink::Node"** %182, align 8
  br i1 %180, label %196, label %184

184:                                              ; preds = %177
  %185 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %183) #7
  %186 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %185, i64 0, i32 0, i32 0
  %187 = icmp eq %"class.blink::ContainerNode"* %179, %186
  br i1 %187, label %194, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %179, i64 0, i32 0, i32 3, i32 0, i32 0
  %190 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %183, i64 0, i32 3, i32 0, i32 0
  %192 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %191, align 8
  %193 = icmp eq %"class.blink::TreeScope"* %190, %192
  br i1 %193, label %194, label %196

194:                                              ; preds = %184, %188
  %195 = tail call %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"* %183) #7
  br label %206

196:                                              ; preds = %188, %177
  %197 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %183) #7
  %198 = icmp eq %"class.blink::ContainerNode"* %197, null
  br i1 %198, label %205, label %199

199:                                              ; preds = %196
  %200 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %197, i64 0, i32 0, i32 1
  %201 = load i32, i32* %200, align 8
  %202 = and i32 %201, 12
  %203 = icmp eq i32 %202, 0
  %204 = bitcast %"class.blink::ContainerNode"* %197 to %"class.blink::Element"*
  br i1 %203, label %206, label %205

205:                                              ; preds = %199, %196
  store %"class.blink::Element"* null, %"class.blink::Element"** %181, align 8
  br label %400

206:                                              ; preds = %199, %194
  %207 = phi %"class.blink::Element"* [ %195, %194 ], [ %204, %199 ]
  store %"class.blink::Element"* %207, %"class.blink::Element"** %181, align 8
  %208 = icmp eq %"class.blink::Element"* %207, null
  br i1 %208, label %400, label %209

209:                                              ; preds = %206
  %210 = call i32 @_ZNK5blink15SelectorChecker13MatchSelectorERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %4, %"struct.blink::SelectorChecker::MatchResult"* dereferenceable(1) %2)
  br label %400

211:                                              ; preds = %44
  %212 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 5
  %213 = load i32, i32* %212, align 4
  %214 = icmp eq i32 %213, 0
  %215 = bitcast %"class.blink::Element"** %49 to %"class.blink::Node"**
  br i1 %214, label %216, label %230

216:                                              ; preds = %211
  %217 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %45) #7
  %218 = icmp eq %"class.blink::ContainerNode"* %217, null
  br i1 %218, label %230, label %219

219:                                              ; preds = %216
  %220 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %217, i64 0, i32 0, i32 1
  %221 = load i32, i32* %220, align 8
  %222 = and i32 %221, 12
  switch i32 %222, label %230 [
    i32 0, label %229
    i32 8, label %223
  ]

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %217, i64 0, i32 0, i32 3, i32 0, i32 0
  %225 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %224, align 8
  %226 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %225, i64 0, i32 1, i32 0, i32 0
  %227 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %226, align 8
  %228 = icmp eq %"class.blink::ContainerNode"* %227, %217
  br i1 %228, label %229, label %230

229:                                              ; preds = %223, %219
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* nonnull %217, i32 64) #7
  br label %230

230:                                              ; preds = %211, %219, %216, %223, %229
  %231 = load %"class.blink::Node"*, %"class.blink::Node"** %215, align 8
  br label %232

232:                                              ; preds = %240, %230
  %233 = phi %"class.blink::Node"* [ %231, %230 ], [ %235, %240 ]
  %234 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %233, i64 0, i32 4, i32 0, i32 0
  %235 = load %"class.blink::Node"*, %"class.blink::Node"** %234, align 8
  %236 = icmp eq %"class.blink::Node"* %235, null
  br i1 %236, label %237, label %240

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 1
  %239 = bitcast %"class.blink::Element"** %238 to %"class.blink::Node"**
  store %"class.blink::Node"* null, %"class.blink::Node"** %239, align 8
  br label %400

240:                                              ; preds = %232
  %241 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %235, i64 0, i32 1
  %242 = load i32, i32* %241, align 8
  %243 = and i32 %242, 12
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %232

245:                                              ; preds = %240
  %246 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 1
  %247 = bitcast %"class.blink::Element"** %246 to %"class.blink::Node"**
  store %"class.blink::Node"* %235, %"class.blink::Node"** %247, align 8
  %248 = call i32 @_ZNK5blink15SelectorChecker13MatchSelectorERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %4, %"struct.blink::SelectorChecker::MatchResult"* dereferenceable(1) %2)
  br label %400

249:                                              ; preds = %44
  %250 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 5
  %251 = load i32, i32* %250, align 4
  %252 = icmp eq i32 %251, 0
  %253 = bitcast %"class.blink::Element"** %49 to %"class.blink::Node"**
  br i1 %252, label %254, label %268

254:                                              ; preds = %249
  %255 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %45) #7
  %256 = icmp eq %"class.blink::ContainerNode"* %255, null
  br i1 %256, label %268, label %257

257:                                              ; preds = %254
  %258 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %255, i64 0, i32 0, i32 1
  %259 = load i32, i32* %258, align 8
  %260 = and i32 %259, 12
  switch i32 %260, label %268 [
    i32 0, label %267
    i32 8, label %261
  ]

261:                                              ; preds = %257
  %262 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %255, i64 0, i32 0, i32 3, i32 0, i32 0
  %263 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %262, align 8
  %264 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %263, i64 0, i32 1, i32 0, i32 0
  %265 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %264, align 8
  %266 = icmp eq %"class.blink::ContainerNode"* %265, %255
  br i1 %266, label %267, label %268

267:                                              ; preds = %261, %257
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* nonnull %255, i32 128) #7
  br label %268

268:                                              ; preds = %249, %257, %254, %261, %267
  %269 = load %"class.blink::Node"*, %"class.blink::Node"** %253, align 8
  br label %270

270:                                              ; preds = %278, %268
  %271 = phi %"class.blink::Node"* [ %269, %268 ], [ %273, %278 ]
  %272 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %271, i64 0, i32 4, i32 0, i32 0
  %273 = load %"class.blink::Node"*, %"class.blink::Node"** %272, align 8
  %274 = icmp eq %"class.blink::Node"* %273, null
  br i1 %274, label %275, label %278

275:                                              ; preds = %270
  %276 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 1
  %277 = bitcast %"class.blink::Element"** %276 to %"class.blink::Node"**
  store %"class.blink::Node"* null, %"class.blink::Node"** %277, align 8
  br label %400

278:                                              ; preds = %270
  %279 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %273, i64 0, i32 1
  %280 = load i32, i32* %279, align 8
  %281 = and i32 %280, 12
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %270

283:                                              ; preds = %278
  %284 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 1
  %285 = bitcast %"class.blink::Element"** %284 to %"class.blink::Node"**
  br label %286

286:                                              ; preds = %297, %283
  %287 = phi %"class.blink::Node"* [ %273, %283 ], [ %294, %297 ]
  store %"class.blink::Node"* %287, %"class.blink::Node"** %285, align 8
  %288 = call i32 @_ZNK5blink15SelectorChecker13MatchSelectorERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %4, %"struct.blink::SelectorChecker::MatchResult"* dereferenceable(1) %2)
  switch i32 %288, label %289 [
    i32 3, label %400
    i32 2, label %400
    i32 0, label %400
  ]

289:                                              ; preds = %286
  %290 = load %"class.blink::Node"*, %"class.blink::Node"** %285, align 8
  br label %291

291:                                              ; preds = %297, %289
  %292 = phi %"class.blink::Node"* [ %290, %289 ], [ %294, %297 ]
  %293 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %292, i64 0, i32 4, i32 0, i32 0
  %294 = load %"class.blink::Node"*, %"class.blink::Node"** %293, align 8
  %295 = icmp eq %"class.blink::Node"* %294, null
  br i1 %295, label %296, label %297

296:                                              ; preds = %291
  store %"class.blink::Node"* null, %"class.blink::Node"** %285, align 8
  br label %400

297:                                              ; preds = %291
  %298 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %294, i64 0, i32 1
  %299 = load i32, i32* %298, align 8
  %300 = and i32 %299, 12
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %286, label %291

302:                                              ; preds = %44
  %303 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 3
  %304 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %303, align 8
  %305 = icmp eq %"class.blink::ContainerNode"* %304, null
  br i1 %305, label %324, label %306

306:                                              ; preds = %302
  %307 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %304, i64 0, i32 0
  %308 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %307) #7
  %309 = icmp eq %"class.blink::Element"* %308, null
  br i1 %309, label %310, label %313

310:                                              ; preds = %306
  %311 = bitcast %"class.blink::Element"** %49 to %"class.blink::Node"**
  %312 = load %"class.blink::Node"*, %"class.blink::Node"** %311, align 8
  br label %324

313:                                              ; preds = %306
  %314 = bitcast %"class.blink::ContainerNode"** %303 to %"class.blink::Node"**
  %315 = load %"class.blink::Node"*, %"class.blink::Node"** %314, align 8
  %316 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %315) #7
  %317 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %316, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %318 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %317, align 8
  %319 = bitcast %"class.blink::Element"** %49 to %"class.blink::Node"**
  %320 = load %"class.blink::Node"*, %"class.blink::Node"** %319, align 8
  %321 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %320, i64 0, i32 3, i32 0, i32 0
  %322 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %321, align 8
  %323 = icmp eq %"class.blink::TreeScope"* %318, %322
  br i1 %323, label %400, label %324

324:                                              ; preds = %302, %310, %313
  %325 = phi %"class.blink::Node"* [ %312, %310 ], [ %320, %313 ], [ %45, %302 ]
  %326 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %325) #7
  %327 = icmp eq %"class.blink::Element"* %326, null
  br i1 %327, label %400, label %328

328:                                              ; preds = %324
  %329 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 11
  %330 = load %"class.blink::Element"*, %"class.blink::Element"** %329, align 8
  %331 = icmp eq %"class.blink::Element"* %330, null
  %332 = select i1 %331, %"class.blink::Element"* %326, %"class.blink::Element"* %330
  %333 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 1
  store %"class.blink::Element"* %332, %"class.blink::Element"** %333, align 8
  %334 = call i32 @_ZNK5blink15SelectorChecker13MatchSelectorERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %4, %"struct.blink::SelectorChecker::MatchResult"* dereferenceable(1) %2)
  br label %400

335:                                              ; preds = %44
  %336 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %45, i64 0, i32 1
  %337 = load i32, i32* %336, align 8
  %338 = and i32 %337, 48
  %339 = icmp ne i32 %338, 0
  %340 = icmp eq %"class.blink::Node"* %45, null
  %341 = or i1 %340, %339
  br i1 %341, label %357, label %342

342:                                              ; preds = %335
  %343 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE, align 8
  %344 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %343, i64 0, i32 0, i32 0, i32 0
  %345 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %344, align 8
  %346 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %45, i64 1, i32 2
  %347 = bitcast %"class.blink::Member.317"* %346 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %348 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %347, align 8
  %349 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %348, i64 0, i32 3, i32 0, i32 0, i32 0
  %350 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %349, align 8
  %351 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %345, i64 0, i32 3, i32 0, i32 0, i32 0
  %352 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %351, align 8
  %353 = icmp ne %"class.WTF::StringImpl"* %350, %352
  %354 = and i32 %337, 512
  %355 = icmp eq i32 %354, 0
  %356 = or i1 %353, %355
  br i1 %356, label %357, label %400

357:                                              ; preds = %342, %335
  %358 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 3
  %359 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %358, align 8
  %360 = icmp eq %"class.blink::ContainerNode"* %359, null
  %361 = tail call %"class.blink::HTMLSlotElement"* @_ZNK5blink4Node12AssignedSlotEv(%"class.blink::Node"* %45) #7
  %362 = icmp eq %"class.blink::HTMLSlotElement"* %361, null
  %363 = or i1 %360, %362
  br i1 %363, label %378, label %364

364:                                              ; preds = %357
  %365 = bitcast %"class.blink::ContainerNode"** %358 to %"class.blink::Node"**
  br label %366

366:                                              ; preds = %374, %364
  %367 = phi %"class.blink::HTMLSlotElement"* [ %361, %364 ], [ %376, %374 ]
  %368 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %367, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %369 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %368, align 8
  %370 = load %"class.blink::Node"*, %"class.blink::Node"** %365, align 8
  %371 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %370, i64 0, i32 3, i32 0, i32 0
  %372 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %371, align 8
  %373 = icmp eq %"class.blink::TreeScope"* %369, %372
  br i1 %373, label %379, label %374

374:                                              ; preds = %366
  %375 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %367, i64 0, i32 0, i32 0, i32 0, i32 0
  %376 = tail call %"class.blink::HTMLSlotElement"* @_ZNK5blink4Node12AssignedSlotEv(%"class.blink::Node"* %375) #7
  %377 = icmp eq %"class.blink::HTMLSlotElement"* %376, null
  br i1 %377, label %400, label %366

378:                                              ; preds = %357
  br i1 %362, label %400, label %379

379:                                              ; preds = %366, %378
  %380 = phi %"class.blink::HTMLSlotElement"* [ %361, %378 ], [ %367, %366 ]
  %381 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %380, i64 0, i32 0, i32 0
  %382 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 1
  store %"class.blink::Element"* %381, %"class.blink::Element"** %382, align 8
  %383 = call i32 @_ZNK5blink15SelectorChecker13MatchSelectorERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %4, %"struct.blink::SelectorChecker::MatchResult"* dereferenceable(1) %2)
  br label %400

384:                                              ; preds = %53, %391
  %385 = phi %"class.blink::Element"* [ %57, %53 ], [ %389, %391 ]
  %386 = icmp eq %"class.blink::Element"* %385, null
  br i1 %386, label %400, label %387

387:                                              ; preds = %384
  %388 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %385, i64 0, i32 0, i32 0
  %389 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %388) #7
  store %"class.blink::Element"* %389, %"class.blink::Element"** %54, align 8
  %390 = icmp eq %"class.blink::Element"* %389, null
  br i1 %390, label %400, label %391

391:                                              ; preds = %387
  %392 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %389, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %393 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %392, align 8
  %394 = load %"class.blink::Node"*, %"class.blink::Node"** %56, align 8
  %395 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %394, i64 0, i32 3, i32 0, i32 0
  %396 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %395, align 8
  %397 = icmp eq %"class.blink::TreeScope"* %393, %396
  br i1 %397, label %398, label %384

398:                                              ; preds = %391
  %399 = call i32 @_ZNK5blink15SelectorChecker13MatchSelectorERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %4, %"struct.blink::SelectorChecker::MatchResult"* dereferenceable(1) %2)
  br label %400

400:                                              ; preds = %384, %387, %374, %286, %286, %286, %159, %117, %106, %106, %342, %296, %158, %275, %237, %99, %100, %205, %44, %379, %378, %328, %324, %313, %206, %172, %63, %398, %245, %209
  %401 = phi i32 [ %399, %398 ], [ %248, %245 ], [ %210, %209 ], [ 0, %63 ], [ 0, %172 ], [ 3, %206 ], [ 3, %313 ], [ %334, %328 ], [ 3, %324 ], [ %383, %379 ], [ 3, %378 ], [ 3, %44 ], [ 3, %205 ], [ 3, %100 ], [ 3, %99 ], [ 2, %237 ], [ 2, %275 ], [ 3, %158 ], [ 2, %296 ], [ 3, %342 ], [ 3, %159 ], [ 3, %117 ], [ %107, %106 ], [ %107, %106 ], [ %288, %286 ], [ %288, %286 ], [ %288, %286 ], [ 3, %374 ], [ 3, %387 ], [ 3, %384 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #7
  ret i32 %401
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15SelectorChecker19MatchForSubSelectorERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"*, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nocapture readonly dereferenceable(56), %"struct.blink::SelectorChecker::MatchResult"* dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::SelectorChecker::SelectorCheckingContext", align 8
  %5 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #7
  %6 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %6, i64 56, i1 false) #7
  %7 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 0
  %8 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %7, align 8, !noalias !10
  %9 = bitcast %"class.blink::CSSSelector"* %8 to i32*
  %10 = load i32, i32* %9, align 8, !noalias !10
  %11 = and i32 %10, 131072
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %8, i64 1
  %14 = select i1 %12, %"class.blink::CSSSelector"* %13, %"class.blink::CSSSelector"* null
  %15 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 0
  store %"class.blink::CSSSelector"* %14, %"class.blink::CSSSelector"** %15, align 8, !alias.scope !10
  %16 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %2, i64 0, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp ne i8 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 1
  %21 = load %"class.blink::CustomScrollbar"*, %"class.blink::CustomScrollbar"** %20, align 8
  %22 = icmp ne %"class.blink::CustomScrollbar"* %21, null
  %23 = or i8 %17, 1
  %24 = icmp eq i8 %23, 19
  %25 = or i1 %24, %22
  br label %26

26:                                               ; preds = %19, %3
  %27 = phi i1 [ false, %3 ], [ %25, %19 ]
  %28 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 7
  %29 = zext i1 %27 to i8
  store i8 %29, i8* %28, align 1
  %30 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 6
  %31 = load i8, i8* %30, align 2, !range !6
  %32 = icmp eq i8 %31, 0
  %33 = xor i1 %18, true
  %34 = or i1 %32, %33
  %35 = icmp eq i8 %17, 7
  %36 = or i1 %35, %34
  %37 = or i1 %27, %36
  br i1 %37, label %38, label %43

38:                                               ; preds = %26
  %39 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 8
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 4
  %41 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 5
  store i8 1, i8* %41, align 1
  %42 = call i32 @_ZNK5blink15SelectorChecker13MatchSelectorERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %4, %"struct.blink::SelectorChecker::MatchResult"* dereferenceable(1) %2)
  br label %43

43:                                               ; preds = %26, %38
  %44 = phi i32 [ %42, %38 ], [ 3, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #7
  ret i32 %44
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15SelectorChecker16CheckPseudoClassERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"*, %"struct.blink::SelectorChecker::SelectorCheckingContext"* readonly dereferenceable(56), %"struct.blink::SelectorChecker::MatchResult"* nocapture readnone dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::SelectorChecker::SelectorCheckingContext", align 8
  %5 = alloca %"struct.blink::SelectorChecker::MatchResult", align 1
  %6 = alloca %"class.blink::HasTagName", align 8
  %7 = alloca %"class.blink::HasTagName", align 8
  %8 = alloca %"class.blink::HasTagName", align 8
  %9 = alloca %"class.blink::HasTagName", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"struct.blink::SelectorChecker::SelectorCheckingContext", align 8
  %12 = alloca %"struct.blink::SelectorChecker::MatchResult", align 1
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 1
  %15 = load %"class.blink::Element"*, %"class.blink::Element"** %14, align 8
  %16 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 0
  %17 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #7
  store i8 0, i8* %10, align 1
  %18 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 7
  %19 = load i8, i8* %18, align 1, !range !6
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %3
  %22 = tail call zeroext i1 @_ZNK5blink15SelectorChecker25CheckScrollbarPseudoClassERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* dereferenceable(56) %1, %"struct.blink::SelectorChecker::MatchResult"* dereferenceable(1) undef)
  br label %2015

23:                                               ; preds = %3
  %24 = bitcast %"class.blink::CSSSelector"* %17 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = lshr i32 %25, 8
  %27 = trunc i32 %26 to i8
  switch i8 %27, label %2015 [
    i8 52, label %28
    i8 1, label %69
    i8 2, label %131
    i8 3, label %158
    i8 4, label %241
    i8 5, label %282
    i8 6, label %372
    i8 7, label %423
    i8 38, label %581
    i8 10, label %601
    i8 11, label %617
    i8 12, label %633
    i8 13, label %657
    i8 45, label %681
    i8 19, label %697
    i8 20, label %697
    i8 18, label %697
    i8 23, label %739
    i8 24, label %757
    i8 25, label %775
    i8 21, label %793
    i8 22, label %793
    i8 16, label %798
    i8 17, label %807
    i8 27, label %816
    i8 28, label %841
    i8 29, label %853
    i8 30, label %865
    i8 26, label %898
    i8 31, label %973
    i8 33, label %1048
    i8 34, label %1054
    i8 35, label %1063
    i8 36, label %1069
    i8 40, label %1075
    i8 41, label %1081
    i8 37, label %1087
    i8 39, label %1093
    i8 42, label %1099
    i8 43, label %1110
    i8 32, label %1122
    i8 44, label %1167
    i8 56, label %1173
    i8 51, label %1181
    i8 108, label %1318
    i8 103, label %1496
    i8 81, label %1524
    i8 79, label %1524
    i8 80, label %1531
    i8 82, label %1538
    i8 83, label %1568
    i8 84, label %1570
    i8 105, label %1601
    i8 106, label %1624
    i8 87, label %1631
    i8 85, label %1642
    i8 86, label %1648
    i8 91, label %1654
    i8 92, label %1670
    i8 57, label %1686
    i8 93, label %1720
    i8 96, label %1725
    i8 95, label %1739
    i8 97, label %1741
    i8 98, label %1779
    i8 94, label %1799
    i8 99, label %1823
    i8 100, label %1832
    i8 101, label %1857
    i8 102, label %1895
    i8 64, label %1954
    i8 15, label %1973
    i8 49, label %1990
  ]

28:                                               ; preds = %23
  %29 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %29) #7
  %30 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 %30, i64 56, i1 false) #7
  %31 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 5
  store i8 1, i8* %31, align 1
  %32 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 12
  store i8 1, i8* %32, align 8
  %33 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 4
  store i8 0, i8* %33, align 8
  %34 = load i32, i32* %24, align 8
  %35 = and i32 %34, 262144
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %17, i64 0, i32 1
  %39 = bitcast %"union.blink::CSSSelector::DataUnion"* %38 to %"struct.blink::CSSSelector::RareData"**
  %40 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %39, align 8
  %41 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %40, i64 0, i32 6, i32 0, i32 0, i32 0
  %42 = load %"class.blink::CSSSelectorList"*, %"class.blink::CSSSelectorList"** %41, align 8
  br label %43

43:                                               ; preds = %37, %28
  %44 = phi %"class.blink::CSSSelectorList"* [ %42, %37 ], [ null, %28 ]
  %45 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %44, i64 0, i32 0
  %46 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %45, align 8
  %47 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 0
  %48 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %5, i64 0, i32 0
  store %"class.blink::CSSSelector"* %46, %"class.blink::CSSSelector"** %47, align 8
  %49 = icmp eq %"class.blink::CSSSelector"* %46, null
  br i1 %49, label %67, label %50

50:                                               ; preds = %43, %62
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %48) #7
  store i8 0, i8* %48, align 1
  %51 = call i32 @_ZNK5blink15SelectorChecker13MatchSelectorERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %4, %"struct.blink::SelectorChecker::MatchResult"* nonnull dereferenceable(1) %5) #7
  %52 = icmp eq i32 %51, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %48) #7
  br i1 %52, label %67, label %53

53:                                               ; preds = %50
  %54 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %47, align 8
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi %"class.blink::CSSSelector"* [ %54, %53 ], [ %61, %55 ]
  %57 = bitcast %"class.blink::CSSSelector"* %56 to i32*
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, 131072
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %56, i64 1
  br i1 %60, label %55, label %62

62:                                               ; preds = %55
  %63 = and i32 %58, 2097152
  %64 = icmp eq i32 %63, 0
  %65 = select i1 %64, %"class.blink::CSSSelector"* %61, %"class.blink::CSSSelector"* null
  store %"class.blink::CSSSelector"* %65, %"class.blink::CSSSelector"** %47, align 8
  %66 = icmp eq %"class.blink::CSSSelector"* %65, null
  br i1 %66, label %67, label %50

67:                                               ; preds = %62, %50, %43
  %68 = phi i1 [ true, %43 ], [ false, %50 ], [ true, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %29) #7
  br label %2015

69:                                               ; preds = %23
  %70 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 1, i32 0, i32 0
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %70, align 8
  %72 = icmp eq %"class.blink::Node"* %71, null
  br i1 %72, label %123, label %73

73:                                               ; preds = %69, %103
  %74 = phi %"class.blink::Node"* [ %106, %103 ], [ %71, %69 ]
  %75 = phi i8 [ %104, %103 ], [ 0, %69 ]
  %76 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %74, i64 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = and i32 %77, 12
  switch i32 %78, label %103 [
    i32 0, label %123
    i32 4, label %79
  ]

79:                                               ; preds = %73
  %80 = bitcast %"class.blink::Node"* %74 to %"class.blink::CharacterData"*
  %81 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %74, i64 1
  %82 = bitcast %"class.blink::Node"* %81 to i8*
  %83 = load i8, i8* %82, align 8, !range !6
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %74, i64 1, i32 0, i32 0, i32 1
  %87 = bitcast %"class.blink::TraceWrapperV8Reference"* %86 to %"class.blink::ParkableString"*
  %88 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %87) #7
  br label %92

89:                                               ; preds = %79
  %90 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %74, i64 1, i32 1
  %91 = bitcast i32* %90 to %"class.WTF::String"*
  br label %92

92:                                               ; preds = %85, %89
  %93 = phi %"class.WTF::String"* [ %88, %85 ], [ %91, %89 ]
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %93, i64 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %103, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = tail call zeroext i1 @_ZNK5blink13CharacterData29ContainsOnlyWhitespaceOrEmptyEv(%"class.blink::CharacterData"* nonnull %80) #7
  br i1 %102, label %103, label %123

103:                                              ; preds = %73, %92, %97, %101
  %104 = phi i8 [ %75, %97 ], [ 1, %101 ], [ %75, %92 ], [ %75, %73 ]
  %105 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %74, i64 0, i32 5, i32 0, i32 0
  %106 = load %"class.blink::Node"*, %"class.blink::Node"** %105, align 8
  %107 = icmp eq %"class.blink::Node"* %106, null
  br i1 %107, label %108, label %73

108:                                              ; preds = %103
  %109 = and i8 %104, 1
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %123, label %111

111:                                              ; preds = %108
  %112 = bitcast %"class.blink::Element"** %14 to %"class.blink::Node"**
  %113 = load %"class.blink::Node"*, %"class.blink::Node"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %113, i64 0, i32 3, i32 0, i32 0
  %115 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %115, i64 0, i32 2, i32 0, i32 0
  %117 = load %"class.blink::Document"*, %"class.blink::Document"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %117, i64 0, i32 2
  %119 = bitcast %"class.blink::UseCounter"* %118 to void (%"class.blink::UseCounter"*, i32)***
  %120 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %120, i64 3
  %122 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %121, align 8
  tail call void %122(%"class.blink::UseCounter"* %118, i32 2624) #7
  br label %123

123:                                              ; preds = %73, %101, %69, %108, %111
  %124 = phi i8 [ 0, %111 ], [ 1, %108 ], [ 1, %69 ], [ 0, %101 ], [ 0, %73 ]
  %125 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 5
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %123
  tail call void @_ZN5blink7Element14SetElementFlagENS_12ElementFlagsEb(%"class.blink::Element"* %15, i32 2, i1 zeroext true) #7
  br label %129

129:                                              ; preds = %128, %123
  %130 = icmp ne i8 %124, 0
  br label %2015

131:                                              ; preds = %23
  %132 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 5
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %146

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %137 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %136) #7
  %138 = icmp eq %"class.blink::ContainerNode"* %137, null
  br i1 %138, label %144, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %137, i64 0, i32 0, i32 1
  %141 = load i32, i32* %140, align 8
  %142 = and i32 %141, 12
  switch i32 %142, label %144 [
    i32 0, label %143
    i32 8, label %143
  ]

143:                                              ; preds = %139, %139
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* nonnull %137, i32 16) #7
  br label %144

144:                                              ; preds = %139, %135, %143
  %145 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* %145, i32 1024) #7
  br label %146

146:                                              ; preds = %144, %131
  %147 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  br label %148

148:                                              ; preds = %153, %146
  %149 = phi %"class.blink::Node"* [ %147, %146 ], [ %151, %153 ]
  %150 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %149, i64 0, i32 4, i32 0, i32 0
  %151 = load %"class.blink::Node"*, %"class.blink::Node"** %150, align 8
  %152 = icmp eq %"class.blink::Node"* %151, null
  br i1 %152, label %2015, label %153

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %151, i64 0, i32 1
  %155 = load i32, i32* %154, align 8
  %156 = and i32 %155, 12
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %2015, label %148

158:                                              ; preds = %23
  %159 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 5
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %171

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %164 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %163) #7
  %165 = icmp eq %"class.blink::ContainerNode"* %164, null
  br i1 %165, label %171, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %164, i64 0, i32 0, i32 1
  %168 = load i32, i32* %167, align 8
  %169 = and i32 %168, 12
  switch i32 %169, label %171 [
    i32 0, label %170
    i32 8, label %170
  ]

170:                                              ; preds = %166, %166
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* nonnull %164, i32 256) #7
  br label %171

171:                                              ; preds = %166, %162, %170, %158
  %172 = bitcast %"class.blink::HasTagName"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172)
  %173 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 2, i32 0, i32 0
  %175 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %174, align 8
  %176 = getelementptr inbounds %"class.blink::HasTagName", %"class.blink::HasTagName"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %175, %"class.blink::QualifiedName::QualifiedNameImpl"** %176, align 8
  %177 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %175, null
  br i1 %177, label %185, label %178

178:                                              ; preds = %171
  %179 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %175, i64 0, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = and i32 %180, 16777216
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %185

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %175, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %184) #7
  br label %185

185:                                              ; preds = %183, %178, %171
  br label %186

186:                                              ; preds = %185, %191
  %187 = phi %"class.blink::Node"* [ %189, %191 ], [ %173, %185 ]
  %188 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %187, i64 0, i32 4, i32 0, i32 0
  %189 = load %"class.blink::Node"*, %"class.blink::Node"** %188, align 8
  %190 = icmp eq %"class.blink::Node"* %189, null
  br i1 %190, label %237, label %191

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %189, i64 0, i32 1
  %193 = load i32, i32* %192, align 8
  %194 = and i32 %193, 12
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %186

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %175, i64 0, i32 4, i32 0, i32 0, i32 0
  %198 = bitcast %"class.blink::Node"* %189 to %"class.blink::Element"*
  %199 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %189, i64 1, i32 2
  %200 = bitcast %"class.blink::Member.317"* %199 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %201 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %200, align 8
  %202 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %201, %175
  br i1 %202, label %237, label %203

203:                                              ; preds = %196
  %204 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %175, i64 0, i32 3, i32 0, i32 0, i32 0
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  br label %212

206:                                              ; preds = %230
  %207 = bitcast %"class.blink::Node"* %228 to %"class.blink::Element"*
  %208 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %228, i64 1, i32 2
  %209 = bitcast %"class.blink::Member.317"* %208 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %210 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %209, align 8
  %211 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %210, %175
  br i1 %211, label %235, label %212

212:                                              ; preds = %206, %203
  %213 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %201, %203 ], [ %210, %206 ]
  %214 = phi %"class.blink::Element"* [ %198, %203 ], [ %207, %206 ]
  %215 = phi %"class.blink::Node"* [ %189, %203 ], [ %228, %206 ]
  %216 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %213, i64 0, i32 3, i32 0, i32 0, i32 0
  %217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %216, align 8
  %218 = icmp eq %"class.WTF::StringImpl"* %217, %205
  br i1 %218, label %219, label %224

219:                                              ; preds = %212
  %220 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %213, i64 0, i32 4, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %197, align 8
  %223 = icmp eq %"class.WTF::StringImpl"* %221, %222
  br i1 %223, label %237, label %224

224:                                              ; preds = %219, %212
  br label %225

225:                                              ; preds = %224, %230
  %226 = phi %"class.blink::Node"* [ %228, %230 ], [ %215, %224 ]
  %227 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %226, i64 0, i32 4, i32 0, i32 0
  %228 = load %"class.blink::Node"*, %"class.blink::Node"** %227, align 8
  %229 = icmp eq %"class.blink::Node"* %228, null
  br i1 %229, label %237, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %228, i64 0, i32 1
  %232 = load i32, i32* %231, align 8
  %233 = and i32 %232, 12
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %206, label %225

235:                                              ; preds = %206
  %236 = bitcast %"class.blink::Node"* %228 to %"class.blink::Element"*
  br label %237

237:                                              ; preds = %186, %219, %225, %235, %196
  %238 = phi %"class.blink::Element"* [ %198, %196 ], [ %236, %235 ], [ null, %225 ], [ %214, %219 ], [ null, %186 ]
  %239 = icmp eq %"class.blink::Element"* %238, null
  %240 = getelementptr inbounds %"class.blink::HasTagName", %"class.blink::HasTagName"* %9, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %240) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172)
  br label %2015

241:                                              ; preds = %23
  %242 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %243 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %242) #7
  %244 = icmp eq %"class.blink::ContainerNode"* %243, null
  br i1 %244, label %250, label %245

245:                                              ; preds = %241
  %246 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %243, i64 0, i32 0, i32 1
  %247 = load i32, i32* %246, align 8
  %248 = and i32 %247, 12
  switch i32 %248, label %250 [
    i32 0, label %249
    i32 8, label %249
  ]

249:                                              ; preds = %245, %245
  br label %250

250:                                              ; preds = %241, %245, %249
  %251 = phi %"class.blink::ContainerNode"* [ %243, %249 ], [ null, %241 ], [ null, %245 ]
  %252 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 5
  %253 = load i32, i32* %252, align 4
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %261

255:                                              ; preds = %250
  %256 = icmp eq %"class.blink::ContainerNode"* %251, null
  br i1 %256, label %258, label %257

257:                                              ; preds = %255
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* nonnull %251, i32 32) #7
  br label %258

258:                                              ; preds = %255, %257
  %259 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* %259, i32 2048) #7
  %260 = load i32, i32* %252, align 4
  br label %261

261:                                              ; preds = %258, %250
  %262 = phi i32 [ %260, %258 ], [ %253, %250 ]
  %263 = icmp ne i32 %262, 3
  %264 = icmp ne %"class.blink::ContainerNode"* %251, null
  %265 = and i1 %264, %263
  br i1 %265, label %266, label %271

266:                                              ; preds = %261
  %267 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %251, i64 0, i32 0, i32 1
  %268 = load i32, i32* %267, align 8
  %269 = and i32 %268, 1024
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %2015, label %271

271:                                              ; preds = %266, %261
  br label %272

272:                                              ; preds = %271, %277
  %273 = phi %"class.blink::Node"* [ %275, %277 ], [ %242, %271 ]
  %274 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %273, i64 0, i32 5, i32 0, i32 0
  %275 = load %"class.blink::Node"*, %"class.blink::Node"** %274, align 8
  %276 = icmp eq %"class.blink::Node"* %275, null
  br i1 %276, label %2015, label %277

277:                                              ; preds = %272
  %278 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %275, i64 0, i32 1
  %279 = load i32, i32* %278, align 8
  %280 = and i32 %279, 12
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %2015, label %272

282:                                              ; preds = %23
  %283 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %284 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %283) #7
  %285 = icmp eq %"class.blink::ContainerNode"* %284, null
  br i1 %285, label %303, label %286

286:                                              ; preds = %282
  %287 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %284, i64 0, i32 0, i32 1
  %288 = load i32, i32* %287, align 8
  %289 = and i32 %288, 12
  switch i32 %289, label %303 [
    i32 0, label %290
    i32 8, label %290
  ]

290:                                              ; preds = %286, %286
  %291 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 5
  %292 = load i32, i32* %291, align 4
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %296

294:                                              ; preds = %290
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* nonnull %284, i32 512) #7
  %295 = load i32, i32* %291, align 4
  br label %296

296:                                              ; preds = %294, %290
  %297 = phi i32 [ %295, %294 ], [ %292, %290 ]
  %298 = icmp eq i32 %297, 3
  br i1 %298, label %303, label %299

299:                                              ; preds = %296
  %300 = load i32, i32* %287, align 8
  %301 = and i32 %300, 1024
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %2015, label %303

303:                                              ; preds = %299, %296, %282, %286
  %304 = bitcast %"class.blink::HasTagName"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %304)
  %305 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 2, i32 0, i32 0
  %306 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %305, align 8
  %307 = getelementptr inbounds %"class.blink::HasTagName", %"class.blink::HasTagName"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %306, %"class.blink::QualifiedName::QualifiedNameImpl"** %307, align 8
  %308 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %306, null
  br i1 %308, label %316, label %309

309:                                              ; preds = %303
  %310 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %306, i64 0, i32 1
  %311 = load i32, i32* %310, align 4
  %312 = and i32 %311, 16777216
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %316

314:                                              ; preds = %309
  %315 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %306, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %315) #7
  br label %316

316:                                              ; preds = %314, %309, %303
  br label %317

317:                                              ; preds = %316, %322
  %318 = phi %"class.blink::Node"* [ %320, %322 ], [ %283, %316 ]
  %319 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %318, i64 0, i32 5, i32 0, i32 0
  %320 = load %"class.blink::Node"*, %"class.blink::Node"** %319, align 8
  %321 = icmp eq %"class.blink::Node"* %320, null
  br i1 %321, label %368, label %322

322:                                              ; preds = %317
  %323 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %320, i64 0, i32 1
  %324 = load i32, i32* %323, align 8
  %325 = and i32 %324, 12
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %317

327:                                              ; preds = %322
  %328 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %306, i64 0, i32 4, i32 0, i32 0, i32 0
  %329 = bitcast %"class.blink::Node"* %320 to %"class.blink::Element"*
  %330 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %320, i64 1, i32 2
  %331 = bitcast %"class.blink::Member.317"* %330 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %332 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %331, align 8
  %333 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %332, %306
  br i1 %333, label %368, label %334

334:                                              ; preds = %327
  %335 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %306, i64 0, i32 3, i32 0, i32 0, i32 0
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %335, align 8
  br label %343

337:                                              ; preds = %361
  %338 = bitcast %"class.blink::Node"* %359 to %"class.blink::Element"*
  %339 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %359, i64 1, i32 2
  %340 = bitcast %"class.blink::Member.317"* %339 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %341 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %340, align 8
  %342 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %341, %306
  br i1 %342, label %366, label %343

343:                                              ; preds = %337, %334
  %344 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %332, %334 ], [ %341, %337 ]
  %345 = phi %"class.blink::Element"* [ %329, %334 ], [ %338, %337 ]
  %346 = phi %"class.blink::Node"* [ %320, %334 ], [ %359, %337 ]
  %347 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %344, i64 0, i32 3, i32 0, i32 0, i32 0
  %348 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %347, align 8
  %349 = icmp eq %"class.WTF::StringImpl"* %348, %336
  br i1 %349, label %350, label %355

350:                                              ; preds = %343
  %351 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %344, i64 0, i32 4, i32 0, i32 0, i32 0
  %352 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %351, align 8
  %353 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %328, align 8
  %354 = icmp eq %"class.WTF::StringImpl"* %352, %353
  br i1 %354, label %368, label %355

355:                                              ; preds = %350, %343
  br label %356

356:                                              ; preds = %355, %361
  %357 = phi %"class.blink::Node"* [ %359, %361 ], [ %346, %355 ]
  %358 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %357, i64 0, i32 5, i32 0, i32 0
  %359 = load %"class.blink::Node"*, %"class.blink::Node"** %358, align 8
  %360 = icmp eq %"class.blink::Node"* %359, null
  br i1 %360, label %368, label %361

361:                                              ; preds = %356
  %362 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %359, i64 0, i32 1
  %363 = load i32, i32* %362, align 8
  %364 = and i32 %363, 12
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %337, label %356

366:                                              ; preds = %337
  %367 = bitcast %"class.blink::Node"* %359 to %"class.blink::Element"*
  br label %368

368:                                              ; preds = %317, %350, %356, %366, %327
  %369 = phi %"class.blink::Element"* [ %329, %327 ], [ %367, %366 ], [ null, %356 ], [ %345, %350 ], [ null, %317 ]
  %370 = icmp eq %"class.blink::Element"* %369, null
  %371 = getelementptr inbounds %"class.blink::HasTagName", %"class.blink::HasTagName"* %8, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %371) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %304)
  br label %2015

372:                                              ; preds = %23
  %373 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %374 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %373) #7
  %375 = icmp eq %"class.blink::ContainerNode"* %374, null
  br i1 %375, label %381, label %376

376:                                              ; preds = %372
  %377 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %374, i64 0, i32 0, i32 1
  %378 = load i32, i32* %377, align 8
  %379 = and i32 %378, 12
  switch i32 %379, label %381 [
    i32 0, label %380
    i32 8, label %380
  ]

380:                                              ; preds = %376, %376
  br label %381

381:                                              ; preds = %372, %376, %380
  %382 = phi %"class.blink::ContainerNode"* [ %374, %380 ], [ null, %372 ], [ null, %376 ]
  %383 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 5
  %384 = load i32, i32* %383, align 4
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %386, label %392

386:                                              ; preds = %381
  %387 = icmp eq %"class.blink::ContainerNode"* %382, null
  br i1 %387, label %389, label %388

388:                                              ; preds = %386
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* nonnull %382, i32 16) #7
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* nonnull %382, i32 32) #7
  br label %389

389:                                              ; preds = %386, %388
  %390 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* %390, i32 1024) #7
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* %390, i32 2048) #7
  %391 = load i32, i32* %383, align 4
  br label %392

392:                                              ; preds = %389, %381
  %393 = phi i32 [ %391, %389 ], [ %384, %381 ]
  %394 = icmp ne i32 %393, 3
  %395 = icmp ne %"class.blink::ContainerNode"* %382, null
  %396 = and i1 %395, %394
  br i1 %396, label %397, label %402

397:                                              ; preds = %392
  %398 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %382, i64 0, i32 0, i32 1
  %399 = load i32, i32* %398, align 8
  %400 = and i32 %399, 1024
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %2015, label %402

402:                                              ; preds = %397, %392
  br label %403

403:                                              ; preds = %402, %408
  %404 = phi %"class.blink::Node"* [ %406, %408 ], [ %373, %402 ]
  %405 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %404, i64 0, i32 4, i32 0, i32 0
  %406 = load %"class.blink::Node"*, %"class.blink::Node"** %405, align 8
  %407 = icmp eq %"class.blink::Node"* %406, null
  br i1 %407, label %413, label %408

408:                                              ; preds = %403
  %409 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %406, i64 0, i32 1
  %410 = load i32, i32* %409, align 8
  %411 = and i32 %410, 12
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %2015, label %403

413:                                              ; preds = %403, %418
  %414 = phi %"class.blink::Node"* [ %416, %418 ], [ %373, %403 ]
  %415 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %414, i64 0, i32 5, i32 0, i32 0
  %416 = load %"class.blink::Node"*, %"class.blink::Node"** %415, align 8
  %417 = icmp eq %"class.blink::Node"* %416, null
  br i1 %417, label %2015, label %418

418:                                              ; preds = %413
  %419 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %416, i64 0, i32 1
  %420 = load i32, i32* %419, align 8
  %421 = and i32 %420, 12
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %2015, label %413

423:                                              ; preds = %23
  %424 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %425 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %424) #7
  %426 = icmp eq %"class.blink::ContainerNode"* %425, null
  br i1 %426, label %444, label %427

427:                                              ; preds = %423
  %428 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %425, i64 0, i32 0, i32 1
  %429 = load i32, i32* %428, align 8
  %430 = and i32 %429, 12
  switch i32 %430, label %444 [
    i32 0, label %431
    i32 8, label %431
  ]

431:                                              ; preds = %427, %427
  %432 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 5
  %433 = load i32, i32* %432, align 4
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %437

435:                                              ; preds = %431
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* nonnull %425, i32 256) #7
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* nonnull %425, i32 512) #7
  %436 = load i32, i32* %432, align 4
  br label %437

437:                                              ; preds = %435, %431
  %438 = phi i32 [ %436, %435 ], [ %433, %431 ]
  %439 = icmp eq i32 %438, 3
  br i1 %439, label %444, label %440

440:                                              ; preds = %437
  %441 = load i32, i32* %428, align 8
  %442 = and i32 %441, 1024
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %2015, label %444

444:                                              ; preds = %440, %437, %423, %427
  %445 = bitcast %"class.blink::HasTagName"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %445)
  %446 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 2, i32 0, i32 0
  %447 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %446, align 8
  %448 = getelementptr inbounds %"class.blink::HasTagName", %"class.blink::HasTagName"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %447, %"class.blink::QualifiedName::QualifiedNameImpl"** %448, align 8
  %449 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %447, null
  br i1 %449, label %457, label %450

450:                                              ; preds = %444
  %451 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %447, i64 0, i32 1
  %452 = load i32, i32* %451, align 4
  %453 = and i32 %452, 16777216
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %455, label %457

455:                                              ; preds = %450
  %456 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %447, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %456) #7
  br label %457

457:                                              ; preds = %455, %450, %444
  br label %458

458:                                              ; preds = %457, %463
  %459 = phi %"class.blink::Node"* [ %461, %463 ], [ %424, %457 ]
  %460 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %459, i64 0, i32 4, i32 0, i32 0
  %461 = load %"class.blink::Node"*, %"class.blink::Node"** %460, align 8
  %462 = icmp eq %"class.blink::Node"* %461, null
  br i1 %462, label %509, label %463

463:                                              ; preds = %458
  %464 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %461, i64 0, i32 1
  %465 = load i32, i32* %464, align 8
  %466 = and i32 %465, 12
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %468, label %458

468:                                              ; preds = %463
  %469 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %447, i64 0, i32 4, i32 0, i32 0, i32 0
  %470 = bitcast %"class.blink::Node"* %461 to %"class.blink::Element"*
  %471 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %461, i64 1, i32 2
  %472 = bitcast %"class.blink::Member.317"* %471 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %473 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %472, align 8
  %474 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %473, %447
  br i1 %474, label %509, label %475

475:                                              ; preds = %468
  %476 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %447, i64 0, i32 3, i32 0, i32 0, i32 0
  %477 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %476, align 8
  br label %484

478:                                              ; preds = %502
  %479 = bitcast %"class.blink::Node"* %500 to %"class.blink::Element"*
  %480 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %500, i64 1, i32 2
  %481 = bitcast %"class.blink::Member.317"* %480 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %482 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %481, align 8
  %483 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %482, %447
  br i1 %483, label %507, label %484

484:                                              ; preds = %478, %475
  %485 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %473, %475 ], [ %482, %478 ]
  %486 = phi %"class.blink::Element"* [ %470, %475 ], [ %479, %478 ]
  %487 = phi %"class.blink::Node"* [ %461, %475 ], [ %500, %478 ]
  %488 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %485, i64 0, i32 3, i32 0, i32 0, i32 0
  %489 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %488, align 8
  %490 = icmp eq %"class.WTF::StringImpl"* %489, %477
  br i1 %490, label %491, label %496

491:                                              ; preds = %484
  %492 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %485, i64 0, i32 4, i32 0, i32 0, i32 0
  %493 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %492, align 8
  %494 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %469, align 8
  %495 = icmp eq %"class.WTF::StringImpl"* %493, %494
  br i1 %495, label %509, label %496

496:                                              ; preds = %491, %484
  br label %497

497:                                              ; preds = %496, %502
  %498 = phi %"class.blink::Node"* [ %500, %502 ], [ %487, %496 ]
  %499 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %498, i64 0, i32 4, i32 0, i32 0
  %500 = load %"class.blink::Node"*, %"class.blink::Node"** %499, align 8
  %501 = icmp eq %"class.blink::Node"* %500, null
  br i1 %501, label %509, label %502

502:                                              ; preds = %497
  %503 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %500, i64 0, i32 1
  %504 = load i32, i32* %503, align 8
  %505 = and i32 %504, 12
  %506 = icmp eq i32 %505, 0
  br i1 %506, label %478, label %497

507:                                              ; preds = %478
  %508 = bitcast %"class.blink::Node"* %500 to %"class.blink::Element"*
  br label %509

509:                                              ; preds = %458, %491, %497, %507, %468
  %510 = phi %"class.blink::Element"* [ %470, %468 ], [ %508, %507 ], [ null, %497 ], [ %486, %491 ], [ null, %458 ]
  %511 = icmp eq %"class.blink::Element"* %510, null
  %512 = getelementptr inbounds %"class.blink::HasTagName", %"class.blink::HasTagName"* %7, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %512) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %445)
  br i1 %511, label %513, label %2015

513:                                              ; preds = %509
  %514 = bitcast %"class.blink::HasTagName"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %514)
  %515 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %446, align 8
  %516 = getelementptr inbounds %"class.blink::HasTagName", %"class.blink::HasTagName"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %515, %"class.blink::QualifiedName::QualifiedNameImpl"** %516, align 8
  %517 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %515, null
  br i1 %517, label %525, label %518

518:                                              ; preds = %513
  %519 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %515, i64 0, i32 1
  %520 = load i32, i32* %519, align 4
  %521 = and i32 %520, 16777216
  %522 = icmp eq i32 %521, 0
  br i1 %522, label %523, label %525

523:                                              ; preds = %518
  %524 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %515, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %524) #7
  br label %525

525:                                              ; preds = %523, %518, %513
  br label %526

526:                                              ; preds = %525, %531
  %527 = phi %"class.blink::Node"* [ %529, %531 ], [ %424, %525 ]
  %528 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %527, i64 0, i32 5, i32 0, i32 0
  %529 = load %"class.blink::Node"*, %"class.blink::Node"** %528, align 8
  %530 = icmp eq %"class.blink::Node"* %529, null
  br i1 %530, label %577, label %531

531:                                              ; preds = %526
  %532 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %529, i64 0, i32 1
  %533 = load i32, i32* %532, align 8
  %534 = and i32 %533, 12
  %535 = icmp eq i32 %534, 0
  br i1 %535, label %536, label %526

536:                                              ; preds = %531
  %537 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %515, i64 0, i32 4, i32 0, i32 0, i32 0
  %538 = bitcast %"class.blink::Node"* %529 to %"class.blink::Element"*
  %539 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %529, i64 1, i32 2
  %540 = bitcast %"class.blink::Member.317"* %539 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %541 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %540, align 8
  %542 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %541, %515
  br i1 %542, label %577, label %543

543:                                              ; preds = %536
  %544 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %515, i64 0, i32 3, i32 0, i32 0, i32 0
  %545 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %544, align 8
  br label %552

546:                                              ; preds = %570
  %547 = bitcast %"class.blink::Node"* %568 to %"class.blink::Element"*
  %548 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %568, i64 1, i32 2
  %549 = bitcast %"class.blink::Member.317"* %548 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %550 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %549, align 8
  %551 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %550, %515
  br i1 %551, label %575, label %552

552:                                              ; preds = %546, %543
  %553 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %541, %543 ], [ %550, %546 ]
  %554 = phi %"class.blink::Element"* [ %538, %543 ], [ %547, %546 ]
  %555 = phi %"class.blink::Node"* [ %529, %543 ], [ %568, %546 ]
  %556 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %553, i64 0, i32 3, i32 0, i32 0, i32 0
  %557 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %556, align 8
  %558 = icmp eq %"class.WTF::StringImpl"* %557, %545
  br i1 %558, label %559, label %564

559:                                              ; preds = %552
  %560 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %553, i64 0, i32 4, i32 0, i32 0, i32 0
  %561 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %560, align 8
  %562 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %537, align 8
  %563 = icmp eq %"class.WTF::StringImpl"* %561, %562
  br i1 %563, label %577, label %564

564:                                              ; preds = %559, %552
  br label %565

565:                                              ; preds = %564, %570
  %566 = phi %"class.blink::Node"* [ %568, %570 ], [ %555, %564 ]
  %567 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %566, i64 0, i32 5, i32 0, i32 0
  %568 = load %"class.blink::Node"*, %"class.blink::Node"** %567, align 8
  %569 = icmp eq %"class.blink::Node"* %568, null
  br i1 %569, label %577, label %570

570:                                              ; preds = %565
  %571 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %568, i64 0, i32 1
  %572 = load i32, i32* %571, align 8
  %573 = and i32 %572, 12
  %574 = icmp eq i32 %573, 0
  br i1 %574, label %546, label %565

575:                                              ; preds = %546
  %576 = bitcast %"class.blink::Node"* %568 to %"class.blink::Element"*
  br label %577

577:                                              ; preds = %526, %559, %565, %575, %536
  %578 = phi %"class.blink::Element"* [ %538, %536 ], [ %576, %575 ], [ null, %565 ], [ %554, %559 ], [ null, %526 ]
  %579 = icmp eq %"class.blink::Element"* %578, null
  %580 = getelementptr inbounds %"class.blink::HasTagName", %"class.blink::HasTagName"* %6, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %580) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %514)
  br label %2015

581:                                              ; preds = %23
  %582 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %583 = load i32, i32* %582, align 8
  %584 = and i32 %583, 12
  %585 = icmp ne i32 %584, 0
  %586 = icmp eq %"class.blink::Element"* %15, null
  %587 = or i1 %586, %585
  br i1 %587, label %2015, label %588

588:                                              ; preds = %581
  %589 = bitcast %"class.blink::Element"* %15 to i1 (%"class.blink::Element"*)***
  %590 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %589, align 8
  %591 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %590, i64 126
  %592 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %591, align 8
  %593 = tail call zeroext i1 %592(%"class.blink::Element"* nonnull %15) #7
  br i1 %593, label %594, label %2015

594:                                              ; preds = %588
  %595 = bitcast %"class.blink::Element"* %15 to %"class.blink::TextControlElement"*
  %596 = bitcast %"class.blink::Element"* %15 to i1 (%"class.blink::TextControlElement"*)***
  %597 = load i1 (%"class.blink::TextControlElement"*)**, i1 (%"class.blink::TextControlElement"*)*** %596, align 8
  %598 = getelementptr inbounds i1 (%"class.blink::TextControlElement"*)*, i1 (%"class.blink::TextControlElement"*)** %597, i64 190
  %599 = load i1 (%"class.blink::TextControlElement"*)*, i1 (%"class.blink::TextControlElement"*)** %598, align 8
  %600 = tail call zeroext i1 %599(%"class.blink::TextControlElement"* nonnull %595) #7
  br label %2015

601:                                              ; preds = %23
  %602 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 5
  %603 = load i32, i32* %602, align 4
  %604 = icmp eq i32 %603, 0
  br i1 %604, label %605, label %614

605:                                              ; preds = %601
  %606 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %607 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %606) #7
  %608 = icmp eq %"class.blink::ContainerNode"* %607, null
  br i1 %608, label %614, label %609

609:                                              ; preds = %605
  %610 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %607, i64 0, i32 0, i32 1
  %611 = load i32, i32* %610, align 8
  %612 = and i32 %611, 12
  switch i32 %612, label %614 [
    i32 0, label %613
    i32 8, label %613
  ]

613:                                              ; preds = %609, %609
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* nonnull %607, i32 256) #7
  br label %614

614:                                              ; preds = %609, %605, %613, %601
  %615 = tail call i32 @_ZN5blink13NthIndexCache13NthChildIndexERNS_7ElementE(%"class.blink::Element"* dereferenceable(104) %15) #7
  %616 = tail call zeroext i1 @_ZNK5blink11CSSSelector8MatchNthEj(%"class.blink::CSSSelector"* %17, i32 %615) #7
  br label %2015

617:                                              ; preds = %23
  %618 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 5
  %619 = load i32, i32* %618, align 4
  %620 = icmp eq i32 %619, 0
  br i1 %620, label %621, label %630

621:                                              ; preds = %617
  %622 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %623 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %622) #7
  %624 = icmp eq %"class.blink::ContainerNode"* %623, null
  br i1 %624, label %630, label %625

625:                                              ; preds = %621
  %626 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %623, i64 0, i32 0, i32 1
  %627 = load i32, i32* %626, align 8
  %628 = and i32 %627, 12
  switch i32 %628, label %630 [
    i32 0, label %629
    i32 8, label %629
  ]

629:                                              ; preds = %625, %625
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* nonnull %623, i32 256) #7
  br label %630

630:                                              ; preds = %625, %621, %629, %617
  %631 = tail call i32 @_ZN5blink13NthIndexCache14NthOfTypeIndexERNS_7ElementE(%"class.blink::Element"* dereferenceable(104) %15) #7
  %632 = tail call zeroext i1 @_ZNK5blink11CSSSelector8MatchNthEj(%"class.blink::CSSSelector"* %17, i32 %631) #7
  br label %2015

633:                                              ; preds = %23
  %634 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %635 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %634) #7
  %636 = icmp eq %"class.blink::ContainerNode"* %635, null
  br i1 %636, label %654, label %637

637:                                              ; preds = %633
  %638 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %635, i64 0, i32 0, i32 1
  %639 = load i32, i32* %638, align 8
  %640 = and i32 %639, 12
  switch i32 %640, label %654 [
    i32 0, label %641
    i32 8, label %641
  ]

641:                                              ; preds = %637, %637
  %642 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 5
  %643 = load i32, i32* %642, align 4
  %644 = icmp eq i32 %643, 0
  br i1 %644, label %645, label %647

645:                                              ; preds = %641
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* nonnull %635, i32 512) #7
  %646 = load i32, i32* %642, align 4
  br label %647

647:                                              ; preds = %645, %641
  %648 = phi i32 [ %646, %645 ], [ %643, %641 ]
  %649 = icmp eq i32 %648, 3
  br i1 %649, label %654, label %650

650:                                              ; preds = %647
  %651 = load i32, i32* %638, align 8
  %652 = and i32 %651, 1024
  %653 = icmp eq i32 %652, 0
  br i1 %653, label %2015, label %654

654:                                              ; preds = %650, %647, %633, %637
  %655 = tail call i32 @_ZN5blink13NthIndexCache17NthLastChildIndexERNS_7ElementE(%"class.blink::Element"* dereferenceable(104) %15) #7
  %656 = tail call zeroext i1 @_ZNK5blink11CSSSelector8MatchNthEj(%"class.blink::CSSSelector"* %17, i32 %655) #7
  br label %2015

657:                                              ; preds = %23
  %658 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %659 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %658) #7
  %660 = icmp eq %"class.blink::ContainerNode"* %659, null
  br i1 %660, label %678, label %661

661:                                              ; preds = %657
  %662 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %659, i64 0, i32 0, i32 1
  %663 = load i32, i32* %662, align 8
  %664 = and i32 %663, 12
  switch i32 %664, label %678 [
    i32 0, label %665
    i32 8, label %665
  ]

665:                                              ; preds = %661, %661
  %666 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 5
  %667 = load i32, i32* %666, align 4
  %668 = icmp eq i32 %667, 0
  br i1 %668, label %669, label %671

669:                                              ; preds = %665
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* nonnull %659, i32 512) #7
  %670 = load i32, i32* %666, align 4
  br label %671

671:                                              ; preds = %669, %665
  %672 = phi i32 [ %670, %669 ], [ %667, %665 ]
  %673 = icmp eq i32 %672, 3
  br i1 %673, label %678, label %674

674:                                              ; preds = %671
  %675 = load i32, i32* %662, align 8
  %676 = and i32 %675, 1024
  %677 = icmp eq i32 %676, 0
  br i1 %677, label %2015, label %678

678:                                              ; preds = %674, %671, %657, %661
  %679 = tail call i32 @_ZN5blink13NthIndexCache18NthLastOfTypeIndexERNS_7ElementE(%"class.blink::Element"* dereferenceable(104) %15) #7
  %680 = tail call zeroext i1 @_ZNK5blink11CSSSelector8MatchNthEj(%"class.blink::CSSSelector"* %17, i32 %679) #7
  br label %2015

681:                                              ; preds = %23
  %682 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %683 = and i32 %682, 32
  %684 = icmp eq i32 %683, 0
  br i1 %684, label %686, label %685

685:                                              ; preds = %681
  call void @_ZN5blink5probe20ForcePseudoStateImplEPNS_7ElementENS_11CSSSelector10PseudoTypeEPb(%"class.blink::Element"* %15, i32 45, i8* nonnull %10) #7
  br label %686

686:                                              ; preds = %681, %685
  %687 = load i8, i8* %10, align 1, !range !6
  %688 = icmp eq i8 %687, 0
  br i1 %688, label %689, label %2015

689:                                              ; preds = %686
  %690 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %691 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %690, align 8
  %692 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %691, i64 0, i32 2, i32 0, i32 0
  %693 = load %"class.blink::Document"*, %"class.blink::Document"** %692, align 8
  %694 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %693, i64 0, i32 83, i32 0, i32 0
  %695 = load %"class.blink::Element"*, %"class.blink::Element"** %694, align 8
  %696 = icmp eq %"class.blink::Element"* %15, %695
  br label %2015

697:                                              ; preds = %23, %23, %23
  %698 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %698) #7
  %699 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %698, i8* align 8 %699, i64 56, i1 false)
  %700 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %11, i64 0, i32 5
  store i8 1, i8* %700, align 1
  %701 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %11, i64 0, i32 12
  store i8 1, i8* %701, align 8
  %702 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %11, i64 0, i32 4
  store i8 0, i8* %702, align 8
  %703 = load i32, i32* %24, align 8
  %704 = and i32 %703, 262144
  %705 = icmp eq i32 %704, 0
  br i1 %705, label %737, label %706

706:                                              ; preds = %697
  %707 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %17, i64 0, i32 1
  %708 = bitcast %"union.blink::CSSSelector::DataUnion"* %707 to %"struct.blink::CSSSelector::RareData"**
  %709 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %708, align 8
  %710 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %709, i64 0, i32 6, i32 0, i32 0, i32 0
  %711 = load %"class.blink::CSSSelectorList"*, %"class.blink::CSSSelectorList"** %710, align 8
  %712 = icmp eq %"class.blink::CSSSelectorList"* %711, null
  br i1 %712, label %737, label %713

713:                                              ; preds = %706
  %714 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %711, i64 0, i32 0
  %715 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %714, align 8
  %716 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %11, i64 0, i32 0
  store %"class.blink::CSSSelector"* %715, %"class.blink::CSSSelector"** %716, align 8
  %717 = icmp eq %"class.blink::CSSSelector"* %715, null
  br i1 %717, label %737, label %718

718:                                              ; preds = %713
  %719 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %12, i64 0, i32 0
  br label %720

720:                                              ; preds = %718, %732
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %719) #7
  store i8 0, i8* %719, align 1
  %721 = call i32 @_ZNK5blink15SelectorChecker13MatchSelectorERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %11, %"struct.blink::SelectorChecker::MatchResult"* nonnull dereferenceable(1) %12)
  %722 = icmp eq i32 %721, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %719) #7
  br i1 %722, label %738, label %723

723:                                              ; preds = %720
  %724 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %716, align 8
  br label %725

725:                                              ; preds = %725, %723
  %726 = phi %"class.blink::CSSSelector"* [ %724, %723 ], [ %731, %725 ]
  %727 = bitcast %"class.blink::CSSSelector"* %726 to i32*
  %728 = load i32, i32* %727, align 8
  %729 = and i32 %728, 131072
  %730 = icmp eq i32 %729, 0
  %731 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %726, i64 1
  br i1 %730, label %725, label %732

732:                                              ; preds = %725
  %733 = and i32 %728, 2097152
  %734 = icmp eq i32 %733, 0
  %735 = select i1 %734, %"class.blink::CSSSelector"* %731, %"class.blink::CSSSelector"* null
  store %"class.blink::CSSSelector"* %735, %"class.blink::CSSSelector"** %716, align 8
  %736 = icmp eq %"class.blink::CSSSelector"* %735, null
  br i1 %736, label %737, label %720

737:                                              ; preds = %732, %713, %706, %697
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %698) #7
  br label %2015

738:                                              ; preds = %720
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %698) #7
  br label %2015

739:                                              ; preds = %23
  %740 = icmp eq %"class.blink::Element"* %15, null
  br i1 %740, label %2015, label %741

741:                                              ; preds = %739
  %742 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %743 = load i32, i32* %742, align 8
  %744 = and i32 %743, 48
  %745 = icmp eq i32 %744, 0
  br i1 %745, label %746, label %2015

746:                                              ; preds = %741
  %747 = bitcast %"class.blink::Element"* %15 to i1 (%"class.blink::Element"*)***
  %748 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %747, align 8
  %749 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %748, i64 124
  %750 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %749, align 8
  %751 = tail call zeroext i1 %750(%"class.blink::Element"* nonnull %15) #7
  br i1 %751, label %752, label %2015

752:                                              ; preds = %746
  %753 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 1, i32 2
  %754 = bitcast %"class.blink::QualifiedName"* %753 to i32*
  %755 = load i32, i32* %754, align 8
  %756 = icmp ne i32 %755, 0
  br label %2015

757:                                              ; preds = %23
  %758 = icmp eq %"class.blink::Element"* %15, null
  br i1 %758, label %2015, label %759

759:                                              ; preds = %757
  %760 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %761 = load i32, i32* %760, align 8
  %762 = and i32 %761, 48
  %763 = icmp eq i32 %762, 0
  br i1 %763, label %764, label %2015

764:                                              ; preds = %759
  %765 = bitcast %"class.blink::Element"* %15 to i1 (%"class.blink::Element"*)***
  %766 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %765, align 8
  %767 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %766, i64 124
  %768 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %767, align 8
  %769 = tail call zeroext i1 %768(%"class.blink::Element"* nonnull %15) #7
  br i1 %769, label %770, label %2015

770:                                              ; preds = %764
  %771 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 1, i32 2
  %772 = bitcast %"class.blink::QualifiedName"* %771 to i32*
  %773 = load i32, i32* %772, align 8
  %774 = icmp eq i32 %773, 1
  br label %2015

775:                                              ; preds = %23
  %776 = icmp eq %"class.blink::Element"* %15, null
  br i1 %776, label %2015, label %777

777:                                              ; preds = %775
  %778 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %779 = load i32, i32* %778, align 8
  %780 = and i32 %779, 48
  %781 = icmp eq i32 %780, 0
  br i1 %781, label %782, label %2015

782:                                              ; preds = %777
  %783 = bitcast %"class.blink::Element"* %15 to i1 (%"class.blink::Element"*)***
  %784 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %783, align 8
  %785 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %784, i64 124
  %786 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %785, align 8
  %787 = tail call zeroext i1 %786(%"class.blink::Element"* nonnull %15) #7
  br i1 %787, label %788, label %2015

788:                                              ; preds = %782
  %789 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 1, i32 2
  %790 = bitcast %"class.blink::QualifiedName"* %789 to i32*
  %791 = load i32, i32* %790, align 8
  %792 = icmp eq i32 %791, 2
  br label %2015

793:                                              ; preds = %23, %23
  %794 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %795 = load i32, i32* %794, align 8
  %796 = and i32 %795, 64
  %797 = icmp ne i32 %796, 0
  br label %2015

798:                                              ; preds = %23
  %799 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %800 = load i32, i32* %799, align 8
  %801 = and i32 %800, 64
  %802 = icmp ne i32 %801, 0
  %803 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 13
  %804 = load i8, i8* %803, align 1
  %805 = icmp eq i8 %804, 0
  %806 = and i1 %805, %802
  br label %2015

807:                                              ; preds = %23
  %808 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %809 = load i32, i32* %808, align 8
  %810 = and i32 %809, 64
  %811 = icmp ne i32 %810, 0
  %812 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 13
  %813 = load i8, i8* %812, align 1
  %814 = icmp ne i8 %813, 0
  %815 = and i1 %814, %811
  br label %2015

816:                                              ; preds = %23
  %817 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 5
  %818 = load i32, i32* %817, align 4
  %819 = icmp eq i32 %818, 0
  br i1 %819, label %820, label %833

820:                                              ; preds = %816
  %821 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 6
  %822 = load i8, i8* %821, align 2, !range !6
  %823 = icmp eq i8 %822, 0
  br i1 %823, label %831, label %824

824:                                              ; preds = %820
  %825 = bitcast %"class.blink::SelectorChecker"* %0 to %"class.blink::ComputedStyleBase"**
  %826 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %825, align 8
  %827 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %826, i64 0, i32 9
  %828 = bitcast [20 x i8]* %827 to i160*
  %829 = load i160, i160* %828, align 8
  %830 = or i160 %829, 39614081257132168796771975168
  store i160 %830, i160* %828, align 8
  br label %833

831:                                              ; preds = %820
  %832 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* %832, i32 8) #7
  br label %833

833:                                              ; preds = %824, %831, %816
  %834 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %835 = load i32, i32* %834, align 8
  %836 = trunc i32 %835 to i8
  %837 = icmp slt i8 %836, 0
  br i1 %837, label %838, label %2015

838:                                              ; preds = %833
  %839 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %840 = tail call zeroext i1 @_ZNK5blink4Node26IsUserActionElementDraggedEv(%"class.blink::Node"* %839) #7
  br label %2015

841:                                              ; preds = %23
  %842 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 5
  %843 = load i32, i32* %842, align 4
  %844 = icmp eq i32 %843, 0
  br i1 %844, label %845, label %851

845:                                              ; preds = %841
  %846 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 6
  %847 = load i8, i8* %846, align 2, !range !6
  %848 = icmp eq i8 %847, 0
  br i1 %848, label %849, label %851

849:                                              ; preds = %845
  %850 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* %850, i32 1) #7
  br label %851

851:                                              ; preds = %845, %849, %841
  %852 = tail call zeroext i1 @_ZN5blink15SelectorChecker23MatchesFocusPseudoClassERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104) %15)
  br label %2015

853:                                              ; preds = %23
  %854 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 5
  %855 = load i32, i32* %854, align 4
  %856 = icmp eq i32 %855, 0
  br i1 %856, label %857, label %863

857:                                              ; preds = %853
  %858 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 6
  %859 = load i8, i8* %858, align 2, !range !6
  %860 = icmp eq i8 %859, 0
  br i1 %860, label %861, label %863

861:                                              ; preds = %857
  %862 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* %862, i32 8192) #7
  br label %863

863:                                              ; preds = %857, %861, %853
  %864 = tail call zeroext i1 @_ZN5blink15SelectorChecker30MatchesFocusVisiblePseudoClassERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104) %15)
  br label %2015

865:                                              ; preds = %23
  %866 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 5
  %867 = load i32, i32* %866, align 4
  %868 = icmp eq i32 %867, 0
  br i1 %868, label %869, label %882

869:                                              ; preds = %865
  %870 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 6
  %871 = load i8, i8* %870, align 2, !range !6
  %872 = icmp eq i8 %871, 0
  br i1 %872, label %880, label %873

873:                                              ; preds = %869
  %874 = bitcast %"class.blink::SelectorChecker"* %0 to %"class.blink::ComputedStyleBase"**
  %875 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %874, align 8
  %876 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %875, i64 0, i32 9
  %877 = bitcast [20 x i8]* %876 to i160*
  %878 = load i160, i160* %877, align 8
  %879 = or i160 %878, 20282409603651670423947251286016
  store i160 %879, i160* %877, align 8
  br label %882

880:                                              ; preds = %869
  %881 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* %881, i32 4096) #7
  br label %882

882:                                              ; preds = %873, %880, %865
  %883 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %884 = and i32 %883, 32
  %885 = icmp eq i32 %884, 0
  br i1 %885, label %887, label %886

886:                                              ; preds = %882
  call void @_ZN5blink5probe20ForcePseudoStateImplEPNS_7ElementENS_11CSSSelector10PseudoTypeEPb(%"class.blink::Element"* %15, i32 30, i8* nonnull %10) #7
  br label %887

887:                                              ; preds = %882, %886
  %888 = load i8, i8* %10, align 1, !range !6
  %889 = icmp eq i8 %888, 0
  br i1 %889, label %890, label %2015

890:                                              ; preds = %887
  %891 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %892 = load i32, i32* %891, align 8
  %893 = trunc i32 %892 to i8
  %894 = icmp slt i8 %893, 0
  br i1 %894, label %895, label %2015

895:                                              ; preds = %890
  %896 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %897 = call zeroext i1 @_ZNK5blink4Node33IsUserActionElementHasFocusWithinEv(%"class.blink::Node"* %896) #7
  br label %2015

898:                                              ; preds = %23
  %899 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 5
  %900 = load i32, i32* %899, align 4
  %901 = icmp eq i32 %900, 0
  br i1 %901, label %902, label %915

902:                                              ; preds = %898
  %903 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 6
  %904 = load i8, i8* %903, align 2, !range !6
  %905 = icmp eq i8 %904, 0
  br i1 %905, label %913, label %906

906:                                              ; preds = %902
  %907 = bitcast %"class.blink::SelectorChecker"* %0 to %"class.blink::ComputedStyleBase"**
  %908 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %907, align 8
  %909 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %908, i64 0, i32 9
  %910 = bitcast [20 x i8]* %909 to i160*
  %911 = load i160, i160* %910, align 8
  %912 = or i160 %911, 40564819207303340847894502572032
  store i160 %912, i160* %910, align 8
  br label %915

913:                                              ; preds = %902
  %914 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* %914, i32 2) #7
  br label %915

915:                                              ; preds = %906, %913, %898
  %916 = bitcast %"class.blink::Element"** %14 to %"class.blink::Node"**
  %917 = load %"class.blink::Node"*, %"class.blink::Node"** %916, align 8
  %918 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %917, i64 0, i32 3, i32 0, i32 0
  %919 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %918, align 8
  %920 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %919, i64 0, i32 2, i32 0, i32 0
  %921 = load %"class.blink::Document"*, %"class.blink::Document"** %920, align 8
  %922 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %921, i64 0, i32 33
  %923 = load i32, i32* %922, align 8
  %924 = icmp eq i32 %923, 0
  br i1 %924, label %925, label %957

925:                                              ; preds = %915
  %926 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 5
  %927 = load i8, i8* %926, align 1, !range !6
  %928 = icmp eq i8 %927, 0
  br i1 %928, label %929, label %957

929:                                              ; preds = %925
  %930 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %917, i64 0, i32 1
  %931 = load i32, i32* %930, align 8
  %932 = and i32 %931, 64
  %933 = icmp eq i32 %932, 0
  br i1 %933, label %934, label %957

934:                                              ; preds = %929
  %935 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %16, align 8
  %936 = bitcast %"class.blink::CSSSelector"* %935 to i32*
  %937 = load i32, i32* %936, align 8
  %938 = and i32 %937, 15
  %939 = icmp eq i32 %938, 0
  br i1 %939, label %940, label %2015

940:                                              ; preds = %934, %954
  %941 = phi i32 [ %948, %954 ], [ %937, %934 ]
  %942 = phi %"class.blink::CSSSelector"* [ %945, %954 ], [ %935, %934 ]
  %943 = and i32 %941, 131072
  %944 = icmp eq i32 %943, 0
  %945 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %942, i64 1
  br i1 %944, label %946, label %2015

946:                                              ; preds = %940
  %947 = bitcast %"class.blink::CSSSelector"* %945 to i32*
  %948 = load i32, i32* %947, align 8
  %949 = and i32 %948, 240
  %950 = icmp eq i32 %949, 64
  br i1 %950, label %951, label %957

951:                                              ; preds = %946
  %952 = lshr i32 %948, 8
  %953 = trunc i32 %952 to i8
  switch i8 %953, label %957 [
    i8 26, label %954
    i8 31, label %954
  ]

954:                                              ; preds = %951, %951
  %955 = and i32 %948, 15
  %956 = icmp eq i32 %955, 0
  br i1 %956, label %940, label %2015

957:                                              ; preds = %946, %951, %915, %925, %929
  %958 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %959 = and i32 %958, 32
  %960 = icmp eq i32 %959, 0
  br i1 %960, label %962, label %961

961:                                              ; preds = %957
  call void @_ZN5blink5probe20ForcePseudoStateImplEPNS_7ElementENS_11CSSSelector10PseudoTypeEPb(%"class.blink::Element"* %15, i32 26, i8* nonnull %10) #7
  br label %962

962:                                              ; preds = %957, %961
  %963 = load i8, i8* %10, align 1, !range !6
  %964 = icmp eq i8 %963, 0
  br i1 %964, label %965, label %2015

965:                                              ; preds = %962
  %966 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %967 = load i32, i32* %966, align 8
  %968 = trunc i32 %967 to i8
  %969 = icmp slt i8 %968, 0
  br i1 %969, label %970, label %2015

970:                                              ; preds = %965
  %971 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %972 = call zeroext i1 @_ZNK5blink4Node26IsUserActionElementHoveredEv(%"class.blink::Node"* %971) #7
  br label %2015

973:                                              ; preds = %23
  %974 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 5
  %975 = load i32, i32* %974, align 4
  %976 = icmp eq i32 %975, 0
  br i1 %976, label %977, label %990

977:                                              ; preds = %973
  %978 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 6
  %979 = load i8, i8* %978, align 2, !range !6
  %980 = icmp eq i8 %979, 0
  br i1 %980, label %988, label %981

981:                                              ; preds = %977
  %982 = bitcast %"class.blink::SelectorChecker"* %0 to %"class.blink::ComputedStyleBase"**
  %983 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %982, align 8
  %984 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %983, i64 0, i32 9
  %985 = bitcast [20 x i8]* %984 to i160*
  %986 = load i160, i160* %985, align 8
  %987 = or i160 %986, 2147483648
  store i160 %987, i160* %985, align 8
  br label %990

988:                                              ; preds = %977
  %989 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0
  tail call void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* %989, i32 4) #7
  br label %990

990:                                              ; preds = %981, %988, %973
  %991 = bitcast %"class.blink::Element"** %14 to %"class.blink::Node"**
  %992 = load %"class.blink::Node"*, %"class.blink::Node"** %991, align 8
  %993 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %992, i64 0, i32 3, i32 0, i32 0
  %994 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %993, align 8
  %995 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %994, i64 0, i32 2, i32 0, i32 0
  %996 = load %"class.blink::Document"*, %"class.blink::Document"** %995, align 8
  %997 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %996, i64 0, i32 33
  %998 = load i32, i32* %997, align 8
  %999 = icmp eq i32 %998, 0
  br i1 %999, label %1000, label %1032

1000:                                             ; preds = %990
  %1001 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 5
  %1002 = load i8, i8* %1001, align 1, !range !6
  %1003 = icmp eq i8 %1002, 0
  br i1 %1003, label %1004, label %1032

1004:                                             ; preds = %1000
  %1005 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %992, i64 0, i32 1
  %1006 = load i32, i32* %1005, align 8
  %1007 = and i32 %1006, 64
  %1008 = icmp eq i32 %1007, 0
  br i1 %1008, label %1009, label %1032

1009:                                             ; preds = %1004
  %1010 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %16, align 8
  %1011 = bitcast %"class.blink::CSSSelector"* %1010 to i32*
  %1012 = load i32, i32* %1011, align 8
  %1013 = and i32 %1012, 15
  %1014 = icmp eq i32 %1013, 0
  br i1 %1014, label %1015, label %2015

1015:                                             ; preds = %1009, %1029
  %1016 = phi i32 [ %1023, %1029 ], [ %1012, %1009 ]
  %1017 = phi %"class.blink::CSSSelector"* [ %1020, %1029 ], [ %1010, %1009 ]
  %1018 = and i32 %1016, 131072
  %1019 = icmp eq i32 %1018, 0
  %1020 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %1017, i64 1
  br i1 %1019, label %1021, label %2015

1021:                                             ; preds = %1015
  %1022 = bitcast %"class.blink::CSSSelector"* %1020 to i32*
  %1023 = load i32, i32* %1022, align 8
  %1024 = and i32 %1023, 240
  %1025 = icmp eq i32 %1024, 64
  br i1 %1025, label %1026, label %1032

1026:                                             ; preds = %1021
  %1027 = lshr i32 %1023, 8
  %1028 = trunc i32 %1027 to i8
  switch i8 %1028, label %1032 [
    i8 26, label %1029
    i8 31, label %1029
  ]

1029:                                             ; preds = %1026, %1026
  %1030 = and i32 %1023, 15
  %1031 = icmp eq i32 %1030, 0
  br i1 %1031, label %1015, label %2015

1032:                                             ; preds = %1021, %1026, %990, %1000, %1004
  %1033 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %1034 = and i32 %1033, 32
  %1035 = icmp eq i32 %1034, 0
  br i1 %1035, label %1037, label %1036

1036:                                             ; preds = %1032
  call void @_ZN5blink5probe20ForcePseudoStateImplEPNS_7ElementENS_11CSSSelector10PseudoTypeEPb(%"class.blink::Element"* %15, i32 31, i8* nonnull %10) #7
  br label %1037

1037:                                             ; preds = %1032, %1036
  %1038 = load i8, i8* %10, align 1, !range !6
  %1039 = icmp eq i8 %1038, 0
  br i1 %1039, label %1040, label %2015

1040:                                             ; preds = %1037
  %1041 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %1042 = load i32, i32* %1041, align 8
  %1043 = trunc i32 %1042 to i8
  %1044 = icmp slt i8 %1043, 0
  br i1 %1044, label %1045, label %2015

1045:                                             ; preds = %1040
  %1046 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %1047 = call zeroext i1 @_ZNK5blink4Node25IsUserActionElementActiveEv(%"class.blink::Node"* %1046) #7
  br label %2015

1048:                                             ; preds = %23
  %1049 = bitcast %"class.blink::Element"* %15 to i1 (%"class.blink::Element"*)***
  %1050 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %1049, align 8
  %1051 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1050, i64 115
  %1052 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1051, align 8
  %1053 = tail call zeroext i1 %1052(%"class.blink::Element"* %15) #7
  br label %2015

1054:                                             ; preds = %23
  %1055 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %1056 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1055, align 8
  %1057 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1056, i64 0, i32 2, i32 0, i32 0
  %1058 = load %"class.blink::Document"*, %"class.blink::Document"** %1057, align 8
  %1059 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1058, i64 0, i32 107
  %1060 = load i8, i8* %1059, align 8
  %1061 = and i8 %1060, 16
  %1062 = icmp ne i8 %1061, 0
  br label %2015

1063:                                             ; preds = %23
  %1064 = bitcast %"class.blink::Element"* %15 to i1 (%"class.blink::Element"*)***
  %1065 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %1064, align 8
  %1066 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1065, i64 114
  %1067 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1066, align 8
  %1068 = tail call zeroext i1 %1067(%"class.blink::Element"* %15) #7
  br label %2015

1069:                                             ; preds = %23
  %1070 = bitcast %"class.blink::Element"* %15 to i1 (%"class.blink::Element"*)***
  %1071 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %1070, align 8
  %1072 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1071, i64 138
  %1073 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1072, align 8
  %1074 = tail call zeroext i1 %1073(%"class.blink::Element"* %15) #7
  br label %2015

1075:                                             ; preds = %23
  %1076 = bitcast %"class.blink::Element"* %15 to i1 (%"class.blink::Element"*)***
  %1077 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %1076, align 8
  %1078 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1077, i64 116
  %1079 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1078, align 8
  %1080 = tail call zeroext i1 %1079(%"class.blink::Element"* %15) #7
  br label %2015

1081:                                             ; preds = %23
  %1082 = bitcast %"class.blink::Element"* %15 to i1 (%"class.blink::Element"*)***
  %1083 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %1082, align 8
  %1084 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1083, i64 117
  %1085 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1084, align 8
  %1086 = tail call zeroext i1 %1085(%"class.blink::Element"* %15) #7
  br label %2015

1087:                                             ; preds = %23
  %1088 = bitcast %"class.blink::Element"* %15 to i1 (%"class.blink::Element"*)***
  %1089 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %1088, align 8
  %1090 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1089, i64 127
  %1091 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1090, align 8
  %1092 = tail call zeroext i1 %1091(%"class.blink::Element"* %15) #7
  br label %2015

1093:                                             ; preds = %23
  %1094 = bitcast %"class.blink::Element"* %15 to i1 (%"class.blink::Element"*)***
  %1095 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %1094, align 8
  %1096 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1095, i64 128
  %1097 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1096, align 8
  %1098 = tail call zeroext i1 %1097(%"class.blink::Element"* %15) #7
  br label %2015

1099:                                             ; preds = %23
  %1100 = bitcast %"class.blink::Element"* %15 to i1 (%"class.blink::Element"*)***
  %1101 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %1100, align 8
  %1102 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1101, i64 118
  %1103 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1102, align 8
  %1104 = tail call zeroext i1 %1103(%"class.blink::Element"* %15) #7
  br i1 %1104, label %1105, label %2015

1105:                                             ; preds = %1099
  %1106 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %1100, align 8
  %1107 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1106, i64 130
  %1108 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1107, align 8
  %1109 = tail call zeroext i1 %1108(%"class.blink::Element"* %15) #7
  br label %2015

1110:                                             ; preds = %23
  %1111 = bitcast %"class.blink::Element"* %15 to i1 (%"class.blink::Element"*)***
  %1112 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %1111, align 8
  %1113 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1112, i64 118
  %1114 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1113, align 8
  %1115 = tail call zeroext i1 %1114(%"class.blink::Element"* %15) #7
  br i1 %1115, label %1116, label %2015

1116:                                             ; preds = %1110
  %1117 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %1111, align 8
  %1118 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1117, i64 130
  %1119 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1118, align 8
  %1120 = tail call zeroext i1 %1119(%"class.blink::Element"* %15) #7
  %1121 = xor i1 %1120, true
  br label %2015

1122:                                             ; preds = %23
  %1123 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %1124 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %1125 = icmp eq %"class.blink::Element"* %15, null
  br i1 %1125, label %2015, label %1126

1126:                                             ; preds = %1122
  %1127 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %1128 = load i32, i32* %1127, align 8
  %1129 = and i32 %1128, 48
  %1130 = icmp eq i32 %1129, 0
  br i1 %1130, label %1131, label %2015

1131:                                             ; preds = %1126
  %1132 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1123, i64 0, i32 0, i32 0, i32 0
  %1133 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1132, align 8
  %1134 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1124, i64 1, i32 2
  %1135 = bitcast %"class.blink::Member.317"* %1134 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1136 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1135, align 8
  %1137 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1136, i64 0, i32 3, i32 0, i32 0, i32 0
  %1138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1137, align 8
  %1139 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1133, i64 0, i32 3, i32 0, i32 0, i32 0
  %1140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1139, align 8
  %1141 = icmp eq %"class.WTF::StringImpl"* %1138, %1140
  %1142 = bitcast %"class.blink::Element"* %15 to %"class.blink::HTMLInputElement"*
  br i1 %1141, label %1143, label %1151

1143:                                             ; preds = %1131
  %1144 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement19ShouldAppearCheckedEv(%"class.blink::HTMLInputElement"* nonnull %1142) #7
  br i1 %1144, label %1145, label %2015

1145:                                             ; preds = %1143
  %1146 = bitcast %"class.blink::Element"* %15 to i1 (%"class.blink::HTMLInputElement"*)***
  %1147 = load i1 (%"class.blink::HTMLInputElement"*)**, i1 (%"class.blink::HTMLInputElement"*)*** %1146, align 8
  %1148 = getelementptr inbounds i1 (%"class.blink::HTMLInputElement"*)*, i1 (%"class.blink::HTMLInputElement"*)** %1147, i64 120
  %1149 = load i1 (%"class.blink::HTMLInputElement"*)*, i1 (%"class.blink::HTMLInputElement"*)** %1148, align 8
  %1150 = tail call zeroext i1 %1149(%"class.blink::HTMLInputElement"* nonnull %1142) #7
  br i1 %1150, label %2015, label %1166

1151:                                             ; preds = %1131
  %1152 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %1153 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1152, i64 0, i32 0, i32 0, i32 0
  %1154 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1153, align 8
  %1155 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1124, i64 1, i32 2
  %1156 = bitcast %"class.blink::Member.317"* %1155 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1157 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1156, align 8
  %1158 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1157, i64 0, i32 3, i32 0, i32 0, i32 0
  %1159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1158, align 8
  %1160 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1154, i64 0, i32 3, i32 0, i32 0, i32 0
  %1161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1160, align 8
  %1162 = icmp eq %"class.WTF::StringImpl"* %1159, %1161
  br i1 %1162, label %1163, label %2015

1163:                                             ; preds = %1151
  %1164 = bitcast %"class.blink::Element"* %15 to %"class.blink::HTMLOptionElement"*
  %1165 = tail call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %1164) #7
  br i1 %1165, label %1166, label %2015

1166:                                             ; preds = %1145, %1163
  br label %2015

1167:                                             ; preds = %23
  %1168 = bitcast %"class.blink::Element"* %15 to i1 (%"class.blink::Element"*)***
  %1169 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %1168, align 8
  %1170 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1169, i64 120
  %1171 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1170, align 8
  %1172 = tail call zeroext i1 %1171(%"class.blink::Element"* %15) #7
  br label %2015

1173:                                             ; preds = %23
  %1174 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %1175 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1174, align 8
  %1176 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1175, i64 0, i32 2, i32 0, i32 0
  %1177 = load %"class.blink::Document"*, %"class.blink::Document"** %1176, align 8
  %1178 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1177, i64 0, i32 47, i32 0, i32 0
  %1179 = load %"class.blink::Element"*, %"class.blink::Element"** %1178, align 8
  %1180 = icmp eq %"class.blink::Element"* %15, %1179
  br label %2015

1181:                                             ; preds = %23
  %1182 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %1183 = bitcast %"class.blink::Element"* %15 to i1 (%"class.blink::Node"*)***
  %1184 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %1183, align 8
  %1185 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %1184, i64 39
  %1186 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %1185, align 8
  %1187 = tail call zeroext i1 %1186(%"class.blink::Node"* %1182) #7
  %1188 = icmp eq %"class.blink::Element"* %15, null
  %1189 = xor i1 %1187, true
  %1190 = or i1 %1188, %1189
  br i1 %1190, label %1213, label %1191

1191:                                             ; preds = %1181
  %1192 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 1, i32 0, i32 0, i32 1
  %1193 = bitcast i32* %1192 to %"class.WTF::StringImpl"**
  %1194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1193, align 8
  %1195 = icmp eq %"class.WTF::StringImpl"* %1194, null
  br i1 %1195, label %1215, label %1196

1196:                                             ; preds = %1191
  %1197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1198 = load atomic i32, i32* %1197 monotonic, align 4
  %1199 = and i32 %1198, 2
  %1200 = icmp eq i32 %1199, 0
  br i1 %1200, label %1201, label %1215

1201:                                             ; preds = %1196
  %1202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1194, i64 0, i32 0
  %1203 = load i32, i32* %1202, align 4
  %1204 = zext i32 %1203 to i33
  %1205 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1204, i33 1) #7
  %1206 = extractvalue { i33, i1 } %1205, 1
  %1207 = extractvalue { i33, i1 } %1205, 0
  %1208 = icmp slt i33 %1207, 0
  %1209 = or i1 %1206, %1208
  br i1 %1209, label %1210, label %1211, !prof !13

1210:                                             ; preds = %1201
  tail call void @llvm.trap() #7
  unreachable

1211:                                             ; preds = %1201
  %1212 = trunc i33 %1207 to i32
  store i32 %1212, i32* %1202, align 4
  br label %1215

1213:                                             ; preds = %1181
  %1214 = tail call %"class.WTF::StringImpl"* @_ZNK5blink7Element24ComputeInheritedLanguageEv(%"class.blink::Element"* %15) #7
  br label %1215

1215:                                             ; preds = %1211, %1196, %1191, %1213
  %1216 = phi %"class.WTF::StringImpl"* [ %1214, %1213 ], [ null, %1191 ], [ %1194, %1196 ], [ %1194, %1211 ]
  %1217 = load i32, i32* %24, align 8
  %1218 = and i32 %1217, 262144
  %1219 = icmp eq i32 %1218, 0
  br i1 %1219, label %1225, label %1220

1220:                                             ; preds = %1215
  %1221 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %17, i64 0, i32 1
  %1222 = bitcast %"union.blink::CSSSelector::DataUnion"* %1221 to %"struct.blink::CSSSelector::RareData"**
  %1223 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %1222, align 8
  %1224 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %1223, i64 0, i32 5
  br label %1227

1225:                                             ; preds = %1215
  %1226 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %1227

1227:                                             ; preds = %1220, %1225
  %1228 = phi %"class.WTF::AtomicString"* [ %1224, %1220 ], [ %1226, %1225 ]
  %1229 = icmp eq %"class.WTF::StringImpl"* %1216, null
  br i1 %1229, label %2015, label %1230

1230:                                             ; preds = %1227
  %1231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1216, i64 0, i32 1
  %1232 = load i32, i32* %1231, align 4
  %1233 = icmp eq i32 %1232, 0
  %1234 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1234) #7
  br i1 %1233, label %1304, label %1235

1235:                                             ; preds = %1230
  %1236 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1228, i64 0, i32 0, i32 0, i32 0
  %1237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1236, align 8
  %1238 = icmp eq %"class.WTF::StringImpl"* %1237, null
  br i1 %1238, label %1239, label %1243

1239:                                             ; preds = %1235
  %1240 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* null, i8** %1240, align 8
  %1241 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1242 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %1241, i64* %1242, align 8
  br label %1250

1243:                                             ; preds = %1235
  %1244 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1237, %"class.WTF::StringImpl"** %1244, align 8
  %1245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1237, i64 0, i32 1
  %1246 = load i32, i32* %1245, align 4
  %1247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1237, i64 1
  %1248 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %1249 = bitcast i8** %1248 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1247, %"class.WTF::StringImpl"** %1249, align 8
  br label %1250

1250:                                             ; preds = %1239, %1243
  %1251 = phi i32 [ %1246, %1243 ], [ 0, %1239 ]
  %1252 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %1251, i32* %1252, align 8
  %1253 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %1216, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1234) #7
  br i1 %1253, label %1254, label %1305

1254:                                             ; preds = %1250
  %1255 = load i32, i32* %1231, align 4
  %1256 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1236, align 8
  %1257 = icmp eq %"class.WTF::StringImpl"* %1256, null
  br i1 %1257, label %1261, label %1258

1258:                                             ; preds = %1254
  %1259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1256, i64 0, i32 1
  %1260 = load i32, i32* %1259, align 4
  br label %1261

1261:                                             ; preds = %1254, %1258
  %1262 = phi i32 [ %1260, %1258 ], [ 0, %1254 ]
  %1263 = icmp eq i32 %1255, %1262
  br i1 %1263, label %1291, label %1264

1264:                                             ; preds = %1261
  br i1 %1257, label %1268, label %1265

1265:                                             ; preds = %1264
  %1266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1256, i64 0, i32 1
  %1267 = load i32, i32* %1266, align 4
  br label %1268

1268:                                             ; preds = %1265, %1264
  %1269 = phi i32 [ %1267, %1265 ], [ 0, %1264 ]
  %1270 = icmp ugt i32 %1255, %1269
  br i1 %1270, label %1271, label %1305

1271:                                             ; preds = %1268
  %1272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1273 = load atomic i32, i32* %1272 monotonic, align 4
  %1274 = and i32 %1273, 1
  %1275 = icmp eq i32 %1274, 0
  %1276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1216, i64 1
  br i1 %1275, label %1283, label %1277

1277:                                             ; preds = %1271
  %1278 = bitcast %"class.WTF::StringImpl"* %1276 to i8*
  %1279 = zext i32 %1269 to i64
  %1280 = getelementptr inbounds i8, i8* %1278, i64 %1279
  %1281 = load i8, i8* %1280, align 1
  %1282 = zext i8 %1281 to i16
  br label %1288

1283:                                             ; preds = %1271
  %1284 = bitcast %"class.WTF::StringImpl"* %1276 to i16*
  %1285 = zext i32 %1269 to i64
  %1286 = getelementptr inbounds i16, i16* %1284, i64 %1285
  %1287 = load i16, i16* %1286, align 2
  br label %1288

1288:                                             ; preds = %1277, %1283
  %1289 = phi i16 [ %1282, %1277 ], [ %1287, %1283 ]
  %1290 = icmp eq i16 %1289, 45
  br i1 %1290, label %1291, label %1305

1291:                                             ; preds = %1261, %1288
  %1292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1293 = load atomic i32, i32* %1292 monotonic, align 4
  %1294 = and i32 %1293, 2
  %1295 = icmp eq i32 %1294, 0
  %1296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1216, i64 0, i32 0
  %1297 = load i32, i32* %1296, align 4
  br i1 %1295, label %1298, label %1300

1298:                                             ; preds = %1291
  %1299 = add i32 %1297, -1
  store i32 %1299, i32* %1296, align 4
  br label %1300

1300:                                             ; preds = %1298, %1291
  %1301 = phi i32 [ %1299, %1298 ], [ %1297, %1291 ]
  %1302 = icmp eq i32 %1301, 0
  br i1 %1302, label %1303, label %2015

1303:                                             ; preds = %1300
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1216) #7
  br label %2015

1304:                                             ; preds = %1230
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1234) #7
  br label %1305

1305:                                             ; preds = %1268, %1250, %1288, %1304
  %1306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1307 = load atomic i32, i32* %1306 monotonic, align 4
  %1308 = and i32 %1307, 2
  %1309 = icmp eq i32 %1308, 0
  %1310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1216, i64 0, i32 0
  %1311 = load i32, i32* %1310, align 4
  br i1 %1309, label %1312, label %1314

1312:                                             ; preds = %1305
  %1313 = add i32 %1311, -1
  store i32 %1313, i32* %1310, align 4
  br label %1314

1314:                                             ; preds = %1312, %1305
  %1315 = phi i32 [ %1313, %1312 ], [ %1311, %1305 ]
  %1316 = icmp eq i32 %1315, 0
  br i1 %1316, label %1317, label %2015

1317:                                             ; preds = %1314
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1216) #7
  br label %2015

1318:                                             ; preds = %23
  %1319 = and i32 %25, 262144
  %1320 = icmp eq i32 %1319, 0
  br i1 %1320, label %1326, label %1321

1321:                                             ; preds = %1318
  %1322 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %17, i64 0, i32 1
  %1323 = bitcast %"union.blink::CSSSelector::DataUnion"* %1322 to %"struct.blink::CSSSelector::RareData"**
  %1324 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %1323, align 8
  %1325 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %1324, i64 0, i32 5
  br label %1328

1326:                                             ; preds = %1318
  %1327 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %1328

1328:                                             ; preds = %1321, %1326
  %1329 = phi %"class.WTF::AtomicString"* [ %1325, %1321 ], [ %1327, %1326 ]
  %1330 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1329, i64 0, i32 0, i32 0, i32 0
  %1331 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1330, align 8
  %1332 = icmp eq %"class.WTF::StringImpl"* %1331, null
  br i1 %1332, label %2015, label %1333

1333:                                             ; preds = %1328
  %1334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1331, i64 0, i32 1
  %1335 = load i32, i32* %1334, align 4
  %1336 = icmp eq i32 %1335, 0
  br i1 %1336, label %2015, label %1337

1337:                                             ; preds = %1333
  %1338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1331, i64 1
  %1339 = bitcast %"class.WTF::StringImpl"* %1338 to i8*
  %1340 = icmp eq i32 %1335, 3
  br i1 %1340, label %1341, label %2015

1341:                                             ; preds = %1337
  %1342 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1331, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1343 = load atomic i32, i32* %1342 monotonic, align 4
  %1344 = and i32 %1343, 1
  %1345 = icmp eq i32 %1344, 0
  br i1 %1345, label %1365, label %1346

1346:                                             ; preds = %1341
  %1347 = load i8, i8* %1339, align 1
  %1348 = zext i8 %1347 to i64
  %1349 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1348
  %1350 = load i8, i8* %1349, align 1
  %1351 = zext i8 %1350 to i32
  %1352 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %1353 = sext i8 %1352 to i32
  %1354 = icmp eq i32 %1351, %1353
  br i1 %1354, label %1355, label %1412

1355:                                             ; preds = %1346
  %1356 = getelementptr inbounds i8, i8* %1339, i64 1
  %1357 = load i8, i8* %1356, align 1
  %1358 = zext i8 %1357 to i64
  %1359 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1358
  %1360 = load i8, i8* %1359, align 1
  %1361 = zext i8 %1360 to i32
  %1362 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %1363 = sext i8 %1362 to i32
  %1364 = icmp eq i32 %1361, %1363
  br i1 %1364, label %1402, label %1412

1365:                                             ; preds = %1341
  %1366 = bitcast %"class.WTF::StringImpl"* %1338 to i16*
  %1367 = load i16, i16* %1366, align 2
  %1368 = add i16 %1367, -65
  %1369 = icmp ult i16 %1368, 26
  %1370 = zext i1 %1369 to i16
  %1371 = shl nuw nsw i16 %1370, 5
  %1372 = or i16 %1371, %1367
  %1373 = zext i16 %1372 to i32
  %1374 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %1375 = sext i8 %1374 to i32
  %1376 = icmp eq i32 %1373, %1375
  br i1 %1376, label %1377, label %1412

1377:                                             ; preds = %1365
  %1378 = getelementptr inbounds i16, i16* %1366, i64 1
  %1379 = load i16, i16* %1378, align 2
  %1380 = add i16 %1379, -65
  %1381 = icmp ult i16 %1380, 26
  %1382 = zext i1 %1381 to i16
  %1383 = shl nuw nsw i16 %1382, 5
  %1384 = or i16 %1383, %1379
  %1385 = zext i16 %1384 to i32
  %1386 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %1387 = sext i8 %1386 to i32
  %1388 = icmp eq i32 %1385, %1387
  br i1 %1388, label %1389, label %1412

1389:                                             ; preds = %1377
  %1390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1331, i64 1, i32 1
  %1391 = bitcast i32* %1390 to i16*
  %1392 = load i16, i16* %1391, align 2
  %1393 = add i16 %1392, -65
  %1394 = icmp ult i16 %1393, 26
  %1395 = zext i1 %1394 to i16
  %1396 = shl nuw nsw i16 %1395, 5
  %1397 = or i16 %1396, %1392
  %1398 = zext i16 %1397 to i32
  %1399 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %1400 = sext i8 %1399 to i32
  %1401 = icmp eq i32 %1398, %1400
  br i1 %1401, label %1483, label %1412

1402:                                             ; preds = %1355
  %1403 = getelementptr inbounds i8, i8* %1339, i64 2
  %1404 = load i8, i8* %1403, align 1
  %1405 = zext i8 %1404 to i64
  %1406 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1405
  %1407 = load i8, i8* %1406, align 1
  %1408 = zext i8 %1407 to i32
  %1409 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %1410 = sext i8 %1409 to i32
  %1411 = icmp eq i32 %1408, %1410
  br i1 %1411, label %1483, label %1412

1412:                                             ; preds = %1355, %1346, %1377, %1365, %1389, %1402
  %1413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1331, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1414 = load atomic i32, i32* %1413 monotonic, align 4
  %1415 = and i32 %1414, 1
  %1416 = icmp eq i32 %1415, 0
  br i1 %1416, label %1436, label %1417

1417:                                             ; preds = %1412
  %1418 = load i8, i8* %1339, align 1
  %1419 = zext i8 %1418 to i64
  %1420 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1419
  %1421 = load i8, i8* %1420, align 1
  %1422 = zext i8 %1421 to i32
  %1423 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %1424 = sext i8 %1423 to i32
  %1425 = icmp eq i32 %1422, %1424
  br i1 %1425, label %1426, label %2015

1426:                                             ; preds = %1417
  %1427 = getelementptr inbounds i8, i8* %1339, i64 1
  %1428 = load i8, i8* %1427, align 1
  %1429 = zext i8 %1428 to i64
  %1430 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1429
  %1431 = load i8, i8* %1430, align 1
  %1432 = zext i8 %1431 to i32
  %1433 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %1434 = sext i8 %1433 to i32
  %1435 = icmp eq i32 %1432, %1434
  br i1 %1435, label %1473, label %2015

1436:                                             ; preds = %1412
  %1437 = bitcast %"class.WTF::StringImpl"* %1338 to i16*
  %1438 = load i16, i16* %1437, align 2
  %1439 = add i16 %1438, -65
  %1440 = icmp ult i16 %1439, 26
  %1441 = zext i1 %1440 to i16
  %1442 = shl nuw nsw i16 %1441, 5
  %1443 = or i16 %1442, %1438
  %1444 = zext i16 %1443 to i32
  %1445 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %1446 = sext i8 %1445 to i32
  %1447 = icmp eq i32 %1444, %1446
  br i1 %1447, label %1448, label %2015

1448:                                             ; preds = %1436
  %1449 = getelementptr inbounds i16, i16* %1437, i64 1
  %1450 = load i16, i16* %1449, align 2
  %1451 = add i16 %1450, -65
  %1452 = icmp ult i16 %1451, 26
  %1453 = zext i1 %1452 to i16
  %1454 = shl nuw nsw i16 %1453, 5
  %1455 = or i16 %1454, %1450
  %1456 = zext i16 %1455 to i32
  %1457 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %1458 = sext i8 %1457 to i32
  %1459 = icmp eq i32 %1456, %1458
  br i1 %1459, label %1460, label %2015

1460:                                             ; preds = %1448
  %1461 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1331, i64 1, i32 1
  %1462 = bitcast i32* %1461 to i16*
  %1463 = load i16, i16* %1462, align 2
  %1464 = add i16 %1463, -65
  %1465 = icmp ult i16 %1464, 26
  %1466 = zext i1 %1465 to i16
  %1467 = shl nuw nsw i16 %1466, 5
  %1468 = or i16 %1467, %1463
  %1469 = zext i16 %1468 to i32
  %1470 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %1471 = sext i8 %1470 to i32
  %1472 = icmp eq i32 %1469, %1471
  br i1 %1472, label %1483, label %2015

1473:                                             ; preds = %1426
  %1474 = getelementptr inbounds i8, i8* %1339, i64 2
  %1475 = load i8, i8* %1474, align 1
  %1476 = zext i8 %1475 to i64
  %1477 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %1476
  %1478 = load i8, i8* %1477, align 1
  %1479 = zext i8 %1478 to i32
  %1480 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %1481 = sext i8 %1480 to i32
  %1482 = icmp eq i32 %1479, %1481
  br i1 %1482, label %1483, label %2015

1483:                                             ; preds = %1460, %1389, %1473, %1402
  %1484 = phi i8 [ 0, %1402 ], [ 1, %1473 ], [ 0, %1389 ], [ 1, %1460 ]
  %1485 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %1486 = load i32, i32* %1485, align 8
  %1487 = and i32 %1486, 48
  %1488 = icmp ne i32 %1487, 0
  %1489 = icmp eq %"class.blink::Element"* %15, null
  %1490 = or i1 %1489, %1488
  br i1 %1490, label %2015, label %1491

1491:                                             ; preds = %1483
  %1492 = lshr i32 %1486, 28
  %1493 = trunc i32 %1492 to i8
  %1494 = and i8 %1493, 1
  %1495 = icmp eq i8 %1494, %1484
  br label %2015

1496:                                             ; preds = %23
  %1497 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_html_select_menu_element_enabled_E, align 1, !range !6
  %1498 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_html_popup_element_enabled_E, align 1
  %1499 = or i8 %1498, %1497
  %1500 = icmp eq i8 %1499, 0
  br i1 %1500, label %2015, label %1501

1501:                                             ; preds = %1496
  %1502 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kPopupTagE, align 8
  %1503 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %1504 = icmp eq %"class.blink::Element"* %15, null
  br i1 %1504, label %2015, label %1505

1505:                                             ; preds = %1501
  %1506 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %1507 = load i32, i32* %1506, align 8
  %1508 = and i32 %1507, 48
  %1509 = icmp eq i32 %1508, 0
  br i1 %1509, label %1510, label %2015

1510:                                             ; preds = %1505
  %1511 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1502, i64 0, i32 0, i32 0, i32 0
  %1512 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1511, align 8
  %1513 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1503, i64 1, i32 2
  %1514 = bitcast %"class.blink::Member.317"* %1513 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1515 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1514, align 8
  %1516 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1515, i64 0, i32 3, i32 0, i32 0, i32 0
  %1517 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1516, align 8
  %1518 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1512, i64 0, i32 3, i32 0, i32 0, i32 0
  %1519 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1518, align 8
  %1520 = icmp eq %"class.WTF::StringImpl"* %1517, %1519
  br i1 %1520, label %1521, label %2015

1521:                                             ; preds = %1510
  %1522 = bitcast %"class.blink::Element"* %15 to %"class.blink::HTMLPopupElement"*
  %1523 = tail call zeroext i1 @_ZNK5blink16HTMLPopupElement4openEv(%"class.blink::HTMLPopupElement"* nonnull %1522) #7
  br label %2015

1524:                                             ; preds = %23, %23
  %1525 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %1526 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1525, align 8
  %1527 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1526, i64 0, i32 2, i32 0, i32 0
  %1528 = load %"class.blink::Document"*, %"class.blink::Document"** %1527, align 8
  %1529 = tail call %"class.blink::Element"* @_ZN5blink10Fullscreen21FullscreenElementFromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %1528) #7
  %1530 = icmp eq %"class.blink::Element"* %1529, %15
  br label %2015

1531:                                             ; preds = %23
  %1532 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %1533 = load i32, i32* %1532, align 8
  %1534 = and i32 %1533, 1
  %1535 = icmp eq i32 %1534, 0
  br i1 %1535, label %2015, label %1536

1536:                                             ; preds = %1531
  %1537 = tail call zeroext i1 @_ZNK5blink7Element22HasElementFlagInternalENS_12ElementFlagsE(%"class.blink::Element"* %15, i32 8) #7
  br label %2015

1538:                                             ; preds = %23
  %1539 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %1540 = load i32, i32* %1539, align 8
  %1541 = and i32 %1540, 48
  %1542 = icmp ne i32 %1541, 0
  %1543 = icmp eq %"class.blink::Element"* %15, null
  %1544 = or i1 %1543, %1542
  br i1 %1544, label %2015, label %1545

1545:                                             ; preds = %1538
  %1546 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %1547 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kAudioTagE, align 8
  %1548 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1547, i64 0, i32 0, i32 0, i32 0
  %1549 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1548, align 8
  %1550 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1546, i64 1, i32 2
  %1551 = bitcast %"class.blink::Member.317"* %1550 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1552 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1551, align 8
  %1553 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1552, i64 0, i32 3, i32 0, i32 0, i32 0
  %1554 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1553, align 8
  %1555 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1549, i64 0, i32 3, i32 0, i32 0, i32 0
  %1556 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1555, align 8
  %1557 = icmp eq %"class.WTF::StringImpl"* %1554, %1556
  br i1 %1557, label %1565, label %1558

1558:                                             ; preds = %1545
  %1559 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kVideoTagE, align 8
  %1560 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1559, i64 0, i32 0, i32 0, i32 0
  %1561 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1560, align 8
  %1562 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1561, i64 0, i32 3, i32 0, i32 0, i32 0
  %1563 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1562, align 8
  %1564 = icmp eq %"class.WTF::StringImpl"* %1554, %1563
  br i1 %1564, label %1565, label %2015

1565:                                             ; preds = %1545, %1558
  %1566 = bitcast %"class.blink::Element"* %15 to %"class.blink::HTMLMediaElement"*
  %1567 = tail call zeroext i1 @_ZNK5blink16HTMLMediaElement6pausedEv(%"class.blink::HTMLMediaElement"* nonnull %1566) #7
  br label %2015

1568:                                             ; preds = %23
  %1569 = tail call zeroext i1 @_ZN5blink26PictureInPictureController27IsElementInPictureInPictureEPKNS_7ElementE(%"class.blink::Element"* %15) #7
  br label %2015

1570:                                             ; preds = %23
  %1571 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %1572 = load i32, i32* %1571, align 8
  %1573 = and i32 %1572, 48
  %1574 = icmp ne i32 %1573, 0
  %1575 = icmp eq %"class.blink::Element"* %15, null
  %1576 = or i1 %1575, %1574
  br i1 %1576, label %2015, label %1577

1577:                                             ; preds = %1570
  %1578 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %1579 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kAudioTagE, align 8
  %1580 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1579, i64 0, i32 0, i32 0, i32 0
  %1581 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1580, align 8
  %1582 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1578, i64 1, i32 2
  %1583 = bitcast %"class.blink::Member.317"* %1582 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1584 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1583, align 8
  %1585 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1584, i64 0, i32 3, i32 0, i32 0, i32 0
  %1586 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1585, align 8
  %1587 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1581, i64 0, i32 3, i32 0, i32 0, i32 0
  %1588 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1587, align 8
  %1589 = icmp eq %"class.WTF::StringImpl"* %1586, %1588
  br i1 %1589, label %1597, label %1590

1590:                                             ; preds = %1577
  %1591 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kVideoTagE, align 8
  %1592 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1591, i64 0, i32 0, i32 0, i32 0
  %1593 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1592, align 8
  %1594 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1593, i64 0, i32 3, i32 0, i32 0, i32 0
  %1595 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1594, align 8
  %1596 = icmp eq %"class.WTF::StringImpl"* %1586, %1595
  br i1 %1596, label %1597, label %2015

1597:                                             ; preds = %1577, %1590
  %1598 = bitcast %"class.blink::Element"* %15 to %"class.blink::HTMLMediaElement"*
  %1599 = tail call zeroext i1 @_ZNK5blink16HTMLMediaElement6pausedEv(%"class.blink::HTMLMediaElement"* nonnull %1598) #7
  %1600 = xor i1 %1599, true
  br label %2015

1601:                                             ; preds = %23
  %1602 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kVideoTagE, align 8
  %1603 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %1604 = icmp eq %"class.blink::Element"* %15, null
  br i1 %1604, label %2015, label %1605

1605:                                             ; preds = %1601
  %1606 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %1607 = load i32, i32* %1606, align 8
  %1608 = and i32 %1607, 48
  %1609 = icmp eq i32 %1608, 0
  br i1 %1609, label %1610, label %2015

1610:                                             ; preds = %1605
  %1611 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1602, i64 0, i32 0, i32 0, i32 0
  %1612 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1611, align 8
  %1613 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1603, i64 1, i32 2
  %1614 = bitcast %"class.blink::Member.317"* %1613 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1615 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1614, align 8
  %1616 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1615, i64 0, i32 3, i32 0, i32 0, i32 0
  %1617 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1616, align 8
  %1618 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1612, i64 0, i32 3, i32 0, i32 0, i32 0
  %1619 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1618, align 8
  %1620 = icmp eq %"class.WTF::StringImpl"* %1617, %1619
  br i1 %1620, label %1621, label %2015

1621:                                             ; preds = %1610
  %1622 = bitcast %"class.blink::Element"* %15 to %"class.blink::HTMLVideoElement"*
  %1623 = tail call zeroext i1 @_ZNK5blink16HTMLVideoElement12IsPersistentEv(%"class.blink::HTMLVideoElement"* nonnull %1622) #7
  br label %2015

1624:                                             ; preds = %23
  %1625 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %1626 = load i32, i32* %1625, align 8
  %1627 = and i32 %1626, 1
  %1628 = icmp eq i32 %1627, 0
  br i1 %1628, label %2015, label %1629

1629:                                             ; preds = %1624
  %1630 = tail call zeroext i1 @_ZNK5blink7Element22HasElementFlagInternalENS_12ElementFlagsE(%"class.blink::Element"* %15, i32 32) #7
  br label %2015

1631:                                             ; preds = %23
  %1632 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %1633 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1632, align 8
  %1634 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1633, i64 0, i32 2, i32 0, i32 0
  %1635 = load %"class.blink::Document"*, %"class.blink::Document"** %1634, align 8
  %1636 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1635, i64 0, i32 109
  %1637 = load i8, i8* %1636, align 2, !range !6
  %1638 = icmp eq i8 %1637, 0
  br i1 %1638, label %2015, label %1639

1639:                                             ; preds = %1631
  %1640 = tail call %"class.blink::Element"* @_ZN5blink10Fullscreen21FullscreenElementFromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %1635) #7
  %1641 = icmp eq %"class.blink::Element"* %1640, %15
  br label %2015

1642:                                             ; preds = %23
  %1643 = bitcast %"class.blink::Element"* %15 to i1 (%"class.blink::Element"*)***
  %1644 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %1643, align 8
  %1645 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1644, i64 131
  %1646 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1645, align 8
  %1647 = tail call zeroext i1 %1646(%"class.blink::Element"* %15) #7
  br label %2015

1648:                                             ; preds = %23
  %1649 = bitcast %"class.blink::Element"* %15 to i1 (%"class.blink::Element"*)***
  %1650 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %1649, align 8
  %1651 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1650, i64 132
  %1652 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1651, align 8
  %1653 = tail call zeroext i1 %1652(%"class.blink::Element"* %15) #7
  br label %2015

1654:                                             ; preds = %23
  %1655 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %1656 = bitcast %"class.blink::Element"* %15 to i1 (%"class.blink::Node"*)***
  %1657 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %1656, align 8
  %1658 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %1657, i64 39
  %1659 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %1658, align 8
  %1660 = tail call zeroext i1 %1659(%"class.blink::Node"* %1655) #7
  %1661 = icmp eq %"class.blink::Element"* %15, null
  %1662 = xor i1 %1660, true
  %1663 = or i1 %1661, %1662
  br i1 %1663, label %2015, label %1664

1664:                                             ; preds = %1654
  %1665 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %1666 = bitcast %"class.blink::TraceWrapperV8Reference"* %1665 to i8*
  %1667 = load i8, i8* %1666, align 8
  %1668 = and i8 %1667, 1
  %1669 = icmp eq i8 %1668, 0
  br label %2015

1670:                                             ; preds = %23
  %1671 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %1672 = bitcast %"class.blink::Element"* %15 to i1 (%"class.blink::Node"*)***
  %1673 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %1672, align 8
  %1674 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %1673, i64 39
  %1675 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %1674, align 8
  %1676 = tail call zeroext i1 %1675(%"class.blink::Node"* %1671) #7
  %1677 = icmp eq %"class.blink::Element"* %15, null
  %1678 = xor i1 %1676, true
  %1679 = or i1 %1677, %1678
  br i1 %1679, label %2015, label %1680

1680:                                             ; preds = %1670
  %1681 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %1682 = bitcast %"class.blink::TraceWrapperV8Reference"* %1681 to i8*
  %1683 = load i8, i8* %1682, align 8
  %1684 = and i8 %1683, 1
  %1685 = icmp ne i8 %1684, 0
  br label %2015

1686:                                             ; preds = %23
  %1687 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 3
  %1688 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %1687, align 8
  %1689 = icmp eq %"class.blink::ContainerNode"* %1688, null
  br i1 %1689, label %2015, label %1690

1690:                                             ; preds = %1686
  %1691 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %1692 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1691, align 8
  %1693 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1692, i64 0, i32 2, i32 0, i32 0
  %1694 = load %"class.blink::Document"*, %"class.blink::Document"** %1693, align 8
  %1695 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1694, i64 0, i32 0
  %1696 = icmp eq %"class.blink::ContainerNode"* %1688, %1695
  br i1 %1696, label %1697, label %1701

1697:                                             ; preds = %1690
  %1698 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1694, i64 0, i32 47, i32 0, i32 0
  %1699 = load %"class.blink::Element"*, %"class.blink::Element"** %1698, align 8
  %1700 = icmp eq %"class.blink::Element"* %15, %1699
  br label %2015

1701:                                             ; preds = %1690
  %1702 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1688, i64 0, i32 0, i32 1
  %1703 = load i32, i32* %1702, align 8
  %1704 = and i32 %1703, 12
  %1705 = icmp eq i32 %1704, 8
  br i1 %1705, label %1706, label %1717

1706:                                             ; preds = %1701
  %1707 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1688, i64 0, i32 0, i32 3, i32 0, i32 0
  %1708 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1707, align 8
  %1709 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1708, i64 0, i32 1, i32 0, i32 0
  %1710 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %1709, align 8
  %1711 = icmp eq %"class.blink::ContainerNode"* %1710, %1688
  br i1 %1711, label %1712, label %1717

1712:                                             ; preds = %1706
  %1713 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1688, i64 0, i32 0, i32 2, i32 0, i32 0
  %1714 = bitcast %"class.blink::Node"** %1713 to %"class.blink::Element"**
  %1715 = load %"class.blink::Element"*, %"class.blink::Element"** %1714, align 8
  %1716 = icmp eq %"class.blink::Element"* %15, %1715
  br label %2015

1717:                                             ; preds = %1706, %1701
  %1718 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0
  %1719 = icmp eq %"class.blink::ContainerNode"* %1688, %1718
  br label %2015

1720:                                             ; preds = %23
  %1721 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %1722 = load i32, i32* %1721, align 8
  %1723 = and i32 %1722, 786432
  %1724 = icmp eq i32 %1723, 0
  br label %2015

1725:                                             ; preds = %23
  %1726 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %1727 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1726, align 8
  %1728 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1727, i64 0, i32 2, i32 0, i32 0
  %1729 = load %"class.blink::Document"*, %"class.blink::Document"** %1728, align 8
  %1730 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1729, i64 0, i32 2
  %1731 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 5
  %1732 = load i32, i32* %1731, align 4
  %1733 = icmp eq i32 %1732, 3
  %1734 = select i1 %1733, i32 2829, i32 2830
  %1735 = bitcast %"class.blink::UseCounter"* %1730 to void (%"class.blink::UseCounter"*, i32)***
  %1736 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %1735, align 8
  %1737 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %1736, i64 3
  %1738 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %1737, align 8
  tail call void %1738(%"class.blink::UseCounter"* %1730, i32 %1734) #7
  br label %1739

1739:                                             ; preds = %23, %1725
  %1740 = tail call zeroext i1 @_ZNK5blink15SelectorChecker15CheckPseudoHostERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* dereferenceable(56) %1, %"struct.blink::SelectorChecker::MatchResult"* dereferenceable(1) undef)
  br label %2015

1741:                                             ; preds = %23
  %1742 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %1743 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %1744 = icmp eq %"class.blink::Element"* %15, null
  br i1 %1744, label %2015, label %1745

1745:                                             ; preds = %1741
  %1746 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %1747 = load i32, i32* %1746, align 8
  %1748 = and i32 %1747, 48
  %1749 = icmp eq i32 %1748, 0
  br i1 %1749, label %1750, label %2015

1750:                                             ; preds = %1745
  %1751 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1742, i64 0, i32 0, i32 0, i32 0
  %1752 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1751, align 8
  %1753 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1743, i64 1, i32 2
  %1754 = bitcast %"class.blink::Member.317"* %1753 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1755 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1754, align 8
  %1756 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1755, i64 0, i32 3, i32 0, i32 0, i32 0
  %1757 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1756, align 8
  %1758 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1752, i64 0, i32 3, i32 0, i32 0, i32 0
  %1759 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1758, align 8
  %1760 = icmp eq %"class.WTF::StringImpl"* %1757, %1759
  br i1 %1760, label %1761, label %2015

1761:                                             ; preds = %1750
  %1762 = bitcast %"class.blink::Element"* %15 to %"class.blink::HTMLOptionElement"*
  %1763 = tail call zeroext i1 @_ZNK5blink17HTMLOptionElement24SpatialNavigationFocusedEv(%"class.blink::HTMLOptionElement"* nonnull %1762) #7
  br i1 %1763, label %1764, label %2015

1764:                                             ; preds = %1761
  %1765 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %1766 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1765, align 8
  %1767 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1766, i64 0, i32 2, i32 0, i32 0
  %1768 = load %"class.blink::Document"*, %"class.blink::Document"** %1767, align 8
  %1769 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1768) #7
  %1770 = icmp eq %"class.blink::LocalFrame"* %1769, null
  br i1 %1770, label %2015, label %1771

1771:                                             ; preds = %1764
  %1772 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1765, align 8
  %1773 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1772, i64 0, i32 2, i32 0, i32 0
  %1774 = load %"class.blink::Document"*, %"class.blink::Document"** %1773, align 8
  %1775 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1774) #7
  %1776 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1775, i64 0, i32 14, i32 0, i32 0
  %1777 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %1776, align 8
  %1778 = tail call zeroext i1 @_ZNK5blink14FrameSelection23FrameIsFocusedAndActiveEv(%"class.blink::FrameSelection"* %1777) #7
  br label %2015

1779:                                             ; preds = %23
  %1780 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %1781 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1780, align 8
  %1782 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1781, i64 0, i32 2, i32 0, i32 0
  %1783 = load %"class.blink::Document"*, %"class.blink::Document"** %1782, align 8
  %1784 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1783) #7
  %1785 = tail call zeroext i1 @_ZN5blink26IsSpatialNavigationEnabledEPKNS_10LocalFrameE(%"class.blink::LocalFrame"* %1784) #7
  %1786 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase40is_focusless_spatial_navigation_enabled_E, align 1
  %1787 = icmp ne i8 %1786, 0
  %1788 = and i1 %1785, %1787
  br i1 %1788, label %1789, label %2015

1789:                                             ; preds = %1779
  %1790 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1780, align 8
  %1791 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1790, i64 0, i32 2, i32 0, i32 0
  %1792 = load %"class.blink::Document"*, %"class.blink::Document"** %1791, align 8
  %1793 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %1792) #7
  %1794 = tail call dereferenceable(24) %"class.blink::SpatialNavigationController"* @_ZN5blink4Page30GetSpatialNavigationControllerEv(%"class.blink::Page"* %1793) #7
  %1795 = tail call %"class.blink::Element"* @_ZNK5blink27SpatialNavigationController20GetInterestedElementEv(%"class.blink::SpatialNavigationController"* %1794) #7
  %1796 = icmp ne %"class.blink::Element"* %1795, null
  %1797 = icmp eq %"class.blink::Element"* %1795, %15
  %1798 = and i1 %1797, %1796
  br label %2015

1799:                                             ; preds = %23
  %1800 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %1801 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %1802 = icmp eq %"class.blink::Element"* %15, null
  br i1 %1802, label %2015, label %1803

1803:                                             ; preds = %1799
  %1804 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %1805 = load i32, i32* %1804, align 8
  %1806 = and i32 %1805, 48
  %1807 = icmp eq i32 %1806, 0
  br i1 %1807, label %1808, label %2015

1808:                                             ; preds = %1803
  %1809 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1800, i64 0, i32 0, i32 0, i32 0
  %1810 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1809, align 8
  %1811 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1801, i64 1, i32 2
  %1812 = bitcast %"class.blink::Member.317"* %1811 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1813 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1812, align 8
  %1814 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1813, i64 0, i32 3, i32 0, i32 0, i32 0
  %1815 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1814, align 8
  %1816 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1810, i64 0, i32 3, i32 0, i32 0, i32 0
  %1817 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1816, align 8
  %1818 = icmp eq %"class.WTF::StringImpl"* %1815, %1817
  br i1 %1818, label %1819, label %2015

1819:                                             ; preds = %1808
  %1820 = bitcast %"class.blink::Element"* %15 to %"class.blink::HTMLInputElement"*
  %1821 = tail call %"class.blink::HTMLElement"* @_ZNK5blink16HTMLInputElement4listEv(%"class.blink::HTMLInputElement"* nonnull %1820) #7
  %1822 = icmp ne %"class.blink::HTMLElement"* %1821, null
  br label %2015

1823:                                             ; preds = %23
  %1824 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %1825 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1824, align 8
  %1826 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1825, i64 0, i32 2, i32 0, i32 0
  %1827 = load %"class.blink::Document"*, %"class.blink::Document"** %1826, align 8
  %1828 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1827, i64 0, i32 107
  %1829 = load i8, i8* %1828, align 8
  %1830 = and i8 %1829, 1
  %1831 = icmp ne i8 %1830, 0
  br label %2015

1832:                                             ; preds = %23
  %1833 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %1834 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %1835 = icmp eq %"class.blink::Element"* %15, null
  br i1 %1835, label %2015, label %1836

1836:                                             ; preds = %1832
  %1837 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %1838 = load i32, i32* %1837, align 8
  %1839 = and i32 %1838, 48
  %1840 = icmp eq i32 %1839, 0
  br i1 %1840, label %1841, label %2015

1841:                                             ; preds = %1836
  %1842 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1833, i64 0, i32 0, i32 0, i32 0
  %1843 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1842, align 8
  %1844 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1834, i64 1, i32 2
  %1845 = bitcast %"class.blink::Member.317"* %1844 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1846 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1845, align 8
  %1847 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1846, i64 0, i32 3, i32 0, i32 0, i32 0
  %1848 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1847, align 8
  %1849 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1843, i64 0, i32 3, i32 0, i32 0, i32 0
  %1850 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1849, align 8
  %1851 = icmp eq %"class.WTF::StringImpl"* %1848, %1850
  br i1 %1851, label %1852, label %2015

1852:                                             ; preds = %1841
  %1853 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 3, i32 0, i32 0, i32 1
  %1854 = bitcast i32* %1853 to i8*
  %1855 = load i8, i8* %1854, align 8, !range !6
  %1856 = icmp eq i8 %1855, 0
  br label %2015

1857:                                             ; preds = %23
  %1858 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %1859 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %1860 = icmp eq %"class.blink::Element"* %15, null
  br i1 %1860, label %2015, label %1861

1861:                                             ; preds = %1857
  %1862 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %1863 = load i32, i32* %1862, align 8
  %1864 = and i32 %1863, 48
  %1865 = icmp eq i32 %1864, 0
  br i1 %1865, label %1866, label %2015

1866:                                             ; preds = %1861
  %1867 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1858, i64 0, i32 0, i32 0, i32 0
  %1868 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1867, align 8
  %1869 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1859, i64 1, i32 2
  %1870 = bitcast %"class.blink::Member.317"* %1869 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1871 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1870, align 8
  %1872 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1871, i64 0, i32 3, i32 0, i32 0, i32 0
  %1873 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1872, align 8
  %1874 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1868, i64 0, i32 3, i32 0, i32 0, i32 0
  %1875 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1874, align 8
  %1876 = icmp eq %"class.WTF::StringImpl"* %1873, %1875
  br i1 %1876, label %1877, label %2015

1877:                                             ; preds = %1866
  %1878 = bitcast %"class.blink::Element"* %15 to %"class.blink::HTMLOptionElement"*
  %1879 = tail call zeroext i1 @_ZNK5blink17HTMLOptionElement20IsMultiSelectFocusedEv(%"class.blink::HTMLOptionElement"* nonnull %1878) #7
  br i1 %1879, label %1880, label %2015

1880:                                             ; preds = %1877
  %1881 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %1882 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1881, align 8
  %1883 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1882, i64 0, i32 2, i32 0, i32 0
  %1884 = load %"class.blink::Document"*, %"class.blink::Document"** %1883, align 8
  %1885 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1884) #7
  %1886 = icmp eq %"class.blink::LocalFrame"* %1885, null
  br i1 %1886, label %2015, label %1887

1887:                                             ; preds = %1880
  %1888 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1881, align 8
  %1889 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1888, i64 0, i32 2, i32 0, i32 0
  %1890 = load %"class.blink::Document"*, %"class.blink::Document"** %1889, align 8
  %1891 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1890) #7
  %1892 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1891, i64 0, i32 14, i32 0, i32 0
  %1893 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %1892, align 8
  %1894 = tail call zeroext i1 @_ZNK5blink14FrameSelection23FrameIsFocusedAndActiveEv(%"class.blink::FrameSelection"* %1893) #7
  br label %2015

1895:                                             ; preds = %23
  %1896 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %1897 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %1896) #7
  %1898 = icmp eq %"class.blink::ShadowRoot"* %1897, null
  br i1 %1898, label %2015, label %1899

1899:                                             ; preds = %1895
  %1900 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %1897, i64 0, i32 4
  %1901 = load i32, i32* %1900, align 8
  %1902 = and i32 %1901, 196608
  %1903 = icmp eq i32 %1902, 131072
  br i1 %1903, label %1904, label %2015

1904:                                             ; preds = %1899
  %1905 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %1897, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1906 = bitcast %"class.blink::Node"** %1905 to %"class.blink::Element"**
  %1907 = load %"class.blink::Element"*, %"class.blink::Element"** %1906, align 8
  %1908 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1907, i64 0, i32 0, i32 0, i32 1
  %1909 = load i32, i32* %1908, align 8
  %1910 = and i32 %1909, 12
  %1911 = icmp eq i32 %1910, 0
  %1912 = and i32 %1909, 1
  %1913 = icmp eq i32 %1912, 0
  %1914 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1907, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %1911, label %1915, label %1926

1915:                                             ; preds = %1904
  br i1 %1913, label %1922, label %1916

1916:                                             ; preds = %1915
  %1917 = bitcast %"class.blink::NodeData"** %1914 to %"class.blink::NodeRareData"**
  %1918 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %1917, align 8
  %1919 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %1918, i64 0, i32 1, i32 0, i32 0
  %1920 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %1919, align 8
  %1921 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %1920, i64 0, i32 2, i32 0
  br label %1941

1922:                                             ; preds = %1915
  %1923 = bitcast %"class.blink::NodeData"** %1914 to %"class.blink::NodeRenderingData"**
  %1924 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %1923, align 8
  %1925 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %1924, i64 0, i32 2, i32 0
  br label %1941

1926:                                             ; preds = %1904
  br i1 %1913, label %1931, label %1927

1927:                                             ; preds = %1926
  %1928 = bitcast %"class.blink::NodeData"** %1914 to %"class.blink::NodeRareData"**
  %1929 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %1928, align 8
  %1930 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %1929, i64 0, i32 1, i32 0, i32 0
  br label %1933

1931:                                             ; preds = %1926
  %1932 = bitcast %"class.blink::NodeData"** %1914 to %"class.blink::NodeRenderingData"**
  br label %1933

1933:                                             ; preds = %1931, %1927
  %1934 = phi %"class.blink::NodeRenderingData"** [ %1930, %1927 ], [ %1932, %1931 ]
  %1935 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %1934, align 8
  %1936 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %1935, i64 0, i32 1
  %1937 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1936, align 8
  %1938 = icmp eq %"class.blink::LayoutObject"* %1937, null
  br i1 %1938, label %2015, label %1939

1939:                                             ; preds = %1933
  %1940 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1937, i64 0, i32 5, i32 0
  br label %1941

1941:                                             ; preds = %1916, %1922, %1939
  %1942 = phi %"class.blink::ComputedStyle"** [ %1940, %1939 ], [ %1921, %1916 ], [ %1925, %1922 ]
  %1943 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1942, align 8
  %1944 = icmp eq %"class.blink::ComputedStyle"* %1943, null
  br i1 %1944, label %2015, label %1945

1945:                                             ; preds = %1941
  %1946 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1943, i64 0, i32 0, i32 3, i32 0, i32 0
  %1947 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %1946, align 8
  %1948 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %1947, i64 0, i32 3, i32 0, i32 0
  %1949 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %1948, align 8
  %1950 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %1949, i64 0, i32 39
  %1951 = load i32, i32* %1950, align 4
  %1952 = and i32 %1951, 31
  %1953 = icmp ne i32 %1952, 0
  br label %2015

1954:                                             ; preds = %23
  %1955 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 8
  %1956 = load i8, i8* %1955, align 4, !range !6
  %1957 = icmp eq i8 %1956, 0
  br i1 %1957, label %2015, label %1958

1958:                                             ; preds = %1954
  %1959 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %1960 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1959, align 8
  %1961 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1960, i64 0, i32 2, i32 0, i32 0
  %1962 = load %"class.blink::Document"*, %"class.blink::Document"** %1961, align 8
  %1963 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %1962) #7
  %1964 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %1963, i64 0, i32 10, i32 0, i32 0
  %1965 = load %"class.blink::FocusController"*, %"class.blink::FocusController"** %1964, align 8
  %1966 = getelementptr inbounds %"class.blink::FocusController", %"class.blink::FocusController"* %1965, i64 0, i32 2
  %1967 = load i8, i8* %1966, align 8, !range !6
  %1968 = icmp eq i8 %1967, 0
  br i1 %1968, label %1969, label %2015

1969:                                             ; preds = %1958
  %1970 = getelementptr inbounds %"class.blink::FocusController", %"class.blink::FocusController"* %1965, i64 0, i32 5
  %1971 = load i8, i8* %1970, align 1, !range !6
  %1972 = icmp eq i8 %1971, 0
  br label %2015

1973:                                             ; preds = %23
  %1974 = tail call zeroext i1 @_ZNK5blink7Element18DidAttachInternalsEv(%"class.blink::Element"* %15) #7
  br i1 %1974, label %1975, label %2015

1975:                                             ; preds = %1973
  %1976 = tail call dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"* %15) #7
  %1977 = load i32, i32* %24, align 8
  %1978 = and i32 %1977, 262144
  %1979 = icmp eq i32 %1978, 0
  %1980 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %17, i64 0, i32 1
  br i1 %1979, label %1985, label %1981

1981:                                             ; preds = %1975
  %1982 = bitcast %"union.blink::CSSSelector::DataUnion"* %1980 to %"struct.blink::CSSSelector::RareData"**
  %1983 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %1982, align 8
  %1984 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %1983, i64 0, i32 1
  br label %1987

1985:                                             ; preds = %1975
  %1986 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %1980, i64 0, i32 0
  br label %1987

1987:                                             ; preds = %1981, %1985
  %1988 = phi %"class.WTF::AtomicString"* [ %1984, %1981 ], [ %1986, %1985 ]
  %1989 = tail call zeroext i1 @_ZNK5blink16ElementInternals8HasStateERKN3WTF12AtomicStringE(%"class.blink::ElementInternals"* %1976, %"class.WTF::AtomicString"* dereferenceable(8) %1988) #7
  br label %2015

1990:                                             ; preds = %23
  %1991 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kDialogTagE, align 8
  %1992 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %1993 = icmp eq %"class.blink::Element"* %15, null
  br i1 %1993, label %2015, label %1994

1994:                                             ; preds = %1990
  %1995 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %1996 = load i32, i32* %1995, align 8
  %1997 = and i32 %1996, 48
  %1998 = icmp eq i32 %1997, 0
  br i1 %1998, label %1999, label %2015

1999:                                             ; preds = %1994
  %2000 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1991, i64 0, i32 0, i32 0, i32 0
  %2001 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %2000, align 8
  %2002 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1992, i64 1, i32 2
  %2003 = bitcast %"class.blink::Member.317"* %2002 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %2004 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %2003, align 8
  %2005 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %2004, i64 0, i32 3, i32 0, i32 0, i32 0
  %2006 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2005, align 8
  %2007 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %2001, i64 0, i32 3, i32 0, i32 0, i32 0
  %2008 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2007, align 8
  %2009 = icmp eq %"class.WTF::StringImpl"* %2006, %2008
  br i1 %2009, label %2010, label %2015

2010:                                             ; preds = %1999
  %2011 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 1
  %2012 = bitcast %"class.blink::Element"* %2011 to i8*
  %2013 = load i8, i8* %2012, align 8, !range !6
  %2014 = icmp ne i8 %2013, 0
  br label %2015

2015:                                             ; preds = %1015, %1029, %940, %954, %408, %418, %413, %277, %272, %153, %148, %1337, %1126, %746, %764, %782, %1151, %1510, %1558, %1590, %1610, %1969, %1958, %1227, %1122, %266, %299, %397, %440, %588, %650, %674, %1631, %1999, %1990, %1994, %1933, %1945, %1941, %1899, %1601, %1605, %1570, %1538, %1496, %1501, %1505, %1426, %1417, %1448, %1436, %1328, %1483, %1460, %1473, %1333, %1163, %775, %777, %757, %759, %739, %741, %581, %23, %737, %1145, %1143, %1314, %1317, %2010, %1895, %1887, %1880, %1877, %1866, %1861, %1857, %1852, %1841, %1836, %1832, %1819, %1808, %1803, %1799, %1789, %1779, %1771, %1764, %1761, %1750, %1745, %1741, %1712, %1629, %1624, %1536, %1531, %1521, %1491, %1303, %1300, %1166, %1045, %1040, %1009, %970, %965, %934, %895, %890, %838, %833, %738, %594, %1973, %1987, %1954, %1686, %1680, %1670, %1664, %1654, %1639, %1621, %1597, %1565, %1110, %1116, %1099, %1105, %1037, %962, %887, %807, %798, %788, %770, %752, %686, %678, %654, %577, %509, %368, %1823, %1739, %1720, %1717, %1697, %1648, %1642, %1568, %1524, %1173, %1167, %1093, %1087, %1081, %1075, %1069, %1063, %1054, %1048, %863, %851, %793, %689, %630, %614, %237, %129, %67, %21
  %2016 = phi i1 [ %22, %21 ], [ %1831, %1823 ], [ %1740, %1739 ], [ %1724, %1720 ], [ %1700, %1697 ], [ %1719, %1717 ], [ %1716, %1712 ], [ %1653, %1648 ], [ %1647, %1642 ], [ %1569, %1568 ], [ %1530, %1524 ], [ %1523, %1521 ], [ %1495, %1491 ], [ %1180, %1173 ], [ %1172, %1167 ], [ %1098, %1093 ], [ %1092, %1087 ], [ %1086, %1081 ], [ %1080, %1075 ], [ %1074, %1069 ], [ %1068, %1063 ], [ %1062, %1054 ], [ %1053, %1048 ], [ %864, %863 ], [ %852, %851 ], [ %797, %793 ], [ true, %738 ], [ %696, %689 ], [ %632, %630 ], [ %616, %614 ], [ %600, %594 ], [ %239, %237 ], [ %130, %129 ], [ %68, %67 ], [ false, %266 ], [ %370, %368 ], [ false, %299 ], [ false, %397 ], [ false, %440 ], [ false, %509 ], [ %579, %577 ], [ %656, %654 ], [ false, %650 ], [ %680, %678 ], [ false, %674 ], [ true, %686 ], [ %756, %752 ], [ %774, %770 ], [ %792, %788 ], [ %806, %798 ], [ %815, %807 ], [ true, %887 ], [ true, %962 ], [ true, %1037 ], [ false, %1099 ], [ %1109, %1105 ], [ false, %1110 ], [ %1121, %1116 ], [ %1567, %1565 ], [ %1600, %1597 ], [ %1623, %1621 ], [ false, %1631 ], [ %1641, %1639 ], [ false, %1654 ], [ %1669, %1664 ], [ false, %1670 ], [ %1685, %1680 ], [ false, %1686 ], [ false, %1954 ], [ false, %1973 ], [ %1989, %1987 ], [ false, %833 ], [ %840, %838 ], [ false, %890 ], [ %897, %895 ], [ false, %934 ], [ false, %965 ], [ %972, %970 ], [ false, %1009 ], [ false, %1040 ], [ %1047, %1045 ], [ true, %1166 ], [ true, %1300 ], [ true, %1303 ], [ false, %1531 ], [ %1537, %1536 ], [ false, %1624 ], [ %1630, %1629 ], [ false, %1761 ], [ false, %1764 ], [ %1778, %1771 ], [ false, %1750 ], [ false, %1745 ], [ false, %1741 ], [ %1798, %1789 ], [ false, %1779 ], [ %1822, %1819 ], [ false, %1808 ], [ false, %1803 ], [ false, %1799 ], [ %1856, %1852 ], [ false, %1841 ], [ false, %1836 ], [ false, %1832 ], [ false, %1877 ], [ false, %1880 ], [ %1894, %1887 ], [ false, %1866 ], [ false, %1861 ], [ false, %1857 ], [ false, %1895 ], [ %2014, %2010 ], [ false, %1317 ], [ false, %1314 ], [ false, %1143 ], [ false, %1145 ], [ false, %737 ], [ false, %23 ], [ false, %588 ], [ false, %581 ], [ false, %746 ], [ false, %741 ], [ false, %739 ], [ false, %764 ], [ false, %759 ], [ false, %757 ], [ false, %782 ], [ false, %777 ], [ false, %775 ], [ false, %1163 ], [ false, %1151 ], [ false, %1333 ], [ false, %1473 ], [ false, %1460 ], [ false, %1483 ], [ false, %1328 ], [ false, %1436 ], [ false, %1448 ], [ false, %1417 ], [ false, %1426 ], [ false, %1510 ], [ false, %1505 ], [ false, %1501 ], [ false, %1496 ], [ false, %1558 ], [ false, %1538 ], [ false, %1590 ], [ false, %1570 ], [ false, %1610 ], [ false, %1605 ], [ false, %1601 ], [ %1953, %1945 ], [ false, %1941 ], [ false, %1899 ], [ false, %1933 ], [ false, %1999 ], [ false, %1994 ], [ false, %1990 ], [ false, %1122 ], [ false, %1227 ], [ false, %1958 ], [ %1972, %1969 ], [ false, %1126 ], [ false, %1337 ], [ false, %153 ], [ true, %148 ], [ false, %277 ], [ true, %272 ], [ false, %418 ], [ true, %413 ], [ false, %408 ], [ false, %954 ], [ false, %940 ], [ false, %1029 ], [ false, %1015 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #7
  ret i1 %2016
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15SelectorChecker18CheckPseudoElementERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"*, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nocapture readonly dereferenceable(56), %"struct.blink::SelectorChecker::MatchResult"* nocapture dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::SelectorChecker::SelectorCheckingContext", align 8
  %5 = alloca %"struct.blink::SelectorChecker::MatchResult", align 1
  %6 = alloca %"struct.blink::SelectorChecker::SelectorCheckingContext", align 8
  %7 = alloca %"struct.blink::SelectorChecker::MatchResult", align 1
  %8 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 0
  %9 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %8, align 8
  %10 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 1
  %11 = load %"class.blink::Element"*, %"class.blink::Element"** %10, align 8
  %12 = bitcast %"class.blink::CSSSelector"* %9 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = lshr i32 %13, 8
  %15 = trunc i32 %14 to i8
  switch i8 %15, label %247 [
    i8 90, label %16
    i8 14, label %57
    i8 54, label %86
    i8 53, label %107
    i8 88, label %128
    i8 89, label %159
    i8 104, label %190
    i8 109, label %213
    i8 107, label %231
  ]

16:                                               ; preds = %3
  %17 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %17) #7
  %18 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %18, i64 56, i1 false)
  %19 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 5
  store i8 1, i8* %19, align 1
  %20 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 3
  store %"class.blink::ContainerNode"* null, %"class.blink::ContainerNode"** %20, align 8
  %21 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 9
  store i8 0, i8* %21, align 1
  %22 = load i32, i32* %12, align 8
  %23 = and i32 %22, 262144
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %9, i64 0, i32 1
  %27 = bitcast %"union.blink::CSSSelector::DataUnion"* %26 to %"struct.blink::CSSSelector::RareData"**
  %28 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %27, align 8
  %29 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %28, i64 0, i32 6, i32 0, i32 0, i32 0
  %30 = load %"class.blink::CSSSelectorList"*, %"class.blink::CSSSelectorList"** %29, align 8
  br label %31

31:                                               ; preds = %16, %25
  %32 = phi %"class.blink::CSSSelectorList"* [ %30, %25 ], [ null, %16 ]
  %33 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %32, i64 0, i32 0
  %34 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %33, align 8
  %35 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 0
  %36 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %5, i64 0, i32 0
  store %"class.blink::CSSSelector"* %34, %"class.blink::CSSSelector"** %35, align 8
  %37 = icmp eq %"class.blink::CSSSelector"* %34, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %31, %50
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %36) #7
  store i8 0, i8* %36, align 1
  %39 = call i32 @_ZNK5blink15SelectorChecker13MatchSelectorERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %4, %"struct.blink::SelectorChecker::MatchResult"* nonnull dereferenceable(1) %5)
  %40 = icmp eq i32 %39, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %36) #7
  br i1 %40, label %55, label %41

41:                                               ; preds = %38
  %42 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %35, align 8
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi %"class.blink::CSSSelector"* [ %42, %41 ], [ %49, %43 ]
  %45 = bitcast %"class.blink::CSSSelector"* %44 to i32*
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 131072
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %44, i64 1
  br i1 %48, label %43, label %50

50:                                               ; preds = %43
  %51 = and i32 %46, 2097152
  %52 = icmp eq i32 %51, 0
  %53 = select i1 %52, %"class.blink::CSSSelector"* %49, %"class.blink::CSSSelector"* null
  store %"class.blink::CSSSelector"* %53, %"class.blink::CSSSelector"** %35, align 8
  %54 = icmp eq %"class.blink::CSSSelector"* %53, null
  br i1 %54, label %55, label %38

55:                                               ; preds = %50, %38, %31
  %56 = phi i1 [ false, %31 ], [ true, %38 ], [ false, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %17) #7
  br label %84

57:                                               ; preds = %3
  %58 = and i32 %13, 262144
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %9, i64 0, i32 1
  %62 = bitcast %"union.blink::CSSSelector::DataUnion"* %61 to %"struct.blink::CSSSelector::RareData"**
  %63 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %62, align 8
  %64 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %63, i64 0, i32 7, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::Vector.283"*, %"class.WTF::Vector.283"** %64, align 8
  br label %66

66:                                               ; preds = %57, %60
  %67 = phi %"class.WTF::Vector.283"* [ %65, %60 ], [ null, %57 ]
  %68 = getelementptr inbounds %"class.WTF::Vector.283", %"class.WTF::Vector.283"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %68, align 8
  %70 = getelementptr inbounds %"class.WTF::Vector.283", %"class.WTF::Vector.283"* %67, i64 0, i32 0, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %69, i64 %72
  %74 = icmp eq i32 %71, 0
  br i1 %74, label %84, label %75

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 2
  br label %79

77:                                               ; preds = %79
  %78 = icmp eq %"class.WTF::AtomicString"* %83, %73
  br i1 %78, label %84, label %79

79:                                               ; preds = %75, %77
  %80 = phi %"class.WTF::AtomicString"* [ %69, %75 ], [ %83, %77 ]
  %81 = load %"class.blink::PartNames"*, %"class.blink::PartNames"** %76, align 8
  %82 = tail call zeroext i1 @_ZN5blink9PartNames8ContainsERKN3WTF12AtomicStringE(%"class.blink::PartNames"* %81, %"class.WTF::AtomicString"* dereferenceable(8) %80) #7
  %83 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %80, i64 1
  br i1 %82, label %77, label %84

84:                                               ; preds = %79, %77, %66, %55, %206, %223, %247, %86, %91, %96, %107, %112, %117, %138, %143, %148, %169, %174, %179
  %85 = phi i1 [ true, %247 ], [ %230, %223 ], [ %212, %206 ], [ %56, %55 ], [ false, %91 ], [ false, %86 ], [ %106, %96 ], [ false, %112 ], [ false, %107 ], [ %127, %117 ], [ false, %143 ], [ false, %138 ], [ %158, %148 ], [ false, %174 ], [ false, %169 ], [ %189, %179 ], [ true, %66 ], [ false, %79 ], [ true, %77 ]
  ret i1 %85

86:                                               ; preds = %3
  %87 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names23kPseudoFileUploadButtonE, align 8
  %88 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %11, i64 0, i32 0, i32 0
  %89 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %88) #7
  %90 = icmp eq %"class.blink::ShadowRoot"* %89, null
  br i1 %90, label %84, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %89, i64 0, i32 4
  %93 = load i32, i32* %92, align 8
  %94 = and i32 %93, 196608
  %95 = icmp eq i32 %94, 131072
  br i1 %95, label %96, label %84

96:                                               ; preds = %91
  %97 = bitcast %"class.blink::Element"* %11 to %"class.WTF::AtomicString"* (%"class.blink::Element"*)***
  %98 = load %"class.WTF::AtomicString"* (%"class.blink::Element"*)**, %"class.WTF::AtomicString"* (%"class.blink::Element"*)*** %97, align 8
  %99 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::Element"*)*, %"class.WTF::AtomicString"* (%"class.blink::Element"*)** %98, i64 110
  %100 = load %"class.WTF::AtomicString"* (%"class.blink::Element"*)*, %"class.WTF::AtomicString"* (%"class.blink::Element"*)** %99, align 8
  %101 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %100(%"class.blink::Element"* %11) #7
  %102 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %103, %105
  br label %84

107:                                              ; preds = %3
  %108 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names23kPseudoInputPlaceholderE, align 8
  %109 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %11, i64 0, i32 0, i32 0
  %110 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %109) #7
  %111 = icmp eq %"class.blink::ShadowRoot"* %110, null
  br i1 %111, label %84, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %110, i64 0, i32 4
  %114 = load i32, i32* %113, align 8
  %115 = and i32 %114, 196608
  %116 = icmp eq i32 %115, 131072
  br i1 %116, label %117, label %84

117:                                              ; preds = %112
  %118 = bitcast %"class.blink::Element"* %11 to %"class.WTF::AtomicString"* (%"class.blink::Element"*)***
  %119 = load %"class.WTF::AtomicString"* (%"class.blink::Element"*)**, %"class.WTF::AtomicString"* (%"class.blink::Element"*)*** %118, align 8
  %120 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::Element"*)*, %"class.WTF::AtomicString"* (%"class.blink::Element"*)** %119, i64 110
  %121 = load %"class.WTF::AtomicString"* (%"class.blink::Element"*)*, %"class.WTF::AtomicString"* (%"class.blink::Element"*)** %120, align 8
  %122 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %121(%"class.blink::Element"* %11) #7
  %123 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %108, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %124, %126
  br label %84

128:                                              ; preds = %3
  %129 = and i32 %13, 262144
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %9, i64 0, i32 1
  br i1 %130, label %136, label %132

132:                                              ; preds = %128
  %133 = bitcast %"union.blink::CSSSelector::DataUnion"* %131 to %"struct.blink::CSSSelector::RareData"**
  %134 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %133, align 8
  %135 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %134, i64 0, i32 1
  br label %138

136:                                              ; preds = %128
  %137 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %131, i64 0, i32 0
  br label %138

138:                                              ; preds = %132, %136
  %139 = phi %"class.WTF::AtomicString"* [ %135, %132 ], [ %137, %136 ]
  %140 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %11, i64 0, i32 0, i32 0
  %141 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %140) #7
  %142 = icmp eq %"class.blink::ShadowRoot"* %141, null
  br i1 %142, label %84, label %143

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %141, i64 0, i32 4
  %145 = load i32, i32* %144, align 8
  %146 = and i32 %145, 196608
  %147 = icmp eq i32 %146, 131072
  br i1 %147, label %148, label %84

148:                                              ; preds = %143
  %149 = bitcast %"class.blink::Element"* %11 to %"class.WTF::AtomicString"* (%"class.blink::Element"*)***
  %150 = load %"class.WTF::AtomicString"* (%"class.blink::Element"*)**, %"class.WTF::AtomicString"* (%"class.blink::Element"*)*** %149, align 8
  %151 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::Element"*)*, %"class.WTF::AtomicString"* (%"class.blink::Element"*)** %150, i64 110
  %152 = load %"class.WTF::AtomicString"* (%"class.blink::Element"*)*, %"class.WTF::AtomicString"* (%"class.blink::Element"*)** %151, align 8
  %153 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %152(%"class.blink::Element"* %11) #7
  %154 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %153, i64 0, i32 0, i32 0, i32 0
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %156 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %139, i64 0, i32 0, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %155, %157
  br label %84

159:                                              ; preds = %3
  %160 = and i32 %13, 262144
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %9, i64 0, i32 1
  br i1 %161, label %167, label %163

163:                                              ; preds = %159
  %164 = bitcast %"union.blink::CSSSelector::DataUnion"* %162 to %"struct.blink::CSSSelector::RareData"**
  %165 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %164, align 8
  %166 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %165, i64 0, i32 1
  br label %169

167:                                              ; preds = %159
  %168 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %162, i64 0, i32 0
  br label %169

169:                                              ; preds = %163, %167
  %170 = phi %"class.WTF::AtomicString"* [ %166, %163 ], [ %168, %167 ]
  %171 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %11, i64 0, i32 0, i32 0
  %172 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %171) #7
  %173 = icmp eq %"class.blink::ShadowRoot"* %172, null
  br i1 %173, label %84, label %174

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %172, i64 0, i32 4
  %176 = load i32, i32* %175, align 8
  %177 = and i32 %176, 196608
  %178 = icmp eq i32 %177, 131072
  br i1 %178, label %179, label %84

179:                                              ; preds = %174
  %180 = bitcast %"class.blink::Element"* %11 to %"class.WTF::AtomicString"* (%"class.blink::Element"*)***
  %181 = load %"class.WTF::AtomicString"* (%"class.blink::Element"*)**, %"class.WTF::AtomicString"* (%"class.blink::Element"*)*** %180, align 8
  %182 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::Element"*)*, %"class.WTF::AtomicString"* (%"class.blink::Element"*)** %181, i64 110
  %183 = load %"class.WTF::AtomicString"* (%"class.blink::Element"*)*, %"class.WTF::AtomicString"* (%"class.blink::Element"*)** %182, align 8
  %184 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %183(%"class.blink::Element"* %11) #7
  %185 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %184, i64 0, i32 0, i32 0, i32 0
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %187 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %170, i64 0, i32 0, i32 0, i32 0
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %187, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %186, %188
  br label %84

190:                                              ; preds = %3
  %191 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %191) #7
  %192 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %191, i8* align 8 %192, i64 56, i1 false)
  %193 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 5
  store i8 1, i8* %193, align 1
  %194 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 3
  store %"class.blink::ContainerNode"* null, %"class.blink::ContainerNode"** %194, align 8
  %195 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6, i64 0, i32 9
  store i8 0, i8* %195, align 1
  %196 = load i32, i32* %12, align 8
  %197 = and i32 %196, 262144
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %206, label %199

199:                                              ; preds = %190
  %200 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %9, i64 0, i32 1
  %201 = bitcast %"union.blink::CSSSelector::DataUnion"* %200 to %"struct.blink::CSSSelector::RareData"**
  %202 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %201, align 8
  %203 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %202, i64 0, i32 6, i32 0, i32 0, i32 0
  %204 = bitcast %"class.blink::CSSSelectorList"** %203 to i64**
  %205 = load i64*, i64** %204, align 8
  br label %206

206:                                              ; preds = %190, %199
  %207 = phi i64* [ %205, %199 ], [ null, %190 ]
  %208 = load i64, i64* %207, align 8
  %209 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %6 to i64*
  store i64 %208, i64* %209, align 8
  %210 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %210) #7
  store i8 0, i8* %210, align 1
  %211 = call i32 @_ZNK5blink15SelectorChecker13MatchSelectorERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %6, %"struct.blink::SelectorChecker::MatchResult"* nonnull dereferenceable(1) %7)
  %212 = icmp eq i32 %211, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %210) #7
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %191) #7
  br label %84

213:                                              ; preds = %3
  %214 = and i32 %13, 262144
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %221, label %216

216:                                              ; preds = %213
  %217 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %9, i64 0, i32 1
  %218 = bitcast %"union.blink::CSSSelector::DataUnion"* %217 to %"struct.blink::CSSSelector::RareData"**
  %219 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %218, align 8
  %220 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %219, i64 0, i32 5
  br label %223

221:                                              ; preds = %213
  %222 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %223

223:                                              ; preds = %216, %221
  %224 = phi %"class.WTF::AtomicString"* [ %220, %216 ], [ %222, %221 ]
  %225 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %2, i64 0, i32 0
  store i8 10, i8* %225, align 1
  %226 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %224, i64 0, i32 0, i32 0, i32 0
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  %228 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 3, i32 0, i32 0
  %229 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %228, align 8
  %230 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %227, %"class.WTF::StringImpl"* %229) #7
  br label %84

231:                                              ; preds = %3
  %232 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 6
  %233 = load i8, i8* %232, align 8, !range !6
  %234 = icmp eq i8 %233, 0
  br i1 %234, label %235, label %247

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %11, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %237 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %236, align 8
  %238 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %237, i64 0, i32 2, i32 0, i32 0
  %239 = load %"class.blink::Document"*, %"class.blink::Document"** %238, align 8
  %240 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %239, i64 0, i32 2
  %241 = bitcast %"class.blink::UseCounter"* %240 to void (%"class.blink::UseCounter"*, i32)***
  %242 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %241, align 8
  %243 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %242, i64 3
  %244 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %243, align 8
  tail call void %244(%"class.blink::UseCounter"* %240, i32 3780) #7
  %245 = load i32, i32* %12, align 8
  %246 = lshr i32 %245, 8
  br label %247

247:                                              ; preds = %231, %235, %3
  %248 = phi i32 [ %14, %231 ], [ %246, %235 ], [ %14, %3 ]
  %249 = and i32 %248, 255
  %250 = tail call zeroext i8 @_ZN5blink11CSSSelector11GetPseudoIdENS0_10PseudoTypeE(i32 %249) #7
  %251 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %2, i64 0, i32 0
  store i8 %250, i8* %251, align 1
  br label %84
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15SelectorChecker14CheckPseudoNotERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"*, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nocapture readonly dereferenceable(56), %"struct.blink::SelectorChecker::MatchResult"* nocapture readnone dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::SelectorChecker::SelectorCheckingContext", align 8
  %5 = alloca %"struct.blink::SelectorChecker::MatchResult", align 1
  %6 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 0
  %7 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %6, align 8
  %8 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #7
  %9 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %9, i64 56, i1 false)
  %10 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 5
  store i8 1, i8* %10, align 1
  %11 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 12
  store i8 1, i8* %11, align 8
  %12 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 4
  store i8 0, i8* %12, align 8
  %13 = bitcast %"class.blink::CSSSelector"* %7 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 262144
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %7, i64 0, i32 1
  %19 = bitcast %"union.blink::CSSSelector::DataUnion"* %18 to %"struct.blink::CSSSelector::RareData"**
  %20 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %19, align 8
  %21 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %20, i64 0, i32 6, i32 0, i32 0, i32 0
  %22 = load %"class.blink::CSSSelectorList"*, %"class.blink::CSSSelectorList"** %21, align 8
  br label %23

23:                                               ; preds = %3, %17
  %24 = phi %"class.blink::CSSSelectorList"* [ %22, %17 ], [ null, %3 ]
  %25 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %24, i64 0, i32 0
  %26 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %25, align 8
  %27 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 0
  %28 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %5, i64 0, i32 0
  store %"class.blink::CSSSelector"* %26, %"class.blink::CSSSelector"** %27, align 8
  %29 = icmp eq %"class.blink::CSSSelector"* %26, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23, %42
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %28) #7
  store i8 0, i8* %28, align 1
  %31 = call i32 @_ZNK5blink15SelectorChecker13MatchSelectorERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %4, %"struct.blink::SelectorChecker::MatchResult"* nonnull dereferenceable(1) %5)
  %32 = icmp eq i32 %31, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %28) #7
  br i1 %32, label %47, label %33

33:                                               ; preds = %30
  %34 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %27, align 8
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi %"class.blink::CSSSelector"* [ %34, %33 ], [ %41, %35 ]
  %37 = bitcast %"class.blink::CSSSelector"* %36 to i32*
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 131072
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %36, i64 1
  br i1 %40, label %35, label %42

42:                                               ; preds = %35
  %43 = and i32 %38, 2097152
  %44 = icmp eq i32 %43, 0
  %45 = select i1 %44, %"class.blink::CSSSelector"* %41, %"class.blink::CSSSelector"* null
  store %"class.blink::CSSSelector"* %45, %"class.blink::CSSSelector"** %27, align 8
  %46 = icmp eq %"class.blink::CSSSelector"* %45, null
  br i1 %46, label %47, label %30

47:                                               ; preds = %42, %30, %23
  %48 = phi i1 [ true, %23 ], [ false, %30 ], [ true, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #7
  ret i1 %48
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15SelectorChecker25CheckScrollbarPseudoClassERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"*, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nocapture readonly dereferenceable(56), %"struct.blink::SelectorChecker::MatchResult"* nocapture readnone dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::SelectorChecker::SelectorCheckingContext", align 8
  %5 = alloca %"struct.blink::SelectorChecker::MatchResult", align 1
  %6 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 0
  %7 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %6, align 8
  %8 = bitcast %"class.blink::CSSSelector"* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = lshr i32 %9, 8
  %11 = trunc i32 %10 to i8
  switch i8 %11, label %71 [
    i8 52, label %12
    i8 64, label %53
  ]

12:                                               ; preds = %3
  %13 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %13) #7
  %14 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %14, i64 56, i1 false) #7
  %15 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 5
  store i8 1, i8* %15, align 1
  %16 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 12
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 4
  store i8 0, i8* %17, align 8
  %18 = load i32, i32* %8, align 8
  %19 = and i32 %18, 262144
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %7, i64 0, i32 1
  %23 = bitcast %"union.blink::CSSSelector::DataUnion"* %22 to %"struct.blink::CSSSelector::RareData"**
  %24 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %23, align 8
  %25 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %24, i64 0, i32 6, i32 0, i32 0, i32 0
  %26 = load %"class.blink::CSSSelectorList"*, %"class.blink::CSSSelectorList"** %25, align 8
  br label %27

27:                                               ; preds = %21, %12
  %28 = phi %"class.blink::CSSSelectorList"* [ %26, %21 ], [ null, %12 ]
  %29 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %28, i64 0, i32 0
  %30 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %29, align 8
  %31 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %4, i64 0, i32 0
  %32 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %5, i64 0, i32 0
  store %"class.blink::CSSSelector"* %30, %"class.blink::CSSSelector"** %31, align 8
  %33 = icmp eq %"class.blink::CSSSelector"* %30, null
  br i1 %33, label %51, label %34

34:                                               ; preds = %27, %46
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %32) #7
  store i8 0, i8* %32, align 1
  %35 = call i32 @_ZNK5blink15SelectorChecker13MatchSelectorERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %4, %"struct.blink::SelectorChecker::MatchResult"* nonnull dereferenceable(1) %5) #7
  %36 = icmp eq i32 %35, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #7
  br i1 %36, label %51, label %37

37:                                               ; preds = %34
  %38 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %31, align 8
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi %"class.blink::CSSSelector"* [ %38, %37 ], [ %45, %39 ]
  %41 = bitcast %"class.blink::CSSSelector"* %40 to i32*
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 131072
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %40, i64 1
  br i1 %44, label %39, label %46

46:                                               ; preds = %39
  %47 = and i32 %42, 2097152
  %48 = icmp eq i32 %47, 0
  %49 = select i1 %48, %"class.blink::CSSSelector"* %45, %"class.blink::CSSSelector"* null
  store %"class.blink::CSSSelector"* %49, %"class.blink::CSSSelector"** %31, align 8
  %50 = icmp eq %"class.blink::CSSSelector"* %49, null
  br i1 %50, label %51, label %34

51:                                               ; preds = %46, %34, %27
  %52 = phi i1 [ true, %27 ], [ false, %34 ], [ true, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %13) #7
  br label %207

53:                                               ; preds = %3
  %54 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 1
  %55 = bitcast %"class.blink::Element"** %54 to %"class.blink::Node"**
  %56 = load %"class.blink::Node"*, %"class.blink::Node"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %56, i64 0, i32 3, i32 0, i32 0
  %58 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %58, i64 0, i32 2, i32 0, i32 0
  %60 = load %"class.blink::Document"*, %"class.blink::Document"** %59, align 8
  %61 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %60) #7
  %62 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %61, i64 0, i32 10, i32 0, i32 0
  %63 = load %"class.blink::FocusController"*, %"class.blink::FocusController"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::FocusController", %"class.blink::FocusController"* %63, i64 0, i32 2
  %65 = load i8, i8* %64, align 8, !range !6
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %207

67:                                               ; preds = %53
  %68 = getelementptr inbounds %"class.blink::FocusController", %"class.blink::FocusController"* %63, i64 0, i32 5
  %69 = load i8, i8* %68, align 1, !range !6
  %70 = icmp eq i8 %69, 0
  br label %207

71:                                               ; preds = %3
  %72 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 1
  %73 = load %"class.blink::CustomScrollbar"*, %"class.blink::CustomScrollbar"** %72, align 8
  %74 = icmp eq %"class.blink::CustomScrollbar"* %73, null
  br i1 %74, label %207, label %75

75:                                               ; preds = %71
  switch i8 %11, label %207 [
    i8 33, label %76
    i8 36, label %80
    i8 26, label %84
    i8 31, label %96
    i8 68, label %108
    i8 69, label %112
    i8 66, label %116
    i8 67, label %121
    i8 70, label %126
    i8 71, label %131
    i8 65, label %163
    i8 73, label %136
    i8 74, label %149
  ]

76:                                               ; preds = %75
  %77 = getelementptr inbounds %"class.blink::CustomScrollbar", %"class.blink::CustomScrollbar"* %73, i64 0, i32 0, i32 14
  %78 = load i8, i8* %77, align 8, !range !6
  %79 = icmp ne i8 %78, 0
  br label %207

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::CustomScrollbar", %"class.blink::CustomScrollbar"* %73, i64 0, i32 0, i32 14
  %82 = load i8, i8* %81, align 8, !range !6
  %83 = icmp eq i8 %82, 0
  br label %207

84:                                               ; preds = %75
  %85 = getelementptr inbounds %"class.blink::CustomScrollbar", %"class.blink::CustomScrollbar"* %73, i64 0, i32 0, i32 8
  %86 = load i32, i32* %85, align 8
  %87 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 4
  %88 = load i32, i32* %87, align 8
  switch i32 %88, label %94 [
    i32 128, label %89
    i32 256, label %91
  ]

89:                                               ; preds = %84
  %90 = icmp ne i32 %86, 0
  br label %207

91:                                               ; preds = %84
  %92 = add i32 %86, -4
  %93 = icmp ult i32 %92, 13
  br i1 %93, label %173, label %207

94:                                               ; preds = %84
  %95 = icmp eq i32 %88, %86
  br label %207

96:                                               ; preds = %75
  %97 = getelementptr inbounds %"class.blink::CustomScrollbar", %"class.blink::CustomScrollbar"* %73, i64 0, i32 0, i32 9
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 4
  %100 = load i32, i32* %99, align 8
  switch i32 %100, label %106 [
    i32 128, label %101
    i32 256, label %103
  ]

101:                                              ; preds = %96
  %102 = icmp ne i32 %98, 0
  br label %207

103:                                              ; preds = %96
  %104 = add i32 %98, -4
  %105 = icmp ult i32 %104, 13
  br i1 %105, label %178, label %207

106:                                              ; preds = %96
  %107 = icmp eq i32 %100, %98
  br label %207

108:                                              ; preds = %75
  %109 = getelementptr inbounds %"class.blink::CustomScrollbar", %"class.blink::CustomScrollbar"* %73, i64 0, i32 0, i32 2
  %110 = load i32, i32* %109, align 8
  %111 = icmp eq i32 %110, 0
  br label %207

112:                                              ; preds = %75
  %113 = getelementptr inbounds %"class.blink::CustomScrollbar", %"class.blink::CustomScrollbar"* %73, i64 0, i32 0, i32 2
  %114 = load i32, i32* %113, align 8
  %115 = icmp eq i32 %114, 1
  br label %207

116:                                              ; preds = %75
  %117 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 4
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, -1
  %120 = icmp ult i32 %119, 32
  br i1 %120, label %183, label %207

121:                                              ; preds = %75
  %122 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 4
  %123 = load i32, i32* %122, align 8
  %124 = add i32 %123, -2
  %125 = icmp ult i32 %124, 63
  br i1 %125, label %187, label %207

126:                                              ; preds = %75
  %127 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 4
  %128 = load i32, i32* %127, align 8
  %129 = add i32 %128, -1
  %130 = icmp ult i32 %129, 4
  br i1 %130, label %192, label %207

131:                                              ; preds = %75
  %132 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 4
  %133 = load i32, i32* %132, align 8
  %134 = add i32 %133, -16
  %135 = icmp ult i32 %134, 49
  br i1 %135, label %197, label %207

136:                                              ; preds = %75
  %137 = getelementptr inbounds %"class.blink::CustomScrollbar", %"class.blink::CustomScrollbar"* %73, i64 0, i32 0, i32 3
  %138 = load %"class.blink::ScrollbarTheme"*, %"class.blink::ScrollbarTheme"** %137, align 8
  %139 = bitcast %"class.blink::ScrollbarTheme"* %138 to i1 (%"class.blink::ScrollbarTheme"*)***
  %140 = load i1 (%"class.blink::ScrollbarTheme"*)**, i1 (%"class.blink::ScrollbarTheme"*)*** %139, align 8
  %141 = getelementptr inbounds i1 (%"class.blink::ScrollbarTheme"*)*, i1 (%"class.blink::ScrollbarTheme"*)** %140, i64 27
  %142 = load i1 (%"class.blink::ScrollbarTheme"*)*, i1 (%"class.blink::ScrollbarTheme"*)** %141, align 8
  %143 = tail call zeroext i1 %142(%"class.blink::ScrollbarTheme"* %138) #7
  br i1 %143, label %144, label %207

144:                                              ; preds = %136
  %145 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 4
  %146 = load i32, i32* %145, align 8
  %147 = add i32 %146, -1
  %148 = icmp ult i32 %147, 64
  br i1 %148, label %202, label %207

149:                                              ; preds = %75
  %150 = getelementptr inbounds %"class.blink::CustomScrollbar", %"class.blink::CustomScrollbar"* %73, i64 0, i32 0, i32 3
  %151 = load %"class.blink::ScrollbarTheme"*, %"class.blink::ScrollbarTheme"** %150, align 8
  %152 = bitcast %"class.blink::ScrollbarTheme"* %151 to i1 (%"class.blink::ScrollbarTheme"*)***
  %153 = load i1 (%"class.blink::ScrollbarTheme"*)**, i1 (%"class.blink::ScrollbarTheme"*)*** %152, align 8
  %154 = getelementptr inbounds i1 (%"class.blink::ScrollbarTheme"*)*, i1 (%"class.blink::ScrollbarTheme"*)** %153, i64 27
  %155 = load i1 (%"class.blink::ScrollbarTheme"*)*, i1 (%"class.blink::ScrollbarTheme"*)** %154, align 8
  %156 = tail call zeroext i1 %155(%"class.blink::ScrollbarTheme"* %151) #7
  br i1 %156, label %207, label %157

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"class.blink::SelectorChecker", %"class.blink::SelectorChecker"* %0, i64 0, i32 4
  %159 = load i32, i32* %158, align 8
  %160 = icmp eq i32 %159, 4
  %161 = icmp eq i32 %159, 16
  %162 = or i1 %160, %161
  br label %207

163:                                              ; preds = %75
  %164 = getelementptr inbounds %"class.blink::CustomScrollbar", %"class.blink::CustomScrollbar"* %73, i64 0, i32 0, i32 1, i32 0, i32 0
  %165 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %164, align 8
  %166 = icmp eq %"class.blink::ScrollableArea"* %165, null
  br i1 %166, label %207, label %167

167:                                              ; preds = %163
  %168 = bitcast %"class.blink::ScrollableArea"* %165 to i1 (%"class.blink::ScrollableArea"*)***
  %169 = load i1 (%"class.blink::ScrollableArea"*)**, i1 (%"class.blink::ScrollableArea"*)*** %168, align 8
  %170 = getelementptr inbounds i1 (%"class.blink::ScrollableArea"*)*, i1 (%"class.blink::ScrollableArea"*)** %169, i64 28
  %171 = load i1 (%"class.blink::ScrollableArea"*)*, i1 (%"class.blink::ScrollableArea"*)** %170, align 8
  %172 = tail call zeroext i1 %171(%"class.blink::ScrollableArea"* nonnull %165) #7
  br label %207

173:                                              ; preds = %91
  %174 = trunc i32 %92 to i13
  %175 = lshr i13 -4079, %174
  %176 = and i13 %175, 1
  %177 = icmp ne i13 %176, 0
  ret i1 %177

178:                                              ; preds = %103
  %179 = trunc i32 %104 to i13
  %180 = lshr i13 -4079, %179
  %181 = and i13 %180, 1
  %182 = icmp ne i13 %181, 0
  ret i1 %182

183:                                              ; preds = %116
  %184 = lshr i32 -2147483639, %119
  %185 = and i32 %184, 1
  %186 = icmp ne i32 %185, 0
  ret i1 %186

187:                                              ; preds = %121
  %188 = zext i32 %124 to i63
  %189 = lshr i63 -4611686018427371519, %188
  %190 = and i63 %189, 1
  %191 = icmp ne i63 %190, 0
  ret i1 %191

192:                                              ; preds = %126
  %193 = trunc i32 %129 to i4
  %194 = lshr i4 -5, %193
  %195 = and i4 %194, 1
  %196 = icmp ne i4 %195, 0
  ret i1 %196

197:                                              ; preds = %131
  %198 = zext i32 %134 to i49
  %199 = lshr i49 -281474976645119, %198
  %200 = and i49 %199, 1
  %201 = icmp ne i49 %200, 0
  ret i1 %201

202:                                              ; preds = %144
  %203 = zext i32 %147 to i64
  %204 = lshr i64 -9223372036854743031, %203
  %205 = and i64 %204, 1
  %206 = icmp ne i64 %205, 0
  ret i1 %206

207:                                              ; preds = %144, %131, %126, %121, %116, %103, %91, %67, %53, %75, %167, %163, %149, %136, %101, %106, %89, %94, %71, %157, %112, %108, %80, %76, %51
  %208 = phi i1 [ %52, %51 ], [ %162, %157 ], [ %115, %112 ], [ %111, %108 ], [ %83, %80 ], [ %79, %76 ], [ false, %71 ], [ %90, %89 ], [ %95, %94 ], [ %102, %101 ], [ %107, %106 ], [ false, %136 ], [ false, %149 ], [ false, %163 ], [ %172, %167 ], [ false, %75 ], [ false, %53 ], [ %70, %67 ], [ false, %91 ], [ false, %103 ], [ false, %116 ], [ false, %121 ], [ false, %126 ], [ false, %131 ], [ false, %144 ]
  ret i1 %208
}

declare zeroext i1 @_ZNK5blink13CharacterData29ContainsOnlyWhitespaceOrEmptyEv(%"class.blink::CharacterData"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink11CSSSelector8MatchNthEj(%"class.blink::CSSSelector"*, i32) local_unnamed_addr #2

declare i32 @_ZN5blink13NthIndexCache13NthChildIndexERNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #2

declare i32 @_ZN5blink13NthIndexCache14NthOfTypeIndexERNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #2

declare i32 @_ZN5blink13NthIndexCache17NthLastChildIndexERNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #2

declare i32 @_ZN5blink13NthIndexCache18NthLastOfTypeIndexERNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15SelectorChecker23MatchesFocusPseudoClassERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #7
  store i8 0, i8* %2, align 1
  %3 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %4 = and i32 %3, 32
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  call void @_ZN5blink5probe20ForcePseudoStateImplEPNS_7ElementENS_11CSSSelector10PseudoTypeEPb(%"class.blink::Element"* %0, i32 28, i8* nonnull %2) #7
  br label %7

7:                                                ; preds = %1, %6
  %8 = load i8, i8* %2, align 1, !range !6
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %33

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = trunc i32 %12 to i8
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %33

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0
  %17 = call zeroext i1 @_ZNK5blink4Node26IsUserActionElementFocusedEv(%"class.blink::Node"* %16) #7
  br i1 %17, label %18, label %33

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %22) #7
  %24 = icmp eq %"class.blink::LocalFrame"* %23, null
  br i1 %24, label %33, label %25

25:                                               ; preds = %18
  %26 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %27 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %26, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %29 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %28) #7
  %30 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %29, i64 0, i32 14, i32 0, i32 0
  %31 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %30, align 8
  %32 = call zeroext i1 @_ZNK5blink14FrameSelection23FrameIsFocusedAndActiveEv(%"class.blink::FrameSelection"* %31) #7
  br label %33

33:                                               ; preds = %10, %25, %18, %15, %7
  %34 = phi i1 [ true, %7 ], [ false, %15 ], [ false, %18 ], [ %32, %25 ], [ false, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #7
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15SelectorChecker30MatchesFocusVisiblePseudoClassERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #7
  store i8 0, i8* %2, align 1
  %3 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %4 = and i32 %3, 32
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  call void @_ZN5blink5probe20ForcePseudoStateImplEPNS_7ElementENS_11CSSSelector10PseudoTypeEPb(%"class.blink::Element"* %0, i32 29, i8* nonnull %2) #7
  br label %7

7:                                                ; preds = %1, %6
  %8 = load i8, i8* %2, align 1, !range !6
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %67

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = trunc i32 %12 to i8
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %67

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0
  %17 = call zeroext i1 @_ZNK5blink4Node26IsUserActionElementFocusedEv(%"class.blink::Node"* %16) #7
  br i1 %17, label %18, label %67

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %22) #7
  %24 = icmp eq %"class.blink::LocalFrame"* %23, null
  br i1 %24, label %67, label %25

25:                                               ; preds = %18
  %26 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %27 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %26, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %29 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %28) #7
  %30 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %29, i64 0, i32 14, i32 0, i32 0
  %31 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %30, align 8
  %32 = call zeroext i1 @_ZNK5blink14FrameSelection23FrameIsFocusedAndActiveEv(%"class.blink::FrameSelection"* %31) #7
  br i1 %32, label %33, label %67

33:                                               ; preds = %25
  %34 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %35 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %34, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::Document"*, %"class.blink::Document"** %35, align 8
  %37 = call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %36) #7
  %38 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %37, i64 0, i32 71
  %39 = bitcast [14 x i8]* %38 to i112*
  %40 = load i112, i112* %39, align 8
  %41 = and i112 %40, 32
  %42 = icmp ne i112 %41, 0
  %43 = bitcast %"class.blink::Element"* %0 to i1 (%"class.blink::Element"*)***
  %44 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %43, align 8
  %45 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %44, i64 119
  %46 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %45, align 8
  %47 = call zeroext i1 %46(%"class.blink::Element"* %0) #7
  %48 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %36) #7
  %49 = icmp eq %"class.blink::LocalFrame"* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %33
  %51 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %36) #7
  %52 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %51, i64 0, i32 14, i32 0, i32 0
  %53 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %52, align 8
  %54 = call zeroext i1 @_ZNK5blink14FrameSelection23FrameIsFocusedAndActiveEv(%"class.blink::FrameSelection"* %53) #7
  br i1 %54, label %55, label %59

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %36, i64 0, i32 39
  %57 = load i32, i32* %56, align 4
  %58 = icmp ne i32 %57, 4
  br label %59

59:                                               ; preds = %33, %55, %50
  %60 = phi i1 [ true, %50 ], [ true, %33 ], [ %58, %55 ]
  %61 = or i1 %42, %47
  br i1 %61, label %67, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %36, i64 0, i32 40
  %64 = load i8, i8* %63, align 8, !range !6
  %65 = icmp ne i8 %64, 0
  %66 = or i1 %60, %65
  br label %67

67:                                               ; preds = %18, %10, %62, %59, %15, %25, %7
  %68 = phi i1 [ true, %7 ], [ false, %25 ], [ false, %15 ], [ true, %59 ], [ %66, %62 ], [ false, %10 ], [ false, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #7
  ret i1 %68
}

declare zeroext i1 @_ZNK5blink16HTMLInputElement19ShouldAppearCheckedEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element24ComputeInheritedLanguageEv(%"class.blink::Element"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16HTMLPopupElement4openEv(%"class.blink::HTMLPopupElement"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16HTMLMediaElement6pausedEv(%"class.blink::HTMLMediaElement"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink26PictureInPictureController27IsElementInPictureInPictureEPKNS_7ElementE(%"class.blink::Element"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16HTMLVideoElement12IsPersistentEv(%"class.blink::HTMLVideoElement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15SelectorChecker15CheckPseudoHostERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"*, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nocapture readonly dereferenceable(56), %"struct.blink::SelectorChecker::MatchResult"* nocapture readnone dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %4 = alloca [16 x i8], align 8
  %5 = alloca <{ i8, i8, i8 }>, align 2
  %6 = alloca <{ [2 x i8], %"class.blink::Element"*, i8, i8, [6 x i8] }>, align 2
  %7 = alloca %"struct.blink::SelectorChecker::SelectorCheckingContext", align 8
  %8 = alloca %"struct.blink::SelectorChecker::MatchResult", align 1
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %10 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 0
  %11 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %10, align 8
  %12 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 1
  %13 = load %"class.blink::Element"*, %"class.blink::Element"** %12, align 8
  %14 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 3
  %15 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %14, align 8
  %16 = icmp eq %"class.blink::ContainerNode"* %15, null
  br i1 %16, label %83, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %15, i64 0, i32 0
  %19 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %18) #7
  %20 = icmp ne %"class.blink::Element"* %19, null
  %21 = icmp eq %"class.blink::Element"* %19, %13
  %22 = and i1 %20, %21
  br i1 %22, label %23, label %83

23:                                               ; preds = %17
  %24 = bitcast %"class.blink::CSSSelector"* %11 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 262144
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %83, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %11, i64 0, i32 1
  %30 = bitcast %"union.blink::CSSSelector::DataUnion"* %29 to %"struct.blink::CSSSelector::RareData"**
  %31 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %30, align 8
  %32 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %31, i64 0, i32 6, i32 0, i32 0, i32 0
  %33 = load %"class.blink::CSSSelectorList"*, %"class.blink::CSSSelectorList"** %32, align 8
  %34 = icmp eq %"class.blink::CSSSelectorList"* %33, null
  br i1 %34, label %83, label %35

35:                                               ; preds = %28
  %36 = bitcast %"class.blink::CSSSelectorList"* %33 to i64*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9)
  %37 = getelementptr inbounds <{ i8, i8, i8 }>, <{ i8, i8, i8 }>* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %37)
  %38 = getelementptr inbounds <{ [2 x i8], %"class.blink::Element"*, i8, i8, [6 x i8] }>, <{ [2 x i8], %"class.blink::Element"*, i8, i8, [6 x i8] }>* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 18, i8* nonnull %38)
  %39 = bitcast %"class.blink::Element"** %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %39, i64 16, i1 false)
  %40 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 4
  %41 = load i8, i8* %40, align 8
  %42 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %37, i8* align 2 %42, i64 3, i1 false)
  %43 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %1, i64 0, i32 10, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %38, i8* align 2 %43, i64 18, i1 false)
  %44 = load i64, i64* %36, align 8
  %45 = bitcast %"class.blink::ContainerNode"** %14 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %47) #7
  %48 = bitcast %"struct.blink::SelectorChecker::SelectorCheckingContext"* %7 to i64*
  store i64 %44, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %7, i64 0, i32 1
  %50 = bitcast %"class.blink::Element"** %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* nonnull align 8 %9, i64 16, i1 false)
  %51 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %7, i64 0, i32 3
  %52 = bitcast %"class.blink::ContainerNode"** %51 to i64*
  store i64 %46, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %7, i64 0, i32 4
  store i8 %41, i8* %53, align 8
  %54 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %7, i64 0, i32 5
  store i8 1, i8* %54, align 1
  %55 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %7, i64 0, i32 6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %55, i8* nonnull align 2 %37, i64 3, i1 false)
  %56 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %7, i64 0, i32 9
  store i8 1, i8* %56, align 1
  %57 = getelementptr inbounds %"struct.blink::SelectorChecker::SelectorCheckingContext", %"struct.blink::SelectorChecker::SelectorCheckingContext"* %7, i64 0, i32 10, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %57, i8* nonnull align 2 %38, i64 18, i1 false)
  %58 = getelementptr inbounds %"struct.blink::SelectorChecker::MatchResult", %"struct.blink::SelectorChecker::MatchResult"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %58) #7
  store i8 0, i8* %58, align 1
  store %"class.blink::Element"* %13, %"class.blink::Element"** %49, align 8
  %59 = call i32 @_ZNK5blink15SelectorChecker13MatchSelectorERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %7, %"struct.blink::SelectorChecker::MatchResult"* nonnull dereferenceable(1) %8)
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %81, label %61

61:                                               ; preds = %35
  %62 = bitcast %"class.blink::Element"** %49 to %"class.blink::ContainerNode"**
  br label %63

63:                                               ; preds = %61, %77
  %64 = phi %"class.blink::Element"* [ %78, %77 ], [ %13, %61 ]
  store i8 0, i8* %56, align 1
  store %"class.blink::ContainerNode"* null, %"class.blink::ContainerNode"** %51, align 8
  %65 = load i32, i32* %24, align 8
  %66 = and i32 %65, 65280
  %67 = icmp eq i32 %66, 24320
  br i1 %67, label %81, label %68

68:                                               ; preds = %63
  store i8 0, i8* %55, align 2
  %69 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %64, i64 0, i32 0, i32 0
  %70 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %69) #7
  %71 = icmp eq %"class.blink::ContainerNode"* %70, null
  br i1 %71, label %81, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %70, i64 0, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = and i32 %74, 12
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %72
  %78 = bitcast %"class.blink::ContainerNode"* %70 to %"class.blink::Element"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %58) #7
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %58) #7
  store i8 0, i8* %58, align 1
  store %"class.blink::ContainerNode"* %70, %"class.blink::ContainerNode"** %62, align 8
  %79 = call i32 @_ZNK5blink15SelectorChecker13MatchSelectorERKNS0_23SelectorCheckingContextERNS0_11MatchResultE(%"class.blink::SelectorChecker"* %0, %"struct.blink::SelectorChecker::SelectorCheckingContext"* nonnull dereferenceable(56) %7, %"struct.blink::SelectorChecker::MatchResult"* nonnull dereferenceable(1) %8)
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %63

81:                                               ; preds = %72, %68, %63, %77, %35
  %82 = phi i1 [ true, %35 ], [ false, %72 ], [ false, %68 ], [ false, %63 ], [ true, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %58) #7
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %47) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %37)
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %38)
  br label %83

83:                                               ; preds = %17, %23, %81, %28, %3
  %84 = phi i1 [ false, %3 ], [ %82, %81 ], [ false, %17 ], [ true, %28 ], [ true, %23 ]
  ret i1 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15SelectorChecker43MatchesSpatialNavigationInterestPseudoClassERKNS_7ElementE(%"class.blink::Element"* readonly dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %5) #7
  %7 = tail call zeroext i1 @_ZN5blink26IsSpatialNavigationEnabledEPKNS_10LocalFrameE(%"class.blink::LocalFrame"* %6) #7
  %8 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase40is_focusless_spatial_navigation_enabled_E, align 1
  %9 = icmp ne i8 %8, 0
  %10 = and i1 %7, %9
  br i1 %10, label %11, label %21

11:                                               ; preds = %1
  %12 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %13 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  %15 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %14) #7
  %16 = tail call dereferenceable(24) %"class.blink::SpatialNavigationController"* @_ZN5blink4Page30GetSpatialNavigationControllerEv(%"class.blink::Page"* %15) #7
  %17 = tail call %"class.blink::Element"* @_ZNK5blink27SpatialNavigationController20GetInterestedElementEv(%"class.blink::SpatialNavigationController"* %16) #7
  %18 = icmp ne %"class.blink::Element"* %17, null
  %19 = icmp eq %"class.blink::Element"* %17, %0
  %20 = and i1 %19, %18
  ret i1 %20

21:                                               ; preds = %1
  ret i1 false
}

declare %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element18DidAttachInternalsEv(%"class.blink::Element"*) local_unnamed_addr #2

declare dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16ElementInternals8HasStateERKN3WTF12AtomicStringE(%"class.blink::ElementInternals"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink9PartNames8ContainsERKN3WTF12AtomicStringE(%"class.blink::PartNames"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i8 @_ZN5blink11CSSSelector11GetPseudoIdENS0_10PseudoTypeE(i32) local_unnamed_addr #2

declare %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"*) local_unnamed_addr #2

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink14FrameSelection23FrameIsFocusedAndActiveEv(%"class.blink::FrameSelection"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink26IsSpatialNavigationEnabledEPKNS_10LocalFrameE(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::SpatialNavigationController"* @_ZN5blink4Page30GetSpatialNavigationControllerEv(%"class.blink::Page"*) local_unnamed_addr #2

declare %"class.blink::Element"* @_ZNK5blink27SpatialNavigationController20GetInterestedElementEv(%"class.blink::SpatialNavigationController"*) local_unnamed_addr #2

declare %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink13ContainerNode14SetRestyleFlagENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"*, i32) local_unnamed_addr #2

declare %"class.blink::HTMLSlotElement"* @_ZNK5blink4Node12AssignedSlotEv(%"class.blink::Node"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13QualifiedName18LocalNameUpperSlowEv(%"class.blink::QualifiedName"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL21AttributeValueMatchesERKNS_9AttributeENS_11CSSSelector9MatchTypeERKN3WTF12AtomicStringENS5_19TextCaseSensitivityE(%"class.blink::Attribute"* nocapture readonly dereferenceable(16), i32, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), i32) unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %326, label %15

15:                                               ; preds = %4
  switch i32 %1, label %320 [
    i32 7, label %16
    i32 8, label %326
    i32 10, label %50
    i32 11, label %168
    i32 12, label %193
    i32 13, label %217
    i32 9, label %241
  ]

16:                                               ; preds = %15
  %17 = icmp eq i32 %3, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, %13
  br label %326

22:                                               ; preds = %16
  %23 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #7
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %28, align 8
  %29 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %30 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %29, i64* %30, align 8
  br label %38

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 1
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %37 = bitcast i8** %36 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %37, align 8
  br label %38

38:                                               ; preds = %27, %31
  %39 = phi i32 [ %34, %31 ], [ 0, %27 ]
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %39, i32* %40, align 8
  %41 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #7
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %47 = bitcast i8** %46 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %47, align 8
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %44, i32* %48, align 8
  %49 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #7
  br label %326

50:                                               ; preds = %15
  %51 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %326, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %326, label %58

58:                                               ; preds = %54
  %59 = tail call i32 @_ZN3WTF10StringImpl4FindEPFbDsEj(%"class.WTF::StringImpl"* nonnull %52, i1 (i16)* nonnull @_ZN5blink11IsHTMLSpaceIDsEEbT_, i32 0) #7
  %60 = icmp eq i32 %59, -1
  br i1 %60, label %61, label %326

61:                                               ; preds = %58
  %62 = bitcast %"class.WTF::StringView"* %7 to i8*
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %65 = bitcast i8** %64 to %"class.WTF::StringImpl"**
  %66 = bitcast %"class.WTF::StringView"* %7 to i64*
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  br label %68

68:                                               ; preds = %61, %166
  %69 = phi i32 [ %167, %166 ], [ 0, %61 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #7
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %72, label %74

72:                                               ; preds = %68
  store i8* null, i8** %64, align 8
  %73 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %73, i64* %66, align 8
  br label %78

74:                                               ; preds = %68
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %63, align 8
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 1
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %65, align 8
  br label %78

78:                                               ; preds = %72, %74
  %79 = phi i32 [ %76, %74 ], [ 0, %72 ]
  store i32 %79, i32* %67, align 8
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %82, label %83

82:                                               ; preds = %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #7
  br label %326

83:                                               ; preds = %78
  switch i32 %3, label %88 [
    i32 0, label %84
    i32 1, label %86
  ]

84:                                               ; preds = %83
  %85 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %80, %"class.WTF::StringView"* nonnull dereferenceable(24) %7, i32 %69) #7
  br label %90

86:                                               ; preds = %83
  %87 = call i32 @_ZN3WTF10StringImpl21FindIgnoringASCIICaseERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %80, %"class.WTF::StringView"* nonnull dereferenceable(24) %7, i32 %69) #7
  br label %90

88:                                               ; preds = %83
  %89 = call i32 @_ZN3WTF10StringImpl16FindIgnoringCaseERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %80, %"class.WTF::StringView"* nonnull dereferenceable(24) %7, i32 %69) #7
  br label %90

90:                                               ; preds = %84, %86, %88
  %91 = phi i32 [ %85, %84 ], [ %87, %86 ], [ %89, %88 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #7
  switch i32 %91, label %92 [
    i32 -1, label %326
    i32 0, label %121
  ]

92:                                               ; preds = %90
  %93 = add i32 %91, -1
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %166, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = icmp ugt i32 %98, %93
  br i1 %99, label %100, label %166

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 1
  br i1 %104, label %112, label %106

106:                                              ; preds = %100
  %107 = bitcast %"class.WTF::StringImpl"* %105 to i8*
  %108 = zext i32 %93 to i64
  %109 = getelementptr inbounds i8, i8* %107, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i16
  br label %117

112:                                              ; preds = %100
  %113 = bitcast %"class.WTF::StringImpl"* %105 to i16*
  %114 = zext i32 %93 to i64
  %115 = getelementptr inbounds i16, i16* %113, i64 %114
  %116 = load i16, i16* %115, align 2
  br label %117

117:                                              ; preds = %106, %112
  %118 = phi i16 [ %111, %106 ], [ %116, %112 ]
  %119 = icmp ult i16 %118, 33
  br i1 %119, label %120, label %166

120:                                              ; preds = %117
  switch i16 %118, label %166 [
    i16 32, label %121
    i16 10, label %121
    i16 9, label %121
    i16 13, label %121
    i16 12, label %121
  ]

121:                                              ; preds = %120, %120, %120, %120, %120, %90
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %127, label %124

124:                                              ; preds = %121
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 1
  %126 = load i32, i32* %125, align 4
  br label %127

127:                                              ; preds = %121, %124
  %128 = phi i32 [ %126, %124 ], [ 0, %121 ]
  %129 = add i32 %128, %91
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 1
  %134 = load i32, i32* %133, align 4
  br label %135

135:                                              ; preds = %127, %132
  %136 = phi i32 [ %134, %132 ], [ 0, %127 ]
  %137 = icmp eq i32 %129, %136
  br i1 %137, label %326, label %138

138:                                              ; preds = %135
  br i1 %131, label %166, label %139

139:                                              ; preds = %138
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = icmp ugt i32 %141, %129
  br i1 %142, label %143, label %166

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 1
  br i1 %147, label %155, label %149

149:                                              ; preds = %143
  %150 = bitcast %"class.WTF::StringImpl"* %148 to i8*
  %151 = zext i32 %129 to i64
  %152 = getelementptr inbounds i8, i8* %150, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i16
  br label %160

155:                                              ; preds = %143
  %156 = bitcast %"class.WTF::StringImpl"* %148 to i16*
  %157 = zext i32 %129 to i64
  %158 = getelementptr inbounds i16, i16* %156, i64 %157
  %159 = load i16, i16* %158, align 2
  br label %160

160:                                              ; preds = %149, %155
  %161 = phi i16 [ %154, %149 ], [ %159, %155 ]
  %162 = icmp ult i16 %161, 33
  br i1 %162, label %163, label %166

163:                                              ; preds = %160
  %164 = add i16 %161, -9
  %165 = icmp ult i16 %164, 24
  br i1 %165, label %321, label %166

166:                                              ; preds = %321, %163, %138, %139, %120, %92, %96, %117, %160
  %167 = add nuw i32 %91, 1
  br label %68

168:                                              ; preds = %15
  %169 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %169, align 8
  %171 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %171, label %326, label %172

172:                                              ; preds = %168
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %326, label %176

176:                                              ; preds = %172
  %177 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %177) #7
  %178 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %170, %"class.WTF::StringImpl"** %178, align 8
  %179 = load i32, i32* %173, align 4
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 1
  %181 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %182 = bitcast i8** %181 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %180, %"class.WTF::StringImpl"** %182, align 8
  %183 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %179, i32* %183, align 8
  switch i32 %3, label %188 [
    i32 0, label %184
    i32 1, label %186
  ]

184:                                              ; preds = %176
  %185 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %8, i32 0) #7
  br label %190

186:                                              ; preds = %176
  %187 = call i32 @_ZN3WTF10StringImpl21FindIgnoringASCIICaseERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %8, i32 0) #7
  br label %190

188:                                              ; preds = %176
  %189 = call i32 @_ZN3WTF10StringImpl16FindIgnoringCaseERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %8, i32 0) #7
  br label %190

190:                                              ; preds = %184, %186, %188
  %191 = phi i32 [ %185, %184 ], [ %187, %186 ], [ %189, %188 ]
  %192 = icmp ne i32 %191, -1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %177) #7
  br label %326

193:                                              ; preds = %15
  %194 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  %196 = icmp eq %"class.WTF::StringImpl"* %195, null
  br i1 %196, label %326, label %197

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %326, label %201

201:                                              ; preds = %197
  %202 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %202) #7
  %203 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %195, %"class.WTF::StringImpl"** %203, align 8
  %204 = load i32, i32* %198, align 4
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 1
  %206 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %207 = bitcast i8** %206 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %205, %"class.WTF::StringImpl"** %207, align 8
  %208 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %204, i32* %208, align 8
  switch i32 %3, label %213 [
    i32 0, label %209
    i32 1, label %211
  ]

209:                                              ; preds = %201
  %210 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #7
  br label %215

211:                                              ; preds = %201
  %212 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #7
  br label %215

213:                                              ; preds = %201
  %214 = call zeroext i1 @_ZNK3WTF10StringImpl22StartsWithIgnoringCaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #7
  br label %215

215:                                              ; preds = %209, %211, %213
  %216 = phi i1 [ %210, %209 ], [ %212, %211 ], [ %214, %213 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %202) #7
  br label %326

217:                                              ; preds = %15
  %218 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %219 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %218, align 8
  %220 = icmp eq %"class.WTF::StringImpl"* %219, null
  br i1 %220, label %326, label %221

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %326, label %225

225:                                              ; preds = %221
  %226 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %226) #7
  %227 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %219, %"class.WTF::StringImpl"** %227, align 8
  %228 = load i32, i32* %222, align 4
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 1
  %230 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %231 = bitcast i8** %230 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %229, %"class.WTF::StringImpl"** %231, align 8
  %232 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %228, i32* %232, align 8
  switch i32 %3, label %237 [
    i32 0, label %233
    i32 1, label %235
  ]

233:                                              ; preds = %225
  %234 = call zeroext i1 @_ZNK3WTF10StringImpl8EndsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #7
  br label %239

235:                                              ; preds = %225
  %236 = call zeroext i1 @_ZNK3WTF10StringImpl25EndsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #7
  br label %239

237:                                              ; preds = %225
  %238 = call zeroext i1 @_ZNK3WTF10StringImpl20EndsWithIgnoringCaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #7
  br label %239

239:                                              ; preds = %233, %235, %237
  %240 = phi i1 [ %234, %233 ], [ %236, %235 ], [ %238, %237 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %226) #7
  br label %326

241:                                              ; preds = %15
  %242 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %242, align 8
  %244 = icmp eq %"class.WTF::StringImpl"* %243, null
  br i1 %244, label %251, label %245

245:                                              ; preds = %241
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %247 = load i32, i32* %246, align 4
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 1
  %249 = load i32, i32* %248, align 4
  %250 = icmp ult i32 %247, %249
  br i1 %250, label %326, label %256

251:                                              ; preds = %241
  %252 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %252) #7
  %253 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %253, align 8
  %254 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %255 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %254, i64* %255, align 8
  br label %263

256:                                              ; preds = %245
  %257 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %257) #7
  %258 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %243, %"class.WTF::StringImpl"** %258, align 8
  %259 = load i32, i32* %248, align 4
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 1
  %261 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %262 = bitcast i8** %261 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %260, %"class.WTF::StringImpl"** %262, align 8
  br label %263

263:                                              ; preds = %256, %251
  %264 = phi i8* [ %257, %256 ], [ %252, %251 ]
  %265 = phi i32 [ %259, %256 ], [ 0, %251 ]
  %266 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %265, i32* %266, align 8
  switch i32 %3, label %271 [
    i32 0, label %267
    i32 1, label %269
  ]

267:                                              ; preds = %263
  %268 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %264) #7
  br i1 %268, label %273, label %326

269:                                              ; preds = %263
  %270 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %264) #7
  br i1 %270, label %273, label %326

271:                                              ; preds = %263
  %272 = call zeroext i1 @_ZNK3WTF10StringImpl22StartsWithIgnoringCaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %264) #7
  br i1 %272, label %273, label %326

273:                                              ; preds = %269, %267, %271
  %274 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %275 = icmp eq %"class.WTF::StringImpl"* %274, null
  br i1 %275, label %279, label %276

276:                                              ; preds = %273
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 1
  %278 = load i32, i32* %277, align 4
  br label %279

279:                                              ; preds = %273, %276
  %280 = phi i32 [ %278, %276 ], [ 0, %273 ]
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %242, align 8
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %286, label %283

283:                                              ; preds = %279
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 1
  %285 = load i32, i32* %284, align 4
  br label %286

286:                                              ; preds = %279, %283
  %287 = phi i32 [ %285, %283 ], [ 0, %279 ]
  %288 = icmp eq i32 %280, %287
  br i1 %288, label %319, label %289

289:                                              ; preds = %286
  br i1 %282, label %293, label %290

290:                                              ; preds = %289
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 1
  %292 = load i32, i32* %291, align 4
  br label %293

293:                                              ; preds = %289, %290
  %294 = phi i32 [ %292, %290 ], [ 0, %289 ]
  br i1 %275, label %326, label %295

295:                                              ; preds = %293
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 1
  %297 = load i32, i32* %296, align 4
  %298 = icmp ugt i32 %297, %294
  br i1 %298, label %299, label %326

299:                                              ; preds = %295
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %301 = load atomic i32, i32* %300 monotonic, align 4
  %302 = and i32 %301, 1
  %303 = icmp eq i32 %302, 0
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 1
  br i1 %303, label %311, label %305

305:                                              ; preds = %299
  %306 = bitcast %"class.WTF::StringImpl"* %304 to i8*
  %307 = zext i32 %294 to i64
  %308 = getelementptr inbounds i8, i8* %306, i64 %307
  %309 = load i8, i8* %308, align 1
  %310 = zext i8 %309 to i16
  br label %316

311:                                              ; preds = %299
  %312 = bitcast %"class.WTF::StringImpl"* %304 to i16*
  %313 = zext i32 %294 to i64
  %314 = getelementptr inbounds i16, i16* %312, i64 %313
  %315 = load i16, i16* %314, align 2
  br label %316

316:                                              ; preds = %305, %311
  %317 = phi i16 [ %310, %305 ], [ %315, %311 ]
  %318 = icmp eq i16 %317, 45
  br i1 %318, label %319, label %326

319:                                              ; preds = %316, %286
  br label %326

320:                                              ; preds = %15
  br label %326

321:                                              ; preds = %163
  %322 = zext i16 %164 to i32
  %323 = lshr i32 8388635, %322
  %324 = and i32 %323, 1
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %166, label %326

326:                                              ; preds = %321, %90, %135, %293, %295, %217, %193, %168, %82, %50, %269, %267, %316, %271, %245, %221, %197, %172, %54, %58, %15, %4, %320, %319, %239, %215, %190, %38, %18
  %327 = phi i1 [ false, %320 ], [ true, %319 ], [ %240, %239 ], [ %216, %215 ], [ %192, %190 ], [ %21, %18 ], [ %49, %38 ], [ false, %4 ], [ true, %15 ], [ false, %58 ], [ false, %54 ], [ false, %172 ], [ false, %197 ], [ false, %221 ], [ false, %245 ], [ false, %271 ], [ false, %316 ], [ false, %267 ], [ false, %269 ], [ false, %50 ], [ false, %82 ], [ false, %168 ], [ false, %193 ], [ false, %217 ], [ false, %295 ], [ false, %293 ], [ true, %321 ], [ false, %90 ], [ true, %135 ]
  ret i1 %327
}

declare zeroext i1 @_ZN5blink12HTMLDocument24IsCaseSensitiveAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK5blink7Element26SynchronizeAttributeHintedERKN3WTF12AtomicStringENS1_17AtomicStringTable10WeakResultE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), i64) local_unnamed_addr #2

declare i64 @_ZNK5blink7Element24WeakLowercaseIfNecessaryERKN3WTF10StringViewE(%"class.blink::Element"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink11IsHTMLSpaceIDsEEbT_(i16 zeroext) #3 comdat {
  %2 = icmp ult i16 %0, 33
  br i1 %2, label %3, label %11

3:                                                ; preds = %1
  %4 = add i16 %0, -9
  %5 = icmp ult i16 %4, 24
  br i1 %5, label %6, label %11

6:                                                ; preds = %3
  %7 = zext i16 %4 to i24
  %8 = lshr i24 -8388581, %7
  %9 = and i24 %8, 1
  %10 = icmp ne i24 %9, 0
  ret i1 %10

11:                                               ; preds = %3, %1
  ret i1 false
}

declare i32 @_ZN3WTF10StringImpl4FindEPFbDsEj(%"class.WTF::StringImpl"*, i1 (i16)*, i32) local_unnamed_addr #2

declare i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #2

declare i32 @_ZN3WTF10StringImpl21FindIgnoringASCIICaseERKNS_10StringViewEj(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #2

declare i32 @_ZN3WTF10StringImpl16FindIgnoringCaseERKNS_10StringViewEj(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK3WTF10StringImpl8EndsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3WTF10StringImpl25EndsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3WTF10StringImpl20EndsWithIgnoringCaseERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"*) local_unnamed_addr #2

declare void @_ZN5blink7Element14SetElementFlagENS_12ElementFlagsEb(%"class.blink::Element"*, i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #4

declare void @_ZN5blink5probe20ForcePseudoStateImplEPNS_7ElementENS_11CSSSelector10PseudoTypeEPb(%"class.blink::Element"*, i32, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node26IsUserActionElementDraggedEv(%"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node33IsUserActionElementHasFocusWithinEv(%"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node26IsUserActionElementHoveredEv(%"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node25IsUserActionElementActiveEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3WTF10StringImpl22StartsWithIgnoringCaseERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.blink::Element"* @_ZN5blink10Fullscreen21FullscreenElementFromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink7Element22HasElementFlagInternalENS_12ElementFlagsE(%"class.blink::Element"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17HTMLOptionElement24SpatialNavigationFocusedEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #2

declare %"class.blink::HTMLElement"* @_ZNK5blink16HTMLInputElement4listEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17HTMLOptionElement20IsMultiSelectFocusedEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node26IsUserActionElementFocusedEv(%"class.blink::Node"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blinkL29PrepareNextContextForRelationERKNS_15SelectorChecker23SelectorCheckingContextE: argument 0"}
!5 = distinct !{!5, !"_ZN5blinkL29PrepareNextContextForRelationERKNS_15SelectorChecker23SelectorCheckingContextE"}
!6 = !{i8 0, i8 2}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN5blinkL29PrepareNextContextForRelationERKNS_15SelectorChecker23SelectorCheckingContextE: argument 0"}
!9 = distinct !{!9, !"_ZN5blinkL29PrepareNextContextForRelationERKNS_15SelectorChecker23SelectorCheckingContextE"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN5blinkL29PrepareNextContextForRelationERKNS_15SelectorChecker23SelectorCheckingContextE: argument 0"}
!12 = distinct !{!12, !"_ZN5blinkL29PrepareNextContextForRelationERKNS_15SelectorChecker23SelectorCheckingContextE"}
!13 = !{!"branch_weights", i32 1, i32 2000}
