; ModuleID = '../../third_party/webrtc/logging/rtc_event_log/events/rtc_event_generic_packet_received.cc'
source_filename = "../../third_party/webrtc/logging/rtc_event_log/events/rtc_event_generic_packet_received.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::RtcEventGenericPacketReceived" = type { %"class.webrtc::RtcEvent", i64, i64 }
%"class.webrtc::RtcEvent" = type { i32 (...)**, i64 }

$_ZNK6webrtc29RtcEventGenericPacketReceived7GetTypeEv = comdat any

$_ZNK6webrtc29RtcEventGenericPacketReceived13IsConfigEventEv = comdat any

$_ZN6webrtc8RtcEventD2Ev = comdat any

$_ZN6webrtc8RtcEventD0Ev = comdat any

$_ZTVN6webrtc8RtcEventE = comdat any

@_ZTVN6webrtc29RtcEventGenericPacketReceivedE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::RtcEventGenericPacketReceived"*)* @_ZN6webrtc29RtcEventGenericPacketReceivedD2Ev to i8*), i8* bitcast (void (%"class.webrtc::RtcEventGenericPacketReceived"*)* @_ZN6webrtc29RtcEventGenericPacketReceivedD0Ev to i8*), i8* bitcast (i32 (%"class.webrtc::RtcEventGenericPacketReceived"*)* @_ZNK6webrtc29RtcEventGenericPacketReceived7GetTypeEv to i8*), i8* bitcast (i1 (%"class.webrtc::RtcEventGenericPacketReceived"*)* @_ZNK6webrtc29RtcEventGenericPacketReceived13IsConfigEventEv to i8*)] }, align 8
@_ZTVN6webrtc8RtcEventE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::RtcEvent"*)* @_ZN6webrtc8RtcEventD2Ev to i8*), i8* bitcast (void (%"class.webrtc::RtcEvent"*)* @_ZN6webrtc8RtcEventD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8

@_ZN6webrtc29RtcEventGenericPacketReceivedC1Elm = hidden unnamed_addr alias void (%"class.webrtc::RtcEventGenericPacketReceived"*, i64, i64), void (%"class.webrtc::RtcEventGenericPacketReceived"*, i64, i64)* @_ZN6webrtc29RtcEventGenericPacketReceivedC2Elm
@_ZN6webrtc29RtcEventGenericPacketReceivedC1ERKS0_ = hidden unnamed_addr alias void (%"class.webrtc::RtcEventGenericPacketReceived"*, %"class.webrtc::RtcEventGenericPacketReceived"*), void (%"class.webrtc::RtcEventGenericPacketReceived"*, %"class.webrtc::RtcEventGenericPacketReceived"*)* @_ZN6webrtc29RtcEventGenericPacketReceivedC2ERKS0_
@_ZN6webrtc29RtcEventGenericPacketReceivedD1Ev = hidden unnamed_addr alias void (%"class.webrtc::RtcEventGenericPacketReceived"*), void (%"class.webrtc::RtcEventGenericPacketReceived"*)* @_ZN6webrtc29RtcEventGenericPacketReceivedD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29RtcEventGenericPacketReceivedC2Elm(%"class.webrtc::RtcEventGenericPacketReceived"*, i64, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::RtcEventGenericPacketReceived", %"class.webrtc::RtcEventGenericPacketReceived"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc8RtcEventC2Ev(%"class.webrtc::RtcEvent"* %4) #7
  %5 = getelementptr inbounds %"class.webrtc::RtcEventGenericPacketReceived", %"class.webrtc::RtcEventGenericPacketReceived"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc29RtcEventGenericPacketReceivedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::RtcEventGenericPacketReceived", %"class.webrtc::RtcEventGenericPacketReceived"* %0, i64 0, i32 1
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds %"class.webrtc::RtcEventGenericPacketReceived", %"class.webrtc::RtcEventGenericPacketReceived"* %0, i64 0, i32 2
  store i64 %2, i64* %7, align 8
  ret void
}

declare void @_ZN6webrtc8RtcEventC2Ev(%"class.webrtc::RtcEvent"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29RtcEventGenericPacketReceivedC2ERKS0_(%"class.webrtc::RtcEventGenericPacketReceived"* nocapture, %"class.webrtc::RtcEventGenericPacketReceived"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::RtcEventGenericPacketReceived", %"class.webrtc::RtcEventGenericPacketReceived"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc8RtcEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::RtcEventGenericPacketReceived", %"class.webrtc::RtcEventGenericPacketReceived"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.webrtc::RtcEventGenericPacketReceived", %"class.webrtc::RtcEventGenericPacketReceived"* %1, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc29RtcEventGenericPacketReceivedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %7 = getelementptr inbounds %"class.webrtc::RtcEventGenericPacketReceived", %"class.webrtc::RtcEventGenericPacketReceived"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.webrtc::RtcEventGenericPacketReceived", %"class.webrtc::RtcEventGenericPacketReceived"* %1, i64 0, i32 1
  %9 = bitcast i64* %7 to i8*
  %10 = bitcast i64* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc29RtcEventGenericPacketReceivedD2Ev(%"class.webrtc::RtcEventGenericPacketReceived"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29RtcEventGenericPacketReceivedD0Ev(%"class.webrtc::RtcEventGenericPacketReceived"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.webrtc::RtcEventGenericPacketReceived"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.webrtc::RtcEventGenericPacketReceived"* @_ZNK6webrtc29RtcEventGenericPacketReceived4CopyEv(%"class.webrtc::RtcEventGenericPacketReceived"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #8
  %3 = bitcast i8* %2 to %"class.webrtc::RtcEventGenericPacketReceived"*
  %4 = bitcast i8* %2 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = bitcast i8* %5 to i64*
  %7 = getelementptr inbounds %"class.webrtc::RtcEventGenericPacketReceived", %"class.webrtc::RtcEventGenericPacketReceived"* %0, i64 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc29RtcEventGenericPacketReceivedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %9 = getelementptr inbounds i8, i8* %2, i64 16
  %10 = getelementptr inbounds %"class.webrtc::RtcEventGenericPacketReceived", %"class.webrtc::RtcEventGenericPacketReceived"* %0, i64 0, i32 1
  %11 = bitcast i64* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %11, i64 16, i1 false) #7
  ret %"class.webrtc::RtcEventGenericPacketReceived"* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6webrtc29RtcEventGenericPacketReceived7GetTypeEv(%"class.webrtc::RtcEventGenericPacketReceived"*) unnamed_addr #0 comdat align 2 {
  ret i32 23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6webrtc29RtcEventGenericPacketReceived13IsConfigEventEv(%"class.webrtc::RtcEventGenericPacketReceived"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc8RtcEventD2Ev(%"class.webrtc::RtcEvent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc8RtcEventD0Ev(%"class.webrtc::RtcEvent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
