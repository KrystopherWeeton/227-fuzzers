; ModuleID = '../../third_party/pdfium/fpdfsdk/cpdfsdk_customaccess.cpp'
source_filename = "../../third_party/pdfium/fpdfsdk/cpdfsdk_customaccess.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDFSDK_CustomAccess = type { %class.IFX_SeekableReadStream.base, %struct.FPDF_FILEACCESS, %"class.fxcrt::Retainable" }
%class.IFX_SeekableReadStream.base = type { %class.IFX_StreamWithSize }
%class.IFX_StreamWithSize = type { i32 (...)** }
%struct.FPDF_FILEACCESS = type { i64, i32 (i8*, i64, i8*, i64)*, i8* }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }

$_ZN22IFX_SeekableReadStreamD1Ev = comdat any

$_ZN22IFX_SeekableReadStreamD0Ev = comdat any

$_ZTv0_n24_N22IFX_SeekableReadStreamD1Ev = comdat any

$_ZTv0_n24_N22IFX_SeekableReadStreamD0Ev = comdat any

@_ZTV20CPDFSDK_CustomAccess = hidden unnamed_addr constant { [12 x i8*], [5 x i8*] } { [12 x i8*] [i8* null, i8* inttoptr (i64 32 to i8*), i8* null, i8* null, i8* null, i8* bitcast (i64 (%class.CPDFSDK_CustomAccess*)* @_ZN20CPDFSDK_CustomAccess7GetSizeEv to i8*), i8* bitcast (i1 (%class.IFX_SeekableReadStream*)* @_ZN22IFX_SeekableReadStream5IsEOFEv to i8*), i8* bitcast (i64 (%class.IFX_SeekableReadStream*)* @_ZN22IFX_SeekableReadStream11GetPositionEv to i8*), i8* bitcast (i64 (%class.IFX_SeekableReadStream*, i8*, i64)* @_ZN22IFX_SeekableReadStream9ReadBlockEPvm to i8*), i8* bitcast (i1 (%class.CPDFSDK_CustomAccess*, i8*, i64, i64)* @_ZN20CPDFSDK_CustomAccess17ReadBlockAtOffsetEPvlm to i8*), i8* bitcast (void (%class.CPDFSDK_CustomAccess*)* @_ZN20CPDFSDK_CustomAccessD1Ev to i8*), i8* bitcast (void (%class.CPDFSDK_CustomAccess*)* @_ZN20CPDFSDK_CustomAccessD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* inttoptr (i64 -32 to i8*), i8* null, i8* bitcast (void (%class.CPDFSDK_CustomAccess*)* @_ZTv0_n24_N20CPDFSDK_CustomAccessD1Ev to i8*), i8* bitcast (void (%class.CPDFSDK_CustomAccess*)* @_ZTv0_n24_N20CPDFSDK_CustomAccessD0Ev to i8*)] }, align 8
@_ZTT20CPDFSDK_CustomAccess = hidden unnamed_addr constant [6 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTV20CPDFSDK_CustomAccess, i32 0, inrange i32 0, i32 5) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTC20CPDFSDK_CustomAccess0_22IFX_SeekableReadStream, i32 0, inrange i32 0, i32 5) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTC20CPDFSDK_CustomAccess0_22IFX_SeekableReadStream, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTC20CPDFSDK_CustomAccess0_22IFX_SeekableReadStream, i32 0, inrange i32 0, i32 5) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTV20CPDFSDK_CustomAccess, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTV20CPDFSDK_CustomAccess, i32 0, inrange i32 0, i32 5) to i8*)], align 8
@_ZTC20CPDFSDK_CustomAccess0_22IFX_SeekableReadStream = hidden unnamed_addr constant { [12 x i8*], [5 x i8*] } { [12 x i8*] [i8* null, i8* inttoptr (i64 32 to i8*), i8* null, i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.IFX_SeekableReadStream*)* @_ZN22IFX_SeekableReadStream5IsEOFEv to i8*), i8* bitcast (i64 (%class.IFX_SeekableReadStream*)* @_ZN22IFX_SeekableReadStream11GetPositionEv to i8*), i8* bitcast (i64 (%class.IFX_SeekableReadStream*, i8*, i64)* @_ZN22IFX_SeekableReadStream9ReadBlockEPvm to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.IFX_SeekableReadStream*)* @_ZN22IFX_SeekableReadStreamD1Ev to i8*), i8* bitcast (void (%class.IFX_SeekableReadStream*)* @_ZN22IFX_SeekableReadStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* inttoptr (i64 -32 to i8*), i8* null, i8* bitcast (void (%class.IFX_SeekableReadStream*)* @_ZTv0_n24_N22IFX_SeekableReadStreamD1Ev to i8*), i8* bitcast (void (%class.IFX_SeekableReadStream*)* @_ZTv0_n24_N22IFX_SeekableReadStreamD0Ev to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDFSDK_CustomAccessC2EP15FPDF_FILEACCESS(%class.CPDFSDK_CustomAccess* nocapture, i8** nocapture readonly, %struct.FPDF_FILEACCESS* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds i8*, i8** %1, i64 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %class.CPDFSDK_CustomAccess* %0 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds i8*, i8** %1, i64 2
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.CPDFSDK_CustomAccess* %0 to i8**
  %12 = inttoptr i64 %6 to i8*
  %13 = getelementptr i8, i8* %12, i64 -32
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %class.CPDFSDK_CustomAccess* %0 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %15
  %18 = bitcast i8* %17 to i64*
  store i64 %10, i64* %18, align 8
  %19 = getelementptr inbounds i8*, i8** %1, i64 3
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = load i8*, i8** %11, align 8
  %23 = getelementptr i8, i8* %22, i64 -40
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %16, i64 %25
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 8
  %28 = bitcast i8** %1 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %7, align 8
  %30 = getelementptr inbounds i8*, i8** %1, i64 4
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = inttoptr i64 %29 to i8*
  %34 = getelementptr i8, i8* %33, i64 -32
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds i8, i8* %16, i64 %36
  %38 = bitcast i8* %37 to i64*
  store i64 %32, i64* %38, align 8
  %39 = getelementptr inbounds i8*, i8** %1, i64 5
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = load i8*, i8** %11, align 8
  %43 = getelementptr i8, i8* %42, i64 -40
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds i8, i8* %16, i64 %45
  %47 = bitcast i8* %46 to i64*
  store i64 %41, i64* %47, align 8
  %48 = getelementptr inbounds %class.CPDFSDK_CustomAccess, %class.CPDFSDK_CustomAccess* %0, i64 0, i32 1
  %49 = bitcast %struct.FPDF_FILEACCESS* %48 to i8*
  %50 = bitcast %struct.FPDF_FILEACCESS* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDFSDK_CustomAccessC1EP15FPDF_FILEACCESS(%class.CPDFSDK_CustomAccess* nocapture, %struct.FPDF_FILEACCESS* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDFSDK_CustomAccess, %class.CPDFSDK_CustomAccess* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %class.CPDFSDK_CustomAccess, %class.CPDFSDK_CustomAccess* %0, i64 0, i32 2, i32 1
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %class.CPDFSDK_CustomAccess, %class.CPDFSDK_CustomAccess* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTV20CPDFSDK_CustomAccess, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTV20CPDFSDK_CustomAccess, i64 0, inrange i32 0, i64 5) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.CPDFSDK_CustomAccess, %class.CPDFSDK_CustomAccess* %0, i64 0, i32 1
  %7 = bitcast %struct.FPDF_FILEACCESS* %6 to i8*
  %8 = bitcast %struct.FPDF_FILEACCESS* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN20CPDFSDK_CustomAccessD2Ev(%class.CPDFSDK_CustomAccess* nocapture, i8** nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN20CPDFSDK_CustomAccessD1Ev(%class.CPDFSDK_CustomAccess* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden void @_ZTv0_n24_N20CPDFSDK_CustomAccessD1Ev(%class.CPDFSDK_CustomAccess* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDFSDK_CustomAccessD0Ev(%class.CPDFSDK_CustomAccess*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPDFSDK_CustomAccess* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZTv0_n24_N20CPDFSDK_CustomAccessD0Ev(%class.CPDFSDK_CustomAccess*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPDFSDK_CustomAccess* %0 to i8*
  %3 = bitcast %class.CPDFSDK_CustomAccess* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  tail call void @_ZdlPv(i8* %8) #9
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN20CPDFSDK_CustomAccess7GetSizeEv(%class.CPDFSDK_CustomAccess* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CPDFSDK_CustomAccess, %class.CPDFSDK_CustomAccess* %0, i64 0, i32 1, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZTv0_n24_N20CPDFSDK_CustomAccess7GetSizeEv(%class.CPDFSDK_CustomAccess* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = bitcast %class.CPDFSDK_CustomAccess* %0 to i8*
  %3 = bitcast %class.CPDFSDK_CustomAccess* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  ret i64 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20CPDFSDK_CustomAccess17ReadBlockAtOffsetEPvlm(%class.CPDFSDK_CustomAccess* nocapture readonly, i8*, i64, i64) unnamed_addr #0 align 2 {
  %5 = icmp ne i8* %1, null
  %6 = icmp sgt i64 %2, -1
  %7 = and i1 %5, %6
  %8 = icmp sgt i64 %3, 0
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %25

10:                                               ; preds = %4
  %11 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %3, i64 %2) #10
  %12 = extractvalue { i64, i1 } %11, 1
  br i1 %12, label %25, label %13

13:                                               ; preds = %10
  %14 = extractvalue { i64, i1 } %11, 0
  %15 = getelementptr inbounds %class.CPDFSDK_CustomAccess, %class.CPDFSDK_CustomAccess* %0, i64 0, i32 1, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp sgt i64 %14, %16
  br i1 %17, label %25, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.CPDFSDK_CustomAccess, %class.CPDFSDK_CustomAccess* %0, i64 0, i32 1, i32 1
  %20 = load i32 (i8*, i64, i8*, i64)*, i32 (i8*, i64, i8*, i64)** %19, align 8
  %21 = getelementptr inbounds %class.CPDFSDK_CustomAccess, %class.CPDFSDK_CustomAccess* %0, i64 0, i32 1, i32 2
  %22 = load i8*, i8** %21, align 8
  %23 = tail call i32 %20(i8* %22, i64 %2, i8* nonnull %1, i64 %3) #10
  %24 = icmp ne i32 %23, 0
  br label %25

25:                                               ; preds = %18, %10, %13, %4
  %26 = phi i1 [ false, %4 ], [ false, %13 ], [ false, %10 ], [ %24, %18 ]
  ret i1 %26
}

declare void @__cxa_pure_virtual() unnamed_addr

declare zeroext i1 @_ZN22IFX_SeekableReadStream5IsEOFEv(%class.IFX_SeekableReadStream*) unnamed_addr #5

declare i64 @_ZN22IFX_SeekableReadStream11GetPositionEv(%class.IFX_SeekableReadStream*) unnamed_addr #5

declare i64 @_ZN22IFX_SeekableReadStream9ReadBlockEPvm(%class.IFX_SeekableReadStream*, i8*, i64) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22IFX_SeekableReadStreamD1Ev(%class.IFX_SeekableReadStream*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22IFX_SeekableReadStreamD0Ev(%class.IFX_SeekableReadStream*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N22IFX_SeekableReadStreamD1Ev(%class.IFX_SeekableReadStream*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N22IFX_SeekableReadStreamD0Ev(%class.IFX_SeekableReadStream*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
