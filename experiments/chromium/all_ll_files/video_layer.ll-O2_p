; ModuleID = '../../cc/layers/video_layer.cc'
source_filename = "../../cc/layers/video_layer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::VideoLayer" = type <{ %"class.cc::Layer", %"class.cc::VideoFrameProvider"*, i32, [4 x i8] }>
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.42" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::LayerTreeHost" = type opaque
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.scoped_refptr.0*, %class.scoped_refptr.0*, %"class.std::__1::__compressed_pair" }
%class.scoped_refptr.0 = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.scoped_refptr.0* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.2" }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::pair"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.27", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.33" }
%"class.cc::PictureLayer" = type opaque
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.11" }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.22" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.15", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.14, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.14 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.27" = type { %"class.absl::optional_internal::optional_data.28" }
%"class.absl::optional_internal::optional_data.28" = type { %"class.absl::optional_internal::optional_data_base.29" }
%"class.absl::optional_internal::optional_data_base.29" = type { %"class.absl::optional_internal::optional_data_dtor_base.30" }
%"class.absl::optional_internal::optional_data_dtor_base.30" = type { i8, %union.anon.31 }
%union.anon.31 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.std::__1::unique_ptr.35"*, %"class.std::__1::unique_ptr.35"*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::unique_ptr.35" = type opaque
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::unique_ptr.35"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.51", %"class.std::__1::vector.51", %"class.std::__1::vector.58" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.47 }
%union.anon.47 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { i8**, i8**, %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { i8** }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.60" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.cc::VideoFrameProvider" = type opaque
%"class.cc::LayerImpl" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.71", i8, [7 x i8] }>
%"struct.cc::DrawProperties" = type { %"class.gfx::Transform", %"class.gfx::Transform", %"class.cc::Occlusion", float, i8, i8, i8, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo" }
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"struct.cc::PerformanceProperties" = type { i32, float, %"class.gfx::Transform" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.cc::Region"* }
%"class.cc::LayerTreeImpl" = type opaque
%"class.cc::VideoLayerImpl" = type { %"class.cc::LayerImpl.base", %class.scoped_refptr.83, %class.scoped_refptr.84, i32, %"class.std::__1::unique_ptr.85" }
%"class.cc::LayerImpl.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.71", i8 }>
%class.scoped_refptr.83 = type { %"class.cc::VideoFrameProviderClientImpl"* }
%"class.cc::VideoFrameProviderClientImpl" = type opaque
%class.scoped_refptr.84 = type { %"class.media::VideoFrame"* }
%"class.media::VideoFrame" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.media::VideoResourceUpdater"* }
%"class.media::VideoResourceUpdater" = type opaque
%"class.std::__1::vector.94" = type opaque
%class.sk_sp.95 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.96", [7 x i8] }>
%"struct.std::__1::atomic.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i8 }
%"class.cc::MicroBenchmark" = type { i32 (...)**, %"class.base::OnceCallback", i8, i8, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }

@_ZTVN2cc10VideoLayerE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::Layer"*, i32)* @_ZN2cc5Layer18SetBackgroundColorEj to i8*), i8* bitcast (void (%"class.cc::Layer"*, %"class.gfx::Rect"*)* @_ZN2cc5Layer19SetNeedsDisplayRectERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.cc::Layer"*, float)* @_ZN2cc5Layer10SetOpacityEf to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZNK2cc5Layer11HitTestableEv to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZNK2cc5Layer26IsScrollbarLayerForTestingEv to i8*), i8* bitcast (void (%"class.cc::Layer"*, %"class.gfx::Rect"*, %"class.std::__1::vector.94"*)* @_ZN2cc5Layer14CaptureContentERKN3gfx4RectEPNSt3__16vectorINS_8NodeInfoENS5_9allocatorIS7_EEEE to i8*), i8* bitcast (void (%class.sk_sp.95*, %"class.cc::Layer"*)* @_ZNK2cc5Layer10GetPictureEv to i8*), i8* bitcast (void (%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*)* @_ZN2cc5Layer17RunMicroBenchmarkEPNS_14MicroBenchmarkE to i8*), i8* bitcast (%"class.cc::LayerImpl"* (%"class.cc::VideoLayer"*, %"class.cc::LayerTreeImpl"*)* @_ZN2cc10VideoLayer15CreateLayerImplEPNS_13LayerTreeImplE to i8*), i8* bitcast (void (%"class.cc::Layer"*, %"class.cc::LayerImpl"*)* @_ZN2cc5Layer16PushPropertiesToEPNS_9LayerImplE to i8*), i8* bitcast (i1 (%"class.cc::VideoLayer"*)* @_ZN2cc10VideoLayer6UpdateEv to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZN2cc5Layer28IsSnappedToPixelGridInTargetEv to i8*), i8* bitcast (void (%"class.cc::Layer"*, %"class.cc::LayerTreeHost"*)* @_ZN2cc5Layer16SetLayerTreeHostEPNS_13LayerTreeHostE to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZNK2cc5Layer29OpacityCanAnimateOnImplThreadEv to i8*), i8* bitcast (void (%"class.cc::VideoLayer"*)* @_ZN2cc10VideoLayerD2Ev to i8*), i8* bitcast (void (%"class.cc::VideoLayer"*)* @_ZN2cc10VideoLayerD0Ev to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZNK2cc5Layer18HasDrawableContentEv to i8*)] }, align 8

@_ZN2cc10VideoLayerC1EPNS_18VideoFrameProviderEN5media13VideoRotationE = hidden unnamed_addr alias void (%"class.cc::VideoLayer"*, %"class.cc::VideoFrameProvider"*, i32), void (%"class.cc::VideoLayer"*, %"class.cc::VideoFrameProvider"*, i32)* @_ZN2cc10VideoLayerC2EPNS_18VideoFrameProviderEN5media13VideoRotationE
@_ZN2cc10VideoLayerD1Ev = hidden unnamed_addr alias void (%"class.cc::VideoLayer"*), void (%"class.cc::VideoLayer"*)* @_ZN2cc10VideoLayerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.cc::VideoLayer"* @_ZN2cc10VideoLayer6CreateEPNS_18VideoFrameProviderEN5media13VideoRotationE(%"class.cc::VideoFrameProvider"*, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 248) #6
  %4 = bitcast i8* %3 to %"class.cc::VideoLayer"*
  %5 = bitcast i8* %3 to %"class.cc::Layer"*
  tail call void @_ZN2cc5LayerC2Ev(%"class.cc::Layer"* nonnull %5) #7
  %6 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2cc10VideoLayerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 232
  %8 = bitcast i8* %7 to %"class.cc::VideoFrameProvider"**
  store %"class.cc::VideoFrameProvider"* %0, %"class.cc::VideoFrameProvider"** %8, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 240
  %10 = bitcast i8* %9 to i32*
  store i32 %1, i32* %10, align 8
  tail call void @_ZN2cc5Layer18SetMayContainVideoEb(%"class.cc::Layer"* nonnull %5, i1 zeroext true) #7
  %11 = getelementptr inbounds i8, i8* %3, i64 8
  %12 = bitcast i8* %11 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %12) #7
  ret %"class.cc::VideoLayer"* %4
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10VideoLayerC2EPNS_18VideoFrameProviderEN5media13VideoRotationE(%"class.cc::VideoLayer"*, %"class.cc::VideoFrameProvider"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::VideoLayer", %"class.cc::VideoLayer"* %0, i64 0, i32 0
  tail call void @_ZN2cc5LayerC2Ev(%"class.cc::Layer"* %4) #7
  %5 = getelementptr inbounds %"class.cc::VideoLayer", %"class.cc::VideoLayer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2cc10VideoLayerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.cc::VideoLayer", %"class.cc::VideoLayer"* %0, i64 0, i32 1
  store %"class.cc::VideoFrameProvider"* %1, %"class.cc::VideoFrameProvider"** %6, align 8
  %7 = getelementptr inbounds %"class.cc::VideoLayer", %"class.cc::VideoLayer"* %0, i64 0, i32 2
  store i32 %2, i32* %7, align 8
  tail call void @_ZN2cc5Layer18SetMayContainVideoEb(%"class.cc::Layer"* %4, i1 zeroext true) #7
  ret void
}

declare void @_ZN2cc5LayerC2Ev(%"class.cc::Layer"*) unnamed_addr #2

declare void @_ZN2cc5Layer18SetMayContainVideoEb(%"class.cc::Layer"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc5LayerD2Ev(%"class.cc::Layer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10VideoLayerD2Ev(%"class.cc::VideoLayer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::VideoLayer", %"class.cc::VideoLayer"* %0, i64 0, i32 0
  tail call void @_ZN2cc5LayerD2Ev(%"class.cc::Layer"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc10VideoLayerD0Ev(%"class.cc::VideoLayer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::VideoLayer", %"class.cc::VideoLayer"* %0, i64 0, i32 0
  tail call void @_ZN2cc5LayerD2Ev(%"class.cc::Layer"* %2) #7
  %3 = bitcast %"class.cc::VideoLayer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::LayerImpl"* @_ZN2cc10VideoLayer15CreateLayerImplEPNS_13LayerTreeImplE(%"class.cc::VideoLayer"* nocapture readonly, %"class.cc::LayerTreeImpl"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::VideoLayer", %"class.cc::VideoLayer"* %0, i64 0, i32 0, i32 5, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.cc::VideoLayer", %"class.cc::VideoLayer"* %0, i64 0, i32 1
  %6 = load %"class.cc::VideoFrameProvider"*, %"class.cc::VideoFrameProvider"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::VideoLayer", %"class.cc::VideoLayer"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = tail call %"class.cc::VideoLayerImpl"* @_ZN2cc14VideoLayerImpl6CreateEPNS_13LayerTreeImplEiPNS_18VideoFrameProviderEN5media13VideoRotationE(%"class.cc::LayerTreeImpl"* %1, i32 %4, %"class.cc::VideoFrameProvider"* %6, i32 %8) #7
  %10 = bitcast %"class.cc::VideoLayerImpl"* %9 to %"class.cc::LayerImpl"*
  ret %"class.cc::LayerImpl"* %10
}

declare %"class.cc::VideoLayerImpl"* @_ZN2cc14VideoLayerImpl6CreateEPNS_13LayerTreeImplEiPNS_18VideoFrameProviderEN5media13VideoRotationE(%"class.cc::LayerTreeImpl"*, i32, %"class.cc::VideoFrameProvider"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc10VideoLayer6UpdateEv(%"class.cc::VideoLayer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::VideoLayer", %"class.cc::VideoLayer"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZN2cc5Layer6UpdateEv(%"class.cc::Layer"* %2) #7
  %4 = getelementptr inbounds %"class.cc::VideoLayer", %"class.cc::VideoLayer"* %0, i64 0, i32 0, i32 5, i32 1, i32 1, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.cc::VideoLayer", %"class.cc::VideoLayer"* %0, i64 0, i32 0, i32 5, i32 1, i32 1, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp ne i32 %9, 0
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i1 [ false, %1 ], [ %10, %7 ]
  %13 = or i1 %3, %12
  ret i1 %13
}

declare zeroext i1 @_ZN2cc5Layer6UpdateEv(%"class.cc::Layer"*) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc10VideoLayer17StopUsingProviderEv(%"class.cc::VideoLayer"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.cc::VideoLayer", %"class.cc::VideoLayer"* %0, i64 0, i32 1
  store %"class.cc::VideoFrameProvider"* null, %"class.cc::VideoFrameProvider"** %2, align 8
  ret void
}

declare void @_ZN2cc5Layer18SetBackgroundColorEj(%"class.cc::Layer"*, i32) unnamed_addr #2

declare void @_ZN2cc5Layer19SetNeedsDisplayRectERKN3gfx4RectE(%"class.cc::Layer"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN2cc5Layer10SetOpacityEf(%"class.cc::Layer"*, float) unnamed_addr #2

declare zeroext i1 @_ZNK2cc5Layer11HitTestableEv(%"class.cc::Layer"*) unnamed_addr #2

declare zeroext i1 @_ZNK2cc5Layer26IsScrollbarLayerForTestingEv(%"class.cc::Layer"*) unnamed_addr #2

declare void @_ZN2cc5Layer14CaptureContentERKN3gfx4RectEPNSt3__16vectorINS_8NodeInfoENS5_9allocatorIS7_EEEE(%"class.cc::Layer"*, %"class.gfx::Rect"* dereferenceable(16), %"class.std::__1::vector.94"*) unnamed_addr #2

declare void @_ZNK2cc5Layer10GetPictureEv(%class.sk_sp.95* sret, %"class.cc::Layer"*) unnamed_addr #2

declare void @_ZN2cc5Layer17RunMicroBenchmarkEPNS_14MicroBenchmarkE(%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*) unnamed_addr #2

declare void @_ZN2cc5Layer16PushPropertiesToEPNS_9LayerImplE(%"class.cc::Layer"*, %"class.cc::LayerImpl"*) unnamed_addr #2

declare zeroext i1 @_ZN2cc5Layer28IsSnappedToPixelGridInTargetEv(%"class.cc::Layer"*) unnamed_addr #2

declare void @_ZN2cc5Layer16SetLayerTreeHostEPNS_13LayerTreeHostE(%"class.cc::Layer"*, %"class.cc::LayerTreeHost"*) unnamed_addr #2

declare zeroext i1 @_ZNK2cc5Layer29OpacityCanAnimateOnImplThreadEv(%"class.cc::Layer"*) unnamed_addr #2

declare zeroext i1 @_ZNK2cc5Layer18HasDrawableContentEv(%"class.cc::Layer"*) unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
