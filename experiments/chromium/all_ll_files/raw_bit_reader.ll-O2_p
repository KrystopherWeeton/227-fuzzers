; ModuleID = '../../third_party/libgav1/src/src/utils/raw_bit_reader.cc'
source_filename = "../../third_party/libgav1/src/src/utils/raw_bit_reader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.libgav1::RawBitReader" = type { %"class.libgav1::BitReader", i8*, i64, i64 }
%"class.libgav1::BitReader" = type { i32 (...)** }

$_ZN7libgav112RawBitReaderD0Ev = comdat any

$_ZN7libgav19BitReaderD2Ev = comdat any

@_ZTVN7libgav112RawBitReaderE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.libgav1::BitReader"*)* @_ZN7libgav19BitReaderD2Ev to i8*), i8* bitcast (void (%"class.libgav1::RawBitReader"*)* @_ZN7libgav112RawBitReaderD0Ev to i8*), i8* bitcast (i32 (%"class.libgav1::RawBitReader"*)* @_ZN7libgav112RawBitReader7ReadBitEv to i8*), i8* bitcast (i64 (%"class.libgav1::RawBitReader"*, i32)* @_ZN7libgav112RawBitReader11ReadLiteralEi to i8*)] }, align 8

@_ZN7libgav112RawBitReaderC1EPKhm = hidden unnamed_addr alias void (%"class.libgav1::RawBitReader"*, i8*, i64), void (%"class.libgav1::RawBitReader"*, i8*, i64)* @_ZN7libgav112RawBitReaderC2EPKhm

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7libgav112RawBitReaderC2EPKhm(%"class.libgav1::RawBitReader"* nocapture, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7libgav112RawBitReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 1
  store i8* %1, i8** %5, align 8
  %6 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 2
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 3
  store i64 %2, i64* %7, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN7libgav112RawBitReader11ReadBitImplEv(%"class.libgav1::RawBitReader"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = lshr i64 %3, 3
  %5 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds i8, i8* %6, i64 %4
  %8 = load i8, i8* %7, align 1
  %9 = trunc i64 %3 to i32
  %10 = and i32 %9, 7
  %11 = xor i32 %10, 7
  %12 = add i64 %3, 1
  store i64 %12, i64* %2, align 8
  %13 = zext i8 %8 to i32
  %14 = lshr i32 %13, %11
  %15 = and i32 %14, 1
  ret i32 %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN7libgav112RawBitReader7ReadBitEv(%"class.libgav1::RawBitReader"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = lshr i64 %3, 3
  %5 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %4, %6
  br i1 %7, label %8, label %20

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %4
  %12 = load i8, i8* %11, align 1
  %13 = trunc i64 %3 to i32
  %14 = and i32 %13, 7
  %15 = xor i32 %14, 7
  %16 = add i64 %3, 1
  store i64 %16, i64* %2, align 8
  %17 = zext i8 %12 to i32
  %18 = lshr i32 %17, %15
  %19 = and i32 %18, 1
  br label %20

20:                                               ; preds = %1, %8
  %21 = phi i32 [ %19, %8 ], [ -1, %1 ]
  ret i32 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7libgav112RawBitReader8FinishedEv(%"class.libgav1::RawBitReader"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = lshr i64 %3, 3
  %5 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = icmp uge i64 %4, %6
  ret i1 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN7libgav112RawBitReader11ReadLiteralEi(%"class.libgav1::RawBitReader"* nocapture, i32) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 3
  %6 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %5, %7
  br i1 %8, label %9, label %38

9:                                                ; preds = %2
  %10 = sext i32 %1 to i64
  %11 = add nsw i64 %10, -1
  %12 = add i64 %11, %4
  %13 = lshr i64 %12, 3
  %14 = icmp ult i64 %13, %7
  br i1 %14, label %15, label %38

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 1
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %18
  %19 = phi i64 [ %30, %18 ], [ %4, %15 ]
  %20 = phi i32 [ %34, %18 ], [ 0, %15 ]
  %21 = phi i32 [ %22, %18 ], [ %1, %15 ]
  %22 = add nsw i32 %21, -1
  %23 = shl i32 %20, 1
  %24 = lshr i64 %19, 3
  %25 = getelementptr inbounds i8, i8* %17, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = trunc i64 %19 to i32
  %28 = and i32 %27, 7
  %29 = xor i32 %28, 7
  %30 = add i64 %19, 1
  store i64 %30, i64* %3, align 8
  %31 = zext i8 %26 to i32
  %32 = lshr i32 %31, %29
  %33 = and i32 %32, 1
  %34 = or i32 %33, %23
  %35 = icmp sgt i32 %22, 0
  br i1 %35, label %18, label %36

36:                                               ; preds = %18
  %37 = zext i32 %34 to i64
  br label %38

38:                                               ; preds = %2, %9, %36
  %39 = phi i64 [ %37, %36 ], [ -1, %9 ], [ -1, %2 ]
  ret i64 %39
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7libgav112RawBitReader14CanReadLiteralEm(%"class.libgav1::RawBitReader"* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 3
  %6 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %5, %7
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = add i64 %1, -1
  %11 = add i64 %10, %4
  %12 = lshr i64 %11, 3
  %13 = icmp ult i64 %12, %7
  br label %14

14:                                               ; preds = %2, %9
  %15 = phi i1 [ %13, %9 ], [ false, %2 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav112RawBitReader24ReadInverseSignedLiteralEiPi(%"class.libgav1::RawBitReader"*, i32, i32* nocapture) local_unnamed_addr #3 align 2 {
  %4 = add nsw i32 %1, 1
  %5 = bitcast %"class.libgav1::RawBitReader"* %0 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %6 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %6, i64 3
  %8 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %7, align 8
  %9 = tail call i64 %8(%"class.libgav1::RawBitReader"* %0, i32 %4) #5
  %10 = trunc i64 %9 to i32
  store i32 %10, i32* %2, align 4
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %19, label %12

12:                                               ; preds = %3
  %13 = shl i32 1, %1
  %14 = and i32 %13, %10
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = shl nsw i32 %13, 1
  %18 = sub nsw i32 %10, %17
  store i32 %18, i32* %2, align 4
  br label %19

19:                                               ; preds = %16, %12, %3
  %20 = phi i1 [ false, %3 ], [ true, %12 ], [ true, %16 ]
  ret i1 %20
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav112RawBitReader16ReadLittleEndianEiPm(%"class.libgav1::RawBitReader"* nocapture, i32, i64*) local_unnamed_addr #1 align 2 {
  %4 = icmp eq i64* %2, null
  br i1 %4, label %72, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 3
  %9 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %8, %10
  br i1 %11, label %12, label %72

12:                                               ; preds = %5
  %13 = sext i32 %1 to i64
  %14 = add nsw i64 %8, %13
  %15 = icmp ugt i64 %14, %10
  br i1 %15, label %72, label %16

16:                                               ; preds = %12
  store i64 0, i64* %2, align 8
  %17 = icmp sgt i32 %1, 0
  br i1 %17, label %18, label %42

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 1
  %20 = zext i32 %1 to i64
  %21 = and i64 %20, 1
  %22 = icmp eq i32 %1, 1
  br i1 %22, label %28, label %23

23:                                               ; preds = %18
  %24 = sub nsw i64 %20, %21
  br label %45

25:                                               ; preds = %45
  %26 = shl i64 %69, 3
  %27 = and i64 %26, 4294967280
  br label %28

28:                                               ; preds = %25, %18
  %29 = phi i64 [ undef, %18 ], [ %68, %25 ]
  %30 = phi i64 [ 0, %18 ], [ %67, %25 ]
  %31 = phi i64 [ 0, %18 ], [ %27, %25 ]
  %32 = phi i64 [ %8, %18 ], [ %68, %25 ]
  %33 = icmp eq i64 %21, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %28
  %35 = load i8*, i8** %19, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 %32
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i64
  %39 = shl i64 %38, %31
  %40 = or i64 %39, %30
  store i64 %40, i64* %2, align 8
  %41 = add nuw nsw i64 %32, 1
  br label %42

42:                                               ; preds = %34, %28, %16
  %43 = phi i64 [ %8, %16 ], [ %29, %28 ], [ %41, %34 ]
  %44 = shl i64 %43, 3
  store i64 %44, i64* %6, align 8
  br label %72

45:                                               ; preds = %45, %23
  %46 = phi i64 [ 0, %23 ], [ %67, %45 ]
  %47 = phi i64 [ 0, %23 ], [ %69, %45 ]
  %48 = phi i64 [ %8, %23 ], [ %68, %45 ]
  %49 = phi i64 [ %24, %23 ], [ %70, %45 ]
  %50 = load i8*, i8** %19, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %48
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i64
  %54 = shl i64 %47, 3
  %55 = and i64 %54, 4294967280
  %56 = shl i64 %53, %55
  %57 = or i64 %56, %46
  store i64 %57, i64* %2, align 8
  %58 = add nuw nsw i64 %48, 1
  %59 = load i8*, i8** %19, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 %58
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i64
  %63 = shl i64 %47, 3
  %64 = and i64 %63, 4294967280
  %65 = or i64 %64, 8
  %66 = shl i64 %62, %65
  %67 = or i64 %66, %57
  store i64 %67, i64* %2, align 8
  %68 = add nuw nsw i64 %48, 2
  %69 = add nuw nsw i64 %47, 2
  %70 = add i64 %49, -2
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %25, label %45

72:                                               ; preds = %5, %42, %12, %3
  %73 = phi i1 [ false, %3 ], [ true, %42 ], [ false, %5 ], [ false, %12 ]
  ret i1 %73
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav112RawBitReader18ReadUnsignedLeb128EPm(%"class.libgav1::RawBitReader"* nocapture, i64*) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i64* %1, null
  br i1 %3, label %28, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 3
  %7 = load i64, i64* %5, align 8
  %8 = lshr i64 %7, 3
  %9 = load i64, i64* %6, align 8
  %10 = icmp ult i64 %8, %9
  br i1 %10, label %14, label %28

11:                                               ; preds = %14
  %12 = lshr i64 %19, 3
  %13 = icmp ult i64 %12, %9
  br i1 %13, label %30, label %28

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 %8
  %18 = load i8, i8* %17, align 1
  %19 = add i64 %7, 8
  store i64 %19, i64* %5, align 8
  %20 = and i8 %18, 127
  %21 = zext i8 %20 to i64
  %22 = icmp sgt i8 %18, -1
  br i1 %22, label %26, label %11

23:                                               ; preds = %102, %90, %78, %66, %54, %42, %30
  %24 = phi i64 [ %37, %30 ], [ %49, %42 ], [ %61, %54 ], [ %73, %66 ], [ %85, %78 ], [ %97, %90 ], [ %109, %102 ]
  %25 = icmp ugt i64 %24, 4294967295
  br i1 %25, label %28, label %26

26:                                               ; preds = %14, %23
  %27 = phi i64 [ %24, %23 ], [ %21, %14 ]
  store i64 %27, i64* %1, align 8
  br label %28

28:                                               ; preds = %102, %4, %11, %39, %51, %63, %75, %87, %99, %23, %26, %2
  %29 = phi i1 [ false, %2 ], [ false, %23 ], [ true, %26 ], [ false, %99 ], [ false, %87 ], [ false, %75 ], [ false, %63 ], [ false, %51 ], [ false, %39 ], [ false, %11 ], [ false, %4 ], [ false, %102 ]
  ret i1 %29

30:                                               ; preds = %11
  %31 = getelementptr inbounds i8, i8* %16, i64 %12
  %32 = load i8, i8* %31, align 1
  %33 = add i64 %7, 16
  store i64 %33, i64* %5, align 8
  %34 = and i8 %32, 127
  %35 = zext i8 %34 to i64
  %36 = shl nuw nsw i64 %35, 7
  %37 = or i64 %36, %21
  %38 = icmp sgt i8 %32, -1
  br i1 %38, label %23, label %39

39:                                               ; preds = %30
  %40 = lshr i64 %33, 3
  %41 = icmp ult i64 %40, %9
  br i1 %41, label %42, label %28

42:                                               ; preds = %39
  %43 = getelementptr inbounds i8, i8* %16, i64 %40
  %44 = load i8, i8* %43, align 1
  %45 = add i64 %7, 24
  store i64 %45, i64* %5, align 8
  %46 = and i8 %44, 127
  %47 = zext i8 %46 to i64
  %48 = shl nuw nsw i64 %47, 14
  %49 = or i64 %48, %37
  %50 = icmp sgt i8 %44, -1
  br i1 %50, label %23, label %51

51:                                               ; preds = %42
  %52 = lshr i64 %45, 3
  %53 = icmp ult i64 %52, %9
  br i1 %53, label %54, label %28

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %16, i64 %52
  %56 = load i8, i8* %55, align 1
  %57 = add i64 %7, 32
  store i64 %57, i64* %5, align 8
  %58 = and i8 %56, 127
  %59 = zext i8 %58 to i64
  %60 = shl nuw nsw i64 %59, 21
  %61 = or i64 %60, %49
  %62 = icmp sgt i8 %56, -1
  br i1 %62, label %23, label %63

63:                                               ; preds = %54
  %64 = lshr i64 %57, 3
  %65 = icmp ult i64 %64, %9
  br i1 %65, label %66, label %28

66:                                               ; preds = %63
  %67 = getelementptr inbounds i8, i8* %16, i64 %64
  %68 = load i8, i8* %67, align 1
  %69 = add i64 %7, 40
  store i64 %69, i64* %5, align 8
  %70 = and i8 %68, 127
  %71 = zext i8 %70 to i64
  %72 = shl nuw nsw i64 %71, 28
  %73 = or i64 %72, %61
  %74 = icmp sgt i8 %68, -1
  br i1 %74, label %23, label %75

75:                                               ; preds = %66
  %76 = lshr i64 %69, 3
  %77 = icmp ult i64 %76, %9
  br i1 %77, label %78, label %28

78:                                               ; preds = %75
  %79 = getelementptr inbounds i8, i8* %16, i64 %76
  %80 = load i8, i8* %79, align 1
  %81 = add i64 %7, 48
  store i64 %81, i64* %5, align 8
  %82 = and i8 %80, 127
  %83 = zext i8 %82 to i64
  %84 = shl nuw nsw i64 %83, 35
  %85 = or i64 %84, %73
  %86 = icmp sgt i8 %80, -1
  br i1 %86, label %23, label %87

87:                                               ; preds = %78
  %88 = lshr i64 %81, 3
  %89 = icmp ult i64 %88, %9
  br i1 %89, label %90, label %28

90:                                               ; preds = %87
  %91 = getelementptr inbounds i8, i8* %16, i64 %88
  %92 = load i8, i8* %91, align 1
  %93 = add i64 %7, 56
  store i64 %93, i64* %5, align 8
  %94 = and i8 %92, 127
  %95 = zext i8 %94 to i64
  %96 = shl nuw nsw i64 %95, 42
  %97 = or i64 %96, %85
  %98 = icmp sgt i8 %92, -1
  br i1 %98, label %23, label %99

99:                                               ; preds = %90
  %100 = lshr i64 %93, 3
  %101 = icmp ult i64 %100, %9
  br i1 %101, label %102, label %28

102:                                              ; preds = %99
  %103 = getelementptr inbounds i8, i8* %16, i64 %100
  %104 = load i8, i8* %103, align 1
  %105 = add i64 %7, 64
  store i64 %105, i64* %5, align 8
  %106 = and i8 %104, 127
  %107 = zext i8 %106 to i64
  %108 = shl nuw nsw i64 %107, 49
  %109 = or i64 %108, %97
  %110 = icmp sgt i8 %104, -1
  br i1 %110, label %23, label %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav112RawBitReader8ReadUvlcEPj(%"class.libgav1::RawBitReader"*, i32*) local_unnamed_addr #3 align 2 {
  %3 = icmp eq i32* %1, null
  br i1 %3, label %31, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.libgav1::RawBitReader"* %0 to i32 (%"class.libgav1::RawBitReader"*)***
  br label %6

6:                                                ; preds = %4, %12
  %7 = phi i32 [ %13, %12 ], [ 0, %4 ]
  %8 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %5, align 8
  %9 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %8, i64 2
  %10 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %9, align 8
  %11 = tail call i32 %10(%"class.libgav1::RawBitReader"* %0) #5
  switch i32 %11, label %12 [
    i32 -1, label %31
    i32 1, label %15
  ]

12:                                               ; preds = %6
  %13 = add nuw nsw i32 %7, 1
  %14 = icmp eq i32 %13, 32
  br i1 %14, label %31, label %6

15:                                               ; preds = %6
  %16 = icmp eq i32 %7, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %15
  %18 = bitcast %"class.libgav1::RawBitReader"* %0 to i64 (%"class.libgav1::RawBitReader"*, i32)***
  %19 = load i64 (%"class.libgav1::RawBitReader"*, i32)**, i64 (%"class.libgav1::RawBitReader"*, i32)*** %18, align 8
  %20 = getelementptr inbounds i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %19, i64 3
  %21 = load i64 (%"class.libgav1::RawBitReader"*, i32)*, i64 (%"class.libgav1::RawBitReader"*, i32)** %20, align 8
  %22 = tail call i64 %21(%"class.libgav1::RawBitReader"* %0, i32 %7) #5
  %23 = trunc i64 %22 to i32
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %31, label %25

25:                                               ; preds = %17
  %26 = shl nsw i32 -1, %7
  %27 = xor i32 %26, -1
  %28 = add i32 %23, %27
  br label %29

29:                                               ; preds = %15, %25
  %30 = phi i32 [ %28, %25 ], [ 0, %15 ]
  store i32 %30, i32* %1, align 4
  br label %31

31:                                               ; preds = %12, %6, %17, %29, %2
  %32 = phi i1 [ false, %2 ], [ true, %29 ], [ false, %17 ], [ false, %6 ], [ false, %12 ]
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav112RawBitReader15AlignToNextByteEv(%"class.libgav1::RawBitReader"*) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.libgav1::RawBitReader"* %0 to i32 (%"class.libgav1::RawBitReader"*)***
  %3 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 2
  br label %4

4:                                                ; preds = %8, %1
  %5 = load i64, i64* %3, align 8
  %6 = and i64 %5, 7
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %4
  %9 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %2, align 8
  %10 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %9, i64 2
  %11 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %10, align 8
  %12 = tail call i32 %11(%"class.libgav1::RawBitReader"* %0) #5
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %4, label %14

14:                                               ; preds = %4, %8
  %15 = phi i1 [ false, %8 ], [ true, %4 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav112RawBitReader25VerifyAndSkipTrailingBitsEm(%"class.libgav1::RawBitReader"*, i64) local_unnamed_addr #3 align 2 {
  %3 = bitcast %"class.libgav1::RawBitReader"* %0 to i32 (%"class.libgav1::RawBitReader"*)***
  %4 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %4, i64 2
  %6 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %5, align 8
  %7 = tail call i32 %6(%"class.libgav1::RawBitReader"* %0) #5
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %22

9:                                                ; preds = %2
  %10 = add i64 %1, -1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %22, label %14

12:                                               ; preds = %14
  %13 = icmp eq i64 %21, %10
  br i1 %13, label %22, label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %21, %12 ], [ 0, %9 ]
  %16 = load i32 (%"class.libgav1::RawBitReader"*)**, i32 (%"class.libgav1::RawBitReader"*)*** %3, align 8
  %17 = getelementptr inbounds i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %16, i64 2
  %18 = load i32 (%"class.libgav1::RawBitReader"*)*, i32 (%"class.libgav1::RawBitReader"*)** %17, align 8
  %19 = tail call i32 %18(%"class.libgav1::RawBitReader"* %0) #5
  %20 = icmp eq i32 %19, 0
  %21 = add nuw i64 %15, 1
  br i1 %20, label %12, label %22

22:                                               ; preds = %14, %12, %9, %2
  %23 = phi i1 [ false, %2 ], [ true, %9 ], [ false, %14 ], [ true, %12 ]
  ret i1 %23
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav112RawBitReader9SkipBytesEm(%"class.libgav1::RawBitReader"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 7
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %19

7:                                                ; preds = %2
  %8 = lshr i64 %4, 3
  %9 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %8, %10
  br i1 %11, label %12, label %19

12:                                               ; preds = %7
  %13 = shl i64 %1, 3
  %14 = add i64 %4, %13
  %15 = add i64 %14, -1
  %16 = lshr i64 %15, 3
  %17 = icmp ult i64 %16, %10
  br i1 %17, label %18, label %19

18:                                               ; preds = %12
  store i64 %14, i64* %3, align 8
  br label %19

19:                                               ; preds = %18, %12, %7, %2
  %20 = phi i1 [ false, %2 ], [ false, %7 ], [ true, %18 ], [ false, %12 ]
  ret i1 %20
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav112RawBitReader8SkipBitsEm(%"class.libgav1::RawBitReader"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 3
  %6 = getelementptr inbounds %"class.libgav1::RawBitReader", %"class.libgav1::RawBitReader"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %5, %7
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = add i64 %4, %1
  %11 = add i64 %10, -1
  %12 = lshr i64 %11, 3
  %13 = icmp ult i64 %12, %7
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  store i64 %10, i64* %3, align 8
  br label %15

15:                                               ; preds = %2, %14, %9
  %16 = phi i1 [ false, %2 ], [ true, %14 ], [ false, %9 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7libgav112RawBitReaderD0Ev(%"class.libgav1::RawBitReader"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.libgav1::RawBitReader"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7libgav19BitReaderD2Ev(%"class.libgav1::BitReader"*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
