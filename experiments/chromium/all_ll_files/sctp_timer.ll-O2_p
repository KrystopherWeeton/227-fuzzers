; ModuleID = '../../third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_timer.c'
source_filename = "../../third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_timer.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sctp_base_info = type { %struct.sctp_epinfo, %struct.sctpstat, %struct.sctp_sysctl, i8, i8, %union.pthread_mutex_t, i64, i32, i32, i32, %union.pthread_mutexattr_t, i32 (i8*, i8*, i64, i8, i8)*, void (i8*, ...)*, i32 }
%struct.sctp_epinfo = type { %struct.sctpasochead*, i64, %struct.sctppcbhead*, i64, %struct.sctppcbhead*, i64, i32, %struct.sctp_vrflist*, i64, %struct.sctp_ifnlist*, i64, %struct.sctppcbhead, %struct.sctpladdr, i64, i64, i64, i64, i64, i64, i64, i64, i64, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.sctpvtaghead], %struct.sctp_timer, %struct.calloutlist }
%struct.sctpasochead = type { %struct.sctp_tcb* }
%struct.sctp_tcb = type { %struct.socket*, %struct.sctp_inpcb*, %struct.anon.46, %struct.anon.47, %struct.anon.48, %struct.anon.49, %struct.sctp_block_entry*, %struct.sctp_association, i32, i32, i32, i32, i16, i16, %union.pthread_mutex_t, %union.pthread_mutex_t }
%struct.socket = type { i32, i16, i16, i16, i16, i32, i8*, i32, %struct.socket*, %struct.anon.26, %struct.anon.27, %struct.anon.28, i16, i16, i16, i16, %union.pthread_cond_t, i16, %struct.sigio*, i64, %struct.anon.33, %struct.sockbuf, %struct.sockbuf, void (%struct.socket*, i8*, i32)*, i8*, %struct.ucred*, %struct.label*, %struct.label*, i32, i8*, %struct.so_accf* }
%struct.anon.26 = type { %struct.socket*, %struct.socket** }
%struct.anon.27 = type { %struct.socket*, %struct.socket** }
%struct.anon.28 = type { %struct.socket*, %struct.socket** }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.29, %union.anon.31, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.29 = type { i64 }
%union.anon.31 = type { i64 }
%struct.sigio = type opaque
%struct.anon.33 = type { %struct.aiocblist*, %struct.aiocblist** }
%struct.aiocblist = type opaque
%struct.sockbuf = type { %union.pthread_cond_t, %union.pthread_mutex_t, i16, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.mbuf = type { %struct.m_hdr, %union.anon.10 }
%struct.m_hdr = type { %struct.mbuf*, %struct.mbuf*, i8*, i32, i32, i16, [6 x i8] }
%union.anon.10 = type { %struct.anon.11 }
%struct.anon.11 = type { %struct.pkthdr, %union.anon.13 }
%struct.pkthdr = type { %struct.ifnet*, i8*, i32, i32, i32, i16, i16, %struct.packet_tags }
%struct.ifnet = type opaque
%struct.packet_tags = type { %struct.m_tag* }
%struct.m_tag = type { %struct.anon.12, i16, i16, i32, void (%struct.m_tag*)* }
%struct.anon.12 = type { %struct.m_tag* }
%union.anon.13 = type { %struct.m_ext, [128 x i8] }
%struct.m_ext = type { i8*, void (i8*, i8*)*, i8*, i32, i32*, i32 }
%struct.ucred = type { i32, i32, i32 }
%struct.label = type opaque
%struct.so_accf = type { %struct.accept_filter*, i8*, i8* }
%struct.accept_filter = type opaque
%struct.sctp_inpcb = type { %union.anon.22, %struct.sctp_readhead, %struct.anon.41, %struct.anon.42, i32, %struct.sctpladdr, %struct.sctp_laddr*, %struct.socket*, i64, i32, i32, %struct.sctp_pcb, %struct.sctpasochead*, i64, %struct.sctpasochead, %struct.sctp_iterator*, i32, i32, i32, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %struct.sctp_nonpad_sndrcvinfo, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, i32, i32, i16, i32, i32, i32, i32, %struct.sctpasochead*, i64, i32, i8*, i32 (%struct.socket*, %union.sctp_sockstore*, i8*, i64, %struct.sctp_rcvinfo*, i32, i8*)*, i32, i32 (%struct.socket*, i32, i8*)* }
%union.anon.22 = type { %struct.inpcb, [24 x i8] }
%struct.inpcb = type { %struct.anon.23, %struct.anon.24, i8*, %struct.inpcbinfo*, %struct.socket*, i32, i32, i8, i8, i8, i8, i32, [2 x i8*], %struct.in_conninfo, %struct.label*, %struct.inpcbpolicy*, %struct.anon.36, %struct.anon.37, %struct.anon.38, %struct.inpcbport*, %struct.mtx }
%struct.anon.23 = type { %struct.inpcb*, %struct.inpcb** }
%struct.anon.24 = type { %struct.inpcb*, %struct.inpcb** }
%struct.inpcbinfo = type { %struct.inpcbhead*, i32, %struct.inpcbhead*, i64, %struct.inpcbporthead*, i64, i16, i16, i16, %struct.uma_zone*, %struct.mtx, [2 x i8*] }
%struct.inpcbhead = type { %struct.inpcb* }
%struct.inpcbporthead = type { %struct.inpcbport* }
%struct.uma_zone = type opaque
%struct.in_conninfo = type { i8, i8, i16, %struct.in_endpoints }
%struct.in_endpoints = type { i16, i16, %union.anon.34, %union.anon.35 }
%union.anon.34 = type { %struct.in_addr_4in6 }
%struct.in_addr_4in6 = type { [3 x i32], %struct.in_addr }
%struct.in_addr = type { i32 }
%union.anon.35 = type { %struct.in_addr_4in6 }
%struct.inpcbpolicy = type opaque
%struct.anon.36 = type { i8, %struct.mbuf*, %struct.ip_moptions* }
%struct.ip_moptions = type opaque
%struct.anon.37 = type { %struct.mbuf*, %struct.ip6_pktopts*, %struct.icmp6_filter*, i32, i16 }
%struct.ip6_pktopts = type opaque
%struct.icmp6_filter = type opaque
%struct.anon.38 = type { %struct.inpcb*, %struct.inpcb** }
%struct.inpcbport = type { %struct.anon.25, %struct.inpcbhead, i16 }
%struct.anon.25 = type { %struct.inpcbport*, %struct.inpcbport** }
%struct.mtx = type { i32 }
%struct.sctp_readhead = type { %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** }
%struct.sctp_queued_to_read = type { i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.sctp_nets*, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, %struct.sctp_tcb*, %struct.anon.39, %struct.anon.40, %struct.sctpchunk_listhead, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.sctp_nets = type { %struct.anon.7, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_net_route, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, %struct.sctp_timer, %struct.timeval, %union.cc_control_data, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, %struct.timeval, i32, i32, i32, i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.anon.7 = type { %struct.sctp_nets*, %struct.sctp_nets** }
%struct.sctp_net_route = type { %struct.sctp_rtentry*, %union.sctp_sockstore, %struct.sctp_ifa* }
%struct.sctp_rtentry = type { %struct.ifnet*, %struct.ifaddr*, %struct.sctp_rt_metrics_lite, i64, %struct.mtx }
%struct.ifaddr = type { %struct.sockaddr, %union.anon.8, %struct.iface*, %struct.ifaddr* }
%struct.sockaddr = type { i16, [14 x i8] }
%union.anon.8 = type { %struct.sockaddr }
%struct.iface = type opaque
%struct.sctp_rt_metrics_lite = type { i32 }
%union.sctp_sockstore = type { %struct.sockaddr_conn, [16 x i8] }
%struct.sockaddr_conn = type { i16, i16, i8* }
%struct.sctp_ifa = type { %struct.anon.0, %struct.anon.1, %struct.sctp_ifn*, i8*, %union.sctp_sockstore, i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.anon.0 = type { %struct.sctp_ifa*, %struct.sctp_ifa** }
%struct.anon.1 = type { %struct.sctp_ifa*, %struct.sctp_ifa** }
%struct.sctp_ifn = type { %struct.sctp_ifalist, %struct.sctp_vrf*, %struct.anon.3, %struct.anon.4, i8*, i32, i32, i32, i32, i32, i32, i32, i32, [16 x i8] }
%struct.sctp_ifalist = type { %struct.sctp_ifa* }
%struct.sctp_vrf = type { %struct.anon.2, %struct.sctp_ifalist*, %struct.sctp_ifnlist, i32, i32, i32, i32, i64, i32 }
%struct.anon.2 = type { %struct.sctp_vrf*, %struct.sctp_vrf** }
%struct.sctp_ifnlist = type { %struct.sctp_ifn* }
%struct.anon.3 = type { %struct.sctp_ifn*, %struct.sctp_ifn** }
%struct.anon.4 = type { %struct.sctp_ifn*, %struct.sctp_ifn** }
%union.cc_control_data = type { %struct.rtcc_cc }
%struct.rtcc_cc = type { %struct.timeval, i64, i64, i64, i64, i64, i64, i32, i32, i16, i16, i8, i8, i8, i8, i8, i8 }
%struct.timeval = type { i64, i64 }
%struct.anon.39 = type { %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** }
%struct.anon.40 = type { %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** }
%struct.sctpchunk_listhead = type { %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** }
%struct.sctp_tmit_chunk = type { %union.anon.9, %struct.sctp_association*, %struct.timeval, %struct.mbuf*, %struct.mbuf*, %struct.sctp_nets*, %struct.anon.14, i32, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8 }
%union.anon.9 = type { %struct.sctp_data_chunkrec }
%struct.sctp_data_chunkrec = type { i32, i32, i16, i32, i32, i32, i32, %struct.timeval, i32, i8, i8, i8, i8, i8 }
%struct.anon.14 = type { %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** }
%struct.anon.41 = type { %struct.sctp_inpcb*, %struct.sctp_inpcb** }
%struct.anon.42 = type { %struct.sctp_inpcb*, %struct.sctp_inpcb** }
%struct.sctp_laddr = type { %struct.anon.6, %struct.sctp_ifa*, i32, %struct.timeval }
%struct.anon.6 = type { %struct.sctp_laddr*, %struct.sctp_laddr** }
%struct.sctp_pcb = type { i32, [2 x [8 x i32]], i32, [7 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.sctp_keyhead, %struct.sctp_auth_chklist*, %struct.sctp_hmaclist*, i16, i32, i16, i16, i16, i16, i16, i16, i32, [20 x i8], [20 x i8], %struct.sctp_timer, i32, i32, i32, i32, i8, i32, i32, i32, i8, i8, i8, i16 }
%struct.sctp_keyhead = type { %struct.sctp_shared_key* }
%struct.sctp_shared_key = type { %struct.anon.43, %struct.sctp_key*, i32, i16, i8 }
%struct.anon.43 = type { %struct.sctp_shared_key*, %struct.sctp_shared_key** }
%struct.sctp_key = type { i32, [0 x i8] }
%struct.sctp_auth_chklist = type { [256 x i8], i8 }
%struct.sctp_hmaclist = type { i16, i16, [0 x i16] }
%struct.sctp_iterator = type { %struct.anon.21, %struct.sctp_timer, %struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_inpcb*, void (%struct.sctp_inpcb*, %struct.sctp_tcb*, i8*, i32)*, i32 (%struct.sctp_inpcb*, i8*, i32)*, i32 (%struct.sctp_inpcb*, i8*, i32)*, void (i8*, i32)*, i8*, i32, i32, i32, i32, i32, i8, i8 }
%struct.anon.21 = type { %struct.sctp_iterator*, %struct.sctp_iterator** }
%struct.sctp_nonpad_sndrcvinfo = type { i16, i16, i16, i32, i32, i32, i32, i32, i32, i16, i16 }
%struct.sctp_rcvinfo = type { i16, i16, i16, i32, i32, i32, i32, i32 }
%struct.anon.46 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.anon.47 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.anon.48 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.anon.49 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.sctp_block_entry = type { i32 }
%struct.sctp_association = type { i32, %struct.sctp_asconf_addrhead, %struct.timeval, %struct.timeval, %struct.timeval, %struct.timeval, %struct.sctp_nonpad_sndrcvinfo, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctpladdr, %struct.sctp_ifa*, %struct.sctp_nets*, %struct.sctpnetlisthead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.scheduling_data, %struct.sctp_iterator*, %struct.sctp_asconf_ackhead, %struct.sctp_tmit_chunk*, %struct.sctp_laddr*, %struct.sctp_stream_in*, %struct.sctp_stream_out*, i8*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_resethead, %struct.sctp_readhead, %struct.sctp_cc_functions, i32, %struct.sctp_ss_functions, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32, %struct.sctp_queued_to_read*, i32, i32, i32, [2 x i32], [2 x i32], [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [20 x i32], i32, i32, i32, i32, %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist*, %struct.sctp_hmaclist*, %struct.sctp_hmaclist*, %struct.sctp_keyhead, %struct.sctp_authinformation, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i32, i32, i8, i8, i8, [4 x i8], i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.sctp_scoping, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], i8, i8, i64, i32, i16, i32, i32, i32, i32, i32, i32, i32, i32, %struct.timeval, %struct.timeval, [4 x i64], [4 x i64] }
%struct.sctp_asconf_addrhead = type { %struct.sctp_asconf_addr*, %struct.sctp_asconf_addr** }
%struct.sctp_asconf_addr = type { %struct.anon, %struct.sctp_asconf_addr_param, %struct.sctp_ifa*, i8, i8 }
%struct.anon = type { %struct.sctp_asconf_addr*, %struct.sctp_asconf_addr** }
%struct.sctp_asconf_addr_param = type { %struct.sctp_asconf_paramhdr, %struct.sctp_ipv6addr_param }
%struct.sctp_asconf_paramhdr = type { %struct.sctp_paramhdr, i32 }
%struct.sctp_paramhdr = type { i16, i16 }
%struct.sctp_ipv6addr_param = type { %struct.sctp_paramhdr, [16 x i8] }
%struct.sctpnetlisthead = type { %struct.sctp_nets*, %struct.sctp_nets** }
%struct.scheduling_data = type { %struct.sctp_stream_out*, %struct.sctp_stream_out*, %union.anon.20 }
%union.anon.20 = type { %struct.sctpwheel_listhead }
%struct.sctpwheel_listhead = type { %struct.sctp_stream_out*, %struct.sctp_stream_out** }
%struct.sctp_asconf_ackhead = type { %struct.sctp_asconf_ack*, %struct.sctp_asconf_ack** }
%struct.sctp_asconf_ack = type { %struct.anon.44, i32, %struct.sctp_nets*, %struct.mbuf*, i16 }
%struct.anon.44 = type { %struct.sctp_asconf_ack*, %struct.sctp_asconf_ack** }
%struct.sctp_stream_in = type { %struct.sctp_readhead, %struct.sctp_readhead, i32, i16, i8, i8 }
%struct.sctp_stream_out = type { %struct.sctp_streamhead, %union.scheduling_parameters, i32, [1 x i32], [1 x i32], i32, i32, i16, i8, i8 }
%struct.sctp_streamhead = type { %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** }
%struct.sctp_stream_queue_pending = type { %struct.mbuf*, %struct.mbuf*, %struct.timeval, %struct.sctp_nets*, %struct.anon.15, %struct.anon.16, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8 }
%struct.anon.15 = type { %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** }
%struct.anon.16 = type { %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** }
%union.scheduling_parameters = type { %struct.ss_prio }
%struct.ss_prio = type { %struct.anon.18, i16 }
%struct.anon.18 = type { %struct.sctp_stream_out*, %struct.sctp_stream_out** }
%struct.sctp_resethead = type { %struct.sctp_stream_reset_list*, %struct.sctp_stream_reset_list** }
%struct.sctp_stream_reset_list = type { %struct.anon.45, i32, i32, i32, [0 x i16] }
%struct.anon.45 = type { %struct.sctp_stream_reset_list*, %struct.sctp_stream_reset_list** }
%struct.sctp_cc_functions = type { void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_pktdrop_chunk*, i32*, i32*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_nets*, %struct.sctp_tmit_chunk*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, i32 (%struct.sctp_tcb*, i32, %struct.sctp_cc_option*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.timeval*)* }
%struct.sctp_pktdrop_chunk = type { %struct.sctp_chunkhdr, i32, i32, i16, i16, [0 x i8] }
%struct.sctp_chunkhdr = type { i8, i8, i16 }
%struct.sctp_cc_option = type { i32, %struct.sctp_assoc_value }
%struct.sctp_assoc_value = type { i32, i32 }
%struct.sctp_ss_functions = type { void (%struct.sctp_tcb*, %struct.sctp_association*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*, %struct.sctp_stream_out*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* }
%struct.sctp_authinformation = type { %struct.sctp_key*, i32, %struct.sctp_key*, %struct.sctp_key*, %struct.sctp_key*, i16, i16, i16 }
%struct.sctp_scoping = type { i8, i8, i8, i8, i8, i8, i8 }
%struct.sctp_vrflist = type { %struct.sctp_vrf* }
%struct.sctppcbhead = type { %struct.sctp_inpcb* }
%struct.sctpladdr = type { %struct.sctp_laddr* }
%struct.sctpvtaghead = type { %struct.sctp_tagblock* }
%struct.sctp_tagblock = type { %struct.anon.50, [15 x %struct.sctp_timewait] }
%struct.anon.50 = type { %struct.sctp_tagblock*, %struct.sctp_tagblock** }
%struct.sctp_timewait = type { i32, i32, i16, i16 }
%struct.sctp_timer = type { %struct.sctp_callout, i32, i8*, i8*, i8*, i8*, i32, i32 }
%struct.sctp_callout = type { %struct.anon.5, i32, i8*, void (i8*)*, i32 }
%struct.anon.5 = type { %struct.sctp_callout*, %struct.sctp_callout** }
%struct.calloutlist = type { %struct.sctp_callout*, %struct.sctp_callout** }
%struct.sctpstat = type { %struct.sctp_timeval, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [11 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [31 x i32] }
%struct.sctp_timeval = type { i32, i32 }
%struct.sctp_sysctl = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%union.pthread_mutexattr_t = type { i32 }
%struct.sctp_stream_reset_request = type { %struct.sctp_paramhdr, i32 }
%struct.sctp_route = type { %struct.sctp_rtentry*, %struct.sockaddr }

@system_base_info = external global %struct.sctp_base_info, align 8
@.str = private unnamed_addr constant [36 x i8] c"Cookie timer expired, but no cookie\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"Strange in state %d not cookie-echoed yet c-e timer expires?\0A\00", align 1
@.str.2 = private unnamed_addr constant [35 x i8] c"Association error counter exceeded\00", align 1
@.str.3 = private unnamed_addr constant [48 x i8] c"Our list is out of order? last_acked:%x chk:%x\0A\00", align 1
@.str.4 = private unnamed_addr constant [35 x i8] c"Recover attempts a restart cnt:%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"Recovery fails %d times??\0A\00", align 1
@.str.6 = private unnamed_addr constant [42 x i8] c"Found chk:%p tsn:%x <= last_acked_seq:%x\0A\00", align 1
@.str.7 = private unnamed_addr constant [35 x i8] c"after recover order is as follows\0A\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"chk:%p TSN:%x\0A\00", align 1
@.str.9 = private unnamed_addr constant [43 x i8] c"Hmm, sent_queue_retran_cnt is non-zero %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [62 x i8] c"Found additional streams NOT managed by scheduler, corrected\0A\00", align 1
@.str.11 = private unnamed_addr constant [62 x i8] c"Hmm, stream queue cnt at %d I counted %d in stream out wheel\0A\00", align 1
@.str.12 = private unnamed_addr constant [41 x i8] c"Still nothing moved %d chunks are stuck\0A\00", align 1
@.str.13 = private unnamed_addr constant [38 x i8] c"Found no chunks on any queue tot:%lu\0A\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @sctp_audit_retranmission_queue(%struct.sctp_association* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %0, i64 0, i32 88
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %0, i64 0, i32 86
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %0, i64 0, i32 20, i32 0
  %5 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %4, align 8
  %6 = icmp eq %struct.sctp_tmit_chunk* %5, null
  br i1 %6, label %22, label %7

7:                                                ; preds = %1, %16
  %8 = phi i32 [ %18, %16 ], [ 0, %1 ]
  %9 = phi i32 [ %17, %16 ], [ 0, %1 ]
  %10 = phi %struct.sctp_tmit_chunk* [ %20, %16 ], [ %5, %1 ]
  %11 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %10, i64 0, i32 7
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 4
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %9, 1
  store i32 %15, i32* %2, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %9, %7 ]
  %18 = add i32 %8, 1
  store i32 %18, i32* %3, align 4
  %19 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %10, i64 0, i32 6, i32 0
  %20 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %19, align 8
  %21 = icmp eq %struct.sctp_tmit_chunk* %20, null
  br i1 %21, label %22, label %7

22:                                               ; preds = %16, %1
  %23 = phi i32 [ 0, %1 ], [ %17, %16 ]
  %24 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %0, i64 0, i32 18, i32 0
  %25 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %24, align 8
  %26 = icmp eq %struct.sctp_tmit_chunk* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %22, %35
  %28 = phi i32 [ %36, %35 ], [ %23, %22 ]
  %29 = phi %struct.sctp_tmit_chunk* [ %38, %35 ], [ %25, %22 ]
  %30 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %29, i64 0, i32 7
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 4
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = add i32 %28, 1
  store i32 %34, i32* %2, align 4
  br label %35

35:                                               ; preds = %27, %33
  %36 = phi i32 [ %28, %27 ], [ %34, %33 ]
  %37 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %29, i64 0, i32 6, i32 0
  %38 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %37, align 8
  %39 = icmp eq %struct.sctp_tmit_chunk* %38, null
  br i1 %39, label %40, label %27

40:                                               ; preds = %35, %22
  %41 = phi i32 [ %23, %22 ], [ %36, %35 ]
  %42 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %0, i64 0, i32 19, i32 0
  %43 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %42, align 8
  %44 = icmp eq %struct.sctp_tmit_chunk* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %40, %53
  %46 = phi i32 [ %54, %53 ], [ %41, %40 ]
  %47 = phi %struct.sctp_tmit_chunk* [ %56, %53 ], [ %43, %40 ]
  %48 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %47, i64 0, i32 7
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 4
  br i1 %50, label %51, label %53

51:                                               ; preds = %45
  %52 = add i32 %46, 1
  store i32 %52, i32* %2, align 4
  br label %53

53:                                               ; preds = %45, %51
  %54 = phi i32 [ %46, %45 ], [ %52, %51 ]
  %55 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %47, i64 0, i32 6, i32 0
  %56 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %55, align 8
  %57 = icmp eq %struct.sctp_tmit_chunk* %56, null
  br i1 %57, label %58, label %45

58:                                               ; preds = %53, %40
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sctp_nets* @sctp_find_alternate_net(%struct.sctp_tcb*, %struct.sctp_nets* readonly, i32) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 94
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 16, i32 0
  %9 = load %struct.sctp_nets*, %struct.sctp_nets** %8, align 8
  br label %253

10:                                               ; preds = %3
  switch i32 %2, label %159 [
    i32 2, label %11
    i32 1, label %107
  ]

11:                                               ; preds = %10
  %12 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 16, i32 0
  %13 = load %struct.sctp_nets*, %struct.sctp_nets** %12, align 8
  %14 = icmp eq %struct.sctp_nets* %13, null
  br i1 %14, label %103, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 157
  %17 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 156
  %18 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %19 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 152
  %20 = bitcast [4 x i8]* %19 to i32*
  %21 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 25
  br label %22

22:                                               ; preds = %15, %93
  %23 = phi %struct.sctp_nets* [ %13, %15 ], [ %99, %93 ]
  %24 = phi i32 [ 0, %15 ], [ %97, %93 ]
  %25 = phi i32 [ -1, %15 ], [ %96, %93 ]
  %26 = phi %struct.sctp_nets* [ null, %15 ], [ %95, %93 ]
  %27 = phi %struct.sctp_nets* [ null, %15 ], [ %94, %93 ]
  %28 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %23, i64 0, i32 37
  %29 = load i16, i16* %28, align 4
  %30 = zext i16 %29 to i32
  %31 = and i32 %30, 513
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %93

33:                                               ; preds = %22
  %34 = and i32 %30, 2048
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %66, label %36

36:                                               ; preds = %33
  %37 = icmp eq %struct.sctp_nets* %23, %1
  %38 = icmp eq i32 %25, -1
  %39 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %23, i64 0, i32 40
  %40 = load i16, i16* %39, align 2
  %41 = zext i16 %40 to i32
  br i1 %37, label %42, label %54

42:                                               ; preds = %36
  %43 = add nuw nsw i32 %41, 1
  %44 = icmp slt i32 %43, %25
  %45 = or i1 %38, %44
  br i1 %45, label %93, label %46

46:                                               ; preds = %42
  %47 = icmp eq i32 %43, %25
  br i1 %47, label %48, label %93

48:                                               ; preds = %46
  %49 = load i32, i32* %21, align 8
  %50 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %27, i64 0, i32 25
  %51 = load i32, i32* %50, align 8
  %52 = icmp ugt i32 %49, %51
  %53 = select i1 %52, %struct.sctp_nets* %1, %struct.sctp_nets* %27
  br label %93

54:                                               ; preds = %36
  %55 = icmp sgt i32 %25, %41
  %56 = or i1 %38, %55
  br i1 %56, label %93, label %57

57:                                               ; preds = %54
  %58 = icmp eq i32 %25, %41
  br i1 %58, label %59, label %93

59:                                               ; preds = %57
  %60 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %23, i64 0, i32 25
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %27, i64 0, i32 25
  %63 = load i32, i32* %62, align 8
  %64 = icmp ugt i32 %61, %63
  %65 = select i1 %64, %struct.sctp_nets* %23, %struct.sctp_nets* %27
  br label %93

66:                                               ; preds = %33
  %67 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %23, i64 0, i32 19
  %68 = load i32, i32* %67, align 8
  %69 = icmp ult i32 %24, %68
  br i1 %69, label %93, label %70

70:                                               ; preds = %66
  %71 = icmp eq i32 %24, %68
  br i1 %71, label %72, label %93

72:                                               ; preds = %70
  %73 = load i8, i8* %16, align 1
  %74 = icmp ugt i8 %73, 3
  br i1 %74, label %75, label %81

75:                                               ; preds = %72
  %76 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %18, align 8
  %77 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %76, i64 0, i32 11
  %78 = tail call i32 @sctp_select_initial_TSN(%struct.sctp_pcb* %77) #7
  store i32 %78, i32* %20, align 1
  %79 = trunc i32 %78 to i8
  %80 = load i8, i8* %16, align 1
  br label %85

81:                                               ; preds = %72
  %82 = zext i8 %73 to i64
  %83 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 152, i64 %82
  %84 = load i8, i8* %83, align 1
  br label %85

85:                                               ; preds = %81, %75
  %86 = phi i8 [ %80, %75 ], [ %73, %81 ]
  %87 = phi i8 [ %79, %75 ], [ %84, %81 ]
  %88 = add i8 %86, 1
  store i8 %88, i8* %16, align 1
  store i8 0, i8* %17, align 2
  %89 = and i8 %87, 1
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %85
  %92 = load i32, i32* %67, align 8
  br label %93

93:                                               ; preds = %59, %48, %91, %85, %66, %54, %42, %22, %70, %57, %46
  %94 = phi %struct.sctp_nets* [ %27, %22 ], [ %27, %46 ], [ %27, %57 ], [ %27, %70 ], [ %1, %42 ], [ %53, %48 ], [ %23, %54 ], [ %65, %59 ], [ %27, %66 ], [ %27, %85 ], [ %27, %91 ]
  %95 = phi %struct.sctp_nets* [ %26, %22 ], [ %26, %46 ], [ %26, %57 ], [ %26, %70 ], [ %26, %42 ], [ %26, %48 ], [ %26, %54 ], [ %26, %59 ], [ %23, %66 ], [ %26, %85 ], [ %23, %91 ]
  %96 = phi i32 [ %25, %22 ], [ %25, %46 ], [ %25, %57 ], [ %25, %70 ], [ %43, %42 ], [ %25, %48 ], [ %41, %54 ], [ %25, %59 ], [ %25, %66 ], [ %25, %85 ], [ %25, %91 ]
  %97 = phi i32 [ %24, %22 ], [ %24, %46 ], [ %24, %57 ], [ %24, %70 ], [ %24, %42 ], [ %24, %48 ], [ %24, %54 ], [ %24, %59 ], [ %68, %66 ], [ %24, %85 ], [ %92, %91 ]
  %98 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %23, i64 0, i32 0, i32 0
  %99 = load %struct.sctp_nets*, %struct.sctp_nets** %98, align 8
  %100 = icmp eq %struct.sctp_nets* %99, null
  br i1 %100, label %101, label %22

101:                                              ; preds = %93
  %102 = icmp eq %struct.sctp_nets* %95, null
  br i1 %102, label %103, label %253

103:                                              ; preds = %11, %101
  %104 = phi %struct.sctp_nets* [ %94, %101 ], [ null, %11 ]
  %105 = icmp eq %struct.sctp_nets* %104, null
  %106 = select i1 %105, %struct.sctp_nets* %1, %struct.sctp_nets* %104
  br label %253

107:                                              ; preds = %10
  %108 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 16, i32 0
  %109 = load %struct.sctp_nets*, %struct.sctp_nets** %108, align 8
  %110 = icmp eq %struct.sctp_nets* %109, null
  br i1 %110, label %159, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 157
  %113 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 156
  %114 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %115 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 152
  %116 = bitcast [4 x i8]* %115 to i32*
  br label %117

117:                                              ; preds = %111, %151
  %118 = phi %struct.sctp_nets* [ %109, %111 ], [ %155, %151 ]
  %119 = phi i32 [ 0, %111 ], [ %153, %151 ]
  %120 = phi %struct.sctp_nets* [ null, %111 ], [ %152, %151 ]
  %121 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %118, i64 0, i32 37
  %122 = load i16, i16* %121, align 4
  %123 = and i16 %122, 513
  %124 = icmp eq i16 %123, 1
  br i1 %124, label %125, label %151

125:                                              ; preds = %117
  %126 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %118, i64 0, i32 19
  %127 = load i32, i32* %126, align 8
  %128 = icmp ult i32 %119, %127
  br i1 %128, label %151, label %129

129:                                              ; preds = %125
  %130 = icmp eq i32 %119, %127
  br i1 %130, label %131, label %151

131:                                              ; preds = %129
  %132 = load i8, i8* %112, align 1
  %133 = icmp ugt i8 %132, 3
  br i1 %133, label %134, label %139

134:                                              ; preds = %131
  %135 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %114, align 8
  %136 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %135, i64 0, i32 11
  %137 = tail call i32 @sctp_select_initial_TSN(%struct.sctp_pcb* %136) #7
  store i32 %137, i32* %116, align 1
  %138 = trunc i32 %137 to i8
  br label %144

139:                                              ; preds = %131
  %140 = zext i8 %132 to i64
  %141 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 152, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = add nuw nsw i8 %132, 1
  br label %144

144:                                              ; preds = %139, %134
  %145 = phi i8 [ 0, %134 ], [ %143, %139 ]
  %146 = phi i8 [ %138, %134 ], [ %142, %139 ]
  store i8 %145, i8* %112, align 1
  store i8 0, i8* %113, align 2
  %147 = and i8 %146, 1
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %151, label %149

149:                                              ; preds = %144
  %150 = load i32, i32* %126, align 8
  br label %151

151:                                              ; preds = %149, %144, %125, %117, %129
  %152 = phi %struct.sctp_nets* [ %120, %117 ], [ %120, %129 ], [ %118, %125 ], [ %118, %149 ], [ %120, %144 ]
  %153 = phi i32 [ %119, %117 ], [ %119, %129 ], [ %127, %125 ], [ %150, %149 ], [ %119, %144 ]
  %154 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %118, i64 0, i32 0, i32 0
  %155 = load %struct.sctp_nets*, %struct.sctp_nets** %154, align 8
  %156 = icmp eq %struct.sctp_nets* %155, null
  br i1 %156, label %157, label %117

157:                                              ; preds = %151
  %158 = icmp eq %struct.sctp_nets* %152, null
  br i1 %158, label %159, label %253

159:                                              ; preds = %107, %10, %157
  %160 = icmp ne %struct.sctp_nets* %1, null
  br i1 %160, label %161, label %168

161:                                              ; preds = %159
  %162 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 37
  %163 = load i16, i16* %162, align 4
  %164 = and i16 %163, 8
  %165 = icmp eq i16 %164, 0
  br i1 %165, label %166, label %168

166:                                              ; preds = %161
  %167 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 0, i32 0
  br label %170

168:                                              ; preds = %161, %159
  %169 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 16, i32 0
  br label %170

170:                                              ; preds = %168, %166
  %171 = phi %struct.sctp_nets** [ %167, %166 ], [ %169, %168 ]
  %172 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 16, i32 0
  br label %173

173:                                              ; preds = %211, %170
  %174 = phi %struct.sctp_nets** [ %171, %170 ], [ %212, %211 ]
  %175 = phi i8 [ 0, %170 ], [ %186, %211 ]
  %176 = load %struct.sctp_nets*, %struct.sctp_nets** %174, align 8
  %177 = icmp eq %struct.sctp_nets* %176, null
  br i1 %177, label %178, label %184

178:                                              ; preds = %173
  %179 = and i8 %175, 1
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %181, label %213

181:                                              ; preds = %178
  %182 = load %struct.sctp_nets*, %struct.sctp_nets** %172, align 8
  %183 = icmp eq %struct.sctp_nets* %182, null
  br i1 %183, label %213, label %184

184:                                              ; preds = %181, %173
  %185 = phi %struct.sctp_nets* [ %182, %181 ], [ %176, %173 ]
  %186 = phi i8 [ 1, %181 ], [ %175, %173 ]
  %187 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %185, i64 0, i32 3, i32 0
  %188 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %187, align 8
  %189 = icmp eq %struct.sctp_rtentry* %188, null
  br i1 %189, label %190, label %197

190:                                              ; preds = %184
  %191 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %185, i64 0, i32 3, i32 2
  %192 = load %struct.sctp_ifa*, %struct.sctp_ifa** %191, align 8
  %193 = icmp eq %struct.sctp_ifa* %192, null
  br i1 %193, label %195, label %194

194:                                              ; preds = %190
  tail call void @sctp_free_ifa(%struct.sctp_ifa* nonnull %192) #7
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %191, align 8
  br label %195

195:                                              ; preds = %190, %194
  %196 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %185, i64 0, i32 47
  store i8 0, i8* %196, align 1
  br label %197

197:                                              ; preds = %195, %184
  %198 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %185, i64 0, i32 37
  %199 = load i16, i16* %198, align 4
  %200 = zext i16 %199 to i32
  %201 = and i32 %200, 1
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %211, label %203

203:                                              ; preds = %197
  %204 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %187, align 8
  %205 = icmp eq %struct.sctp_rtentry* %204, null
  %206 = and i32 %200, 512
  %207 = icmp ne i32 %206, 0
  %208 = or i1 %207, %205
  %209 = icmp eq %struct.sctp_nets* %185, %1
  %210 = or i1 %209, %208
  br i1 %210, label %211, label %253

211:                                              ; preds = %203, %197
  %212 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %185, i64 0, i32 0, i32 0
  br label %173

213:                                              ; preds = %178, %181
  br i1 %160, label %214, label %221

214:                                              ; preds = %213
  %215 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 37
  %216 = load i16, i16* %215, align 4
  %217 = and i16 %216, 8
  %218 = icmp eq i16 %217, 0
  %219 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 0, i32 0
  %220 = select i1 %218, %struct.sctp_nets** %219, %struct.sctp_nets** %172
  br label %221

221:                                              ; preds = %214, %213
  %222 = phi %struct.sctp_nets** [ %220, %214 ], [ %172, %213 ]
  br label %223

223:                                              ; preds = %221, %243
  %224 = phi %struct.sctp_nets** [ %244, %243 ], [ %222, %221 ]
  %225 = phi i8 [ %236, %243 ], [ 0, %221 ]
  %226 = load %struct.sctp_nets*, %struct.sctp_nets** %224, align 8
  %227 = icmp eq %struct.sctp_nets* %226, null
  br i1 %227, label %228, label %234

228:                                              ; preds = %223
  %229 = and i8 %225, 1
  %230 = icmp eq i8 %229, 0
  br i1 %230, label %231, label %245

231:                                              ; preds = %228
  %232 = load %struct.sctp_nets*, %struct.sctp_nets** %172, align 8
  %233 = icmp eq %struct.sctp_nets* %232, null
  br i1 %233, label %245, label %234

234:                                              ; preds = %231, %223
  %235 = phi %struct.sctp_nets* [ %232, %231 ], [ %226, %223 ]
  %236 = phi i8 [ 1, %231 ], [ %225, %223 ]
  %237 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %235, i64 0, i32 37
  %238 = load i16, i16* %237, align 4
  %239 = and i16 %238, 512
  %240 = icmp ne i16 %239, 0
  %241 = icmp eq %struct.sctp_nets* %235, %1
  %242 = or i1 %241, %240
  br i1 %242, label %243, label %253

243:                                              ; preds = %234
  %244 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %235, i64 0, i32 0, i32 0
  br label %223

245:                                              ; preds = %228, %231
  br i1 %160, label %246, label %251

246:                                              ; preds = %245
  %247 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1, i64 0, i32 37
  %248 = load i16, i16* %247, align 4
  %249 = and i16 %248, 8
  %250 = icmp eq i16 %249, 0
  br i1 %250, label %253, label %251

251:                                              ; preds = %245, %246
  %252 = load %struct.sctp_nets*, %struct.sctp_nets** %172, align 8
  br label %253

253:                                              ; preds = %203, %234, %246, %251, %157, %101, %103, %7
  %254 = phi %struct.sctp_nets* [ %9, %7 ], [ %106, %103 ], [ %95, %101 ], [ %152, %157 ], [ %252, %251 ], [ %1, %246 ], [ %235, %234 ], [ %185, %203 ]
  ret %struct.sctp_nets* %254
}

declare i32 @sctp_select_initial_TSN(%struct.sctp_pcb*) local_unnamed_addr #3

declare void @sctp_free_ifa(%struct.sctp_ifa*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_t3rxt_timer(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #2 {
  %4 = alloca %struct.timeval, align 8
  %5 = alloca %struct.timeval, align 8
  %6 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %7 = and i32 %6, 64
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  tail call void @sctp_log_fr(i32 0, i32 0, i32 0, i32 20) #7
  %10 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  br label %11

11:                                               ; preds = %3, %9
  %12 = phi i32 [ %6, %3 ], [ %10, %9 ]
  %13 = and i32 %12, 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 16, i32 0
  %17 = load %struct.sctp_nets*, %struct.sctp_nets** %16, align 8
  %18 = icmp eq %struct.sctp_nets* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %15, %24
  %20 = phi %struct.sctp_nets* [ %26, %24 ], [ %17, %15 ]
  %21 = icmp eq %struct.sctp_nets* %20, %2
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %1, %struct.sctp_nets* nonnull %2, i32 1, i8 zeroext 63) #7
  br label %24

23:                                               ; preds = %19
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %1, %struct.sctp_nets* nonnull %20, i32 0, i8 zeroext 63) #7
  br label %24

24:                                               ; preds = %22, %23
  %25 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %20, i64 0, i32 0, i32 0
  %26 = load %struct.sctp_nets*, %struct.sctp_nets** %25, align 8
  %27 = icmp eq %struct.sctp_nets* %26, null
  br i1 %27, label %28, label %19

28:                                               ; preds = %24, %15, %11
  %29 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7
  %30 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 74
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 92
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 4
  %37 = load i32, i32* %36, align 8
  %38 = icmp ult i32 %35, %37
  br i1 %38, label %75, label %39

39:                                               ; preds = %33, %28
  %40 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 133
  %41 = load i16, i16* %40, align 2
  %42 = tail call fastcc i32 @sctp_threshold_management(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %2, i16 zeroext %41)
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %1074

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 30
  %46 = load %struct.sctp_nets*, %struct.sctp_nets** %45, align 8
  %47 = icmp eq %struct.sctp_nets* %46, %2
  br i1 %47, label %99, label %48

48:                                               ; preds = %44
  %49 = bitcast %struct.timeval* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #7
  %50 = bitcast %struct.timeval* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 16, i1 false)
  %51 = call i32 @gettimeofday(%struct.timeval* nonnull %5, i8* null) #7
  %52 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 15, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %61, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds %struct.timeval, %struct.timeval* %5, i64 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = sub nsw i64 %57, %53
  %59 = trunc i64 %58 to i32
  %60 = mul i32 %59, 1000
  br label %61

61:                                               ; preds = %48, %55
  %62 = phi i32 [ %60, %55 ], [ 0, %48 ]
  %63 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 37
  %64 = load i16, i16* %63, align 4
  %65 = and i16 %64, 2048
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %74

67:                                               ; preds = %61
  %68 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 13
  %69 = load i32, i32* %68, align 8
  %70 = icmp ugt i32 %62, %69
  %71 = icmp eq i32 %69, 0
  %72 = or i1 %70, %71
  br i1 %72, label %73, label %74

73:                                               ; preds = %67
  tail call void @sctp_send_hb(%struct.sctp_tcb* %1, %struct.sctp_nets* %2, i32 0) #7
  br label %74

74:                                               ; preds = %67, %73, %61
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #7
  br label %99

75:                                               ; preds = %33
  %76 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 68), i32 1 seq_cst
  %77 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 133
  %78 = load i16, i16* %77, align 2
  %79 = icmp eq %struct.sctp_tcb* %1, null
  br i1 %79, label %99, label %80

80:                                               ; preds = %75
  %81 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %82 = and i32 %81, 33554432
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %88, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 95
  %86 = load i32, i32* %85, align 8
  %87 = add i32 %86, 1
  tail call void @sctp_misc_ints(i8 zeroext 121, i32 %86, i32 %87, i32 1073741824, i32 148) #7
  br label %88

88:                                               ; preds = %84, %80
  %89 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 95
  %90 = load i32, i32* %89, align 8
  %91 = add i32 %90, 1
  store i32 %91, i32* %89, align 8
  %92 = zext i16 %78 to i32
  %93 = icmp ugt i32 %91, %92
  br i1 %93, label %94, label %99

94:                                               ; preds = %88
  %95 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 63), align 4
  %96 = trunc i32 %95 to i16
  %97 = tail call %struct.mbuf* @sctp_generate_cause(i16 zeroext %96, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0)) #7
  %98 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 42
  store i32 1073741826, i32* %98, align 4
  tail call void @sctp_abort_an_association(%struct.sctp_inpcb* %0, %struct.sctp_tcb* nonnull %1, %struct.mbuf* %97, i32 0) #7
  br label %1074

99:                                               ; preds = %88, %75, %44, %74
  %100 = phi i1 [ true, %44 ], [ true, %74 ], [ false, %75 ], [ false, %88 ]
  %101 = phi i32 [ 0, %44 ], [ 0, %74 ], [ 1, %75 ], [ 1, %88 ]
  %102 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 189
  %103 = load i8, i8* %102, align 1
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %117, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 39
  %107 = load i16, i16* %106, align 8
  %108 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 38
  %109 = load i16, i16* %108, align 2
  %110 = icmp ult i16 %107, %109
  br i1 %110, label %111, label %113

111:                                              ; preds = %105
  %112 = tail call %struct.sctp_nets* @sctp_find_alternate_net(%struct.sctp_tcb* %1, %struct.sctp_nets* %2, i32 2)
  br label %119

113:                                              ; preds = %105
  %114 = tail call %struct.sctp_nets* @sctp_find_alternate_net(%struct.sctp_tcb* %1, %struct.sctp_nets* %2, i32 1)
  %115 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 50
  store i8 1, i8* %115, align 2
  %116 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 51
  store i8 1, i8* %116, align 1
  br label %119

117:                                              ; preds = %99
  %118 = tail call %struct.sctp_nets* @sctp_find_alternate_net(%struct.sctp_tcb* %1, %struct.sctp_nets* %2, i32 0)
  br label %119

119:                                              ; preds = %111, %113, %117
  %120 = phi %struct.sctp_nets* [ %112, %111 ], [ %114, %113 ], [ %118, %117 ]
  %121 = bitcast %struct.timeval* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %121) #7
  %122 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 0
  %123 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 -86, i64 16, i1 false) #7
  %124 = call i32 @gettimeofday(%struct.timeval* nonnull %4, i8* null) #7
  %125 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 10
  %126 = load i32, i32* %125, align 8
  %127 = ashr i32 %126, 3
  %128 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 11
  %129 = load i32, i32* %128, align 4
  %130 = add nsw i32 %127, %129
  %131 = mul nsw i32 %130, 1000
  %132 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %133 = and i32 %132, 64
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %147, label %135

135:                                              ; preds = %119
  %136 = load i32, i32* %30, align 4
  tail call void @sctp_log_fr(i32 %131, i32 %136, i32 %101, i32 26) #7
  %137 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 18
  %138 = load i32, i32* %137, align 4
  tail call void @sctp_log_fr(i32 %138, i32 0, i32 0, i32 58) #7
  %139 = load i32, i32* %137, align 4
  %140 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 19
  %141 = load i32, i32* %140, align 8
  %142 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 92
  %143 = load i32, i32* %142, align 4
  tail call void @sctp_log_fr(i32 %139, i32 %141, i32 %143, i32 58) #7
  %144 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %145 = and i32 %144, 64
  %146 = icmp eq i32 %145, 0
  br label %147

147:                                              ; preds = %135, %119
  %148 = phi i1 [ true, %119 ], [ %146, %135 ]
  %149 = sdiv i32 %130, 1000
  %150 = sext i32 %149 to i64
  %151 = srem i32 %131, 1000000
  %152 = sext i32 %151 to i64
  %153 = load i64, i64* %122, align 8
  %154 = sub nsw i64 %153, %150
  %155 = load i64, i64* %123, align 8
  %156 = sub nsw i64 %155, %152
  %157 = icmp slt i64 %156, 0
  %158 = add nsw i64 %156, 1000000
  %159 = select i1 %157, i64 %158, i64 %156
  %160 = ashr i64 %156, 63
  %161 = add nsw i64 %160, %154
  %162 = or i64 %161, %159
  %163 = icmp slt i64 %162, 0
  %164 = select i1 %163, i64 0, i64 %159
  %165 = select i1 %163, i64 0, i64 %161
  br i1 %148, label %171, label %166

166:                                              ; preds = %147
  %167 = trunc i64 %153 to i32
  %168 = trunc i64 %155 to i32
  tail call void @sctp_log_fr(i32 %131, i32 %167, i32 %168, i32 26) #7
  %169 = trunc i64 %165 to i32
  %170 = trunc i64 %164 to i32
  tail call void @sctp_log_fr(i32 0, i32 %169, i32 %170, i32 26) #7
  br label %171

171:                                              ; preds = %166, %147
  %172 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 18
  %173 = load i32, i32* %172, align 4
  %174 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 92
  %175 = load i32, i32* %174, align 4
  %176 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 44
  store i8 0, i8* %176, align 8
  %177 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 20, i32 0
  %178 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %177, align 8
  %179 = icmp eq %struct.sctp_tmit_chunk* %178, null
  br i1 %179, label %742, label %180

180:                                              ; preds = %171
  %181 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 55
  %182 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 28
  %183 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 160
  %184 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 20, i32 1
  %185 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 82
  %186 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 121
  %187 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 78
  %188 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 0
  %189 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 1
  %190 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 162
  %191 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 87
  %192 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 86
  %193 = icmp eq %struct.sctp_tcb* %1, null
  %194 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 143
  %195 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 17, i32 1
  %196 = bitcast %struct.sctp_tmit_chunk*** %195 to i64*
  %197 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 88
  %198 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 34
  %199 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 197
  %200 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 93
  %201 = icmp eq %struct.sctp_nets* %120, %2
  %202 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %120, i64 0, i32 17
  %203 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 21, i32 0
  %204 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 56
  br label %205

205:                                              ; preds = %180, %734
  %206 = phi i32 [ 0, %180 ], [ %478, %734 ]
  %207 = phi i32 [ 0, %180 ], [ %740, %734 ]
  %208 = phi i32 [ 0, %180 ], [ %739, %734 ]
  %209 = phi i32 [ 0, %180 ], [ %738, %734 ]
  %210 = phi i32 [ 0, %180 ], [ %737, %734 ]
  %211 = phi i32 [ 0, %180 ], [ %736, %734 ]
  %212 = phi i32 [ 0, %180 ], [ %735, %734 ]
  %213 = phi %struct.sctp_tmit_chunk* [ %178, %180 ], [ %221, %734 ]
  br label %217

214:                                              ; preds = %467
  %215 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %177, align 8
  %216 = icmp eq %struct.sctp_tmit_chunk* %215, null
  br i1 %216, label %742, label %217

217:                                              ; preds = %205, %214
  %218 = phi i32 [ %247, %214 ], [ %206, %205 ]
  %219 = phi %struct.sctp_tmit_chunk* [ %215, %214 ], [ %213, %205 ]
  %220 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 6, i32 0
  %221 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %220, align 8
  %222 = load i32, i32* %181, align 4
  %223 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 0, i32 0, i32 0
  %224 = load i32, i32* %223, align 8
  %225 = icmp ugt i32 %224, %222
  %226 = sub i32 %224, %222
  %227 = icmp ugt i32 %226, -2147483648
  %228 = and i1 %225, %227
  br i1 %228, label %236, label %229

229:                                              ; preds = %217
  %230 = icmp ugt i32 %222, %224
  %231 = sub i32 %222, %224
  %232 = icmp sgt i32 %231, -1
  %233 = and i1 %230, %232
  %234 = icmp eq i32 %222, %224
  %235 = or i1 %234, %233
  br i1 %235, label %236, label %474

236:                                              ; preds = %229, %217
  %237 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %238 = icmp eq void (i8*, ...)* %237, null
  br i1 %238, label %239, label %241

239:                                              ; preds = %236
  %240 = add nsw i32 %218, 1
  br label %246

241:                                              ; preds = %236
  tail call void (i8*, ...) %237(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i64 0, i64 0), i32 %222, i32 %224) #7
  %242 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %243 = add nsw i32 %218, 1
  %244 = icmp eq void (i8*, ...)* %242, null
  br i1 %244, label %246, label %245

245:                                              ; preds = %241
  tail call void (i8*, ...) %242(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i64 0, i64 0), i32 %243) #7
  br label %246

246:                                              ; preds = %245, %241, %239
  %247 = phi i32 [ %240, %239 ], [ %243, %241 ], [ %243, %245 ]
  %248 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %177, align 8
  %249 = icmp eq %struct.sctp_tmit_chunk* %248, null
  br i1 %249, label %449, label %250

250:                                              ; preds = %246, %447
  %251 = phi %struct.sctp_tmit_chunk* [ %254, %447 ], [ %248, %246 ]
  %252 = bitcast %struct.sctp_tmit_chunk* %251 to i8*
  %253 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %251, i64 0, i32 6, i32 0
  %254 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %253, align 8
  %255 = load i32, i32* %181, align 4
  %256 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %251, i64 0, i32 0, i32 0, i32 0
  %257 = load i32, i32* %256, align 8
  %258 = icmp ugt i32 %257, %255
  %259 = sub i32 %257, %255
  %260 = icmp ugt i32 %259, -2147483648
  %261 = and i1 %258, %260
  br i1 %261, label %269, label %262

262:                                              ; preds = %250
  %263 = icmp ugt i32 %255, %257
  %264 = sub i32 %255, %257
  %265 = icmp sgt i32 %264, -1
  %266 = and i1 %263, %265
  %267 = icmp eq i32 %255, %257
  %268 = or i1 %267, %266
  br i1 %268, label %269, label %447

269:                                              ; preds = %262, %250
  %270 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %271 = icmp eq void (i8*, ...)* %270, null
  br i1 %271, label %273, label %272

272:                                              ; preds = %269
  tail call void (i8*, ...) %270(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0), %struct.sctp_tmit_chunk* nonnull %251, i32 %257, i32 %255) #7
  br label %273

273:                                              ; preds = %272, %269
  %274 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %251, i64 0, i32 7
  %275 = load i32, i32* %274, align 8
  %276 = icmp eq i32 %275, 40010
  br i1 %276, label %287, label %277

277:                                              ; preds = %273
  %278 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %182, align 8
  %279 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %251, i64 0, i32 0, i32 0, i32 2
  %280 = load i16, i16* %279, align 8
  %281 = zext i16 %280 to i64
  %282 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %278, i64 %281, i32 2
  %283 = load i32, i32* %282, align 8
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %287, label %285

285:                                              ; preds = %277
  %286 = add i32 %283, -1
  store i32 %286, i32* %282, align 8
  br label %287

287:                                              ; preds = %285, %277, %273
  %288 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %182, align 8
  %289 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %251, i64 0, i32 0, i32 0, i32 2
  %290 = load i16, i16* %289, align 8
  %291 = zext i16 %290 to i64
  %292 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %288, i64 %291, i32 2
  %293 = load i32, i32* %292, align 8
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %304

295:                                              ; preds = %287
  %296 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %288, i64 %291, i32 9
  %297 = load i8, i8* %296, align 1
  %298 = icmp eq i8 %297, 3
  br i1 %298, label %299, label %304

299:                                              ; preds = %295
  %300 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %288, i64 %291, i32 0, i32 0
  %301 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %300, align 8
  %302 = icmp eq %struct.sctp_stream_queue_pending* %301, null
  br i1 %302, label %303, label %304

303:                                              ; preds = %299
  store i8 1, i8* %183, align 2
  br label %304

304:                                              ; preds = %303, %299, %295, %287
  %305 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %253, align 8
  %306 = icmp eq %struct.sctp_tmit_chunk* %305, null
  %307 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %251, i64 0, i32 6, i32 1
  %308 = bitcast %struct.sctp_tmit_chunk*** %307 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %305, i64 0, i32 6, i32 1
  %311 = select i1 %306, %struct.sctp_tmit_chunk*** %184, %struct.sctp_tmit_chunk*** %310
  %312 = bitcast %struct.sctp_tmit_chunk*** %311 to i64*
  store i64 %309, i64* %312, align 8
  %313 = bitcast %struct.sctp_tmit_chunk** %253 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %struct.sctp_tmit_chunk*** %307 to i64**
  %316 = load i64*, i64** %315, align 8
  store i64 %314, i64* %316, align 8
  %317 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %251, i64 0, i32 9
  %318 = load i16, i16* %317, align 2
  %319 = and i16 %318, 15
  switch i16 %319, label %320 [
    i16 0, label %325
    i16 15, label %325
  ]

320:                                              ; preds = %304
  %321 = load i32, i32* %185, align 4
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %325, label %323

323:                                              ; preds = %320
  %324 = add i32 %321, -1
  store i32 %324, i32* %185, align 4
  br label %325

325:                                              ; preds = %323, %320, %304, %304
  %326 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %251, i64 0, i32 3
  %327 = load %struct.mbuf*, %struct.mbuf** %326, align 8
  %328 = icmp eq %struct.mbuf* %327, null
  br i1 %328, label %368, label %329

329:                                              ; preds = %325
  %330 = atomicrmw sub i32* %186, i32 1 seq_cst
  %331 = load i32, i32* %187, align 4
  %332 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %251, i64 0, i32 11
  %333 = load i16, i16* %332, align 2
  %334 = zext i16 %333 to i32
  %335 = icmp ult i32 %331, %334
  br i1 %335, label %338, label %336

336:                                              ; preds = %329
  %337 = atomicrmw sub i32* %187, i32 %334 seq_cst
  br label %339

338:                                              ; preds = %329
  store i32 0, i32* %187, align 4
  br label %339

339:                                              ; preds = %338, %336
  %340 = load %struct.socket*, %struct.socket** %188, align 8
  %341 = icmp eq %struct.socket* %340, null
  br i1 %341, label %357, label %342

342:                                              ; preds = %339
  %343 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %189, align 8
  %344 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %343, i64 0, i32 9
  %345 = load i32, i32* %344, align 8
  %346 = and i32 %345, 4194306
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %357, label %348

348:                                              ; preds = %342
  %349 = getelementptr inbounds %struct.socket, %struct.socket* %340, i64 0, i32 22, i32 8
  %350 = load i32, i32* %349, align 4
  %351 = load i16, i16* %332, align 2
  %352 = zext i16 %351 to i32
  %353 = icmp ult i32 %350, %352
  br i1 %353, label %356, label %354

354:                                              ; preds = %348
  %355 = atomicrmw sub i32* %349, i32 %352 seq_cst
  br label %357

356:                                              ; preds = %348
  store i32 0, i32* %349, align 4
  br label %357

357:                                              ; preds = %356, %354, %342, %339
  %358 = load %struct.mbuf*, %struct.mbuf** %326, align 8
  tail call void @m_freem(%struct.mbuf* %358) #7
  store %struct.mbuf* null, %struct.mbuf** %326, align 8
  %359 = load i8, i8* %190, align 4
  %360 = icmp eq i8 %359, 0
  br i1 %360, label %368, label %361

361:                                              ; preds = %357
  %362 = load i16, i16* %317, align 2
  %363 = and i16 %362, 15
  %364 = icmp eq i16 %363, 2
  br i1 %364, label %365, label %368

365:                                              ; preds = %361
  %366 = load i32, i32* %191, align 8
  %367 = add i32 %366, -1
  store i32 %367, i32* %191, align 8
  br label %368

368:                                              ; preds = %365, %361, %357, %325
  %369 = load i32, i32* %192, align 4
  %370 = add i32 %369, -1
  store i32 %370, i32* %192, align 4
  %371 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %251, i64 0, i32 14
  %372 = load i8, i8* %371, align 8
  %373 = icmp eq i8 %372, 0
  br i1 %373, label %377, label %374

374:                                              ; preds = %368
  %375 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %251, i64 0, i32 13
  %376 = load i16, i16* %375, align 2
  tail call void @sctp_auth_key_release(%struct.sctp_tcb* %1, i16 zeroext %376, i32 0) #7
  store i8 0, i8* %371, align 8
  br label %377

377:                                              ; preds = %374, %368
  br i1 %193, label %445, label %378

378:                                              ; preds = %377
  %379 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %251, i64 0, i32 5
  %380 = load %struct.sctp_nets*, %struct.sctp_nets** %379, align 8
  %381 = icmp eq %struct.sctp_nets* %380, null
  br i1 %381, label %428, label %382

382:                                              ; preds = %378
  %383 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %380, i64 0, i32 17
  %384 = atomicrmw add i32* %383, i32 -1 seq_cst
  %385 = icmp eq i32 %384, 1
  br i1 %385, label %386, label %427

386:                                              ; preds = %382
  %387 = load %struct.sctp_nets*, %struct.sctp_nets** %379, align 8
  %388 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %387, i64 0, i32 3, i32 0
  %389 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %388, align 8
  %390 = icmp eq %struct.sctp_rtentry* %389, null
  br i1 %390, label %406, label %391

391:                                              ; preds = %386
  %392 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %389, i64 0, i32 3
  %393 = load i64, i64* %392, align 8
  %394 = icmp sgt i64 %393, 1
  %395 = add nsw i64 %393, -1
  store i64 %395, i64* %392, align 8
  %396 = icmp sgt i64 %395, 0
  %397 = or i1 %394, %396
  br i1 %397, label %400, label %398

398:                                              ; preds = %391
  %399 = bitcast %struct.sctp_rtentry* %389 to i8*
  tail call void @free(i8* %399) #7
  br label %400

400:                                              ; preds = %398, %391
  %401 = load %struct.sctp_nets*, %struct.sctp_nets** %379, align 8
  %402 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %401, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %402, align 8
  %403 = load %struct.sctp_nets*, %struct.sctp_nets** %379, align 8
  %404 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %403, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %404, align 8
  %405 = load %struct.sctp_nets*, %struct.sctp_nets** %379, align 8
  br label %406

406:                                              ; preds = %400, %386
  %407 = phi %struct.sctp_nets* [ %387, %386 ], [ %405, %400 ]
  %408 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %407, i64 0, i32 47
  %409 = load i8, i8* %408, align 1
  %410 = icmp eq i8 %409, 0
  br i1 %410, label %417, label %411

411:                                              ; preds = %406
  %412 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %407, i64 0, i32 3, i32 2
  %413 = load %struct.sctp_ifa*, %struct.sctp_ifa** %412, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %413) #7
  %414 = load %struct.sctp_nets*, %struct.sctp_nets** %379, align 8
  %415 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %414, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %415, align 8
  %416 = load %struct.sctp_nets*, %struct.sctp_nets** %379, align 8
  br label %417

417:                                              ; preds = %411, %406
  %418 = phi %struct.sctp_nets* [ %407, %406 ], [ %416, %411 ]
  %419 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %418, i64 0, i32 47
  store i8 0, i8* %419, align 1
  %420 = load %struct.sctp_nets*, %struct.sctp_nets** %379, align 8
  %421 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %420, i64 0, i32 37
  %422 = load i16, i16* %421, align 4
  %423 = and i16 %422, -2
  store i16 %423, i16* %421, align 4
  %424 = bitcast %struct.sctp_nets** %379 to i8**
  %425 = load i8*, i8** %424, align 8
  tail call void @free(i8* %425) #7
  %426 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %427

427:                                              ; preds = %417, %382
  store %struct.sctp_nets* null, %struct.sctp_nets** %379, align 8
  br label %428

428:                                              ; preds = %427, %378
  %429 = load i16, i16* %194, align 2
  %430 = zext i16 %429 to i32
  %431 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 23), align 4
  %432 = icmp ult i32 %431, %430
  br i1 %432, label %437, label %433

433:                                              ; preds = %428
  %434 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), align 8
  %435 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 22), align 8
  %436 = icmp ugt i32 %434, %435
  br i1 %436, label %437, label %439

437:                                              ; preds = %433, %428
  tail call void @free(i8* %252) #7
  %438 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %447

439:                                              ; preds = %433
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %253, align 8
  %440 = load i64, i64* %196, align 8
  store i64 %440, i64* %308, align 8
  %441 = load %struct.sctp_tmit_chunk**, %struct.sctp_tmit_chunk*** %195, align 8
  store %struct.sctp_tmit_chunk* %251, %struct.sctp_tmit_chunk** %441, align 8
  store %struct.sctp_tmit_chunk** %253, %struct.sctp_tmit_chunk*** %195, align 8
  %442 = load i16, i16* %194, align 2
  %443 = add i16 %442, 1
  store i16 %443, i16* %194, align 2
  %444 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 37), i32 1 seq_cst
  br label %447

445:                                              ; preds = %377
  tail call void @free(i8* %252) #7
  %446 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 31), i32 1 seq_cst
  br label %447

447:                                              ; preds = %445, %439, %437, %262
  %448 = icmp eq %struct.sctp_tmit_chunk* %254, null
  br i1 %448, label %449, label %250

449:                                              ; preds = %447, %246
  %450 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %451 = icmp eq void (i8*, ...)* %450, null
  br i1 %451, label %453, label %452

452:                                              ; preds = %449
  tail call void (i8*, ...) %450(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i64 0, i64 0)) #7
  br label %453

453:                                              ; preds = %452, %449
  %454 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %177, align 8
  %455 = icmp eq %struct.sctp_tmit_chunk* %454, null
  br i1 %455, label %467, label %456

456:                                              ; preds = %453, %463
  %457 = phi %struct.sctp_tmit_chunk* [ %465, %463 ], [ %454, %453 ]
  %458 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %459 = icmp eq void (i8*, ...)* %458, null
  br i1 %459, label %463, label %460

460:                                              ; preds = %456
  %461 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %457, i64 0, i32 0, i32 0, i32 0
  %462 = load i32, i32* %461, align 8
  tail call void (i8*, ...) %458(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), %struct.sctp_tmit_chunk* nonnull %457, i32 %462) #7
  br label %463

463:                                              ; preds = %460, %456
  %464 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %457, i64 0, i32 6, i32 0
  %465 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %464, align 8
  %466 = icmp eq %struct.sctp_tmit_chunk* %465, null
  br i1 %466, label %467, label %456

467:                                              ; preds = %463, %453
  %468 = icmp slt i32 %247, 10
  br i1 %468, label %214, label %469

469:                                              ; preds = %467
  %470 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 0, i32 0, i32 0
  %471 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %472 = icmp eq void (i8*, ...)* %471, null
  br i1 %472, label %476, label %473

473:                                              ; preds = %469
  tail call void (i8*, ...) %471(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i32 %247) #7
  br label %476

474:                                              ; preds = %229
  %475 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 0, i32 0, i32 0
  br label %476

476:                                              ; preds = %474, %473, %469
  %477 = phi i32* [ %470, %473 ], [ %470, %469 ], [ %475, %474 ]
  %478 = phi i32 [ %247, %473 ], [ %247, %469 ], [ %218, %474 ]
  %479 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 5
  %480 = load %struct.sctp_nets*, %struct.sctp_nets** %479, align 8
  %481 = icmp eq %struct.sctp_nets* %480, %2
  br i1 %481, label %482, label %724

482:                                              ; preds = %476
  %483 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 7
  %484 = load i32, i32* %483, align 8
  %485 = icmp slt i32 %484, 10010
  br i1 %485, label %486, label %724

486:                                              ; preds = %482
  %487 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %488 = and i32 %487, 64
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %498, label %490

490:                                              ; preds = %486
  %491 = load i32, i32* %477, align 8
  %492 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 2, i32 0
  %493 = load i64, i64* %492, align 8
  %494 = trunc i64 %493 to i32
  %495 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 2, i32 1
  %496 = load i64, i64* %495, align 8
  %497 = trunc i64 %496 to i32
  tail call void @sctp_log_fr(i32 %491, i32 %494, i32 %497, i32 26) #7
  br label %498

498:                                              ; preds = %490, %486
  %499 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 2, i32 0
  %500 = load i64, i64* %499, align 8
  %501 = icmp sgt i64 %500, %165
  %502 = and i1 %100, %501
  br i1 %502, label %503, label %512

503:                                              ; preds = %498
  %504 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %505 = and i32 %504, 64
  %506 = icmp eq i32 %505, 0
  br i1 %506, label %734, label %507

507:                                              ; preds = %503
  %508 = trunc i64 %500 to i32
  %509 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 2, i32 1
  %510 = load i64, i64* %509, align 8
  %511 = trunc i64 %510 to i32
  tail call void @sctp_log_fr(i32 0, i32 %508, i32 %511, i32 28) #7
  br label %734

512:                                              ; preds = %498
  %513 = icmp eq i64 %500, %165
  %514 = and i1 %100, %513
  br i1 %514, label %515, label %519

515:                                              ; preds = %512
  %516 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 2, i32 1
  %517 = load i64, i64* %516, align 8
  %518 = icmp slt i64 %517, %164
  br i1 %518, label %519, label %734

519:                                              ; preds = %515, %512
  %520 = load i8, i8* %190, align 4
  %521 = icmp eq i8 %520, 0
  br i1 %521, label %559, label %522

522:                                              ; preds = %519
  %523 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 9
  %524 = load i16, i16* %523, align 2
  %525 = and i16 %524, 15
  switch i16 %525, label %559 [
    i16 1, label %526
    i16 3, label %545
  ]

526:                                              ; preds = %522
  %527 = load i64, i64* %122, align 8
  %528 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 0, i32 0, i32 7, i32 0
  %529 = load i64, i64* %528, align 8
  %530 = icmp eq i64 %527, %529
  br i1 %530, label %531, label %536

531:                                              ; preds = %526
  %532 = load i64, i64* %123, align 8
  %533 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 0, i32 0, i32 7, i32 1
  %534 = load i64, i64* %533, align 8
  %535 = icmp sgt i64 %532, %534
  br i1 %535, label %538, label %559

536:                                              ; preds = %526
  %537 = icmp sgt i64 %527, %529
  br i1 %537, label %538, label %559

538:                                              ; preds = %536, %531
  %539 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 3
  %540 = load %struct.mbuf*, %struct.mbuf** %539, align 8
  %541 = icmp eq %struct.mbuf* %540, null
  br i1 %541, label %734, label %542

542:                                              ; preds = %538
  %543 = tail call i32 @sctp_release_pr_sctp_chunk(%struct.sctp_tcb* %1, %struct.sctp_tmit_chunk* %219, i8 zeroext 1, i32 0) #7
  %544 = add nsw i32 %212, 1
  br label %734

545:                                              ; preds = %522
  %546 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 8
  %547 = load i16, i16* %546, align 4
  %548 = zext i16 %547 to i64
  %549 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 0, i32 0, i32 7, i32 0
  %550 = load i64, i64* %549, align 8
  %551 = icmp slt i64 %550, %548
  br i1 %551, label %552, label %559

552:                                              ; preds = %545
  %553 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 3
  %554 = load %struct.mbuf*, %struct.mbuf** %553, align 8
  %555 = icmp eq %struct.mbuf* %554, null
  br i1 %555, label %734, label %556

556:                                              ; preds = %552
  %557 = tail call i32 @sctp_release_pr_sctp_chunk(%struct.sctp_tcb* %1, %struct.sctp_tmit_chunk* %219, i8 zeroext 1, i32 0) #7
  %558 = add nsw i32 %212, 1
  br label %734

559:                                              ; preds = %545, %536, %531, %522, %519
  %560 = load i32, i32* %483, align 8
  %561 = icmp slt i32 %560, 4
  br i1 %561, label %562, label %637

562:                                              ; preds = %559
  %563 = load i32, i32* %197, align 4
  %564 = add i32 %563, 1
  store i32 %564, i32* %197, align 4
  %565 = add nsw i32 %211, 1
  %566 = icmp eq i32 %210, 0
  %567 = load i32, i32* %477, align 8
  %568 = select i1 %566, i32 1, i32 %210
  %569 = select i1 %566, i32 %567, i32 %207
  %570 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %571 = and i32 %570, 64
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %577, label %573

573:                                              ; preds = %562
  %574 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 8
  %575 = load i16, i16* %574, align 4
  %576 = zext i16 %575 to i32
  tail call void @sctp_log_fr(i32 %567, i32 %576, i32 0, i32 27) #7
  br label %577

577:                                              ; preds = %573, %562
  %578 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 0, i32 0, i32 12
  %579 = load i8, i8* %578, align 1
  %580 = icmp eq i8 %579, 0
  br i1 %580, label %589, label %581

581:                                              ; preds = %577
  %582 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 11
  %583 = load i16, i16* %582, align 2
  %584 = zext i16 %583 to i32
  %585 = load %struct.sctp_nets*, %struct.sctp_nets** %479, align 8
  %586 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %585, i64 0, i32 19
  %587 = load i32, i32* %586, align 8
  %588 = sub i32 %587, %584
  store i32 %588, i32* %586, align 8
  store i8 0, i8* %578, align 1
  br label %589

589:                                              ; preds = %581, %577
  %590 = load i32, i32* %198, align 8
  %591 = add i32 %590, 1
  store i32 %591, i32* %198, align 8
  %592 = load i32, i32* %199, align 8
  %593 = add i32 %592, 1
  store i32 %593, i32* %199, align 8
  %594 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %595 = and i32 %594, 32
  %596 = icmp eq i32 %595, 0
  br i1 %596, label %607, label %597

597:                                              ; preds = %589
  %598 = load %struct.sctp_nets*, %struct.sctp_nets** %479, align 8
  %599 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %598, i64 0, i32 18
  %600 = load i32, i32* %599, align 4
  %601 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 11
  %602 = load i16, i16* %601, align 2
  %603 = zext i16 %602 to i32
  %604 = ptrtoint %struct.sctp_nets* %598 to i64
  %605 = trunc i64 %604 to i32
  %606 = load i32, i32* %477, align 8
  tail call void @sctp_misc_ints(i8 zeroext 112, i32 %600, i32 %603, i32 %605, i32 %606) #7
  br label %607

607:                                              ; preds = %597, %589
  %608 = load %struct.sctp_nets*, %struct.sctp_nets** %479, align 8
  %609 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %608, i64 0, i32 18
  %610 = load i32, i32* %609, align 4
  %611 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 11
  %612 = load i16, i16* %611, align 2
  %613 = zext i16 %612 to i32
  %614 = tail call i32 @llvm.usub.sat.i32(i32 %610, i32 %613) #7
  store i32 %614, i32* %609, align 4
  %615 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 20
  store i8 0, i8* %615, align 2
  %616 = load i32, i32* %174, align 4
  %617 = load i16, i16* %611, align 2
  %618 = zext i16 %617 to i32
  %619 = icmp ult i32 %616, %618
  br i1 %619, label %626, label %620

620:                                              ; preds = %607
  %621 = sub i32 %616, %618
  store i32 %621, i32* %174, align 4
  %622 = load i32, i32* %200, align 8
  %623 = icmp eq i32 %622, 0
  br i1 %623, label %629, label %624

624:                                              ; preds = %620
  %625 = add i32 %622, -1
  br label %627

626:                                              ; preds = %607
  store i32 0, i32* %174, align 4
  br label %627

627:                                              ; preds = %624, %626
  %628 = phi i32 [ 0, %626 ], [ %625, %624 ]
  store i32 %628, i32* %200, align 8
  br label %629

629:                                              ; preds = %627, %620
  %630 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 10
  %631 = load i16, i16* %630, align 8
  %632 = zext i16 %631 to i32
  %633 = load i32, i32* %30, align 4
  %634 = add i32 %633, %632
  store i32 %634, i32* %30, align 4
  %635 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 13), align 4
  %636 = add i32 %635, %634
  store i32 %636, i32* %30, align 4
  br label %637

637:                                              ; preds = %629, %559
  %638 = phi i32 [ %565, %629 ], [ %211, %559 ]
  %639 = phi i32 [ %568, %629 ], [ %210, %559 ]
  %640 = phi i32 [ %567, %629 ], [ %208, %559 ]
  %641 = phi i32 [ %569, %629 ], [ %207, %559 ]
  store i32 4, i32* %483, align 8
  %642 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 9
  %643 = load i16, i16* %642, align 2
  %644 = or i16 %643, 256
  store i16 %644, i16* %642, align 2
  %645 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 93), i32 1 seq_cst
  %646 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 0, i32 0, i32 9
  store i8 0, i8* %646, align 4
  %647 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 16
  %648 = load i8, i8* %647, align 2
  %649 = icmp eq i8 %648, 0
  br i1 %649, label %656, label %650

650:                                              ; preds = %637
  %651 = load %struct.sctp_nets*, %struct.sctp_nets** %479, align 8
  %652 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %651, i64 0, i32 57
  %653 = load i8, i8* %652, align 1
  %654 = icmp eq i8 %653, 0
  br i1 %654, label %655, label %656

655:                                              ; preds = %650
  store i8 1, i8* %652, align 1
  br label %656

656:                                              ; preds = %655, %650, %637
  store i8 0, i8* %647, align 2
  br i1 %201, label %708, label %657

657:                                              ; preds = %656
  %658 = load %struct.sctp_nets*, %struct.sctp_nets** %479, align 8
  %659 = icmp eq %struct.sctp_nets* %658, null
  br i1 %659, label %705, label %660

660:                                              ; preds = %657
  %661 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %658, i64 0, i32 17
  %662 = atomicrmw add i32* %661, i32 -1 seq_cst
  %663 = icmp eq i32 %662, 1
  br i1 %663, label %664, label %705

664:                                              ; preds = %660
  %665 = load %struct.sctp_nets*, %struct.sctp_nets** %479, align 8
  %666 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %665, i64 0, i32 3, i32 0
  %667 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %666, align 8
  %668 = icmp eq %struct.sctp_rtentry* %667, null
  br i1 %668, label %684, label %669

669:                                              ; preds = %664
  %670 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %667, i64 0, i32 3
  %671 = load i64, i64* %670, align 8
  %672 = icmp sgt i64 %671, 1
  %673 = add nsw i64 %671, -1
  store i64 %673, i64* %670, align 8
  %674 = icmp sgt i64 %673, 0
  %675 = or i1 %672, %674
  br i1 %675, label %678, label %676

676:                                              ; preds = %669
  %677 = bitcast %struct.sctp_rtentry* %667 to i8*
  tail call void @free(i8* %677) #7
  br label %678

678:                                              ; preds = %676, %669
  %679 = load %struct.sctp_nets*, %struct.sctp_nets** %479, align 8
  %680 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %679, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %680, align 8
  %681 = load %struct.sctp_nets*, %struct.sctp_nets** %479, align 8
  %682 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %681, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %682, align 8
  %683 = load %struct.sctp_nets*, %struct.sctp_nets** %479, align 8
  br label %684

684:                                              ; preds = %678, %664
  %685 = phi %struct.sctp_nets* [ %665, %664 ], [ %683, %678 ]
  %686 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %685, i64 0, i32 47
  %687 = load i8, i8* %686, align 1
  %688 = icmp eq i8 %687, 0
  br i1 %688, label %695, label %689

689:                                              ; preds = %684
  %690 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %685, i64 0, i32 3, i32 2
  %691 = load %struct.sctp_ifa*, %struct.sctp_ifa** %690, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %691) #7
  %692 = load %struct.sctp_nets*, %struct.sctp_nets** %479, align 8
  %693 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %692, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %693, align 8
  %694 = load %struct.sctp_nets*, %struct.sctp_nets** %479, align 8
  br label %695

695:                                              ; preds = %689, %684
  %696 = phi %struct.sctp_nets* [ %685, %684 ], [ %694, %689 ]
  %697 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %696, i64 0, i32 47
  store i8 0, i8* %697, align 1
  %698 = load %struct.sctp_nets*, %struct.sctp_nets** %479, align 8
  %699 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %698, i64 0, i32 37
  %700 = load i16, i16* %699, align 4
  %701 = and i16 %700, -2
  store i16 %701, i16* %699, align 4
  %702 = bitcast %struct.sctp_nets** %479 to i8**
  %703 = load i8*, i8** %702, align 8
  tail call void @free(i8* %703) #7
  %704 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %705

705:                                              ; preds = %695, %660, %657
  %706 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 18
  store i8 1, i8* %706, align 4
  store %struct.sctp_nets* %120, %struct.sctp_nets** %479, align 8
  %707 = atomicrmw add i32* %202, i32 1 seq_cst
  br label %719

708:                                              ; preds = %656
  %709 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 18
  store i8 0, i8* %709, align 4
  %710 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %203, align 8
  %711 = icmp eq %struct.sctp_tmit_chunk* %710, null
  br i1 %711, label %712, label %715

712:                                              ; preds = %708
  %713 = load i32, i32* %204, align 8
  %714 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 0, i32 0, i32 6
  store i32 %713, i32* %714, align 8
  br label %719

715:                                              ; preds = %708
  %716 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %710, i64 0, i32 0, i32 0, i32 0
  %717 = load i32, i32* %716, align 8
  %718 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 0, i32 0, i32 6
  store i32 %717, i32* %718, align 8
  br label %719

719:                                              ; preds = %715, %712, %705
  %720 = load i8, i8* %102, align 1
  %721 = icmp eq i8 %720, 0
  br i1 %721, label %724, label %722

722:                                              ; preds = %719
  %723 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 18
  store i8 1, i8* %723, align 4
  br label %724

724:                                              ; preds = %722, %719, %482, %476
  %725 = phi i32 [ %638, %722 ], [ %638, %719 ], [ %211, %482 ], [ %211, %476 ]
  %726 = phi i32 [ %639, %722 ], [ %639, %719 ], [ %210, %482 ], [ %210, %476 ]
  %727 = phi i32 [ %640, %722 ], [ %640, %719 ], [ %208, %482 ], [ %208, %476 ]
  %728 = phi i32 [ %641, %722 ], [ %641, %719 ], [ %207, %482 ], [ %207, %476 ]
  %729 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %219, i64 0, i32 7
  %730 = load i32, i32* %729, align 8
  %731 = icmp eq i32 %730, 4
  %732 = zext i1 %731 to i32
  %733 = add i32 %209, %732
  br label %734

734:                                              ; preds = %724, %556, %552, %542, %538, %515, %507, %503
  %735 = phi i32 [ %212, %507 ], [ %212, %503 ], [ %212, %515 ], [ %544, %542 ], [ %212, %538 ], [ %558, %556 ], [ %212, %552 ], [ %212, %724 ]
  %736 = phi i32 [ %211, %507 ], [ %211, %503 ], [ %211, %515 ], [ %211, %542 ], [ %211, %538 ], [ %211, %556 ], [ %211, %552 ], [ %725, %724 ]
  %737 = phi i32 [ %210, %507 ], [ %210, %503 ], [ %210, %515 ], [ %210, %542 ], [ %210, %538 ], [ %210, %556 ], [ %210, %552 ], [ %726, %724 ]
  %738 = phi i32 [ %209, %507 ], [ %209, %503 ], [ %209, %515 ], [ %209, %542 ], [ %209, %538 ], [ %209, %556 ], [ %209, %552 ], [ %733, %724 ]
  %739 = phi i32 [ %208, %507 ], [ %208, %503 ], [ %208, %515 ], [ %208, %542 ], [ %208, %538 ], [ %208, %556 ], [ %208, %552 ], [ %727, %724 ]
  %740 = phi i32 [ %207, %507 ], [ %207, %503 ], [ %207, %515 ], [ %207, %542 ], [ %207, %538 ], [ %207, %556 ], [ %207, %552 ], [ %728, %724 ]
  %741 = icmp eq %struct.sctp_tmit_chunk* %221, null
  br i1 %741, label %742, label %205

742:                                              ; preds = %214, %734, %171
  %743 = phi i32 [ 0, %171 ], [ %212, %214 ], [ %735, %734 ]
  %744 = phi i32 [ 0, %171 ], [ %211, %214 ], [ %736, %734 ]
  %745 = phi i32 [ 0, %171 ], [ %209, %214 ], [ %738, %734 ]
  %746 = phi i32 [ 0, %171 ], [ %208, %214 ], [ %739, %734 ]
  %747 = phi i32 [ 0, %171 ], [ %207, %214 ], [ %740, %734 ]
  %748 = load i32, i32* %172, align 4
  %749 = sub i32 %173, %748
  %750 = load i32, i32* %174, align 4
  %751 = sub i32 %175, %750
  %752 = icmp eq i32 %749, %751
  %753 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %754 = and i32 %753, 64
  %755 = icmp eq i32 %754, 0
  br i1 %755, label %757, label %756

756:                                              ; preds = %742
  tail call void @sctp_log_fr(i32 %747, i32 %746, i32 %744, i32 20) #7
  br label %757

757:                                              ; preds = %756, %742
  %758 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 18, i32 0
  %759 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %758, align 8
  %760 = icmp eq %struct.sctp_tmit_chunk* %759, null
  br i1 %760, label %844, label %761

761:                                              ; preds = %757
  %762 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 88
  %763 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %120, i64 0, i32 17
  %764 = icmp eq %struct.sctp_nets* %2, null
  %765 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 17
  br label %766

766:                                              ; preds = %839, %761
  %767 = phi %struct.sctp_tmit_chunk* [ %759, %761 ], [ %842, %839 ]
  %768 = phi i32 [ %745, %761 ], [ %840, %839 ]
  %769 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %767, i64 0, i32 7
  %770 = load i32, i32* %769, align 8
  %771 = icmp eq i32 %770, 4
  %772 = zext i1 %771 to i32
  %773 = add i32 %768, %772
  %774 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %767, i64 0, i32 5
  %775 = load %struct.sctp_nets*, %struct.sctp_nets** %774, align 8
  %776 = icmp eq %struct.sctp_nets* %775, %2
  br i1 %776, label %777, label %839

777:                                              ; preds = %766
  %778 = bitcast %struct.sctp_tmit_chunk* %767 to i8*
  %779 = load i8, i8* %778, align 8
  %780 = icmp eq i8 %779, 12
  br i1 %780, label %781, label %839

781:                                              ; preds = %777
  br i1 %764, label %826, label %782

782:                                              ; preds = %781
  %783 = atomicrmw add i32* %765, i32 -1 seq_cst
  %784 = icmp eq i32 %783, 1
  br i1 %784, label %785, label %826

785:                                              ; preds = %782
  %786 = load %struct.sctp_nets*, %struct.sctp_nets** %774, align 8
  %787 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %786, i64 0, i32 3, i32 0
  %788 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %787, align 8
  %789 = icmp eq %struct.sctp_rtentry* %788, null
  br i1 %789, label %805, label %790

790:                                              ; preds = %785
  %791 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %788, i64 0, i32 3
  %792 = load i64, i64* %791, align 8
  %793 = icmp sgt i64 %792, 1
  %794 = add nsw i64 %792, -1
  store i64 %794, i64* %791, align 8
  %795 = icmp sgt i64 %794, 0
  %796 = or i1 %793, %795
  br i1 %796, label %799, label %797

797:                                              ; preds = %790
  %798 = bitcast %struct.sctp_rtentry* %788 to i8*
  tail call void @free(i8* %798) #7
  br label %799

799:                                              ; preds = %797, %790
  %800 = load %struct.sctp_nets*, %struct.sctp_nets** %774, align 8
  %801 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %800, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %801, align 8
  %802 = load %struct.sctp_nets*, %struct.sctp_nets** %774, align 8
  %803 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %802, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %803, align 8
  %804 = load %struct.sctp_nets*, %struct.sctp_nets** %774, align 8
  br label %805

805:                                              ; preds = %799, %785
  %806 = phi %struct.sctp_nets* [ %786, %785 ], [ %804, %799 ]
  %807 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %806, i64 0, i32 47
  %808 = load i8, i8* %807, align 1
  %809 = icmp eq i8 %808, 0
  br i1 %809, label %816, label %810

810:                                              ; preds = %805
  %811 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %806, i64 0, i32 3, i32 2
  %812 = load %struct.sctp_ifa*, %struct.sctp_ifa** %811, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %812) #7
  %813 = load %struct.sctp_nets*, %struct.sctp_nets** %774, align 8
  %814 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %813, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %814, align 8
  %815 = load %struct.sctp_nets*, %struct.sctp_nets** %774, align 8
  br label %816

816:                                              ; preds = %810, %805
  %817 = phi %struct.sctp_nets* [ %806, %805 ], [ %815, %810 ]
  %818 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %817, i64 0, i32 47
  store i8 0, i8* %818, align 1
  %819 = load %struct.sctp_nets*, %struct.sctp_nets** %774, align 8
  %820 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %819, i64 0, i32 37
  %821 = load i16, i16* %820, align 4
  %822 = and i16 %821, -2
  store i16 %822, i16* %820, align 4
  %823 = bitcast %struct.sctp_nets** %774 to i8**
  %824 = load i8*, i8** %823, align 8
  tail call void @free(i8* %824) #7
  %825 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %826

826:                                              ; preds = %816, %782, %781
  store %struct.sctp_nets* %120, %struct.sctp_nets** %774, align 8
  %827 = load i32, i32* %769, align 8
  %828 = icmp eq i32 %827, 4
  br i1 %828, label %836, label %829

829:                                              ; preds = %826
  store i32 4, i32* %769, align 8
  %830 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %767, i64 0, i32 9
  %831 = load i16, i16* %830, align 2
  %832 = or i16 %831, 256
  store i16 %832, i16* %830, align 2
  %833 = load i32, i32* %762, align 4
  %834 = add i32 %833, 1
  store i32 %834, i32* %762, align 4
  %835 = add i32 %773, 1
  br label %836

836:                                              ; preds = %829, %826
  %837 = phi i32 [ %835, %829 ], [ %773, %826 ]
  %838 = atomicrmw add i32* %763, i32 1 seq_cst
  br label %839

839:                                              ; preds = %836, %777, %766
  %840 = phi i32 [ %837, %836 ], [ %773, %777 ], [ %773, %766 ]
  %841 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %767, i64 0, i32 6, i32 0
  %842 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %841, align 8
  %843 = icmp eq %struct.sctp_tmit_chunk* %842, null
  br i1 %843, label %844, label %766

844:                                              ; preds = %839, %757
  %845 = phi i32 [ %745, %757 ], [ %840, %839 ]
  %846 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 88
  %847 = load i32, i32* %846, align 4
  %848 = icmp eq i32 %847, %845
  br i1 %848, label %850, label %849

849:                                              ; preds = %844
  store i32 %845, i32* %846, align 4
  br label %850

850:                                              ; preds = %849, %844
  br i1 %752, label %905, label %851

851:                                              ; preds = %850
  store i32 0, i32* %174, align 4
  %852 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 93
  store i32 0, i32* %852, align 8
  %853 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 16, i32 0
  %854 = load %struct.sctp_nets*, %struct.sctp_nets** %853, align 8
  %855 = icmp eq %struct.sctp_nets* %854, null
  br i1 %855, label %856, label %859

856:                                              ; preds = %859, %851
  %857 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %177, align 8
  %858 = icmp eq %struct.sctp_tmit_chunk* %857, null
  br i1 %858, label %905, label %865

859:                                              ; preds = %851, %859
  %860 = phi %struct.sctp_nets* [ %863, %859 ], [ %854, %851 ]
  %861 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %860, i64 0, i32 18
  store i32 0, i32* %861, align 4
  %862 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %860, i64 0, i32 0, i32 0
  %863 = load %struct.sctp_nets*, %struct.sctp_nets** %862, align 8
  %864 = icmp eq %struct.sctp_nets* %863, null
  br i1 %864, label %856, label %859

865:                                              ; preds = %856, %901
  %866 = phi %struct.sctp_tmit_chunk* [ %903, %901 ], [ %857, %856 ]
  %867 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %866, i64 0, i32 7
  %868 = load i32, i32* %867, align 8
  %869 = icmp slt i32 %868, 4
  br i1 %869, label %870, label %901

870:                                              ; preds = %865
  %871 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %872 = and i32 %871, 32
  %873 = icmp eq i32 %872, 0
  br i1 %873, label %886, label %874

874:                                              ; preds = %870
  %875 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %866, i64 0, i32 5
  %876 = load %struct.sctp_nets*, %struct.sctp_nets** %875, align 8
  %877 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %876, i64 0, i32 18
  %878 = load i32, i32* %877, align 4
  %879 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %866, i64 0, i32 11
  %880 = load i16, i16* %879, align 2
  %881 = zext i16 %880 to i32
  %882 = ptrtoint %struct.sctp_nets* %876 to i64
  %883 = trunc i64 %882 to i32
  %884 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %866, i64 0, i32 0, i32 0, i32 0
  %885 = load i32, i32* %884, align 8
  tail call void @sctp_misc_ints(i8 zeroext 108, i32 %878, i32 %881, i32 %883, i32 %885) #7
  br label %886

886:                                              ; preds = %874, %870
  %887 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %866, i64 0, i32 11
  %888 = load i16, i16* %887, align 2
  %889 = zext i16 %888 to i32
  %890 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %866, i64 0, i32 5
  %891 = load %struct.sctp_nets*, %struct.sctp_nets** %890, align 8
  %892 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %891, i64 0, i32 18
  %893 = load i32, i32* %892, align 4
  %894 = add i32 %893, %889
  store i32 %894, i32* %892, align 4
  %895 = load i32, i32* %852, align 8
  %896 = add i32 %895, 1
  store i32 %896, i32* %852, align 8
  %897 = load i16, i16* %887, align 2
  %898 = zext i16 %897 to i32
  %899 = load i32, i32* %174, align 4
  %900 = add i32 %899, %898
  store i32 %900, i32* %174, align 4
  br label %901

901:                                              ; preds = %886, %865
  %902 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %866, i64 0, i32 6, i32 0
  %903 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %902, align 8
  %904 = icmp eq %struct.sctp_tmit_chunk* %903, null
  br i1 %904, label %905, label %865

905:                                              ; preds = %901, %850, %856
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %121) #7
  %906 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 174
  store i8 0, i8* %906, align 2
  %907 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 42
  store i8 0, i8* %907, align 2
  %908 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 37, i32 10
  %909 = load void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)** %908, align 8
  %910 = icmp eq void (%struct.sctp_tcb*, %struct.sctp_nets*)* %909, null
  br i1 %910, label %915, label %911

911:                                              ; preds = %905
  %912 = load i32, i32* %172, align 4
  %913 = icmp eq i32 %912, 0
  br i1 %913, label %914, label %915

914:                                              ; preds = %911
  tail call void %909(%struct.sctp_tcb* %1, %struct.sctp_nets* %2) #7
  br label %915

915:                                              ; preds = %905, %914, %911
  %916 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 175
  store i8 1, i8* %916, align 1
  %917 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 56
  %918 = load i32, i32* %917, align 8
  %919 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 65
  store i32 %918, i32* %919, align 8
  %920 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 13
  %921 = load i32, i32* %920, align 8
  %922 = icmp eq i32 %921, 0
  br i1 %922, label %923, label %931

923:                                              ; preds = %915
  %924 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 54
  %925 = load i8, i8* %924, align 2
  %926 = icmp eq i8 %925, 0
  %927 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 111
  %928 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 112
  %929 = select i1 %926, i32* %927, i32* %928
  %930 = load i32, i32* %929, align 4
  store i32 %930, i32* %920, align 8
  br label %931

931:                                              ; preds = %923, %915
  %932 = phi i32 [ %921, %915 ], [ %930, %923 ]
  %933 = shl i32 %932, 1
  store i32 %933, i32* %920, align 8
  %934 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 113
  %935 = load i32, i32* %934, align 4
  %936 = icmp ugt i32 %933, %935
  %937 = select i1 %936, i32 %935, i32 %933
  store i32 %937, i32* %920, align 8
  %938 = icmp ne i32 %101, 0
  %939 = or i32 %744, %743
  %940 = icmp eq i32 %939, 0
  %941 = or i1 %938, %940
  br i1 %941, label %945, label %942

942:                                              ; preds = %931
  %943 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 37, i32 4
  %944 = load void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)** %943, align 8
  tail call void %944(%struct.sctp_tcb* %1, %struct.sctp_nets* %2) #7
  br label %945

945:                                              ; preds = %931, %942
  %946 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 37
  %947 = load i16, i16* %946, align 4
  %948 = and i16 %947, 2049
  %949 = icmp eq i16 %948, 1
  br i1 %949, label %1028, label %950

950:                                              ; preds = %945
  tail call void @sctp_move_chunks_from_net(%struct.sctp_tcb* %1, %struct.sctp_nets* %2) #7
  %951 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 3, i32 2
  %952 = load %struct.sctp_ifa*, %struct.sctp_ifa** %951, align 8
  %953 = icmp eq %struct.sctp_ifa* %952, null
  br i1 %953, label %955, label %954

954:                                              ; preds = %950
  tail call void @sctp_free_ifa(%struct.sctp_ifa* nonnull %952) #7
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %951, align 8
  br label %955

955:                                              ; preds = %950, %954
  %956 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 47
  store i8 0, i8* %956, align 1
  %957 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 3, i32 0
  %958 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %957, align 8
  %959 = icmp eq %struct.sctp_rtentry* %958, null
  br i1 %959, label %970, label %960

960:                                              ; preds = %955
  %961 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %958, i64 0, i32 3
  %962 = load i64, i64* %961, align 8
  %963 = icmp sgt i64 %962, 1
  %964 = add nsw i64 %962, -1
  store i64 %964, i64* %961, align 8
  %965 = icmp sgt i64 %964, 0
  %966 = or i1 %963, %965
  br i1 %966, label %969, label %967

967:                                              ; preds = %960
  %968 = bitcast %struct.sctp_rtentry* %958 to i8*
  tail call void @free(i8* %968) #7
  br label %969

969:                                              ; preds = %960, %967
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %957, align 8
  br label %970

970:                                              ; preds = %955, %969
  %971 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 30
  %972 = load %struct.sctp_nets*, %struct.sctp_nets** %971, align 8
  %973 = icmp ne %struct.sctp_nets* %972, %2
  %974 = icmp eq %struct.sctp_nets* %120, %2
  %975 = or i1 %974, %973
  br i1 %975, label %1028, label %976

976:                                              ; preds = %970
  %977 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 31
  %978 = load %struct.sctp_nets*, %struct.sctp_nets** %977, align 8
  %979 = icmp eq %struct.sctp_nets* %978, null
  br i1 %979, label %1025, label %980

980:                                              ; preds = %976
  %981 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %978, i64 0, i32 17
  %982 = atomicrmw add i32* %981, i32 -1 seq_cst
  %983 = icmp eq i32 %982, 1
  br i1 %983, label %984, label %1025

984:                                              ; preds = %980
  %985 = load %struct.sctp_nets*, %struct.sctp_nets** %977, align 8
  %986 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %985, i64 0, i32 3, i32 0
  %987 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %986, align 8
  %988 = icmp eq %struct.sctp_rtentry* %987, null
  br i1 %988, label %1004, label %989

989:                                              ; preds = %984
  %990 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %987, i64 0, i32 3
  %991 = load i64, i64* %990, align 8
  %992 = icmp sgt i64 %991, 1
  %993 = add nsw i64 %991, -1
  store i64 %993, i64* %990, align 8
  %994 = icmp sgt i64 %993, 0
  %995 = or i1 %992, %994
  br i1 %995, label %998, label %996

996:                                              ; preds = %989
  %997 = bitcast %struct.sctp_rtentry* %987 to i8*
  tail call void @free(i8* %997) #7
  br label %998

998:                                              ; preds = %989, %996
  %999 = load %struct.sctp_nets*, %struct.sctp_nets** %977, align 8
  %1000 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %999, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %1000, align 8
  %1001 = load %struct.sctp_nets*, %struct.sctp_nets** %977, align 8
  %1002 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1001, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %1002, align 8
  %1003 = load %struct.sctp_nets*, %struct.sctp_nets** %977, align 8
  br label %1004

1004:                                             ; preds = %984, %998
  %1005 = phi %struct.sctp_nets* [ %985, %984 ], [ %1003, %998 ]
  %1006 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1005, i64 0, i32 47
  %1007 = load i8, i8* %1006, align 1
  %1008 = icmp eq i8 %1007, 0
  br i1 %1008, label %1015, label %1009

1009:                                             ; preds = %1004
  %1010 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1005, i64 0, i32 3, i32 2
  %1011 = load %struct.sctp_ifa*, %struct.sctp_ifa** %1010, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %1011) #7
  %1012 = load %struct.sctp_nets*, %struct.sctp_nets** %977, align 8
  %1013 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1012, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %1013, align 8
  %1014 = load %struct.sctp_nets*, %struct.sctp_nets** %977, align 8
  br label %1015

1015:                                             ; preds = %1004, %1009
  %1016 = phi %struct.sctp_nets* [ %1005, %1004 ], [ %1014, %1009 ]
  %1017 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1016, i64 0, i32 47
  store i8 0, i8* %1017, align 1
  %1018 = load %struct.sctp_nets*, %struct.sctp_nets** %977, align 8
  %1019 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %1018, i64 0, i32 37
  %1020 = load i16, i16* %1019, align 4
  %1021 = and i16 %1020, -2
  store i16 %1021, i16* %1019, align 4
  %1022 = bitcast %struct.sctp_nets** %977 to i8**
  %1023 = load i8*, i8** %1022, align 8
  tail call void @free(i8* %1023) #7
  %1024 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %1025

1025:                                             ; preds = %976, %1015, %980
  store %struct.sctp_nets* %120, %struct.sctp_nets** %977, align 8
  %1026 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %120, i64 0, i32 17
  %1027 = atomicrmw add i32* %1026, i32 1 seq_cst
  br label %1028

1028:                                             ; preds = %970, %945, %1025
  %1029 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %29, i64 0, i32 0
  %1030 = load i32, i32* %1029, align 8
  %1031 = and i32 %1030, 127
  %1032 = icmp eq i32 %1031, 4
  br i1 %1032, label %1033, label %1034

1033:                                             ; preds = %1028
  tail call void @sctp_timer_start(i32 1, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %2) #7
  br label %1074

1034:                                             ; preds = %1028
  %1035 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 162
  %1036 = load i8, i8* %1035, align 4
  %1037 = icmp eq i8 %1036, 0
  br i1 %1037, label %1067, label %1038

1038:                                             ; preds = %1034
  %1039 = tail call %struct.sctp_tmit_chunk* @sctp_try_advance_peer_ack_point(%struct.sctp_tcb* %1, %struct.sctp_association* %29) #7
  %1040 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 58
  %1041 = load i32, i32* %1040, align 8
  %1042 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 55
  %1043 = load i32, i32* %1042, align 4
  %1044 = icmp ugt i32 %1043, %1041
  %1045 = sub i32 %1043, %1041
  %1046 = icmp ugt i32 %1045, -2147483648
  %1047 = and i1 %1044, %1046
  br i1 %1047, label %1053, label %1048

1048:                                             ; preds = %1038
  %1049 = icmp ugt i32 %1041, %1043
  %1050 = sub i32 %1041, %1043
  %1051 = icmp sgt i32 %1050, -1
  %1052 = and i1 %1049, %1051
  br i1 %1052, label %1053, label %1067

1053:                                             ; preds = %1048, %1038
  tail call void @send_forward_tsn(%struct.sctp_tcb* %1, %struct.sctp_association* %29) #7
  %1054 = icmp eq %struct.sctp_tmit_chunk* %1039, null
  br i1 %1054, label %1067, label %1055

1055:                                             ; preds = %1053, %1060
  %1056 = phi %struct.sctp_tmit_chunk* [ %1062, %1060 ], [ %1039, %1053 ]
  %1057 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1056, i64 0, i32 5
  %1058 = load %struct.sctp_nets*, %struct.sctp_nets** %1057, align 8
  %1059 = icmp eq %struct.sctp_nets* %1058, null
  br i1 %1059, label %1060, label %1064

1060:                                             ; preds = %1055
  %1061 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %1056, i64 0, i32 6, i32 0
  %1062 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %1061, align 8
  %1063 = icmp eq %struct.sctp_tmit_chunk* %1062, null
  br i1 %1063, label %1067, label %1055

1064:                                             ; preds = %1055
  %1065 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 1
  %1066 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %1065, align 8
  tail call void @sctp_timer_start(i32 1, %struct.sctp_inpcb* %1066, %struct.sctp_tcb* %1, %struct.sctp_nets* nonnull %1058) #7
  br label %1067

1067:                                             ; preds = %1060, %1053, %1048, %1064, %1034
  %1068 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %1069 = and i32 %1068, 2
  %1070 = icmp eq i32 %1069, 0
  br i1 %1070, label %1074, label %1071

1071:                                             ; preds = %1067
  %1072 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 19
  %1073 = load i32, i32* %1072, align 8
  tail call void @sctp_log_cwnd(%struct.sctp_tcb* %1, %struct.sctp_nets* %2, i32 %1073, i8 zeroext 2) #7
  br label %1074

1074:                                             ; preds = %94, %1071, %1067, %39, %1033
  %1075 = phi i32 [ 0, %1033 ], [ 1, %39 ], [ 1, %94 ], [ 0, %1067 ], [ 0, %1071 ]
  ret i32 %1075
}

declare void @sctp_log_fr(i32, i32, i32, i32) local_unnamed_addr #3

declare void @sctp_log_cwnd(%struct.sctp_tcb*, %struct.sctp_nets*, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @sctp_threshold_management(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*, i16 zeroext) unnamed_addr #2 {
  %5 = icmp ne %struct.sctp_nets* %2, null
  br i1 %5, label %6, label %36

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 40
  %8 = load i16, i16* %7, align 2
  %9 = add i16 %8, 1
  store i16 %9, i16* %7, align 2
  %10 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 38
  %11 = load i16, i16* %10, align 2
  %12 = icmp ugt i16 %9, %11
  br i1 %12, label %13, label %21

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 37
  %15 = load i16, i16* %14, align 4
  %16 = and i16 %15, 1
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %13
  %19 = and i16 %15, -3074
  store i16 %19, i16* %14, align 4
  %20 = bitcast %struct.sctp_nets* %2 to i8*
  tail call void @sctp_ulp_notify(i32 3, %struct.sctp_tcb* %1, i32 0, i8* nonnull %20, i32 0) #7
  br label %36

21:                                               ; preds = %6
  %22 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 39
  %23 = load i16, i16* %22, align 8
  %24 = icmp ult i16 %23, %11
  %25 = icmp ugt i16 %9, %23
  %26 = and i1 %24, %25
  br i1 %26, label %27, label %36

27:                                               ; preds = %21
  %28 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 37
  %29 = load i16, i16* %28, align 4
  %30 = and i16 %29, 2048
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %27
  %33 = or i16 %29, 2048
  store i16 %33, i16* %28, align 4
  %34 = tail call i32 @sctp_get_tick_count() #7
  %35 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 25
  store i32 %34, i32* %35, align 8
  tail call void @sctp_send_hb(%struct.sctp_tcb* %1, %struct.sctp_nets* nonnull %2, i32 0) #7
  tail call void @sctp_timer_stop(i32 5, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* nonnull %2, i32 1073741825) #7
  tail call void @sctp_timer_start(i32 5, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* nonnull %2) #7
  br label %36

36:                                               ; preds = %13, %27, %18, %32, %21, %4
  %37 = icmp eq %struct.sctp_tcb* %1, null
  br i1 %37, label %80, label %38

38:                                               ; preds = %36
  br i1 %5, label %39, label %59

39:                                               ; preds = %38
  %40 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 37
  %41 = load i16, i16* %40, align 4
  %42 = and i16 %41, 512
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 95
  %46 = load i32, i32* %45, align 8
  br label %71

47:                                               ; preds = %39
  %48 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %49 = and i32 %48, 33554432
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 95
  %53 = load i32, i32* %52, align 8
  %54 = add i32 %53, 1
  tail call void @sctp_misc_ints(i8 zeroext 121, i32 %53, i32 %54, i32 1073741824, i32 138) #7
  br label %55

55:                                               ; preds = %47, %51
  %56 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 95
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %71

59:                                               ; preds = %38
  %60 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 51), align 4
  %61 = and i32 %60, 33554432
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 95
  %65 = load i32, i32* %64, align 8
  %66 = add i32 %65, 1
  tail call void @sctp_misc_ints(i8 zeroext 121, i32 %65, i32 %66, i32 1073741824, i32 148) #7
  br label %67

67:                                               ; preds = %59, %63
  %68 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 95
  %69 = load i32, i32* %68, align 8
  %70 = add i32 %69, 1
  store i32 %70, i32* %68, align 8
  br label %71

71:                                               ; preds = %44, %55, %67
  %72 = phi i32 [ %46, %44 ], [ %58, %55 ], [ %70, %67 ]
  %73 = zext i16 %3 to i32
  %74 = icmp ugt i32 %72, %73
  br i1 %74, label %75, label %80

75:                                               ; preds = %71
  %76 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 63), align 4
  %77 = trunc i32 %76 to i16
  %78 = tail call %struct.mbuf* @sctp_generate_cause(i16 zeroext %77, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0)) #7
  %79 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 42
  store i32 1073741826, i32* %79, align 4
  tail call void @sctp_abort_an_association(%struct.sctp_inpcb* %0, %struct.sctp_tcb* nonnull %1, %struct.mbuf* %78, i32 0) #7
  br label %80

80:                                               ; preds = %71, %36, %75
  %81 = phi i32 [ 1, %75 ], [ 0, %36 ], [ 0, %71 ]
  ret i32 %81
}

; Function Attrs: nofree nounwind
declare i32 @gettimeofday(%struct.timeval* nocapture, i8* nocapture) local_unnamed_addr #4

declare void @sctp_send_hb(%struct.sctp_tcb*, %struct.sctp_nets*, i32) local_unnamed_addr #3

declare void @sctp_move_chunks_from_net(%struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare void @sctp_timer_start(i32, %struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #3

declare %struct.sctp_tmit_chunk* @sctp_try_advance_peer_ack_point(%struct.sctp_tcb*, %struct.sctp_association*) local_unnamed_addr #3

declare void @send_forward_tsn(%struct.sctp_tcb*, %struct.sctp_association*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_t1init_timer(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 180
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  store i8 0, i8* %4, align 4
  tail call void @sctp_send_initiate(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, i32 0) #7
  br label %61

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 127
  %12 = icmp eq i32 %11, 2
  br i1 %12, label %13, label %61

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 132
  %15 = load i16, i16* %14, align 8
  %16 = tail call fastcc i32 @sctp_threshold_management(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %2, i16 zeroext %15)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %61

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 176
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 30
  %21 = load %struct.sctp_nets*, %struct.sctp_nets** %20, align 8
  %22 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %21, i64 0, i32 13
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %21, i64 0, i32 54
  %27 = load i8, i8* %26, align 2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 112
  %31 = load i32, i32* %30, align 8
  br label %35

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 111
  %34 = load i32, i32* %33, align 4
  br label %35

35:                                               ; preds = %32, %29
  %36 = phi i32 [ %31, %29 ], [ %34, %32 ]
  store i32 %36, i32* %22, align 8
  br label %37

37:                                               ; preds = %35, %18
  %38 = phi i32 [ %23, %18 ], [ %36, %35 ]
  %39 = shl i32 %38, 1
  store i32 %39, i32* %22, align 8
  %40 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 113
  %41 = load i32, i32* %40, align 4
  %42 = icmp ugt i32 %39, %41
  %43 = select i1 %42, i32 %41, i32 %39
  store i32 %43, i32* %22, align 8
  %44 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 110
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 13
  %47 = load i32, i32* %46, align 8
  %48 = icmp ult i32 %45, %47
  br i1 %48, label %49, label %50

49:                                               ; preds = %37
  store i32 %45, i32* %46, align 8
  br label %50

50:                                               ; preds = %49, %37
  %51 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 94
  %52 = load i32, i32* %51, align 4
  %53 = icmp ugt i32 %52, 1
  br i1 %53, label %54, label %60

54:                                               ; preds = %50
  %55 = load %struct.sctp_nets*, %struct.sctp_nets** %20, align 8
  %56 = tail call %struct.sctp_nets* @sctp_find_alternate_net(%struct.sctp_tcb* %1, %struct.sctp_nets* %55, i32 0)
  %57 = load %struct.sctp_nets*, %struct.sctp_nets** %20, align 8
  %58 = icmp eq %struct.sctp_nets* %56, %57
  br i1 %58, label %60, label %59

59:                                               ; preds = %54
  tail call void @sctp_move_chunks_from_net(%struct.sctp_tcb* %1, %struct.sctp_nets* %57) #7
  store %struct.sctp_nets* %56, %struct.sctp_nets** %20, align 8
  br label %60

60:                                               ; preds = %59, %54, %50
  tail call void @sctp_send_initiate(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, i32 0) #7
  br label %61

61:                                               ; preds = %13, %8, %60, %7
  %62 = phi i32 [ 0, %7 ], [ 0, %60 ], [ 0, %8 ], [ 1, %13 ]
  ret i32 %62
}

declare void @sctp_send_initiate(%struct.sctp_inpcb*, %struct.sctp_tcb*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_cookie_timer(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets* nocapture readnone) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 18, i32 0
  %5 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %4, align 8
  %6 = icmp eq %struct.sctp_tmit_chunk* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %3, %12
  %8 = phi %struct.sctp_tmit_chunk* [ %14, %12 ], [ %5, %3 ]
  %9 = bitcast %struct.sctp_tmit_chunk* %8 to i8*
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 10
  br i1 %11, label %30, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %8, i64 0, i32 6, i32 0
  %14 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %13, align 8
  %15 = icmp eq %struct.sctp_tmit_chunk* %14, null
  br i1 %15, label %16, label %7

16:                                               ; preds = %12, %3
  %17 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 127
  %20 = icmp eq i32 %19, 4
  br i1 %20, label %21, label %26

21:                                               ; preds = %16
  %22 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 63), align 4
  %23 = trunc i32 %22 to i16
  %24 = tail call %struct.mbuf* @sctp_generate_cause(i16 zeroext %23, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0)) #7
  %25 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 42
  store i32 1073741827, i32* %25, align 4
  tail call void @sctp_abort_an_association(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.mbuf* %24, i32 0) #7
  br label %128

26:                                               ; preds = %16
  %27 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %28 = icmp eq void (i8*, ...)* %27, null
  br i1 %28, label %128, label %29

29:                                               ; preds = %26
  tail call void (i8*, ...) %27(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 %19) #7
  br label %128

30:                                               ; preds = %7
  %31 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %8, i64 0, i32 5
  %32 = load %struct.sctp_nets*, %struct.sctp_nets** %31, align 8
  %33 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 132
  %34 = load i16, i16* %33, align 8
  %35 = tail call fastcc i32 @sctp_threshold_management(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %32, i16 zeroext %34)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %128

37:                                               ; preds = %30
  %38 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 176
  store i8 0, i8* %38, align 8
  %39 = load %struct.sctp_nets*, %struct.sctp_nets** %31, align 8
  %40 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %39, i64 0, i32 13
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %37
  %44 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %39, i64 0, i32 54
  %45 = load i8, i8* %44, align 2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 112
  %49 = load i32, i32* %48, align 8
  br label %53

50:                                               ; preds = %43
  %51 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 111
  %52 = load i32, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %47
  %54 = phi i32 [ %49, %47 ], [ %52, %50 ]
  store i32 %54, i32* %40, align 8
  br label %55

55:                                               ; preds = %53, %37
  %56 = phi i32 [ %41, %37 ], [ %54, %53 ]
  %57 = shl i32 %56, 1
  store i32 %57, i32* %40, align 8
  %58 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 113
  %59 = load i32, i32* %58, align 4
  %60 = icmp ugt i32 %57, %59
  %61 = select i1 %60, i32 %59, i32 %57
  store i32 %61, i32* %40, align 8
  %62 = load %struct.sctp_nets*, %struct.sctp_nets** %31, align 8
  %63 = tail call %struct.sctp_nets* @sctp_find_alternate_net(%struct.sctp_tcb* %1, %struct.sctp_nets* %62, i32 0)
  %64 = load %struct.sctp_nets*, %struct.sctp_nets** %31, align 8
  %65 = icmp eq %struct.sctp_nets* %63, %64
  br i1 %65, label %116, label %66

66:                                               ; preds = %55
  %67 = icmp eq %struct.sctp_nets* %64, null
  br i1 %67, label %113, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %64, i64 0, i32 17
  %70 = atomicrmw add i32* %69, i32 -1 seq_cst
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %113

72:                                               ; preds = %68
  %73 = load %struct.sctp_nets*, %struct.sctp_nets** %31, align 8
  %74 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %73, i64 0, i32 3, i32 0
  %75 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %74, align 8
  %76 = icmp eq %struct.sctp_rtentry* %75, null
  br i1 %76, label %92, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %75, i64 0, i32 3
  %79 = load i64, i64* %78, align 8
  %80 = icmp sgt i64 %79, 1
  %81 = add nsw i64 %79, -1
  store i64 %81, i64* %78, align 8
  %82 = icmp sgt i64 %81, 0
  %83 = or i1 %80, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %77
  %85 = bitcast %struct.sctp_rtentry* %75 to i8*
  tail call void @free(i8* %85) #7
  br label %86

86:                                               ; preds = %77, %84
  %87 = load %struct.sctp_nets*, %struct.sctp_nets** %31, align 8
  %88 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %87, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %88, align 8
  %89 = load %struct.sctp_nets*, %struct.sctp_nets** %31, align 8
  %90 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %89, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %90, align 8
  %91 = load %struct.sctp_nets*, %struct.sctp_nets** %31, align 8
  br label %92

92:                                               ; preds = %72, %86
  %93 = phi %struct.sctp_nets* [ %73, %72 ], [ %91, %86 ]
  %94 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %93, i64 0, i32 47
  %95 = load i8, i8* %94, align 1
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %103, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %93, i64 0, i32 3, i32 2
  %99 = load %struct.sctp_ifa*, %struct.sctp_ifa** %98, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %99) #7
  %100 = load %struct.sctp_nets*, %struct.sctp_nets** %31, align 8
  %101 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %100, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %101, align 8
  %102 = load %struct.sctp_nets*, %struct.sctp_nets** %31, align 8
  br label %103

103:                                              ; preds = %92, %97
  %104 = phi %struct.sctp_nets* [ %93, %92 ], [ %102, %97 ]
  %105 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %104, i64 0, i32 47
  store i8 0, i8* %105, align 1
  %106 = load %struct.sctp_nets*, %struct.sctp_nets** %31, align 8
  %107 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %106, i64 0, i32 37
  %108 = load i16, i16* %107, align 4
  %109 = and i16 %108, -2
  store i16 %109, i16* %107, align 4
  %110 = bitcast %struct.sctp_nets** %31 to i8**
  %111 = load i8*, i8** %110, align 8
  tail call void @free(i8* %111) #7
  %112 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %113

113:                                              ; preds = %66, %68, %103
  store %struct.sctp_nets* %63, %struct.sctp_nets** %31, align 8
  %114 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %63, i64 0, i32 17
  %115 = atomicrmw add i32* %114, i32 1 seq_cst
  br label %116

116:                                              ; preds = %55, %113
  %117 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %8, i64 0, i32 7
  %118 = load i32, i32* %117, align 8
  %119 = icmp eq i32 %118, 4
  br i1 %119, label %124, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 88
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %121, align 4
  br label %124

124:                                              ; preds = %116, %120
  store i32 4, i32* %117, align 8
  %125 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %8, i64 0, i32 9
  %126 = load i16, i16* %125, align 2
  %127 = or i16 %126, 256
  store i16 %127, i16* %125, align 2
  br label %128

128:                                              ; preds = %30, %29, %26, %124, %21
  %129 = phi i32 [ 0, %21 ], [ 0, %124 ], [ 0, %26 ], [ 0, %29 ], [ 1, %30 ]
  ret i32 %129
}

declare %struct.mbuf* @sctp_generate_cause(i16 zeroext, i8*) local_unnamed_addr #3

declare void @sctp_abort_an_association(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.mbuf*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_strreset_timer(%struct.sctp_inpcb*, %struct.sctp_tcb*) local_unnamed_addr #2 {
  %3 = alloca %struct.sctp_tmit_chunk*, align 8
  %4 = bitcast %struct.sctp_tmit_chunk** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7
  store %struct.sctp_tmit_chunk* null, %struct.sctp_tmit_chunk** %3, align 8
  %5 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 178
  %6 = load i8, i8* %5, align 2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %175, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 46
  %10 = load i32, i32* %9, align 8
  %11 = call %struct.sctp_stream_reset_request* @sctp_find_stream_reset(%struct.sctp_tcb* %1, i32 %10, %struct.sctp_tmit_chunk** nonnull %3) #7
  %12 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %3, align 8
  %13 = icmp eq %struct.sctp_tmit_chunk* %12, null
  br i1 %13, label %175, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %12, i64 0, i32 5
  %16 = load %struct.sctp_nets*, %struct.sctp_nets** %15, align 8
  %17 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 133
  %18 = load i16, i16* %17, align 2
  %19 = call fastcc i32 @sctp_threshold_management(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %16, i16 zeroext %18)
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %175

21:                                               ; preds = %14
  %22 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 13
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 54
  %27 = load i8, i8* %26, align 2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 112
  %31 = load i32, i32* %30, align 8
  br label %35

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 111
  %34 = load i32, i32* %33, align 4
  br label %35

35:                                               ; preds = %32, %29
  %36 = phi i32 [ %31, %29 ], [ %34, %32 ]
  store i32 %36, i32* %22, align 8
  br label %37

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %23, %21 ], [ %36, %35 ]
  %39 = shl i32 %38, 1
  store i32 %39, i32* %22, align 8
  %40 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 113
  %41 = load i32, i32* %40, align 4
  %42 = icmp ugt i32 %39, %41
  %43 = select i1 %42, i32 %41, i32 %39
  store i32 %43, i32* %22, align 8
  %44 = call %struct.sctp_nets* @sctp_find_alternate_net(%struct.sctp_tcb* %1, %struct.sctp_nets* %16, i32 0)
  %45 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %3, align 8
  %46 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %45, i64 0, i32 5
  store %struct.sctp_nets* %44, %struct.sctp_nets** %46, align 8
  %47 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %44, i64 0, i32 17
  %48 = atomicrmw add i32* %47, i32 1 seq_cst
  %49 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 18, i32 0
  %50 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %49, align 8
  %51 = icmp eq %struct.sctp_tmit_chunk* %50, null
  br i1 %51, label %126, label %52

52:                                               ; preds = %37
  %53 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 88
  %54 = icmp eq %struct.sctp_nets* %16, null
  %55 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 17
  br label %56

56:                                               ; preds = %52, %122
  %57 = phi %struct.sctp_tmit_chunk* [ %50, %52 ], [ %124, %122 ]
  %58 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 5
  %59 = load %struct.sctp_nets*, %struct.sctp_nets** %58, align 8
  %60 = icmp eq %struct.sctp_nets* %59, %16
  br i1 %60, label %61, label %122

61:                                               ; preds = %56
  %62 = bitcast %struct.sctp_tmit_chunk* %57 to i8*
  %63 = load i8, i8* %62, align 8
  %64 = icmp eq i8 %63, 12
  br i1 %64, label %65, label %122

65:                                               ; preds = %61
  br i1 %54, label %110, label %66

66:                                               ; preds = %65
  %67 = atomicrmw add i32* %55, i32 -1 seq_cst
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %110

69:                                               ; preds = %66
  %70 = load %struct.sctp_nets*, %struct.sctp_nets** %58, align 8
  %71 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %70, i64 0, i32 3, i32 0
  %72 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %71, align 8
  %73 = icmp eq %struct.sctp_rtentry* %72, null
  br i1 %73, label %89, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %72, i64 0, i32 3
  %76 = load i64, i64* %75, align 8
  %77 = icmp sgt i64 %76, 1
  %78 = add nsw i64 %76, -1
  store i64 %78, i64* %75, align 8
  %79 = icmp sgt i64 %78, 0
  %80 = or i1 %77, %79
  br i1 %80, label %83, label %81

81:                                               ; preds = %74
  %82 = bitcast %struct.sctp_rtentry* %72 to i8*
  call void @free(i8* %82) #7
  br label %83

83:                                               ; preds = %74, %81
  %84 = load %struct.sctp_nets*, %struct.sctp_nets** %58, align 8
  %85 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %84, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %85, align 8
  %86 = load %struct.sctp_nets*, %struct.sctp_nets** %58, align 8
  %87 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %86, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %87, align 8
  %88 = load %struct.sctp_nets*, %struct.sctp_nets** %58, align 8
  br label %89

89:                                               ; preds = %69, %83
  %90 = phi %struct.sctp_nets* [ %70, %69 ], [ %88, %83 ]
  %91 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %90, i64 0, i32 47
  %92 = load i8, i8* %91, align 1
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %100, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %90, i64 0, i32 3, i32 2
  %96 = load %struct.sctp_ifa*, %struct.sctp_ifa** %95, align 8
  call void @sctp_free_ifa(%struct.sctp_ifa* %96) #7
  %97 = load %struct.sctp_nets*, %struct.sctp_nets** %58, align 8
  %98 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %97, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %98, align 8
  %99 = load %struct.sctp_nets*, %struct.sctp_nets** %58, align 8
  br label %100

100:                                              ; preds = %89, %94
  %101 = phi %struct.sctp_nets* [ %90, %89 ], [ %99, %94 ]
  %102 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %101, i64 0, i32 47
  store i8 0, i8* %102, align 1
  %103 = load %struct.sctp_nets*, %struct.sctp_nets** %58, align 8
  %104 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %103, i64 0, i32 37
  %105 = load i16, i16* %104, align 4
  %106 = and i16 %105, -2
  store i16 %106, i16* %104, align 4
  %107 = bitcast %struct.sctp_nets** %58 to i8**
  %108 = load i8*, i8** %107, align 8
  call void @free(i8* %108) #7
  %109 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %110

110:                                              ; preds = %65, %66, %100
  %111 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 7
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 4
  br i1 %113, label %120, label %114

114:                                              ; preds = %110
  store i32 4, i32* %111, align 8
  %115 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 9
  %116 = load i16, i16* %115, align 2
  %117 = or i16 %116, 256
  store i16 %117, i16* %115, align 2
  %118 = load i32, i32* %53, align 4
  %119 = add i32 %118, 1
  store i32 %119, i32* %53, align 4
  br label %120

120:                                              ; preds = %110, %114
  store %struct.sctp_nets* %44, %struct.sctp_nets** %58, align 8
  %121 = atomicrmw add i32* %47, i32 1 seq_cst
  br label %122

122:                                              ; preds = %56, %61, %120
  %123 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %57, i64 0, i32 6, i32 0
  %124 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %123, align 8
  %125 = icmp eq %struct.sctp_tmit_chunk* %124, null
  br i1 %125, label %126, label %56

126:                                              ; preds = %122, %37
  %127 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 37
  %128 = load i16, i16* %127, align 4
  %129 = and i16 %128, 1
  %130 = icmp eq i16 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %126
  call void @sctp_move_chunks_from_net(%struct.sctp_tcb* %1, %struct.sctp_nets* %16) #7
  br label %132

132:                                              ; preds = %126, %131
  %133 = icmp eq %struct.sctp_nets* %16, null
  br i1 %133, label %162, label %134

134:                                              ; preds = %132
  %135 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 17
  %136 = atomicrmw add i32* %135, i32 -1 seq_cst
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %138, label %162

138:                                              ; preds = %134
  %139 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 3, i32 0
  %140 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %139, align 8
  %141 = icmp eq %struct.sctp_rtentry* %140, null
  br i1 %141, label %152, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %140, i64 0, i32 3
  %144 = load i64, i64* %143, align 8
  %145 = icmp sgt i64 %144, 1
  %146 = add nsw i64 %144, -1
  store i64 %146, i64* %143, align 8
  %147 = icmp sgt i64 %146, 0
  %148 = or i1 %145, %147
  br i1 %148, label %151, label %149

149:                                              ; preds = %142
  %150 = bitcast %struct.sctp_rtentry* %140 to i8*
  call void @free(i8* %150) #7
  br label %151

151:                                              ; preds = %142, %149
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %139, align 8
  br label %152

152:                                              ; preds = %138, %151
  %153 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 47
  %154 = load i8, i8* %153, align 1
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %159, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %16, i64 0, i32 3, i32 2
  %158 = load %struct.sctp_ifa*, %struct.sctp_ifa** %157, align 8
  call void @sctp_free_ifa(%struct.sctp_ifa* %158) #7
  br label %159

159:                                              ; preds = %152, %156
  %160 = bitcast %struct.sctp_nets* %16 to i8*
  call void @free(i8* %160) #7
  %161 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %162

162:                                              ; preds = %132, %134, %159
  %163 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %3, align 8
  %164 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %163, i64 0, i32 7
  %165 = load i32, i32* %164, align 8
  %166 = icmp eq i32 %165, 4
  br i1 %166, label %171, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 88
  %169 = load i32, i32* %168, align 4
  %170 = add i32 %169, 1
  store i32 %170, i32* %168, align 4
  br label %171

171:                                              ; preds = %162, %167
  store i32 4, i32* %164, align 8
  %172 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %163, i64 0, i32 9
  %173 = load i16, i16* %172, align 2
  %174 = or i16 %173, 256
  store i16 %174, i16* %172, align 2
  call void @sctp_timer_start(i32 13, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %44) #7
  br label %175

175:                                              ; preds = %14, %8, %2, %171
  %176 = phi i32 [ 0, %171 ], [ 0, %2 ], [ 0, %8 ], [ 1, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7
  ret i32 %176
}

declare %struct.sctp_stream_reset_request* @sctp_find_stream_reset(%struct.sctp_tcb*, i32, %struct.sctp_tmit_chunk**) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_asconf_timer(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 19, i32 0
  %5 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %4, align 8
  %6 = icmp eq %struct.sctp_tmit_chunk* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @sctp_send_asconf(%struct.sctp_tcb* %1, %struct.sctp_nets* %2, i32 0) #7
  br label %256

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %5, i64 0, i32 5
  %10 = load %struct.sctp_nets*, %struct.sctp_nets** %9, align 8
  %11 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 133
  %12 = load i16, i16* %11, align 2
  %13 = tail call fastcc i32 @sctp_threshold_management(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %10, i16 zeroext %12)
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %256

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %5, i64 0, i32 8
  %17 = load i16, i16* %16, align 4
  %18 = load i16, i16* %11, align 2
  %19 = icmp ugt i16 %17, %18
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  tail call void @sctp_asconf_cleanup(%struct.sctp_tcb* %1) #7
  br label %256

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %10, i64 0, i32 13
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %10, i64 0, i32 54
  %27 = load i8, i8* %26, align 2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 112
  %31 = load i32, i32* %30, align 8
  br label %35

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 111
  %34 = load i32, i32* %33, align 4
  br label %35

35:                                               ; preds = %32, %29
  %36 = phi i32 [ %31, %29 ], [ %34, %32 ]
  store i32 %36, i32* %22, align 8
  br label %37

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %23, %21 ], [ %36, %35 ]
  %39 = shl i32 %38, 1
  store i32 %39, i32* %22, align 8
  %40 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 113
  %41 = load i32, i32* %40, align 4
  %42 = icmp ugt i32 %39, %41
  %43 = select i1 %42, i32 %41, i32 %39
  store i32 %43, i32* %22, align 8
  %44 = tail call %struct.sctp_nets* @sctp_find_alternate_net(%struct.sctp_tcb* %1, %struct.sctp_nets* %10, i32 0)
  %45 = load %struct.sctp_nets*, %struct.sctp_nets** %9, align 8
  %46 = icmp eq %struct.sctp_nets* %45, %44
  br i1 %46, label %50, label %47

47:                                               ; preds = %37
  store %struct.sctp_nets* %44, %struct.sctp_nets** %9, align 8
  %48 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %44, i64 0, i32 17
  %49 = atomicrmw add i32* %48, i32 1 seq_cst
  br label %50

50:                                               ; preds = %37, %47
  %51 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 18, i32 0
  %52 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %51, align 8
  %53 = icmp eq %struct.sctp_tmit_chunk* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 88
  %56 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %44, i64 0, i32 17
  %57 = icmp eq %struct.sctp_nets* %10, null
  %58 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %10, i64 0, i32 17
  br label %66

59:                                               ; preds = %132, %50
  %60 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %4, align 8
  %61 = icmp eq %struct.sctp_tmit_chunk* %60, null
  br i1 %61, label %208, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %44, i64 0, i32 17
  %64 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %5, i64 0, i32 7
  %65 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 88
  br label %136

66:                                               ; preds = %54, %132
  %67 = phi %struct.sctp_tmit_chunk* [ %52, %54 ], [ %134, %132 ]
  %68 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %67, i64 0, i32 5
  %69 = load %struct.sctp_nets*, %struct.sctp_nets** %68, align 8
  %70 = icmp eq %struct.sctp_nets* %69, %10
  br i1 %70, label %71, label %132

71:                                               ; preds = %66
  %72 = bitcast %struct.sctp_tmit_chunk* %67 to i8*
  %73 = load i8, i8* %72, align 8
  %74 = icmp eq i8 %73, 12
  br i1 %74, label %75, label %132

75:                                               ; preds = %71
  br i1 %57, label %120, label %76

76:                                               ; preds = %75
  %77 = atomicrmw add i32* %58, i32 -1 seq_cst
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %120

79:                                               ; preds = %76
  %80 = load %struct.sctp_nets*, %struct.sctp_nets** %68, align 8
  %81 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %80, i64 0, i32 3, i32 0
  %82 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %81, align 8
  %83 = icmp eq %struct.sctp_rtentry* %82, null
  br i1 %83, label %99, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %82, i64 0, i32 3
  %86 = load i64, i64* %85, align 8
  %87 = icmp sgt i64 %86, 1
  %88 = add nsw i64 %86, -1
  store i64 %88, i64* %85, align 8
  %89 = icmp sgt i64 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %93, label %91

91:                                               ; preds = %84
  %92 = bitcast %struct.sctp_rtentry* %82 to i8*
  tail call void @free(i8* %92) #7
  br label %93

93:                                               ; preds = %84, %91
  %94 = load %struct.sctp_nets*, %struct.sctp_nets** %68, align 8
  %95 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %94, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %95, align 8
  %96 = load %struct.sctp_nets*, %struct.sctp_nets** %68, align 8
  %97 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %96, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %97, align 8
  %98 = load %struct.sctp_nets*, %struct.sctp_nets** %68, align 8
  br label %99

99:                                               ; preds = %79, %93
  %100 = phi %struct.sctp_nets* [ %80, %79 ], [ %98, %93 ]
  %101 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %100, i64 0, i32 47
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %110, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %100, i64 0, i32 3, i32 2
  %106 = load %struct.sctp_ifa*, %struct.sctp_ifa** %105, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %106) #7
  %107 = load %struct.sctp_nets*, %struct.sctp_nets** %68, align 8
  %108 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %107, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %108, align 8
  %109 = load %struct.sctp_nets*, %struct.sctp_nets** %68, align 8
  br label %110

110:                                              ; preds = %99, %104
  %111 = phi %struct.sctp_nets* [ %100, %99 ], [ %109, %104 ]
  %112 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %111, i64 0, i32 47
  store i8 0, i8* %112, align 1
  %113 = load %struct.sctp_nets*, %struct.sctp_nets** %68, align 8
  %114 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %113, i64 0, i32 37
  %115 = load i16, i16* %114, align 4
  %116 = and i16 %115, -2
  store i16 %116, i16* %114, align 4
  %117 = bitcast %struct.sctp_nets** %68 to i8**
  %118 = load i8*, i8** %117, align 8
  tail call void @free(i8* %118) #7
  %119 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %120

120:                                              ; preds = %75, %76, %110
  store %struct.sctp_nets* %44, %struct.sctp_nets** %68, align 8
  %121 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %67, i64 0, i32 7
  %122 = load i32, i32* %121, align 8
  %123 = icmp eq i32 %122, 4
  br i1 %123, label %130, label %124

124:                                              ; preds = %120
  store i32 4, i32* %121, align 8
  %125 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %67, i64 0, i32 9
  %126 = load i16, i16* %125, align 2
  %127 = or i16 %126, 256
  store i16 %127, i16* %125, align 2
  %128 = load i32, i32* %55, align 4
  %129 = add i32 %128, 1
  store i32 %129, i32* %55, align 4
  br label %130

130:                                              ; preds = %120, %124
  %131 = atomicrmw add i32* %56, i32 1 seq_cst
  br label %132

132:                                              ; preds = %66, %71, %130
  %133 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %67, i64 0, i32 6, i32 0
  %134 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %133, align 8
  %135 = icmp eq %struct.sctp_tmit_chunk* %134, null
  br i1 %135, label %59, label %66

136:                                              ; preds = %62, %200
  %137 = phi %struct.sctp_tmit_chunk* [ %60, %62 ], [ %206, %200 ]
  %138 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %137, i64 0, i32 5
  %139 = load %struct.sctp_nets*, %struct.sctp_nets** %138, align 8
  %140 = icmp eq %struct.sctp_nets* %139, %44
  br i1 %140, label %190, label %141

141:                                              ; preds = %136
  %142 = icmp eq %struct.sctp_nets* %139, null
  br i1 %142, label %188, label %143

143:                                              ; preds = %141
  %144 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %139, i64 0, i32 17
  %145 = atomicrmw add i32* %144, i32 -1 seq_cst
  %146 = icmp eq i32 %145, 1
  br i1 %146, label %147, label %188

147:                                              ; preds = %143
  %148 = load %struct.sctp_nets*, %struct.sctp_nets** %138, align 8
  %149 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %148, i64 0, i32 3, i32 0
  %150 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %149, align 8
  %151 = icmp eq %struct.sctp_rtentry* %150, null
  br i1 %151, label %167, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %150, i64 0, i32 3
  %154 = load i64, i64* %153, align 8
  %155 = icmp sgt i64 %154, 1
  %156 = add nsw i64 %154, -1
  store i64 %156, i64* %153, align 8
  %157 = icmp sgt i64 %156, 0
  %158 = or i1 %155, %157
  br i1 %158, label %161, label %159

159:                                              ; preds = %152
  %160 = bitcast %struct.sctp_rtentry* %150 to i8*
  tail call void @free(i8* %160) #7
  br label %161

161:                                              ; preds = %152, %159
  %162 = load %struct.sctp_nets*, %struct.sctp_nets** %138, align 8
  %163 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %162, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %163, align 8
  %164 = load %struct.sctp_nets*, %struct.sctp_nets** %138, align 8
  %165 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %164, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %165, align 8
  %166 = load %struct.sctp_nets*, %struct.sctp_nets** %138, align 8
  br label %167

167:                                              ; preds = %147, %161
  %168 = phi %struct.sctp_nets* [ %148, %147 ], [ %166, %161 ]
  %169 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %168, i64 0, i32 47
  %170 = load i8, i8* %169, align 1
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %178, label %172

172:                                              ; preds = %167
  %173 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %168, i64 0, i32 3, i32 2
  %174 = load %struct.sctp_ifa*, %struct.sctp_ifa** %173, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %174) #7
  %175 = load %struct.sctp_nets*, %struct.sctp_nets** %138, align 8
  %176 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %175, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %176, align 8
  %177 = load %struct.sctp_nets*, %struct.sctp_nets** %138, align 8
  br label %178

178:                                              ; preds = %167, %172
  %179 = phi %struct.sctp_nets* [ %168, %167 ], [ %177, %172 ]
  %180 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %179, i64 0, i32 47
  store i8 0, i8* %180, align 1
  %181 = load %struct.sctp_nets*, %struct.sctp_nets** %138, align 8
  %182 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %181, i64 0, i32 37
  %183 = load i16, i16* %182, align 4
  %184 = and i16 %183, -2
  store i16 %184, i16* %182, align 4
  %185 = bitcast %struct.sctp_nets** %138 to i8**
  %186 = load i8*, i8** %185, align 8
  tail call void @free(i8* %186) #7
  %187 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %188

188:                                              ; preds = %141, %143, %178
  store %struct.sctp_nets* %44, %struct.sctp_nets** %138, align 8
  %189 = atomicrmw add i32* %63, i32 1 seq_cst
  br label %190

190:                                              ; preds = %136, %188
  %191 = load i32, i32* %64, align 8
  %192 = icmp eq i32 %191, 4
  br i1 %192, label %200, label %193

193:                                              ; preds = %190
  %194 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %137, i64 0, i32 7
  %195 = load i32, i32* %194, align 8
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %200, label %197

197:                                              ; preds = %193
  %198 = load i32, i32* %65, align 4
  %199 = add i32 %198, 1
  store i32 %199, i32* %65, align 4
  br label %200

200:                                              ; preds = %193, %190, %197
  %201 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %137, i64 0, i32 7
  store i32 4, i32* %201, align 8
  %202 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %137, i64 0, i32 9
  %203 = load i16, i16* %202, align 2
  %204 = or i16 %203, 256
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %137, i64 0, i32 6, i32 0
  %206 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %205, align 8
  %207 = icmp eq %struct.sctp_tmit_chunk* %206, null
  br i1 %207, label %208, label %136

208:                                              ; preds = %200, %59
  %209 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %10, i64 0, i32 37
  %210 = load i16, i16* %209, align 4
  %211 = and i16 %210, 1
  %212 = icmp eq i16 %211, 0
  br i1 %212, label %213, label %214

213:                                              ; preds = %208
  tail call void @sctp_move_chunks_from_net(%struct.sctp_tcb* %1, %struct.sctp_nets* %10) #7
  br label %214

214:                                              ; preds = %208, %213
  %215 = icmp eq %struct.sctp_nets* %10, null
  br i1 %215, label %244, label %216

216:                                              ; preds = %214
  %217 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %10, i64 0, i32 17
  %218 = atomicrmw add i32* %217, i32 -1 seq_cst
  %219 = icmp eq i32 %218, 1
  br i1 %219, label %220, label %244

220:                                              ; preds = %216
  %221 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %10, i64 0, i32 3, i32 0
  %222 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %221, align 8
  %223 = icmp eq %struct.sctp_rtentry* %222, null
  br i1 %223, label %234, label %224

224:                                              ; preds = %220
  %225 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %222, i64 0, i32 3
  %226 = load i64, i64* %225, align 8
  %227 = icmp sgt i64 %226, 1
  %228 = add nsw i64 %226, -1
  store i64 %228, i64* %225, align 8
  %229 = icmp sgt i64 %228, 0
  %230 = or i1 %227, %229
  br i1 %230, label %233, label %231

231:                                              ; preds = %224
  %232 = bitcast %struct.sctp_rtentry* %222 to i8*
  tail call void @free(i8* %232) #7
  br label %233

233:                                              ; preds = %224, %231
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %221, align 8
  br label %234

234:                                              ; preds = %220, %233
  %235 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %10, i64 0, i32 47
  %236 = load i8, i8* %235, align 1
  %237 = icmp eq i8 %236, 0
  br i1 %237, label %241, label %238

238:                                              ; preds = %234
  %239 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %10, i64 0, i32 3, i32 2
  %240 = load %struct.sctp_ifa*, %struct.sctp_ifa** %239, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %240) #7
  br label %241

241:                                              ; preds = %234, %238
  %242 = bitcast %struct.sctp_nets* %10 to i8*
  tail call void @free(i8* %242) #7
  %243 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %244

244:                                              ; preds = %214, %216, %241
  %245 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %5, i64 0, i32 7
  %246 = load i32, i32* %245, align 8
  %247 = icmp eq i32 %246, 4
  br i1 %247, label %252, label %248

248:                                              ; preds = %244
  %249 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 88
  %250 = load i32, i32* %249, align 4
  %251 = add i32 %250, 1
  store i32 %251, i32* %249, align 4
  br label %252

252:                                              ; preds = %244, %248
  store i32 4, i32* %245, align 8
  %253 = getelementptr inbounds %struct.sctp_tmit_chunk, %struct.sctp_tmit_chunk* %5, i64 0, i32 9
  %254 = load i16, i16* %253, align 2
  %255 = or i16 %254, 256
  store i16 %255, i16* %253, align 2
  tail call void @sctp_send_asconf(%struct.sctp_tcb* %1, %struct.sctp_nets* %44, i32 0) #7
  br label %256

256:                                              ; preds = %7, %252, %8, %20
  %257 = phi i32 [ 0, %20 ], [ 1, %8 ], [ 0, %252 ], [ 0, %7 ]
  ret i32 %257
}

declare void @sctp_send_asconf(%struct.sctp_tcb*, %struct.sctp_nets*, i32) local_unnamed_addr #3

declare void @sctp_asconf_cleanup(%struct.sctp_tcb*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_delete_prim_timer(%struct.sctp_inpcb* nocapture, %struct.sctp_tcb* nocapture) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 15
  %4 = load %struct.sctp_nets*, %struct.sctp_nets** %3, align 8
  %5 = icmp eq %struct.sctp_nets* %4, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %4, i64 0, i32 17
  %8 = atomicrmw add i32* %7, i32 -1 seq_cst
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %51

10:                                               ; preds = %6
  %11 = load %struct.sctp_nets*, %struct.sctp_nets** %3, align 8
  %12 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %11, i64 0, i32 3, i32 0
  %13 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %12, align 8
  %14 = icmp eq %struct.sctp_rtentry* %13, null
  br i1 %14, label %30, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %13, i64 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = icmp sgt i64 %17, 1
  %19 = add nsw i64 %17, -1
  store i64 %19, i64* %16, align 8
  %20 = icmp sgt i64 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %24, label %22

22:                                               ; preds = %15
  %23 = bitcast %struct.sctp_rtentry* %13 to i8*
  tail call void @free(i8* %23) #7
  br label %24

24:                                               ; preds = %15, %22
  %25 = load %struct.sctp_nets*, %struct.sctp_nets** %3, align 8
  %26 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %25, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %26, align 8
  %27 = load %struct.sctp_nets*, %struct.sctp_nets** %3, align 8
  %28 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %27, i64 0, i32 3, i32 0
  store %struct.sctp_rtentry* null, %struct.sctp_rtentry** %28, align 8
  %29 = load %struct.sctp_nets*, %struct.sctp_nets** %3, align 8
  br label %30

30:                                               ; preds = %10, %24
  %31 = phi %struct.sctp_nets* [ %11, %10 ], [ %29, %24 ]
  %32 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %31, i64 0, i32 47
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %31, i64 0, i32 3, i32 2
  %37 = load %struct.sctp_ifa*, %struct.sctp_ifa** %36, align 8
  tail call void @sctp_free_ifa(%struct.sctp_ifa* %37) #7
  %38 = load %struct.sctp_nets*, %struct.sctp_nets** %3, align 8
  %39 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %38, i64 0, i32 3, i32 2
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %39, align 8
  %40 = load %struct.sctp_nets*, %struct.sctp_nets** %3, align 8
  br label %41

41:                                               ; preds = %30, %35
  %42 = phi %struct.sctp_nets* [ %31, %30 ], [ %40, %35 ]
  %43 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %42, i64 0, i32 47
  store i8 0, i8* %43, align 1
  %44 = load %struct.sctp_nets*, %struct.sctp_nets** %3, align 8
  %45 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %44, i64 0, i32 37
  %46 = load i16, i16* %45, align 4
  %47 = and i16 %46, -2
  store i16 %47, i16* %45, align 4
  %48 = bitcast %struct.sctp_nets** %3 to i8**
  %49 = load i8*, i8** %48, align 8
  tail call void @free(i8* %49) #7
  %50 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 0, i32 30), i32 1 seq_cst
  br label %51

51:                                               ; preds = %6, %41
  store %struct.sctp_nets* null, %struct.sctp_nets** %3, align 8
  br label %52

52:                                               ; preds = %2, %51
  %53 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 10
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, -5
  store i32 %55, i32* %53, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_shutdown_timer(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 133
  %5 = load i16, i16* %4, align 2
  %6 = tail call fastcc i32 @sctp_threshold_management(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %2, i16 zeroext %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %32

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 13
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 54
  %14 = load i8, i8* %13, align 2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 112
  %18 = load i32, i32* %17, align 8
  br label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 111
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %19, %16
  %23 = phi i32 [ %18, %16 ], [ %21, %19 ]
  store i32 %23, i32* %9, align 8
  br label %24

24:                                               ; preds = %22, %8
  %25 = phi i32 [ %10, %8 ], [ %23, %22 ]
  %26 = shl i32 %25, 1
  store i32 %26, i32* %9, align 8
  %27 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 113
  %28 = load i32, i32* %27, align 4
  %29 = icmp ugt i32 %26, %28
  %30 = select i1 %29, i32 %28, i32 %26
  store i32 %30, i32* %9, align 8
  %31 = tail call %struct.sctp_nets* @sctp_find_alternate_net(%struct.sctp_tcb* %1, %struct.sctp_nets* %2, i32 0)
  tail call void @sctp_send_shutdown(%struct.sctp_tcb* %1, %struct.sctp_nets* %31) #7
  tail call void @sctp_timer_start(i32 4, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %31) #7
  br label %32

32:                                               ; preds = %3, %24
  %33 = phi i32 [ 0, %24 ], [ 1, %3 ]
  ret i32 %33
}

declare void @sctp_send_shutdown(%struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_shutdownack_timer(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 133
  %5 = load i16, i16* %4, align 2
  %6 = tail call fastcc i32 @sctp_threshold_management(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %2, i16 zeroext %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %32

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 13
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 54
  %14 = load i8, i8* %13, align 2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 112
  %18 = load i32, i32* %17, align 8
  br label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 111
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %19, %16
  %23 = phi i32 [ %18, %16 ], [ %21, %19 ]
  store i32 %23, i32* %9, align 8
  br label %24

24:                                               ; preds = %22, %8
  %25 = phi i32 [ %10, %8 ], [ %23, %22 ]
  %26 = shl i32 %25, 1
  store i32 %26, i32* %9, align 8
  %27 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 113
  %28 = load i32, i32* %27, align 4
  %29 = icmp ugt i32 %26, %28
  %30 = select i1 %29, i32 %28, i32 %26
  store i32 %30, i32* %9, align 8
  %31 = tail call %struct.sctp_nets* @sctp_find_alternate_net(%struct.sctp_tcb* %1, %struct.sctp_nets* %2, i32 0)
  tail call void @sctp_send_shutdown_ack(%struct.sctp_tcb* %1, %struct.sctp_nets* %31) #7
  tail call void @sctp_timer_start(i32 9, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %31) #7
  br label %32

32:                                               ; preds = %3, %24
  %33 = phi i32 [ 0, %24 ], [ 1, %3 ]
  ret i32 %33
}

declare void @sctp_send_shutdown_ack(%struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_heartbeat_timer(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #2 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %struct.timeval*
  %6 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 37
  %7 = load i16, i16* %6, align 4
  %8 = and i16 %7, 2048
  %9 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 45
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %45

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 3, i32 2
  %14 = load %struct.sctp_ifa*, %struct.sctp_ifa** %13, align 8
  %15 = icmp eq %struct.sctp_ifa* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  tail call void @sctp_free_ifa(%struct.sctp_ifa* nonnull %14) #7
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %13, align 8
  %17 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 47
  store i8 0, i8* %17, align 1
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 13
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 54
  %24 = load i8, i8* %23, align 2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 112
  %28 = load i32, i32* %27, align 8
  br label %32

29:                                               ; preds = %22
  %30 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 111
  %31 = load i32, i32* %30, align 4
  br label %32

32:                                               ; preds = %29, %26
  %33 = phi i32 [ %28, %26 ], [ %31, %29 ]
  store i32 %33, i32* %19, align 8
  br label %34

34:                                               ; preds = %32, %18
  %35 = phi i32 [ %20, %18 ], [ %33, %32 ]
  %36 = shl i32 %35, 1
  store i32 %36, i32* %19, align 8
  %37 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 113
  %38 = load i32, i32* %37, align 4
  %39 = icmp ugt i32 %36, %38
  %40 = select i1 %39, i32 %38, i32 %36
  store i32 %40, i32* %19, align 8
  %41 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 133
  %42 = load i16, i16* %41, align 2
  %43 = tail call fastcc i32 @sctp_threshold_management(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %2, i16 zeroext %42)
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %202

45:                                               ; preds = %34, %3
  %46 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 22
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %50, label %49

49:                                               ; preds = %45
  store i32 0, i32* %46, align 4
  br label %50

50:                                               ; preds = %45, %49
  %51 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 78
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %156, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 21, i32 0
  %56 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %55, align 8
  %57 = icmp eq %struct.sctp_tmit_chunk* %56, null
  br i1 %57, label %58, label %156

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 20, i32 0
  %60 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %59, align 8
  %61 = icmp eq %struct.sctp_tmit_chunk* %60, null
  br i1 %61, label %62, label %156

62:                                               ; preds = %58
  %63 = icmp eq %struct.sctp_tcb* %1, null
  %64 = icmp eq %struct.sctp_inpcb* %0, null
  %65 = or i1 %64, %63
  br i1 %65, label %156, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7
  %68 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 88
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %66
  %72 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %73 = icmp eq void (i8*, ...)* %72, null
  br i1 %73, label %75, label %74

74:                                               ; preds = %71
  tail call void (i8*, ...) %72(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9, i64 0, i64 0), i32 %69) #7
  br label %75

75:                                               ; preds = %74, %71
  store i32 0, i32* %68, align 4
  br label %76

76:                                               ; preds = %75, %66
  %77 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 39, i32 4
  %78 = load i32 (%struct.sctp_tcb*, %struct.sctp_association*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)** %77, align 8
  %79 = tail call i32 %78(%struct.sctp_tcb* nonnull %1, %struct.sctp_association* %67) #7
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %92, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 39, i32 0
  %83 = load void (%struct.sctp_tcb*, %struct.sctp_association*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32)** %82, align 8
  tail call void %83(%struct.sctp_tcb* nonnull %1, %struct.sctp_association* %67, i32 0) #7
  %84 = load i32 (%struct.sctp_tcb*, %struct.sctp_association*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)** %77, align 8
  %85 = tail call i32 %84(%struct.sctp_tcb* nonnull %1, %struct.sctp_association* %67) #7
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %81
  %88 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %89 = icmp eq void (i8*, ...)* %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %87
  tail call void (i8*, ...) %88(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.10, i64 0, i64 0)) #7
  br label %92

91:                                               ; preds = %81
  store i32 0, i32* %51, align 4
  br label %92

92:                                               ; preds = %91, %90, %87, %76
  %93 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 129
  %94 = load i16, i16* %93, align 2
  %95 = icmp eq i16 %94, 0
  br i1 %95, label %125, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 28
  %98 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %97, align 8
  %99 = zext i16 %94 to i64
  br label %100

100:                                              ; preds = %120, %96
  %101 = phi i64 [ 0, %96 ], [ %123, %120 ]
  %102 = phi i32 [ 0, %96 ], [ %122, %120 ]
  %103 = phi i32 [ 0, %96 ], [ %121, %120 ]
  %104 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %98, i64 %101, i32 0, i32 0
  %105 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %104, align 8
  %106 = icmp eq %struct.sctp_stream_queue_pending* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %100, %107
  %108 = phi i32 [ %115, %107 ], [ %102, %100 ]
  %109 = phi i32 [ %116, %107 ], [ %103, %100 ]
  %110 = phi %struct.sctp_stream_queue_pending* [ %118, %107 ], [ %105, %100 ]
  %111 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %110, i64 0, i32 16
  %112 = load i8, i8* %111, align 1
  %113 = icmp ne i8 %112, 0
  %114 = zext i1 %113 to i32
  %115 = add nsw i32 %108, %114
  %116 = add i32 %109, 1
  %117 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %110, i64 0, i32 4, i32 0
  %118 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %117, align 8
  %119 = icmp eq %struct.sctp_stream_queue_pending* %118, null
  br i1 %119, label %120, label %107

120:                                              ; preds = %107, %100
  %121 = phi i32 [ %103, %100 ], [ %116, %107 ]
  %122 = phi i32 [ %102, %100 ], [ %115, %107 ]
  %123 = add nuw nsw i64 %101, 1
  %124 = icmp eq i64 %123, %99
  br i1 %124, label %125, label %100

125:                                              ; preds = %120, %92
  %126 = phi i32 [ 0, %92 ], [ %121, %120 ]
  %127 = phi i32 [ 0, %92 ], [ %122, %120 ]
  %128 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 84
  %129 = load i32, i32* %128, align 4
  %130 = icmp ne i32 %126, %129
  %131 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %132 = icmp ne void (i8*, ...)* %131, null
  %133 = and i1 %130, %132
  br i1 %133, label %134, label %135

134:                                              ; preds = %125
  tail call void (i8*, ...) %131(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.11, i64 0, i64 0), i32 %129, i32 %126) #7
  br label %135

135:                                              ; preds = %134, %125
  %136 = icmp eq i32 %126, 0
  br i1 %136, label %149, label %137

137:                                              ; preds = %135
  tail call void @sctp_chunk_output(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, i32 1, i32 0) #7
  %138 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %55, align 8
  %139 = icmp eq %struct.sctp_tmit_chunk* %138, null
  br i1 %139, label %140, label %156

140:                                              ; preds = %137
  %141 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %59, align 8
  %142 = icmp eq %struct.sctp_tmit_chunk* %141, null
  %143 = icmp eq i32 %127, 0
  %144 = and i1 %143, %142
  %145 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %146 = icmp ne void (i8*, ...)* %145, null
  %147 = and i1 %144, %146
  br i1 %147, label %148, label %156

148:                                              ; preds = %140
  tail call void (i8*, ...) %145(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i64 0, i64 0), i32 %126) #7
  br label %156

149:                                              ; preds = %135
  %150 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %151 = icmp eq void (i8*, ...)* %150, null
  br i1 %151, label %155, label %152

152:                                              ; preds = %149
  %153 = load i32, i32* %51, align 4
  %154 = zext i32 %153 to i64
  tail call void (i8*, ...) %150(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i64 0, i64 0), i64 %154) #7
  br label %155

155:                                              ; preds = %152, %149
  store i32 0, i32* %51, align 4
  br label %156

156:                                              ; preds = %155, %148, %140, %137, %62, %50, %58, %54
  %157 = load i16, i16* %6, align 4
  %158 = zext i16 %157 to i32
  %159 = and i32 %158, 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %202

161:                                              ; preds = %156
  %162 = icmp ne i16 %8, 0
  %163 = and i32 %158, 2048
  %164 = icmp eq i32 %163, 0
  %165 = or i1 %162, %164
  br i1 %165, label %166, label %202

166:                                              ; preds = %161
  %167 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 15, i32 0
  %168 = load i64, i64* %167, align 8
  %169 = icmp sgt i64 %168, 0
  br i1 %169, label %174, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 15, i32 1
  %172 = load i64, i64* %171, align 8
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %201

174:                                              ; preds = %166, %170
  %175 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %175) #7
  %176 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %176, i8 -86, i64 16, i1 false)
  %177 = call i32 @gettimeofday(%struct.timeval* nonnull %5, i8* null) #7
  %178 = load <2 x i64>, <2 x i64>* %4, align 16
  %179 = bitcast i64* %167 to <2 x i64>*
  %180 = load <2 x i64>, <2 x i64>* %179, align 8
  %181 = sub <2 x i64> %178, %180
  %182 = extractelement <2 x i64> %181, i32 1
  %183 = icmp slt i64 %182, 0
  %184 = add nsw i64 %182, 1000000
  %185 = select i1 %183, i64 %184, i64 %182
  %186 = ashr i64 %182, 63
  %187 = extractelement <2 x i64> %181, i32 0
  %188 = add nsw i64 %187, %186
  %189 = trunc i64 %188 to i32
  %190 = mul i32 %189, 1000
  %191 = sdiv i64 %185, 1000
  %192 = trunc i64 %191 to i32
  %193 = add i32 %190, %192
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %175) #7
  %194 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 36
  %195 = load i32, i32* %194, align 8
  %196 = icmp ult i32 %193, %195
  br i1 %196, label %197, label %201

197:                                              ; preds = %174
  %198 = load i16, i16* %6, align 4
  %199 = and i16 %198, 2048
  %200 = icmp eq i16 %199, 0
  br i1 %200, label %202, label %201

201:                                              ; preds = %170, %197, %174
  tail call void @sctp_send_hb(%struct.sctp_tcb* %1, %struct.sctp_nets* %2, i32 0) #7
  br label %202

202:                                              ; preds = %156, %161, %197, %201, %34
  %203 = phi i32 [ 1, %34 ], [ 0, %201 ], [ 0, %197 ], [ 0, %161 ], [ 0, %156 ]
  ret i32 %203
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_pathmtu_timer(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = tail call i32 @sctp_get_next_mtu(i32 %5) #7
  %7 = load i32, i32* %4, align 8
  %8 = icmp ugt i32 %6, %7
  br i1 %8, label %9, label %60

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 41
  %11 = load i16, i16* %10, align 4
  %12 = icmp eq i16 %11, 0
  br i1 %12, label %13, label %60

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 47
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 0
  %17 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 3, i32 2
  %18 = load %struct.sctp_ifa*, %struct.sctp_ifa** %17, align 8
  br i1 %16, label %30, label %19

19:                                               ; preds = %13
  %20 = icmp eq %struct.sctp_ifa* %18, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 3, i32 2
  br label %40

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %18, i64 0, i32 7
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %49, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 3, i32 2
  br label %33

30:                                               ; preds = %13
  %31 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 3, i32 2
  %32 = icmp eq %struct.sctp_ifa* %18, null
  br i1 %32, label %40, label %33

33:                                               ; preds = %28, %30
  %34 = phi %struct.sctp_ifa** [ %29, %28 ], [ %31, %30 ]
  %35 = getelementptr inbounds %struct.sctp_ifa, %struct.sctp_ifa* %18, i64 0, i32 7
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %48, label %39

39:                                               ; preds = %33
  tail call void @sctp_free_ifa(%struct.sctp_ifa* nonnull %18) #7
  store %struct.sctp_ifa* null, %struct.sctp_ifa** %34, align 8
  store i8 0, i8* %14, align 1
  br label %60

40:                                               ; preds = %30, %21
  %41 = phi %struct.sctp_ifa** [ %22, %21 ], [ %31, %30 ]
  %42 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 3
  %43 = bitcast %struct.sctp_net_route* %42 to %struct.sctp_route*
  %44 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 41
  %45 = load i32, i32* %44, align 4
  %46 = tail call %struct.sctp_ifa* @sctp_source_address_selection(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_route* %43, %struct.sctp_nets* %2, i32 0, i32 %45) #7
  store %struct.sctp_ifa* %46, %struct.sctp_ifa** %41, align 8
  %47 = icmp eq %struct.sctp_ifa* %46, null
  br i1 %47, label %60, label %48

48:                                               ; preds = %33, %40
  store i8 1, i8* %14, align 1
  br label %49

49:                                               ; preds = %48, %23
  %50 = getelementptr inbounds %struct.sctp_nets, %struct.sctp_nets* %2, i64 0, i32 3, i32 0
  %51 = load %struct.sctp_rtentry*, %struct.sctp_rtentry** %50, align 8
  %52 = icmp eq %struct.sctp_rtentry* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.sctp_rtentry, %struct.sctp_rtentry* %51, i64 0, i32 2, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = icmp ugt i32 %55, %6
  br i1 %56, label %57, label %58

57:                                               ; preds = %53
  store i32 %6, i32* %4, align 8
  br label %60

58:                                               ; preds = %49, %53
  %59 = phi i32 [ %55, %53 ], [ 0, %49 ]
  store i32 %59, i32* %4, align 8
  br label %60

60:                                               ; preds = %40, %39, %58, %57, %9, %3
  tail call void @sctp_timer_start(i32 8, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* %2) #7
  ret void
}

declare i32 @sctp_get_next_mtu(i32) local_unnamed_addr #3

declare %struct.sctp_ifa* @sctp_source_address_selection(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_route*, %struct.sctp_nets*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_autoclose_timer(%struct.sctp_inpcb*, %struct.sctp_tcb*) local_unnamed_addr #2 {
  %3 = alloca %struct.timeval, align 8
  %4 = bitcast %struct.timeval* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #7
  %5 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i64 0, i32 0
  %6 = bitcast %struct.timeval* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = call i32 @gettimeofday(%struct.timeval* nonnull %3, i8* null) #7
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 100
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %61, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 8
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 512
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %61, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 3
  %18 = getelementptr inbounds %struct.timeval, %struct.timeval* %17, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 4
  %21 = getelementptr inbounds %struct.timeval, %struct.timeval* %20, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp sgt i64 %19, %22
  %24 = select i1 %23, %struct.timeval* %17, %struct.timeval* %20
  %25 = load i64, i64* %5, align 8
  %26 = getelementptr inbounds %struct.timeval, %struct.timeval* %24, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = sub nsw i64 %25, %27
  %29 = trunc i64 %28 to i32
  %30 = tail call i32 @sctp_secs_to_ticks(i32 %29) #7
  %31 = load i32, i32* %8, align 4
  %32 = icmp ugt i32 %31, %30
  br i1 %32, label %59, label %33

33:                                               ; preds = %16
  tail call void @sctp_chunk_output(%struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, i32 10, i32 0) #7
  %34 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 21, i32 0
  %35 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %34, align 8
  %36 = icmp eq %struct.sctp_tmit_chunk* %35, null
  br i1 %36, label %37, label %61

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 20, i32 0
  %39 = load %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** %38, align 8
  %40 = icmp eq %struct.sctp_tmit_chunk* %39, null
  br i1 %40, label %41, label %61

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, 127
  switch i32 %44, label %47 [
    i32 16, label %61
    i32 8, label %45
    i32 32, label %45
  ]

45:                                               ; preds = %41, %41
  %46 = atomicrmw sub i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 1), i32 1 seq_cst
  br label %47

47:                                               ; preds = %41, %45
  tail call void @sctp_set_state(%struct.sctp_tcb* %1, i32 16) #7
  tail call void @sctp_stop_timers_for_shutdown(%struct.sctp_tcb* %1) #7
  %48 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 31
  %49 = load %struct.sctp_nets*, %struct.sctp_nets** %48, align 8
  %50 = icmp eq %struct.sctp_nets* %49, null
  br i1 %50, label %51, label %54

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 30
  %53 = load %struct.sctp_nets*, %struct.sctp_nets** %52, align 8
  br label %54

54:                                               ; preds = %47, %51
  %55 = phi %struct.sctp_nets* [ %53, %51 ], [ %49, %47 ]
  tail call void @sctp_send_shutdown(%struct.sctp_tcb* %1, %struct.sctp_nets* %55) #7
  %56 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 1
  %57 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %56, align 8
  tail call void @sctp_timer_start(i32 4, %struct.sctp_inpcb* %57, %struct.sctp_tcb* %1, %struct.sctp_nets* %55) #7
  %58 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %56, align 8
  tail call void @sctp_timer_start(i32 11, %struct.sctp_inpcb* %58, %struct.sctp_tcb* %1, %struct.sctp_nets* null) #7
  br label %61

59:                                               ; preds = %16
  %60 = sub i32 %31, %30
  store i32 %60, i32* %8, align 4
  tail call void @sctp_timer_start(i32 12, %struct.sctp_inpcb* %0, %struct.sctp_tcb* %1, %struct.sctp_nets* null) #7
  store i32 %31, i32* %8, align 4
  br label %61

61:                                               ; preds = %41, %11, %2, %59, %54, %37, %33
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #7
  ret void
}

declare i32 @sctp_secs_to_ticks(i32) local_unnamed_addr #3

declare void @sctp_chunk_output(%struct.sctp_inpcb*, %struct.sctp_tcb*, i32, i32) local_unnamed_addr #3

declare void @sctp_set_state(%struct.sctp_tcb*, i32) local_unnamed_addr #3

declare void @sctp_stop_timers_for_shutdown(%struct.sctp_tcb*) local_unnamed_addr #3

declare void @sctp_ulp_notify(i32, %struct.sctp_tcb*, i32, i8*, i32) local_unnamed_addr #3

declare i32 @sctp_get_tick_count() local_unnamed_addr #3

declare void @sctp_timer_stop(i32, %struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_nets*, i32) local_unnamed_addr #3

declare void @sctp_misc_ints(i8 zeroext, i32, i32, i32, i32) local_unnamed_addr #3

declare i32 @sctp_release_pr_sctp_chunk(%struct.sctp_tcb*, %struct.sctp_tmit_chunk*, i8 zeroext, i32) local_unnamed_addr #3

declare void @m_freem(%struct.mbuf*) local_unnamed_addr #3

declare void @sctp_auth_key_release(%struct.sctp_tcb*, i16 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
