; ModuleID = '../../third_party/ffmpeg/libavutil/opt.c'
source_filename = "../../third_party/ffmpeg/libavutil/opt.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, %struct.AVClass* (i8**)* }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVDictionary = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVDictionaryEntry = type { i8*, i8* }
%struct.anon = type { i8*, i32 }
%struct.AVBPrint = type { i8*, i32, i32, i32, [1 x i8], [1000 x i8] }

@.str = private unnamed_addr constant [35 x i8] c"The \22%s\22 option is deprecated: %s\0A\00", align 1
@.str.1 = private unnamed_addr constant [47 x i8] c"Unable to parse option value \22%s\22 as duration\0A\00", align 1
@.str.2 = private unnamed_addr constant [52 x i8] c"Value %f for parameter '%s' out of range [%g - %g]\0A\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.4 = private unnamed_addr constant [53 x i8] c"Unable to parse option value \22%s\22 as channel layout\0A\00", align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"Invalid option type.\0A\00", align 1
@.str.6 = private unnamed_addr constant [52 x i8] c"The value set by option '%s' is not an image size.\0A\00", align 1
@.str.7 = private unnamed_addr constant [49 x i8] c"Invalid negative size value %dx%d for size '%s'\0A\00", align 1
@.str.8 = private unnamed_addr constant [51 x i8] c"The value set by option '%s' is not a video rate.\0A\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"pixel\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"sample\00", align 1
@.str.11 = private unnamed_addr constant [55 x i8] c"The value set by option '%s' is not a channel layout.\0A\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"0x%08X\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"%d/%d\00", align 1
@.str.20 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"%02X\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"%dx%d\00", align 1
@.str.23 = private unnamed_addr constant [19 x i8] c"0x%02x%02x%02x%02x\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"0x%lx\00", align 1
@.str.25 = private unnamed_addr constant [49 x i8] c"The value for option '%s' is not an image size.\0A\00", align 1
@.str.26 = private unnamed_addr constant [52 x i8] c"The value for option '%s' is not a channel layout.\0A\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"%s AVOptions:\0A\00", align 1
@.str.28 = private unnamed_addr constant [51 x i8] c"AVOption type %d of option %s not implemented yet\0A\00", align 1
@.str.29 = private unnamed_addr constant [26 x i8] c"No option name near '%s'\0A\00", align 1
@.str.30 = private unnamed_addr constant [26 x i8] c"Unable to parse '%s': %s\0A\00", align 1
@.str.31 = private unnamed_addr constant [28 x i8] c"Setting '%s' to value '%s'\0A\00", align 1
@.str.32 = private unnamed_addr constant [23 x i8] c"Option '%s' not found\0A\00", align 1
@.str.33 = private unnamed_addr constant [38 x i8] c"Error setting option %s to value %s.\0A\00", align 1
@.str.34 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.35 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.36 = private unnamed_addr constant [48 x i8] c"Not supported option type: %d, option name: %s\0A\00", align 1
@.str.37 = private unnamed_addr constant [28 x i8] c"Invalid separator(s) found.\00", align 1
@.str.38 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"true,y,yes,enable,enabled,on\00", align 1
@.str.40 = private unnamed_addr constant [32 x i8] c"false,n,no,disable,disabled,off\00", align 1
@.str.41 = private unnamed_addr constant [46 x i8] c"Unable to parse option value \22%s\22 as boolean\0A\00", align 1
@.str.42 = private unnamed_addr constant [14 x i8] c"%d%*1[:/]%d%c\00", align 1
@.str.43 = private unnamed_addr constant [37 x i8] c"const_values array too small for %s\0A\00", align 1
@.str.44 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.45 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.46 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.48 = private unnamed_addr constant [35 x i8] c"Unable to parse option value \22%s\22\0A\00", align 1
@.str.49 = private unnamed_addr constant [49 x i8] c"Unable to parse option value \22%s\22 as image size\0A\00", align 1
@.str.50 = private unnamed_addr constant [49 x i8] c"Unable to parse option value \22%s\22 as video rate\0A\00", align 1
@.str.51 = private unnamed_addr constant [71 x i8] c"Value %f for parameter '%s' is not a valid set of 32bit integer flags\0A\00", align 1
@.str.52 = private unnamed_addr constant [13 x i8] c"pixel format\00", align 1
@.str.53 = private unnamed_addr constant [41 x i8] c"Unable to parse option value \22%s\22 as %s\0A\00", align 1
@.str.54 = private unnamed_addr constant [62 x i8] c"Value %d for parameter '%s' out of %s format range [%d - %d]\0A\00", align 1
@.str.55 = private unnamed_addr constant [14 x i8] c"sample format\00", align 1
@.str.56 = private unnamed_addr constant [44 x i8] c"Unable to parse option value \22%s\22 as color\0A\00", align 1
@.str.57 = private unnamed_addr constant [48 x i8] c"The value set by option '%s' is not a %s format\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.63 = private unnamed_addr constant [10 x i8] c"INT64_MAX\00", align 1
@.str.64 = private unnamed_addr constant [10 x i8] c"INT64_MIN\00", align 1
@.str.65 = private unnamed_addr constant [19 x i8] c"%ld:%02d:%02d.%06d\00", align 1
@.str.66 = private unnamed_addr constant [13 x i8] c"%d:%02d.%06d\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"%d.%06d\00", align 1
@.str.68 = private unnamed_addr constant [47 x i8] c"The value for option '%s' is not a %s format.\0A\00", align 1
@.str.69 = private unnamed_addr constant [12 x i8] c"     %-15s \00", align 1
@.str.70 = private unnamed_addr constant [11 x i8] c"  %s%-17s \00", align 1
@.str.71 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.72 = private unnamed_addr constant [7 x i8] c"%-12s \00", align 1
@.str.73 = private unnamed_addr constant [8 x i8] c"<flags>\00", align 1
@.str.74 = private unnamed_addr constant [6 x i8] c"<int>\00", align 1
@.str.75 = private unnamed_addr constant [8 x i8] c"<int64>\00", align 1
@.str.76 = private unnamed_addr constant [9 x i8] c"<uint64>\00", align 1
@.str.77 = private unnamed_addr constant [9 x i8] c"<double>\00", align 1
@.str.78 = private unnamed_addr constant [8 x i8] c"<float>\00", align 1
@.str.79 = private unnamed_addr constant [9 x i8] c"<string>\00", align 1
@.str.80 = private unnamed_addr constant [11 x i8] c"<rational>\00", align 1
@.str.81 = private unnamed_addr constant [9 x i8] c"<binary>\00", align 1
@.str.82 = private unnamed_addr constant [13 x i8] c"<dictionary>\00", align 1
@.str.83 = private unnamed_addr constant [13 x i8] c"<image_size>\00", align 1
@.str.84 = private unnamed_addr constant [13 x i8] c"<video_rate>\00", align 1
@.str.85 = private unnamed_addr constant [10 x i8] c"<pix_fmt>\00", align 1
@.str.86 = private unnamed_addr constant [13 x i8] c"<sample_fmt>\00", align 1
@.str.87 = private unnamed_addr constant [11 x i8] c"<duration>\00", align 1
@.str.88 = private unnamed_addr constant [8 x i8] c"<color>\00", align 1
@.str.89 = private unnamed_addr constant [17 x i8] c"<channel_layout>\00", align 1
@.str.90 = private unnamed_addr constant [10 x i8] c"<boolean>\00", align 1
@.str.91 = private unnamed_addr constant [8 x i8] c"%-12ld \00", align 1
@.str.92 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.93 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@.str.94 = private unnamed_addr constant [8 x i8] c" (from \00", align 1
@.str.95 = private unnamed_addr constant [5 x i8] c" to \00", align 1
@.str.96 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.97 = private unnamed_addr constant [11 x i8] c" (default \00", align 1
@.str.98 = private unnamed_addr constant [4 x i8] c"%lX\00", align 1
@.str.99 = private unnamed_addr constant [5 x i8] c"\22%s\22\00", align 1
@.str.100 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.101 = private unnamed_addr constant [8 x i8] c"INT_MAX\00", align 1
@.str.102 = private unnamed_addr constant [8 x i8] c"INT_MIN\00", align 1
@.str.103 = private unnamed_addr constant [11 x i8] c"UINT32_MAX\00", align 1
@.str.104 = private unnamed_addr constant [8 x i8] c"I64_MAX\00", align 1
@.str.105 = private unnamed_addr constant [8 x i8] c"I64_MIN\00", align 1
@.str.106 = private unnamed_addr constant [8 x i8] c"FLT_MAX\00", align 1
@.str.107 = private unnamed_addr constant [8 x i8] c"FLT_MIN\00", align 1
@.str.108 = private unnamed_addr constant [9 x i8] c"-FLT_MAX\00", align 1
@.str.109 = private unnamed_addr constant [9 x i8] c"-FLT_MIN\00", align 1
@.str.110 = private unnamed_addr constant [8 x i8] c"DBL_MAX\00", align 1
@.str.111 = private unnamed_addr constant [8 x i8] c"DBL_MIN\00", align 1
@.str.112 = private unnamed_addr constant [9 x i8] c"-DBL_MAX\00", align 1
@.str.113 = private unnamed_addr constant [9 x i8] c"-DBL_MIN\00", align 1
@.str.114 = private unnamed_addr constant [3 x i8] c"%g\00", align 1
@.str.115 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.116 = private unnamed_addr constant [60 x i8] c"Missing key or no key/value separator found after key '%s'\0A\00", align 1
@.str.117 = private unnamed_addr constant [43 x i8] c"Setting entry with key '%s' to value '%s'\0A\00", align 1
@.str.118 = private unnamed_addr constant [21 x i8] c"Key '%s' not found.\0A\00", align 1
@.str.119 = private unnamed_addr constant [5 x i8] c" \0A\09\0D\00", align 1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.AVOption* @av_opt_next(i8* readonly, %struct.AVOption* readonly) local_unnamed_addr #0 {
  %3 = icmp eq i8* %0, null
  br i1 %3, label %26, label %4

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to %struct.AVClass**
  %6 = load %struct.AVClass*, %struct.AVClass** %5, align 8
  %7 = icmp eq %struct.AVOption* %1, null
  %8 = icmp ne %struct.AVClass* %6, null
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %19

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %6, i64 0, i32 2
  %12 = load %struct.AVOption*, %struct.AVOption** %11, align 8
  %13 = icmp eq %struct.AVOption* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %12, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  %18 = select i1 %17, %struct.AVOption* null, %struct.AVOption* %12
  br label %26

19:                                               ; preds = %10, %4
  br i1 %7, label %26, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 1, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  %24 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 1
  %25 = select i1 %23, %struct.AVOption* null, %struct.AVOption* %24
  ret %struct.AVOption* %25

26:                                               ; preds = %14, %19, %2
  %27 = phi %struct.AVOption* [ null, %2 ], [ %18, %14 ], [ null, %19 ]
  ret %struct.AVOption* %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_set(i8*, i8*, i8*, i32) local_unnamed_addr #2 {
  %5 = alloca %struct.AVDictionary*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.AVRational, align 4
  %11 = alloca i64, align 8
  %12 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %13 = call %struct.AVOption* @av_opt_find2(i8* %0, i8* %1, i8* null, i32 0, i32 %3, i8** nonnull %9)
  %14 = icmp ne %struct.AVOption* %13, null
  %15 = load i8*, i8** %9, align 8
  %16 = icmp ne i8* %15, null
  %17 = and i1 %14, %16
  br i1 %17, label %18, label %262

18:                                               ; preds = %4
  %19 = icmp ne i8* %2, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %13, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  switch i32 %22, label %262 [
    i32 5, label %23
    i32 12, label %23
    i32 13, label %23
    i32 11, label %23
    i32 15, label %23
    i32 16, label %23
    i32 17, label %23
    i32 18, label %23
  ]

23:                                               ; preds = %20, %20, %20, %20, %20, %20, %20, %20, %18
  %24 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %13, i64 0, i32 7
  %25 = load i32, i32* %24, align 8
  %26 = trunc i32 %25 to i8
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %262, label %28

28:                                               ; preds = %23
  %29 = and i32 %25, 131072
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %13, i64 0, i32 1
  %33 = load i8*, i8** %32, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 24, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i8* %1, i8* %33) #12
  %34 = load i8*, i8** %9, align 8
  br label %35

35:                                               ; preds = %28, %31
  %36 = phi i8* [ %15, %28 ], [ %34, %31 ]
  %37 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %13, i64 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %36, i64 %39
  %41 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %13, i64 0, i32 3
  %42 = load i32, i32* %41, align 4
  switch i32 %42, label %261 [
    i32 18, label %43
    i32 5, label %75
    i32 7, label %80
    i32 0, label %83
    i32 1, label %83
    i32 2, label %83
    i32 9, label %83
    i32 4, label %83
    i32 3, label %83
    i32 6, label %83
    i32 11, label %85
    i32 14, label %100
    i32 12, label %114
    i32 13, label %157
    i32 15, label %200
    i32 16, label %228
    i32 17, label %234
    i32 8, label %247
  ]

43:                                               ; preds = %35
  %44 = bitcast i8* %40 to i32*
  %45 = icmp eq i8* %2, null
  br i1 %45, label %262, label %46

46:                                               ; preds = %43
  %47 = call i32 @strcmp(i8* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i64 0, i64 0)) #13
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %63, label %49

49:                                               ; preds = %46
  %50 = call i32 @av_match_name(i8* nonnull %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i64 0, i64 0)) #12
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %63

52:                                               ; preds = %49
  %53 = call i32 @av_match_name(i8* nonnull %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.40, i64 0, i64 0)) #12
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %63

55:                                               ; preds = %52
  %56 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  store i8* null, i8** %8, align 8
  %57 = call i64 @strtol(i8* nonnull %2, i8** nonnull %8, i32 10) #12
  %58 = trunc i64 %57 to i32
  %59 = call i64 @strlen(i8* nonnull %2) #13
  %60 = getelementptr inbounds i8, i8* %2, i64 %59
  %61 = load i8*, i8** %8, align 8
  %62 = icmp eq i8* %60, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  br i1 %62, label %63, label %74

63:                                               ; preds = %55, %52, %49, %46
  %64 = phi i32 [ %58, %55 ], [ -1, %46 ], [ 1, %49 ], [ 0, %52 ]
  %65 = sitofp i32 %64 to double
  %66 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %13, i64 0, i32 5
  %67 = load double, double* %66, align 8
  %68 = fcmp nsz ogt double %67, %65
  br i1 %68, label %74, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %13, i64 0, i32 6
  %71 = load double, double* %70, align 8
  %72 = fcmp nsz olt double %71, %65
  br i1 %72, label %74, label %73

73:                                               ; preds = %69
  store i32 %64, i32* %44, align 4
  br label %262

74:                                               ; preds = %69, %63, %55
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.41, i64 0, i64 0), i8* nonnull %2) #12
  br label %262

75:                                               ; preds = %35
  %76 = bitcast i8* %40 to i8**
  call void @av_freep(i8* %40) #12
  %77 = call noalias i8* @av_strdup(i8* %2) #12
  store i8* %77, i8** %76, align 8
  %78 = icmp eq i8* %77, null
  %79 = select i1 %78, i32 -12, i32 0
  br label %262

80:                                               ; preds = %35
  %81 = bitcast i8* %40 to i8**
  %82 = call fastcc i32 @set_string_binary(i8* %2, i8** %81)
  br label %262

83:                                               ; preds = %35, %35, %35, %35, %35, %35, %35
  %84 = call fastcc i32 @set_string_number(i8* %0, i8* %36, %struct.AVOption* nonnull %13, i8* %2, i8* %40)
  br label %262

85:                                               ; preds = %35
  %86 = bitcast i8* %40 to i32*
  %87 = icmp eq i8* %2, null
  br i1 %87, label %91, label %88

88:                                               ; preds = %85
  %89 = call i32 @strcmp(i8* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #13
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %88, %85
  %92 = getelementptr inbounds i8, i8* %40, i64 4
  %93 = bitcast i8* %92 to i32*
  store i32 0, i32* %93, align 4
  store i32 0, i32* %86, align 4
  br label %262

94:                                               ; preds = %88
  %95 = getelementptr inbounds i8, i8* %40, i64 4
  %96 = bitcast i8* %95 to i32*
  %97 = call i32 @av_parse_video_size(i32* %86, i32* %96, i8* nonnull %2) #12
  %98 = icmp slt i32 %97, 0
  br i1 %98, label %99, label %262

99:                                               ; preds = %94
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i64 0, i64 0), i8* nonnull %2) #12
  br label %262

100:                                              ; preds = %35
  %101 = bitcast %struct.AVRational* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #12
  %102 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %10, i64 0, i32 0
  store i32 -1431655766, i32* %102, align 4
  %103 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %10, i64 0, i32 1
  store i32 -1431655766, i32* %103, align 4
  %104 = call i32 @av_parse_video_rate(%struct.AVRational* nonnull %10, i8* %2) #12
  %105 = icmp slt i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %100
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.50, i64 0, i64 0), i8* %2) #12
  br label %112

107:                                              ; preds = %100
  %108 = load i32, i32* %103, align 4
  %109 = load i32, i32* %102, align 4
  %110 = sext i32 %109 to i64
  %111 = call fastcc i32 @write_number(i8* %0, %struct.AVOption* nonnull %13, i8* %40, double 1.000000e+00, i32 %108, i64 %110)
  br label %112

112:                                              ; preds = %106, %107
  %113 = phi i32 [ %111, %107 ], [ %104, %106 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #12
  br label %262

114:                                              ; preds = %35
  %115 = icmp eq i8* %2, null
  br i1 %115, label %133, label %116

116:                                              ; preds = %114
  %117 = call i32 @strcmp(i8* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #13
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %133, label %119

119:                                              ; preds = %116
  %120 = call i32 @av_get_pix_fmt(i8* nonnull %2) #12, !callees !2
  %121 = icmp eq i32 %120, -1
  br i1 %121, label %122, label %133

122:                                              ; preds = %119
  %123 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %124 = call i64 @strtol(i8* nonnull %2, i8** nonnull %7, i32 0) #12
  %125 = trunc i64 %124 to i32
  %126 = load i8*, i8** %7, align 8
  %127 = load i8, i8* %126, align 1
  %128 = icmp eq i8 %127, 0
  %129 = icmp ult i32 %125, 198
  %130 = and i1 %129, %128
  br i1 %130, label %132, label %131

131:                                              ; preds = %122
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.53, i64 0, i64 0), i8* nonnull %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i64 0, i64 0)) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #12
  br label %262

132:                                              ; preds = %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #12
  br label %133

133:                                              ; preds = %132, %119, %116, %114
  %134 = phi i32 [ %125, %132 ], [ %120, %119 ], [ -1, %116 ], [ -1, %114 ]
  %135 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %13, i64 0, i32 5
  %136 = load double, double* %135, align 8
  %137 = fcmp nsz ogt double %136, -1.000000e+00
  %138 = select i1 %137, double %136, double -1.000000e+00
  %139 = fptosi double %138 to i32
  %140 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %13, i64 0, i32 6
  %141 = load double, double* %140, align 8
  %142 = fcmp nsz ogt double %141, 1.970000e+02
  %143 = select i1 %142, double 1.970000e+02, double %141
  %144 = fptosi double %143 to i32
  %145 = or i32 %144, %139
  %146 = icmp eq i32 %145, 0
  %147 = select i1 %146, i32 -1, i32 %139
  %148 = select i1 %146, i32 197, i32 %144
  %149 = icmp slt i32 %134, %147
  %150 = icmp sgt i32 %134, %148
  %151 = or i1 %149, %150
  br i1 %151, label %152, label %155

152:                                              ; preds = %133
  %153 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %13, i64 0, i32 0
  %154 = load i8*, i8** %153, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.54, i64 0, i64 0), i32 %134, i8* %154, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i64 0, i64 0), i32 %147, i32 %148) #12
  br label %262

155:                                              ; preds = %133
  %156 = bitcast i8* %40 to i32*
  store i32 %134, i32* %156, align 4
  br label %262

157:                                              ; preds = %35
  %158 = icmp eq i8* %2, null
  br i1 %158, label %176, label %159

159:                                              ; preds = %157
  %160 = call i32 @strcmp(i8* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #13
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %176, label %162

162:                                              ; preds = %159
  %163 = call i32 @av_get_sample_fmt(i8* nonnull %2) #12, !callees !2
  %164 = icmp eq i32 %163, -1
  br i1 %164, label %165, label %176

165:                                              ; preds = %162
  %166 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %167 = call i64 @strtol(i8* nonnull %2, i8** nonnull %6, i32 0) #12
  %168 = trunc i64 %167 to i32
  %169 = load i8*, i8** %6, align 8
  %170 = load i8, i8* %169, align 1
  %171 = icmp eq i8 %170, 0
  %172 = icmp ult i32 %168, 12
  %173 = and i1 %172, %171
  br i1 %173, label %175, label %174

174:                                              ; preds = %165
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.53, i64 0, i64 0), i8* nonnull %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.55, i64 0, i64 0)) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #12
  br label %262

175:                                              ; preds = %165
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #12
  br label %176

176:                                              ; preds = %175, %162, %159, %157
  %177 = phi i32 [ %168, %175 ], [ %163, %162 ], [ -1, %159 ], [ -1, %157 ]
  %178 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %13, i64 0, i32 5
  %179 = load double, double* %178, align 8
  %180 = fcmp nsz ogt double %179, -1.000000e+00
  %181 = select i1 %180, double %179, double -1.000000e+00
  %182 = fptosi double %181 to i32
  %183 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %13, i64 0, i32 6
  %184 = load double, double* %183, align 8
  %185 = fcmp nsz ogt double %184, 1.100000e+01
  %186 = select i1 %185, double 1.100000e+01, double %184
  %187 = fptosi double %186 to i32
  %188 = or i32 %187, %182
  %189 = icmp eq i32 %188, 0
  %190 = select i1 %189, i32 -1, i32 %182
  %191 = select i1 %189, i32 11, i32 %187
  %192 = icmp slt i32 %177, %190
  %193 = icmp sgt i32 %177, %191
  %194 = or i1 %192, %193
  br i1 %194, label %195, label %198

195:                                              ; preds = %176
  %196 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %13, i64 0, i32 0
  %197 = load i8*, i8** %196, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.54, i64 0, i64 0), i32 %177, i8* %197, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.55, i64 0, i64 0), i32 %190, i32 %191) #12
  br label %262

198:                                              ; preds = %176
  %199 = bitcast i8* %40 to i32*
  store i32 %177, i32* %199, align 4
  br label %262

200:                                              ; preds = %35
  %201 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %201) #12
  store i64 0, i64* %11, align 8
  br i1 %19, label %202, label %208

202:                                              ; preds = %200
  %203 = call i32 @av_parse_time(i64* nonnull %11, i8* nonnull %2, i32 1) #12
  %204 = icmp slt i32 %203, 0
  br i1 %204, label %207, label %205

205:                                              ; preds = %202
  %206 = load i64, i64* %11, align 8
  br label %208

207:                                              ; preds = %202
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %2) #12
  br label %226

208:                                              ; preds = %205, %200
  %209 = phi i64 [ %206, %205 ], [ 0, %200 ]
  %210 = sitofp i64 %209 to double
  %211 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %13, i64 0, i32 5
  %212 = load double, double* %211, align 8
  %213 = fcmp nsz ogt double %212, %210
  %214 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %13, i64 0, i32 6
  %215 = load double, double* %214, align 8
  %216 = fcmp nsz olt double %215, %210
  %217 = or i1 %213, %216
  br i1 %217, label %218, label %224

218:                                              ; preds = %208
  %219 = fdiv nsz double %210, 1.000000e+06
  %220 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %13, i64 0, i32 0
  %221 = load i8*, i8** %220, align 8
  %222 = fdiv nsz double %212, 1.000000e+06
  %223 = fdiv nsz double %215, 1.000000e+06
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2, i64 0, i64 0), double %219, i8* %221, double %222, double %223) #12
  br label %226

224:                                              ; preds = %208
  %225 = bitcast i8* %40 to i64*
  store i64 %209, i64* %225, align 8
  br label %226

226:                                              ; preds = %224, %218, %207
  %227 = phi i32 [ %203, %207 ], [ -34, %218 ], [ 0, %224 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %201) #12
  br label %262

228:                                              ; preds = %35
  %229 = icmp eq i8* %2, null
  br i1 %229, label %262, label %230

230:                                              ; preds = %228
  %231 = call i32 @av_parse_color(i8* %40, i8* nonnull %2, i32 -1, i8* %0) #12
  %232 = icmp slt i32 %231, 0
  br i1 %232, label %233, label %262

233:                                              ; preds = %230
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.56, i64 0, i64 0), i8* nonnull %2) #12
  br label %262

234:                                              ; preds = %35
  br i1 %19, label %235, label %238

235:                                              ; preds = %234
  %236 = call i32 @strcmp(i8* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #13
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %240

238:                                              ; preds = %235, %234
  %239 = bitcast i8* %40 to i64*
  store i64 0, i64* %239, align 8
  br label %261

240:                                              ; preds = %235
  %241 = call i64 @av_get_channel_layout(i8* nonnull %2) #12
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %240
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.4, i64 0, i64 0), i8* nonnull %2) #12
  br label %244

244:                                              ; preds = %240, %243
  %245 = phi i32 [ 0, %240 ], [ -22, %243 ]
  %246 = bitcast i8* %40 to i64*
  store i64 %241, i64* %246, align 8
  br label %262

247:                                              ; preds = %35
  %248 = bitcast %struct.AVDictionary** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %248) #12
  store %struct.AVDictionary* null, %struct.AVDictionary** %5, align 8
  %249 = icmp eq i8* %2, null
  br i1 %249, label %254, label %250

250:                                              ; preds = %247
  %251 = call i32 @av_dict_parse_string(%struct.AVDictionary** nonnull %5, i8* nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0), i32 0) #12
  %252 = icmp slt i32 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %250
  call void @av_dict_free(%struct.AVDictionary** nonnull %5) #12
  br label %259

254:                                              ; preds = %250, %247
  %255 = bitcast i8* %40 to %struct.AVDictionary**
  call void @av_dict_free(%struct.AVDictionary** %255) #12
  %256 = bitcast %struct.AVDictionary** %5 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = bitcast i8* %40 to i64*
  store i64 %257, i64* %258, align 8
  br label %259

259:                                              ; preds = %253, %254
  %260 = phi i32 [ 0, %254 ], [ %251, %253 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %248) #12
  br label %262

261:                                              ; preds = %35, %238
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0)) #12
  br label %262

262:                                              ; preds = %233, %230, %228, %198, %195, %174, %155, %152, %131, %99, %94, %91, %74, %73, %43, %23, %20, %4, %261, %259, %244, %226, %112, %83, %80, %75
  %263 = phi i32 [ -22, %261 ], [ %260, %259 ], [ %245, %244 ], [ %227, %226 ], [ %113, %112 ], [ %84, %83 ], [ %82, %80 ], [ %79, %75 ], [ -1414549496, %4 ], [ -22, %20 ], [ -22, %23 ], [ -22, %74 ], [ 0, %73 ], [ 0, %43 ], [ 0, %91 ], [ %97, %99 ], [ %97, %94 ], [ -34, %152 ], [ 0, %155 ], [ -22, %131 ], [ -34, %195 ], [ 0, %198 ], [ -22, %174 ], [ 0, %228 ], [ %231, %233 ], [ %231, %230 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  ret i32 %263
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.AVOption* @av_opt_find2(i8*, i8* readonly, i8* readonly, i32, i32, i8**) local_unnamed_addr #2 {
  %7 = alloca i8*, align 8
  %8 = alloca %struct.AVClass*, align 8
  %9 = icmp eq i8* %0, null
  br i1 %9, label %118, label %10

10:                                               ; preds = %6
  %11 = bitcast i8* %0 to %struct.AVClass**
  %12 = load %struct.AVClass*, %struct.AVClass** %11, align 8
  %13 = icmp eq %struct.AVClass* %12, null
  br i1 %13, label %118, label %14

14:                                               ; preds = %10
  %15 = and i32 %4, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %63, label %17

17:                                               ; preds = %14
  %18 = and i32 %4, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %24

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %12, i64 0, i32 6
  %22 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %21, align 8
  %23 = icmp eq i8* (i8*, i8*)* %22, null
  br i1 %23, label %63, label %50

24:                                               ; preds = %17
  %25 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #12
  store i8* null, i8** %7, align 8
  %26 = bitcast %struct.AVClass** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  store %struct.AVClass* inttoptr (i64 -6148914691236517206 to %struct.AVClass*), %struct.AVClass** %8, align 8
  %27 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %12, i64 0, i32 11
  %28 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %12, i64 0, i32 7
  %29 = bitcast i8** %7 to %struct.AVClass**
  br label %30

30:                                               ; preds = %45, %24
  %31 = load %struct.AVClass* (i8**)*, %struct.AVClass* (i8**)** %27, align 8
  %32 = icmp eq %struct.AVClass* (i8**)* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = call %struct.AVClass* %31(i8** nonnull %7) #12
  br label %42

35:                                               ; preds = %30
  %36 = load %struct.AVClass* (%struct.AVClass*)*, %struct.AVClass* (%struct.AVClass*)** %28, align 8
  %37 = icmp eq %struct.AVClass* (%struct.AVClass*)* %36, null
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  store %struct.AVClass* null, %struct.AVClass** %8, align 8
  br label %48

39:                                               ; preds = %35
  %40 = load %struct.AVClass*, %struct.AVClass** %29, align 8
  %41 = call %struct.AVClass* %36(%struct.AVClass* %40) #12
  store %struct.AVClass* %41, %struct.AVClass** %29, align 8
  br label %42

42:                                               ; preds = %33, %39
  %43 = phi %struct.AVClass* [ %34, %33 ], [ %41, %39 ]
  store %struct.AVClass* %43, %struct.AVClass** %8, align 8
  %44 = icmp eq %struct.AVClass* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %42
  %46 = call %struct.AVOption* @av_opt_find2(i8* nonnull %26, i8* %1, i8* %2, i32 %3, i32 %4, i8** null)
  %47 = icmp eq %struct.AVOption* %46, null
  br i1 %47, label %30, label %49

48:                                               ; preds = %42, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #12
  br label %63

49:                                               ; preds = %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #12
  br label %118

50:                                               ; preds = %20, %58
  %51 = phi i8* (i8*, i8*)* [ %61, %58 ], [ %22, %20 ]
  %52 = phi i8* [ %53, %58 ], [ null, %20 ]
  %53 = tail call i8* %51(i8* nonnull %0, i8* %52) #12
  %54 = icmp eq i8* %53, null
  br i1 %54, label %63, label %55

55:                                               ; preds = %50
  %56 = tail call %struct.AVOption* @av_opt_find2(i8* nonnull %53, i8* %1, i8* %2, i32 %3, i32 %4, i8** %5)
  %57 = icmp eq %struct.AVOption* %56, null
  br i1 %57, label %58, label %118

58:                                               ; preds = %55
  %59 = load %struct.AVClass*, %struct.AVClass** %11, align 8
  %60 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %59, i64 0, i32 6
  %61 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %60, align 8
  %62 = icmp eq i8* (i8*, i8*)* %61, null
  br i1 %62, label %63, label %50

63:                                               ; preds = %50, %58, %20, %48, %14
  %64 = load %struct.AVClass*, %struct.AVClass** %11, align 8
  %65 = icmp ne %struct.AVClass* %64, null
  %66 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %64, i64 0, i32 2
  %67 = icmp eq i8* %2, null
  br label %68

68:                                               ; preds = %102, %63
  %69 = phi %struct.AVOption* [ null, %63 ], [ %89, %102 ]
  %70 = icmp eq %struct.AVOption* %69, null
  %71 = and i1 %70, %65
  br i1 %71, label %72, label %79

72:                                               ; preds = %68
  %73 = load %struct.AVOption*, %struct.AVOption** %66, align 8
  %74 = icmp eq %struct.AVOption* %73, null
  br i1 %74, label %79, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %73, i64 0, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = icmp eq i8* %77, null
  br i1 %78, label %118, label %87

79:                                               ; preds = %72, %68
  br i1 %70, label %118, label %80

80:                                               ; preds = %79
  %81 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %69, i64 1, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  %84 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %69, i64 1
  %85 = icmp eq %struct.AVOption* %84, null
  %86 = or i1 %85, %83
  br i1 %86, label %118, label %87

87:                                               ; preds = %80, %75
  %88 = phi i8* [ %77, %75 ], [ %82, %80 ]
  %89 = phi %struct.AVOption* [ %73, %75 ], [ %84, %80 ]
  %90 = call i32 @strcmp(i8* nonnull %88, i8* %1) #13
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %102

92:                                               ; preds = %87
  %93 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %89, i64 0, i32 7
  %94 = load i32, i32* %93, align 8
  %95 = and i32 %94, %3
  %96 = icmp eq i32 %95, %3
  br i1 %96, label %97, label %102

97:                                               ; preds = %92
  %98 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %89, i64 0, i32 3
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 10
  br i1 %67, label %101, label %103

101:                                              ; preds = %97
  br i1 %100, label %102, label %111

102:                                              ; preds = %101, %108, %104, %87, %103, %92
  br label %68

103:                                              ; preds = %97
  br i1 %100, label %104, label %102

104:                                              ; preds = %103
  %105 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %89, i64 0, i32 8
  %106 = load i8*, i8** %105, align 8
  %107 = icmp eq i8* %106, null
  br i1 %107, label %102, label %108

108:                                              ; preds = %104
  %109 = call i32 @strcmp(i8* nonnull %106, i8* nonnull %2) #13
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %102

111:                                              ; preds = %108, %101
  %112 = icmp eq i8** %5, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %111
  %114 = and i32 %4, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  store i8* %0, i8** %5, align 8
  br label %118

117:                                              ; preds = %113
  store i8* null, i8** %5, align 8
  br label %118

118:                                              ; preds = %55, %75, %80, %79, %49, %117, %116, %111, %10, %6
  %119 = phi %struct.AVOption* [ %46, %49 ], [ null, %6 ], [ null, %10 ], [ %89, %111 ], [ %89, %116 ], [ %89, %117 ], [ null, %79 ], [ null, %80 ], [ null, %75 ], [ %56, %55 ]
  ret %struct.AVOption* %119
}

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @set_string_binary(i8* readonly, i8**) unnamed_addr #2 {
  %3 = getelementptr inbounds i8*, i8** %1, i64 1
  %4 = bitcast i8** %3 to i32*
  %5 = bitcast i8** %1 to i8*
  tail call void @av_freep(i8* %5) #12
  store i32 0, i32* %4, align 4
  %6 = icmp eq i8* %0, null
  br i1 %6, label %74, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @strlen(i8* nonnull %0) #13
  %9 = trunc i64 %8 to i32
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %74, label %11

11:                                               ; preds = %7
  %12 = and i32 %9, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %74

14:                                               ; preds = %11
  %15 = sdiv i32 %9, 2
  %16 = sext i32 %15 to i64
  %17 = tail call noalias i8* @av_malloc(i64 %16) #12
  %18 = icmp eq i8* %17, null
  br i1 %18, label %74, label %19

19:                                               ; preds = %14
  %20 = load i8, i8* %0, align 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %73, label %22

22:                                               ; preds = %19, %66
  %23 = phi i8 [ %71, %66 ], [ %20, %19 ]
  %24 = phi i8* [ %70, %66 ], [ %17, %19 ]
  %25 = phi i8* [ %44, %66 ], [ %0, %19 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 1
  %27 = sext i8 %23 to i32
  %28 = add i8 %23, -48
  %29 = icmp ult i8 %28, 10
  br i1 %29, label %30, label %32

30:                                               ; preds = %22
  %31 = add nsw i32 %27, -48
  br label %42

32:                                               ; preds = %22
  %33 = add i8 %23, -97
  %34 = icmp ult i8 %33, 6
  br i1 %34, label %35, label %37

35:                                               ; preds = %32
  %36 = add nsw i32 %27, -87
  br label %42

37:                                               ; preds = %32
  %38 = add i8 %23, -65
  %39 = icmp ult i8 %38, 6
  %40 = add nsw i32 %27, -55
  %41 = select i1 %39, i32 %40, i32 -1
  br label %42

42:                                               ; preds = %30, %35, %37
  %43 = phi i32 [ %41, %37 ], [ %31, %30 ], [ %36, %35 ]
  %44 = getelementptr inbounds i8, i8* %25, i64 2
  %45 = load i8, i8* %26, align 1
  %46 = sext i8 %45 to i32
  %47 = add i8 %45, -48
  %48 = icmp ult i8 %47, 10
  br i1 %48, label %49, label %51

49:                                               ; preds = %42
  %50 = add nsw i32 %46, -48
  br label %61

51:                                               ; preds = %42
  %52 = add i8 %45, -97
  %53 = icmp ult i8 %52, 6
  br i1 %53, label %54, label %56

54:                                               ; preds = %51
  %55 = add nsw i32 %46, -87
  br label %61

56:                                               ; preds = %51
  %57 = add i8 %45, -65
  %58 = icmp ult i8 %57, 6
  %59 = add nsw i32 %46, -55
  %60 = select i1 %58, i32 %59, i32 -1
  br label %61

61:                                               ; preds = %49, %54, %56
  %62 = phi i32 [ %60, %56 ], [ %50, %49 ], [ %55, %54 ]
  %63 = or i32 %62, %43
  %64 = icmp slt i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %61
  tail call void @av_free(i8* nonnull %17) #12
  br label %74

66:                                               ; preds = %61
  %67 = shl nsw i32 %43, 4
  %68 = or i32 %62, %67
  %69 = trunc i32 %68 to i8
  %70 = getelementptr inbounds i8, i8* %24, i64 1
  store i8 %69, i8* %24, align 1
  %71 = load i8, i8* %44, align 1
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %22

73:                                               ; preds = %66, %19
  store i8* %17, i8** %1, align 8
  store i32 %15, i32* %4, align 4
  br label %74

74:                                               ; preds = %65, %14, %11, %2, %7, %73
  %75 = phi i32 [ 0, %73 ], [ 0, %7 ], [ 0, %2 ], [ -22, %11 ], [ -12, %14 ], [ -22, %65 ]
  ret i32 %75
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @set_string_number(i8*, i8*, %struct.AVOption* nocapture readonly, i8*, i8* nocapture) unnamed_addr #2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  %9 = alloca [256 x i8], align 16
  %10 = alloca double, align 8
  %11 = alloca [64 x double], align 16
  %12 = alloca [64 x i8*], align 16
  %13 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %2, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  switch i32 %14, label %28 [
    i32 6, label %15
    i32 14, label %15
  ]

15:                                               ; preds = %5, %5
  %16 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #12
  store i32 -1431655766, i32* %6, align 4
  %17 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #12
  store i32 -1431655766, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #12
  store i8 -86, i8* %8, align 1
  %18 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i64 0, i64 0), i32* nonnull %6, i32* nonnull %7, i8* nonnull %8) #12
  %19 = icmp eq i32 %18, 2
  br i1 %19, label %20, label %26

20:                                               ; preds = %15
  %21 = load i32, i32* %7, align 4
  %22 = load i32, i32* %6, align 4
  %23 = sext i32 %22 to i64
  %24 = call fastcc i32 @write_number(i8* %0, %struct.AVOption* %2, i8* %4, double 1.000000e+00, i32 %21, i64 %23)
  %25 = icmp sgt i32 %24, -1
  br i1 %25, label %27, label %26

26:                                               ; preds = %15, %20
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #12
  br label %28

27:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #12
  br label %233

28:                                               ; preds = %26, %5
  %29 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %30 = bitcast double* %10 to i8*
  %31 = bitcast [64 x double]* %11 to i8*
  %32 = bitcast [64 x i8*]* %12 to i8*
  %33 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %2, i64 0, i32 7
  %34 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %2, i64 0, i32 8
  %35 = icmp eq i8* %1, null
  %36 = bitcast i8* %1 to %struct.AVClass**
  %37 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %2, i64 0, i32 4, i32 0
  %38 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %2, i64 0, i32 4
  %39 = bitcast %union.anon* %38 to double*
  %40 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %2, i64 0, i32 6
  %41 = bitcast double* %40 to i64*
  %42 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %2, i64 0, i32 5
  %43 = bitcast double* %42 to i64*
  %44 = getelementptr inbounds [64 x i8*], [64 x i8*]* %12, i64 0, i64 0
  %45 = getelementptr inbounds [64 x double], [64 x double]* %11, i64 0, i64 0
  %46 = bitcast i8* %4 to i32*
  br label %47

47:                                               ; preds = %232, %28
  %48 = phi i8* [ %3, %28 ], [ %226, %232 ]
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %29) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %29, i8 -86, i64 256, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  store double 0xFFFFFFFFFFFFFFFF, double* %10, align 8
  %49 = load i32, i32* %13, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %75

51:                                               ; preds = %47
  %52 = load i8, i8* %48, align 1
  switch i8 %52, label %56 [
    i8 43, label %53
    i8 45, label %53
  ]

53:                                               ; preds = %51, %51
  %54 = getelementptr inbounds i8, i8* %48, i64 1
  %55 = sext i8 %52 to i32
  br label %56

56:                                               ; preds = %51, %53
  %57 = phi i8* [ %54, %53 ], [ %48, %51 ]
  %58 = phi i32 [ %55, %53 ], [ 0, %51 ]
  br label %59

59:                                               ; preds = %250, %56
  %60 = phi i64 [ 0, %56 ], [ %252, %250 ]
  %61 = getelementptr inbounds i8, i8* %57, i64 %60
  %62 = load i8, i8* %61, align 1
  switch i8 %62, label %63 [
    i8 0, label %68
    i8 43, label %68
    i8 45, label %68
  ]

63:                                               ; preds = %59
  %64 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 %60
  store i8 %62, i8* %64, align 1
  %65 = add nuw nsw i64 %60, 1
  %66 = getelementptr inbounds i8, i8* %57, i64 %65
  %67 = load i8, i8* %66, align 1
  switch i8 %67, label %235 [
    i8 0, label %68
    i8 43, label %68
    i8 45, label %68
  ]

68:                                               ; preds = %245, %245, %245, %240, %240, %240, %235, %235, %235, %63, %63, %63, %59, %59, %59
  %69 = phi i64 [ %60, %59 ], [ %60, %59 ], [ %60, %59 ], [ %65, %63 ], [ %65, %63 ], [ %65, %63 ], [ %237, %235 ], [ %237, %235 ], [ %237, %235 ], [ %242, %240 ], [ %242, %240 ], [ %242, %240 ], [ %247, %245 ], [ %247, %245 ], [ %247, %245 ]
  %70 = trunc i64 %69 to i32
  br label %71

71:                                               ; preds = %250, %68
  %72 = phi i32 [ %70, %68 ], [ 255, %250 ]
  %73 = phi i64 [ %69, %68 ], [ 255, %250 ]
  %74 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 %73
  store i8 0, i8* %74, align 1
  br label %75

75:                                               ; preds = %71, %47
  %76 = phi i8* [ %57, %71 ], [ %48, %47 ]
  %77 = phi i32 [ %72, %71 ], [ 0, %47 ]
  %78 = phi i32 [ %58, %71 ], [ 0, %47 ]
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %31) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 -1, i64 512, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %32) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %32, i8 -86, i64 512, i1 false)
  %79 = load i32, i32* %33, align 8
  %80 = lshr i32 %79, 18
  %81 = and i32 %80, 1
  %82 = icmp ne i32 %77, 0
  %83 = select i1 %82, i8* %29, i8* %76
  %84 = load i8*, i8** %34, align 8
  %85 = call %struct.AVOption* @av_opt_find2(i8* %1, i8* %83, i8* %84, i32 0, i32 %81, i8** null) #12
  %86 = icmp eq %struct.AVOption* %85, null
  br i1 %86, label %95, label %87

87:                                               ; preds = %75
  %88 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %85, i64 0, i32 3
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 10
  br i1 %90, label %91, label %95

91:                                               ; preds = %87
  %92 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %85, i64 0, i32 4, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = sitofp i64 %93 to double
  store double %94, double* %10, align 8
  br label %203

95:                                               ; preds = %75, %87
  %96 = load i8*, i8** %34, align 8
  %97 = icmp eq i8* %96, null
  %98 = or i1 %97, %35
  br i1 %98, label %161, label %99

99:                                               ; preds = %95
  %100 = load %struct.AVClass*, %struct.AVClass** %36, align 8
  %101 = icmp ne %struct.AVClass* %100, null
  %102 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %100, i64 0, i32 2
  br label %103

103:                                              ; preds = %157, %99
  %104 = phi %struct.AVOption* [ %126, %157 ], [ null, %99 ]
  %105 = phi i32 [ %159, %157 ], [ 0, %99 ]
  br label %106

106:                                              ; preds = %137, %103
  %107 = phi %struct.AVOption* [ %104, %103 ], [ %126, %137 ]
  %108 = icmp eq %struct.AVOption* %107, null
  %109 = and i1 %108, %101
  br i1 %109, label %110, label %117

110:                                              ; preds = %106
  %111 = load %struct.AVOption*, %struct.AVOption** %102, align 8
  %112 = icmp eq %struct.AVOption* %111, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %111, i64 0, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = icmp eq i8* %115, null
  br i1 %116, label %161, label %125

117:                                              ; preds = %110, %106
  br i1 %108, label %161, label %118

118:                                              ; preds = %117
  %119 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %107, i64 1, i32 0
  %120 = load i8*, i8** %119, align 8
  %121 = icmp eq i8* %120, null
  %122 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %107, i64 1
  %123 = icmp eq %struct.AVOption* %122, null
  %124 = or i1 %123, %121
  br i1 %124, label %161, label %125

125:                                              ; preds = %118, %113
  %126 = phi %struct.AVOption* [ %111, %113 ], [ %122, %118 ]
  %127 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %126, i64 0, i32 3
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 10
  br i1 %129, label %130, label %137

130:                                              ; preds = %125
  %131 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %126, i64 0, i32 8
  %132 = load i8*, i8** %131, align 8
  %133 = icmp eq i8* %132, null
  br i1 %133, label %137, label %134

134:                                              ; preds = %130
  %135 = call i32 @strcmp(i8* nonnull %132, i8* nonnull %96) #13
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %138, label %137

137:                                              ; preds = %134, %130, %125
  br label %106

138:                                              ; preds = %134
  %139 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %126, i64 0, i32 3
  %140 = icmp ugt i32 %105, 57
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.43, i64 0, i64 0), i8* nonnull %96) #12
  br label %201

142:                                              ; preds = %138
  %143 = bitcast %struct.AVOption* %126 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = zext i32 %105 to i64
  %146 = getelementptr inbounds [64 x i8*], [64 x i8*]* %12, i64 0, i64 %145
  %147 = bitcast i8** %146 to i64*
  store i64 %144, i64* %147, align 8
  %148 = load i32, i32* %139, align 4
  switch i32 %148, label %153 [
    i32 2, label %149
    i32 9, label %149
    i32 10, label %149
    i32 0, label %149
    i32 1, label %149
  ]

149:                                              ; preds = %142, %142, %142, %142, %142
  %150 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %126, i64 0, i32 4, i32 0
  %151 = load i64, i64* %150, align 8
  %152 = sitofp i64 %151 to double
  br label %157

153:                                              ; preds = %142
  %154 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %126, i64 0, i32 4
  %155 = bitcast %union.anon* %154 to double*
  %156 = load double, double* %155, align 8
  br label %157

157:                                              ; preds = %153, %149
  %158 = phi double [ %152, %149 ], [ %156, %153 ]
  %159 = add nuw nsw i32 %105, 1
  %160 = getelementptr inbounds [64 x double], [64 x double]* %11, i64 0, i64 %145
  store double %158, double* %160, align 8
  br label %103

161:                                              ; preds = %117, %118, %113, %95
  %162 = phi i32 [ 0, %95 ], [ %105, %113 ], [ %105, %118 ], [ %105, %117 ]
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds [64 x i8*], [64 x i8*]* %12, i64 0, i64 %163
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i64 0, i64 0), i8** %164, align 8
  %165 = load i32, i32* %13, align 4
  switch i32 %165, label %169 [
    i32 2, label %166
    i32 9, label %166
    i32 10, label %166
    i32 0, label %166
    i32 1, label %166
  ]

166:                                              ; preds = %161, %161, %161, %161, %161
  %167 = load i64, i64* %37, align 8
  %168 = sitofp i64 %167 to double
  br label %171

169:                                              ; preds = %161
  %170 = load double, double* %39, align 8
  br label %171

171:                                              ; preds = %169, %166
  %172 = phi double [ %168, %166 ], [ %170, %169 ]
  %173 = add nuw nsw i32 %162, 1
  %174 = getelementptr inbounds [64 x double], [64 x double]* %11, i64 0, i64 %163
  store double %172, double* %174, align 8
  %175 = zext i32 %173 to i64
  %176 = getelementptr inbounds [64 x i8*], [64 x i8*]* %12, i64 0, i64 %175
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i64 0, i64 0), i8** %176, align 8
  %177 = load i64, i64* %41, align 8
  %178 = add nuw nsw i32 %162, 2
  %179 = getelementptr inbounds [64 x double], [64 x double]* %11, i64 0, i64 %175
  %180 = bitcast double* %179 to i64*
  store i64 %177, i64* %180, align 8
  %181 = zext i32 %178 to i64
  %182 = getelementptr inbounds [64 x i8*], [64 x i8*]* %12, i64 0, i64 %181
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i64 0, i64 0), i8** %182, align 8
  %183 = load i64, i64* %43, align 8
  %184 = add nuw nsw i32 %162, 3
  %185 = getelementptr inbounds [64 x double], [64 x double]* %11, i64 0, i64 %181
  %186 = bitcast double* %185 to i64*
  store i64 %183, i64* %186, align 8
  %187 = zext i32 %184 to i64
  %188 = getelementptr inbounds [64 x i8*], [64 x i8*]* %12, i64 0, i64 %187
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8** %188, align 8
  %189 = add nuw nsw i32 %162, 4
  %190 = getelementptr inbounds [64 x double], [64 x double]* %11, i64 0, i64 %187
  store double 0.000000e+00, double* %190, align 8
  %191 = zext i32 %189 to i64
  %192 = getelementptr inbounds [64 x i8*], [64 x i8*]* %12, i64 0, i64 %191
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i64 0, i64 0), i8** %192, align 8
  %193 = add nuw nsw i32 %162, 5
  %194 = getelementptr inbounds [64 x double], [64 x double]* %11, i64 0, i64 %191
  store double -1.000000e+00, double* %194, align 8
  %195 = zext i32 %193 to i64
  %196 = getelementptr inbounds [64 x i8*], [64 x i8*]* %12, i64 0, i64 %195
  store i8* null, i8** %196, align 8
  %197 = getelementptr inbounds [64 x double], [64 x double]* %11, i64 0, i64 %195
  store double 0.000000e+00, double* %197, align 8
  %198 = call i32 @av_expr_parse_and_eval(double* nonnull %10, i8* %83, i8** nonnull %44, double* nonnull %45, i8** null, double (i8*, double)** null, i8** null, double (i8*, double, double)** null, i8* null, i32 0, i8* %0) #12
  %199 = icmp slt i32 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %171
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.48, i64 0, i64 0), i8* %76) #12
  br label %201

201:                                              ; preds = %200, %141
  %202 = phi i32 [ -1163346256, %141 ], [ %198, %200 ]
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %32) #12
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %31) #12
  br label %230

203:                                              ; preds = %171, %91
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %32) #12
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %31) #12
  %204 = load i32, i32* %13, align 4
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %220

206:                                              ; preds = %203
  %207 = load i32, i32* %46, align 4
  %208 = zext i32 %207 to i64
  switch i32 %78, label %220 [
    i32 43, label %209
    i32 45, label %214
  ]

209:                                              ; preds = %206
  %210 = load double, double* %10, align 8
  %211 = fptosi double %210 to i64
  %212 = or i64 %211, %208
  %213 = sitofp i64 %212 to double
  store double %213, double* %10, align 8
  br label %220

214:                                              ; preds = %206
  %215 = load double, double* %10, align 8
  %216 = fptosi double %215 to i64
  %217 = xor i64 %216, 4294967295
  %218 = and i64 %217, %208
  %219 = sitofp i64 %218 to double
  store double %219, double* %10, align 8
  br label %220

220:                                              ; preds = %206, %209, %214, %203
  %221 = load double, double* %10, align 8
  %222 = call fastcc i32 @write_number(i8* %0, %struct.AVOption* %2, i8* %4, double %221, i32 1, i64 1)
  %223 = icmp slt i32 %222, 0
  br i1 %223, label %230, label %224

224:                                              ; preds = %220
  %225 = zext i32 %77 to i64
  %226 = getelementptr inbounds i8, i8* %76, i64 %225
  br i1 %82, label %227, label %230

227:                                              ; preds = %224
  %228 = load i8, i8* %226, align 1
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %230, label %232

230:                                              ; preds = %220, %224, %227, %201
  %231 = phi i32 [ %202, %201 ], [ 0, %224 ], [ %222, %220 ], [ 0, %227 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %29) #12
  br label %233

232:                                              ; preds = %227
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %29) #12
  br label %47

233:                                              ; preds = %230, %27
  %234 = phi i32 [ %24, %27 ], [ %231, %230 ]
  ret i32 %234

235:                                              ; preds = %63
  %236 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 %65
  store i8 %67, i8* %236, align 1
  %237 = add nuw nsw i64 %60, 2
  %238 = getelementptr inbounds i8, i8* %57, i64 %237
  %239 = load i8, i8* %238, align 1
  switch i8 %239, label %240 [
    i8 0, label %68
    i8 43, label %68
    i8 45, label %68
  ]

240:                                              ; preds = %235
  %241 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 %237
  store i8 %239, i8* %241, align 1
  %242 = add nuw nsw i64 %60, 3
  %243 = getelementptr inbounds i8, i8* %57, i64 %242
  %244 = load i8, i8* %243, align 1
  switch i8 %244, label %245 [
    i8 0, label %68
    i8 43, label %68
    i8 45, label %68
  ]

245:                                              ; preds = %240
  %246 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 %242
  store i8 %244, i8* %246, align 1
  %247 = add nuw nsw i64 %60, 4
  %248 = getelementptr inbounds i8, i8* %57, i64 %247
  %249 = load i8, i8* %248, align 1
  switch i8 %249, label %250 [
    i8 0, label %68
    i8 43, label %68
    i8 45, label %68
  ]

250:                                              ; preds = %245
  %251 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 %247
  store i8 %249, i8* %251, align 1
  %252 = add nuw nsw i64 %60, 5
  %253 = icmp eq i64 %252, 255
  br i1 %253, label %71, label %59
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @write_number(i8*, %struct.AVOption* nocapture readonly, i8* nocapture, double, i32, i64) unnamed_addr #2 {
  %7 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %41, label %10

10:                                               ; preds = %6
  %11 = icmp eq i32 %4, 0
  br i1 %11, label %27, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 6
  %14 = load double, double* %13, align 8
  %15 = sitofp i32 %4 to double
  %16 = fmul nsz double %14, %15
  %17 = sitofp i64 %5 to double
  %18 = fmul nsz double %17, %3
  %19 = fcmp nsz olt double %16, %18
  br i1 %19, label %25, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 5
  %22 = load double, double* %21, align 8
  %23 = fmul nsz double %22, %15
  %24 = fcmp nsz ogt double %23, %18
  br i1 %24, label %25, label %57

25:                                               ; preds = %12, %20
  %26 = fdiv nsz double %18, %15
  br label %34

27:                                               ; preds = %10
  %28 = fcmp nsz une double %3, 0.000000e+00
  %29 = icmp ne i64 %5, 0
  %30 = and i1 %28, %29
  %31 = select i1 %30, double 0x7FF0000000000000, double 0x7FF8000000000000
  %32 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 6
  %33 = load double, double* %32, align 8
  br label %34

34:                                               ; preds = %27, %25
  %35 = phi double [ %14, %25 ], [ %33, %27 ]
  %36 = phi double [ %26, %25 ], [ %31, %27 ]
  %37 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 5
  %40 = load double, double* %39, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2, i64 0, i64 0), double %36, i8* %38, double %40, double %35) #12
  br label %127

41:                                               ; preds = %6
  %42 = sitofp i64 %5 to double
  %43 = fmul nsz double %42, %3
  %44 = sitofp i32 %4 to double
  %45 = fdiv nsz double %43, %44
  %46 = fcmp nsz olt double %45, -1.500000e+00
  %47 = fcmp nsz ogt double %45, 0x41EFFFFFFFF00000
  %48 = or i1 %46, %47
  br i1 %48, label %54, label %49

49:                                               ; preds = %41
  %50 = fmul nsz double %45, 2.560000e+02
  %51 = tail call i64 @llvm.llrint.i64.f64(double %50)
  %52 = and i64 %51, 255
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %70, label %54

54:                                               ; preds = %49, %41
  %55 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 0
  %56 = load i8*, i8** %55, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.51, i64 0, i64 0), double %45, i8* %56) #12
  br label %127

57:                                               ; preds = %20
  switch i32 %8, label %127 [
    i32 12, label %58
    i32 13, label %64
    i32 18, label %70
    i32 14, label %114
    i32 1, label %70
    i32 15, label %77
    i32 17, label %77
    i32 2, label %77
    i32 9, label %88
    i32 4, label %107
    i32 3, label %111
    i32 6, label %114
  ]

58:                                               ; preds = %57
  %59 = fdiv nsz double %3, %15
  %60 = tail call i64 @llvm.llrint.i64.f64(double %59)
  %61 = mul nsw i64 %60, %5
  %62 = trunc i64 %61 to i32
  %63 = bitcast i8* %2 to i32*
  store i32 %62, i32* %63, align 4
  br label %127

64:                                               ; preds = %57
  %65 = fdiv nsz double %3, %15
  %66 = tail call i64 @llvm.llrint.i64.f64(double %65)
  %67 = mul nsw i64 %66, %5
  %68 = trunc i64 %67 to i32
  %69 = bitcast i8* %2 to i32*
  store i32 %68, i32* %69, align 4
  br label %127

70:                                               ; preds = %49, %57, %57
  %71 = phi double [ %44, %49 ], [ %15, %57 ], [ %15, %57 ]
  %72 = fdiv nsz double %3, %71
  %73 = tail call i64 @llvm.llrint.i64.f64(double %72)
  %74 = mul nsw i64 %73, %5
  %75 = trunc i64 %74 to i32
  %76 = bitcast i8* %2 to i32*
  store i32 %75, i32* %76, align 4
  br label %127

77:                                               ; preds = %57, %57, %57
  %78 = fdiv nsz double %3, %15
  %79 = icmp eq i64 %5, 1
  %80 = fcmp nsz oeq double %78, 0x43E0000000000000
  %81 = and i1 %79, %80
  br i1 %81, label %82, label %84

82:                                               ; preds = %77
  %83 = bitcast i8* %2 to i64*
  store i64 9223372036854775807, i64* %83, align 8
  br label %127

84:                                               ; preds = %77
  %85 = tail call i64 @llvm.llrint.i64.f64(double %78)
  %86 = mul nsw i64 %85, %5
  %87 = bitcast i8* %2 to i64*
  store i64 %86, i64* %87, align 8
  br label %127

88:                                               ; preds = %57
  %89 = fdiv nsz double %3, %15
  %90 = icmp eq i64 %5, 1
  %91 = fcmp nsz oeq double %89, 0x43F0000000000000
  %92 = and i1 %90, %91
  br i1 %92, label %93, label %95

93:                                               ; preds = %88
  %94 = bitcast i8* %2 to i64*
  store i64 -1, i64* %94, align 8
  br label %127

95:                                               ; preds = %88
  %96 = fcmp nsz ogt double %89, 0x43E0000000000000
  br i1 %96, label %97, label %103

97:                                               ; preds = %95
  %98 = fadd nsz double %89, 0xC3E0000000000000
  %99 = tail call i64 @llvm.llrint.i64.f64(double %98)
  %100 = xor i64 %99, -9223372036854775808
  %101 = mul i64 %100, %5
  %102 = bitcast i8* %2 to i64*
  store i64 %101, i64* %102, align 8
  br label %127

103:                                              ; preds = %95
  %104 = tail call i64 @llvm.llrint.i64.f64(double %89)
  %105 = mul nsw i64 %104, %5
  %106 = bitcast i8* %2 to i64*
  store i64 %105, i64* %106, align 8
  br label %127

107:                                              ; preds = %57
  %108 = fdiv nsz double %18, %15
  %109 = fptrunc double %108 to float
  %110 = bitcast i8* %2 to float*
  store float %109, float* %110, align 4
  br label %127

111:                                              ; preds = %57
  %112 = fdiv nsz double %18, %15
  %113 = bitcast i8* %2 to double*
  store double %112, double* %113, align 8
  br label %127

114:                                              ; preds = %57, %57
  %115 = fptosi double %3 to i32
  %116 = sitofp i32 %115 to double
  %117 = fcmp nsz oeq double %116, %3
  br i1 %117, label %118, label %123

118:                                              ; preds = %114
  %119 = fptosi double %18 to i32
  %120 = bitcast i8* %2 to i32*
  store i32 %119, i32* %120, align 4
  %121 = getelementptr inbounds i8, i8* %2, i64 4
  %122 = bitcast i8* %121 to i32*
  store i32 %4, i32* %122, align 4
  br label %127

123:                                              ; preds = %114
  %124 = fdiv nsz double %18, %15
  %125 = tail call i64 @av_d2q(double %124, i32 16777216) #14
  %126 = bitcast i8* %2 to i64*
  store i64 %125, i64* %126, align 4
  br label %127

127:                                              ; preds = %58, %64, %70, %107, %111, %123, %118, %84, %82, %97, %103, %93, %57, %54, %34
  %128 = phi i32 [ -34, %34 ], [ -34, %54 ], [ -22, %57 ], [ 0, %93 ], [ 0, %103 ], [ 0, %97 ], [ 0, %82 ], [ 0, %84 ], [ 0, %118 ], [ 0, %123 ], [ 0, %111 ], [ 0, %107 ], [ 0, %70 ], [ 0, %64 ], [ 0, %58 ]
  ret i32 %128
}

declare i32 @av_parse_time(i64*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #4

declare i64 @av_get_channel_layout(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_eval_flags(i8*, %struct.AVOption* readonly, i8*, i32* nocapture) local_unnamed_addr #2 {
  %5 = icmp eq %struct.AVOption* %1, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 7
  %12 = load i32, i32* %11, align 8
  %13 = trunc i32 %12 to i8
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = bitcast i32* %3 to i8*
  %17 = tail call fastcc i32 @set_string_number(i8* %0, i8* %0, %struct.AVOption* nonnull %1, i8* %2, i8* %16)
  br label %18

18:                                               ; preds = %10, %4, %6, %15
  %19 = phi i32 [ %17, %15 ], [ -22, %6 ], [ -22, %4 ], [ -22, %10 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_eval_int(i8*, %struct.AVOption* readonly, i8*, i32* nocapture) local_unnamed_addr #2 {
  %5 = icmp eq %struct.AVOption* %1, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %18

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 7
  %12 = load i32, i32* %11, align 8
  %13 = trunc i32 %12 to i8
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = bitcast i32* %3 to i8*
  %17 = tail call fastcc i32 @set_string_number(i8* %0, i8* %0, %struct.AVOption* nonnull %1, i8* %2, i8* %16)
  br label %18

18:                                               ; preds = %10, %4, %6, %15
  %19 = phi i32 [ %17, %15 ], [ -22, %6 ], [ -22, %4 ], [ -22, %10 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_eval_int64(i8*, %struct.AVOption* readonly, i8*, i64* nocapture) local_unnamed_addr #2 {
  %5 = icmp eq %struct.AVOption* %1, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 2
  br i1 %9, label %10, label %18

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 7
  %12 = load i32, i32* %11, align 8
  %13 = trunc i32 %12 to i8
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = bitcast i64* %3 to i8*
  %17 = tail call fastcc i32 @set_string_number(i8* %0, i8* %0, %struct.AVOption* nonnull %1, i8* %2, i8* %16)
  br label %18

18:                                               ; preds = %10, %4, %6, %15
  %19 = phi i32 [ %17, %15 ], [ -22, %6 ], [ -22, %4 ], [ -22, %10 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_eval_float(i8*, %struct.AVOption* readonly, i8*, float* nocapture) local_unnamed_addr #2 {
  %5 = icmp eq %struct.AVOption* %1, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 4
  br i1 %9, label %10, label %18

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 7
  %12 = load i32, i32* %11, align 8
  %13 = trunc i32 %12 to i8
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = bitcast float* %3 to i8*
  %17 = tail call fastcc i32 @set_string_number(i8* %0, i8* %0, %struct.AVOption* nonnull %1, i8* %2, i8* %16)
  br label %18

18:                                               ; preds = %10, %4, %6, %15
  %19 = phi i32 [ %17, %15 ], [ -22, %6 ], [ -22, %4 ], [ -22, %10 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_eval_double(i8*, %struct.AVOption* readonly, i8*, double* nocapture) local_unnamed_addr #2 {
  %5 = icmp eq %struct.AVOption* %1, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 3
  br i1 %9, label %10, label %18

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 7
  %12 = load i32, i32* %11, align 8
  %13 = trunc i32 %12 to i8
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = bitcast double* %3 to i8*
  %17 = tail call fastcc i32 @set_string_number(i8* %0, i8* %0, %struct.AVOption* nonnull %1, i8* %2, i8* %16)
  br label %18

18:                                               ; preds = %10, %4, %6, %15
  %19 = phi i32 [ %17, %15 ], [ -22, %6 ], [ -22, %4 ], [ -22, %10 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_eval_q(i8*, %struct.AVOption* readonly, i8*, %struct.AVRational* nocapture) local_unnamed_addr #2 {
  %5 = icmp eq %struct.AVOption* %1, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 6
  br i1 %9, label %10, label %18

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 7
  %12 = load i32, i32* %11, align 8
  %13 = trunc i32 %12 to i8
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = bitcast %struct.AVRational* %3 to i8*
  %17 = tail call fastcc i32 @set_string_number(i8* %0, i8* %0, %struct.AVOption* nonnull %1, i8* %2, i8* %16)
  br label %18

18:                                               ; preds = %10, %4, %6, %15
  %19 = phi i32 [ %17, %15 ], [ -22, %6 ], [ -22, %4 ], [ -22, %10 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_set_int(i8*, i8* readonly, i64, i32) local_unnamed_addr #2 {
  %5 = alloca i8*, align 8
  %6 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %7 = call %struct.AVOption* @av_opt_find2(i8* %0, i8* %1, i8* null, i32 0, i32 %3, i8** nonnull %5) #12
  %8 = icmp ne %struct.AVOption* %7, null
  %9 = load i8*, i8** %5, align 8
  %10 = icmp ne i8* %9, null
  %11 = and i1 %8, %10
  br i1 %11, label %12, label %23

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 7
  %14 = load i32, i32* %13, align 8
  %15 = trunc i32 %14 to i8
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %9, i64 %20
  %22 = call fastcc i32 @write_number(i8* %0, %struct.AVOption* nonnull %7, i8* %21, double 1.000000e+00, i32 1, i64 %2) #12
  br label %23

23:                                               ; preds = %4, %12, %17
  %24 = phi i32 [ %22, %17 ], [ -1414549496, %4 ], [ -22, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_set_double(i8*, i8* readonly, double, i32) local_unnamed_addr #2 {
  %5 = alloca i8*, align 8
  %6 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %7 = call %struct.AVOption* @av_opt_find2(i8* %0, i8* %1, i8* null, i32 0, i32 %3, i8** nonnull %5) #12
  %8 = icmp ne %struct.AVOption* %7, null
  %9 = load i8*, i8** %5, align 8
  %10 = icmp ne i8* %9, null
  %11 = and i1 %8, %10
  br i1 %11, label %12, label %23

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 7
  %14 = load i32, i32* %13, align 8
  %15 = trunc i32 %14 to i8
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %9, i64 %20
  %22 = call fastcc i32 @write_number(i8* %0, %struct.AVOption* nonnull %7, i8* %21, double %2, i32 1, i64 1) #12
  br label %23

23:                                               ; preds = %4, %12, %17
  %24 = phi i32 [ %22, %17 ], [ -1414549496, %4 ], [ -22, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_set_q(i8*, i8* readonly, i64, i32) local_unnamed_addr #2 {
  %5 = alloca i8*, align 8
  %6 = trunc i64 %2 to i32
  %7 = lshr i64 %2, 32
  %8 = trunc i64 %7 to i32
  %9 = sitofp i32 %6 to double
  %10 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %11 = call %struct.AVOption* @av_opt_find2(i8* %0, i8* %1, i8* null, i32 0, i32 %3, i8** nonnull %5) #12
  %12 = icmp ne %struct.AVOption* %11, null
  %13 = load i8*, i8** %5, align 8
  %14 = icmp ne i8* %13, null
  %15 = and i1 %12, %14
  br i1 %15, label %16, label %27

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %11, i64 0, i32 7
  %18 = load i32, i32* %17, align 8
  %19 = trunc i32 %18 to i8
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %11, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %13, i64 %24
  %26 = call fastcc i32 @write_number(i8* %0, %struct.AVOption* nonnull %11, i8* %25, double %9, i32 %8, i64 1) #12
  br label %27

27:                                               ; preds = %4, %16, %21
  %28 = phi i32 [ %26, %21 ], [ -1414549496, %4 ], [ -22, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_set_bin(i8*, i8* readonly, i8* nocapture readonly, i32, i32) local_unnamed_addr #2 {
  %6 = alloca i8*, align 8
  %7 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %8 = call %struct.AVOption* @av_opt_find2(i8* %0, i8* %1, i8* null, i32 0, i32 %4, i8** nonnull %6)
  %9 = icmp ne %struct.AVOption* %8, null
  %10 = load i8*, i8** %6, align 8
  %11 = icmp ne i8* %10, null
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %43

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %8, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 7
  br i1 %16, label %17, label %43

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %8, i64 0, i32 7
  %19 = load i32, i32* %18, align 8
  %20 = trunc i32 %19 to i8
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %43, label %22

22:                                               ; preds = %17
  %23 = icmp ne i32 %3, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %22
  %25 = sext i32 %3 to i64
  %26 = call noalias i8* @av_malloc(i64 %25) #12
  %27 = icmp eq i8* %26, null
  br i1 %27, label %43, label %28

28:                                               ; preds = %24
  %29 = load i8*, i8** %6, align 8
  br label %30

30:                                               ; preds = %28, %22
  %31 = phi i8* [ %29, %28 ], [ %10, %22 ]
  %32 = phi i8* [ %26, %28 ], [ null, %22 ]
  %33 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %8, i64 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %31, i64 %35
  %37 = bitcast i8* %36 to i8**
  %38 = getelementptr inbounds i8, i8* %36, i64 8
  %39 = bitcast i8* %38 to i32*
  %40 = load i8*, i8** %37, align 8
  call void @av_free(i8* %40) #12
  store i8* %32, i8** %37, align 8
  store i32 %3, i32* %39, align 4
  br i1 %23, label %41, label %43

41:                                               ; preds = %30
  %42 = sext i32 %3 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %2, i64 %42, i1 false)
  br label %43

43:                                               ; preds = %24, %30, %41, %17, %13, %5
  %44 = phi i32 [ -1414549496, %5 ], [ -22, %13 ], [ -22, %17 ], [ -12, %24 ], [ 0, %41 ], [ 0, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret i32 %44
}

declare noalias i8* @av_malloc(i64) local_unnamed_addr #3

declare void @av_free(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_set_image_size(i8*, i8* readonly, i32, i32, i32) local_unnamed_addr #2 {
  %6 = alloca i8*, align 8
  %7 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %8 = call %struct.AVOption* @av_opt_find2(i8* %0, i8* %1, i8* null, i32 0, i32 %4, i8** nonnull %6)
  %9 = icmp ne %struct.AVOption* %8, null
  %10 = load i8*, i8** %6, align 8
  %11 = icmp ne i8* %10, null
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %38

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %8, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 11
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %8, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.6, i64 0, i64 0), i8* %19) #12
  br label %38

20:                                               ; preds = %13
  %21 = or i32 %3, %2
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %20
  %24 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %8, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.7, i64 0, i64 0), i32 %2, i32 %3, i8* %25) #12
  br label %38

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %8, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %10, i64 %29
  %31 = bitcast i8* %30 to i32*
  store i32 %2, i32* %31, align 4
  %32 = load i8*, i8** %6, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 4
  %34 = load i32, i32* %27, align 8
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %33, i64 %35
  %37 = bitcast i8* %36 to i32*
  store i32 %3, i32* %37, align 4
  br label %38

38:                                               ; preds = %5, %26, %23, %17
  %39 = phi i32 [ -22, %17 ], [ -22, %23 ], [ 0, %26 ], [ -1414549496, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_set_video_rate(i8*, i8* readonly, i64, i32) local_unnamed_addr #2 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = trunc i64 %2 to i32
  %8 = lshr i64 %2, 32
  %9 = trunc i64 %8 to i32
  %10 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %11 = call %struct.AVOption* @av_opt_find2(i8* %0, i8* %1, i8* null, i32 0, i32 %3, i8** nonnull %6)
  %12 = icmp ne %struct.AVOption* %11, null
  %13 = load i8*, i8** %6, align 8
  %14 = icmp ne i8* %13, null
  %15 = and i1 %12, %14
  br i1 %15, label %16, label %48

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %11, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 14
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %11, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.8, i64 0, i64 0), i8* %22) #12
  br label %48

23:                                               ; preds = %16
  %24 = icmp slt i32 %7, 1
  %25 = icmp slt i32 %9, 1
  %26 = or i1 %24, %25
  br i1 %26, label %48, label %27

27:                                               ; preds = %23
  %28 = sitofp i32 %7 to double
  %29 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %30 = call %struct.AVOption* @av_opt_find2(i8* %0, i8* %1, i8* null, i32 0, i32 %3, i8** nonnull %5) #12
  %31 = icmp ne %struct.AVOption* %30, null
  %32 = load i8*, i8** %5, align 8
  %33 = icmp ne i8* %32, null
  %34 = and i1 %31, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %27
  %36 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %30, i64 0, i32 7
  %37 = load i32, i32* %36, align 8
  %38 = trunc i32 %37 to i8
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %30, i64 0, i32 2
  %42 = load i32, i32* %41, align 8
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %32, i64 %43
  %45 = call fastcc i32 @write_number(i8* %0, %struct.AVOption* nonnull %30, i8* %44, double %28, i32 %9, i64 1) #12
  br label %46

46:                                               ; preds = %27, %35, %40
  %47 = phi i32 [ %45, %40 ], [ -1414549496, %27 ], [ -22, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  br label %48

48:                                               ; preds = %23, %4, %46, %20
  %49 = phi i32 [ -22, %20 ], [ %47, %46 ], [ -1414549496, %4 ], [ -22, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  ret i32 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_set_pixel_fmt(i8*, i8*, i32, i32) local_unnamed_addr #2 {
  %5 = tail call fastcc i32 @set_format(i8* %0, i8* %1, i32 %2, i32 %3, i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i32 198)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @set_format(i8*, i8*, i32, i32, i32, i8*, i32) unnamed_addr #2 {
  %8 = alloca i8*, align 8
  %9 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %10 = call %struct.AVOption* @av_opt_find2(i8* %0, i8* %1, i8* null, i32 0, i32 %3, i8** nonnull %8)
  %11 = icmp ne %struct.AVOption* %10, null
  %12 = load i8*, i8** %8, align 8
  %13 = icmp ne i8* %12, null
  %14 = and i1 %11, %13
  br i1 %14, label %15, label %43

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %10, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, %4
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.57, i64 0, i64 0), i8* %1, i8* %5) #12
  br label %43

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %10, i64 0, i32 5
  %22 = load double, double* %21, align 8
  %23 = fcmp nsz ogt double %22, -1.000000e+00
  %24 = select i1 %23, double %22, double -1.000000e+00
  %25 = fptosi double %24 to i32
  %26 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %10, i64 0, i32 6
  %27 = load double, double* %26, align 8
  %28 = add nsw i32 %6, -1
  %29 = sitofp i32 %28 to double
  %30 = fcmp nsz ogt double %27, %29
  %31 = select i1 %30, double %29, double %27
  %32 = fptosi double %31 to i32
  %33 = icmp sgt i32 %25, %2
  %34 = icmp slt i32 %32, %2
  %35 = or i1 %33, %34
  br i1 %35, label %36, label %37

36:                                               ; preds = %20
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.54, i64 0, i64 0), i32 %2, i8* %1, i8* %5, i32 %25, i32 %32) #12
  br label %43

37:                                               ; preds = %20
  %38 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %10, i64 0, i32 2
  %39 = load i32, i32* %38, align 8
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %12, i64 %40
  %42 = bitcast i8* %41 to i32*
  store i32 %2, i32* %42, align 4
  br label %43

43:                                               ; preds = %7, %37, %36, %19
  %44 = phi i32 [ -22, %19 ], [ -34, %36 ], [ 0, %37 ], [ -1414549496, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  ret i32 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_set_sample_fmt(i8*, i8*, i32, i32) local_unnamed_addr #2 {
  %5 = tail call fastcc i32 @set_format(i8* %0, i8* %1, i32 %2, i32 %3, i32 13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i32 12)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_set_channel_layout(i8*, i8* readonly, i64, i32) local_unnamed_addr #2 {
  %5 = alloca i8*, align 8
  %6 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %7 = call %struct.AVOption* @av_opt_find2(i8* %0, i8* %1, i8* null, i32 0, i32 %3, i8** nonnull %5)
  %8 = icmp ne %struct.AVOption* %7, null
  %9 = load i8*, i8** %5, align 8
  %10 = icmp ne i8* %9, null
  %11 = and i1 %8, %10
  br i1 %11, label %12, label %25

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 17
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.11, i64 0, i64 0), i8* %18) #12
  br label %25

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8, i8* %9, i64 %22
  %24 = bitcast i8* %23 to i64*
  store i64 %2, i64* %24, align 8
  br label %25

25:                                               ; preds = %4, %19, %16
  %26 = phi i32 [ -22, %16 ], [ 0, %19 ], [ -1414549496, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_set_dict_val(i8*, i8* readonly, %struct.AVDictionary*, i32) local_unnamed_addr #2 {
  %5 = alloca i8*, align 8
  %6 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %7 = call %struct.AVOption* @av_opt_find2(i8* %0, i8* %1, i8* null, i32 0, i32 %3, i8** nonnull %5)
  %8 = icmp ne %struct.AVOption* %7, null
  %9 = load i8*, i8** %5, align 8
  %10 = icmp ne i8* %9, null
  %11 = and i1 %8, %10
  br i1 %11, label %12, label %24

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 7
  %14 = load i32, i32* %13, align 8
  %15 = trunc i32 %14 to i8
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %9, i64 %20
  %22 = bitcast i8* %21 to %struct.AVDictionary**
  call void @av_dict_free(%struct.AVDictionary** %22) #12
  %23 = call i32 @av_dict_copy(%struct.AVDictionary** %22, %struct.AVDictionary* %2, i32 0) #12
  br label %24

24:                                               ; preds = %12, %4, %17
  %25 = phi i32 [ 0, %17 ], [ -1414549496, %4 ], [ -22, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret i32 %25
}

declare void @av_dict_free(%struct.AVDictionary**) local_unnamed_addr #3

declare i32 @av_dict_copy(%struct.AVDictionary**, %struct.AVDictionary*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_get(i8*, i8*, i32, i8**) local_unnamed_addr #2 {
  %5 = alloca i8*, align 8
  %6 = alloca [128 x i8], align 16
  %7 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %8 = call %struct.AVOption* @av_opt_find2(i8* %0, i8* %1, i8* null, i32 0, i32 %2, i8** nonnull %5)
  %9 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %9) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 128, i1 false)
  %10 = icmp ne %struct.AVOption* %8, null
  %11 = load i8*, i8** %5, align 8
  %12 = icmp ne i8* %11, null
  %13 = and i1 %10, %12
  br i1 %13, label %14, label %204

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %8, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp slt i32 %16, 1
  br i1 %17, label %18, label %22

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %8, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 10
  br i1 %21, label %22, label %204

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %8, i64 0, i32 7
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 131072
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %8, i64 0, i32 1
  %29 = load i8*, i8** %28, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 24, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i8* %1, i8* %29) #12
  %30 = load i8*, i8** %5, align 8
  %31 = load i32, i32* %15, align 8
  br label %32

32:                                               ; preds = %22, %27
  %33 = phi i32 [ %16, %22 ], [ %31, %27 ]
  %34 = phi i8* [ %11, %22 ], [ %30, %27 ]
  %35 = sext i32 %33 to i64
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  store i8 0, i8* %9, align 16
  %37 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %8, i64 0, i32 3
  %38 = load i32, i32* %37, align 4
  switch i32 %38, label %204 [
    i32 18, label %39
    i32 0, label %47
    i32 1, label %51
    i32 2, label %55
    i32 9, label %59
    i32 4, label %63
    i32 3, label %68
    i32 14, label %72
    i32 6, label %72
    i32 10, label %79
    i32 5, label %84
    i32 7, label %100
    i32 11, label %144
    i32 12, label %151
    i32 13, label %158
    i32 15, label %165
    i32 16, label %170
    i32 17, label %183
    i32 8, label %187
  ]

39:                                               ; preds = %32
  %40 = bitcast i8* %36 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = icmp slt i32 %41, 0
  %43 = icmp eq i32 %41, 0
  %44 = select i1 %43, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0)
  %45 = select i1 %42, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i64 0, i64 0), i8* %44
  %46 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %9, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* %45) #12
  br label %197

47:                                               ; preds = %32
  %48 = bitcast i8* %36 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %9, i64 128, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0), i32 %49) #12
  br label %197

51:                                               ; preds = %32
  %52 = bitcast i8* %36 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %9, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i64 0, i64 0), i32 %53) #12
  br label %197

55:                                               ; preds = %32
  %56 = bitcast i8* %36 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %9, i64 128, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0), i64 %57) #12
  br label %197

59:                                               ; preds = %32
  %60 = bitcast i8* %36 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %9, i64 128, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0), i64 %61) #12
  br label %197

63:                                               ; preds = %32
  %64 = bitcast i8* %36 to float*
  %65 = load float, float* %64, align 4
  %66 = fpext float %65 to double
  %67 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %9, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), double %66) #12
  br label %197

68:                                               ; preds = %32
  %69 = bitcast i8* %36 to double*
  %70 = load double, double* %69, align 8
  %71 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %9, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), double %70) #12
  br label %197

72:                                               ; preds = %32, %32
  %73 = bitcast i8* %36 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds i8, i8* %36, i64 4
  %76 = bitcast i8* %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %9, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i32 %74, i32 %77) #12
  br label %197

79:                                               ; preds = %32
  %80 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %8, i64 0, i32 4
  %81 = bitcast %union.anon* %80 to double*
  %82 = load double, double* %81, align 8
  %83 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %9, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), double %82) #12
  br label %197

84:                                               ; preds = %32
  %85 = bitcast i8* %36 to i8**
  %86 = load i8*, i8** %85, align 8
  %87 = icmp eq i8* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %84
  %89 = call noalias i8* @av_strdup(i8* nonnull %86) #12
  br label %96

90:                                               ; preds = %84
  %91 = and i32 %2, 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %90
  store i8* null, i8** %3, align 8
  br label %204

94:                                               ; preds = %90
  %95 = call noalias i8* @av_strdup(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i64 0, i64 0)) #12
  br label %96

96:                                               ; preds = %94, %88
  %97 = phi i8* [ %95, %94 ], [ %89, %88 ]
  store i8* %97, i8** %3, align 8
  %98 = icmp eq i8* %97, null
  %99 = select i1 %98, i32 -12, i32 0
  br label %204

100:                                              ; preds = %32
  %101 = bitcast i8* %36 to i8**
  %102 = load i8*, i8** %101, align 8
  %103 = icmp ne i8* %102, null
  %104 = and i32 %2, 4
  %105 = icmp eq i32 %104, 0
  %106 = or i1 %105, %103
  br i1 %106, label %108, label %107

107:                                              ; preds = %100
  store i8* null, i8** %3, align 8
  br label %204

108:                                              ; preds = %100
  %109 = getelementptr inbounds i8, i8* %36, i64 8
  %110 = bitcast i8* %109 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = sext i32 %111 to i64
  %113 = and i64 %112, 9223372035781033984
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %204

115:                                              ; preds = %108
  %116 = shl nsw i32 %111, 1
  %117 = or i32 %116, 1
  %118 = sext i32 %117 to i64
  %119 = call noalias i8* @av_malloc(i64 %118) #12
  store i8* %119, i8** %3, align 8
  %120 = icmp eq i8* %119, null
  br i1 %120, label %204, label %121

121:                                              ; preds = %115
  %122 = icmp eq i32 %111, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %121
  store i8 0, i8* %119, align 1
  br label %204

124:                                              ; preds = %121
  %125 = load i8*, i8** %101, align 8
  %126 = icmp sgt i32 %111, 0
  br i1 %126, label %127, label %204

127:                                              ; preds = %124
  %128 = zext i32 %111 to i64
  %129 = load i8, i8* %125, align 1
  %130 = zext i8 %129 to i32
  %131 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %119, i64 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), i32 %130) #12
  %132 = icmp eq i32 %111, 1
  br i1 %132, label %204, label %133

133:                                              ; preds = %127, %133
  %134 = phi i64 [ %142, %133 ], [ 1, %127 ]
  %135 = load i8*, i8** %3, align 8
  %136 = shl nuw nsw i64 %134, 1
  %137 = getelementptr inbounds i8, i8* %135, i64 %136
  %138 = getelementptr inbounds i8, i8* %125, i64 %134
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %137, i64 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), i32 %140) #12
  %142 = add nuw nsw i64 %134, 1
  %143 = icmp eq i64 %142, %128
  br i1 %143, label %204, label %133

144:                                              ; preds = %32
  %145 = bitcast i8* %36 to i32*
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds i8, i8* %36, i64 4
  %148 = bitcast i8* %147 to i32*
  %149 = load i32, i32* %148, align 4
  %150 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %9, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0), i32 %146, i32 %149) #12
  br label %197

151:                                              ; preds = %32
  %152 = bitcast i8* %36 to i32*
  %153 = load i32, i32* %152, align 4
  %154 = call i8* @av_get_pix_fmt_name(i32 %153) #12
  %155 = icmp eq i8* %154, null
  %156 = select i1 %155, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %154
  %157 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %9, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* %156) #12
  br label %197

158:                                              ; preds = %32
  %159 = bitcast i8* %36 to i32*
  %160 = load i32, i32* %159, align 4
  %161 = call i8* @av_get_sample_fmt_name(i32 %160) #12
  %162 = icmp eq i8* %161, null
  %163 = select i1 %162, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %161
  %164 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %9, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* %163) #12
  br label %197

165:                                              ; preds = %32
  %166 = bitcast i8* %36 to i64*
  %167 = load i64, i64* %166, align 8
  call fastcc void @format_duration(i8* nonnull %9, i64 128, i64 %167)
  %168 = call i64 @strlen(i8* nonnull %9) #13
  %169 = trunc i64 %168 to i32
  br label %197

170:                                              ; preds = %32
  %171 = load i8, i8* %36, align 1
  %172 = zext i8 %171 to i32
  %173 = getelementptr inbounds i8, i8* %36, i64 1
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = getelementptr inbounds i8, i8* %36, i64 2
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i32
  %179 = getelementptr inbounds i8, i8* %36, i64 3
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i32
  %182 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %9, i64 128, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.23, i64 0, i64 0), i32 %172, i32 %175, i32 %178, i32 %181) #12
  br label %197

183:                                              ; preds = %32
  %184 = bitcast i8* %36 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %9, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0), i64 %185) #12
  br label %197

187:                                              ; preds = %32
  %188 = bitcast i8* %36 to %struct.AVDictionary**
  %189 = load %struct.AVDictionary*, %struct.AVDictionary** %188, align 8
  %190 = icmp ne %struct.AVDictionary* %189, null
  %191 = and i32 %2, 4
  %192 = icmp eq i32 %191, 0
  %193 = or i1 %192, %190
  br i1 %193, label %195, label %194

194:                                              ; preds = %187
  store i8* null, i8** %3, align 8
  br label %204

195:                                              ; preds = %187
  %196 = call i32 @av_dict_get_string(%struct.AVDictionary* %189, i8** %3, i8 signext 61, i8 signext 58) #12
  br label %204

197:                                              ; preds = %183, %170, %165, %158, %151, %144, %79, %72, %68, %63, %59, %55, %51, %47, %39
  %198 = phi i32 [ %186, %183 ], [ %182, %170 ], [ %169, %165 ], [ %164, %158 ], [ %157, %151 ], [ %150, %144 ], [ %83, %79 ], [ %78, %72 ], [ %71, %68 ], [ %67, %63 ], [ %62, %59 ], [ %58, %55 ], [ %54, %51 ], [ %50, %47 ], [ %46, %39 ]
  %199 = icmp ugt i32 %198, 127
  br i1 %199, label %204, label %200

200:                                              ; preds = %197
  %201 = call noalias i8* @av_strdup(i8* nonnull %9) #12
  store i8* %201, i8** %3, align 8
  %202 = icmp eq i8* %201, null
  %203 = select i1 %202, i32 -12, i32 0
  br label %204

204:                                              ; preds = %133, %127, %124, %197, %32, %115, %108, %4, %18, %200, %195, %194, %123, %107, %96, %93
  %205 = phi i32 [ %196, %195 ], [ 0, %194 ], [ %203, %200 ], [ 0, %123 ], [ 0, %107 ], [ %99, %96 ], [ 0, %93 ], [ -1414549496, %18 ], [ -1414549496, %4 ], [ -22, %108 ], [ -12, %115 ], [ -22, %32 ], [ -22, %197 ], [ 0, %124 ], [ 0, %127 ], [ 0, %133 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret i32 %205
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #5

declare noalias i8* @av_strdup(i8*) local_unnamed_addr #3

declare i8* @av_get_pix_fmt_name(i32) local_unnamed_addr #3

declare i8* @av_get_sample_fmt_name(i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc void @format_duration(i8*, i64, i64) unnamed_addr #6 {
  %4 = icmp slt i64 %2, 0
  %5 = icmp ne i64 %2, -9223372036854775808
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = getelementptr inbounds i8, i8* %0, i64 1
  store i8 45, i8* %0, align 1
  %9 = add i64 %1, -1
  %10 = sub nsw i64 0, %2
  br label %11

11:                                               ; preds = %7, %3
  %12 = phi i8* [ %8, %7 ], [ %0, %3 ]
  %13 = phi i64 [ %9, %7 ], [ %1, %3 ]
  %14 = phi i64 [ %10, %7 ], [ %2, %3 ]
  switch i64 %14, label %19 [
    i64 9223372036854775807, label %15
    i64 -9223372036854775808, label %17
  ]

15:                                               ; preds = %11
  %16 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %12, i64 %13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.63, i64 0, i64 0)) #12
  br label %49

17:                                               ; preds = %11
  %18 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %12, i64 %13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i64 0, i64 0)) #12
  br label %49

19:                                               ; preds = %11
  %20 = icmp sgt i64 %14, 3600000000
  br i1 %20, label %21, label %32

21:                                               ; preds = %19
  %22 = udiv i64 %14, 3600000000
  %23 = udiv i64 %14, 60000000
  %24 = urem i64 %23, 60
  %25 = trunc i64 %24 to i32
  %26 = udiv i64 %14, 1000000
  %27 = urem i64 %26, 60
  %28 = trunc i64 %27 to i32
  %29 = urem i64 %14, 1000000
  %30 = trunc i64 %29 to i32
  %31 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %12, i64 %13, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.65, i64 0, i64 0), i64 %22, i32 %25, i32 %28, i32 %30) #12
  br label %49

32:                                               ; preds = %19
  %33 = icmp sgt i64 %14, 60000000
  br i1 %33, label %34, label %43

34:                                               ; preds = %32
  %35 = trunc i64 %14 to i32
  %36 = udiv i32 %35, 60000000
  %37 = udiv i32 %35, 1000000
  %38 = trunc i32 %37 to i16
  %39 = urem i16 %38, 60
  %40 = zext i16 %39 to i32
  %41 = urem i32 %35, 1000000
  %42 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %12, i64 %13, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.66, i64 0, i64 0), i32 %36, i32 %40, i32 %41) #12
  br label %49

43:                                               ; preds = %32
  %44 = sdiv i64 %14, 1000000
  %45 = trunc i64 %44 to i32
  %46 = srem i64 %14, 1000000
  %47 = trunc i64 %46 to i32
  %48 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %12, i64 %13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i64 0, i64 0), i32 %45, i32 %47) #12
  br label %49

49:                                               ; preds = %17, %34, %43, %21, %15
  %50 = tail call i64 @strlen(i8* %12) #13
  %51 = icmp sgt i64 %50, 0
  br i1 %51, label %52, label %61

52:                                               ; preds = %49
  %53 = getelementptr inbounds i8, i8* %12, i64 %50
  br label %54

54:                                               ; preds = %52, %58
  %55 = phi i8* [ %56, %58 ], [ %53, %52 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 -1
  %57 = load i8, i8* %56, align 1
  switch i8 %57, label %61 [
    i8 48, label %58
    i8 46, label %60
  ]

58:                                               ; preds = %54
  store i8 0, i8* %56, align 1
  %59 = icmp ugt i8* %56, %12
  br i1 %59, label %54, label %61

60:                                               ; preds = %54
  store i8 0, i8* %56, align 1
  br label %61

61:                                               ; preds = %58, %54, %49, %60
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare i32 @av_dict_get_string(%struct.AVDictionary*, i8**, i8 signext, i8 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_get_int(i8*, i8* readonly, i32, i64* nocapture) local_unnamed_addr #2 {
  %5 = alloca i8*, align 8
  %6 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %7 = call %struct.AVOption* @av_opt_find2(i8* %0, i8* %1, i8* null, i32 0, i32 %2, i8** nonnull %5) #12
  %8 = icmp ne %struct.AVOption* %7, null
  %9 = load i8*, i8** %5, align 8
  %10 = icmp ne i8* %9, null
  %11 = and i1 %8, %10
  br i1 %11, label %12, label %57

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i8, i8* %9, i64 %15
  %17 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  switch i32 %18, label %57 [
    i32 0, label %19
    i32 12, label %23
    i32 13, label %27
    i32 18, label %31
    i32 1, label %31
    i32 17, label %35
    i32 15, label %35
    i32 2, label %35
    i32 9, label %35
    i32 4, label %38
    i32 3, label %42
    i32 6, label %45
    i32 10, label %53
  ]

19:                                               ; preds = %12
  %20 = bitcast i8* %16 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  br label %59

23:                                               ; preds = %12
  %24 = bitcast i8* %16 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  br label %59

27:                                               ; preds = %12
  %28 = bitcast i8* %16 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  br label %59

31:                                               ; preds = %12, %12
  %32 = bitcast i8* %16 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = sext i32 %33 to i64
  br label %59

35:                                               ; preds = %12, %12, %12, %12
  %36 = bitcast i8* %16 to i64*
  %37 = load i64, i64* %36, align 8
  br label %59

38:                                               ; preds = %12
  %39 = bitcast i8* %16 to float*
  %40 = load float, float* %39, align 4
  %41 = fpext float %40 to double
  br label %59

42:                                               ; preds = %12
  %43 = bitcast i8* %16 to double*
  %44 = load double, double* %43, align 8
  br label %59

45:                                               ; preds = %12
  %46 = bitcast i8* %16 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %16, i64 4
  %50 = bitcast i8* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = sitofp i32 %51 to double
  br label %59

53:                                               ; preds = %12
  %54 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 4, i32 0
  %55 = bitcast i64* %54 to double*
  %56 = load double, double* %55, align 8
  br label %59

57:                                               ; preds = %4, %12
  %58 = phi i32 [ -22, %12 ], [ -1, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  br label %67

59:                                               ; preds = %53, %45, %42, %38, %35, %31, %27, %23, %19
  %60 = phi i64 [ %22, %19 ], [ %26, %23 ], [ %30, %27 ], [ %34, %31 ], [ %37, %35 ], [ 1, %38 ], [ 1, %42 ], [ %48, %45 ], [ 1, %53 ]
  %61 = phi double [ 1.000000e+00, %19 ], [ 1.000000e+00, %23 ], [ 1.000000e+00, %27 ], [ 1.000000e+00, %31 ], [ 1.000000e+00, %35 ], [ %41, %38 ], [ %44, %42 ], [ 1.000000e+00, %45 ], [ %56, %53 ]
  %62 = phi double [ 1.000000e+00, %19 ], [ 1.000000e+00, %23 ], [ 1.000000e+00, %27 ], [ 1.000000e+00, %31 ], [ 1.000000e+00, %35 ], [ 1.000000e+00, %38 ], [ 1.000000e+00, %42 ], [ %52, %45 ], [ 1.000000e+00, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %63 = sitofp i64 %60 to double
  %64 = fmul nsz double %61, %63
  %65 = fdiv nsz double %64, %62
  %66 = fptosi double %65 to i64
  store i64 %66, i64* %3, align 8
  br label %67

67:                                               ; preds = %57, %59
  %68 = phi i32 [ 0, %59 ], [ %58, %57 ]
  ret i32 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_get_double(i8*, i8* readonly, i32, double* nocapture) local_unnamed_addr #2 {
  %5 = alloca i8*, align 8
  %6 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %7 = call %struct.AVOption* @av_opt_find2(i8* %0, i8* %1, i8* null, i32 0, i32 %2, i8** nonnull %5) #12
  %8 = icmp ne %struct.AVOption* %7, null
  %9 = load i8*, i8** %5, align 8
  %10 = icmp ne i8* %9, null
  %11 = and i1 %8, %10
  br i1 %11, label %12, label %57

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i8, i8* %9, i64 %15
  %17 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  switch i32 %18, label %57 [
    i32 0, label %19
    i32 12, label %23
    i32 13, label %27
    i32 18, label %31
    i32 1, label %31
    i32 17, label %35
    i32 15, label %35
    i32 2, label %35
    i32 9, label %35
    i32 4, label %38
    i32 3, label %42
    i32 6, label %45
    i32 10, label %53
  ]

19:                                               ; preds = %12
  %20 = bitcast i8* %16 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  br label %59

23:                                               ; preds = %12
  %24 = bitcast i8* %16 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  br label %59

27:                                               ; preds = %12
  %28 = bitcast i8* %16 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  br label %59

31:                                               ; preds = %12, %12
  %32 = bitcast i8* %16 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = sext i32 %33 to i64
  br label %59

35:                                               ; preds = %12, %12, %12, %12
  %36 = bitcast i8* %16 to i64*
  %37 = load i64, i64* %36, align 8
  br label %59

38:                                               ; preds = %12
  %39 = bitcast i8* %16 to float*
  %40 = load float, float* %39, align 4
  %41 = fpext float %40 to double
  br label %59

42:                                               ; preds = %12
  %43 = bitcast i8* %16 to double*
  %44 = load double, double* %43, align 8
  br label %59

45:                                               ; preds = %12
  %46 = bitcast i8* %16 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %16, i64 4
  %50 = bitcast i8* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = sitofp i32 %51 to double
  br label %59

53:                                               ; preds = %12
  %54 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 4, i32 0
  %55 = bitcast i64* %54 to double*
  %56 = load double, double* %55, align 8
  br label %59

57:                                               ; preds = %4, %12
  %58 = phi i32 [ -22, %12 ], [ -1, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  br label %66

59:                                               ; preds = %53, %45, %42, %38, %35, %31, %27, %23, %19
  %60 = phi i64 [ %22, %19 ], [ %26, %23 ], [ %30, %27 ], [ %34, %31 ], [ %37, %35 ], [ 1, %38 ], [ 1, %42 ], [ %48, %45 ], [ 1, %53 ]
  %61 = phi double [ 1.000000e+00, %19 ], [ 1.000000e+00, %23 ], [ 1.000000e+00, %27 ], [ 1.000000e+00, %31 ], [ 1.000000e+00, %35 ], [ %41, %38 ], [ %44, %42 ], [ 1.000000e+00, %45 ], [ %56, %53 ]
  %62 = phi double [ 1.000000e+00, %19 ], [ 1.000000e+00, %23 ], [ 1.000000e+00, %27 ], [ 1.000000e+00, %31 ], [ 1.000000e+00, %35 ], [ 1.000000e+00, %38 ], [ 1.000000e+00, %42 ], [ %52, %45 ], [ 1.000000e+00, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %63 = sitofp i64 %60 to double
  %64 = fmul nsz double %61, %63
  %65 = fdiv nsz double %64, %62
  store double %65, double* %3, align 8
  br label %66

66:                                               ; preds = %57, %59
  %67 = phi i32 [ 0, %59 ], [ %58, %57 ]
  ret i32 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_get_q(i8*, i8* readonly, i32, %struct.AVRational* nocapture) local_unnamed_addr #2 {
  %5 = alloca i8*, align 8
  %6 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %7 = call %struct.AVOption* @av_opt_find2(i8* %0, i8* %1, i8* null, i32 0, i32 %2, i8** nonnull %5) #12
  %8 = icmp ne %struct.AVOption* %7, null
  %9 = load i8*, i8** %5, align 8
  %10 = icmp ne i8* %9, null
  %11 = and i1 %8, %10
  br i1 %11, label %12, label %56

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i8, i8* %9, i64 %15
  %17 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  switch i32 %18, label %56 [
    i32 0, label %19
    i32 12, label %23
    i32 13, label %27
    i32 18, label %31
    i32 1, label %31
    i32 17, label %35
    i32 15, label %35
    i32 2, label %35
    i32 9, label %35
    i32 4, label %38
    i32 3, label %42
    i32 6, label %45
    i32 10, label %52
  ]

19:                                               ; preds = %12
  %20 = bitcast i8* %16 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  br label %61

23:                                               ; preds = %12
  %24 = bitcast i8* %16 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  br label %61

27:                                               ; preds = %12
  %28 = bitcast i8* %16 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  br label %61

31:                                               ; preds = %12, %12
  %32 = bitcast i8* %16 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = sext i32 %33 to i64
  br label %61

35:                                               ; preds = %12, %12, %12, %12
  %36 = bitcast i8* %16 to i64*
  %37 = load i64, i64* %36, align 8
  br label %61

38:                                               ; preds = %12
  %39 = bitcast i8* %16 to float*
  %40 = load float, float* %39, align 4
  %41 = fpext float %40 to double
  br label %58

42:                                               ; preds = %12
  %43 = bitcast i8* %16 to double*
  %44 = load double, double* %43, align 8
  br label %58

45:                                               ; preds = %12
  %46 = bitcast i8* %16 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %16, i64 4
  %50 = bitcast i8* %49 to i32*
  %51 = load i32, i32* %50, align 4
  br label %61

52:                                               ; preds = %12
  %53 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 4, i32 0
  %54 = bitcast i64* %53 to double*
  %55 = load double, double* %54, align 8
  br label %58

56:                                               ; preds = %4, %12
  %57 = phi i32 [ -22, %12 ], [ -1, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  br label %82

58:                                               ; preds = %52, %42, %38
  %59 = phi double [ %41, %38 ], [ %44, %42 ], [ %55, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %60 = fcmp nsz oeq double %59, 1.000000e+00
  br i1 %60, label %66, label %72

61:                                               ; preds = %19, %23, %27, %31, %35, %45
  %62 = phi i64 [ %48, %45 ], [ %37, %35 ], [ %34, %31 ], [ %30, %27 ], [ %26, %23 ], [ %22, %19 ]
  %63 = phi i32 [ %51, %45 ], [ 1, %35 ], [ 1, %31 ], [ 1, %27 ], [ 1, %23 ], [ 1, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %64 = add i64 %62, 2147483648
  %65 = icmp ult i64 %64, 4294967296
  br i1 %65, label %66, label %72

66:                                               ; preds = %58, %61
  %67 = phi i64 [ %62, %61 ], [ 1, %58 ]
  %68 = phi i32 [ %63, %61 ], [ 1, %58 ]
  %69 = trunc i64 %67 to i32
  %70 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %3, i64 0, i32 0
  store i32 %69, i32* %70, align 4
  %71 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %3, i64 0, i32 1
  store i32 %68, i32* %71, align 4
  br label %82

72:                                               ; preds = %61, %58
  %73 = phi double [ 1.000000e+00, %61 ], [ %59, %58 ]
  %74 = phi i32 [ %63, %61 ], [ 1, %58 ]
  %75 = phi i64 [ %62, %61 ], [ 1, %58 ]
  %76 = sitofp i64 %75 to double
  %77 = fmul nsz double %73, %76
  %78 = sitofp i32 %74 to double
  %79 = fdiv nsz double %77, %78
  %80 = call i64 @av_d2q(double %79, i32 16777216) #14
  %81 = bitcast %struct.AVRational* %3 to i64*
  store i64 %80, i64* %81, align 4
  br label %82

82:                                               ; preds = %56, %66, %72
  %83 = phi i32 [ %57, %56 ], [ 0, %72 ], [ 0, %66 ]
  ret i32 %83
}

; Function Attrs: nounwind readnone
declare i64 @av_d2q(double, i32) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_get_image_size(i8*, i8*, i32, i32*, i32*) local_unnamed_addr #2 {
  %6 = alloca i8*, align 8
  %7 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %8 = call %struct.AVOption* @av_opt_find2(i8* %0, i8* %1, i8* null, i32 0, i32 %2, i8** nonnull %6)
  %9 = icmp ne %struct.AVOption* %8, null
  %10 = load i8*, i8** %6, align 8
  %11 = icmp ne i8* %10, null
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %33

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %8, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 11
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.25, i64 0, i64 0), i8* %1) #12
  br label %33

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %8, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %10, i64 %21
  %23 = icmp eq i32* %3, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast i8* %22 to i32*
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %3, align 4
  br label %27

27:                                               ; preds = %18, %24
  %28 = icmp eq i32* %4, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds i8, i8* %22, i64 4
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 4
  store i32 %32, i32* %4, align 4
  br label %33

33:                                               ; preds = %29, %27, %5, %17
  %34 = phi i32 [ -22, %17 ], [ -1414549496, %5 ], [ 0, %27 ], [ 0, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_get_video_rate(i8*, i8* readonly, i32, %struct.AVRational* nocapture) local_unnamed_addr #2 {
  %5 = alloca i8*, align 8
  %6 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %7 = call %struct.AVOption* @av_opt_find2(i8* %0, i8* %1, i8* null, i32 0, i32 %2, i8** nonnull %5) #12
  %8 = icmp ne %struct.AVOption* %7, null
  %9 = load i8*, i8** %5, align 8
  %10 = icmp ne i8* %9, null
  %11 = and i1 %8, %10
  br i1 %11, label %12, label %56

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i8, i8* %9, i64 %15
  %17 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  switch i32 %18, label %56 [
    i32 0, label %19
    i32 12, label %23
    i32 13, label %27
    i32 18, label %31
    i32 1, label %31
    i32 17, label %35
    i32 15, label %35
    i32 2, label %35
    i32 9, label %35
    i32 4, label %38
    i32 3, label %42
    i32 6, label %45
    i32 10, label %52
  ]

19:                                               ; preds = %12
  %20 = bitcast i8* %16 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  br label %61

23:                                               ; preds = %12
  %24 = bitcast i8* %16 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  br label %61

27:                                               ; preds = %12
  %28 = bitcast i8* %16 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  br label %61

31:                                               ; preds = %12, %12
  %32 = bitcast i8* %16 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = sext i32 %33 to i64
  br label %61

35:                                               ; preds = %12, %12, %12, %12
  %36 = bitcast i8* %16 to i64*
  %37 = load i64, i64* %36, align 8
  br label %61

38:                                               ; preds = %12
  %39 = bitcast i8* %16 to float*
  %40 = load float, float* %39, align 4
  %41 = fpext float %40 to double
  br label %58

42:                                               ; preds = %12
  %43 = bitcast i8* %16 to double*
  %44 = load double, double* %43, align 8
  br label %58

45:                                               ; preds = %12
  %46 = bitcast i8* %16 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %16, i64 4
  %50 = bitcast i8* %49 to i32*
  %51 = load i32, i32* %50, align 4
  br label %61

52:                                               ; preds = %12
  %53 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 4, i32 0
  %54 = bitcast i64* %53 to double*
  %55 = load double, double* %54, align 8
  br label %58

56:                                               ; preds = %4, %12
  %57 = phi i32 [ -22, %12 ], [ -1, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  br label %82

58:                                               ; preds = %52, %42, %38
  %59 = phi double [ %41, %38 ], [ %44, %42 ], [ %55, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %60 = fcmp nsz oeq double %59, 1.000000e+00
  br i1 %60, label %66, label %72

61:                                               ; preds = %19, %23, %27, %31, %35, %45
  %62 = phi i64 [ %48, %45 ], [ %37, %35 ], [ %34, %31 ], [ %30, %27 ], [ %26, %23 ], [ %22, %19 ]
  %63 = phi i32 [ %51, %45 ], [ 1, %35 ], [ 1, %31 ], [ 1, %27 ], [ 1, %23 ], [ 1, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %64 = add i64 %62, 2147483648
  %65 = icmp ult i64 %64, 4294967296
  br i1 %65, label %66, label %72

66:                                               ; preds = %58, %61
  %67 = phi i64 [ %62, %61 ], [ 1, %58 ]
  %68 = phi i32 [ %63, %61 ], [ 1, %58 ]
  %69 = trunc i64 %67 to i32
  %70 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %3, i64 0, i32 0
  store i32 %69, i32* %70, align 4
  %71 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %3, i64 0, i32 1
  store i32 %68, i32* %71, align 4
  br label %82

72:                                               ; preds = %61, %58
  %73 = phi double [ 1.000000e+00, %61 ], [ %59, %58 ]
  %74 = phi i32 [ %63, %61 ], [ 1, %58 ]
  %75 = phi i64 [ %62, %61 ], [ 1, %58 ]
  %76 = sitofp i64 %75 to double
  %77 = fmul nsz double %73, %76
  %78 = sitofp i32 %74 to double
  %79 = fdiv nsz double %77, %78
  %80 = call i64 @av_d2q(double %79, i32 16777216) #14
  %81 = bitcast %struct.AVRational* %3 to i64*
  store i64 %80, i64* %81, align 4
  br label %82

82:                                               ; preds = %56, %66, %72
  %83 = phi i32 [ %57, %56 ], [ 0, %72 ], [ 0, %66 ]
  ret i32 %83
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_get_pixel_fmt(i8*, i8*, i32, i32* nocapture) local_unnamed_addr #2 {
  %5 = alloca i8*, align 8
  %6 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %7 = call %struct.AVOption* @av_opt_find2(i8* %0, i8* %1, i8* null, i32 0, i32 %2, i8** nonnull %5) #12
  %8 = icmp ne %struct.AVOption* %7, null
  %9 = load i8*, i8** %5, align 8
  %10 = icmp ne i8* %9, null
  %11 = and i1 %8, %10
  br i1 %11, label %12, label %24

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 12
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i8* %1) #12
  br label %24

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %9, i64 %20
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %3, align 4
  br label %24

24:                                               ; preds = %4, %16, %17
  %25 = phi i32 [ -22, %16 ], [ 0, %17 ], [ -1414549496, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_get_sample_fmt(i8*, i8*, i32, i32* nocapture) local_unnamed_addr #2 {
  %5 = alloca i8*, align 8
  %6 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %7 = call %struct.AVOption* @av_opt_find2(i8* %0, i8* %1, i8* null, i32 0, i32 %2, i8** nonnull %5) #12
  %8 = icmp ne %struct.AVOption* %7, null
  %9 = load i8*, i8** %5, align 8
  %10 = icmp ne i8* %9, null
  %11 = and i1 %8, %10
  br i1 %11, label %12, label %24

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 13
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i8* %1) #12
  br label %24

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %9, i64 %20
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %3, align 4
  br label %24

24:                                               ; preds = %4, %16, %17
  %25 = phi i32 [ -22, %16 ], [ 0, %17 ], [ -1414549496, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_get_channel_layout(i8*, i8*, i32, i64* nocapture) local_unnamed_addr #2 {
  %5 = alloca i8*, align 8
  %6 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %7 = call %struct.AVOption* @av_opt_find2(i8* %0, i8* %1, i8* null, i32 0, i32 %2, i8** nonnull %5)
  %8 = icmp ne %struct.AVOption* %7, null
  %9 = load i8*, i8** %5, align 8
  %10 = icmp ne i8* %9, null
  %11 = and i1 %8, %10
  br i1 %11, label %12, label %24

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 17
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.26, i64 0, i64 0), i8* %1) #12
  br label %24

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %9, i64 %20
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %3, align 8
  br label %24

24:                                               ; preds = %4, %17, %16
  %25 = phi i32 [ -22, %16 ], [ 0, %17 ], [ -1414549496, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_get_dict_val(i8*, i8* readonly, i32, %struct.AVDictionary**) local_unnamed_addr #2 {
  %5 = alloca i8*, align 8
  %6 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %7 = call %struct.AVOption* @av_opt_find2(i8* %0, i8* %1, i8* null, i32 0, i32 %2, i8** nonnull %5)
  %8 = icmp ne %struct.AVOption* %7, null
  %9 = load i8*, i8** %5, align 8
  %10 = icmp ne i8* %9, null
  %11 = and i1 %8, %10
  br i1 %11, label %12, label %24

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 8
  br i1 %15, label %16, label %24

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %9, i64 %19
  %21 = bitcast i8* %20 to %struct.AVDictionary**
  %22 = load %struct.AVDictionary*, %struct.AVDictionary** %21, align 8
  %23 = call i32 @av_dict_copy(%struct.AVDictionary** %3, %struct.AVDictionary* %22, i32 0) #12
  br label %24

24:                                               ; preds = %12, %4, %16
  %25 = phi i32 [ 0, %16 ], [ -1414549496, %4 ], [ -22, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_flag_is_set(i8*, i8* readonly, i8* nocapture readonly) local_unnamed_addr #2 {
  %4 = alloca i64, align 8
  %5 = icmp eq i8* %0, null
  br i1 %5, label %82, label %6

6:                                                ; preds = %3
  %7 = bitcast i8* %0 to %struct.AVClass**
  %8 = load %struct.AVClass*, %struct.AVClass** %7, align 8
  %9 = icmp eq %struct.AVClass* %8, null
  br i1 %9, label %82, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %8, i64 0, i32 2
  br label %12

12:                                               ; preds = %36, %10
  %13 = phi %struct.AVOption* [ null, %10 ], [ %29, %36 ]
  %14 = icmp eq %struct.AVOption* %13, null
  br i1 %14, label %15, label %22

15:                                               ; preds = %12
  %16 = load %struct.AVOption*, %struct.AVOption** %11, align 8
  %17 = icmp eq %struct.AVOption* %16, null
  br i1 %17, label %42, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %16, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %42, label %27

22:                                               ; preds = %12
  %23 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %13, i64 1, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  %26 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %13, i64 1
  br i1 %25, label %42, label %27

27:                                               ; preds = %22, %18
  %28 = phi i8* [ %20, %18 ], [ %24, %22 ]
  %29 = phi %struct.AVOption* [ %16, %18 ], [ %26, %22 ]
  %30 = tail call i32 @strcmp(i8* nonnull %28, i8* %1) #13
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %29, i64 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 10
  br i1 %35, label %36, label %37

36:                                               ; preds = %32, %27
  br label %12

37:                                               ; preds = %32
  %38 = icmp eq %struct.AVOption* %29, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %29, i64 0, i32 8
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %22, %18, %15, %39, %37
  %43 = phi i8* [ %41, %39 ], [ null, %37 ], [ null, %15 ], [ null, %18 ], [ null, %22 ]
  %44 = phi i1 [ true, %39 ], [ false, %37 ], [ false, %15 ], [ false, %18 ], [ false, %22 ]
  br i1 %9, label %82, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %8, i64 0, i32 2
  %47 = icmp eq i8* %43, null
  br label %48

48:                                               ; preds = %81, %45
  %49 = phi %struct.AVOption* [ null, %45 ], [ %65, %81 ]
  %50 = icmp eq %struct.AVOption* %49, null
  br i1 %50, label %51, label %58

51:                                               ; preds = %48
  %52 = load %struct.AVOption*, %struct.AVOption** %46, align 8
  %53 = icmp eq %struct.AVOption* %52, null
  br i1 %53, label %82, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %52, i64 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %82, label %63

58:                                               ; preds = %48
  %59 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %49, i64 1, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, null
  %62 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %49, i64 1
  br i1 %61, label %82, label %63

63:                                               ; preds = %58, %54
  %64 = phi i8* [ %56, %54 ], [ %60, %58 ]
  %65 = phi %struct.AVOption* [ %52, %54 ], [ %62, %58 ]
  %66 = tail call i32 @strcmp(i8* nonnull %64, i8* %2) #13
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %81

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %65, i64 0, i32 3
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 10
  br i1 %47, label %72, label %73

72:                                               ; preds = %68
  br i1 %71, label %81, label %84

73:                                               ; preds = %68
  br i1 %71, label %74, label %81

74:                                               ; preds = %73
  %75 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %65, i64 0, i32 8
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %81, label %78

78:                                               ; preds = %74
  %79 = tail call i32 @strcmp(i8* nonnull %76, i8* nonnull %43) #13
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %78, %74, %73, %72, %63
  br label %48

82:                                               ; preds = %58, %54, %51, %6, %3, %42
  %83 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #12
  store i64 -6148914691236517206, i64* %4, align 8
  br label %98

84:                                               ; preds = %72, %78
  %85 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #12
  store i64 -6148914691236517206, i64* %4, align 8
  %86 = icmp ne %struct.AVOption* %65, null
  %87 = and i1 %44, %86
  %88 = and i1 %87, %71
  br i1 %88, label %89, label %98

89:                                               ; preds = %84
  %90 = call i32 @av_opt_get_int(i8* nonnull %0, i8* %1, i32 0, i64* nonnull %4)
  %91 = icmp slt i32 %90, 0
  br i1 %91, label %98, label %92

92:                                               ; preds = %89
  %93 = load i64, i64* %4, align 8
  %94 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %65, i64 0, i32 4, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, %93
  %97 = trunc i64 %96 to i32
  br label %98

98:                                               ; preds = %84, %82, %89, %92
  %99 = phi i8* [ %85, %92 ], [ %85, %89 ], [ %85, %84 ], [ %83, %82 ]
  %100 = phi i32 [ %97, %92 ], [ 0, %89 ], [ 0, %84 ], [ 0, %82 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #12
  ret i32 %100
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.AVOption* @av_opt_find(i8*, i8* readonly, i8* readonly, i32, i32) local_unnamed_addr #2 {
  %6 = tail call %struct.AVOption* @av_opt_find2(i8* %0, i8* %1, i8* %2, i32 %3, i32 %4, i8** null)
  ret %struct.AVOption* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_show2(i8*, i8*, i32, i32) local_unnamed_addr #2 {
  %5 = icmp eq i8* %0, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = bitcast i8* %0 to %struct.AVClass**
  %8 = load %struct.AVClass*, %struct.AVClass** %7, align 8
  %9 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %8, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0), i8* %10) #12
  tail call fastcc void @opt_list(i8* nonnull %0, i8* %1, i8* null, i32 %2, i32 %3, i32 -1)
  br label %11

11:                                               ; preds = %4, %6
  %12 = phi i32 [ 0, %6 ], [ -1, %4 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @opt_list(i8*, i8*, i8* readonly, i32, i32, i32) unnamed_addr #2 {
  %7 = alloca [512 x i8], align 16
  %8 = alloca %struct.AVOptionRanges*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca [25 x i8], align 16
  %11 = bitcast %struct.AVOptionRanges** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  store %struct.AVOptionRanges* inttoptr (i64 -6148914691236517206 to %struct.AVOptionRanges*), %struct.AVOptionRanges** %8, align 8
  %12 = icmp eq i8* %0, null
  br i1 %12, label %407, label %13

13:                                               ; preds = %6
  %14 = bitcast i8* %0 to %struct.AVClass**
  %15 = icmp eq i8* %2, null
  %16 = icmp eq i32 %5, 1
  %17 = getelementptr inbounds [25 x i8], [25 x i8]* %10, i64 0, i64 0
  %18 = bitcast i8** %9 to i8*
  %19 = getelementptr inbounds [512 x i8], [512 x i8]* %7, i64 0, i64 0
  br label %20

20:                                               ; preds = %406, %13
  %21 = phi %struct.AVOption* [ null, %13 ], [ %43, %406 ]
  %22 = load %struct.AVClass*, %struct.AVClass** %14, align 8
  %23 = icmp eq %struct.AVOption* %21, null
  %24 = icmp ne %struct.AVClass* %22, null
  %25 = and i1 %23, %24
  br i1 %25, label %26, label %34

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %22, i64 0, i32 2
  %28 = load %struct.AVOption*, %struct.AVOption** %27, align 8
  %29 = icmp eq %struct.AVOption* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %28, i64 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %407, label %42

34:                                               ; preds = %26, %20
  br i1 %23, label %407, label %35

35:                                               ; preds = %34
  %36 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %21, i64 1, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = icmp eq i8* %37, null
  %39 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %21, i64 1
  %40 = icmp eq %struct.AVOption* %39, null
  %41 = or i1 %40, %38
  br i1 %41, label %407, label %42

42:                                               ; preds = %35, %30
  %43 = phi %struct.AVOption* [ %28, %30 ], [ %39, %35 ]
  %44 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 0, i32 7
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, %3
  %47 = icmp ne i32 %46, 0
  %48 = and i32 %45, %4
  %49 = icmp eq i32 %48, 0
  %50 = and i1 %47, %49
  br i1 %50, label %51, label %406

51:                                               ; preds = %42
  %52 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 0, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 10
  br i1 %15, label %55, label %56

55:                                               ; preds = %51
  br i1 %54, label %406, label %65

56:                                               ; preds = %51
  br i1 %54, label %57, label %406

57:                                               ; preds = %56
  %58 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 0, i32 8
  %59 = load i8*, i8** %58, align 8
  %60 = call i32 @strcmp(i8* nonnull %2, i8* %59) #13
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %406

62:                                               ; preds = %57
  %63 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.69, i64 0, i64 0), i8* %64) #12
  br label %71

65:                                               ; preds = %55
  %66 = and i32 %45, 65536
  %67 = icmp eq i32 %66, 0
  %68 = select i1 %67, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i64 0, i64 0)
  %69 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 0, i32 0
  %70 = load i8*, i8** %69, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.70, i64 0, i64 0), i8* %68, i8* %70) #12
  br label %71

71:                                               ; preds = %62, %65
  %72 = load i32, i32* %52, align 4
  switch i32 %72, label %96 [
    i32 0, label %73
    i32 1, label %74
    i32 2, label %75
    i32 9, label %76
    i32 3, label %77
    i32 4, label %78
    i32 5, label %79
    i32 6, label %80
    i32 7, label %81
    i32 8, label %82
    i32 11, label %83
    i32 14, label %84
    i32 12, label %85
    i32 13, label %86
    i32 15, label %87
    i32 16, label %88
    i32 17, label %89
    i32 18, label %90
    i32 10, label %91
  ]

73:                                               ; preds = %71
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i64 0, i64 0)) #12
  br label %97

74:                                               ; preds = %71
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.74, i64 0, i64 0)) #12
  br label %97

75:                                               ; preds = %71
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i64 0, i64 0)) #12
  br label %97

76:                                               ; preds = %71
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i64 0, i64 0)) #12
  br label %97

77:                                               ; preds = %71
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.77, i64 0, i64 0)) #12
  br label %97

78:                                               ; preds = %71
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.78, i64 0, i64 0)) #12
  br label %97

79:                                               ; preds = %71
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.79, i64 0, i64 0)) #12
  br label %97

80:                                               ; preds = %71
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.80, i64 0, i64 0)) #12
  br label %97

81:                                               ; preds = %71
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i64 0, i64 0)) #12
  br label %97

82:                                               ; preds = %71
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.82, i64 0, i64 0)) #12
  br label %97

83:                                               ; preds = %71
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.83, i64 0, i64 0)) #12
  br label %97

84:                                               ; preds = %71
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.84, i64 0, i64 0)) #12
  br label %97

85:                                               ; preds = %71
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.85, i64 0, i64 0)) #12
  br label %97

86:                                               ; preds = %71
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.86, i64 0, i64 0)) #12
  br label %97

87:                                               ; preds = %71
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.87, i64 0, i64 0)) #12
  br label %97

88:                                               ; preds = %71
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i64 0, i64 0)) #12
  br label %97

89:                                               ; preds = %71
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.89, i64 0, i64 0)) #12
  br label %97

90:                                               ; preds = %71
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.90, i64 0, i64 0)) #12
  br label %97

91:                                               ; preds = %71
  br i1 %16, label %92, label %95

92:                                               ; preds = %91
  %93 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 0, i32 4, i32 0
  %94 = load i64, i64* %93, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.91, i64 0, i64 0), i64 %94) #12
  br label %97

95:                                               ; preds = %91
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i64 0, i64 0)) #12
  br label %97

96:                                               ; preds = %71
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i64 0, i64 0)) #12
  br label %97

97:                                               ; preds = %92, %95, %96, %90, %89, %88, %87, %86, %85, %84, %83, %82, %81, %80, %79, %78, %77, %76, %75, %74, %73
  %98 = load i32, i32* %44, align 8
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  %101 = select i1 %100, i32 46, i32 69
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.92, i64 0, i64 0), i32 %101) #12
  %102 = load i32, i32* %44, align 8
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = select i1 %104, i32 46, i32 68
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.92, i64 0, i64 0), i32 %105) #12
  %106 = load i32, i32* %44, align 8
  %107 = and i32 %106, 65536
  %108 = icmp eq i32 %107, 0
  %109 = select i1 %108, i32 46, i32 70
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.92, i64 0, i64 0), i32 %109) #12
  %110 = load i32, i32* %44, align 8
  %111 = and i32 %110, 16
  %112 = icmp eq i32 %111, 0
  %113 = select i1 %112, i32 46, i32 86
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.92, i64 0, i64 0), i32 %113) #12
  %114 = load i32, i32* %44, align 8
  %115 = and i32 %114, 8
  %116 = icmp eq i32 %115, 0
  %117 = select i1 %116, i32 46, i32 65
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.92, i64 0, i64 0), i32 %117) #12
  %118 = load i32, i32* %44, align 8
  %119 = and i32 %118, 32
  %120 = icmp eq i32 %119, 0
  %121 = select i1 %120, i32 46, i32 83
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.92, i64 0, i64 0), i32 %121) #12
  %122 = load i32, i32* %44, align 8
  %123 = and i32 %122, 64
  %124 = icmp eq i32 %123, 0
  %125 = select i1 %124, i32 46, i32 88
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.92, i64 0, i64 0), i32 %125) #12
  %126 = load i32, i32* %44, align 8
  %127 = trunc i32 %126 to i8
  %128 = icmp slt i8 %127, 0
  %129 = select i1 %128, i32 82, i32 46
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.92, i64 0, i64 0), i32 %129) #12
  %130 = load i32, i32* %44, align 8
  %131 = and i32 %130, 256
  %132 = icmp eq i32 %131, 0
  %133 = select i1 %132, i32 46, i32 66
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.92, i64 0, i64 0), i32 %133) #12
  %134 = load i32, i32* %44, align 8
  %135 = trunc i32 %134 to i16
  %136 = icmp slt i16 %135, 0
  %137 = select i1 %136, i32 84, i32 46
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.92, i64 0, i64 0), i32 %137) #12
  %138 = load i32, i32* %44, align 8
  %139 = and i32 %138, 131072
  %140 = icmp eq i32 %139, 0
  %141 = select i1 %140, i32 46, i32 80
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.92, i64 0, i64 0), i32 %141) #12
  %142 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 0, i32 1
  %143 = load i8*, i8** %142, align 8
  %144 = icmp eq i8* %143, null
  br i1 %144, label %146, label %145

145:                                              ; preds = %97
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.93, i64 0, i64 0), i8* nonnull %143) #12
  br label %146

146:                                              ; preds = %97, %145
  %147 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 0, i32 0
  %148 = load i8*, i8** %147, align 8
  %149 = load %struct.AVClass*, %struct.AVClass** %14, align 8
  %150 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %149, i64 0, i32 3
  %151 = load i32, i32* %150, align 8
  %152 = icmp sgt i32 %151, 3410688
  br i1 %152, label %153, label %156

153:                                              ; preds = %146
  %154 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %149, i64 0, i32 10
  %155 = load i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)** %154, align 8
  br label %156

156:                                              ; preds = %153, %146
  %157 = phi i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* [ %155, %153 ], [ null, %146 ]
  %158 = icmp eq i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* %157, null
  %159 = select i1 %158, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* @av_opt_query_ranges_default, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* %157
  %160 = call i32 %159(%struct.AVOptionRanges** nonnull %8, i8* nonnull %0, i8* %148, i32 2) #12
  %161 = icmp sgt i32 %160, -1
  br i1 %161, label %162, label %228

162:                                              ; preds = %156
  %163 = load %struct.AVOptionRanges*, %struct.AVOptionRanges** %8, align 8
  %164 = getelementptr inbounds %struct.AVOptionRanges, %struct.AVOptionRanges* %163, i64 0, i32 2
  store i32 1, i32* %164, align 4
  %165 = load i32, i32* %52, align 4
  switch i32 %165, label %192 [
    i32 1, label %166
    i32 2, label %166
    i32 9, label %166
    i32 3, label %166
    i32 4, label %166
    i32 6, label %166
  ]

166:                                              ; preds = %162, %162, %162, %162, %162, %162
  %167 = getelementptr inbounds %struct.AVOptionRanges, %struct.AVOptionRanges* %163, i64 0, i32 1
  %168 = load i32, i32* %167, align 8
  %169 = icmp sgt i32 %168, 0
  br i1 %169, label %170, label %192

170:                                              ; preds = %166, %170
  %171 = phi i64 [ %186, %170 ], [ 0, %166 ]
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.94, i64 0, i64 0)) #12
  %172 = load %struct.AVOptionRanges*, %struct.AVOptionRanges** %8, align 8
  %173 = getelementptr inbounds %struct.AVOptionRanges, %struct.AVOptionRanges* %172, i64 0, i32 0
  %174 = load %struct.AVOptionRange**, %struct.AVOptionRange*** %173, align 8
  %175 = getelementptr inbounds %struct.AVOptionRange*, %struct.AVOptionRange** %174, i64 %171
  %176 = load %struct.AVOptionRange*, %struct.AVOptionRange** %175, align 8
  %177 = getelementptr inbounds %struct.AVOptionRange, %struct.AVOptionRange* %176, i64 0, i32 1
  %178 = load double, double* %177, align 8
  call fastcc void @log_value(i8* %1, double %178)
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i64 0, i64 0)) #12
  %179 = load %struct.AVOptionRanges*, %struct.AVOptionRanges** %8, align 8
  %180 = getelementptr inbounds %struct.AVOptionRanges, %struct.AVOptionRanges* %179, i64 0, i32 0
  %181 = load %struct.AVOptionRange**, %struct.AVOptionRange*** %180, align 8
  %182 = getelementptr inbounds %struct.AVOptionRange*, %struct.AVOptionRange** %181, i64 %171
  %183 = load %struct.AVOptionRange*, %struct.AVOptionRange** %182, align 8
  %184 = getelementptr inbounds %struct.AVOptionRange, %struct.AVOptionRange* %183, i64 0, i32 2
  %185 = load double, double* %184, align 8
  call fastcc void @log_value(i8* %1, double %185)
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i64 0, i64 0)) #12
  %186 = add nuw nsw i64 %171, 1
  %187 = load %struct.AVOptionRanges*, %struct.AVOptionRanges** %8, align 8
  %188 = getelementptr inbounds %struct.AVOptionRanges, %struct.AVOptionRanges* %187, i64 0, i32 1
  %189 = load i32, i32* %188, align 8
  %190 = sext i32 %189 to i64
  %191 = icmp slt i64 %186, %190
  br i1 %191, label %170, label %192

192:                                              ; preds = %170, %166, %162
  %193 = phi %struct.AVOptionRanges* [ %163, %162 ], [ %163, %166 ], [ %187, %170 ]
  %194 = icmp eq %struct.AVOptionRanges* %193, null
  br i1 %194, label %228, label %195

195:                                              ; preds = %192
  %196 = getelementptr inbounds %struct.AVOptionRanges, %struct.AVOptionRanges* %193, i64 0, i32 1
  %197 = load i32, i32* %196, align 8
  %198 = getelementptr inbounds %struct.AVOptionRanges, %struct.AVOptionRanges* %193, i64 0, i32 2
  %199 = load i32, i32* %198, align 4
  %200 = mul nsw i32 %199, %197
  %201 = icmp sgt i32 %200, 0
  br i1 %201, label %202, label %226

202:                                              ; preds = %195
  %203 = getelementptr inbounds %struct.AVOptionRanges, %struct.AVOptionRanges* %193, i64 0, i32 0
  br label %204

204:                                              ; preds = %219, %202
  %205 = phi i32 [ %199, %202 ], [ %220, %219 ]
  %206 = phi i32 [ %197, %202 ], [ %221, %219 ]
  %207 = phi i64 [ 0, %202 ], [ %222, %219 ]
  %208 = load %struct.AVOptionRange**, %struct.AVOptionRange*** %203, align 8
  %209 = getelementptr inbounds %struct.AVOptionRange*, %struct.AVOptionRange** %208, i64 %207
  %210 = load %struct.AVOptionRange*, %struct.AVOptionRange** %209, align 8
  %211 = icmp eq %struct.AVOptionRange* %210, null
  br i1 %211, label %219, label %212

212:                                              ; preds = %204
  %213 = bitcast %struct.AVOptionRange* %210 to i8*
  call void @av_freep(i8* nonnull %213) #12
  %214 = load %struct.AVOptionRange**, %struct.AVOptionRange*** %203, align 8
  %215 = getelementptr inbounds %struct.AVOptionRange*, %struct.AVOptionRange** %214, i64 %207
  %216 = bitcast %struct.AVOptionRange** %215 to i8*
  call void @av_freep(i8* %216) #12
  %217 = load i32, i32* %196, align 8
  %218 = load i32, i32* %198, align 4
  br label %219

219:                                              ; preds = %212, %204
  %220 = phi i32 [ %205, %204 ], [ %218, %212 ]
  %221 = phi i32 [ %206, %204 ], [ %217, %212 ]
  %222 = add nuw nsw i64 %207, 1
  %223 = mul nsw i32 %221, %220
  %224 = sext i32 %223 to i64
  %225 = icmp slt i64 %222, %224
  br i1 %225, label %204, label %226

226:                                              ; preds = %219, %195
  %227 = bitcast %struct.AVOptionRanges* %193 to i8*
  call void @av_freep(i8* nonnull %227) #12
  call void @av_freep(i8* nonnull %11) #12
  br label %228

228:                                              ; preds = %226, %192, %156
  %229 = load i32, i32* %52, align 4
  switch i32 %229, label %235 [
    i32 10, label %398
    i32 7, label %398
    i32 16, label %230
    i32 11, label %230
    i32 5, label %230
    i32 8, label %230
    i32 14, label %230
  ]

230:                                              ; preds = %228, %228, %228, %228, %228
  %231 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 0, i32 4
  %232 = bitcast %union.anon* %231 to i8**
  %233 = load i8*, i8** %232, align 8
  %234 = icmp eq i8* %233, null
  br i1 %234, label %398, label %235

235:                                              ; preds = %228, %230
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.97, i64 0, i64 0)) #12
  %236 = load i32, i32* %52, align 4
  switch i32 %236, label %397 [
    i32 18, label %237
    i32 0, label %245
    i32 15, label %307
    i32 1, label %310
    i32 9, label %310
    i32 2, label %310
    i32 3, label %364
    i32 4, label %364
    i32 6, label %368
    i32 12, label %376
    i32 13, label %383
    i32 16, label %390
    i32 11, label %390
    i32 5, label %390
    i32 8, label %390
    i32 14, label %390
    i32 17, label %394
  ]

237:                                              ; preds = %235
  %238 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 0, i32 4, i32 0
  %239 = load i64, i64* %238, align 8
  %240 = trunc i64 %239 to i32
  %241 = icmp slt i32 %240, 0
  %242 = icmp eq i32 %240, 0
  %243 = select i1 %242, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0)
  %244 = select i1 %241, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i64 0, i64 0), i8* %243
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* %244) #12
  br label %397

245:                                              ; preds = %235
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %246 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 0, i32 8
  %247 = load i8*, i8** %246, align 8
  %248 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 0, i32 4, i32 0
  %249 = load i64, i64* %248, align 8
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %19) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -86, i64 512, i1 false) #12
  store i8 0, i8* %19, align 16
  %250 = icmp eq i8* %247, null
  br i1 %250, label %299, label %251

251:                                              ; preds = %245, %295
  %252 = phi %struct.AVOption* [ %272, %295 ], [ null, %245 ]
  %253 = load %struct.AVClass*, %struct.AVClass** %14, align 8
  %254 = icmp eq %struct.AVOption* %252, null
  %255 = icmp ne %struct.AVClass* %253, null
  %256 = and i1 %254, %255
  br i1 %256, label %257, label %265

257:                                              ; preds = %251
  %258 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %253, i64 0, i32 2
  %259 = load %struct.AVOption*, %struct.AVOption** %258, align 8
  %260 = icmp eq %struct.AVOption* %259, null
  br i1 %260, label %265, label %261

261:                                              ; preds = %257
  %262 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %259, i64 0, i32 0
  %263 = load i8*, i8** %262, align 8
  %264 = icmp eq i8* %263, null
  br i1 %264, label %296, label %271

265:                                              ; preds = %257, %251
  br i1 %254, label %296, label %266

266:                                              ; preds = %265
  %267 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %252, i64 1, i32 0
  %268 = load i8*, i8** %267, align 8
  %269 = icmp eq i8* %268, null
  %270 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %252, i64 1
  br i1 %269, label %296, label %271

271:                                              ; preds = %266, %261
  %272 = phi %struct.AVOption* [ %259, %261 ], [ %270, %266 ]
  %273 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %272, i64 0, i32 3
  %274 = load i32, i32* %273, align 4
  %275 = icmp eq i32 %274, 10
  br i1 %275, label %276, label %295

276:                                              ; preds = %271
  %277 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %272, i64 0, i32 8
  %278 = load i8*, i8** %277, align 8
  %279 = call i32 @strcmp(i8* %278, i8* nonnull %247) #13
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %295

281:                                              ; preds = %276
  %282 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %272, i64 0, i32 4, i32 0
  %283 = load i64, i64* %282, align 8
  %284 = and i64 %283, %249
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %295, label %286

286:                                              ; preds = %281
  %287 = load i8, i8* %19, align 16
  %288 = icmp eq i8 %287, 0
  br i1 %288, label %291, label %289

289:                                              ; preds = %286
  %290 = call i64 (i8*, i64, i8*, ...) @av_strlcatf(i8* nonnull %19, i64 512, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.115, i64 0, i64 0)) #12
  br label %291

291:                                              ; preds = %289, %286
  %292 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %272, i64 0, i32 0
  %293 = load i8*, i8** %292, align 8
  %294 = call i64 (i8*, i64, i8*, ...) @av_strlcatf(i8* nonnull %19, i64 512, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* %293) #12
  br label %295

295:                                              ; preds = %291, %281, %276, %271
  br label %251

296:                                              ; preds = %266, %265, %261
  %297 = load i8, i8* %19, align 16
  %298 = icmp eq i8 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %245, %296
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %19) #12
  store i8* null, i8** %9, align 8
  br label %304

300:                                              ; preds = %296
  %301 = call noalias i8* @av_strdup(i8* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %19) #12
  store i8* %301, i8** %9, align 8
  %302 = icmp eq i8* %301, null
  br i1 %302, label %304, label %303

303:                                              ; preds = %300
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* nonnull %301) #12
  call void @av_freep(i8* nonnull %18) #12
  br label %306

304:                                              ; preds = %299, %300
  %305 = load i64, i64* %248, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.98, i64 0, i64 0), i64 %305) #12
  br label %306

306:                                              ; preds = %304, %303
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  br label %397

307:                                              ; preds = %235
  call void @llvm.lifetime.start.p0i8(i64 25, i8* nonnull %17) #12
  %308 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 0, i32 4, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -86, i64 25, i1 false)
  %309 = load i64, i64* %308, align 8
  call fastcc void @format_duration(i8* nonnull %17, i64 25, i64 %309)
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 25, i8* nonnull %17) #12
  br label %397

310:                                              ; preds = %235, %235, %235
  %311 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 0, i32 8
  %312 = load i8*, i8** %311, align 8
  %313 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 0, i32 4, i32 0
  %314 = load i64, i64* %313, align 8
  %315 = icmp eq i8* %312, null
  br i1 %315, label %357, label %316

316:                                              ; preds = %310
  %317 = load %struct.AVClass*, %struct.AVClass** %14, align 8
  %318 = icmp ne %struct.AVClass* %317, null
  %319 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %317, i64 0, i32 2
  br label %320

320:                                              ; preds = %351, %316
  %321 = phi %struct.AVOption* [ null, %316 ], [ %338, %351 ]
  %322 = icmp eq %struct.AVOption* %321, null
  %323 = and i1 %318, %322
  br i1 %323, label %324, label %331

324:                                              ; preds = %320
  %325 = load %struct.AVOption*, %struct.AVOption** %319, align 8
  %326 = icmp eq %struct.AVOption* %325, null
  br i1 %326, label %331, label %327

327:                                              ; preds = %324
  %328 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %325, i64 0, i32 0
  %329 = load i8*, i8** %328, align 8
  %330 = icmp eq i8* %329, null
  br i1 %330, label %357, label %337

331:                                              ; preds = %324, %320
  br i1 %322, label %357, label %332

332:                                              ; preds = %331
  %333 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %321, i64 1, i32 0
  %334 = load i8*, i8** %333, align 8
  %335 = icmp eq i8* %334, null
  %336 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %321, i64 1
  br i1 %335, label %357, label %337

337:                                              ; preds = %332, %327
  %338 = phi %struct.AVOption* [ %325, %327 ], [ %336, %332 ]
  %339 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %338, i64 0, i32 3
  %340 = load i32, i32* %339, align 4
  %341 = icmp eq i32 %340, 10
  br i1 %341, label %342, label %351

342:                                              ; preds = %337
  %343 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %338, i64 0, i32 8
  %344 = load i8*, i8** %343, align 8
  %345 = call i32 @strcmp(i8* %344, i8* nonnull %312) #13
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %347, label %351

347:                                              ; preds = %342
  %348 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %338, i64 0, i32 4, i32 0
  %349 = load i64, i64* %348, align 8
  %350 = icmp eq i64 %349, %314
  br i1 %350, label %352, label %351

351:                                              ; preds = %347, %342, %337
  br label %320

352:                                              ; preds = %347
  %353 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %338, i64 0, i32 0
  %354 = load i8*, i8** %353, align 8
  %355 = icmp eq i8* %354, null
  br i1 %355, label %357, label %356

356:                                              ; preds = %352
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* nonnull %354) #12
  br label %397

357:                                              ; preds = %331, %332, %327, %310, %352
  switch i64 %314, label %363 [
    i64 2147483647, label %358
    i64 -2147483648, label %359
    i64 4294967295, label %360
    i64 9223372036854775807, label %361
    i64 -9223372036854775808, label %362
  ]

358:                                              ; preds = %357
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.101, i64 0, i64 0)) #12
  br label %397

359:                                              ; preds = %357
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.102, i64 0, i64 0)) #12
  br label %397

360:                                              ; preds = %357
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.103, i64 0, i64 0)) #12
  br label %397

361:                                              ; preds = %357
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.104, i64 0, i64 0)) #12
  br label %397

362:                                              ; preds = %357
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.105, i64 0, i64 0)) #12
  br label %397

363:                                              ; preds = %357
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0), i64 %314) #12
  br label %397

364:                                              ; preds = %235, %235
  %365 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 0, i32 4
  %366 = bitcast %union.anon* %365 to double*
  %367 = load double, double* %366, align 8
  call fastcc void @log_value(i8* %1, double %367)
  br label %397

368:                                              ; preds = %235
  %369 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 0, i32 4
  %370 = bitcast %union.anon* %369 to double*
  %371 = load double, double* %370, align 8
  %372 = call i64 @av_d2q(double %371, i32 2147483647) #14
  %373 = trunc i64 %372 to i32
  %374 = lshr i64 %372, 32
  %375 = trunc i64 %374 to i32
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i32 %373, i32 %375) #12
  br label %397

376:                                              ; preds = %235
  %377 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 0, i32 4, i32 0
  %378 = load i64, i64* %377, align 8
  %379 = trunc i64 %378 to i32
  %380 = call i8* @av_get_pix_fmt_name(i32 %379) #12
  %381 = icmp eq i8* %380, null
  %382 = select i1 %381, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %380
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* %382) #12
  br label %397

383:                                              ; preds = %235
  %384 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 0, i32 4, i32 0
  %385 = load i64, i64* %384, align 8
  %386 = trunc i64 %385 to i32
  %387 = call i8* @av_get_sample_fmt_name(i32 %386) #12
  %388 = icmp eq i8* %387, null
  %389 = select i1 %388, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %387
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* %389) #12
  br label %397

390:                                              ; preds = %235, %235, %235, %235, %235
  %391 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 0, i32 4
  %392 = bitcast %union.anon* %391 to i8**
  %393 = load i8*, i8** %392, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.99, i64 0, i64 0), i8* %393) #12
  br label %397

394:                                              ; preds = %235
  %395 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 0, i32 4, i32 0
  %396 = load i64, i64* %395, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0), i64 %396) #12
  br label %397

397:                                              ; preds = %363, %362, %361, %360, %359, %358, %356, %235, %394, %390, %383, %376, %368, %364, %307, %306, %237
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.96, i64 0, i64 0)) #12
  br label %398

398:                                              ; preds = %228, %228, %230, %397
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.100, i64 0, i64 0)) #12
  %399 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 0, i32 8
  %400 = load i8*, i8** %399, align 8
  %401 = icmp eq i8* %400, null
  br i1 %401, label %406, label %402

402:                                              ; preds = %398
  %403 = load i32, i32* %52, align 4
  %404 = icmp eq i32 %403, 10
  br i1 %404, label %406, label %405

405:                                              ; preds = %402
  call fastcc void @opt_list(i8* nonnull %0, i8* %1, i8* nonnull %400, i32 %3, i32 %4, i32 %403)
  br label %406

406:                                              ; preds = %405, %398, %402, %55, %57, %56, %42
  br label %20

407:                                              ; preds = %34, %35, %30, %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_opt_set_defaults(i8*) local_unnamed_addr #2 {
  tail call void @av_opt_set_defaults2(i8* %0, i32 0, i32 0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_opt_set_defaults2(i8*, i32, i32) local_unnamed_addr #2 {
  %4 = alloca %struct.AVDictionary*, align 8
  %5 = icmp eq i8* %0, null
  br i1 %5, label %132, label %6

6:                                                ; preds = %3
  %7 = bitcast i8* %0 to %struct.AVClass**
  %8 = bitcast %struct.AVDictionary** %4 to i8*
  %9 = bitcast %struct.AVDictionary** %4 to i64*
  br label %10

10:                                               ; preds = %108, %6
  %11 = phi %struct.AVOption* [ null, %6 ], [ %33, %108 ]
  %12 = load %struct.AVClass*, %struct.AVClass** %7, align 8
  %13 = icmp eq %struct.AVOption* %11, null
  %14 = icmp ne %struct.AVClass* %12, null
  %15 = and i1 %13, %14
  br i1 %15, label %16, label %24

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %12, i64 0, i32 2
  %18 = load %struct.AVOption*, %struct.AVOption** %17, align 8
  %19 = icmp eq %struct.AVOption* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %18, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %132, label %32

24:                                               ; preds = %16, %10
  br i1 %13, label %132, label %25

25:                                               ; preds = %24
  %26 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %11, i64 1, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  %29 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %11, i64 1
  %30 = icmp eq %struct.AVOption* %29, null
  %31 = or i1 %30, %28
  br i1 %31, label %132, label %32

32:                                               ; preds = %25, %20
  %33 = phi %struct.AVOption* [ %18, %20 ], [ %29, %25 ]
  %34 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %33, i64 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %0, i64 %36
  %38 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %33, i64 0, i32 7
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, %1
  %41 = icmp ne i32 %40, %2
  %42 = trunc i32 %39 to i8
  %43 = icmp slt i8 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %108, label %45

45:                                               ; preds = %32
  %46 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %33, i64 0, i32 3
  %47 = load i32, i32* %46, align 4
  switch i32 %47, label %129 [
    i32 10, label %108
    i32 18, label %48
    i32 0, label %48
    i32 1, label %48
    i32 2, label %48
    i32 9, label %48
    i32 15, label %48
    i32 17, label %48
    i32 12, label %48
    i32 13, label %48
    i32 3, label %52
    i32 4, label %52
    i32 6, label %57
    i32 16, label %67
    i32 5, label %76
    i32 11, label %82
    i32 14, label %100
    i32 7, label %109
    i32 8, label %115
  ]

48:                                               ; preds = %45, %45, %45, %45, %45, %45, %45, %45, %45
  %49 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %33, i64 0, i32 4, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = call fastcc i32 @write_number(i8* nonnull %0, %struct.AVOption* nonnull %33, i8* %37, double 1.000000e+00, i32 1, i64 %50)
  br label %108

52:                                               ; preds = %45, %45
  %53 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %33, i64 0, i32 4
  %54 = bitcast %union.anon* %53 to double*
  %55 = load double, double* %54, align 8
  %56 = call fastcc i32 @write_number(i8* nonnull %0, %struct.AVOption* nonnull %33, i8* %37, double %55, i32 1, i64 1)
  br label %108

57:                                               ; preds = %45
  %58 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %33, i64 0, i32 4
  %59 = bitcast %union.anon* %58 to double*
  %60 = load double, double* %59, align 8
  %61 = call i64 @av_d2q(double %60, i32 2147483647) #14
  %62 = lshr i64 %61, 32
  %63 = trunc i64 %62 to i32
  %64 = shl i64 %61, 32
  %65 = ashr exact i64 %64, 32
  %66 = call fastcc i32 @write_number(i8* nonnull %0, %struct.AVOption* nonnull %33, i8* %37, double 1.000000e+00, i32 %63, i64 %65)
  br label %108

67:                                               ; preds = %45
  %68 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %33, i64 0, i32 4
  %69 = bitcast %union.anon* %68 to i8**
  %70 = load i8*, i8** %69, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %108, label %72

72:                                               ; preds = %67
  %73 = call i32 @av_parse_color(i8* %37, i8* nonnull %70, i32 -1, i8* nonnull %0) #12
  %74 = icmp slt i32 %73, 0
  br i1 %74, label %75, label %108

75:                                               ; preds = %72
  call void (i8*, i32, i8*, ...) @av_log(i8* nonnull %0, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.56, i64 0, i64 0), i8* nonnull %70) #12
  br label %108

76:                                               ; preds = %45
  %77 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %33, i64 0, i32 4
  %78 = bitcast %union.anon* %77 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = bitcast i8* %37 to i8**
  call void @av_freep(i8* %37) #12
  %81 = call noalias i8* @av_strdup(i8* %79) #12
  store i8* %81, i8** %80, align 8
  br label %108

82:                                               ; preds = %45
  %83 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %33, i64 0, i32 4
  %84 = bitcast %union.anon* %83 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = bitcast i8* %37 to i32*
  %87 = icmp eq i8* %85, null
  br i1 %87, label %91, label %88

88:                                               ; preds = %82
  %89 = call i32 @strcmp(i8* nonnull %85, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #13
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %88, %82
  %92 = getelementptr inbounds i8, i8* %37, i64 4
  %93 = bitcast i8* %92 to i32*
  store i32 0, i32* %93, align 4
  store i32 0, i32* %86, align 4
  br label %108

94:                                               ; preds = %88
  %95 = getelementptr inbounds i8, i8* %37, i64 4
  %96 = bitcast i8* %95 to i32*
  %97 = call i32 @av_parse_video_size(i32* %86, i32* %96, i8* nonnull %85) #12
  %98 = icmp slt i32 %97, 0
  br i1 %98, label %99, label %108

99:                                               ; preds = %94
  call void (i8*, i32, i8*, ...) @av_log(i8* nonnull %0, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i64 0, i64 0), i8* nonnull %85) #12
  br label %108

100:                                              ; preds = %45
  %101 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %33, i64 0, i32 4
  %102 = bitcast %union.anon* %101 to i8**
  %103 = load i8*, i8** %102, align 8
  %104 = bitcast i8* %37 to %struct.AVRational*
  %105 = call i32 @av_parse_video_rate(%struct.AVRational* %104, i8* %103) #12
  %106 = icmp slt i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %100
  call void (i8*, i32, i8*, ...) @av_log(i8* nonnull %0, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.50, i64 0, i64 0), i8* %103) #12
  br label %108

108:                                              ; preds = %107, %100, %99, %94, %91, %75, %72, %67, %32, %48, %45, %52, %57, %76, %109, %128, %129
  br label %10

109:                                              ; preds = %45
  %110 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %33, i64 0, i32 4
  %111 = bitcast %union.anon* %110 to i8**
  %112 = load i8*, i8** %111, align 8
  %113 = bitcast i8* %37 to i8**
  %114 = call fastcc i32 @set_string_binary(i8* %112, i8** %113)
  br label %108

115:                                              ; preds = %45
  %116 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %33, i64 0, i32 4
  %117 = bitcast %union.anon* %116 to i8**
  %118 = load i8*, i8** %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  store %struct.AVDictionary* null, %struct.AVDictionary** %4, align 8
  %119 = icmp eq i8* %118, null
  br i1 %119, label %124, label %120

120:                                              ; preds = %115
  %121 = call i32 @av_dict_parse_string(%struct.AVDictionary** nonnull %4, i8* nonnull %118, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0), i32 0) #12
  %122 = icmp slt i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @av_dict_free(%struct.AVDictionary** nonnull %4) #12
  br label %128

124:                                              ; preds = %120, %115
  %125 = bitcast i8* %37 to %struct.AVDictionary**
  call void @av_dict_free(%struct.AVDictionary** %125) #12
  %126 = load i64, i64* %9, align 8
  %127 = bitcast i8* %37 to i64*
  store i64 %126, i64* %127, align 8
  br label %128

128:                                              ; preds = %123, %124
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  br label %108

129:                                              ; preds = %45
  %130 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %33, i64 0, i32 0
  %131 = load i8*, i8** %130, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* nonnull %0, i32 48, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.28, i64 0, i64 0), i32 %47, i8* %131) #12
  br label %108

132:                                              ; preds = %24, %25, %20, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_set_options_string(i8*, i8*, i8*, i8*) local_unnamed_addr #2 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i8* %1, i8** %6, align 8
  %7 = icmp eq i8* %1, null
  br i1 %7, label %47, label %8

8:                                                ; preds = %4
  %9 = load i8, i8* %1, align 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %47, label %11

11:                                               ; preds = %8
  %12 = bitcast i8** %5 to i8*
  br label %13

13:                                               ; preds = %11, %43
  %14 = phi i32 [ 0, %11 ], [ %39, %43 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  %15 = call i8* @av_get_token(i8** nonnull %6, i8* %2) #12
  store i8* %15, i8** %5, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %13
  %18 = load i8, i8* %15, align 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %29, label %20

20:                                               ; preds = %17
  %21 = load i8*, i8** %6, align 8
  %22 = call i64 @strspn(i8* %21, i8* %2) #13
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds i8, i8* %21, i64 1
  store i8* %25, i8** %6, align 8
  %26 = call i8* @av_get_token(i8** nonnull %6, i8* %3) #12
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  call void @av_freep(i8* nonnull %12) #12
  br label %34

29:                                               ; preds = %20, %17
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.116, i64 0, i64 0), i8* nonnull %15) #12
  call void @av_free(i8* nonnull %15) #12
  br label %34

30:                                               ; preds = %24
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 48, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.117, i64 0, i64 0), i8* nonnull %15, i8* nonnull %26) #12
  %31 = call i32 @av_opt_set(i8* %0, i8* nonnull %15, i8* nonnull %26, i32 1) #12
  %32 = icmp eq i32 %31, -1414549496
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.118, i64 0, i64 0), i8* nonnull %15) #12
  br label %36

34:                                               ; preds = %13, %28, %29
  %35 = phi i32 [ -22, %29 ], [ -12, %28 ], [ -12, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  br label %47

36:                                               ; preds = %30, %33
  call void @av_free(i8* nonnull %15) #12
  call void @av_free(i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  %37 = icmp slt i32 %31, 0
  br i1 %37, label %47, label %38

38:                                               ; preds = %36
  %39 = add nuw nsw i32 %14, 1
  %40 = load i8*, i8** %6, align 8
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %40, i64 1
  store i8* %44, i8** %6, align 8
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %13

47:                                               ; preds = %38, %36, %43, %8, %34, %4
  %48 = phi i32 [ 0, %4 ], [ %35, %34 ], [ 0, %8 ], [ %39, %38 ], [ %31, %36 ], [ %39, %43 ]
  ret i32 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_get_key_value(i8** nocapture, i8* readonly, i8*, i32, i8** nocapture, i8** nocapture) local_unnamed_addr #2 {
  %7 = alloca i8*, align 8
  %8 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = bitcast i8** %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast i8** %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = inttoptr i64 %10 to i8*
  %13 = tail call i64 @strspn(i8* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.119, i64 0, i64 0)) #13
  %14 = getelementptr inbounds i8, i8* %12, i64 %13
  br label %15

15:                                               ; preds = %15, %6
  %16 = phi i8* [ %14, %6 ], [ %32, %15 ]
  %17 = load i8, i8* %16, align 1
  %18 = sext i8 %17 to i32
  %19 = or i32 %18, 32
  %20 = add nsw i32 %19, -97
  %21 = icmp ult i32 %20, 26
  %22 = add nsw i32 %18, -48
  %23 = icmp ult i32 %22, 10
  %24 = or i1 %23, %21
  %25 = icmp eq i8 %17, 45
  %26 = or i1 %25, %24
  %27 = icmp eq i8 %17, 95
  %28 = or i1 %27, %26
  %29 = or i8 %17, 1
  %30 = icmp eq i8 %29, 47
  %31 = or i1 %30, %28
  %32 = getelementptr inbounds i8, i8* %16, i64 1
  br i1 %31, label %15, label %33

33:                                               ; preds = %15
  %34 = tail call i64 @strspn(i8* %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.119, i64 0, i64 0)) #13
  %35 = getelementptr inbounds i8, i8* %16, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %53, label %38

38:                                               ; preds = %33
  %39 = sext i8 %36 to i32
  %40 = tail call i8* @strchr(i8* %1, i32 %39) #13
  %41 = icmp eq i8* %40, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %38
  %43 = ptrtoint i8* %16 to i64
  %44 = ptrtoint i8* %14 to i64
  %45 = sub i64 %43, %44
  %46 = add nsw i64 %45, 1
  %47 = tail call noalias i8* @av_malloc(i64 %46) #12
  %48 = ptrtoint i8* %47 to i64
  %49 = icmp eq i8* %47, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %42
  %51 = getelementptr inbounds i8, i8* %35, i64 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %47, i8* align 1 %14, i64 %45, i1 false) #12
  %52 = getelementptr inbounds i8, i8* %47, i64 %45
  store i8 0, i8* %52, align 1
  store i8* %51, i8** %7, align 8
  br label %57

53:                                               ; preds = %33, %38, %42
  %54 = phi i64 [ 0, %33 ], [ 0, %38 ], [ %48, %42 ]
  %55 = and i32 %3, 1
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %66, label %57

57:                                               ; preds = %50, %53
  %58 = phi i64 [ %48, %50 ], [ %54, %53 ]
  %59 = call i8* @av_get_token(i8** nonnull %7, i8* %2) #12
  %60 = icmp eq i8* %59, null
  br i1 %60, label %61, label %63

61:                                               ; preds = %57
  %62 = inttoptr i64 %58 to i8*
  call void @av_free(i8* %62) #12
  br label %66

63:                                               ; preds = %57
  %64 = load i64, i64* %11, align 8
  store i64 %64, i64* %9, align 8
  %65 = bitcast i8** %4 to i64*
  store i64 %58, i64* %65, align 8
  store i8* %59, i8** %5, align 8
  br label %66

66:                                               ; preds = %53, %63, %61
  %67 = phi i32 [ 0, %63 ], [ -12, %61 ], [ -22, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  ret i32 %67
}

declare i8* @av_get_token(i8**, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_set_from_string(i8*, i8*, i8** readonly, i8*, i8*) local_unnamed_addr #2 {
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca [64 x i8], align 1
  store i8* %1, i8** %6, align 8
  %11 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  store i8* null, i8** %7, align 8
  %12 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %13 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %14 = icmp eq i8* %1, null
  br i1 %14, label %68, label %15

15:                                               ; preds = %5
  %16 = load i8, i8* %1, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %68, label %18

18:                                               ; preds = %15
  %19 = icmp eq i8** %2, null
  %20 = select i1 %19, i8** %7, i8** %2
  br label %21

21:                                               ; preds = %18, %64
  %22 = phi i32 [ %65, %64 ], [ 0, %18 ]
  %23 = phi i8** [ %55, %64 ], [ %20, %18 ]
  %24 = load i8*, i8** %23, align 8
  %25 = icmp ne i8* %24, null
  %26 = zext i1 %25 to i32
  %27 = call i32 @av_opt_get_key_value(i8** nonnull %6, i8* %3, i8* %4, i32 %26, i8** nonnull %8, i8** nonnull %9)
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %21
  %30 = icmp eq i32 %27, -22
  %31 = load i8*, i8** %6, align 8
  br i1 %30, label %32, label %33

32:                                               ; preds = %29
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29, i64 0, i64 0), i8* %31) #12
  br label %68

33:                                               ; preds = %29
  %34 = getelementptr inbounds [64 x i8], [64 x i8]* %10, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %34, i8 0, i64 64, i1 false)
  %35 = call i32 @av_strerror(i32 %27, i8* nonnull %34, i64 64) #12
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.30, i64 0, i64 0), i8* %31, i8* nonnull %34) #12
  br label %68

36:                                               ; preds = %21
  %37 = load i8*, i8** %6, align 8
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds i8, i8* %37, i64 1
  store i8* %41, i8** %6, align 8
  br label %42

42:                                               ; preds = %36, %40
  %43 = phi i8* [ %37, %36 ], [ %41, %40 ]
  %44 = load i8*, i8** %8, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %42, %46
  %47 = phi i8** [ %50, %46 ], [ %23, %42 ]
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  %50 = getelementptr inbounds i8*, i8** %47, i64 1
  br i1 %49, label %54, label %46

51:                                               ; preds = %42
  %52 = getelementptr inbounds i8*, i8** %23, i64 1
  %53 = load i8*, i8** %23, align 8
  br label %54

54:                                               ; preds = %46, %51
  %55 = phi i8** [ %52, %51 ], [ %47, %46 ]
  %56 = phi i8* [ %53, %51 ], [ %44, %46 ]
  %57 = load i8*, i8** %9, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 48, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.31, i64 0, i64 0), i8* %56, i8* %57) #12
  %58 = tail call i32 @av_opt_set(i8* %0, i8* %56, i8* %57, i32 0)
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %60, label %64

60:                                               ; preds = %54
  %61 = icmp eq i32 %58, -1414549496
  br i1 %61, label %62, label %63

62:                                               ; preds = %60
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i64 0, i64 0), i8* %56) #12
  br label %63

63:                                               ; preds = %62, %60
  tail call void @av_free(i8* %57) #12
  tail call void @av_free(i8* %44) #12
  br label %68

64:                                               ; preds = %54
  tail call void @av_free(i8* %57) #12
  tail call void @av_free(i8* %44) #12
  %65 = add nuw nsw i32 %22, 1
  %66 = load i8, i8* %43, align 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %21

68:                                               ; preds = %64, %15, %32, %33, %5, %63
  %69 = phi i32 [ %58, %63 ], [ 0, %5 ], [ %27, %33 ], [ -22, %32 ], [ 0, %15 ], [ %65, %64 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  ret i32 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_opt_free(i8*) local_unnamed_addr #2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %43, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to %struct.AVClass**
  br label %5

5:                                                ; preds = %31, %3
  %6 = phi %struct.AVOption* [ null, %3 ], [ %28, %31 ]
  %7 = load %struct.AVClass*, %struct.AVClass** %4, align 8
  %8 = icmp eq %struct.AVOption* %6, null
  %9 = icmp ne %struct.AVClass* %7, null
  %10 = and i1 %8, %9
  br i1 %10, label %11, label %19

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %7, i64 0, i32 2
  %13 = load %struct.AVOption*, %struct.AVOption** %12, align 8
  %14 = icmp eq %struct.AVOption* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %13, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %43, label %27

19:                                               ; preds = %11, %5
  br i1 %8, label %43, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %6, i64 1, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  %24 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %6, i64 1
  %25 = icmp eq %struct.AVOption* %24, null
  %26 = or i1 %25, %23
  br i1 %26, label %43, label %27

27:                                               ; preds = %20, %15
  %28 = phi %struct.AVOption* [ %13, %15 ], [ %24, %20 ]
  %29 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %28, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  switch i32 %30, label %31 [
    i32 5, label %32
    i32 7, label %32
    i32 8, label %37
  ]

31:                                               ; preds = %27, %37, %32
  br label %5

32:                                               ; preds = %27, %27
  %33 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %28, i64 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %0, i64 %35
  tail call void @av_freep(i8* %36) #12
  br label %31

37:                                               ; preds = %27
  %38 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %28, i64 0, i32 2
  %39 = load i32, i32* %38, align 8
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %0, i64 %40
  %42 = bitcast i8* %41 to %struct.AVDictionary**
  tail call void @av_dict_free(%struct.AVDictionary** %42) #12
  br label %31

43:                                               ; preds = %19, %20, %15, %1
  ret void
}

declare void @av_freep(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_set_dict2(i8*, %struct.AVDictionary**, i32) local_unnamed_addr #2 {
  %4 = alloca %struct.AVDictionary*, align 8
  %5 = bitcast %struct.AVDictionary** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  store %struct.AVDictionary* null, %struct.AVDictionary** %4, align 8
  %6 = icmp eq %struct.AVDictionary** %1, null
  br i1 %6, label %33, label %7

7:                                                ; preds = %3, %23
  %8 = phi %struct.AVDictionaryEntry* [ %10, %23 ], [ null, %3 ]
  %9 = load %struct.AVDictionary*, %struct.AVDictionary** %1, align 8
  %10 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %9, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i64 0, i64 0), %struct.AVDictionaryEntry* %8, i32 2) #12
  %11 = icmp eq %struct.AVDictionaryEntry* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %10, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %10, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = call i32 @av_opt_set(i8* %0, i8* %14, i8* %16, i32 %2)
  %18 = icmp eq i32 %17, -1414549496
  br i1 %18, label %19, label %23

19:                                               ; preds = %12
  %20 = load i8*, i8** %13, align 8
  %21 = load i8*, i8** %15, align 8
  %22 = call i32 @av_dict_set(%struct.AVDictionary** nonnull %4, i8* %20, i8* %21, i32 0) #12
  br label %23

23:                                               ; preds = %19, %12
  %24 = phi i32 [ %22, %19 ], [ %17, %12 ]
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %26, label %7

26:                                               ; preds = %23
  %27 = load i8*, i8** %13, align 8
  %28 = load i8*, i8** %15, align 8
  call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i64 0, i64 0), i8* %27, i8* %28) #12
  call void @av_dict_free(%struct.AVDictionary** nonnull %4) #12
  br label %33

29:                                               ; preds = %7
  call void @av_dict_free(%struct.AVDictionary** nonnull %1) #12
  %30 = bitcast %struct.AVDictionary** %4 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %struct.AVDictionary** %1 to i64*
  store i64 %31, i64* %32, align 8
  br label %33

33:                                               ; preds = %3, %29, %26
  %34 = phi i32 [ %24, %26 ], [ 0, %29 ], [ 0, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret i32 %34
}

declare %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary*, i8*, %struct.AVDictionaryEntry*, i32) local_unnamed_addr #3

declare i32 @av_dict_set(%struct.AVDictionary**, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_set_dict(i8*, %struct.AVDictionary**) local_unnamed_addr #2 {
  %3 = tail call i32 @av_opt_set_dict2(i8* %0, %struct.AVDictionary** %1, i32 0)
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.AVClass* @av_opt_child_class_iterate(%struct.AVClass* nocapture readonly, i8**) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %0, i64 0, i32 11
  %4 = load %struct.AVClass* (i8**)*, %struct.AVClass* (i8**)** %3, align 8
  %5 = icmp eq %struct.AVClass* (i8**)* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call %struct.AVClass* %4(i8** %1) #12
  br label %16

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %0, i64 0, i32 7
  %10 = load %struct.AVClass* (%struct.AVClass*)*, %struct.AVClass* (%struct.AVClass*)** %9, align 8
  %11 = icmp eq %struct.AVClass* (%struct.AVClass*)* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = bitcast i8** %1 to %struct.AVClass**
  %14 = load %struct.AVClass*, %struct.AVClass** %13, align 8
  %15 = tail call %struct.AVClass* %10(%struct.AVClass* %14) #12
  store %struct.AVClass* %15, %struct.AVClass** %13, align 8
  br label %16

16:                                               ; preds = %8, %12, %6
  %17 = phi %struct.AVClass* [ %7, %6 ], [ %15, %12 ], [ null, %8 ]
  ret %struct.AVClass* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @av_opt_child_next(i8*, i8*) local_unnamed_addr #2 {
  %3 = bitcast i8* %0 to %struct.AVClass**
  %4 = load %struct.AVClass*, %struct.AVClass** %3, align 8
  %5 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %4, i64 0, i32 6
  %6 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %5, align 8
  %7 = icmp eq i8* (i8*, i8*)* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = tail call i8* %6(i8* %0, i8* %1) #12
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i8* [ %9, %8 ], [ null, %2 ]
  ret i8* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.AVClass* @av_opt_child_class_next(%struct.AVClass* nocapture readonly, %struct.AVClass*) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %0, i64 0, i32 7
  %4 = load %struct.AVClass* (%struct.AVClass*)*, %struct.AVClass* (%struct.AVClass*)** %3, align 8
  %5 = icmp eq %struct.AVClass* (%struct.AVClass*)* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call %struct.AVClass* %4(%struct.AVClass* %1) #12
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi %struct.AVClass* [ %7, %6 ], [ null, %2 ]
  ret %struct.AVClass* %9
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i8* @av_opt_ptr(%struct.AVClass*, i8* readnone, i8* nocapture readonly) local_unnamed_addr #9 {
  %4 = icmp eq %struct.AVClass* %0, null
  br i1 %4, label %39, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %0, i64 0, i32 2
  br label %7

7:                                                ; preds = %31, %5
  %8 = phi %struct.AVOption* [ null, %5 ], [ %24, %31 ]
  %9 = icmp eq %struct.AVOption* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %7
  %11 = load %struct.AVOption*, %struct.AVOption** %6, align 8
  %12 = icmp eq %struct.AVOption* %11, null
  br i1 %12, label %39, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %11, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %39, label %22

17:                                               ; preds = %7
  %18 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %8, i64 1, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  %21 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %8, i64 1
  br i1 %20, label %39, label %22

22:                                               ; preds = %17, %13
  %23 = phi i8* [ %15, %13 ], [ %19, %17 ]
  %24 = phi %struct.AVOption* [ %11, %13 ], [ %21, %17 ]
  %25 = tail call i32 @strcmp(i8* nonnull %23, i8* %2) #13
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %24, i64 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 10
  br i1 %30, label %31, label %32

31:                                               ; preds = %27, %22
  br label %7

32:                                               ; preds = %27
  %33 = icmp eq %struct.AVOption* %24, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %24, i64 0, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %1, i64 %37
  br label %39

39:                                               ; preds = %10, %13, %17, %3, %32, %34
  %40 = phi i8* [ %38, %34 ], [ null, %32 ], [ null, %3 ], [ null, %17 ], [ null, %13 ], [ null, %10 ]
  ret i8* %40
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_copy(i8*, i8* readonly) local_unnamed_addr #2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %109, label %4

4:                                                ; preds = %2
  %5 = bitcast i8* %1 to %struct.AVClass**
  %6 = load %struct.AVClass*, %struct.AVClass** %5, align 8
  %7 = icmp eq %struct.AVClass* %6, null
  br i1 %7, label %109, label %8

8:                                                ; preds = %4
  %9 = bitcast i8* %0 to %struct.AVClass**
  %10 = load %struct.AVClass*, %struct.AVClass** %9, align 8
  %11 = icmp eq %struct.AVClass* %6, %10
  br i1 %11, label %12, label %109

12:                                               ; preds = %8, %106
  %13 = phi %struct.AVClass* [ %108, %106 ], [ %6, %8 ]
  %14 = phi %struct.AVOption* [ %36, %106 ], [ null, %8 ]
  %15 = phi i32 [ %107, %106 ], [ 0, %8 ]
  %16 = icmp eq %struct.AVOption* %14, null
  %17 = icmp ne %struct.AVClass* %13, null
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %27

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %13, i64 0, i32 2
  %21 = load %struct.AVOption*, %struct.AVOption** %20, align 8
  %22 = icmp eq %struct.AVOption* %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %21, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %109, label %35

27:                                               ; preds = %19, %12
  br i1 %16, label %109, label %28

28:                                               ; preds = %27
  %29 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %14, i64 1, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  %32 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %14, i64 1
  %33 = icmp eq %struct.AVOption* %32, null
  %34 = or i1 %33, %31
  br i1 %34, label %109, label %35

35:                                               ; preds = %28, %23
  %36 = phi %struct.AVOption* [ %21, %23 ], [ %32, %28 ]
  %37 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %36, i64 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %0, i64 %39
  %41 = getelementptr inbounds i8, i8* %1, i64 %39
  %42 = bitcast i8* %40 to i8**
  %43 = bitcast i8* %41 to i8**
  %44 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %36, i64 0, i32 3
  %45 = load i32, i32* %44, align 4
  switch i32 %45, label %105 [
    i32 5, label %46
    i32 7, label %60
    i32 10, label %106
    i32 8, label %83
    i32 18, label %103
    i32 1, label %103
    i32 0, label %103
    i32 15, label %99
    i32 17, label %99
    i32 2, label %99
    i32 9, label %99
    i32 3, label %100
    i32 4, label %103
    i32 13, label %103
    i32 14, label %101
    i32 6, label %101
    i32 16, label %103
    i32 11, label %102
    i32 12, label %103
  ]

46:                                               ; preds = %35
  %47 = load i8*, i8** %42, align 8
  %48 = load i8*, i8** %43, align 8
  %49 = icmp eq i8* %47, %48
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  tail call void @av_freep(i8* %40) #12
  %51 = load i8*, i8** %43, align 8
  br label %52

52:                                               ; preds = %46, %50
  %53 = phi i8* [ %47, %46 ], [ %51, %50 ]
  %54 = tail call noalias i8* @av_strdup(i8* %53) #12
  store i8* %54, i8** %42, align 8
  %55 = load i8*, i8** %43, align 8
  %56 = icmp ne i8* %55, null
  %57 = icmp eq i8* %54, null
  %58 = and i1 %57, %56
  %59 = select i1 %58, i32 -12, i32 %15
  br label %106

60:                                               ; preds = %35
  %61 = getelementptr inbounds i8, i8* %41, i64 8
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = load i8*, i8** %42, align 8
  %65 = load i8*, i8** %43, align 8
  %66 = icmp eq i8* %64, %65
  br i1 %66, label %69, label %67

67:                                               ; preds = %60
  tail call void @av_freep(i8* %40) #12
  %68 = load i8*, i8** %43, align 8
  br label %69

69:                                               ; preds = %60, %67
  %70 = phi i8* [ %64, %60 ], [ %68, %67 ]
  %71 = sext i32 %63 to i64
  %72 = tail call i8* @av_memdup(i8* %70, i64 %71) #12
  store i8* %72, i8** %42, align 8
  %73 = icmp eq i32 %63, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %69
  %75 = icmp eq i8* %72, null
  %76 = select i1 %75, i32 -12, i32 %15
  %77 = select i1 %75, i32 0, i32 %63
  br label %78

78:                                               ; preds = %74, %69
  %79 = phi i32 [ %15, %69 ], [ %76, %74 ]
  %80 = phi i32 [ 0, %69 ], [ %77, %74 ]
  %81 = getelementptr inbounds i8, i8* %40, i64 8
  %82 = bitcast i8* %81 to i32*
  store i32 %80, i32* %82, align 4
  br label %106

83:                                               ; preds = %35
  %84 = bitcast i8* %41 to %struct.AVDictionary**
  %85 = bitcast i8* %40 to %struct.AVDictionary**
  %86 = load %struct.AVDictionary*, %struct.AVDictionary** %84, align 8
  %87 = load %struct.AVDictionary*, %struct.AVDictionary** %85, align 8
  %88 = icmp eq %struct.AVDictionary* %86, %87
  br i1 %88, label %90, label %89

89:                                               ; preds = %83
  tail call void @av_dict_free(%struct.AVDictionary** %85) #12
  br label %90

90:                                               ; preds = %83, %89
  store %struct.AVDictionary* null, %struct.AVDictionary** %85, align 8
  %91 = load %struct.AVDictionary*, %struct.AVDictionary** %84, align 8
  %92 = tail call i32 @av_dict_copy(%struct.AVDictionary** %85, %struct.AVDictionary* %91, i32 0) #12
  %93 = load %struct.AVDictionary*, %struct.AVDictionary** %84, align 8
  %94 = tail call i32 @av_dict_count(%struct.AVDictionary* %93) #12
  %95 = load %struct.AVDictionary*, %struct.AVDictionary** %85, align 8
  %96 = tail call i32 @av_dict_count(%struct.AVDictionary* %95) #12
  %97 = icmp eq i32 %94, %96
  %98 = select i1 %97, i32 %15, i32 -12
  br label %106

99:                                               ; preds = %35, %35, %35, %35
  br label %103

100:                                              ; preds = %35
  br label %103

101:                                              ; preds = %35, %35
  br label %103

102:                                              ; preds = %35
  br label %103

103:                                              ; preds = %35, %35, %35, %35, %35, %35, %35, %102, %101, %100, %99
  %104 = phi i64 [ 8, %99 ], [ 8, %100 ], [ 8, %101 ], [ 8, %102 ], [ 4, %35 ], [ 4, %35 ], [ 4, %35 ], [ 4, %35 ], [ 4, %35 ], [ 4, %35 ], [ 4, %35 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %40, i8* align 1 %41, i64 %104, i1 false)
  br label %106

105:                                              ; preds = %35
  br label %106

106:                                              ; preds = %35, %105, %52, %103, %78, %90
  %107 = phi i32 [ %79, %78 ], [ %98, %90 ], [ %15, %35 ], [ %15, %103 ], [ %59, %52 ], [ -22, %105 ]
  %108 = load %struct.AVClass*, %struct.AVClass** %5, align 8
  br label %12

109:                                              ; preds = %23, %28, %27, %4, %8, %2
  %110 = phi i32 [ -22, %2 ], [ -22, %8 ], [ -22, %4 ], [ %15, %27 ], [ %15, %28 ], [ %15, %23 ]
  ret i32 %110
}

declare i8* @av_memdup(i8*, i64) local_unnamed_addr #3

declare i32 @av_dict_count(%struct.AVDictionary*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_query_ranges(%struct.AVOptionRanges**, i8*, i8*, i32) local_unnamed_addr #2 {
  %5 = bitcast i8* %1 to %struct.AVClass**
  %6 = load %struct.AVClass*, %struct.AVClass** %5, align 8
  %7 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %6, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 3410688
  br i1 %9, label %10, label %13

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %6, i64 0, i32 10
  %12 = load i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)** %11, align 8
  br label %13

13:                                               ; preds = %10, %4
  %14 = phi i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* [ %12, %10 ], [ null, %4 ]
  %15 = icmp eq i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* %14, null
  %16 = select i1 %15, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* @av_opt_query_ranges_default, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* %14
  %17 = tail call i32 %16(%struct.AVOptionRanges** %0, i8* %1, i8* %2, i32 %3) #12
  %18 = icmp sgt i32 %17, -1
  br i1 %18, label %19, label %25

19:                                               ; preds = %13
  %20 = and i32 %3, 4096
  %21 = icmp eq i32 %20, 0
  %22 = select i1 %21, i32 1, i32 %17
  %23 = load %struct.AVOptionRanges*, %struct.AVOptionRanges** %0, align 8
  %24 = getelementptr inbounds %struct.AVOptionRanges, %struct.AVOptionRanges* %23, i64 0, i32 2
  store i32 %22, i32* %24, align 4
  br label %25

25:                                               ; preds = %19, %13
  %26 = phi i32 [ %22, %19 ], [ %17, %13 ]
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_query_ranges_default(%struct.AVOptionRanges** nocapture, i8*, i8* readonly, i32) local_unnamed_addr #2 {
  %5 = tail call noalias i8* @av_mallocz(i64 16) #12
  %6 = tail call noalias i8* @av_mallocz(i64 8) #12
  %7 = tail call noalias i8* @av_mallocz(i64 48) #12
  %8 = tail call %struct.AVOption* @av_opt_find2(i8* %1, i8* %2, i8* null, i32 0, i32 %3, i8** null) #12
  store %struct.AVOptionRanges* null, %struct.AVOptionRanges** %0, align 8
  %9 = icmp ne i8* %5, null
  %10 = icmp ne i8* %7, null
  %11 = and i1 %9, %10
  %12 = icmp ne i8* %6, null
  %13 = and i1 %12, %11
  %14 = icmp ne %struct.AVOption* %8, null
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %54

16:                                               ; preds = %4
  %17 = bitcast i8* %5 to i8**
  store i8* %6, i8** %17, align 8
  %18 = bitcast i8* %6 to i8**
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %5, i64 8
  %20 = bitcast i8* %19 to i32*
  store i32 1, i32* %20, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 12
  %22 = bitcast i8* %21 to i32*
  store i32 1, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %7, i64 40
  %24 = bitcast i8* %23 to i32*
  store i32 1, i32* %24, align 8
  %25 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %8, i64 0, i32 5
  %26 = bitcast double* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %7, i64 8
  %29 = bitcast i8* %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %8, i64 0, i32 6
  %31 = bitcast double* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds i8, i8* %7, i64 16
  %34 = bitcast i8* %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %8, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  switch i32 %36, label %54 [
    i32 18, label %52
    i32 1, label %52
    i32 2, label %52
    i32 9, label %52
    i32 12, label %52
    i32 13, label %52
    i32 4, label %52
    i32 3, label %52
    i32 15, label %52
    i32 16, label %52
    i32 17, label %52
    i32 5, label %37
    i32 6, label %41
    i32 11, label %44
    i32 14, label %48
  ]

37:                                               ; preds = %16
  %38 = getelementptr inbounds i8, i8* %7, i64 24
  %39 = bitcast i8* %38 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 0x4130FFFF00000000>, <2 x double>* %39, align 8
  %40 = bitcast i8* %28 to <2 x double>*
  store <2 x double> <double -1.000000e+00, double 0x41DFFFFFFFC00000>, <2 x double>* %40, align 8
  br label %52

41:                                               ; preds = %16
  %42 = getelementptr inbounds i8, i8* %7, i64 24
  %43 = bitcast i8* %42 to <2 x double>*
  store <2 x double> <double 0xC1E0000000000000, double 0x41DFFFFFFFC00000>, <2 x double>* %43, align 8
  br label %52

44:                                               ; preds = %16
  %45 = getelementptr inbounds i8, i8* %7, i64 24
  %46 = bitcast i8* %45 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 0x413FFFFF00000000>, <2 x double>* %46, align 8
  %47 = bitcast i8* %28 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 0x41AFFFFFFE000000>, <2 x double>* %47, align 8
  br label %52

48:                                               ; preds = %16
  %49 = getelementptr inbounds i8, i8* %7, i64 24
  %50 = bitcast i8* %49 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 0x41DFFFFFFFC00000>, <2 x double>* %50, align 8
  %51 = bitcast i8* %28 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 0x41DFFFFFFFC00000>, <2 x double>* %51, align 8
  br label %52

52:                                               ; preds = %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %48, %44, %41, %37
  %53 = bitcast %struct.AVOptionRanges** %0 to i8**
  store i8* %5, i8** %53, align 8
  br label %56

54:                                               ; preds = %16, %4
  %55 = phi i32 [ -12, %4 ], [ -38, %16 ]
  tail call void @av_free(i8* %5) #12
  tail call void @av_free(i8* %7) #12
  tail call void @av_free(i8* %6) #12
  br label %56

56:                                               ; preds = %54, %52
  %57 = phi i32 [ %55, %54 ], [ 1, %52 ]
  ret i32 %57
}

declare noalias i8* @av_mallocz(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av_opt_freep_ranges(%struct.AVOptionRanges**) local_unnamed_addr #2 {
  %2 = load %struct.AVOptionRanges*, %struct.AVOptionRanges** %0, align 8
  %3 = icmp eq %struct.AVOptionRanges* %2, null
  br i1 %3, label %38, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.AVOptionRanges, %struct.AVOptionRanges* %2, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.AVOptionRanges, %struct.AVOptionRanges* %2, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = mul nsw i32 %8, %6
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %35

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.AVOptionRanges, %struct.AVOptionRanges* %2, i64 0, i32 0
  br label %13

13:                                               ; preds = %11, %28
  %14 = phi i32 [ %8, %11 ], [ %29, %28 ]
  %15 = phi i32 [ %6, %11 ], [ %30, %28 ]
  %16 = phi i64 [ 0, %11 ], [ %31, %28 ]
  %17 = load %struct.AVOptionRange**, %struct.AVOptionRange*** %12, align 8
  %18 = getelementptr inbounds %struct.AVOptionRange*, %struct.AVOptionRange** %17, i64 %16
  %19 = load %struct.AVOptionRange*, %struct.AVOptionRange** %18, align 8
  %20 = icmp eq %struct.AVOptionRange* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %13
  %22 = bitcast %struct.AVOptionRange* %19 to i8*
  tail call void @av_freep(i8* nonnull %22) #12
  %23 = load %struct.AVOptionRange**, %struct.AVOptionRange*** %12, align 8
  %24 = getelementptr inbounds %struct.AVOptionRange*, %struct.AVOptionRange** %23, i64 %16
  %25 = bitcast %struct.AVOptionRange** %24 to i8*
  tail call void @av_freep(i8* %25) #12
  %26 = load i32, i32* %5, align 8
  %27 = load i32, i32* %7, align 4
  br label %28

28:                                               ; preds = %13, %21
  %29 = phi i32 [ %14, %13 ], [ %27, %21 ]
  %30 = phi i32 [ %15, %13 ], [ %26, %21 ]
  %31 = add nuw nsw i64 %16, 1
  %32 = mul nsw i32 %29, %30
  %33 = sext i32 %32 to i64
  %34 = icmp slt i64 %31, %33
  br i1 %34, label %13, label %35

35:                                               ; preds = %28, %4
  %36 = bitcast %struct.AVOptionRanges* %2 to i8*
  tail call void @av_freep(i8* nonnull %36) #12
  %37 = bitcast %struct.AVOptionRanges** %0 to i8*
  tail call void @av_freep(i8* %37) #12
  br label %38

38:                                               ; preds = %1, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_is_set_to_default(i8*, %struct.AVOption* readonly) local_unnamed_addr #2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %struct.AVRational*
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.anon, align 8
  %8 = alloca %struct.AVDictionary*, align 8
  %9 = alloca i32, align 4
  %10 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = bitcast i64* %3 to i32*
  store i32 -1431655766, i32* %11, align 8
  %12 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %4, i64 0, i32 1
  store i32 -1431655766, i32* %12, align 4
  %13 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #12
  store i32 -1431655766, i32* %5, align 4
  %14 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #12
  store i32 -1431655766, i32* %6, align 4
  %15 = icmp ne %struct.AVOption* %1, null
  %16 = icmp ne i8* %0, null
  %17 = and i1 %16, %15
  br i1 %17, label %18, label %293

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %0, i64 %21
  %23 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  switch i32 %24, label %290 [
    i32 10, label %293
    i32 18, label %25
    i32 0, label %25
    i32 12, label %25
    i32 13, label %25
    i32 1, label %25
    i32 17, label %25
    i32 15, label %25
    i32 2, label %25
    i32 9, label %25
    i32 5, label %68
    i32 3, label %83
    i32 4, label %91
    i32 6, label %100
    i32 7, label %131
    i32 8, label %172
    i32 11, label %213
    i32 14, label %239
    i32 16, label %275
  ]

25:                                               ; preds = %18, %18, %18, %18, %18, %18, %18, %18, %18
  switch i32 %24, label %62 [
    i32 0, label %26
    i32 12, label %30
    i32 13, label %34
    i32 18, label %38
    i32 1, label %38
    i32 17, label %42
    i32 15, label %42
    i32 2, label %42
    i32 9, label %42
    i32 4, label %45
    i32 3, label %49
    i32 6, label %52
    i32 10, label %59
  ]

26:                                               ; preds = %25
  %27 = bitcast i8* %22 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  br label %62

30:                                               ; preds = %25
  %31 = bitcast i8* %22 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = sext i32 %32 to i64
  br label %62

34:                                               ; preds = %25
  %35 = bitcast i8* %22 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  br label %62

38:                                               ; preds = %25, %25
  %39 = bitcast i8* %22 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = sext i32 %40 to i64
  br label %62

42:                                               ; preds = %25, %25, %25, %25
  %43 = bitcast i8* %22 to i64*
  %44 = load i64, i64* %43, align 8
  br label %62

45:                                               ; preds = %25
  %46 = bitcast i8* %22 to float*
  %47 = load float, float* %46, align 4
  %48 = fpext float %47 to double
  store double %48, double* null, align 536870912
  br label %62

49:                                               ; preds = %25
  %50 = bitcast i8* %22 to i64*
  %51 = load i64, i64* %50, align 8
  store i64 %51, i64* null, align 536870912
  br label %62

52:                                               ; preds = %25
  %53 = bitcast i8* %22 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %22, i64 4
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %57, align 4
  store i32 %58, i32* null, align 536870912
  br label %62

59:                                               ; preds = %25
  %60 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 4, i32 0
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* null, align 536870912
  br label %62

62:                                               ; preds = %25, %26, %30, %34, %38, %42, %45, %49, %52, %59
  %63 = phi i64 [ -6148914691236517206, %25 ], [ -6148914691236517206, %59 ], [ %55, %52 ], [ -6148914691236517206, %49 ], [ -6148914691236517206, %45 ], [ %44, %42 ], [ %41, %38 ], [ %37, %34 ], [ %33, %30 ], [ %29, %26 ]
  %64 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 4, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, %63
  %67 = zext i1 %66 to i32
  br label %293

68:                                               ; preds = %18
  %69 = bitcast i8* %22 to i8**
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 4
  %72 = bitcast %union.anon* %71 to i8**
  %73 = load i8*, i8** %72, align 8
  %74 = icmp eq i8* %70, %73
  br i1 %74, label %293, label %75

75:                                               ; preds = %68
  %76 = icmp eq i8* %70, null
  %77 = icmp eq i8* %73, null
  %78 = or i1 %76, %77
  br i1 %78, label %293, label %79

79:                                               ; preds = %75
  %80 = tail call i32 @strcmp(i8* nonnull %70, i8* nonnull %73) #13
  %81 = icmp eq i32 %80, 0
  %82 = zext i1 %81 to i32
  br label %293

83:                                               ; preds = %18
  %84 = bitcast i8* %22 to double*
  %85 = load double, double* %84, align 8
  %86 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 4
  %87 = bitcast %union.anon* %86 to double*
  %88 = load double, double* %87, align 8
  %89 = fcmp nsz oeq double %88, %85
  %90 = zext i1 %89 to i32
  br label %293

91:                                               ; preds = %18
  %92 = bitcast i8* %22 to float*
  %93 = load float, float* %92, align 4
  %94 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 4
  %95 = bitcast %union.anon* %94 to double*
  %96 = load double, double* %95, align 8
  %97 = fptrunc double %96 to float
  %98 = fcmp nsz oeq float %93, %97
  %99 = zext i1 %98 to i32
  br label %293

100:                                              ; preds = %18
  %101 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 4
  %102 = bitcast %union.anon* %101 to double*
  %103 = load double, double* %102, align 8
  %104 = tail call i64 @av_d2q(double %103, i32 2147483647) #14
  store i64 %104, i64* %3, align 8
  %105 = bitcast i8* %22 to i64*
  %106 = load i64, i64* %105, align 4
  %107 = trunc i64 %106 to i32
  %108 = trunc i64 %104 to i32
  %109 = shl i64 %106, 32
  %110 = ashr exact i64 %109, 32
  %111 = ashr i64 %104, 32
  %112 = mul nsw i64 %110, %111
  %113 = shl i64 %104, 32
  %114 = ashr exact i64 %113, 32
  %115 = ashr i64 %106, 32
  %116 = mul nsw i64 %115, %114
  %117 = icmp eq i64 %112, %116
  br i1 %117, label %118, label %293

118:                                              ; preds = %100
  %119 = icmp ugt i64 %104, 4294967295
  %120 = icmp ugt i64 %106, 4294967295
  %121 = and i1 %119, %120
  br i1 %121, label %293, label %122

122:                                              ; preds = %118
  %123 = icmp eq i32 %107, 0
  %124 = icmp eq i32 %108, 0
  %125 = or i1 %124, %123
  br i1 %125, label %293, label %126

126:                                              ; preds = %122
  %127 = xor i64 %106, %104
  %128 = trunc i64 %127 to i32
  %129 = lshr i32 %128, 31
  %130 = xor i32 %129, 1
  br label %293

131:                                              ; preds = %18
  %132 = bitcast %struct.anon* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %132) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 0, i64 16, i1 false)
  %133 = bitcast i8* %22 to i8**
  %134 = getelementptr inbounds i8, i8* %22, i64 8
  %135 = bitcast i8* %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = load i8*, i8** %133, align 8
  %138 = icmp eq i32 %136, 0
  %139 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 4
  %140 = bitcast %union.anon* %139 to i8**
  %141 = load i8*, i8** %140, align 8
  %142 = icmp eq i8* %141, null
  br i1 %138, label %143, label %148

143:                                              ; preds = %131
  br i1 %142, label %170, label %144

144:                                              ; preds = %143
  %145 = load i8, i8* %141, align 1
  %146 = icmp eq i8 %145, 0
  %147 = zext i1 %146 to i32
  br label %170

148:                                              ; preds = %131
  br i1 %142, label %170, label %149

149:                                              ; preds = %148
  %150 = tail call i64 @strlen(i8* nonnull %141) #13
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %170, label %152

152:                                              ; preds = %149
  %153 = sext i32 %136 to i64
  %154 = lshr i64 %150, 1
  %155 = icmp eq i64 %154, %153
  br i1 %155, label %156, label %170

156:                                              ; preds = %152
  %157 = getelementptr inbounds %struct.anon, %struct.anon* %7, i64 0, i32 0
  %158 = call fastcc i32 @set_string_binary(i8* nonnull %141, i8** nonnull %157)
  %159 = icmp eq i32 %158, 0
  %160 = load i8*, i8** %157, align 8
  br i1 %159, label %161, label %168

161:                                              ; preds = %156
  %162 = getelementptr inbounds %struct.anon, %struct.anon* %7, i64 0, i32 1
  %163 = load i32, i32* %162, align 8
  %164 = sext i32 %163 to i64
  %165 = call i32 @bcmp(i8* %137, i8* %160, i64 %164)
  %166 = icmp eq i32 %165, 0
  %167 = zext i1 %166 to i32
  br label %168

168:                                              ; preds = %156, %161
  %169 = phi i32 [ %167, %161 ], [ %158, %156 ]
  call void @av_free(i8* %160) #12
  br label %170

170:                                              ; preds = %144, %152, %148, %149, %143, %168
  %171 = phi i32 [ %169, %168 ], [ %147, %144 ], [ 1, %143 ], [ 0, %149 ], [ 0, %148 ], [ 0, %152 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %132) #12
  br label %293

172:                                              ; preds = %18
  %173 = bitcast %struct.AVDictionary** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #12
  store %struct.AVDictionary* null, %struct.AVDictionary** %8, align 8
  %174 = bitcast i8* %22 to %struct.AVDictionary**
  %175 = load %struct.AVDictionary*, %struct.AVDictionary** %174, align 8
  %176 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 4
  %177 = bitcast %union.anon* %176 to i8**
  %178 = load i8*, i8** %177, align 8
  %179 = call i32 @av_dict_parse_string(%struct.AVDictionary** nonnull %8, i8* %178, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0), i32 0) #12
  %180 = icmp slt i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %172
  call void @av_dict_free(%struct.AVDictionary** nonnull %8) #12
  br label %211

182:                                              ; preds = %172, %198
  %183 = phi %struct.AVDictionaryEntry* [ %186, %198 ], [ null, %172 ]
  %184 = phi %struct.AVDictionaryEntry* [ %187, %198 ], [ null, %172 ]
  %185 = load %struct.AVDictionary*, %struct.AVDictionary** %8, align 8
  %186 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %185, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i64 0, i64 0), %struct.AVDictionaryEntry* %183, i32 2) #12
  %187 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %175, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i64 0, i64 0), %struct.AVDictionaryEntry* %184, i32 2) #12
  %188 = icmp ne %struct.AVDictionaryEntry* %186, null
  %189 = icmp ne %struct.AVDictionaryEntry* %187, null
  %190 = and i1 %188, %189
  br i1 %190, label %191, label %205

191:                                              ; preds = %182
  %192 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %186, i64 0, i32 0
  %193 = load i8*, i8** %192, align 8
  %194 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %187, i64 0, i32 0
  %195 = load i8*, i8** %194, align 8
  %196 = call i32 @strcmp(i8* %193, i8* %195) #13
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %205

198:                                              ; preds = %191
  %199 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %186, i64 0, i32 1
  %200 = load i8*, i8** %199, align 8
  %201 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %187, i64 0, i32 1
  %202 = load i8*, i8** %201, align 8
  %203 = call i32 @strcmp(i8* %200, i8* %202) #13
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %182, label %205

205:                                              ; preds = %191, %182, %198
  %206 = phi i1 [ true, %191 ], [ %188, %182 ], [ true, %198 ]
  %207 = phi i1 [ true, %191 ], [ %189, %182 ], [ true, %198 ]
  call void @av_dict_free(%struct.AVDictionary** nonnull %8) #12
  %208 = or i1 %206, %207
  %209 = xor i1 %208, true
  %210 = zext i1 %209 to i32
  br label %211

211:                                              ; preds = %205, %181
  %212 = phi i32 [ %179, %181 ], [ %210, %205 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #12
  br label %293

213:                                              ; preds = %18
  %214 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 4
  %215 = bitcast %union.anon* %214 to i8**
  %216 = load i8*, i8** %215, align 8
  %217 = icmp eq i8* %216, null
  br i1 %217, label %221, label %218

218:                                              ; preds = %213
  %219 = tail call i32 @strcmp(i8* nonnull %216, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #13
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218, %213
  store i32 0, i32* %6, align 4
  store i32 0, i32* %5, align 4
  br label %227

222:                                              ; preds = %218
  %223 = call i32 @av_parse_video_size(i32* nonnull %5, i32* nonnull %6, i8* nonnull %216) #12
  %224 = icmp slt i32 %223, 0
  br i1 %224, label %293, label %225

225:                                              ; preds = %222
  %226 = load i32, i32* %5, align 4
  br label %227

227:                                              ; preds = %225, %221
  %228 = phi i32 [ %226, %225 ], [ 0, %221 ]
  %229 = bitcast i8* %22 to i32*
  %230 = load i32, i32* %229, align 4
  %231 = icmp eq i32 %228, %230
  br i1 %231, label %232, label %293

232:                                              ; preds = %227
  %233 = load i32, i32* %6, align 4
  %234 = getelementptr inbounds i8, i8* %22, i64 4
  %235 = bitcast i8* %234 to i32*
  %236 = load i32, i32* %235, align 4
  %237 = icmp eq i32 %233, %236
  %238 = zext i1 %237 to i32
  br label %293

239:                                              ; preds = %18
  store i32 0, i32* %11, align 8
  store i32 0, i32* %12, align 4
  %240 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 4
  %241 = bitcast %union.anon* %240 to i8**
  %242 = load i8*, i8** %241, align 8
  %243 = icmp eq i8* %242, null
  br i1 %243, label %247, label %244

244:                                              ; preds = %239
  %245 = call i32 @av_parse_video_rate(%struct.AVRational* nonnull %4, i8* nonnull %242) #12
  %246 = icmp slt i32 %245, 0
  br i1 %246, label %293, label %247

247:                                              ; preds = %239, %244
  %248 = bitcast i8* %22 to i64*
  %249 = load i64, i64* %248, align 4
  %250 = load i64, i64* %3, align 8
  %251 = trunc i64 %249 to i32
  %252 = trunc i64 %250 to i32
  %253 = shl i64 %249, 32
  %254 = ashr exact i64 %253, 32
  %255 = ashr i64 %250, 32
  %256 = mul nsw i64 %254, %255
  %257 = shl i64 %250, 32
  %258 = ashr exact i64 %257, 32
  %259 = ashr i64 %249, 32
  %260 = mul nsw i64 %258, %259
  %261 = icmp eq i64 %256, %260
  br i1 %261, label %262, label %293

262:                                              ; preds = %247
  %263 = icmp ugt i64 %250, 4294967295
  %264 = icmp ugt i64 %249, 4294967295
  %265 = and i1 %264, %263
  br i1 %265, label %293, label %266

266:                                              ; preds = %262
  %267 = icmp eq i32 %251, 0
  %268 = icmp eq i32 %252, 0
  %269 = or i1 %267, %268
  br i1 %269, label %293, label %270

270:                                              ; preds = %266
  %271 = xor i64 %250, %249
  %272 = trunc i64 %271 to i32
  %273 = lshr i32 %272, 31
  %274 = xor i32 %273, 1
  br label %293

275:                                              ; preds = %18
  %276 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %276) #12
  store i32 0, i32* %9, align 4
  %277 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 4
  %278 = bitcast %union.anon* %277 to i8**
  %279 = load i8*, i8** %278, align 8
  %280 = icmp eq i8* %279, null
  br i1 %280, label %284, label %281

281:                                              ; preds = %275
  %282 = call i32 @av_parse_color(i8* nonnull %276, i8* nonnull %279, i32 -1, i8* null) #12
  %283 = icmp slt i32 %282, 0
  br i1 %283, label %288, label %284

284:                                              ; preds = %275, %281
  %285 = call i32 @bcmp(i8* nonnull %276, i8* %22, i64 4)
  %286 = icmp eq i32 %285, 0
  %287 = zext i1 %286 to i32
  br label %288

288:                                              ; preds = %281, %284
  %289 = phi i32 [ %287, %284 ], [ %282, %281 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %276) #12
  br label %293

290:                                              ; preds = %18
  %291 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i64 0, i32 0
  %292 = load i8*, i8** %291, align 8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* nonnull %0, i32 24, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.36, i64 0, i64 0), i32 %24, i8* %292) #12
  br label %293

293:                                              ; preds = %270, %266, %262, %247, %126, %122, %118, %100, %244, %227, %232, %222, %75, %68, %18, %2, %290, %288, %211, %170, %91, %83, %79, %62
  %294 = phi i32 [ -1163346256, %290 ], [ %289, %288 ], [ %212, %211 ], [ %171, %170 ], [ %99, %91 ], [ %90, %83 ], [ %82, %79 ], [ %67, %62 ], [ -22, %2 ], [ 1, %18 ], [ 1, %68 ], [ 0, %75 ], [ %223, %222 ], [ 0, %227 ], [ %238, %232 ], [ %245, %244 ], [ %130, %126 ], [ 1, %118 ], [ 0, %122 ], [ 0, %100 ], [ %274, %270 ], [ 1, %262 ], [ 0, %266 ], [ 0, %247 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  ret i32 %294
}

declare i32 @av_dict_parse_string(%struct.AVDictionary**, i8*, i8*, i8*, i32) local_unnamed_addr #3

declare i32 @av_parse_video_size(i32*, i32*, i8*) local_unnamed_addr #3

declare i32 @av_parse_video_rate(%struct.AVRational*, i8*) local_unnamed_addr #3

declare i32 @av_parse_color(i8*, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_is_set_to_default_by_name(i8*, i8* readonly, i32) local_unnamed_addr #2 {
  %4 = alloca i8*, align 8
  %5 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %6 = icmp eq i8* %0, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = call %struct.AVOption* @av_opt_find2(i8* nonnull %0, i8* %1, i8* null, i32 0, i32 %2, i8** nonnull %4)
  %9 = icmp eq %struct.AVOption* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = load i8*, i8** %4, align 8
  %12 = call i32 @av_opt_is_set_to_default(i8* %11, %struct.AVOption* nonnull %8)
  br label %13

13:                                               ; preds = %7, %3, %10
  %14 = phi i32 [ %12, %10 ], [ -22, %3 ], [ -1414549496, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_opt_serialize(i8*, i32, i32, i8**, i8 signext, i8 signext) local_unnamed_addr #2 {
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8*, align 8
  %10 = alloca %struct.AVBPrint, align 8
  %11 = alloca [3 x i8], align 1
  store i8 %4, i8* %7, align 1
  store i8 %5, i8* %8, align 1
  %12 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %13 = bitcast %struct.AVBPrint* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %13) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 1024, i1 false)
  %14 = getelementptr inbounds [3 x i8], [3 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %14) #12
  %15 = getelementptr inbounds [3 x i8], [3 x i8]* %11, i64 0, i64 1
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %11, i64 0, i64 2
  store i8 %5, i8* %14, align 1
  store i8 %4, i8* %15, align 1
  store i8 0, i8* %16, align 1
  %17 = icmp eq i8 %5, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %6
  %19 = icmp eq i8 %4, 0
  %20 = icmp eq i8 %5, %4
  %21 = or i1 %19, %20
  %22 = icmp eq i8 %5, 92
  %23 = or i1 %22, %21
  %24 = icmp eq i8 %4, 92
  %25 = or i1 %24, %23
  br i1 %25, label %26, label %27

26:                                               ; preds = %18, %6
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.37, i64 0, i64 0)) #12
  br label %105

27:                                               ; preds = %18
  %28 = icmp ne i8* %0, null
  %29 = icmp ne i8** %3, null
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %105

31:                                               ; preds = %27
  store i8* null, i8** %3, align 8
  call void @av_bprint_init(%struct.AVBPrint* nonnull %10, i32 64, i32 -1) #12
  %32 = bitcast i8* %0 to %struct.AVClass**
  %33 = and i32 %2, 2
  %34 = icmp eq i32 %33, 0
  %35 = and i32 %2, 1
  %36 = icmp eq i32 %35, 0
  br label %37

37:                                               ; preds = %98, %31
  %38 = phi %struct.AVOption* [ %65, %98 ], [ null, %31 ]
  %39 = phi i32 [ %95, %98 ], [ 0, %31 ]
  br label %40

40:                                               ; preds = %37, %90
  %41 = phi %struct.AVOption* [ %65, %90 ], [ %38, %37 ]
  br label %42

42:                                               ; preds = %74, %40
  %43 = phi %struct.AVOption* [ %41, %40 ], [ %65, %74 ]
  %44 = load %struct.AVClass*, %struct.AVClass** %32, align 8
  %45 = icmp eq %struct.AVOption* %43, null
  %46 = icmp ne %struct.AVClass* %44, null
  %47 = and i1 %45, %46
  br i1 %47, label %48, label %56

48:                                               ; preds = %42
  %49 = getelementptr inbounds %struct.AVClass, %struct.AVClass* %44, i64 0, i32 2
  %50 = load %struct.AVOption*, %struct.AVOption** %49, align 8
  %51 = icmp eq %struct.AVOption* %50, null
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %50, i64 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %101, label %64

56:                                               ; preds = %48, %42
  br i1 %45, label %101, label %57

57:                                               ; preds = %56
  %58 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 1, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %59, null
  %61 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %43, i64 1
  %62 = icmp eq %struct.AVOption* %61, null
  %63 = or i1 %62, %60
  br i1 %63, label %101, label %64

64:                                               ; preds = %57, %52
  %65 = phi %struct.AVOption* [ %50, %52 ], [ %61, %57 ]
  %66 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %65, i64 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 10
  br i1 %68, label %74, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %65, i64 0, i32 7
  %71 = load i32, i32* %70, align 8
  br i1 %34, label %75, label %72

72:                                               ; preds = %69
  %73 = icmp eq i32 %71, %1
  br i1 %73, label %75, label %74

74:                                               ; preds = %72, %75, %80, %64
  br label %42

75:                                               ; preds = %69, %72
  %76 = phi i32 [ %1, %72 ], [ %71, %69 ]
  %77 = and i32 %76, %1
  %78 = icmp eq i32 %77, %1
  br i1 %78, label %79, label %74

79:                                               ; preds = %75
  br i1 %36, label %83, label %80

80:                                               ; preds = %79
  %81 = call i32 @av_opt_is_set_to_default(i8* nonnull %0, %struct.AVOption* nonnull %65)
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %74, label %83

83:                                               ; preds = %79, %80
  %84 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %65, i64 0, i32 0
  %85 = load i8*, i8** %84, align 8
  %86 = call i32 @av_opt_get(i8* nonnull %0, i8* %85, i32 0, i8** nonnull %9)
  %87 = icmp slt i32 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %83
  %89 = call i32 @av_bprint_finalize(%struct.AVBPrint* nonnull %10, i8** null) #12
  br label %105

90:                                               ; preds = %83
  %91 = load i8*, i8** %9, align 8
  %92 = icmp eq i8* %91, null
  br i1 %92, label %40, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %65, i64 0, i32 0
  %95 = add nuw nsw i32 %39, 1
  %96 = icmp eq i32 %39, 0
  br i1 %96, label %98, label %97

97:                                               ; preds = %93
  call void @av_bprint_append_data(%struct.AVBPrint* nonnull %10, i8* nonnull %8, i32 1) #12
  br label %98

98:                                               ; preds = %93, %97
  %99 = load i8*, i8** %94, align 8
  call void @av_bprint_escape(%struct.AVBPrint* nonnull %10, i8* %99, i8* nonnull %14, i32 1, i32 0) #12
  call void @av_bprint_append_data(%struct.AVBPrint* nonnull %10, i8* nonnull %7, i32 1) #12
  %100 = load i8*, i8** %9, align 8
  call void @av_bprint_escape(%struct.AVBPrint* nonnull %10, i8* %100, i8* nonnull %14, i32 1, i32 0) #12
  call void @av_freep(i8* nonnull %12) #12
  br label %37

101:                                              ; preds = %52, %57, %56
  %102 = call i32 @av_bprint_finalize(%struct.AVBPrint* nonnull %10, i8** nonnull %3) #12
  %103 = icmp slt i32 %102, 0
  %104 = select i1 %103, i32 %102, i32 0
  br label %105

105:                                              ; preds = %101, %27, %88, %26
  %106 = phi i32 [ -22, %26 ], [ %86, %88 ], [ -22, %27 ], [ %104, %101 ]
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  ret i32 %106
}

declare void @av_bprint_init(%struct.AVBPrint*, i32, i32) local_unnamed_addr #3

declare i32 @av_bprint_finalize(%struct.AVBPrint*, i8**) local_unnamed_addr #3

declare void @av_bprint_append_data(%struct.AVBPrint*, i8*, i32) local_unnamed_addr #3

declare void @av_bprint_escape(%struct.AVBPrint*, i8*, i8*, i32, i32) local_unnamed_addr #3

declare i32 @av_match_name(i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i32 @__isoc99_sscanf(i8* nocapture readonly, i8* nocapture readonly, ...) local_unnamed_addr #5

declare i32 @av_expr_parse_and_eval(double*, i8*, i8**, double*, i8**, double (i8*, double)**, i8**, double (i8*, double, double)**, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.llrint.i64.f64(double) #10

declare i32 @av_get_pix_fmt(i8*) local_unnamed_addr #3

declare i32 @av_get_sample_fmt(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @log_value(i8*, double) unnamed_addr #2 {
  %3 = fcmp nsz oeq double %1, 0x41DFFFFFFFC00000
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.101, i64 0, i64 0)) #12
  br label %42

5:                                                ; preds = %2
  %6 = fcmp nsz oeq double %1, 0xC1E0000000000000
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.102, i64 0, i64 0)) #12
  br label %42

8:                                                ; preds = %5
  %9 = fcmp nsz oeq double %1, 0x41EFFFFFFFE00000
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.103, i64 0, i64 0)) #12
  br label %42

11:                                               ; preds = %8
  %12 = fcmp nsz oeq double %1, 0x43E0000000000000
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.104, i64 0, i64 0)) #12
  br label %42

14:                                               ; preds = %11
  %15 = fcmp nsz oeq double %1, 0xC3E0000000000000
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.105, i64 0, i64 0)) #12
  br label %42

17:                                               ; preds = %14
  %18 = fcmp nsz oeq double %1, 0x47EFFFFFE0000000
  br i1 %18, label %19, label %20

19:                                               ; preds = %17
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.106, i64 0, i64 0)) #12
  br label %42

20:                                               ; preds = %17
  %21 = fcmp nsz oeq double %1, 0x3810000000000000
  br i1 %21, label %22, label %23

22:                                               ; preds = %20
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.107, i64 0, i64 0)) #12
  br label %42

23:                                               ; preds = %20
  %24 = fcmp nsz oeq double %1, 0xC7EFFFFFE0000000
  br i1 %24, label %25, label %26

25:                                               ; preds = %23
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.108, i64 0, i64 0)) #12
  br label %42

26:                                               ; preds = %23
  %27 = fcmp nsz oeq double %1, 0xB810000000000000
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i64 0, i64 0)) #12
  br label %42

29:                                               ; preds = %26
  %30 = fcmp nsz oeq double %1, 0x7FEFFFFFFFFFFFFF
  br i1 %30, label %31, label %32

31:                                               ; preds = %29
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.110, i64 0, i64 0)) #12
  br label %42

32:                                               ; preds = %29
  %33 = fcmp nsz oeq double %1, 0x10000000000000
  br i1 %33, label %34, label %35

34:                                               ; preds = %32
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.111, i64 0, i64 0)) #12
  br label %42

35:                                               ; preds = %32
  %36 = fcmp nsz oeq double %1, 0xFFEFFFFFFFFFFFFF
  br i1 %36, label %37, label %38

37:                                               ; preds = %35
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.112, i64 0, i64 0)) #12
  br label %42

38:                                               ; preds = %35
  %39 = fcmp nsz oeq double %1, 0x8010000000000000
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.113, i64 0, i64 0)) #12
  br label %42

41:                                               ; preds = %38
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.114, i64 0, i64 0), double %1) #12
  br label %42

42:                                               ; preds = %7, %13, %19, %25, %31, %37, %41, %40, %34, %28, %22, %16, %10, %4
  ret void
}

declare i64 @av_strlcatf(i8*, i64, i8*, ...) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i64 @strspn(i8* nocapture, i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #4

declare i32 @av_strerror(i32, i8*, i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 (i8*)* @av_get_pix_fmt, i32 (i8*)* @av_get_sample_fmt}
