; ModuleID = '../../third_party/icu/source/i18n/number_rounding.cpp'
source_filename = "../../third_party/icu/source/i18n/number_rounding.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::IFixedDecimal" = type { i32 (...)** }
%"class.icu_69::MaybeStackArray" = type <{ i8*, i32, i8, [40 x i8], [3 x i8] }>
%"class.icu_69::number::impl::MultiplierProducer" = type { i32 (...)** }
%"class.icu_69::number::impl::RoundingImpl" = type <{ %"class.icu_69::number::Precision", i32, i8, [3 x i8] }>
%"class.icu_69::number::Precision" = type <{ i32, [4 x i8], %"union.icu_69::number::Precision::PrecisionUnion", i32, [4 x i8] }>
%"union.icu_69::number::Precision::PrecisionUnion" = type { %"struct.icu_69::number::Precision::PrecisionUnion::IncrementSettings" }
%"struct.icu_69::number::Precision::PrecisionUnion::IncrementSettings" = type { double, i16, i16 }
%"class.icu_69::CurrencyUnit" = type { %"class.icu_69::MeasureUnit.base", [4 x i16], [4 x i8] }
%"class.icu_69::MeasureUnit.base" = type <{ %"class.icu_69::UObject", %"class.icu_69::MeasureUnitImpl"*, i16, i8 }>
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.icu_69::MeasureUnitImpl" = type opaque
%"class.icu_69::StringSegment" = type <{ %"class.icu_69::UnicodeString"*, i32, i32, i8, [7 x i8] }>
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.0, [32 x i8] }
%struct.anon.0 = type { i16, i32, i32, i16* }
%"class.icu_69::CharString" = type { %"class.icu_69::MaybeStackArray", i32, [4 x i8] }
%"class.icu_69::ConstChar16Ptr" = type { i16* }
%"class.icu_69::number::impl::DecimalQuantity" = type <{ %"class.icu_69::IFixedDecimal", i8, [3 x i8], i32, i32, i8, i8, [2 x i8], double, i32, i32, i32, i32, %union.anon, i8, i8, [6 x i8] }>
%union.anon = type { %struct.anon.1 }
%struct.anon.1 = type { i8*, i32 }
%struct.anon = type { i16, [27 x i16] }
%"class.icu_69::number::IncrementPrecision" = type { %"class.icu_69::number::Precision.base", [4 x i8] }
%"class.icu_69::number::Precision.base" = type <{ i32, [4 x i8], %"union.icu_69::number::Precision::PrecisionUnion", i32 }>
%"class.icu_69::number::FractionPrecision" = type { %"class.icu_69::number::Precision.base", [4 x i8] }
%"class.icu_69::number::CurrencyPrecision" = type { %"class.icu_69::number::Precision.base", [4 x i8] }
%"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings" = type { i16, i16, i16, i16, i32 }

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_ = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_ = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode = comdat any

@__const._ZN6icu_696number4impl20parseIncrementOptionERKNS_13StringSegmentERNS0_9PrecisionER10UErrorCode.dq = private unnamed_addr constant <{ %"class.icu_69::IFixedDecimal", i8, [3 x i8], i32, i32, i8, i8, [2 x i8], double, i32, i32, i32, i32, { { i8*, i32, [4 x i8] } }, i8, i8, [6 x i8] }> <{ %"class.icu_69::IFixedDecimal" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", double 0xFFFFFFFFFFFFFFFF, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, { { i8*, i32, [4 x i8] } } { { i8*, i32, [4 x i8] } { i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" } }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, align 8
@__const._ZNK6icu_696number17CurrencyPrecision12withCurrencyERKNS_12CurrencyUnitE.result = private unnamed_addr constant <{ i32, [4 x i8], { { double, i16, i16, [4 x i8] } }, i32, [4 x i8] }> <{ i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { { double, i16, i16, [4 x i8] } } { { double, i16, i16, [4 x i8] } { double 0xFFFFFFFFFFFFFFFF, i16 -21846, i16 -21846, [4 x i8] c"\AA\AA\AA\AA" } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZN6icu_696number9Precision17constructCurrencyE14UCurrencyUsage.union_ = private unnamed_addr constant { { double, i16, i16, [4 x i8] } } { { double, i16, i16, [4 x i8] } { double 0xFFFFFFFFFFFFFFFF, i16 -21846, i16 -21846, [4 x i8] c"\AA\AA\AA\AA" } }, align 8
@_ZTVN6icu_696number4impl18MultiplierProducerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6icu_696number4impl18MultiplierProducerE to i8*), i8* bitcast (void (%"class.icu_69::number::impl::MultiplierProducer"*)* @_ZN6icu_696number4impl18MultiplierProducerD2Ev to i8*), i8* bitcast (void (%"class.icu_69::number::impl::MultiplierProducer"*)* @_ZN6icu_696number4impl18MultiplierProducerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTSN6icu_696number4impl18MultiplierProducerE = hidden constant [42 x i8] c"N6icu_696number4impl18MultiplierProducerE\00", align 1
@_ZTIN6icu_696number4impl18MultiplierProducerE = hidden constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @_ZTSN6icu_696number4impl18MultiplierProducerE, i32 0, i32 0) }, align 8

@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ei10UErrorCode = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, i32, i32), void (%"class.icu_69::MaybeStackArray"*, i32, i32)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode
@_ZN6icu_6915MaybeStackArrayIcLi40EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1EOS1_ = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_
@_ZN6icu_696number4impl18MultiplierProducerD1Ev = hidden unnamed_addr alias void (%"class.icu_69::number::impl::MultiplierProducer"*), void (%"class.icu_69::number::impl::MultiplierProducer"*)* @_ZN6icu_696number4impl18MultiplierProducerD2Ev
@_ZN6icu_696number4impl12RoundingImplC1ERKNS0_9PrecisionE25UNumberFormatRoundingModeRKNS_12CurrencyUnitER10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::number::impl::RoundingImpl"*, %"class.icu_69::number::Precision"*, i32, %"class.icu_69::CurrencyUnit"*, i32*), void (%"class.icu_69::number::impl::RoundingImpl"*, %"class.icu_69::number::Precision"*, i32, %"class.icu_69::CurrencyUnit"*, i32*)* @_ZN6icu_696number4impl12RoundingImplC2ERKNS0_9PrecisionE25UNumberFormatRoundingModeRKNS_12CurrencyUnitER10UErrorCode

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %3, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode(%"class.icu_69::MaybeStackArray"*, i32, i32) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode) align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %5, i8** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 4
  %8 = icmp slt i32 %2, 1
  %9 = icmp sgt i32 %1, 40
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %21

11:                                               ; preds = %3
  %12 = sext i32 %1 to i64
  %13 = tail call noalias i8* @uprv_malloc_69(i64 %12) #12
  %14 = icmp eq i8* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = load i8, i8* %7, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = load i8*, i8** %4, align 8
  tail call void @uprv_free_69(i8* %19) #13
  br label %20

20:                                               ; preds = %18, %15
  store i8* %13, i8** %4, align 8
  store i32 %1, i32* %6, align 8
  store i8 1, i8* %7, align 4
  br label %21

21:                                               ; preds = %3, %11, %20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii(%"class.icu_69::MaybeStackArray"*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %31

5:                                                ; preds = %3
  %6 = sext i32 %1 to i64
  %7 = tail call noalias i8* @uprv_malloc_69(i64 %6) #12
  %8 = icmp eq i8* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = icmp sgt i32 %2, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, %2
  %15 = select i1 %14, i32 %13, i32 %2
  %16 = icmp sgt i32 %15, %1
  %17 = select i1 %16, i32 %1, i32 %15
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 %19, i64 %20, i1 false)
  br label %21

21:                                               ; preds = %11, %9
  %22 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %23 = load i8, i8* %22, align 4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @uprv_free_69(i8* %27) #13
  br label %28

28:                                               ; preds = %21, %25
  %29 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %7, i8** %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %1, i32* %30, align 8
  store i8 1, i8* %22, align 4
  br label %31

31:                                               ; preds = %3, %28, %5
  %32 = phi i8* [ null, %5 ], [ %7, %28 ], [ null, %3 ]
  ret i8* %32
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #13
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #13
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_) align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %4 = bitcast %"class.icu_69::MaybeStackArray"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.icu_69::MaybeStackArray"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %12 = load i8, i8* %11, align 4
  store i8 %12, i8* %10, align 4
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %15 = icmp eq i8* %13, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %18, i8** %17, align 8
  %19 = load i32, i32* %8, align 8
  %20 = sext i32 %19 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %13, i64 %20, i1 false)
  br label %22

21:                                               ; preds = %2
  store i8* %14, i8** %3, align 8
  store i32 40, i32* %8, align 8
  store i8 0, i8* %11, align 4
  br label %22

22:                                               ; preds = %21, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %2, i8** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden dereferenceable(56) %"class.icu_69::MaybeStackArray"* @_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #13
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %14 = load i8, i8* %13, align 4
  store i8 %14, i8* %3, align 4
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = load i32, i32* %10, align 8
  %23 = sext i32 %22 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %16, i64 %23, i1 false)
  br label %26

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %16, i8** %25, align 8
  store i8* %17, i8** %15, align 8
  store i32 40, i32* %10, align 8
  store i8 0, i8* %13, align 4
  br label %26

26:                                               ; preds = %24, %19
  ret %"class.icu_69::MaybeStackArray"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %3, i64 %6
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZN6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci(%"class.icu_69::MaybeStackArray"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ne i8* %1, null
  %5 = icmp sgt i32 %2, 0
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @uprv_free_69(i8* %13) #13
  br label %14

14:                                               ; preds = %7, %11
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %1, i8** %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %2, i32* %16, align 8
  store i8 0, i8* %8, align 4
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi(%"class.icu_69::MaybeStackArray"*, i32, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %23

10:                                               ; preds = %3
  %11 = icmp slt i32 %1, 1
  br i1 %11, label %29, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, %1
  %16 = select i1 %15, i32 %14, i32 %1
  %17 = sext i32 %16 to i64
  %18 = tail call noalias i8* @uprv_malloc_69(i64 %17) #12
  %19 = icmp eq i8* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 %22, i64 %17, i1 false)
  br label %23

23:                                               ; preds = %20, %7
  %24 = phi i32 [ %1, %7 ], [ %16, %20 ]
  %25 = phi i8* [ %9, %7 ], [ %18, %20 ]
  store i32 %24, i32* %2, align 4
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %27 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %28, align 8
  store i8 0, i8* %4, align 4
  br label %29

29:                                               ; preds = %12, %10, %23
  %30 = phi i8* [ %25, %23 ], [ null, %10 ], [ null, %12 ]
  ret i8* %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %27

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = sext i32 %8 to i64
  %12 = tail call noalias i8* @uprv_malloc_69(i64 %11) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @uprv_free_69(i8* %20) #13
  br label %22

21:                                               ; preds = %10, %6
  store i32 7, i32* %2, align 4
  br label %27

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %12, i8** %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %8, i32* %24, align 8
  store i8 1, i8* %15, align 4
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %26, i64 %11, i1 false)
  br label %27

27:                                               ; preds = %3, %21, %22
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl20parseIncrementOptionERKNS_13StringSegmentERNS0_9PrecisionER10UErrorCode(%"class.icu_69::StringSegment"* dereferenceable(24), %"class.icu_69::number::Precision"* nocapture dereferenceable(32), i32* nocapture dereferenceable(4)) local_unnamed_addr #0 {
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [18 x i8], align 16
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %"class.icu_69::CharString", align 8
  %15 = alloca i32, align 4
  %16 = alloca %"class.icu_69::UnicodeString", align 8
  %17 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %18 = alloca %"class.icu_69::UnicodeString", align 8
  %19 = alloca %"class.icu_69::number::impl::DecimalQuantity", align 8
  %20 = alloca i32, align 4
  %21 = bitcast %"class.icu_69::CharString"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %21) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 64, i1 false)
  %22 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %14, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %14, i64 0, i32 0, i32 3, i64 0
  store i8* %23, i8** %22, align 8
  %24 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %14, i64 0, i32 0, i32 1
  store i32 40, i32* %24, align 8
  %25 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %14, i64 0, i32 0, i32 2
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %14, i64 0, i32 1
  store i32 0, i32* %26, align 8
  store i8 0, i8* %23, align 1
  %27 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #13
  store i32 0, i32* %15, align 4
  %28 = bitcast %"class.icu_69::UnicodeString"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %28) #13
  %29 = bitcast %"class.icu_69::UnicodeString"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %29) #13
  call void @_ZNK6icu_6913StringSegment19toTempUnicodeStringEv(%"class.icu_69::UnicodeString"* nonnull sret %18, %"class.icu_69::StringSegment"* %0) #13
  %30 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %18, i64 0, i32 1
  %31 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %30, i64 0, i32 0, i32 0
  %32 = load i16, i16* %31, align 8
  %33 = sext i16 %32 to i32
  %34 = and i32 %33, 17
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %45

36:                                               ; preds = %3
  %37 = and i32 %33, 2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %30 to %struct.anon*
  %41 = getelementptr inbounds %struct.anon, %struct.anon* %40, i64 0, i32 1, i64 0
  br label %45

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %18, i64 0, i32 1, i32 0, i32 3
  %44 = load i16*, i16** %43, align 8
  br label %45

45:                                               ; preds = %3, %39, %42
  %46 = phi i16* [ %41, %39 ], [ %44, %42 ], [ null, %3 ]
  %47 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %17, i64 0, i32 0
  store i16* %46, i16** %47, align 8
  %48 = call i32 @_ZNK6icu_6913StringSegment6lengthEv(%"class.icu_69::StringSegment"* %0) #13
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %16, i8 signext 0, %"class.icu_69::ConstChar16Ptr"* nonnull %17, i32 %48) #13
  %49 = call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString20appendInvariantCharsERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::CharString"* nonnull %14, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %16, i32* nonnull dereferenceable(4) %15) #13
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %16) #13
  %50 = load i16*, i16** %47, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %50) #13, !srcloc !2
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %28) #13
  %51 = load i32, i32* %15, align 4
  %52 = icmp eq i32 %51, 26
  br i1 %52, label %53, label %54

53:                                               ; preds = %45
  store i32 65811, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #13
  br label %156

54:                                               ; preds = %45
  %55 = icmp slt i32 %51, 1
  br i1 %55, label %57, label %56

56:                                               ; preds = %54
  store i32 %51, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #13
  br label %156

57:                                               ; preds = %54
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #13
  %58 = bitcast %"class.icu_69::number::impl::DecimalQuantity"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %58) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %58, i8* align 8 bitcast (<{ %"class.icu_69::IFixedDecimal", i8, [3 x i8], i32, i32, i8, i8, [2 x i8], double, i32, i32, i32, i32, { { i8*, i32, [4 x i8] } }, i8, i8, [6 x i8] }>* @__const._ZN6icu_696number4impl20parseIncrementOptionERKNS_13StringSegmentERNS0_9PrecisionER10UErrorCode.dq to i8*), i64 72, i1 false)
  call void @_ZN6icu_696number4impl15DecimalQuantityC1Ev(%"class.icu_69::number::impl::DecimalQuantity"* nonnull %19) #13
  %59 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59) #13
  store i32 0, i32* %20, align 4
  %60 = load i8*, i8** %22, align 8
  %61 = load i32, i32* %26, align 8
  %62 = call dereferenceable(72) %"class.icu_69::number::impl::DecimalQuantity"* @_ZN6icu_696number4impl15DecimalQuantity14setToDecNumberENS_11StringPieceER10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"* nonnull %19, i8* %60, i32 %61, i32* nonnull dereferenceable(4) %20) #13
  %63 = load i32, i32* %20, align 4
  %64 = icmp slt i32 %63, 1
  br i1 %64, label %66, label %65

65:                                               ; preds = %57
  store i32 65811, i32* %2, align 4
  br label %155

66:                                               ; preds = %57
  %67 = call double @_ZNK6icu_696number4impl15DecimalQuantity8toDoubleEv(%"class.icu_69::number::impl::DecimalQuantity"* nonnull %19) #13
  %68 = call i32 @_ZNK6icu_6913StringSegment6lengthEv(%"class.icu_69::StringSegment"* %0) #13
  %69 = icmp sgt i32 %68, 0
  br i1 %69, label %70, label %78

70:                                               ; preds = %66, %74
  %71 = phi i32 [ %75, %74 ], [ 0, %66 ]
  %72 = call zeroext i16 @_ZNK6icu_6913StringSegment6charAtEi(%"class.icu_69::StringSegment"* %0, i32 %71) #13
  %73 = icmp eq i16 %72, 46
  br i1 %73, label %78, label %74

74:                                               ; preds = %70
  %75 = add nuw nsw i32 %71, 1
  %76 = call i32 @_ZNK6icu_6913StringSegment6lengthEv(%"class.icu_69::StringSegment"* %0) #13
  %77 = icmp slt i32 %75, %76
  br i1 %77, label %70, label %78

78:                                               ; preds = %74, %70, %66
  %79 = phi i32 [ 0, %66 ], [ %71, %70 ], [ %75, %74 ]
  %80 = call i32 @_ZNK6icu_6913StringSegment6lengthEv(%"class.icu_69::StringSegment"* %0) #13
  %81 = icmp eq i32 %79, %80
  br i1 %81, label %82, label %114

82:                                               ; preds = %78
  %83 = fcmp ogt double %67, 0.000000e+00
  br i1 %83, label %84, label %102

84:                                               ; preds = %82
  %85 = getelementptr inbounds [18 x i8], [18 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 18, i8* nonnull %85) #13, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %85, i8 -86, i64 18, i1 false) #13, !noalias !3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13, !noalias !3
  store i8 -86, i8* %4, align 1, !noalias !3
  %86 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %86) #13, !noalias !3
  store i32 -1431655766, i32* %5, align 4, !noalias !3
  %87 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %87) #13, !noalias !3
  store i32 -1431655766, i32* %6, align 4, !noalias !3
  call void @_ZN6icu_6917double_conversion23DoubleToStringConverter13DoubleToAsciiEdNS1_8DtoaModeEiPciPbPiS5_(double %67, i32 0, i32 0, i8* nonnull %85, i32 18, i8* nonnull %4, i32* nonnull %5, i32* nonnull %6) #13, !noalias !8
  %88 = load i32, i32* %5, align 4, !noalias !3
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %94, label %90

90:                                               ; preds = %84
  %91 = load i32, i32* %6, align 4, !noalias !3
  %92 = sub nsw i32 %88, %91
  %93 = trunc i32 %92 to i16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %87) #13, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %86) #13, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %85) #13, !noalias !3
  br label %100

94:                                               ; preds = %84
  %95 = load i8, i8* %85, align 16, !noalias !3
  %96 = load i32, i32* %6, align 4, !noalias !3
  %97 = trunc i32 %96 to i16
  %98 = sub i16 1, %97
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %87) #13, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %86) #13, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %85) #13, !noalias !3
  switch i8 %95, label %100 [
    i8 49, label %102
    i8 53, label %99
  ]

99:                                               ; preds = %94
  br label %102

100:                                              ; preds = %94, %90
  %101 = phi i16 [ %93, %90 ], [ %98, %94 ]
  br label %102

102:                                              ; preds = %82, %94, %99, %100
  %103 = phi i32 [ 5, %100 ], [ 7, %99 ], [ 6, %94 ], [ 9, %82 ]
  %104 = phi i16 [ %101, %100 ], [ %98, %99 ], [ %98, %94 ], [ undef, %82 ]
  %105 = phi double [ %67, %100 ], [ %67, %99 ], [ %67, %94 ], [ 3.251450e-319, %82 ]
  %106 = bitcast %"class.icu_69::number::Precision"* %1 to i8*
  %107 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %1, i64 0, i32 0
  store i32 %103, i32* %107, align 8
  %108 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %1, i64 0, i32 2, i32 0, i32 0
  store double %105, double* %108, align 8
  %109 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %1, i64 0, i32 2, i32 0, i32 1
  store i16 0, i16* %109, align 8
  %110 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %1, i64 0, i32 2, i32 0, i32 2
  store i16 %104, i16* %110, align 2
  %111 = getelementptr inbounds i8, i8* %106, i64 20
  %112 = bitcast i8* %111 to i32*
  store i32 -1431655766, i32* %112, align 4
  %113 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %1, i64 0, i32 3
  store i32 0, i32* %113, align 8
  br label %155

114:                                              ; preds = %78
  %115 = call i32 @_ZNK6icu_6913StringSegment6lengthEv(%"class.icu_69::StringSegment"* %0) #13
  %116 = xor i32 %79, -1
  %117 = add i32 %115, %116
  %118 = fcmp ogt double %67, 0.000000e+00
  br i1 %118, label %119, label %142

119:                                              ; preds = %114
  %120 = getelementptr inbounds [18 x i8], [18 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 18, i8* nonnull %120) #13, !noalias !9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %120, i8 -86, i64 18, i1 false) #13, !noalias !9
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #13, !noalias !9
  store i8 -86, i8* %7, align 1, !noalias !9
  %121 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #13, !noalias !9
  store i32 -1431655766, i32* %8, align 4, !noalias !9
  %122 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %122) #13, !noalias !9
  store i32 -1431655766, i32* %9, align 4, !noalias !9
  call void @_ZN6icu_6917double_conversion23DoubleToStringConverter13DoubleToAsciiEdNS1_8DtoaModeEiPciPbPiS5_(double %67, i32 0, i32 0, i8* nonnull %120, i32 18, i8* nonnull %7, i32* nonnull %8, i32* nonnull %9) #13, !noalias !14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %122) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %120) #13
  %123 = icmp ult i32 %117, 1000
  br i1 %123, label %124, label %142

124:                                              ; preds = %119
  %125 = trunc i32 %117 to i16
  call void @llvm.lifetime.start.p0i8(i64 18, i8* nonnull %120) #13, !noalias !15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %120, i8 -86, i64 18, i1 false) #13, !noalias !15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #13, !noalias !15
  store i8 -86, i8* %11, align 1, !noalias !15
  %126 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %126) #13, !noalias !15
  store i32 -1431655766, i32* %12, align 4, !noalias !15
  %127 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %127) #13, !noalias !15
  store i32 -1431655766, i32* %13, align 4, !noalias !15
  call void @_ZN6icu_6917double_conversion23DoubleToStringConverter13DoubleToAsciiEdNS1_8DtoaModeEiPciPbPiS5_(double %67, i32 0, i32 0, i8* nonnull %120, i32 18, i8* nonnull %11, i32* nonnull %12, i32* nonnull %13) #13, !noalias !15
  %128 = load i32, i32* %12, align 4, !noalias !15
  %129 = icmp eq i32 %128, 1
  br i1 %129, label %134, label %130

130:                                              ; preds = %124
  %131 = load i32, i32* %13, align 4, !noalias !15
  %132 = sub nsw i32 %128, %131
  %133 = trunc i32 %132 to i16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %127) #13, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %126) #13, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #13, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %120) #13, !noalias !15
  br label %140

134:                                              ; preds = %124
  %135 = load i8, i8* %120, align 16, !noalias !15
  %136 = load i32, i32* %13, align 4, !noalias !15
  %137 = trunc i32 %136 to i16
  %138 = sub i16 1, %137
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %127) #13, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %126) #13, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #13, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %120) #13, !noalias !15
  switch i8 %135, label %140 [
    i8 49, label %142
    i8 53, label %139
  ]

139:                                              ; preds = %134
  br label %142

140:                                              ; preds = %134, %130
  %141 = phi i16 [ %133, %130 ], [ %138, %134 ]
  br label %142

142:                                              ; preds = %119, %134, %139, %140, %114
  %143 = phi double [ 3.251450e-319, %114 ], [ %67, %140 ], [ %67, %139 ], [ %67, %134 ], [ 3.251450e-319, %119 ]
  %144 = phi i16 [ undef, %114 ], [ %141, %140 ], [ %138, %139 ], [ %138, %134 ], [ undef, %119 ]
  %145 = phi i16 [ 0, %114 ], [ %125, %140 ], [ %125, %139 ], [ %125, %134 ], [ undef, %119 ]
  %146 = phi i32 [ 9, %114 ], [ 5, %140 ], [ 7, %139 ], [ 6, %134 ], [ 9, %119 ]
  %147 = bitcast %"class.icu_69::number::Precision"* %1 to i8*
  %148 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %1, i64 0, i32 0
  store i32 %146, i32* %148, align 8
  %149 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %1, i64 0, i32 2, i32 0, i32 0
  store double %143, double* %149, align 8
  %150 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %1, i64 0, i32 2, i32 0, i32 1
  store i16 %145, i16* %150, align 8
  %151 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %1, i64 0, i32 2, i32 0, i32 2
  store i16 %144, i16* %151, align 2
  %152 = getelementptr inbounds i8, i8* %147, i64 20
  %153 = bitcast i8* %152 to i32*
  store i32 -1431655766, i32* %153, align 4
  %154 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %1, i64 0, i32 3
  store i32 0, i32* %154, align 8
  br label %155

155:                                              ; preds = %102, %142, %65
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #13
  call void @_ZN6icu_696number4impl15DecimalQuantityD1Ev(%"class.icu_69::number::impl::DecimalQuantity"* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %58) #13
  br label %156

156:                                              ; preds = %56, %53, %155
  %157 = load i8, i8* %25, align 4
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %156
  %160 = load i8*, i8** %22, align 8
  call void @uprv_free_69(i8* %160) #13
  br label %161

161:                                              ; preds = %156, %159
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %21) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString20appendInvariantCharsERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::CharString"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #4

declare void @_ZNK6icu_6913StringSegment19toTempUnicodeStringEv(%"class.icu_69::UnicodeString"* sret, %"class.icu_69::StringSegment"*) local_unnamed_addr #4

declare i32 @_ZNK6icu_6913StringSegment6lengthEv(%"class.icu_69::StringSegment"*) local_unnamed_addr #4

declare void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"*, i8 signext, %"class.icu_69::ConstChar16Ptr"*, i32) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #5

declare void @_ZN6icu_696number4impl15DecimalQuantityC1Ev(%"class.icu_69::number::impl::DecimalQuantity"*) unnamed_addr #4

declare dereferenceable(72) %"class.icu_69::number::impl::DecimalQuantity"* @_ZN6icu_696number4impl15DecimalQuantity14setToDecNumberENS_11StringPieceER10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"*, i8*, i32, i32* dereferenceable(4)) local_unnamed_addr #4

declare double @_ZNK6icu_696number4impl15DecimalQuantity8toDoubleEv(%"class.icu_69::number::impl::DecimalQuantity"*) local_unnamed_addr #4

declare zeroext i16 @_ZNK6icu_6913StringSegment6charAtEi(%"class.icu_69::StringSegment"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number9Precision9incrementEd(%"class.icu_69::number::IncrementPrecision"* noalias sret, double) local_unnamed_addr #0 align 2 {
  %3 = alloca [18 x i8], align 16
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = fcmp ogt double %1, 0.000000e+00
  br i1 %7, label %8, label %54

8:                                                ; preds = %2
  %9 = getelementptr inbounds [18 x i8], [18 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 18, i8* nonnull %9) #13, !noalias !20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 18, i1 false) #13, !noalias !20
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13, !noalias !20
  store i8 -86, i8* %4, align 1, !noalias !20
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #13, !noalias !20
  store i32 -1431655766, i32* %5, align 4, !noalias !20
  %11 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #13, !noalias !20
  store i32 -1431655766, i32* %6, align 4, !noalias !20
  call void @_ZN6icu_6917double_conversion23DoubleToStringConverter13DoubleToAsciiEdNS1_8DtoaModeEiPciPbPiS5_(double %1, i32 0, i32 0, i8* nonnull %9, i32 18, i8* nonnull %4, i32* nonnull %5, i32* nonnull %6) #13, !noalias !20
  %12 = load i32, i32* %5, align 4, !noalias !20
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %18, label %14

14:                                               ; preds = %8
  %15 = load i32, i32* %6, align 4, !noalias !20
  %16 = sub nsw i32 %12, %15
  %17 = trunc i32 %16 to i16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #13, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #13, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %9) #13, !noalias !20
  br label %43

18:                                               ; preds = %8
  %19 = load i8, i8* %9, align 16, !noalias !20
  %20 = load i32, i32* %6, align 4, !noalias !20
  %21 = trunc i32 %20 to i16
  %22 = sub i16 1, %21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #13, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #13, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13, !noalias !20
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %9) #13, !noalias !20
  switch i8 %19, label %43 [
    i8 49, label %23
    i8 53, label %33
  ]

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 0
  store i32 6, i32* %24, align 8, !alias.scope !20
  %25 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 2
  %26 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %25 to i8*
  %27 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store double %1, double* %27, align 8, !alias.scope !20
  %28 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  store i16 0, i16* %28, align 8, !alias.scope !20
  %29 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 2, i32 0, i32 2
  store i16 %22, i16* %29, align 2, !alias.scope !20
  %30 = getelementptr inbounds i8, i8* %26, i64 12
  %31 = bitcast i8* %30 to i32*
  store i32 -1431655766, i32* %31, align 4, !alias.scope !20
  %32 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 3
  store i32 0, i32* %32, align 8, !alias.scope !20
  br label %59

33:                                               ; preds = %18
  %34 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 0
  store i32 7, i32* %34, align 8, !alias.scope !20
  %35 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 2
  %36 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %35 to i8*
  %37 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store double %1, double* %37, align 8, !alias.scope !20
  %38 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  store i16 0, i16* %38, align 8, !alias.scope !20
  %39 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 2, i32 0, i32 2
  store i16 %22, i16* %39, align 2, !alias.scope !20
  %40 = getelementptr inbounds i8, i8* %36, i64 12
  %41 = bitcast i8* %40 to i32*
  store i32 -1431655766, i32* %41, align 4, !alias.scope !20
  %42 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 3
  store i32 0, i32* %42, align 8, !alias.scope !20
  br label %59

43:                                               ; preds = %18, %14
  %44 = phi i16 [ %17, %14 ], [ %22, %18 ]
  %45 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 0
  store i32 5, i32* %45, align 8, !alias.scope !20
  %46 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 2
  %47 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %46 to i8*
  %48 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store double %1, double* %48, align 8, !alias.scope !20
  %49 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  store i16 0, i16* %49, align 8, !alias.scope !20
  %50 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 2, i32 0, i32 2
  store i16 %44, i16* %50, align 2, !alias.scope !20
  %51 = getelementptr inbounds i8, i8* %47, i64 12
  %52 = bitcast i8* %51 to i32*
  store i32 -1431655766, i32* %52, align 4, !alias.scope !20
  %53 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 3
  store i32 0, i32* %53, align 8, !alias.scope !20
  br label %59

54:                                               ; preds = %2
  %55 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 0
  store i32 9, i32* %55, align 8
  %56 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 3
  store i32 0, i32* %56, align 8
  %57 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 2
  %58 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %57 to i32*
  store i32 65810, i32* %58, align 8
  br label %59

59:                                               ; preds = %43, %33, %23, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_696number18IncrementPrecision15withMinFractionEi(%"class.icu_69::number::Precision"* noalias nocapture sret, %"class.icu_69::number::IncrementPrecision"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca [18 x i8], align 16
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %1, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 9
  br i1 %10, label %11, label %14

11:                                               ; preds = %3
  %12 = bitcast %"class.icu_69::number::Precision"* %0 to i8*
  %13 = bitcast %"class.icu_69::number::IncrementPrecision"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 32, i1 false)
  br label %53

14:                                               ; preds = %3
  %15 = icmp ult i32 %2, 1000
  br i1 %15, label %16, label %48

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = load double, double* %17, align 8
  %19 = trunc i32 %2 to i16
  %20 = getelementptr inbounds [18 x i8], [18 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 18, i8* nonnull %20) #13, !noalias !23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 18, i1 false) #13, !noalias !23
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #13, !noalias !23
  store i8 -86, i8* %5, align 1, !noalias !23
  %21 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #13, !noalias !23
  store i32 -1431655766, i32* %6, align 4, !noalias !23
  %22 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #13, !noalias !23
  store i32 -1431655766, i32* %7, align 4, !noalias !23
  call void @_ZN6icu_6917double_conversion23DoubleToStringConverter13DoubleToAsciiEdNS1_8DtoaModeEiPciPbPiS5_(double %18, i32 0, i32 0, i8* nonnull %20, i32 18, i8* nonnull %5, i32* nonnull %6, i32* nonnull %7) #13, !noalias !23
  %23 = load i32, i32* %6, align 4, !noalias !23
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %29, label %25

25:                                               ; preds = %16
  %26 = load i32, i32* %7, align 4, !noalias !23
  %27 = sub nsw i32 %23, %26
  %28 = trunc i32 %27 to i16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #13, !noalias !23
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #13, !noalias !23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #13, !noalias !23
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %20) #13, !noalias !23
  br label %35

29:                                               ; preds = %16
  %30 = load i8, i8* %20, align 16, !noalias !23
  %31 = load i32, i32* %7, align 4, !noalias !23
  %32 = trunc i32 %31 to i16
  %33 = sub i16 1, %32
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #13, !noalias !23
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #13, !noalias !23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #13, !noalias !23
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %20) #13, !noalias !23
  switch i8 %30, label %35 [
    i8 49, label %37
    i8 53, label %34
  ]

34:                                               ; preds = %29
  br label %37

35:                                               ; preds = %29, %25
  %36 = phi i16 [ %28, %25 ], [ %33, %29 ]
  br label %37

37:                                               ; preds = %29, %34, %35
  %38 = phi i16 [ %36, %35 ], [ %33, %34 ], [ %33, %29 ]
  %39 = phi i32 [ 5, %35 ], [ 7, %34 ], [ 6, %29 ]
  %40 = bitcast %"class.icu_69::number::Precision"* %0 to i8*
  %41 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 0
  store i32 %39, i32* %41, align 8
  %42 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2, i32 0, i32 0
  store double %18, double* %42, align 8
  %43 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2, i32 0, i32 1
  store i16 %19, i16* %43, align 8
  %44 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2, i32 0, i32 2
  store i16 %38, i16* %44, align 2
  %45 = getelementptr inbounds i8, i8* %40, i64 20
  %46 = bitcast i8* %45 to i32*
  store i32 -1431655766, i32* %46, align 4
  %47 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 3
  store i32 0, i32* %47, align 8
  br label %53

48:                                               ; preds = %14
  %49 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 0
  store i32 9, i32* %49, align 8
  %50 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 3
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2
  %52 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %51 to i32*
  store i32 65810, i32* %52, align 8
  br label %53

53:                                               ; preds = %48, %37, %11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_696number4impl15DecimalQuantityD1Ev(%"class.icu_69::number::impl::DecimalQuantity"*) unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6icu_696number4impl18MultiplierProducerD2Ev(%"class.icu_69::number::impl::MultiplierProducer"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl18MultiplierProducerD0Ev(%"class.icu_69::number::impl::MultiplierProducer"* nocapture readnone) unnamed_addr #7 align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define hidden signext i16 @_ZN6icu_696number4impl13roundingutils20doubleFractionLengthEdPa(double, i8*) local_unnamed_addr #0 {
  %3 = alloca [18 x i8], align 16
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds [18 x i8], [18 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 18, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 18, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13
  store i8 -86, i8* %4, align 1
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #13
  store i32 -1431655766, i32* %5, align 4
  %9 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #13
  store i32 -1431655766, i32* %6, align 4
  call void @_ZN6icu_6917double_conversion23DoubleToStringConverter13DoubleToAsciiEdNS1_8DtoaModeEiPciPbPiS5_(double %0, i32 0, i32 0, i8* nonnull %7, i32 18, i8* nonnull %4, i32* nonnull %5, i32* nonnull %6) #13
  %10 = icmp eq i8* %1, null
  %11 = load i32, i32* %5, align 4
  br i1 %10, label %17, label %12

12:                                               ; preds = %2
  %13 = icmp eq i32 %11, 1
  %14 = load i8, i8* %7, align 16
  %15 = add i8 %14, -48
  %16 = select i1 %13, i8 %15, i8 -1
  store i8 %16, i8* %1, align 1
  br label %17

17:                                               ; preds = %12, %2
  %18 = load i32, i32* %6, align 4
  %19 = sub nsw i32 %11, %18
  %20 = trunc i32 %19 to i16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %7) #13
  ret i16 %20
}

declare void @_ZN6icu_6917double_conversion23DoubleToStringConverter13DoubleToAsciiEdNS1_8DtoaModeEiPciPbPiS5_(double, i32, i32, i8*, i32, i8*, i32*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number9Precision9unlimitedEv(%"class.icu_69::number::Precision"* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 0
  store i32 1, i32* %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2
  %4 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_696number9Precision7integerEv(%"class.icu_69::number::FractionPrecision"* noalias nocapture sret) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 0
  store i32 2, i32* %2, align 8, !alias.scope !26
  %3 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 2
  %4 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %3 to i8*
  %5 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %3 to i16*
  store i16 0, i16* %5, align 8, !alias.scope !26
  %6 = getelementptr inbounds i8, i8* %4, i64 2
  %7 = bitcast i8* %6 to i16*
  store i16 0, i16* %7, align 2, !alias.scope !26
  %8 = getelementptr inbounds i8, i8* %4, i64 4
  %9 = bitcast i8* %8 to i16*
  store i16 -1, i16* %9, align 4, !alias.scope !26
  %10 = getelementptr inbounds i8, i8* %4, i64 6
  %11 = bitcast i8* %10 to i16*
  store i16 -1, i16* %11, align 2, !alias.scope !26
  %12 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %13 = bitcast i16* %12 to i32*
  store i32 -1431655766, i32* %13, align 8, !alias.scope !26
  %14 = getelementptr inbounds i8, i8* %4, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 -1431655766, i32* %15, align 4, !alias.scope !26
  %16 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 3
  store i32 0, i32* %16, align 8, !alias.scope !26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number9Precision17constructFractionEii(%"class.icu_69::number::FractionPrecision"* noalias nocapture sret, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = trunc i32 %1 to i16
  %5 = trunc i32 %2 to i16
  %6 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 0
  store i32 2, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 2
  %8 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %7 to i8*
  %9 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %7 to i16*
  store i16 %4, i16* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 2
  %11 = bitcast i8* %10 to i16*
  store i16 %5, i16* %11, align 2
  %12 = getelementptr inbounds i8, i8* %8, i64 4
  %13 = bitcast i8* %12 to i16*
  store i16 -1, i16* %13, align 4
  %14 = getelementptr inbounds i8, i8* %8, i64 6
  %15 = bitcast i8* %14 to i16*
  store i16 -1, i16* %15, align 2
  %16 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %17 = bitcast i16* %16 to i32*
  store i32 -1431655766, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %8, i64 12
  %19 = bitcast i8* %18 to i32*
  store i32 -1431655766, i32* %19, align 4
  %20 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 3
  store i32 0, i32* %20, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_696number9Precision13fixedFractionEi(%"class.icu_69::number::FractionPrecision"* noalias nocapture sret, i32) local_unnamed_addr #9 align 2 {
  %3 = icmp ult i32 %1, 1000
  br i1 %3, label %4, label %19

4:                                                ; preds = %2
  %5 = trunc i32 %1 to i16
  %6 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 2
  %7 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %6 to i8*
  %8 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %6 to i16*
  store i16 %5, i16* %8, align 8, !alias.scope !29
  %9 = getelementptr inbounds i8, i8* %7, i64 2
  %10 = bitcast i8* %9 to i16*
  store i16 %5, i16* %10, align 2, !alias.scope !29
  %11 = getelementptr inbounds i8, i8* %7, i64 4
  %12 = bitcast i8* %11 to i16*
  store i16 -1, i16* %12, align 4, !alias.scope !29
  %13 = getelementptr inbounds i8, i8* %7, i64 6
  %14 = bitcast i8* %13 to i16*
  store i16 -1, i16* %14, align 2, !alias.scope !29
  %15 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %16 = bitcast i16* %15 to i32*
  store i32 -1431655766, i32* %16, align 8, !alias.scope !29
  %17 = getelementptr inbounds i8, i8* %7, i64 12
  %18 = bitcast i8* %17 to i32*
  store i32 -1431655766, i32* %18, align 4, !alias.scope !29
  br label %22

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 2
  %21 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %20 to i32*
  store i32 65810, i32* %21, align 8
  br label %22

22:                                               ; preds = %19, %4
  %23 = phi i32 [ 9, %19 ], [ 2, %4 ]
  %24 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 0
  store i32 %23, i32* %24, align 8
  %25 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 3
  store i32 0, i32* %25, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_696number9Precision11minFractionEi(%"class.icu_69::number::FractionPrecision"* noalias nocapture sret, i32) local_unnamed_addr #9 align 2 {
  %3 = icmp ult i32 %1, 1000
  br i1 %3, label %4, label %19

4:                                                ; preds = %2
  %5 = trunc i32 %1 to i16
  %6 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 2
  %7 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %6 to i8*
  %8 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %6 to i16*
  store i16 %5, i16* %8, align 8, !alias.scope !32
  %9 = getelementptr inbounds i8, i8* %7, i64 2
  %10 = bitcast i8* %9 to i16*
  store i16 -1, i16* %10, align 2, !alias.scope !32
  %11 = getelementptr inbounds i8, i8* %7, i64 4
  %12 = bitcast i8* %11 to i16*
  store i16 -1, i16* %12, align 4, !alias.scope !32
  %13 = getelementptr inbounds i8, i8* %7, i64 6
  %14 = bitcast i8* %13 to i16*
  store i16 -1, i16* %14, align 2, !alias.scope !32
  %15 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %16 = bitcast i16* %15 to i32*
  store i32 -1431655766, i32* %16, align 8, !alias.scope !32
  %17 = getelementptr inbounds i8, i8* %7, i64 12
  %18 = bitcast i8* %17 to i32*
  store i32 -1431655766, i32* %18, align 4, !alias.scope !32
  br label %22

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 2
  %21 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %20 to i32*
  store i32 65810, i32* %21, align 8
  br label %22

22:                                               ; preds = %19, %4
  %23 = phi i32 [ 9, %19 ], [ 2, %4 ]
  %24 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 0
  store i32 %23, i32* %24, align 8
  %25 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 3
  store i32 0, i32* %25, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_696number9Precision11maxFractionEi(%"class.icu_69::number::FractionPrecision"* noalias nocapture sret, i32) local_unnamed_addr #9 align 2 {
  %3 = icmp ult i32 %1, 1000
  br i1 %3, label %4, label %19

4:                                                ; preds = %2
  %5 = trunc i32 %1 to i16
  %6 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 2
  %7 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %6 to i8*
  %8 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %6 to i16*
  store i16 0, i16* %8, align 8, !alias.scope !35
  %9 = getelementptr inbounds i8, i8* %7, i64 2
  %10 = bitcast i8* %9 to i16*
  store i16 %5, i16* %10, align 2, !alias.scope !35
  %11 = getelementptr inbounds i8, i8* %7, i64 4
  %12 = bitcast i8* %11 to i16*
  store i16 -1, i16* %12, align 4, !alias.scope !35
  %13 = getelementptr inbounds i8, i8* %7, i64 6
  %14 = bitcast i8* %13 to i16*
  store i16 -1, i16* %14, align 2, !alias.scope !35
  %15 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %16 = bitcast i16* %15 to i32*
  store i32 -1431655766, i32* %16, align 8, !alias.scope !35
  %17 = getelementptr inbounds i8, i8* %7, i64 12
  %18 = bitcast i8* %17 to i32*
  store i32 -1431655766, i32* %18, align 4, !alias.scope !35
  br label %22

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 2
  %21 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %20 to i32*
  store i32 65810, i32* %21, align 8
  br label %22

22:                                               ; preds = %19, %4
  %23 = phi i32 [ 9, %19 ], [ 2, %4 ]
  %24 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 0
  store i32 %23, i32* %24, align 8
  %25 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 3
  store i32 0, i32* %25, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_696number9Precision14minMaxFractionEii(%"class.icu_69::number::FractionPrecision"* noalias nocapture sret, i32, i32) local_unnamed_addr #9 align 2 {
  %4 = icmp slt i32 %1, 0
  %5 = icmp sgt i32 %2, 999
  %6 = or i1 %4, %5
  %7 = icmp sgt i32 %1, %2
  %8 = or i1 %7, %6
  br i1 %8, label %25, label %9

9:                                                ; preds = %3
  %10 = trunc i32 %1 to i16
  %11 = trunc i32 %2 to i16
  %12 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 2
  %13 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %12 to i8*
  %14 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %12 to i16*
  store i16 %10, i16* %14, align 8, !alias.scope !38
  %15 = getelementptr inbounds i8, i8* %13, i64 2
  %16 = bitcast i8* %15 to i16*
  store i16 %11, i16* %16, align 2, !alias.scope !38
  %17 = getelementptr inbounds i8, i8* %13, i64 4
  %18 = bitcast i8* %17 to i16*
  store i16 -1, i16* %18, align 4, !alias.scope !38
  %19 = getelementptr inbounds i8, i8* %13, i64 6
  %20 = bitcast i8* %19 to i16*
  store i16 -1, i16* %20, align 2, !alias.scope !38
  %21 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %22 = bitcast i16* %21 to i32*
  store i32 -1431655766, i32* %22, align 8, !alias.scope !38
  %23 = getelementptr inbounds i8, i8* %13, i64 12
  %24 = bitcast i8* %23 to i32*
  store i32 -1431655766, i32* %24, align 4, !alias.scope !38
  br label %28

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 2
  %27 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %26 to i32*
  store i32 65810, i32* %27, align 8
  br label %28

28:                                               ; preds = %25, %9
  %29 = phi i32 [ 9, %25 ], [ 2, %9 ]
  %30 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 0
  store i32 %29, i32* %30, align 8
  %31 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %0, i64 0, i32 0, i32 3
  store i32 0, i32* %31, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_696number9Precision22fixedSignificantDigitsEi(%"class.icu_69::number::Precision"* noalias nocapture sret, i32) local_unnamed_addr #9 align 2 {
  %3 = add i32 %1, -1
  %4 = icmp ult i32 %3, 999
  br i1 %4, label %5, label %20

5:                                                ; preds = %2
  %6 = trunc i32 %1 to i16
  %7 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2
  %8 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %7 to i8*
  %9 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %7 to i16*
  store i16 -1, i16* %9, align 8, !alias.scope !41
  %10 = getelementptr inbounds i8, i8* %8, i64 2
  %11 = bitcast i8* %10 to i16*
  store i16 -1, i16* %11, align 2, !alias.scope !41
  %12 = getelementptr inbounds i8, i8* %8, i64 4
  %13 = bitcast i8* %12 to i16*
  store i16 %6, i16* %13, align 4, !alias.scope !41
  %14 = getelementptr inbounds i8, i8* %8, i64 6
  %15 = bitcast i8* %14 to i16*
  store i16 %6, i16* %15, align 2, !alias.scope !41
  %16 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2, i32 0, i32 1
  %17 = bitcast i16* %16 to i32*
  store i32 -1431655766, i32* %17, align 8, !alias.scope !41
  %18 = getelementptr inbounds i8, i8* %8, i64 12
  %19 = bitcast i8* %18 to i32*
  store i32 -1431655766, i32* %19, align 4, !alias.scope !41
  br label %23

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2
  %22 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %21 to i32*
  store i32 65810, i32* %22, align 8
  br label %23

23:                                               ; preds = %20, %5
  %24 = phi i32 [ 9, %20 ], [ 3, %5 ]
  %25 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 0
  store i32 %24, i32* %25, align 8
  %26 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 3
  store i32 0, i32* %26, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number9Precision20constructSignificantEii(%"class.icu_69::number::Precision"* noalias nocapture sret, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = trunc i32 %1 to i16
  %5 = trunc i32 %2 to i16
  %6 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 0
  store i32 3, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2
  %8 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %7 to i8*
  %9 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %7 to i16*
  store i16 -1, i16* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 2
  %11 = bitcast i8* %10 to i16*
  store i16 -1, i16* %11, align 2
  %12 = getelementptr inbounds i8, i8* %8, i64 4
  %13 = bitcast i8* %12 to i16*
  store i16 %4, i16* %13, align 4
  %14 = getelementptr inbounds i8, i8* %8, i64 6
  %15 = bitcast i8* %14 to i16*
  store i16 %5, i16* %15, align 2
  %16 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2, i32 0, i32 1
  %17 = bitcast i16* %16 to i32*
  store i32 -1431655766, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %8, i64 12
  %19 = bitcast i8* %18 to i32*
  store i32 -1431655766, i32* %19, align 4
  %20 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 3
  store i32 0, i32* %20, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_696number9Precision20minSignificantDigitsEi(%"class.icu_69::number::Precision"* noalias nocapture sret, i32) local_unnamed_addr #9 align 2 {
  %3 = add i32 %1, -1
  %4 = icmp ult i32 %3, 999
  br i1 %4, label %5, label %20

5:                                                ; preds = %2
  %6 = trunc i32 %1 to i16
  %7 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2
  %8 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %7 to i8*
  %9 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %7 to i16*
  store i16 -1, i16* %9, align 8, !alias.scope !44
  %10 = getelementptr inbounds i8, i8* %8, i64 2
  %11 = bitcast i8* %10 to i16*
  store i16 -1, i16* %11, align 2, !alias.scope !44
  %12 = getelementptr inbounds i8, i8* %8, i64 4
  %13 = bitcast i8* %12 to i16*
  store i16 %6, i16* %13, align 4, !alias.scope !44
  %14 = getelementptr inbounds i8, i8* %8, i64 6
  %15 = bitcast i8* %14 to i16*
  store i16 -1, i16* %15, align 2, !alias.scope !44
  %16 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2, i32 0, i32 1
  %17 = bitcast i16* %16 to i32*
  store i32 -1431655766, i32* %17, align 8, !alias.scope !44
  %18 = getelementptr inbounds i8, i8* %8, i64 12
  %19 = bitcast i8* %18 to i32*
  store i32 -1431655766, i32* %19, align 4, !alias.scope !44
  br label %23

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2
  %22 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %21 to i32*
  store i32 65810, i32* %22, align 8
  br label %23

23:                                               ; preds = %20, %5
  %24 = phi i32 [ 9, %20 ], [ 3, %5 ]
  %25 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 0
  store i32 %24, i32* %25, align 8
  %26 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 3
  store i32 0, i32* %26, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_696number9Precision20maxSignificantDigitsEi(%"class.icu_69::number::Precision"* noalias nocapture sret, i32) local_unnamed_addr #9 align 2 {
  %3 = add i32 %1, -1
  %4 = icmp ult i32 %3, 999
  br i1 %4, label %5, label %20

5:                                                ; preds = %2
  %6 = trunc i32 %1 to i16
  %7 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2
  %8 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %7 to i8*
  %9 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %7 to i16*
  store i16 -1, i16* %9, align 8, !alias.scope !47
  %10 = getelementptr inbounds i8, i8* %8, i64 2
  %11 = bitcast i8* %10 to i16*
  store i16 -1, i16* %11, align 2, !alias.scope !47
  %12 = getelementptr inbounds i8, i8* %8, i64 4
  %13 = bitcast i8* %12 to i16*
  store i16 1, i16* %13, align 4, !alias.scope !47
  %14 = getelementptr inbounds i8, i8* %8, i64 6
  %15 = bitcast i8* %14 to i16*
  store i16 %6, i16* %15, align 2, !alias.scope !47
  %16 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2, i32 0, i32 1
  %17 = bitcast i16* %16 to i32*
  store i32 -1431655766, i32* %17, align 8, !alias.scope !47
  %18 = getelementptr inbounds i8, i8* %8, i64 12
  %19 = bitcast i8* %18 to i32*
  store i32 -1431655766, i32* %19, align 4, !alias.scope !47
  br label %23

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2
  %22 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %21 to i32*
  store i32 65810, i32* %22, align 8
  br label %23

23:                                               ; preds = %20, %5
  %24 = phi i32 [ 9, %20 ], [ 3, %5 ]
  %25 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 0
  store i32 %24, i32* %25, align 8
  %26 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 3
  store i32 0, i32* %26, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_696number9Precision23minMaxSignificantDigitsEii(%"class.icu_69::number::Precision"* noalias nocapture sret, i32, i32) local_unnamed_addr #9 align 2 {
  %4 = icmp slt i32 %1, 1
  %5 = icmp sgt i32 %2, 999
  %6 = or i1 %4, %5
  %7 = icmp sgt i32 %1, %2
  %8 = or i1 %7, %6
  br i1 %8, label %25, label %9

9:                                                ; preds = %3
  %10 = trunc i32 %1 to i16
  %11 = trunc i32 %2 to i16
  %12 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2
  %13 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %12 to i8*
  %14 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %12 to i16*
  store i16 -1, i16* %14, align 8, !alias.scope !50
  %15 = getelementptr inbounds i8, i8* %13, i64 2
  %16 = bitcast i8* %15 to i16*
  store i16 -1, i16* %16, align 2, !alias.scope !50
  %17 = getelementptr inbounds i8, i8* %13, i64 4
  %18 = bitcast i8* %17 to i16*
  store i16 %10, i16* %18, align 4, !alias.scope !50
  %19 = getelementptr inbounds i8, i8* %13, i64 6
  %20 = bitcast i8* %19 to i16*
  store i16 %11, i16* %20, align 2, !alias.scope !50
  %21 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2, i32 0, i32 1
  %22 = bitcast i16* %21 to i32*
  store i32 -1431655766, i32* %22, align 8, !alias.scope !50
  %23 = getelementptr inbounds i8, i8* %13, i64 12
  %24 = bitcast i8* %23 to i32*
  store i32 -1431655766, i32* %24, align 4, !alias.scope !50
  br label %28

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2
  %27 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %26 to i32*
  store i32 65810, i32* %27, align 8
  br label %28

28:                                               ; preds = %25, %9
  %29 = phi i32 [ 9, %25 ], [ 3, %9 ]
  %30 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 0
  store i32 %29, i32* %30, align 8
  %31 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 3
  store i32 0, i32* %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_696number9Precision19trailingZeroDisplayE26UNumberTrailingZeroDisplay(%"class.icu_69::number::Precision"* noalias nocapture sret, %"class.icu_69::number::Precision"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.icu_69::number::Precision"* %0 to i8*
  %5 = bitcast %"class.icu_69::number::Precision"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 32, i1 false)
  %6 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 3
  store i32 %2, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number9Precision18constructIncrementEdi(%"class.icu_69::number::IncrementPrecision"* noalias nocapture sret, double, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca [18 x i8], align 16
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = trunc i32 %2 to i16
  %9 = getelementptr inbounds [18 x i8], [18 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 18, i8* nonnull %9) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 18, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #13
  store i8 -86, i8* %5, align 1
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #13
  store i32 -1431655766, i32* %6, align 4
  %11 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #13
  store i32 -1431655766, i32* %7, align 4
  call void @_ZN6icu_6917double_conversion23DoubleToStringConverter13DoubleToAsciiEdNS1_8DtoaModeEiPciPbPiS5_(double %1, i32 0, i32 0, i8* nonnull %9, i32 18, i8* nonnull %5, i32* nonnull %6, i32* nonnull %7) #13
  %12 = load i32, i32* %6, align 4
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %18, label %14

14:                                               ; preds = %3
  %15 = load i32, i32* %7, align 4
  %16 = sub nsw i32 %12, %15
  %17 = trunc i32 %16 to i16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %9) #13
  br label %24

18:                                               ; preds = %3
  %19 = load i8, i8* %9, align 16
  %20 = load i32, i32* %7, align 4
  %21 = trunc i32 %20 to i16
  %22 = sub i16 1, %21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %9) #13
  switch i8 %19, label %24 [
    i8 49, label %26
    i8 53, label %23
  ]

23:                                               ; preds = %18
  br label %26

24:                                               ; preds = %14, %18
  %25 = phi i16 [ %17, %14 ], [ %22, %18 ]
  br label %26

26:                                               ; preds = %18, %24, %23
  %27 = phi i32 [ 5, %24 ], [ 7, %23 ], [ 6, %18 ]
  %28 = phi i16 [ %25, %24 ], [ %22, %23 ], [ %22, %18 ]
  %29 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 0
  store i32 %27, i32* %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 2
  %31 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %30 to i8*
  %32 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store double %1, double* %32, align 8
  %33 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  store i16 %8, i16* %33, align 8
  %34 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 2, i32 0, i32 2
  store i16 %28, i16* %34, align 2
  %35 = getelementptr inbounds i8, i8* %31, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 -1431655766, i32* %36, align 4
  %37 = getelementptr inbounds %"class.icu_69::number::IncrementPrecision", %"class.icu_69::number::IncrementPrecision"* %0, i64 0, i32 0, i32 3
  store i32 0, i32* %37, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number9Precision8currencyE14UCurrencyUsage(%"class.icu_69::number::CurrencyPrecision"* noalias nocapture sret, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::CurrencyPrecision", %"class.icu_69::number::CurrencyPrecision"* %0, i64 0, i32 0, i32 0
  store i32 8, i32* %3, align 8, !alias.scope !53
  %4 = getelementptr inbounds %"class.icu_69::number::CurrencyPrecision", %"class.icu_69::number::CurrencyPrecision"* %0, i64 0, i32 0, i32 2
  %5 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %4 to i32*
  store i32 %1, i32* %5, align 8, !alias.scope !53
  %6 = bitcast %"class.icu_69::number::CurrencyPrecision"* %0 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* nonnull align 4 getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (i8* getelementptr inbounds (i8, i8* bitcast ({ { double, i16, i16, [4 x i8] } }* @__const._ZN6icu_696number9Precision17constructCurrencyE14UCurrencyUsage.union_ to i8*), i64 4) to [12 x i8]*), i64 0, i64 0), i64 12, i1 false) #13
  %8 = getelementptr inbounds %"class.icu_69::number::CurrencyPrecision", %"class.icu_69::number::CurrencyPrecision"* %0, i64 0, i32 0, i32 3
  store i32 0, i32* %8, align 8, !alias.scope !53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number9Precision17constructCurrencyE14UCurrencyUsage(%"class.icu_69::number::CurrencyPrecision"* noalias nocapture sret, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::number::CurrencyPrecision", %"class.icu_69::number::CurrencyPrecision"* %0, i64 0, i32 0, i32 0
  store i32 8, i32* %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::number::CurrencyPrecision", %"class.icu_69::number::CurrencyPrecision"* %0, i64 0, i32 0, i32 2
  %5 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %4 to i32*
  store i32 %1, i32* %5, align 8
  %6 = bitcast %"class.icu_69::number::CurrencyPrecision"* %0 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* nonnull align 4 getelementptr inbounds ([12 x i8], [12 x i8]* bitcast (i8* getelementptr inbounds (i8, i8* bitcast ({ { double, i16, i16, [4 x i8] } }* @__const._ZN6icu_696number9Precision17constructCurrencyE14UCurrencyUsage.union_ to i8*), i64 4) to [12 x i8]*), i64 0, i64 0), i64 12, i1 false)
  %8 = getelementptr inbounds %"class.icu_69::number::CurrencyPrecision", %"class.icu_69::number::CurrencyPrecision"* %0, i64 0, i32 0, i32 3
  store i32 0, i32* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_696number17FractionPrecision21withSignificantDigitsEii23UNumberRoundingPriority(%"class.icu_69::number::Precision"* noalias nocapture sret, %"class.icu_69::number::FractionPrecision"* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %1, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 9
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = bitcast %"class.icu_69::number::Precision"* %0 to i8*
  %11 = bitcast %"class.icu_69::number::FractionPrecision"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 32, i1 false)
  br label %47

12:                                               ; preds = %5
  %13 = icmp sgt i32 %2, 0
  br i1 %13, label %14, label %42

14:                                               ; preds = %12
  %15 = icmp sge i32 %3, %2
  %16 = icmp slt i32 %3, 1000
  %17 = and i1 %15, %16
  br i1 %17, label %18, label %42

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %1, i64 0, i32 0, i32 2
  %20 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %19 to %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings"*
  %21 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %19 to i16*
  %22 = load i16, i16* %21, align 8, !noalias !56
  %23 = getelementptr inbounds %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings", %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings"* %20, i64 0, i32 1
  %24 = load i16, i16* %23, align 2, !noalias !56
  %25 = trunc i32 %2 to i16
  %26 = trunc i32 %3 to i16
  %27 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 0
  store i32 4, i32* %27, align 8, !alias.scope !56
  %28 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2
  %29 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %28 to i8*
  %30 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %28 to i16*
  store i16 %22, i16* %30, align 8, !alias.scope !56
  %31 = getelementptr inbounds i8, i8* %29, i64 2
  %32 = bitcast i8* %31 to i16*
  store i16 %24, i16* %32, align 2, !alias.scope !56
  %33 = getelementptr inbounds i8, i8* %29, i64 4
  %34 = bitcast i8* %33 to i16*
  store i16 %25, i16* %34, align 4, !alias.scope !56
  %35 = getelementptr inbounds i8, i8* %29, i64 6
  %36 = bitcast i8* %35 to i16*
  store i16 %26, i16* %36, align 2, !alias.scope !56
  %37 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2, i32 0, i32 1
  %38 = bitcast i16* %37 to i32*
  store i32 %4, i32* %38, align 8, !alias.scope !56
  %39 = getelementptr inbounds i8, i8* %29, i64 12
  %40 = bitcast i8* %39 to i32*
  store i32 -1431655766, i32* %40, align 4, !alias.scope !56
  %41 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 3
  store i32 0, i32* %41, align 8, !alias.scope !56
  br label %47

42:                                               ; preds = %14, %12
  %43 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 0
  store i32 9, i32* %43, align 8
  %44 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 3
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2
  %46 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %45 to i32*
  store i32 65810, i32* %46, align 8
  br label %47

47:                                               ; preds = %42, %18, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number9Precision28constructFractionSignificantERKNS0_17FractionPrecisionEii23UNumberRoundingPriority(%"class.icu_69::number::Precision"* noalias nocapture sret, %"class.icu_69::number::FractionPrecision"* nocapture readonly dereferenceable(32), i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %1, i64 0, i32 0, i32 2
  %7 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %6 to %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings"*
  %8 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %6 to i16*
  %9 = load i16, i16* %8, align 8
  %10 = getelementptr inbounds %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings", %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings"* %7, i64 0, i32 1
  %11 = load i16, i16* %10, align 2
  %12 = trunc i32 %2 to i16
  %13 = trunc i32 %3 to i16
  %14 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 0
  store i32 4, i32* %14, align 8
  %15 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2
  %16 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %15 to i8*
  %17 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %15 to i16*
  store i16 %9, i16* %17, align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 2
  %19 = bitcast i8* %18 to i16*
  store i16 %11, i16* %19, align 2
  %20 = getelementptr inbounds i8, i8* %16, i64 4
  %21 = bitcast i8* %20 to i16*
  store i16 %12, i16* %21, align 4
  %22 = getelementptr inbounds i8, i8* %16, i64 6
  %23 = bitcast i8* %22 to i16*
  store i16 %13, i16* %23, align 2
  %24 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2, i32 0, i32 1
  %25 = bitcast i16* %24 to i32*
  store i32 %4, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %16, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 -1431655766, i32* %27, align 4
  %28 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 3
  store i32 0, i32* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_696number17FractionPrecision13withMinDigitsEi(%"class.icu_69::number::Precision"* noalias nocapture sret, %"class.icu_69::number::FractionPrecision"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %1, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 9
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = bitcast %"class.icu_69::number::Precision"* %0 to i8*
  %9 = bitcast %"class.icu_69::number::FractionPrecision"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false)
  br label %41

10:                                               ; preds = %3
  %11 = add i32 %2, -1
  %12 = icmp ult i32 %11, 999
  br i1 %12, label %13, label %36

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %1, i64 0, i32 0, i32 2
  %15 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %14 to %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings"*
  %16 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %14 to i16*
  %17 = load i16, i16* %16, align 8, !noalias !59
  %18 = getelementptr inbounds %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings", %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings"* %15, i64 0, i32 1
  %19 = load i16, i16* %18, align 2, !noalias !59
  %20 = trunc i32 %2 to i16
  %21 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 0
  store i32 4, i32* %21, align 8, !alias.scope !59
  %22 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2
  %23 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %22 to i8*
  %24 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %22 to i16*
  store i16 %17, i16* %24, align 8, !alias.scope !59
  %25 = getelementptr inbounds i8, i8* %23, i64 2
  %26 = bitcast i8* %25 to i16*
  store i16 %19, i16* %26, align 2, !alias.scope !59
  %27 = getelementptr inbounds i8, i8* %23, i64 4
  %28 = bitcast i8* %27 to i16*
  store i16 1, i16* %28, align 4, !alias.scope !59
  %29 = getelementptr inbounds i8, i8* %23, i64 6
  %30 = bitcast i8* %29 to i16*
  store i16 %20, i16* %30, align 2, !alias.scope !59
  %31 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2, i32 0, i32 1
  %32 = bitcast i16* %31 to i32*
  store i32 0, i32* %32, align 8, !alias.scope !59
  %33 = getelementptr inbounds i8, i8* %23, i64 12
  %34 = bitcast i8* %33 to i32*
  store i32 -1431655766, i32* %34, align 4, !alias.scope !59
  %35 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 3
  store i32 0, i32* %35, align 8, !alias.scope !59
  br label %41

36:                                               ; preds = %10
  %37 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 0
  store i32 9, i32* %37, align 8
  %38 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 3
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2
  %40 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %39 to i32*
  store i32 65810, i32* %40, align 8
  br label %41

41:                                               ; preds = %36, %13, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_696number17FractionPrecision13withMaxDigitsEi(%"class.icu_69::number::Precision"* noalias nocapture sret, %"class.icu_69::number::FractionPrecision"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %1, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 9
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = bitcast %"class.icu_69::number::Precision"* %0 to i8*
  %9 = bitcast %"class.icu_69::number::FractionPrecision"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false)
  br label %41

10:                                               ; preds = %3
  %11 = add i32 %2, -1
  %12 = icmp ult i32 %11, 999
  br i1 %12, label %13, label %36

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.icu_69::number::FractionPrecision", %"class.icu_69::number::FractionPrecision"* %1, i64 0, i32 0, i32 2
  %15 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %14 to %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings"*
  %16 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %14 to i16*
  %17 = load i16, i16* %16, align 8, !noalias !62
  %18 = getelementptr inbounds %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings", %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings"* %15, i64 0, i32 1
  %19 = load i16, i16* %18, align 2, !noalias !62
  %20 = trunc i32 %2 to i16
  %21 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 0
  store i32 4, i32* %21, align 8, !alias.scope !62
  %22 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2
  %23 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %22 to i8*
  %24 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %22 to i16*
  store i16 %17, i16* %24, align 8, !alias.scope !62
  %25 = getelementptr inbounds i8, i8* %23, i64 2
  %26 = bitcast i8* %25 to i16*
  store i16 %19, i16* %26, align 2, !alias.scope !62
  %27 = getelementptr inbounds i8, i8* %23, i64 4
  %28 = bitcast i8* %27 to i16*
  store i16 1, i16* %28, align 4, !alias.scope !62
  %29 = getelementptr inbounds i8, i8* %23, i64 6
  %30 = bitcast i8* %29 to i16*
  store i16 %20, i16* %30, align 2, !alias.scope !62
  %31 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2, i32 0, i32 1
  %32 = bitcast i16* %31 to i32*
  store i32 1, i32* %32, align 8, !alias.scope !62
  %33 = getelementptr inbounds i8, i8* %23, i64 12
  %34 = bitcast i8* %33 to i32*
  store i32 -1431655766, i32* %34, align 4, !alias.scope !62
  %35 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 3
  store i32 0, i32* %35, align 8, !alias.scope !62
  br label %41

36:                                               ; preds = %10
  %37 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 0
  store i32 9, i32* %37, align 8
  %38 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 3
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2
  %40 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %39 to i32*
  store i32 65810, i32* %40, align 8
  br label %41

41:                                               ; preds = %36, %13, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_696number9Precision12withCurrencyERKNS_12CurrencyUnitER10UErrorCode(%"class.icu_69::number::Precision"* noalias nocapture sret, %"class.icu_69::number::Precision"* nocapture readonly, %"class.icu_69::CurrencyUnit"* dereferenceable(32), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca [18 x i8], align 16
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 9
  br i1 %11, label %12, label %15

12:                                               ; preds = %4
  %13 = bitcast %"class.icu_69::number::Precision"* %0 to i8*
  %14 = bitcast %"class.icu_69::number::Precision"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 32, i1 false)
  br label %71

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.icu_69::CurrencyUnit", %"class.icu_69::CurrencyUnit"* %2, i64 0, i32 1, i64 0
  %17 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %1, i64 0, i32 2
  %18 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = tail call double @ucurr_getRoundingIncrementForUsage_69(i16* %16, i32 %19, i32* %3) #13
  %21 = load i32, i32* %18, align 8
  %22 = tail call i32 @ucurr_getDefaultFractionDigitsForUsage_69(i16* %16, i32 %21, i32* %3) #13
  %23 = fcmp une double %20, 0.000000e+00
  br i1 %23, label %24, label %46

24:                                               ; preds = %15
  %25 = getelementptr inbounds [18 x i8], [18 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 18, i8* nonnull %25) #13, !noalias !65
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %25, i8 -86, i64 18, i1 false) #13, !noalias !65
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #13, !noalias !65
  store i8 -86, i8* %6, align 1, !noalias !65
  %26 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #13, !noalias !65
  store i32 -1431655766, i32* %7, align 4, !noalias !65
  %27 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #13, !noalias !65
  store i32 -1431655766, i32* %8, align 4, !noalias !65
  call void @_ZN6icu_6917double_conversion23DoubleToStringConverter13DoubleToAsciiEdNS1_8DtoaModeEiPciPbPiS5_(double %20, i32 0, i32 0, i8* nonnull %25, i32 18, i8* nonnull %6, i32* nonnull %7, i32* nonnull %8) #13, !noalias !65
  %28 = load i32, i32* %7, align 4, !noalias !65
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %34, label %30

30:                                               ; preds = %24
  %31 = load i32, i32* %8, align 4, !noalias !65
  %32 = sub nsw i32 %28, %31
  %33 = trunc i32 %32 to i16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #13, !noalias !65
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #13, !noalias !65
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #13, !noalias !65
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %25) #13, !noalias !65
  br label %40

34:                                               ; preds = %24
  %35 = load i8, i8* %25, align 16, !noalias !65
  %36 = load i32, i32* %8, align 4, !noalias !65
  %37 = trunc i32 %36 to i16
  %38 = sub i16 1, %37
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #13, !noalias !65
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #13, !noalias !65
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #13, !noalias !65
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %25) #13, !noalias !65
  switch i8 %35, label %40 [
    i8 49, label %42
    i8 53, label %39
  ]

39:                                               ; preds = %34
  br label %42

40:                                               ; preds = %34, %30
  %41 = phi i16 [ %33, %30 ], [ %38, %34 ]
  br label %42

42:                                               ; preds = %34, %39, %40
  %43 = phi i32 [ 5, %40 ], [ 7, %39 ], [ 6, %34 ]
  %44 = phi i16 [ %41, %40 ], [ %38, %39 ], [ %38, %34 ]
  %45 = and i32 %22, 65535
  br label %53

46:                                               ; preds = %15
  %47 = shl i32 %22, 16
  %48 = and i32 %22, 65535
  %49 = or i32 %48, %47
  %50 = zext i32 %49 to i64
  %51 = or i64 %50, -4294967296
  %52 = bitcast i64 %51 to double
  br label %53

53:                                               ; preds = %46, %42
  %54 = phi i32 [ %43, %42 ], [ 2, %46 ]
  %55 = phi i32 [ %45, %42 ], [ 43690, %46 ]
  %56 = phi i16 [ %44, %42 ], [ -21846, %46 ]
  %57 = phi double [ %20, %42 ], [ %52, %46 ]
  %58 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %1, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = bitcast %"class.icu_69::number::Precision"* %0 to i8*
  %61 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 0
  store i32 %54, i32* %61, align 8
  %62 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2, i32 0, i32 0
  store double %57, double* %62, align 8
  %63 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2, i32 0, i32 1
  %64 = bitcast i16* %63 to i32*
  %65 = zext i16 %56 to i32
  %66 = shl nuw i32 %65, 16
  %67 = or i32 %66, %55
  store i32 %67, i32* %64, align 8
  %68 = getelementptr inbounds i8, i8* %60, i64 20
  %69 = bitcast i8* %68 to i32*
  store i32 -1431655766, i32* %69, align 4
  %70 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 3
  store i32 %59, i32* %70, align 8
  br label %71

71:                                               ; preds = %53, %12
  ret void
}

declare double @ucurr_getRoundingIncrementForUsage_69(i16*, i32, i32*) local_unnamed_addr #4

declare i32 @ucurr_getDefaultFractionDigitsForUsage_69(i16*, i32, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_696number17CurrencyPrecision12withCurrencyERKNS_12CurrencyUnitE(%"class.icu_69::number::Precision"* noalias nocapture sret, %"class.icu_69::number::CurrencyPrecision"* nocapture readonly, %"class.icu_69::CurrencyUnit"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.icu_69::number::Precision", align 8
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #13
  store i32 0, i32* %4, align 4
  %7 = bitcast %"class.icu_69::number::Precision"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast (<{ i32, [4 x i8], { { double, i16, i16, [4 x i8] } }, i32, [4 x i8] }>* @__const._ZNK6icu_696number17CurrencyPrecision12withCurrencyERKNS_12CurrencyUnitE.result to i8*), i64 32, i1 false)
  %8 = bitcast %"class.icu_69::number::CurrencyPrecision"* %1 to %"class.icu_69::number::Precision"*
  call void @_ZNK6icu_696number9Precision12withCurrencyERKNS_12CurrencyUnitER10UErrorCode(%"class.icu_69::number::Precision"* nonnull sret %5, %"class.icu_69::number::Precision"* %8, %"class.icu_69::CurrencyUnit"* dereferenceable(32) %2, i32* nonnull dereferenceable(4) %4)
  %9 = load i32, i32* %4, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %16, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 0
  store i32 9, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 3
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %0, i64 0, i32 2
  %15 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %14 to i32*
  store i32 %9, i32* %15, align 8
  br label %18

16:                                               ; preds = %3
  %17 = bitcast %"class.icu_69::number::Precision"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* nonnull align 8 %7, i64 32, i1 false)
  br label %18

18:                                               ; preds = %16, %11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl12RoundingImplC2ERKNS0_9PrecisionE25UNumberFormatRoundingModeRKNS_12CurrencyUnitER10UErrorCode(%"class.icu_69::number::impl::RoundingImpl"* nocapture, %"class.icu_69::number::Precision"* nocapture readonly dereferenceable(32), i32, %"class.icu_69::CurrencyUnit"* dereferenceable(32), i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.icu_69::number::Precision", align 8
  %7 = bitcast %"class.icu_69::number::impl::RoundingImpl"* %0 to i8*
  %8 = bitcast %"class.icu_69::number::Precision"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false)
  %9 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 1
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 2
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"class.icu_69::number::Precision", %"class.icu_69::number::Precision"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 8
  br i1 %13, label %14, label %16

14:                                               ; preds = %5
  %15 = bitcast %"class.icu_69::number::Precision"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #13
  call void @_ZNK6icu_696number9Precision12withCurrencyERKNS_12CurrencyUnitER10UErrorCode(%"class.icu_69::number::Precision"* nonnull sret %6, %"class.icu_69::number::Precision"* %1, %"class.icu_69::CurrencyUnit"* dereferenceable(32) %3, i32* dereferenceable(4) %4)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* nonnull align 8 %15, i64 28, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #13
  br label %16

16:                                               ; preds = %14, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl12RoundingImpl11passThroughEv(%"class.icu_69::number::impl::RoundingImpl"* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 2
  %3 = bitcast %"class.icu_69::number::impl::RoundingImpl"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 40, i1 false)
  store i8 1, i8* %2, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6icu_696number4impl12RoundingImpl19isSignificantDigitsEv(%"class.icu_69::number::impl::RoundingImpl"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 3
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_696number4impl12RoundingImpl24chooseMultiplierAndApplyERNS1_15DecimalQuantityERKNS1_18MultiplierProducerER10UErrorCode(%"class.icu_69::number::impl::RoundingImpl"* nocapture readonly, %"class.icu_69::number::impl::DecimalQuantity"* dereferenceable(72), %"class.icu_69::number::impl::MultiplierProducer"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = tail call i32 @_ZNK6icu_696number4impl15DecimalQuantity12getMagnitudeEv(%"class.icu_69::number::impl::DecimalQuantity"* %1) #13
  %6 = bitcast %"class.icu_69::number::impl::MultiplierProducer"* %2 to i32 (%"class.icu_69::number::impl::MultiplierProducer"*, i32)***
  %7 = load i32 (%"class.icu_69::number::impl::MultiplierProducer"*, i32)**, i32 (%"class.icu_69::number::impl::MultiplierProducer"*, i32)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.icu_69::number::impl::MultiplierProducer"*, i32)*, i32 (%"class.icu_69::number::impl::MultiplierProducer"*, i32)** %7, i64 2
  %9 = load i32 (%"class.icu_69::number::impl::MultiplierProducer"*, i32)*, i32 (%"class.icu_69::number::impl::MultiplierProducer"*, i32)** %8, align 8
  %10 = tail call i32 %9(%"class.icu_69::number::impl::MultiplierProducer"* %2, i32 %5) #13
  %11 = tail call zeroext i1 @_ZN6icu_696number4impl15DecimalQuantity15adjustMagnitudeEi(%"class.icu_69::number::impl::DecimalQuantity"* %1, i32 %10) #13
  tail call void @_ZNK6icu_696number4impl12RoundingImpl5applyERNS1_15DecimalQuantityER10UErrorCode(%"class.icu_69::number::impl::RoundingImpl"* %0, %"class.icu_69::number::impl::DecimalQuantity"* dereferenceable(72) %1, i32* dereferenceable(4) %3)
  %12 = tail call zeroext i1 @_ZNK6icu_696number4impl15DecimalQuantity9isZeroishEv(%"class.icu_69::number::impl::DecimalQuantity"* %1) #13
  %13 = xor i1 %12, true
  %14 = load i32, i32* %3, align 4
  %15 = icmp slt i32 %14, 1
  %16 = and i1 %15, %13
  br i1 %16, label %17, label %31

17:                                               ; preds = %4
  %18 = tail call i32 @_ZNK6icu_696number4impl15DecimalQuantity12getMagnitudeEv(%"class.icu_69::number::impl::DecimalQuantity"* %1) #13
  %19 = add nsw i32 %10, %5
  %20 = icmp eq i32 %18, %19
  br i1 %20, label %31, label %21

21:                                               ; preds = %17
  %22 = add nsw i32 %5, 1
  %23 = load i32 (%"class.icu_69::number::impl::MultiplierProducer"*, i32)**, i32 (%"class.icu_69::number::impl::MultiplierProducer"*, i32)*** %6, align 8
  %24 = getelementptr inbounds i32 (%"class.icu_69::number::impl::MultiplierProducer"*, i32)*, i32 (%"class.icu_69::number::impl::MultiplierProducer"*, i32)** %23, i64 2
  %25 = load i32 (%"class.icu_69::number::impl::MultiplierProducer"*, i32)*, i32 (%"class.icu_69::number::impl::MultiplierProducer"*, i32)** %24, align 8
  %26 = tail call i32 %25(%"class.icu_69::number::impl::MultiplierProducer"* %2, i32 %22) #13
  %27 = icmp eq i32 %26, %10
  br i1 %27, label %31, label %28

28:                                               ; preds = %21
  %29 = sub nsw i32 %26, %10
  %30 = tail call zeroext i1 @_ZN6icu_696number4impl15DecimalQuantity15adjustMagnitudeEi(%"class.icu_69::number::impl::DecimalQuantity"* %1, i32 %29) #13
  tail call void @_ZNK6icu_696number4impl12RoundingImpl5applyERNS1_15DecimalQuantityER10UErrorCode(%"class.icu_69::number::impl::RoundingImpl"* %0, %"class.icu_69::number::impl::DecimalQuantity"* dereferenceable(72) %1, i32* dereferenceable(4) %3)
  br label %31

31:                                               ; preds = %4, %28, %21, %17
  %32 = phi i32 [ %10, %4 ], [ %10, %17 ], [ %26, %28 ], [ %10, %21 ]
  ret i32 %32
}

declare i32 @_ZNK6icu_696number4impl15DecimalQuantity12getMagnitudeEv(%"class.icu_69::number::impl::DecimalQuantity"*) local_unnamed_addr #4

declare zeroext i1 @_ZN6icu_696number4impl15DecimalQuantity15adjustMagnitudeEi(%"class.icu_69::number::impl::DecimalQuantity"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_696number4impl12RoundingImpl5applyERNS1_15DecimalQuantityER10UErrorCode(%"class.icu_69::number::impl::RoundingImpl"* nocapture readonly, %"class.icu_69::number::impl::DecimalQuantity"* dereferenceable(72), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %165

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 4, !range !68
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %165

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  switch i32 %12, label %151 [
    i32 0, label %13
    i32 9, label %13
    i32 1, label %14
    i32 2, label %15
    i32 3, label %32
    i32 4, label %68
    i32 5, label %122
    i32 6, label %130
    i32 7, label %140
    i32 8, label %150
  ]

13:                                               ; preds = %10, %10
  store i32 5, i32* %2, align 4
  br label %152

14:                                               ; preds = %10
  tail call void @_ZN6icu_696number4impl15DecimalQuantity15roundToInfinityEv(%"class.icu_69::number::impl::DecimalQuantity"* %1) #13
  br label %152

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 0, i32 2
  %17 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %16 to %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings"*
  %18 = getelementptr inbounds %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings", %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings"* %17, i64 0, i32 1
  %19 = load i16, i16* %18, align 2
  %20 = sext i16 %19 to i32
  %21 = icmp eq i16 %19, -1
  %22 = sub nsw i32 0, %20
  %23 = select i1 %21, i32 -2147483648, i32 %22
  %24 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  tail call void @_ZN6icu_696number4impl15DecimalQuantity16roundToMagnitudeEi25UNumberFormatRoundingModeR10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"* %1, i32 %23, i32 %25, i32* dereferenceable(4) %2) #13
  %26 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %16 to i16*
  %27 = load i16, i16* %26, align 8
  %28 = sext i16 %27 to i32
  %29 = icmp eq i16 %27, 0
  %30 = select i1 %29, i32 -2147483647, i32 %28
  %31 = tail call i32 @uprv_max_69(i32 0, i32 %30) #13
  br label %152

32:                                               ; preds = %10
  %33 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 0, i32 2
  %34 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %33 to %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings"*
  %35 = getelementptr inbounds %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings", %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings"* %34, i64 0, i32 3
  %36 = load i16, i16* %35, align 2
  %37 = sext i16 %36 to i32
  %38 = icmp eq i16 %36, -1
  br i1 %38, label %47, label %39

39:                                               ; preds = %32
  %40 = tail call zeroext i1 @_ZNK6icu_696number4impl15DecimalQuantity9isZeroishEv(%"class.icu_69::number::impl::DecimalQuantity"* %1) #13
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = tail call i32 @_ZNK6icu_696number4impl15DecimalQuantity12getMagnitudeEv(%"class.icu_69::number::impl::DecimalQuantity"* %1) #13
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i32 [ %42, %41 ], [ 0, %39 ]
  %45 = sub nsw i32 1, %37
  %46 = add i32 %45, %44
  br label %47

47:                                               ; preds = %32, %43
  %48 = phi i32 [ %46, %43 ], [ -2147483648, %32 ]
  %49 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 1
  %50 = load i32, i32* %49, align 8
  tail call void @_ZN6icu_696number4impl15DecimalQuantity16roundToMagnitudeEi25UNumberFormatRoundingModeR10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"* %1, i32 %48, i32 %50, i32* dereferenceable(4) %2) #13
  %51 = getelementptr inbounds %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings", %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings"* %34, i64 0, i32 2
  %52 = load i16, i16* %51, align 4
  %53 = sext i16 %52 to i32
  %54 = tail call zeroext i1 @_ZNK6icu_696number4impl15DecimalQuantity9isZeroishEv(%"class.icu_69::number::impl::DecimalQuantity"* %1) #13
  br i1 %54, label %57, label %55

55:                                               ; preds = %47
  %56 = tail call i32 @_ZNK6icu_696number4impl15DecimalQuantity12getMagnitudeEv(%"class.icu_69::number::impl::DecimalQuantity"* %1) #13
  br label %57

57:                                               ; preds = %47, %55
  %58 = phi i32 [ %56, %55 ], [ 0, %47 ]
  %59 = sub nsw i32 1, %53
  %60 = add i32 %59, %58
  %61 = sub nsw i32 0, %60
  %62 = tail call i32 @uprv_max_69(i32 0, i32 %61) #13
  %63 = tail call zeroext i1 @_ZNK6icu_696number4impl15DecimalQuantity9isZeroishEv(%"class.icu_69::number::impl::DecimalQuantity"* %1) #13
  br i1 %63, label %64, label %152

64:                                               ; preds = %57
  %65 = load i16, i16* %51, align 4
  %66 = icmp sgt i16 %65, 0
  br i1 %66, label %67, label %152

67:                                               ; preds = %64
  tail call void @_ZN6icu_696number4impl15DecimalQuantity13setMinIntegerEi(%"class.icu_69::number::impl::DecimalQuantity"* %1, i32 1) #13
  br label %152

68:                                               ; preds = %10
  %69 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 0, i32 2
  %70 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %69 to %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings"*
  %71 = getelementptr inbounds %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings", %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings"* %70, i64 0, i32 1
  %72 = load i16, i16* %71, align 2
  %73 = sext i16 %72 to i32
  %74 = icmp eq i16 %72, -1
  %75 = sub nsw i32 0, %73
  %76 = select i1 %74, i32 -2147483648, i32 %75
  %77 = getelementptr inbounds %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings", %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings"* %70, i64 0, i32 3
  %78 = load i16, i16* %77, align 2
  %79 = sext i16 %78 to i32
  %80 = icmp eq i16 %78, -1
  br i1 %80, label %89, label %81

81:                                               ; preds = %68
  %82 = tail call zeroext i1 @_ZNK6icu_696number4impl15DecimalQuantity9isZeroishEv(%"class.icu_69::number::impl::DecimalQuantity"* %1) #13
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = tail call i32 @_ZNK6icu_696number4impl15DecimalQuantity12getMagnitudeEv(%"class.icu_69::number::impl::DecimalQuantity"* %1) #13
  br label %85

85:                                               ; preds = %83, %81
  %86 = phi i32 [ %84, %83 ], [ 0, %81 ]
  %87 = sub nsw i32 1, %79
  %88 = add i32 %87, %86
  br label %89

89:                                               ; preds = %68, %85
  %90 = phi i32 [ %88, %85 ], [ -2147483648, %68 ]
  %91 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %92 = bitcast i16* %91 to i32*
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %89
  %96 = tail call i32 @uprv_min_69(i32 %76, i32 %90) #13
  br label %99

97:                                               ; preds = %89
  %98 = tail call i32 @uprv_max_69(i32 %76, i32 %90) #13
  br label %99

99:                                               ; preds = %97, %95
  %100 = phi i32 [ %96, %95 ], [ %98, %97 ]
  %101 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 1
  %102 = load i32, i32* %101, align 8
  tail call void @_ZN6icu_696number4impl15DecimalQuantity16roundToMagnitudeEi25UNumberFormatRoundingModeR10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"* %1, i32 %100, i32 %102, i32* dereferenceable(4) %2) #13
  %103 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %69 to i16*
  %104 = load i16, i16* %103, align 8
  %105 = sext i16 %104 to i32
  %106 = icmp eq i16 %104, 0
  %107 = sub nsw i32 0, %105
  %108 = select i1 %106, i32 2147483647, i32 %107
  %109 = getelementptr inbounds %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings", %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings"* %70, i64 0, i32 2
  %110 = load i16, i16* %109, align 4
  %111 = sext i16 %110 to i32
  %112 = tail call zeroext i1 @_ZNK6icu_696number4impl15DecimalQuantity9isZeroishEv(%"class.icu_69::number::impl::DecimalQuantity"* %1) #13
  br i1 %112, label %115, label %113

113:                                              ; preds = %99
  %114 = tail call i32 @_ZNK6icu_696number4impl15DecimalQuantity12getMagnitudeEv(%"class.icu_69::number::impl::DecimalQuantity"* %1) #13
  br label %115

115:                                              ; preds = %99, %113
  %116 = phi i32 [ %114, %113 ], [ 0, %99 ]
  %117 = sub nsw i32 1, %111
  %118 = add i32 %117, %116
  %119 = tail call i32 @uprv_min_69(i32 %108, i32 %118) #13
  %120 = sub nsw i32 0, %119
  %121 = tail call i32 @uprv_max_69(i32 0, i32 %120) #13
  br label %152

122:                                              ; preds = %10
  %123 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %124 = load double, double* %123, align 8
  %125 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 1
  %126 = load i32, i32* %125, align 8
  tail call void @_ZN6icu_696number4impl15DecimalQuantity16roundToIncrementEd25UNumberFormatRoundingModeR10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"* %1, double %124, i32 %126, i32* dereferenceable(4) %2) #13
  %127 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %128 = load i16, i16* %127, align 8
  %129 = sext i16 %128 to i32
  br label %152

130:                                              ; preds = %10
  %131 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 0, i32 2, i32 0, i32 2
  %132 = load i16, i16* %131, align 2
  %133 = sext i16 %132 to i32
  %134 = sub nsw i32 0, %133
  %135 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 1
  %136 = load i32, i32* %135, align 8
  tail call void @_ZN6icu_696number4impl15DecimalQuantity16roundToMagnitudeEi25UNumberFormatRoundingModeR10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"* %1, i32 %134, i32 %136, i32* dereferenceable(4) %2) #13
  %137 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %138 = load i16, i16* %137, align 8
  %139 = sext i16 %138 to i32
  br label %152

140:                                              ; preds = %10
  %141 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 0, i32 2, i32 0, i32 2
  %142 = load i16, i16* %141, align 2
  %143 = sext i16 %142 to i32
  %144 = sub nsw i32 0, %143
  %145 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 1
  %146 = load i32, i32* %145, align 8
  tail call void @_ZN6icu_696number4impl15DecimalQuantity13roundToNickelEi25UNumberFormatRoundingModeR10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"* %1, i32 %144, i32 %146, i32* dereferenceable(4) %2) #13
  %147 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %148 = load i16, i16* %147, align 8
  %149 = sext i16 %148 to i32
  br label %152

150:                                              ; preds = %10
  tail call void @abort() #14
  unreachable

151:                                              ; preds = %10
  tail call void @abort() #14
  unreachable

152:                                              ; preds = %57, %64, %67, %140, %130, %122, %115, %15, %14, %13
  %153 = phi i32 [ %149, %140 ], [ %139, %130 ], [ %129, %122 ], [ %121, %115 ], [ %62, %67 ], [ %62, %64 ], [ %62, %57 ], [ %31, %15 ], [ 0, %14 ], [ 0, %13 ]
  %154 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 0, i32 3
  %155 = load i32, i32* %154, align 8
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %164, label %157

157:                                              ; preds = %152
  %158 = bitcast %"class.icu_69::number::impl::DecimalQuantity"* %1 to double (%"class.icu_69::number::impl::DecimalQuantity"*, i32)***
  %159 = load double (%"class.icu_69::number::impl::DecimalQuantity"*, i32)**, double (%"class.icu_69::number::impl::DecimalQuantity"*, i32)*** %158, align 8
  %160 = getelementptr inbounds double (%"class.icu_69::number::impl::DecimalQuantity"*, i32)*, double (%"class.icu_69::number::impl::DecimalQuantity"*, i32)** %159, i64 2
  %161 = load double (%"class.icu_69::number::impl::DecimalQuantity"*, i32)*, double (%"class.icu_69::number::impl::DecimalQuantity"*, i32)** %160, align 8
  %162 = tail call double %161(%"class.icu_69::number::impl::DecimalQuantity"* %1, i32 3) #13
  %163 = fcmp une double %162, 0.000000e+00
  br i1 %163, label %164, label %165

164:                                              ; preds = %157, %152
  tail call void @_ZN6icu_696number4impl15DecimalQuantity14setMinFractionEi(%"class.icu_69::number::impl::DecimalQuantity"* %1, i32 %153) #13
  br label %165

165:                                              ; preds = %157, %164, %6, %3
  ret void
}

declare zeroext i1 @_ZNK6icu_696number4impl15DecimalQuantity9isZeroishEv(%"class.icu_69::number::impl::DecimalQuantity"*) local_unnamed_addr #4

declare void @_ZN6icu_696number4impl15DecimalQuantity15roundToInfinityEv(%"class.icu_69::number::impl::DecimalQuantity"*) local_unnamed_addr #4

declare void @_ZN6icu_696number4impl15DecimalQuantity16roundToMagnitudeEi25UNumberFormatRoundingModeR10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"*, i32, i32, i32* dereferenceable(4)) local_unnamed_addr #4

declare i32 @uprv_max_69(i32, i32) local_unnamed_addr #4

declare void @_ZN6icu_696number4impl15DecimalQuantity13setMinIntegerEi(%"class.icu_69::number::impl::DecimalQuantity"*, i32) local_unnamed_addr #4

declare i32 @uprv_min_69(i32, i32) local_unnamed_addr #4

declare void @_ZN6icu_696number4impl15DecimalQuantity16roundToIncrementEd25UNumberFormatRoundingModeR10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"*, double, i32, i32* dereferenceable(4)) local_unnamed_addr #4

declare void @_ZN6icu_696number4impl15DecimalQuantity13roundToNickelEi25UNumberFormatRoundingModeR10UErrorCode(%"class.icu_69::number::impl::DecimalQuantity"*, i32, i32, i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

declare void @_ZN6icu_696number4impl15DecimalQuantity14setMinFractionEi(%"class.icu_69::number::impl::DecimalQuantity"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl12RoundingImpl5applyERNS1_15DecimalQuantityEi10UErrorCode(%"class.icu_69::number::impl::RoundingImpl"* nocapture readonly, %"class.icu_69::number::impl::DecimalQuantity"* dereferenceable(72), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.icu_69::number::impl::RoundingImpl", %"class.icu_69::number::impl::RoundingImpl"* %0, i64 0, i32 0, i32 2
  %6 = bitcast %"union.icu_69::number::Precision::PrecisionUnion"* %5 to %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings"*
  %7 = getelementptr inbounds %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings", %"struct.icu_69::number::Precision::PrecisionUnion::FractionSignificantSettings"* %6, i64 0, i32 2
  %8 = load i16, i16* %7, align 4
  %9 = sext i16 %8 to i32
  %10 = sub nsw i32 %9, %2
  tail call void @_ZN6icu_696number4impl15DecimalQuantity14setMinFractionEi(%"class.icu_69::number::impl::DecimalQuantity"* %1, i32 %10) #13
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind allocsize(0) }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 -2146814232}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN6icu_696number9Precision18constructIncrementEdi: argument 0"}
!5 = distinct !{!5, !"_ZN6icu_696number9Precision18constructIncrementEdi"}
!6 = distinct !{!6, !7, !"_ZN6icu_696number9Precision9incrementEd: argument 0"}
!7 = distinct !{!7, !"_ZN6icu_696number9Precision9incrementEd"}
!8 = !{!4}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN6icu_696number9Precision18constructIncrementEdi: argument 0"}
!11 = distinct !{!11, !"_ZN6icu_696number9Precision18constructIncrementEdi"}
!12 = distinct !{!12, !13, !"_ZN6icu_696number9Precision9incrementEd: argument 0"}
!13 = distinct !{!13, !"_ZN6icu_696number9Precision9incrementEd"}
!14 = !{!10}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZN6icu_696number9Precision18constructIncrementEdi: argument 0"}
!17 = distinct !{!17, !"_ZN6icu_696number9Precision18constructIncrementEdi"}
!18 = distinct !{!18, !19, !"_ZNK6icu_696number18IncrementPrecision15withMinFractionEi: argument 0"}
!19 = distinct !{!19, !"_ZNK6icu_696number18IncrementPrecision15withMinFractionEi"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN6icu_696number9Precision18constructIncrementEdi: argument 0"}
!22 = distinct !{!22, !"_ZN6icu_696number9Precision18constructIncrementEdi"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN6icu_696number9Precision18constructIncrementEdi: argument 0"}
!25 = distinct !{!25, !"_ZN6icu_696number9Precision18constructIncrementEdi"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN6icu_696number9Precision17constructFractionEii: argument 0"}
!28 = distinct !{!28, !"_ZN6icu_696number9Precision17constructFractionEii"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN6icu_696number9Precision17constructFractionEii: argument 0"}
!31 = distinct !{!31, !"_ZN6icu_696number9Precision17constructFractionEii"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN6icu_696number9Precision17constructFractionEii: argument 0"}
!34 = distinct !{!34, !"_ZN6icu_696number9Precision17constructFractionEii"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN6icu_696number9Precision17constructFractionEii: argument 0"}
!37 = distinct !{!37, !"_ZN6icu_696number9Precision17constructFractionEii"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN6icu_696number9Precision17constructFractionEii: argument 0"}
!40 = distinct !{!40, !"_ZN6icu_696number9Precision17constructFractionEii"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN6icu_696number9Precision20constructSignificantEii: argument 0"}
!43 = distinct !{!43, !"_ZN6icu_696number9Precision20constructSignificantEii"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN6icu_696number9Precision20constructSignificantEii: argument 0"}
!46 = distinct !{!46, !"_ZN6icu_696number9Precision20constructSignificantEii"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN6icu_696number9Precision20constructSignificantEii: argument 0"}
!49 = distinct !{!49, !"_ZN6icu_696number9Precision20constructSignificantEii"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN6icu_696number9Precision20constructSignificantEii: argument 0"}
!52 = distinct !{!52, !"_ZN6icu_696number9Precision20constructSignificantEii"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN6icu_696number9Precision17constructCurrencyE14UCurrencyUsage: argument 0"}
!55 = distinct !{!55, !"_ZN6icu_696number9Precision17constructCurrencyE14UCurrencyUsage"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN6icu_696number9Precision28constructFractionSignificantERKNS0_17FractionPrecisionEii23UNumberRoundingPriority: argument 0"}
!58 = distinct !{!58, !"_ZN6icu_696number9Precision28constructFractionSignificantERKNS0_17FractionPrecisionEii23UNumberRoundingPriority"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN6icu_696number9Precision28constructFractionSignificantERKNS0_17FractionPrecisionEii23UNumberRoundingPriority: argument 0"}
!61 = distinct !{!61, !"_ZN6icu_696number9Precision28constructFractionSignificantERKNS0_17FractionPrecisionEii23UNumberRoundingPriority"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZN6icu_696number9Precision28constructFractionSignificantERKNS0_17FractionPrecisionEii23UNumberRoundingPriority: argument 0"}
!64 = distinct !{!64, !"_ZN6icu_696number9Precision28constructFractionSignificantERKNS0_17FractionPrecisionEii23UNumberRoundingPriority"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZN6icu_696number9Precision18constructIncrementEdi: argument 0"}
!67 = distinct !{!67, !"_ZN6icu_696number9Precision18constructIncrementEdi"}
!68 = !{i8 0, i8 2}
