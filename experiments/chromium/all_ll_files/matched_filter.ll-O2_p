; ModuleID = '../../third_party/webrtc/modules/audio_processing/aec3/matched_filter.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aec3/matched_filter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.webrtc::MatchedFilter" = type { %"class.webrtc::ApmDataDumper"*, i32, i64, i64, %"class.std::__1::vector", %"class.std::__1::vector.10", %"class.std::__1::vector.17", float, float, float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { float*, float*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::vector.2"* }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"struct.webrtc::MatchedFilter::LagEstimate"*, %"struct.webrtc::MatchedFilter::LagEstimate"*, %"class.std::__1::__compressed_pair.12" }
%"struct.webrtc::MatchedFilter::LagEstimate" = type <{ float, i8, [3 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.webrtc::MatchedFilter::LagEstimate"* }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { i64*, i64*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i64* }
%"class.webrtc::ApmDataDumper" = type { i8 }
%"class.rtc::ArrayView.0" = type { %"class.rtc::impl::ArrayViewBase.1" }
%"class.rtc::impl::ArrayViewBase.1" = type { float*, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.webrtc::DownsampledRenderBuffer" = type { i32, %"class.std::__1::vector.2", i32, i32 }
%"class.rtc::DiagnosticLogMessage" = type { i8*, i32, i32, i32, i32, i8*, i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__16vectorINS0_IfNS_9allocatorIfEEEENS1_IS3_EEEC2EmRKS3_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str.10 = private unnamed_addr constant [73 x i8] c"../../third_party/webrtc/modules/audio_processing/aec3/matched_filter.cc\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"Filter \00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c": start: \00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c" ms, end: \00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c" ms.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN6webrtc13MatchedFilterC1EPNS_13ApmDataDumperENS_16Aec3OptimizationEmmimffff = hidden unnamed_addr alias void (%"class.webrtc::MatchedFilter"*, %"class.webrtc::ApmDataDumper"*, i32, i64, i64, i32, i64, float, float, float, float), void (%"class.webrtc::MatchedFilter"*, %"class.webrtc::ApmDataDumper"*, i32, i64, i64, i32, i64, float, float, float, float)* @_ZN6webrtc13MatchedFilterC2EPNS_13ApmDataDumperENS_16Aec3OptimizationEmmimffff
@_ZN6webrtc13MatchedFilterD1Ev = hidden unnamed_addr alias void (%"class.webrtc::MatchedFilter"*), void (%"class.webrtc::MatchedFilter"*)* @_ZN6webrtc13MatchedFilterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4aec322MatchedFilterCore_SSE2EmffN3rtc9ArrayViewIKfLln4711EEES4_NS2_IfLln4711EEEPbPf(i64, float, float, float*, i64, float*, i64, %"class.rtc::ArrayView.0"* nocapture readonly byval(%"class.rtc::ArrayView.0") align 8, i8* nocapture, float* nocapture) local_unnamed_addr #0 {
  %11 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %7, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  %14 = icmp eq i64 %6, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %7, i64 0, i32 0, i32 0
  %17 = shl i64 %4, 32
  %18 = add i64 %17, -4294967296
  %19 = ashr exact i64 %18, 32
  br label %21

20:                                               ; preds = %110, %10
  ret void

21:                                               ; preds = %110, %15
  %22 = phi i64 [ %0, %15 ], [ %113, %110 ]
  %23 = phi i64 [ 0, %15 ], [ %114, %110 ]
  %24 = getelementptr inbounds float, float* %3, i64 %22
  %25 = load float*, float** %16, align 8
  %26 = sub i64 %4, %22
  %27 = trunc i64 %26 to i32
  %28 = icmp slt i32 %27, %13
  %29 = select i1 %28, i32 %27, i32 %13
  %30 = sub nsw i32 %13, %29
  %31 = ashr i32 %29, 2
  %32 = icmp sgt i32 %29, 3
  br i1 %32, label %52, label %33

33:                                               ; preds = %52, %21
  %34 = phi <4 x float> [ zeroinitializer, %21 ], [ %63, %52 ]
  %35 = phi <4 x float> [ zeroinitializer, %21 ], [ %65, %52 ]
  %36 = phi float* [ %25, %21 ], [ %67, %52 ]
  %37 = phi float* [ %24, %21 ], [ %68, %52 ]
  %38 = and i32 %29, 3
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %74, label %40

40:                                               ; preds = %33
  %41 = add nsw i32 %38, -1
  %42 = zext i32 %41 to i64
  %43 = load float, float* %37, align 4
  %44 = load float, float* %36, align 4
  %45 = insertelement <2 x float> undef, float %43, i32 0
  %46 = shufflevector <2 x float> %45, <2 x float> undef, <2 x i32> zeroinitializer
  %47 = insertelement <2 x float> undef, float %44, i32 0
  %48 = insertelement <2 x float> %47, float %43, i32 1
  %49 = fmul <2 x float> %46, %48
  %50 = fadd <2 x float> %49, zeroinitializer
  %51 = icmp ugt i32 %38, 1
  br i1 %51, label %207, label %70

52:                                               ; preds = %21, %52
  %53 = phi float* [ %68, %52 ], [ %24, %21 ]
  %54 = phi float* [ %67, %52 ], [ %25, %21 ]
  %55 = phi i32 [ %66, %52 ], [ %31, %21 ]
  %56 = phi <4 x float> [ %65, %52 ], [ zeroinitializer, %21 ]
  %57 = phi <4 x float> [ %63, %52 ], [ zeroinitializer, %21 ]
  %58 = bitcast float* %53 to <4 x float>*
  %59 = load <4 x float>, <4 x float>* %58, align 1
  %60 = bitcast float* %54 to <4 x float>*
  %61 = load <4 x float>, <4 x float>* %60, align 1
  %62 = fmul <4 x float> %59, %59
  %63 = fadd <4 x float> %57, %62
  %64 = fmul <4 x float> %59, %61
  %65 = fadd <4 x float> %56, %64
  %66 = add nsw i32 %55, -1
  %67 = getelementptr inbounds float, float* %54, i64 4
  %68 = getelementptr inbounds float, float* %53, i64 4
  %69 = icmp sgt i32 %66, 0
  br i1 %69, label %52, label %33

70:                                               ; preds = %219, %207, %40
  %71 = phi <2 x float> [ %50, %40 ], [ %217, %207 ], [ %229, %219 ]
  %72 = getelementptr float, float* %36, i64 1
  %73 = getelementptr float, float* %72, i64 %42
  br label %74

74:                                               ; preds = %70, %33
  %75 = phi float* [ %36, %33 ], [ %73, %70 ]
  %76 = phi <2 x float> [ zeroinitializer, %33 ], [ %71, %70 ]
  %77 = ashr i32 %30, 2
  %78 = icmp sgt i32 %30, 3
  br i1 %78, label %116, label %134

79:                                               ; preds = %151
  %80 = fmul float %173, %2
  %81 = fdiv float %80, %161
  %82 = insertelement <4 x float> undef, float %81, i32 0
  %83 = shufflevector <4 x float> %82, <4 x float> undef, <4 x i32> zeroinitializer
  br i1 %32, label %87, label %84

84:                                               ; preds = %87, %79
  %85 = phi float* [ %24, %79 ], [ %99, %87 ]
  %86 = phi float* [ %25, %79 ], [ %98, %87 ]
  br i1 %39, label %101, label %103

87:                                               ; preds = %79, %87
  %88 = phi i32 [ %97, %87 ], [ %31, %79 ]
  %89 = phi float* [ %98, %87 ], [ %25, %79 ]
  %90 = phi float* [ %99, %87 ], [ %24, %79 ]
  %91 = bitcast float* %89 to <4 x float>*
  %92 = load <4 x float>, <4 x float>* %91, align 1
  %93 = bitcast float* %90 to <4 x float>*
  %94 = load <4 x float>, <4 x float>* %93, align 1
  %95 = fmul <4 x float> %83, %94
  %96 = fadd <4 x float> %92, %95
  store <4 x float> %96, <4 x float>* %91, align 1
  %97 = add nsw i32 %88, -1
  %98 = getelementptr inbounds float, float* %89, i64 4
  %99 = getelementptr inbounds float, float* %90, i64 4
  %100 = icmp sgt i32 %97, 0
  br i1 %100, label %87, label %84

101:                                              ; preds = %103, %253, %261, %84
  %102 = phi float* [ %86, %84 ], [ %108, %103 ], [ %259, %253 ], [ %267, %261 ]
  br i1 %78, label %182, label %196

103:                                              ; preds = %84
  %104 = load float, float* %85, align 4
  %105 = fmul float %81, %104
  %106 = load float, float* %86, align 4
  %107 = fadd float %106, %105
  store float %107, float* %86, align 4
  %108 = getelementptr inbounds float, float* %86, i64 1
  %109 = icmp ugt i32 %38, 1
  br i1 %109, label %253, label %101

110:                                              ; preds = %151, %206
  %111 = icmp eq i64 %22, 0
  %112 = add i64 %22, -1
  %113 = select i1 %111, i64 %19, i64 %112
  %114 = add nuw i64 %23, 1
  %115 = icmp eq i64 %114, %6
  br i1 %115, label %20, label %21

116:                                              ; preds = %74, %116
  %117 = phi float* [ %132, %116 ], [ %3, %74 ]
  %118 = phi float* [ %131, %116 ], [ %75, %74 ]
  %119 = phi i32 [ %130, %116 ], [ %77, %74 ]
  %120 = phi <4 x float> [ %129, %116 ], [ %35, %74 ]
  %121 = phi <4 x float> [ %127, %116 ], [ %34, %74 ]
  %122 = bitcast float* %117 to <4 x float>*
  %123 = load <4 x float>, <4 x float>* %122, align 1
  %124 = bitcast float* %118 to <4 x float>*
  %125 = load <4 x float>, <4 x float>* %124, align 1
  %126 = fmul <4 x float> %123, %123
  %127 = fadd <4 x float> %121, %126
  %128 = fmul <4 x float> %123, %125
  %129 = fadd <4 x float> %120, %128
  %130 = add nsw i32 %119, -1
  %131 = getelementptr inbounds float, float* %118, i64 4
  %132 = getelementptr inbounds float, float* %117, i64 4
  %133 = icmp sgt i32 %130, 0
  br i1 %133, label %116, label %134

134:                                              ; preds = %116, %74
  %135 = phi <4 x float> [ %34, %74 ], [ %127, %116 ]
  %136 = phi <4 x float> [ %35, %74 ], [ %129, %116 ]
  %137 = phi float* [ %75, %74 ], [ %131, %116 ]
  %138 = phi float* [ %3, %74 ], [ %132, %116 ]
  %139 = and i32 %30, 3
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %151, label %141

141:                                              ; preds = %134
  %142 = load float, float* %138, align 4
  %143 = load float, float* %137, align 4
  %144 = insertelement <2 x float> undef, float %142, i32 0
  %145 = shufflevector <2 x float> %144, <2 x float> undef, <2 x i32> zeroinitializer
  %146 = insertelement <2 x float> undef, float %143, i32 0
  %147 = insertelement <2 x float> %146, float %142, i32 1
  %148 = fmul <2 x float> %145, %147
  %149 = fadd <2 x float> %76, %148
  %150 = icmp ugt i32 %139, 1
  br i1 %150, label %230, label %151

151:                                              ; preds = %141, %230, %242, %134
  %152 = phi <2 x float> [ %76, %134 ], [ %149, %141 ], [ %240, %230 ], [ %252, %242 ]
  %153 = extractelement <4 x float> %135, i32 0
  %154 = extractelement <4 x float> %135, i32 1
  %155 = fadd float %153, %154
  %156 = extractelement <4 x float> %135, i32 2
  %157 = fadd float %156, %155
  %158 = extractelement <4 x float> %135, i32 3
  %159 = fadd float %158, %157
  %160 = extractelement <2 x float> %152, i32 1
  %161 = fadd float %160, %159
  %162 = extractelement <4 x float> %136, i32 0
  %163 = extractelement <4 x float> %136, i32 1
  %164 = fadd float %162, %163
  %165 = extractelement <4 x float> %136, i32 2
  %166 = fadd float %165, %164
  %167 = extractelement <4 x float> %136, i32 3
  %168 = fadd float %167, %166
  %169 = extractelement <2 x float> %152, i32 0
  %170 = fadd float %169, %168
  %171 = getelementptr inbounds float, float* %5, i64 %23
  %172 = load float, float* %171, align 4
  %173 = fsub float %172, %170
  %174 = fcmp oge float %172, 3.200000e+04
  %175 = fcmp ole float %172, -3.200000e+04
  %176 = or i1 %175, %174
  %177 = fmul float %173, %173
  %178 = load float, float* %9, align 4
  %179 = fadd float %178, %177
  store float %179, float* %9, align 4
  %180 = fcmp ule float %161, %1
  %181 = or i1 %180, %176
  br i1 %181, label %110, label %79

182:                                              ; preds = %101, %182
  %183 = phi i32 [ %192, %182 ], [ %77, %101 ]
  %184 = phi float* [ %193, %182 ], [ %102, %101 ]
  %185 = phi float* [ %194, %182 ], [ %3, %101 ]
  %186 = bitcast float* %184 to <4 x float>*
  %187 = load <4 x float>, <4 x float>* %186, align 1
  %188 = bitcast float* %185 to <4 x float>*
  %189 = load <4 x float>, <4 x float>* %188, align 1
  %190 = fmul <4 x float> %83, %189
  %191 = fadd <4 x float> %187, %190
  store <4 x float> %191, <4 x float>* %186, align 1
  %192 = add nsw i32 %183, -1
  %193 = getelementptr inbounds float, float* %184, i64 4
  %194 = getelementptr inbounds float, float* %185, i64 4
  %195 = icmp sgt i32 %192, 0
  br i1 %195, label %182, label %196

196:                                              ; preds = %182, %101
  %197 = phi float* [ %3, %101 ], [ %194, %182 ]
  %198 = phi float* [ %102, %101 ], [ %193, %182 ]
  br i1 %140, label %206, label %199

199:                                              ; preds = %196
  %200 = load float, float* %197, align 4
  %201 = fmul float %81, %200
  %202 = load float, float* %198, align 4
  %203 = fadd float %202, %201
  store float %203, float* %198, align 4
  %204 = getelementptr inbounds float, float* %198, i64 1
  %205 = icmp ugt i32 %139, 1
  br i1 %205, label %268, label %206

206:                                              ; preds = %199, %268, %276, %196
  store i8 1, i8* %8, align 1
  br label %110

207:                                              ; preds = %40
  %208 = getelementptr inbounds float, float* %37, i64 1
  %209 = getelementptr inbounds float, float* %36, i64 1
  %210 = load float, float* %208, align 4
  %211 = load float, float* %209, align 4
  %212 = insertelement <2 x float> undef, float %210, i32 0
  %213 = shufflevector <2 x float> %212, <2 x float> undef, <2 x i32> zeroinitializer
  %214 = insertelement <2 x float> undef, float %211, i32 0
  %215 = insertelement <2 x float> %214, float %210, i32 1
  %216 = fmul <2 x float> %213, %215
  %217 = fadd <2 x float> %50, %216
  %218 = icmp eq i32 %38, 3
  br i1 %218, label %219, label %70

219:                                              ; preds = %207
  %220 = getelementptr inbounds float, float* %37, i64 2
  %221 = getelementptr inbounds float, float* %36, i64 2
  %222 = load float, float* %220, align 4
  %223 = load float, float* %221, align 4
  %224 = insertelement <2 x float> undef, float %222, i32 0
  %225 = shufflevector <2 x float> %224, <2 x float> undef, <2 x i32> zeroinitializer
  %226 = insertelement <2 x float> undef, float %223, i32 0
  %227 = insertelement <2 x float> %226, float %222, i32 1
  %228 = fmul <2 x float> %225, %227
  %229 = fadd <2 x float> %217, %228
  br label %70

230:                                              ; preds = %141
  %231 = getelementptr inbounds float, float* %138, i64 1
  %232 = getelementptr inbounds float, float* %137, i64 1
  %233 = load float, float* %231, align 4
  %234 = load float, float* %232, align 4
  %235 = insertelement <2 x float> undef, float %233, i32 0
  %236 = shufflevector <2 x float> %235, <2 x float> undef, <2 x i32> zeroinitializer
  %237 = insertelement <2 x float> undef, float %234, i32 0
  %238 = insertelement <2 x float> %237, float %233, i32 1
  %239 = fmul <2 x float> %236, %238
  %240 = fadd <2 x float> %149, %239
  %241 = icmp eq i32 %139, 3
  br i1 %241, label %242, label %151

242:                                              ; preds = %230
  %243 = getelementptr inbounds float, float* %138, i64 2
  %244 = getelementptr inbounds float, float* %137, i64 2
  %245 = load float, float* %243, align 4
  %246 = load float, float* %244, align 4
  %247 = insertelement <2 x float> undef, float %245, i32 0
  %248 = shufflevector <2 x float> %247, <2 x float> undef, <2 x i32> zeroinitializer
  %249 = insertelement <2 x float> undef, float %246, i32 0
  %250 = insertelement <2 x float> %249, float %245, i32 1
  %251 = fmul <2 x float> %248, %250
  %252 = fadd <2 x float> %240, %251
  br label %151

253:                                              ; preds = %103
  %254 = getelementptr inbounds float, float* %85, i64 1
  %255 = load float, float* %254, align 4
  %256 = fmul float %81, %255
  %257 = load float, float* %108, align 4
  %258 = fadd float %257, %256
  store float %258, float* %108, align 4
  %259 = getelementptr inbounds float, float* %86, i64 2
  %260 = icmp eq i32 %38, 3
  br i1 %260, label %261, label %101

261:                                              ; preds = %253
  %262 = getelementptr inbounds float, float* %85, i64 2
  %263 = load float, float* %262, align 4
  %264 = fmul float %81, %263
  %265 = load float, float* %259, align 4
  %266 = fadd float %265, %264
  store float %266, float* %259, align 4
  %267 = getelementptr inbounds float, float* %86, i64 3
  br label %101

268:                                              ; preds = %199
  %269 = getelementptr inbounds float, float* %197, i64 1
  %270 = load float, float* %269, align 4
  %271 = fmul float %81, %270
  %272 = load float, float* %204, align 4
  %273 = fadd float %272, %271
  store float %273, float* %204, align 4
  %274 = getelementptr inbounds float, float* %198, i64 2
  %275 = icmp eq i32 %139, 3
  br i1 %275, label %276, label %206

276:                                              ; preds = %268
  %277 = getelementptr inbounds float, float* %197, i64 2
  %278 = load float, float* %277, align 4
  %279 = fmul float %81, %278
  %280 = load float, float* %274, align 4
  %281 = fadd float %280, %279
  store float %281, float* %274, align 4
  br label %206
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc4aec317MatchedFilterCoreEmffN3rtc9ArrayViewIKfLln4711EEES4_NS2_IfLln4711EEEPbPf(i64, float, float, float*, i64, float*, i64, %"class.rtc::ArrayView.0"* nocapture readonly byval(%"class.rtc::ArrayView.0") align 8, i8* nocapture, float* nocapture) local_unnamed_addr #2 {
  %11 = icmp eq i64 %6, 0
  br i1 %11, label %32, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %7, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  %16 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %7, i64 0, i32 0, i32 0
  %17 = load float*, float** %16, align 8
  %18 = add i64 %4, -1
  %19 = add i64 %14, -1
  %20 = and i64 %14, 1
  %21 = icmp eq i64 %19, 0
  %22 = sub i64 %14, %20
  %23 = icmp eq i64 %20, 0
  %24 = and i64 %14, 1
  %25 = icmp eq i64 %19, 0
  %26 = sub i64 %14, %24
  %27 = icmp eq i64 %24, 0
  br label %28

28:                                               ; preds = %137, %12
  %29 = phi i64 [ 0, %12 ], [ %141, %137 ]
  %30 = phi i64 [ %0, %12 ], [ %140, %137 ]
  br i1 %15, label %48, label %31

31:                                               ; preds = %28
  br i1 %21, label %33, label %63

32:                                               ; preds = %137, %10
  ret void

33:                                               ; preds = %63, %31
  %34 = phi <2 x float> [ undef, %31 ], [ %89, %63 ]
  %35 = phi i64 [ 0, %31 ], [ %93, %63 ]
  %36 = phi i64 [ %30, %31 ], [ %92, %63 ]
  %37 = phi <2 x float> [ zeroinitializer, %31 ], [ %89, %63 ]
  br i1 %23, label %48, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds float, float* %3, i64 %36
  %40 = load float, float* %39, align 4
  %41 = insertelement <2 x float> undef, float %40, i32 0
  %42 = shufflevector <2 x float> %41, <2 x float> undef, <2 x i32> zeroinitializer
  %43 = getelementptr inbounds float, float* %17, i64 %35
  %44 = load float, float* %43, align 4
  %45 = insertelement <2 x float> %41, float %44, i32 1
  %46 = fmul <2 x float> %42, %45
  %47 = fadd <2 x float> %37, %46
  br label %48

48:                                               ; preds = %38, %33, %28
  %49 = phi <2 x float> [ zeroinitializer, %28 ], [ %34, %33 ], [ %47, %38 ]
  %50 = getelementptr inbounds float, float* %5, i64 %29
  %51 = load float, float* %50, align 4
  %52 = extractelement <2 x float> %49, i32 1
  %53 = fsub float %51, %52
  %54 = fcmp oge float %51, 3.200000e+04
  %55 = fcmp ole float %51, -3.200000e+04
  %56 = or i1 %55, %54
  %57 = fmul float %53, %53
  %58 = load float, float* %9, align 4
  %59 = fadd float %58, %57
  store float %59, float* %9, align 4
  %60 = extractelement <2 x float> %49, i32 0
  %61 = fcmp ule float %60, %1
  %62 = or i1 %61, %56
  br i1 %62, label %137, label %96

63:                                               ; preds = %31, %63
  %64 = phi i64 [ %93, %63 ], [ 0, %31 ]
  %65 = phi i64 [ %92, %63 ], [ %30, %31 ]
  %66 = phi <2 x float> [ %89, %63 ], [ zeroinitializer, %31 ]
  %67 = phi i64 [ %94, %63 ], [ %22, %31 ]
  %68 = getelementptr inbounds float, float* %3, i64 %65
  %69 = load float, float* %68, align 4
  %70 = getelementptr inbounds float, float* %17, i64 %64
  %71 = load float, float* %70, align 4
  %72 = insertelement <2 x float> undef, float %69, i32 0
  %73 = shufflevector <2 x float> %72, <2 x float> undef, <2 x i32> zeroinitializer
  %74 = insertelement <2 x float> %72, float %71, i32 1
  %75 = fmul <2 x float> %73, %74
  %76 = fadd <2 x float> %66, %75
  %77 = icmp ult i64 %65, %18
  %78 = add i64 %65, 1
  %79 = select i1 %77, i64 %78, i64 0
  %80 = or i64 %64, 1
  %81 = getelementptr inbounds float, float* %3, i64 %79
  %82 = load float, float* %81, align 4
  %83 = getelementptr inbounds float, float* %17, i64 %80
  %84 = load float, float* %83, align 4
  %85 = insertelement <2 x float> undef, float %82, i32 0
  %86 = shufflevector <2 x float> %85, <2 x float> undef, <2 x i32> zeroinitializer
  %87 = insertelement <2 x float> %85, float %84, i32 1
  %88 = fmul <2 x float> %86, %87
  %89 = fadd <2 x float> %76, %88
  %90 = icmp ult i64 %79, %18
  %91 = add i64 %79, 1
  %92 = select i1 %90, i64 %91, i64 0
  %93 = add nuw i64 %64, 2
  %94 = add i64 %67, -2
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %33, label %63

96:                                               ; preds = %48
  %97 = fmul float %53, %2
  %98 = fdiv float %97, %60
  br i1 %15, label %110, label %99

99:                                               ; preds = %96
  br i1 %25, label %100, label %111

100:                                              ; preds = %111, %99
  %101 = phi i64 [ 0, %99 ], [ %134, %111 ]
  %102 = phi i64 [ %30, %99 ], [ %133, %111 ]
  br i1 %27, label %110, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds float, float* %3, i64 %102
  %105 = load float, float* %104, align 4
  %106 = fmul float %98, %105
  %107 = getelementptr inbounds float, float* %17, i64 %101
  %108 = load float, float* %107, align 4
  %109 = fadd float %106, %108
  store float %109, float* %107, align 4
  br label %110

110:                                              ; preds = %103, %100, %96
  store i8 1, i8* %8, align 1
  br label %137

111:                                              ; preds = %99, %111
  %112 = phi i64 [ %134, %111 ], [ 0, %99 ]
  %113 = phi i64 [ %133, %111 ], [ %30, %99 ]
  %114 = phi i64 [ %135, %111 ], [ %26, %99 ]
  %115 = getelementptr inbounds float, float* %3, i64 %113
  %116 = load float, float* %115, align 4
  %117 = fmul float %98, %116
  %118 = getelementptr inbounds float, float* %17, i64 %112
  %119 = load float, float* %118, align 4
  %120 = fadd float %117, %119
  store float %120, float* %118, align 4
  %121 = icmp ult i64 %113, %18
  %122 = add i64 %113, 1
  %123 = select i1 %121, i64 %122, i64 0
  %124 = or i64 %112, 1
  %125 = getelementptr inbounds float, float* %3, i64 %123
  %126 = load float, float* %125, align 4
  %127 = fmul float %98, %126
  %128 = getelementptr inbounds float, float* %17, i64 %124
  %129 = load float, float* %128, align 4
  %130 = fadd float %127, %129
  store float %130, float* %128, align 4
  %131 = icmp ult i64 %123, %18
  %132 = add i64 %123, 1
  %133 = select i1 %131, i64 %132, i64 0
  %134 = add nuw i64 %112, 2
  %135 = add i64 %114, -2
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %100, label %111

137:                                              ; preds = %48, %110
  %138 = icmp eq i64 %30, 0
  %139 = select i1 %138, i64 %4, i64 %30
  %140 = add i64 %139, -1
  %141 = add nuw i64 %29, 1
  %142 = icmp eq i64 %141, %6
  br i1 %142, label %32, label %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13MatchedFilterC2EPNS_13ApmDataDumperENS_16Aec3OptimizationEmmimffff(%"class.webrtc::MatchedFilter"*, %"class.webrtc::ApmDataDumper"*, i32, i64, i64, i32, i64, float, float, float, float) unnamed_addr #3 align 2 {
  %12 = alloca %"class.std::__1::vector.2", align 8
  %13 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 0
  store %"class.webrtc::ApmDataDumper"* %1, %"class.webrtc::ApmDataDumper"** %13, align 8
  %14 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 1
  store i32 %2, i32* %14, align 8
  %15 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 2
  store i64 %3, i64* %15, align 8
  %16 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 3
  %17 = mul i64 %6, %3
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 4
  %19 = sext i32 %5 to i64
  %20 = bitcast %"class.std::__1::vector.2"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #9
  %21 = mul i64 %4, %3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #9
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %37, label %23

23:                                               ; preds = %11
  %24 = icmp ugt i64 %21, 4611686018427387903
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.2"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %26) #10
  unreachable

27:                                               ; preds = %23
  %28 = shl i64 %21, 2
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to float*
  %31 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %12, i64 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::vector.2"* %12 to i8**
  store i8* %29, i8** %32, align 8
  %33 = getelementptr inbounds float, float* %30, i64 %21
  %34 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  store float* %33, float** %34, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %29, i8 0, i64 %28, i1 false)
  %35 = bitcast float** %31 to i64*
  %36 = ptrtoint float* %33 to i64
  store i64 %36, i64* %35, align 8
  br label %37

37:                                               ; preds = %11, %27
  call void @_ZNSt3__16vectorINS0_IfNS_9allocatorIfEEEENS1_IS3_EEEC2EmRKS3_(%"class.std::__1::vector"* %18, i64 %19, %"class.std::__1::vector.2"* nonnull dereferenceable(24) %12)
  %38 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %12, i64 0, i32 0, i32 0
  %39 = load float*, float** %38, align 8
  %40 = icmp eq float* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = ptrtoint float* %39 to i64
  %43 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %12, i64 0, i32 0, i32 1
  %44 = bitcast float** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = bitcast float* %39 to i8*
  call void @_ZdlPv(i8* %45) #11
  br label %46

46:                                               ; preds = %37, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #9
  %47 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 5
  %48 = bitcast %"class.std::__1::vector.10"* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #9
  %49 = icmp eq i32 %5, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 6
  %52 = bitcast %"class.std::__1::vector.17"* %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #9
  br label %85

53:                                               ; preds = %46
  %54 = icmp slt i32 %5, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %53
  %56 = bitcast %"class.std::__1::vector.10"* %47 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %56) #10
  unreachable

57:                                               ; preds = %53
  %58 = mul nsw i64 %19, 24
  %59 = call i8* @_Znwm(i64 %58) #11
  %60 = bitcast i8* %59 to %"struct.webrtc::MatchedFilter::LagEstimate"*
  %61 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 5, i32 0, i32 1
  %62 = bitcast %"class.std::__1::vector.10"* %47 to i8**
  store i8* %59, i8** %62, align 8
  %63 = getelementptr inbounds %"struct.webrtc::MatchedFilter::LagEstimate", %"struct.webrtc::MatchedFilter::LagEstimate"* %60, i64 %19
  %64 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  store %"struct.webrtc::MatchedFilter::LagEstimate"* %63, %"struct.webrtc::MatchedFilter::LagEstimate"** %64, align 8
  %65 = bitcast %"struct.webrtc::MatchedFilter::LagEstimate"** %61 to i64*
  %66 = ptrtoint i8* %59 to i64
  %67 = add nsw i64 %19, -1
  %68 = getelementptr %"struct.webrtc::MatchedFilter::LagEstimate", %"struct.webrtc::MatchedFilter::LagEstimate"* %60, i64 %67, i32 0
  %69 = ptrtoint float* %68 to i64
  %70 = sub i64 %69, %66
  %71 = urem i64 %70, 24
  %72 = add i64 %70, 24
  %73 = sub i64 %72, %71
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 %73, i1 false) #9
  %74 = ptrtoint %"struct.webrtc::MatchedFilter::LagEstimate"* %63 to i64
  store i64 %74, i64* %65, align 8
  %75 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 6
  %76 = shl nsw i64 %19, 3
  %77 = call i8* @_Znwm(i64 %76) #11
  %78 = bitcast i8* %77 to i64*
  %79 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 6, i32 0, i32 1
  %80 = bitcast %"class.std::__1::vector.17"* %75 to i8**
  store i8* %77, i8** %80, align 8
  %81 = getelementptr inbounds i64, i64* %78, i64 %19
  %82 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store i64* %81, i64** %82, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 %76, i1 false)
  %83 = bitcast i64** %79 to i64*
  %84 = ptrtoint i64* %81 to i64
  store i64 %84, i64* %83, align 8
  br label %85

85:                                               ; preds = %50, %57
  %86 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 7
  store float %7, float* %86, align 8
  %87 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 8
  store float %8, float* %87, align 4
  %88 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 9
  store float %9, float* %88, align 8
  %89 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 10
  store float %10, float* %89, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IfNS_9allocatorIfEEEENS1_IS3_EEEC2EmRKS3_(%"class.std::__1::vector"*, i64, %"class.std::__1::vector.2"* dereferenceable(24)) unnamed_addr #3 comdat align 2 {
  %4 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #9
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %63, label %6

6:                                                ; preds = %3
  %7 = icmp ugt i64 %1, 768614336404564650
  br i1 %7, label %8, label %10

8:                                                ; preds = %6
  %9 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %9) #10
  unreachable

10:                                               ; preds = %6
  %11 = mul i64 %1, 24
  %12 = tail call i8* @_Znwm(i64 %11) #11
  %13 = bitcast i8* %12 to %"class.std::__1::vector.2"*
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::vector.2"** %14 to i8**
  store i8* %12, i8** %15, align 8
  %16 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %12, i8** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %13, i64 %1
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::vector.2"* %17, %"class.std::__1::vector.2"** %18, align 8
  %19 = bitcast %"class.std::__1::vector.2"** %14 to i64*
  %20 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %2, i64 0, i32 0, i32 1
  %21 = bitcast float** %20 to i64*
  %22 = bitcast %"class.std::__1::vector.2"* %2 to i64*
  %23 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %2, i64 0, i32 0, i32 0
  br label %24

24:                                               ; preds = %58, %10
  %25 = phi %"class.std::__1::vector.2"* [ %13, %10 ], [ %59, %58 ]
  %26 = bitcast %"class.std::__1::vector.2"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #9
  %27 = load i64, i64* %21, align 8
  %28 = load i64, i64* %22, align 8
  %29 = sub i64 %27, %28
  %30 = ashr exact i64 %29, 2
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %58, label %32

32:                                               ; preds = %24
  %33 = icmp ugt i64 %30, 4611686018427387903
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::vector.2"* %25 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #10
  unreachable

36:                                               ; preds = %32
  %37 = tail call i8* @_Znwm(i64 %29) #11
  %38 = bitcast i8* %37 to float*
  %39 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %25, i64 0, i32 0, i32 1
  %40 = bitcast float** %39 to i8**
  store i8* %37, i8** %40, align 8
  %41 = bitcast %"class.std::__1::vector.2"* %25 to i8**
  store i8* %37, i8** %41, align 8
  %42 = getelementptr inbounds float, float* %38, i64 %30
  %43 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %25, i64 0, i32 0, i32 2, i32 0, i32 0
  store float* %42, float** %43, align 8
  %44 = load float*, float** %23, align 8
  %45 = load i64, i64* %21, align 8
  %46 = bitcast float** %39 to i64*
  %47 = ptrtoint i8* %37 to i64
  %48 = ptrtoint float* %44 to i64
  %49 = sub i64 %45, %48
  %50 = icmp sgt i64 %49, 0
  br i1 %50, label %51, label %56

51:                                               ; preds = %36
  %52 = lshr exact i64 %49, 2
  %53 = bitcast float* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %37, i8* align 4 %53, i64 %49, i1 false) #9
  %54 = getelementptr inbounds float, float* %38, i64 %52
  %55 = ptrtoint float* %54 to i64
  br label %56

56:                                               ; preds = %51, %36
  %57 = phi i64 [ %55, %51 ], [ %47, %36 ]
  store i64 %57, i64* %46, align 8
  br label %58

58:                                               ; preds = %56, %24
  %59 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %25, i64 1
  %60 = icmp eq %"class.std::__1::vector.2"* %59, %17
  br i1 %60, label %61, label %24

61:                                               ; preds = %58
  %62 = ptrtoint %"class.std::__1::vector.2"* %17 to i64
  store i64 %62, i64* %19, align 8
  br label %63

63:                                               ; preds = %3, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13MatchedFilterD2Ev(%"class.webrtc::MatchedFilter"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i64* %3 to i64
  %7 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 6, i32 0, i32 1
  %8 = bitcast i64** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i64* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #11
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 5, i32 0, i32 0
  %12 = load %"struct.webrtc::MatchedFilter::LagEstimate"*, %"struct.webrtc::MatchedFilter::LagEstimate"** %11, align 8
  %13 = icmp eq %"struct.webrtc::MatchedFilter::LagEstimate"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"struct.webrtc::MatchedFilter::LagEstimate"* %12 to i64
  %16 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 5, i32 0, i32 1
  %17 = bitcast %"struct.webrtc::MatchedFilter::LagEstimate"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"struct.webrtc::MatchedFilter::LagEstimate"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 4
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %21, align 8
  %23 = icmp eq %"class.std::__1::vector.2"* %22, null
  br i1 %23, label %47, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.std::__1::vector.2"* %22 to i8*
  %26 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 4, i32 0, i32 1
  %27 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %26, align 8
  %28 = icmp eq %"class.std::__1::vector.2"* %27, %22
  br i1 %28, label %45, label %29

29:                                               ; preds = %24, %40
  %30 = phi %"class.std::__1::vector.2"* [ %31, %40 ], [ %27, %24 ]
  %31 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %30, i64 -1
  %32 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %31, i64 0, i32 0, i32 0
  %33 = load float*, float** %32, align 8
  %34 = icmp eq float* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %29
  %36 = ptrtoint float* %33 to i64
  %37 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %30, i64 -1, i32 0, i32 1
  %38 = bitcast float** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = bitcast float* %33 to i8*
  tail call void @_ZdlPv(i8* %39) #11
  br label %40

40:                                               ; preds = %35, %29
  %41 = icmp eq %"class.std::__1::vector.2"* %31, %22
  br i1 %41, label %42, label %29

42:                                               ; preds = %40
  %43 = bitcast %"class.std::__1::vector"* %20 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %24
  %46 = phi i8* [ %44, %42 ], [ %25, %24 ]
  store %"class.std::__1::vector.2"* %22, %"class.std::__1::vector.2"** %26, align 8
  tail call void @_ZdlPv(i8* %46) #11
  br label %47

47:                                               ; preds = %19, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13MatchedFilter5ResetEv(%"class.webrtc::MatchedFilter"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %2, align 8
  %4 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 4, i32 0, i32 1
  %5 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.2"* %3, %5
  br i1 %6, label %7, label %13

7:                                                ; preds = %30, %1
  %8 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 5, i32 0, i32 0
  %9 = load %"struct.webrtc::MatchedFilter::LagEstimate"*, %"struct.webrtc::MatchedFilter::LagEstimate"** %8, align 8
  %10 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 5, i32 0, i32 1
  %11 = load %"struct.webrtc::MatchedFilter::LagEstimate"*, %"struct.webrtc::MatchedFilter::LagEstimate"** %10, align 8
  %12 = icmp eq %"struct.webrtc::MatchedFilter::LagEstimate"* %9, %11
  br i1 %12, label %33, label %34

13:                                               ; preds = %1, %30
  %14 = phi %"class.std::__1::vector.2"* [ %31, %30 ], [ %3, %1 ]
  %15 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %14, i64 0, i32 0, i32 0
  %16 = load float*, float** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %14, i64 0, i32 0, i32 1
  %18 = bitcast float** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = ptrtoint float* %16 to i64
  %21 = sub i64 %19, %20
  %22 = icmp sgt i64 %21, 0
  br i1 %22, label %23, label %30

23:                                               ; preds = %13
  %24 = bitcast float* %16 to i8*
  %25 = and i64 %21, -4
  %26 = icmp ult i64 %21, 4
  %27 = sext i1 %26 to i64
  %28 = shl nsw i64 %27, 2
  %29 = sub i64 %25, %28
  call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 %29, i1 false)
  br label %30

30:                                               ; preds = %23, %13
  %31 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %14, i64 1
  %32 = icmp eq %"class.std::__1::vector.2"* %31, %5
  br i1 %32, label %7, label %13

33:                                               ; preds = %34, %7
  ret void

34:                                               ; preds = %7, %34
  %35 = phi %"struct.webrtc::MatchedFilter::LagEstimate"* [ %37, %34 ], [ %9, %7 ]
  %36 = bitcast %"struct.webrtc::MatchedFilter::LagEstimate"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 17, i1 false)
  %37 = getelementptr inbounds %"struct.webrtc::MatchedFilter::LagEstimate", %"struct.webrtc::MatchedFilter::LagEstimate"* %35, i64 1
  %38 = icmp eq %"struct.webrtc::MatchedFilter::LagEstimate"* %37, %11
  br i1 %38, label %33, label %34
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13MatchedFilter6UpdateERKNS_23DownsampledRenderBufferEN3rtc9ArrayViewIKfLln4711EEEb(%"class.webrtc::MatchedFilter"* nocapture readonly, %"struct.webrtc::DownsampledRenderBuffer"* nocapture readonly dereferenceable(40), float*, i64, i1 zeroext) local_unnamed_addr #3 align 2 {
  %6 = alloca float, align 4
  %7 = alloca i8, align 1
  %8 = alloca %"class.rtc::ArrayView.0", align 8
  %9 = alloca %"class.rtc::ArrayView.0", align 8
  %10 = alloca [3 x i8], align 1
  %11 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 9
  %12 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 8
  %13 = select i1 %4, float* %11, float* %12
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %17, i64 0, i32 0, i32 1
  %19 = bitcast float** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.2"* %17 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = ashr exact i64 %23, 2
  %25 = uitofp i64 %24 to float
  %26 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 7
  %27 = load float, float* %26, align 8
  %28 = fmul float %27, %25
  %29 = fmul float %27, %28
  %30 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 4, i32 0, i32 1
  %31 = bitcast %"class.std::__1::vector.2"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::vector"* %15 to i64*
  %34 = ptrtoint %"class.std::__1::vector.2"* %17 to i64
  %35 = icmp eq i64 %32, %34
  br i1 %35, label %63, label %36

36:                                               ; preds = %5
  %37 = bitcast float* %6 to i8*
  %38 = getelementptr inbounds %"struct.webrtc::DownsampledRenderBuffer", %"struct.webrtc::DownsampledRenderBuffer"* %1, i64 0, i32 3
  %39 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 2
  %40 = getelementptr inbounds %"struct.webrtc::DownsampledRenderBuffer", %"struct.webrtc::DownsampledRenderBuffer"* %1, i64 0, i32 1
  %41 = getelementptr inbounds %"struct.webrtc::DownsampledRenderBuffer", %"struct.webrtc::DownsampledRenderBuffer"* %1, i64 0, i32 1, i32 0, i32 1
  %42 = bitcast float** %41 to i64*
  %43 = bitcast %"class.std::__1::vector.2"* %40 to i64*
  %44 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 1
  %45 = icmp eq i64 %3, 0
  %46 = select i1 %45, float* null, float* %2
  %47 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %9, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %9, i64 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %8, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %8, i64 0, i32 0, i32 1
  %51 = getelementptr inbounds float, float* %2, i64 %3
  %52 = getelementptr inbounds [3 x i8], [3 x i8]* %10, i64 0, i64 0
  %53 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 10
  %54 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 5, i32 0, i32 0
  %55 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 3
  %56 = shl nsw i64 %3, 2
  %57 = add i64 %56, -4
  %58 = lshr exact i64 %57, 2
  %59 = add nuw nsw i64 %58, 1
  %60 = and i64 %59, 7
  %61 = icmp eq i64 %60, 0
  %62 = icmp ult i64 %57, 28
  br label %64

63:                                               ; preds = %394, %5
  ret void

64:                                               ; preds = %36, %394
  %65 = phi %"class.std::__1::vector.2"* [ %17, %36 ], [ %413, %394 ]
  %66 = phi i64 [ 0, %36 ], [ %406, %394 ]
  %67 = phi i64 [ 0, %36 ], [ %407, %394 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #9
  store float 0.000000e+00, float* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #9
  store i8 0, i8* %7, align 1
  %68 = load i32, i32* %38, align 4
  %69 = sext i32 %68 to i64
  %70 = load i64, i64* %39, align 8
  %71 = add i64 %66, -1
  %72 = add i64 %71, %69
  %73 = add i64 %72, %70
  %74 = load i64, i64* %42, align 8
  %75 = load i64, i64* %43, align 8
  %76 = sub i64 %74, %75
  %77 = ashr exact i64 %76, 2
  %78 = urem i64 %73, %77
  %79 = load i32, i32* %44, align 8
  %80 = inttoptr i64 %75 to float*
  switch i32 %79, label %107 [
    i32 1, label %81
    i32 2, label %94
  ]

81:                                               ; preds = %64
  %82 = icmp eq i64 %76, 0
  %83 = select i1 %82, float* null, float* %80
  %84 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %65, i64 %67, i32 0, i32 0
  %85 = load float*, float** %84, align 8
  %86 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %65, i64 %67, i32 0, i32 1
  %87 = bitcast float** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = ptrtoint float* %85 to i64
  %90 = sub i64 %88, %89
  %91 = ashr exact i64 %90, 2
  %92 = icmp eq i64 %90, 0
  %93 = select i1 %92, float* null, float* %85
  store float* %93, float** %49, align 8
  store i64 %91, i64* %50, align 8
  call void @_ZN6webrtc4aec322MatchedFilterCore_SSE2EmffN3rtc9ArrayViewIKfLln4711EEES4_NS2_IfLln4711EEEPbPf(i64 %78, float %29, float %14, float* %83, i64 %77, float* %46, i64 %3, %"class.rtc::ArrayView.0"* nonnull byval(%"class.rtc::ArrayView.0") align 8 %8, i8* nonnull %7, float* nonnull %6)
  br label %245

94:                                               ; preds = %64
  %95 = icmp eq i64 %76, 0
  %96 = select i1 %95, float* null, float* %80
  %97 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %65, i64 %67, i32 0, i32 0
  %98 = load float*, float** %97, align 8
  %99 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %65, i64 %67, i32 0, i32 1
  %100 = bitcast float** %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = ptrtoint float* %98 to i64
  %103 = sub i64 %101, %102
  %104 = ashr exact i64 %103, 2
  %105 = icmp eq i64 %103, 0
  %106 = select i1 %105, float* null, float* %98
  store float* %106, float** %47, align 8
  store i64 %104, i64* %48, align 8
  call void @_ZN6webrtc4aec322MatchedFilterCore_AVX2EmffN3rtc9ArrayViewIKfLln4711EEES4_NS2_IfLln4711EEEPbPf(i64 %78, float %29, float %14, float* %96, i64 %77, float* %46, i64 %3, %"class.rtc::ArrayView.0"* nonnull byval(%"class.rtc::ArrayView.0") align 8 %9, i8* nonnull %7, float* nonnull %6) #9
  br label %245

107:                                              ; preds = %64
  %108 = icmp eq i64 %76, 0
  %109 = select i1 %108, float* null, float* %80
  %110 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %65, i64 %67, i32 0, i32 0
  %111 = load float*, float** %110, align 8
  %112 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %65, i64 %67, i32 0, i32 1
  %113 = bitcast float** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = ptrtoint float* %111 to i64
  %116 = sub i64 %114, %115
  %117 = ashr exact i64 %116, 2
  %118 = icmp eq i64 %116, 0
  %119 = select i1 %118, float* null, float* %111
  br i1 %45, label %297, label %120

120:                                              ; preds = %107
  %121 = add nsw i64 %77, -1
  %122 = add nsw i64 %117, -1
  %123 = and i64 %117, 1
  %124 = icmp eq i64 %122, 0
  %125 = sub nsw i64 %117, %123
  %126 = icmp eq i64 %123, 0
  %127 = and i64 %117, 1
  %128 = icmp eq i64 %122, 0
  %129 = sub nsw i64 %117, %127
  %130 = icmp eq i64 %127, 0
  br label %131

131:                                              ; preds = %239, %120
  %132 = phi i64 [ 0, %120 ], [ %243, %239 ]
  %133 = phi i64 [ %78, %120 ], [ %242, %239 ]
  br i1 %118, label %150, label %134

134:                                              ; preds = %131
  br i1 %124, label %135, label %165

135:                                              ; preds = %165, %134
  %136 = phi <2 x float> [ undef, %134 ], [ %191, %165 ]
  %137 = phi i64 [ 0, %134 ], [ %195, %165 ]
  %138 = phi i64 [ %133, %134 ], [ %194, %165 ]
  %139 = phi <2 x float> [ zeroinitializer, %134 ], [ %191, %165 ]
  br i1 %126, label %150, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds float, float* %109, i64 %138
  %142 = load float, float* %141, align 4
  %143 = insertelement <2 x float> undef, float %142, i32 0
  %144 = shufflevector <2 x float> %143, <2 x float> undef, <2 x i32> zeroinitializer
  %145 = getelementptr inbounds float, float* %119, i64 %137
  %146 = load float, float* %145, align 4
  %147 = insertelement <2 x float> %143, float %146, i32 1
  %148 = fmul <2 x float> %144, %147
  %149 = fadd <2 x float> %139, %148
  br label %150

150:                                              ; preds = %140, %135, %131
  %151 = phi <2 x float> [ zeroinitializer, %131 ], [ %136, %135 ], [ %149, %140 ]
  %152 = getelementptr inbounds float, float* %46, i64 %132
  %153 = load float, float* %152, align 4
  %154 = extractelement <2 x float> %151, i32 1
  %155 = fsub float %153, %154
  %156 = fcmp oge float %153, 3.200000e+04
  %157 = fcmp ole float %153, -3.200000e+04
  %158 = or i1 %157, %156
  %159 = fmul float %155, %155
  %160 = load float, float* %6, align 4
  %161 = fadd float %160, %159
  store float %161, float* %6, align 4
  %162 = extractelement <2 x float> %151, i32 0
  %163 = fcmp ule float %162, %29
  %164 = or i1 %163, %158
  br i1 %164, label %239, label %198

165:                                              ; preds = %134, %165
  %166 = phi i64 [ %195, %165 ], [ 0, %134 ]
  %167 = phi i64 [ %194, %165 ], [ %133, %134 ]
  %168 = phi <2 x float> [ %191, %165 ], [ zeroinitializer, %134 ]
  %169 = phi i64 [ %196, %165 ], [ %125, %134 ]
  %170 = getelementptr inbounds float, float* %109, i64 %167
  %171 = load float, float* %170, align 4
  %172 = getelementptr inbounds float, float* %119, i64 %166
  %173 = load float, float* %172, align 4
  %174 = insertelement <2 x float> undef, float %171, i32 0
  %175 = shufflevector <2 x float> %174, <2 x float> undef, <2 x i32> zeroinitializer
  %176 = insertelement <2 x float> %174, float %173, i32 1
  %177 = fmul <2 x float> %175, %176
  %178 = fadd <2 x float> %168, %177
  %179 = icmp ult i64 %167, %121
  %180 = add i64 %167, 1
  %181 = select i1 %179, i64 %180, i64 0
  %182 = or i64 %166, 1
  %183 = getelementptr inbounds float, float* %109, i64 %181
  %184 = load float, float* %183, align 4
  %185 = getelementptr inbounds float, float* %119, i64 %182
  %186 = load float, float* %185, align 4
  %187 = insertelement <2 x float> undef, float %184, i32 0
  %188 = shufflevector <2 x float> %187, <2 x float> undef, <2 x i32> zeroinitializer
  %189 = insertelement <2 x float> %187, float %186, i32 1
  %190 = fmul <2 x float> %188, %189
  %191 = fadd <2 x float> %178, %190
  %192 = icmp ult i64 %181, %121
  %193 = add i64 %181, 1
  %194 = select i1 %192, i64 %193, i64 0
  %195 = add nuw i64 %166, 2
  %196 = add i64 %169, -2
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %135, label %165

198:                                              ; preds = %150
  %199 = fmul float %14, %155
  %200 = fdiv float %199, %162
  br i1 %118, label %212, label %201

201:                                              ; preds = %198
  br i1 %128, label %202, label %213

202:                                              ; preds = %213, %201
  %203 = phi i64 [ 0, %201 ], [ %236, %213 ]
  %204 = phi i64 [ %133, %201 ], [ %235, %213 ]
  br i1 %130, label %212, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds float, float* %109, i64 %204
  %207 = load float, float* %206, align 4
  %208 = fmul float %200, %207
  %209 = getelementptr inbounds float, float* %119, i64 %203
  %210 = load float, float* %209, align 4
  %211 = fadd float %208, %210
  store float %211, float* %209, align 4
  br label %212

212:                                              ; preds = %205, %202, %198
  store i8 1, i8* %7, align 1
  br label %239

213:                                              ; preds = %201, %213
  %214 = phi i64 [ %236, %213 ], [ 0, %201 ]
  %215 = phi i64 [ %235, %213 ], [ %133, %201 ]
  %216 = phi i64 [ %237, %213 ], [ %129, %201 ]
  %217 = getelementptr inbounds float, float* %109, i64 %215
  %218 = load float, float* %217, align 4
  %219 = fmul float %200, %218
  %220 = getelementptr inbounds float, float* %119, i64 %214
  %221 = load float, float* %220, align 4
  %222 = fadd float %219, %221
  store float %222, float* %220, align 4
  %223 = icmp ult i64 %215, %121
  %224 = add i64 %215, 1
  %225 = select i1 %223, i64 %224, i64 0
  %226 = or i64 %214, 1
  %227 = getelementptr inbounds float, float* %109, i64 %225
  %228 = load float, float* %227, align 4
  %229 = fmul float %200, %228
  %230 = getelementptr inbounds float, float* %119, i64 %226
  %231 = load float, float* %230, align 4
  %232 = fadd float %229, %231
  store float %232, float* %230, align 4
  %233 = icmp ult i64 %225, %121
  %234 = add i64 %225, 1
  %235 = select i1 %233, i64 %234, i64 0
  %236 = add nuw i64 %214, 2
  %237 = add i64 %216, -2
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %202, label %213

239:                                              ; preds = %212, %150
  %240 = icmp eq i64 %133, 0
  %241 = select i1 %240, i64 %77, i64 %133
  %242 = add i64 %241, -1
  %243 = add nuw i64 %132, 1
  %244 = icmp eq i64 %243, %3
  br i1 %244, label %245, label %131

245:                                              ; preds = %239, %94, %81
  br i1 %45, label %297, label %246

246:                                              ; preds = %245
  br i1 %61, label %257, label %247

247:                                              ; preds = %246, %247
  %248 = phi float [ %253, %247 ], [ 0.000000e+00, %246 ]
  %249 = phi float* [ %254, %247 ], [ %2, %246 ]
  %250 = phi i64 [ %255, %247 ], [ %60, %246 ]
  %251 = load float, float* %249, align 4
  %252 = fmul float %251, %251
  %253 = fadd float %248, %252
  %254 = getelementptr inbounds float, float* %249, i64 1
  %255 = add i64 %250, -1
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %257, label %247, !llvm.loop !2

257:                                              ; preds = %247, %246
  %258 = phi float [ undef, %246 ], [ %253, %247 ]
  %259 = phi float [ 0.000000e+00, %246 ], [ %253, %247 ]
  %260 = phi float* [ %2, %246 ], [ %254, %247 ]
  br i1 %62, label %297, label %261

261:                                              ; preds = %257, %261
  %262 = phi float [ %294, %261 ], [ %259, %257 ]
  %263 = phi float* [ %295, %261 ], [ %260, %257 ]
  %264 = load float, float* %263, align 4
  %265 = fmul float %264, %264
  %266 = fadd float %262, %265
  %267 = getelementptr inbounds float, float* %263, i64 1
  %268 = load float, float* %267, align 4
  %269 = fmul float %268, %268
  %270 = fadd float %266, %269
  %271 = getelementptr inbounds float, float* %263, i64 2
  %272 = load float, float* %271, align 4
  %273 = fmul float %272, %272
  %274 = fadd float %270, %273
  %275 = getelementptr inbounds float, float* %263, i64 3
  %276 = load float, float* %275, align 4
  %277 = fmul float %276, %276
  %278 = fadd float %274, %277
  %279 = getelementptr inbounds float, float* %263, i64 4
  %280 = load float, float* %279, align 4
  %281 = fmul float %280, %280
  %282 = fadd float %278, %281
  %283 = getelementptr inbounds float, float* %263, i64 5
  %284 = load float, float* %283, align 4
  %285 = fmul float %284, %284
  %286 = fadd float %282, %285
  %287 = getelementptr inbounds float, float* %263, i64 6
  %288 = load float, float* %287, align 4
  %289 = fmul float %288, %288
  %290 = fadd float %286, %289
  %291 = getelementptr inbounds float, float* %263, i64 7
  %292 = load float, float* %291, align 4
  %293 = fmul float %292, %292
  %294 = fadd float %290, %293
  %295 = getelementptr inbounds float, float* %263, i64 8
  %296 = icmp eq float* %295, %51
  br i1 %296, label %297, label %261

297:                                              ; preds = %257, %261, %107, %245
  %298 = phi float [ 0.000000e+00, %245 ], [ 0.000000e+00, %107 ], [ %258, %257 ], [ %294, %261 ]
  %299 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** %16, align 8
  %300 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %299, i64 %67, i32 0, i32 0
  %301 = load float*, float** %300, align 8
  %302 = ptrtoint float* %301 to i64
  %303 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %299, i64 %67, i32 0, i32 1
  %304 = load float*, float** %303, align 8
  %305 = icmp eq float* %301, %304
  %306 = ptrtoint float* %304 to i64
  br i1 %305, label %378, label %307

307:                                              ; preds = %297
  %308 = getelementptr inbounds float, float* %301, i64 1
  %309 = icmp eq float* %308, %304
  br i1 %309, label %378, label %310

310:                                              ; preds = %307
  %311 = getelementptr float, float* %304, i64 -2
  %312 = ptrtoint float* %311 to i64
  %313 = sub i64 %312, %302
  %314 = lshr i64 %313, 2
  %315 = add nuw nsw i64 %314, 1
  %316 = and i64 %315, 3
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %333, label %318

318:                                              ; preds = %310, %318
  %319 = phi float* [ %330, %318 ], [ %308, %310 ]
  %320 = phi i64 [ %329, %318 ], [ %302, %310 ]
  %321 = phi i64 [ %331, %318 ], [ %316, %310 ]
  %322 = ptrtoint float* %319 to i64
  %323 = inttoptr i64 %320 to float*
  %324 = load float, float* %323, align 4
  %325 = load float, float* %319, align 4
  %326 = fmul float %324, %324
  %327 = fmul float %325, %325
  %328 = fcmp olt float %326, %327
  %329 = select i1 %328, i64 %322, i64 %320
  %330 = getelementptr inbounds float, float* %319, i64 1
  %331 = add i64 %321, -1
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %333, label %318, !llvm.loop !4

333:                                              ; preds = %318, %310
  %334 = phi i64 [ undef, %310 ], [ %329, %318 ]
  %335 = phi float* [ %308, %310 ], [ %330, %318 ]
  %336 = phi i64 [ %302, %310 ], [ %329, %318 ]
  %337 = icmp ult i64 %313, 12
  br i1 %337, label %378, label %338

338:                                              ; preds = %333, %338
  %339 = phi float* [ %376, %338 ], [ %335, %333 ]
  %340 = phi i64 [ %375, %338 ], [ %336, %333 ]
  %341 = ptrtoint float* %339 to i64
  %342 = inttoptr i64 %340 to float*
  %343 = load float, float* %342, align 4
  %344 = load float, float* %339, align 4
  %345 = fmul float %343, %343
  %346 = fmul float %344, %344
  %347 = fcmp olt float %345, %346
  %348 = select i1 %347, i64 %341, i64 %340
  %349 = getelementptr inbounds float, float* %339, i64 1
  %350 = ptrtoint float* %349 to i64
  %351 = inttoptr i64 %348 to float*
  %352 = load float, float* %351, align 4
  %353 = load float, float* %349, align 4
  %354 = fmul float %352, %352
  %355 = fmul float %353, %353
  %356 = fcmp olt float %354, %355
  %357 = select i1 %356, i64 %350, i64 %348
  %358 = getelementptr inbounds float, float* %339, i64 2
  %359 = ptrtoint float* %358 to i64
  %360 = inttoptr i64 %357 to float*
  %361 = load float, float* %360, align 4
  %362 = load float, float* %358, align 4
  %363 = fmul float %361, %361
  %364 = fmul float %362, %362
  %365 = fcmp olt float %363, %364
  %366 = select i1 %365, i64 %359, i64 %357
  %367 = getelementptr inbounds float, float* %339, i64 3
  %368 = ptrtoint float* %367 to i64
  %369 = inttoptr i64 %366 to float*
  %370 = load float, float* %369, align 4
  %371 = load float, float* %367, align 4
  %372 = fmul float %370, %370
  %373 = fmul float %371, %371
  %374 = fcmp olt float %372, %373
  %375 = select i1 %374, i64 %368, i64 %366
  %376 = getelementptr inbounds float, float* %339, i64 4
  %377 = icmp eq float* %376, %304
  br i1 %377, label %378, label %338

378:                                              ; preds = %333, %338, %297, %307
  %379 = phi i64 [ %302, %297 ], [ %302, %307 ], [ %334, %333 ], [ %375, %338 ]
  %380 = sub i64 %379, %302
  %381 = ashr exact i64 %380, 2
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %52)
  %382 = load float, float* %6, align 4
  %383 = fsub float %298, %382
  %384 = icmp ugt i64 %381, 2
  br i1 %384, label %385, label %394

385:                                              ; preds = %378
  %386 = sub i64 %306, %302
  %387 = ashr exact i64 %386, 2
  %388 = add nsw i64 %387, -10
  %389 = icmp ult i64 %381, %388
  br i1 %389, label %390, label %394

390:                                              ; preds = %385
  %391 = load float, float* %53, align 4
  %392 = fmul float %298, %391
  %393 = fcmp olt float %382, %392
  br label %394

394:                                              ; preds = %390, %385, %378
  %395 = phi i1 [ false, %385 ], [ false, %378 ], [ %393, %390 ]
  %396 = add i64 %381, %66
  %397 = load i8, i8* %7, align 1, !range !5
  %398 = zext i1 %395 to i8
  %399 = load %"struct.webrtc::MatchedFilter::LagEstimate"*, %"struct.webrtc::MatchedFilter::LagEstimate"** %54, align 8
  %400 = getelementptr inbounds %"struct.webrtc::MatchedFilter::LagEstimate", %"struct.webrtc::MatchedFilter::LagEstimate"* %399, i64 %67, i32 0
  store float %383, float* %400, align 8
  %401 = getelementptr inbounds %"struct.webrtc::MatchedFilter::LagEstimate", %"struct.webrtc::MatchedFilter::LagEstimate"* %399, i64 %67, i32 1
  store i8 %398, i8* %401, align 4
  %402 = getelementptr inbounds %"struct.webrtc::MatchedFilter::LagEstimate", %"struct.webrtc::MatchedFilter::LagEstimate"* %399, i64 %67, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %402, i8* nonnull align 1 %52, i64 3, i1 false)
  %403 = getelementptr inbounds %"struct.webrtc::MatchedFilter::LagEstimate", %"struct.webrtc::MatchedFilter::LagEstimate"* %399, i64 %67, i32 3
  store i64 %396, i64* %403, align 8
  %404 = getelementptr inbounds %"struct.webrtc::MatchedFilter::LagEstimate", %"struct.webrtc::MatchedFilter::LagEstimate"* %399, i64 %67, i32 4
  store i8 %397, i8* %404, align 8
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %52)
  %405 = load i64, i64* %55, align 8
  %406 = add i64 %405, %66
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #9
  %407 = add nuw i64 %67, 1
  %408 = load i64, i64* %31, align 8
  %409 = load i64, i64* %33, align 8
  %410 = sub i64 %408, %409
  %411 = sdiv exact i64 %410, 24
  %412 = icmp ult i64 %407, %411
  %413 = inttoptr i64 %409 to %"class.std::__1::vector.2"*
  br i1 %412, label %64, label %63
}

declare void @_ZN6webrtc4aec322MatchedFilterCore_AVX2EmffN3rtc9ArrayViewIKfLln4711EEES4_NS2_IfLln4711EEEPbPf(i64, float, float, float*, i64, float*, i64, %"class.rtc::ArrayView.0"* byval(%"class.rtc::ArrayView.0") align 8, i8*, float*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc13MatchedFilter19LogFilterPropertiesEimm(%"class.webrtc::MatchedFilter"* nocapture readonly, i32, i64, i64) local_unnamed_addr #3 align 2 {
  %5 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %6 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 4, i32 0, i32 1
  %8 = bitcast %"class.std::__1::vector.2"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %19, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.rtc::DiagnosticLogMessage"* %5 to i8*
  %15 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %5, i64 0, i32 7
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %15 to %"class.std::__1::basic_ostream"*
  %17 = trunc i64 %2 to i32
  %18 = getelementptr inbounds %"class.webrtc::MatchedFilter", %"class.webrtc::MatchedFilter"* %0, i64 0, i32 3
  br label %20

19:                                               ; preds = %20, %4
  ret void

20:                                               ; preds = %13, %20
  %21 = phi i64 [ %11, %13 ], [ %53, %20 ]
  %22 = phi i64 [ 0, %13 ], [ %50, %20 ]
  %23 = phi i64 [ 0, %13 ], [ %51, %20 ]
  %24 = inttoptr i64 %21 to %"class.std::__1::vector.2"*
  %25 = mul i64 %22, %3
  %26 = trunc i64 %25 to i32
  %27 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %24, i64 %23
  %28 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %24, i64 %23, i32 0, i32 1
  %29 = bitcast float** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector.2"* %27 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 2
  %35 = add i64 %34, %22
  %36 = mul i64 %35, %3
  %37 = trunc i64 %36 to i32
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %14) #9
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %5, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.10, i64 0, i64 0), i32 461, i32 4, i32 0, i32 0) #9
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i64 7) #9
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %38, i64 %23) #9
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %39, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i64 9) #9
  %41 = sub nsw i32 %26, %17
  %42 = sdiv i32 %41, 16
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %40, i32 %42) #9
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %43, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i64 10) #9
  %45 = sub nsw i32 %37, %17
  %46 = sdiv i32 %45, 16
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %44, i32 %46) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i64 4) #9
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %14) #9
  %49 = load i64, i64* %18, align 8
  %50 = add i64 %49, %22
  %51 = add nuw i64 %23, 1
  %52 = load i64, i64* %8, align 8
  %53 = load i64, i64* %10, align 8
  %54 = sub i64 %52, %53
  %55 = sdiv exact i64 %54, 24
  %56 = icmp ult i64 %51, %55
  br i1 %56, label %20, label %19
}

declare void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"*, i8*, i32, i32, i32, i32) unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"*) unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #3 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #3 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = !{i8 0, i8 2}
