; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/floor_div.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/floor_div.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, {}*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"struct.tflite::ops::builtin::floor_div::(anonymous namespace)::OpData" = type { i8 }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"struct.tflite::NdArrayDesc" = type { [4 x i32], [4 x i32] }

$_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIiiiEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E = comdat any

$_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_ = comdat any

$_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIfffEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E = comdat any

@_ZZN6tflite3ops7builtin18Register_FLOOR_DIVEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin9floor_div12_GLOBAL__N_14InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin9floor_div12_GLOBAL__N_14FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin9floor_div12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin9floor_div12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.4 = private unnamed_addr constant [66 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/floor_div.cc\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"input1->type\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"input2->type\00", align 1
@.str.12 = private unnamed_addr constant [41 x i8] c"Type '%s' is not supported by floor_div.\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"Division by 0\00", align 1
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin18Register_FLOOR_DIVEv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin18Register_FLOOR_DIVEvE1r
}

; Function Attrs: nofree nounwind ssp uwtable
define internal noalias nonnull i8* @_ZN6tflite3ops7builtin9floor_div12_GLOBAL__N_14InitEP13TfLiteContextPKcm(%struct.TfLiteContext* nocapture readnone, i8* nocapture readnone, i64) #1 {
  %4 = tail call i8* @_Znwm(i64 1) #11
  store i8 0, i8* %4, align 1
  ret i8* %4
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6tflite3ops7builtin9floor_div12_GLOBAL__N_14FreeEP13TfLiteContextPv(%struct.TfLiteContext* nocapture readnone, i8*) #2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @_ZdlPv(i8* nonnull %1) #11
  br label %5

5:                                                ; preds = %4, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin9floor_div12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #2 {
  %3 = alloca %struct.TfLiteIntArray*, align 8
  %4 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %5 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %11 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %10, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %11(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.4, i64 0, i64 0), i32 61, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i32 %7, i32 2) #12
  br label %98

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %14 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %13, align 8
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %20 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %19, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %20(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.4, i64 0, i64 0), i32 62, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 %16, i32 1) #12
  br label %98

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %23 = bitcast i8** %22 to %"struct.tflite::ops::builtin::floor_div::(anonymous namespace)::OpData"**
  %24 = load %"struct.tflite::ops::builtin::floor_div::(anonymous namespace)::OpData"*, %"struct.tflite::ops::builtin::floor_div::(anonymous namespace)::OpData"** %23, align 8
  %25 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %30 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %29, align 8
  %31 = sext i32 %26 to i64
  %32 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 %31
  br label %33

33:                                               ; preds = %21, %28
  %34 = phi %struct.TfLiteTensor* [ %32, %28 ], [ null, %21 ]
  %35 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %40 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %39, align 8
  %41 = sext i32 %36 to i64
  %42 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 %41
  br label %43

43:                                               ; preds = %33, %38
  %44 = phi %struct.TfLiteTensor* [ %42, %38 ], [ null, %33 ]
  %45 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %50 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %49, align 8
  %51 = sext i32 %46 to i64
  %52 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %50, i64 %51
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi %struct.TfLiteTensor* [ %52, %48 ], [ null, %43 ]
  %55 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %34, i64 0, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %56, %58
  br i1 %59, label %66, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %62 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %61, align 8
  %63 = tail call i8* @TfLiteTypeGetName(i32 %56) #12
  %64 = load i32, i32* %57, align 8
  %65 = tail call i8* @TfLiteTypeGetName(i32 %64) #12
  tail call void (%struct.TfLiteContext*, i8*, ...) %62(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.4, i64 0, i64 0), i32 71, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8* %63, i8* %65) #12
  br label %98

66:                                               ; preds = %53
  %67 = add i32 %56, -1
  %68 = icmp ult i32 %67, 2
  br i1 %68, label %73, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %71 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %70, align 8
  %72 = tail call i8* @TfLiteTypeGetName(i32 %56) #12
  tail call void (%struct.TfLiteContext*, i8*, ...) %71(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i64 0, i64 0), i8* %72) #12
  br label %98

73:                                               ; preds = %66
  %74 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 0, i32 0
  store i32 %56, i32* %74, align 8
  %75 = tail call zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor* %34, %struct.TfLiteTensor* %44) #12
  %76 = xor i1 %75, true
  %77 = getelementptr inbounds %"struct.tflite::ops::builtin::floor_div::(anonymous namespace)::OpData", %"struct.tflite::ops::builtin::floor_div::(anonymous namespace)::OpData"* %24, i64 0, i32 0
  %78 = zext i1 %76 to i8
  store i8 %78, i8* %77, align 1
  %79 = bitcast %struct.TfLiteIntArray** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #12
  store %struct.TfLiteIntArray* null, %struct.TfLiteIntArray** %3, align 8
  %80 = load i8, i8* %77, align 1, !range !2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %87, label %82

82:                                               ; preds = %73
  %83 = call i32 @_ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %34, %struct.TfLiteTensor* %44, %struct.TfLiteIntArray** nonnull %3) #12
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %96

85:                                               ; preds = %82
  %86 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  br label %91

87:                                               ; preds = %73
  %88 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %34, i64 0, i32 2
  %89 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %88, align 8
  %90 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %89) #12
  store %struct.TfLiteIntArray* %90, %struct.TfLiteIntArray** %3, align 8
  br label %91

91:                                               ; preds = %85, %87
  %92 = phi %struct.TfLiteIntArray* [ %86, %85 ], [ %90, %87 ]
  %93 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %94 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %93, align 8
  %95 = call i32 %94(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %54, %struct.TfLiteIntArray* %92) #12
  br label %96

96:                                               ; preds = %82, %91
  %97 = phi i32 [ %95, %91 ], [ %83, %82 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #12
  br label %98

98:                                               ; preds = %60, %96, %69, %18, %9
  %99 = phi i32 [ 1, %9 ], [ 1, %18 ], [ 1, %60 ], [ %97, %96 ], [ 1, %69 ]
  ret i32 %99
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin9floor_div12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #2 {
  %3 = alloca %"class.tflite::RuntimeShape", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %16 = bitcast i8** %15 to %"struct.tflite::ops::builtin::floor_div::(anonymous namespace)::OpData"**
  %17 = load %"struct.tflite::ops::builtin::floor_div::(anonymous namespace)::OpData"*, %"struct.tflite::ops::builtin::floor_div::(anonymous namespace)::OpData"** %16, align 8
  %18 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %19 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %18, align 8
  %20 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %19, i64 0, i32 1, i64 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %25 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %24, align 8
  %26 = sext i32 %21 to i64
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %25, i64 %26
  br label %28

28:                                               ; preds = %2, %23
  %29 = phi %struct.TfLiteTensor* [ %27, %23 ], [ null, %2 ]
  %30 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %19, i64 0, i32 1, i64 1
  %31 = load i32, i32* %30, align 4
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %35 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %34, align 8
  %36 = sext i32 %31 to i64
  %37 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %35, i64 %36
  br label %38

38:                                               ; preds = %28, %33
  %39 = phi %struct.TfLiteTensor* [ %37, %33 ], [ null, %28 ]
  %40 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %41 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %40, align 8
  %42 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %41, i64 0, i32 1, i64 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %47 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %46, align 8
  %48 = sext i32 %43 to i64
  %49 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %47, i64 %48
  br label %50

50:                                               ; preds = %38, %45
  %51 = phi %struct.TfLiteTensor* [ %49, %45 ], [ null, %38 ]
  %52 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 0
  %53 = load i32, i32* %52, align 8
  switch i32 %53, label %1147 [
    i32 2, label %54
    i32 1, label %556
  ]

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"struct.tflite::ops::builtin::floor_div::(anonymous namespace)::OpData", %"struct.tflite::ops::builtin::floor_div::(anonymous namespace)::OpData"* %17, i64 0, i32 0
  %56 = load i8, i8* %55, align 1, !range !2
  %57 = icmp eq i8 %56, 0
  %58 = icmp eq %struct.TfLiteTensor* %39, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %39, i64 0, i32 1, i32 0
  %61 = load i32*, i32** %60, align 8
  br label %62

62:                                               ; preds = %59, %54
  %63 = phi i32* [ %61, %59 ], [ null, %54 ]
  %64 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %39, i64 0, i32 2
  %65 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %64, align 8
  %66 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp sgt i32 %67, 0
  %69 = sext i32 %67 to i64
  %70 = add nsw i64 %69, -1
  %71 = and i64 %69, 7
  %72 = icmp ult i64 %70, 7
  %73 = sub nsw i64 %69, %71
  %74 = icmp eq i64 %71, 0
  br label %75

75:                                               ; preds = %142, %62
  %76 = phi i64 [ %146, %142 ], [ 0, %62 ]
  br i1 %68, label %77, label %139

77:                                               ; preds = %75
  br i1 %72, label %124, label %78

78:                                               ; preds = %77, %78
  %79 = phi i64 [ %121, %78 ], [ 0, %77 ]
  %80 = phi i64 [ %120, %78 ], [ 1, %77 ]
  %81 = phi i64 [ %122, %78 ], [ %73, %77 ]
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 %79
  %83 = load i32, i32* %82, align 4
  %84 = sext i32 %83 to i64
  %85 = mul nsw i64 %80, %84
  %86 = or i64 %79, 1
  %87 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = sext i32 %88 to i64
  %90 = mul nsw i64 %85, %89
  %91 = or i64 %79, 2
  %92 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 %91
  %93 = load i32, i32* %92, align 4
  %94 = sext i32 %93 to i64
  %95 = mul nsw i64 %90, %94
  %96 = or i64 %79, 3
  %97 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 %96
  %98 = load i32, i32* %97, align 4
  %99 = sext i32 %98 to i64
  %100 = mul nsw i64 %95, %99
  %101 = or i64 %79, 4
  %102 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = sext i32 %103 to i64
  %105 = mul nsw i64 %100, %104
  %106 = or i64 %79, 5
  %107 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 %106
  %108 = load i32, i32* %107, align 4
  %109 = sext i32 %108 to i64
  %110 = mul nsw i64 %105, %109
  %111 = or i64 %79, 6
  %112 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 %111
  %113 = load i32, i32* %112, align 4
  %114 = sext i32 %113 to i64
  %115 = mul nsw i64 %110, %114
  %116 = or i64 %79, 7
  %117 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 %116
  %118 = load i32, i32* %117, align 4
  %119 = sext i32 %118 to i64
  %120 = mul nsw i64 %115, %119
  %121 = add nuw nsw i64 %79, 8
  %122 = add i64 %81, -8
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %78

124:                                              ; preds = %78, %77
  %125 = phi i64 [ undef, %77 ], [ %120, %78 ]
  %126 = phi i64 [ 0, %77 ], [ %121, %78 ]
  %127 = phi i64 [ 1, %77 ], [ %120, %78 ]
  br i1 %74, label %139, label %128

128:                                              ; preds = %124, %128
  %129 = phi i64 [ %136, %128 ], [ %126, %124 ]
  %130 = phi i64 [ %135, %128 ], [ %127, %124 ]
  %131 = phi i64 [ %137, %128 ], [ %71, %124 ]
  %132 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 %129
  %133 = load i32, i32* %132, align 4
  %134 = sext i32 %133 to i64
  %135 = mul nsw i64 %130, %134
  %136 = add nuw nsw i64 %129, 1
  %137 = add i64 %131, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %128, !llvm.loop !3

139:                                              ; preds = %124, %128, %75
  %140 = phi i64 [ 1, %75 ], [ %125, %124 ], [ %135, %128 ]
  %141 = icmp sgt i64 %140, %76
  br i1 %141, label %142, label %150

142:                                              ; preds = %139
  %143 = getelementptr inbounds i32, i32* %63, i64 %76
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 0
  %146 = add nuw nsw i64 %76, 1
  br i1 %145, label %147, label %75

147:                                              ; preds = %142
  %148 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %149 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %148, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %149(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0)) #12
  br label %1151

150:                                              ; preds = %139
  br i1 %57, label %274, label %151

151:                                              ; preds = %150
  %152 = bitcast %"class.tflite::RuntimeShape"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %152) #12
  %153 = icmp eq %struct.TfLiteTensor* %29, null
  br i1 %153, label %154, label %156

154:                                              ; preds = %151
  %155 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  store i32 0, i32* %155, align 8, !alias.scope !5
  br label %183

156:                                              ; preds = %151
  %157 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %158 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %157, align 8, !noalias !5
  %159 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %158, i64 0, i32 0
  %160 = load i32, i32* %159, align 4, !noalias !5
  %161 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %158, i64 0, i32 1, i64 0
  %162 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  store i32 %160, i32* %162, align 8, !alias.scope !5
  %163 = icmp sgt i32 %160, 5
  br i1 %163, label %164, label %171

164:                                              ; preds = %156
  %165 = sext i32 %160 to i64
  %166 = shl nsw i64 %165, 2
  %167 = tail call i8* @_Znam(i64 %166) #11, !noalias !5
  %168 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 0
  %169 = bitcast i32** %168 to i8**
  store i8* %167, i8** %169, align 8, !alias.scope !5
  %170 = bitcast i8* %167 to i32*
  br label %176

171:                                              ; preds = %156
  %172 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %173 = bitcast %union.anon* %172 to i32*
  %174 = sext i32 %160 to i64
  %175 = shl nsw i64 %174, 2
  br label %176

176:                                              ; preds = %171, %164
  %177 = phi i64 [ %166, %164 ], [ %175, %171 ]
  %178 = phi i32* [ %170, %164 ], [ %173, %171 ]
  %179 = bitcast i32* %178 to i8*
  %180 = bitcast i32* %161 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %179, i8* align 4 %180, i64 %177, i1 false) #12
  %181 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 1, i32 0
  %182 = load i32*, i32** %181, align 8
  br label %183

183:                                              ; preds = %176, %154
  %184 = phi i32* [ %182, %176 ], [ null, %154 ]
  %185 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %185) #12
  br i1 %58, label %186, label %188

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %187, align 8, !alias.scope !8
  br label %210

188:                                              ; preds = %183
  %189 = load i32, i32* %66, align 4, !noalias !8
  %190 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 0
  %191 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %189, i32* %191, align 8, !alias.scope !8
  %192 = icmp sgt i32 %189, 5
  br i1 %192, label %193, label %200

193:                                              ; preds = %188
  %194 = sext i32 %189 to i64
  %195 = shl nsw i64 %194, 2
  %196 = tail call i8* @_Znam(i64 %195) #11, !noalias !8
  %197 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %198 = bitcast i32** %197 to i8**
  store i8* %196, i8** %198, align 8, !alias.scope !8
  %199 = bitcast i8* %196 to i32*
  br label %205

200:                                              ; preds = %188
  %201 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %202 = bitcast %union.anon* %201 to i32*
  %203 = sext i32 %189 to i64
  %204 = shl nsw i64 %203, 2
  br label %205

205:                                              ; preds = %200, %193
  %206 = phi i64 [ %195, %193 ], [ %204, %200 ]
  %207 = phi i32* [ %199, %193 ], [ %202, %200 ]
  %208 = bitcast i32* %207 to i8*
  %209 = bitcast i32* %190 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %208, i8* align 4 %209, i64 %206, i1 false) #12
  br label %210

210:                                              ; preds = %205, %186
  %211 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %211) #12
  %212 = icmp eq %struct.TfLiteTensor* %51, null
  br i1 %212, label %213, label %215

213:                                              ; preds = %210
  %214 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %214, align 8, !alias.scope !11
  br label %242

215:                                              ; preds = %210
  %216 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 2
  %217 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %216, align 8, !noalias !11
  %218 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %217, i64 0, i32 0
  %219 = load i32, i32* %218, align 4, !noalias !11
  %220 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %217, i64 0, i32 1, i64 0
  %221 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %219, i32* %221, align 8, !alias.scope !11
  %222 = icmp sgt i32 %219, 5
  br i1 %222, label %223, label %230

223:                                              ; preds = %215
  %224 = sext i32 %219 to i64
  %225 = shl nsw i64 %224, 2
  %226 = tail call i8* @_Znam(i64 %225) #11, !noalias !11
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %228 = bitcast i32** %227 to i8**
  store i8* %226, i8** %228, align 8, !alias.scope !11
  %229 = bitcast i8* %226 to i32*
  br label %235

230:                                              ; preds = %215
  %231 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %232 = bitcast %union.anon* %231 to i32*
  %233 = sext i32 %219 to i64
  %234 = shl nsw i64 %233, 2
  br label %235

235:                                              ; preds = %230, %223
  %236 = phi i64 [ %225, %223 ], [ %234, %230 ]
  %237 = phi i32* [ %229, %223 ], [ %232, %230 ]
  %238 = bitcast i32* %237 to i8*
  %239 = bitcast i32* %220 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %238, i8* align 4 %239, i64 %236, i1 false) #12
  %240 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 1, i32 0
  %241 = load i32*, i32** %240, align 8
  br label %242

242:                                              ; preds = %235, %213
  %243 = phi i32* [ %241, %235 ], [ null, %213 ]
  call void @_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIiiiEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %3, i32* %184, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i32* %63, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i32* %243, i32 (i32, i32)* nonnull @_ZN6tflite3ops7builtin9floor_div12_GLOBAL__N_18FloorDivIiEET_S5_S5_) #12
  %244 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %245 = load i32, i32* %244, align 8
  %246 = icmp sgt i32 %245, 5
  br i1 %246, label %247, label %253

247:                                              ; preds = %242
  %248 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %249 = load i32*, i32** %248, align 8
  %250 = icmp eq i32* %249, null
  br i1 %250, label %253, label %251

251:                                              ; preds = %247
  %252 = bitcast i32* %249 to i8*
  call void @_ZdaPv(i8* %252) #11
  br label %253

253:                                              ; preds = %251, %247, %242
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %211) #12
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %255 = load i32, i32* %254, align 8
  %256 = icmp sgt i32 %255, 5
  br i1 %256, label %257, label %263

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %259 = load i32*, i32** %258, align 8
  %260 = icmp eq i32* %259, null
  br i1 %260, label %263, label %261

261:                                              ; preds = %257
  %262 = bitcast i32* %259 to i8*
  call void @_ZdaPv(i8* %262) #11
  br label %263

263:                                              ; preds = %261, %257, %253
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %185) #12
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %265 = load i32, i32* %264, align 8
  %266 = icmp sgt i32 %265, 5
  br i1 %266, label %267, label %273

267:                                              ; preds = %263
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 0
  %269 = load i32*, i32** %268, align 8
  %270 = icmp eq i32* %269, null
  br i1 %270, label %273, label %271

271:                                              ; preds = %267
  %272 = bitcast i32* %269 to i8*
  call void @_ZdaPv(i8* %272) #11
  br label %273

273:                                              ; preds = %271, %267, %263
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %152) #12
  br label %1151

274:                                              ; preds = %150
  %275 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %275) #12
  %276 = icmp eq %struct.TfLiteTensor* %29, null
  br i1 %276, label %277, label %279

277:                                              ; preds = %274
  %278 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %278, align 8, !alias.scope !14
  br label %306

279:                                              ; preds = %274
  %280 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %281 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %280, align 8, !noalias !14
  %282 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %281, i64 0, i32 0
  %283 = load i32, i32* %282, align 4, !noalias !14
  %284 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %281, i64 0, i32 1, i64 0
  %285 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %283, i32* %285, align 8, !alias.scope !14
  %286 = icmp sgt i32 %283, 5
  br i1 %286, label %287, label %294

287:                                              ; preds = %279
  %288 = sext i32 %283 to i64
  %289 = shl nsw i64 %288, 2
  %290 = tail call i8* @_Znam(i64 %289) #11, !noalias !14
  %291 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %292 = bitcast i32** %291 to i8**
  store i8* %290, i8** %292, align 8, !alias.scope !14
  %293 = bitcast i8* %290 to i32*
  br label %299

294:                                              ; preds = %279
  %295 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %296 = bitcast %union.anon* %295 to i32*
  %297 = sext i32 %283 to i64
  %298 = shl nsw i64 %297, 2
  br label %299

299:                                              ; preds = %294, %287
  %300 = phi i64 [ %289, %287 ], [ %298, %294 ]
  %301 = phi i32* [ %293, %287 ], [ %296, %294 ]
  %302 = bitcast i32* %301 to i8*
  %303 = bitcast i32* %284 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %302, i8* align 4 %303, i64 %300, i1 false) #12
  %304 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 1, i32 0
  %305 = load i32*, i32** %304, align 8
  br label %306

306:                                              ; preds = %299, %277
  %307 = phi i32 [ %283, %299 ], [ 0, %277 ]
  %308 = phi i32* [ %305, %299 ], [ null, %277 ]
  %309 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %309) #12
  br i1 %58, label %310, label %312

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %311, align 8, !alias.scope !17
  br label %336

312:                                              ; preds = %306
  %313 = load i32, i32* %66, align 4, !noalias !17
  %314 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 0
  %315 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %313, i32* %315, align 8, !alias.scope !17
  %316 = icmp sgt i32 %313, 5
  br i1 %316, label %317, label %324

317:                                              ; preds = %312
  %318 = sext i32 %313 to i64
  %319 = shl nsw i64 %318, 2
  %320 = tail call i8* @_Znam(i64 %319) #11, !noalias !17
  %321 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %322 = bitcast i32** %321 to i8**
  store i8* %320, i8** %322, align 8, !alias.scope !17
  %323 = bitcast i8* %320 to i32*
  br label %329

324:                                              ; preds = %312
  %325 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %326 = bitcast %union.anon* %325 to i32*
  %327 = sext i32 %313 to i64
  %328 = shl nsw i64 %327, 2
  br label %329

329:                                              ; preds = %324, %317
  %330 = phi i64 [ %319, %317 ], [ %328, %324 ]
  %331 = phi i32* [ %323, %317 ], [ %326, %324 ]
  %332 = bitcast i32* %331 to i8*
  %333 = bitcast i32* %314 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %332, i8* align 4 %333, i64 %330, i1 false) #12
  %334 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %39, i64 0, i32 1, i32 0
  %335 = load i32*, i32** %334, align 8
  br label %336

336:                                              ; preds = %329, %310
  %337 = phi i32 [ %313, %329 ], [ 0, %310 ]
  %338 = phi i32* [ %335, %329 ], [ null, %310 ]
  %339 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %339) #12
  %340 = icmp eq %struct.TfLiteTensor* %51, null
  br i1 %340, label %341, label %343

341:                                              ; preds = %336
  %342 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %342, align 8, !alias.scope !20
  br label %370

343:                                              ; preds = %336
  %344 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 2
  %345 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %344, align 8, !noalias !20
  %346 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %345, i64 0, i32 0
  %347 = load i32, i32* %346, align 4, !noalias !20
  %348 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %345, i64 0, i32 1, i64 0
  %349 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %347, i32* %349, align 8, !alias.scope !20
  %350 = icmp sgt i32 %347, 5
  br i1 %350, label %351, label %358

351:                                              ; preds = %343
  %352 = sext i32 %347 to i64
  %353 = shl nsw i64 %352, 2
  %354 = tail call i8* @_Znam(i64 %353) #11, !noalias !20
  %355 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %356 = bitcast i32** %355 to i8**
  store i8* %354, i8** %356, align 8, !alias.scope !20
  %357 = bitcast i8* %354 to i32*
  br label %363

358:                                              ; preds = %343
  %359 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %360 = bitcast %union.anon* %359 to i32*
  %361 = sext i32 %347 to i64
  %362 = shl nsw i64 %361, 2
  br label %363

363:                                              ; preds = %358, %351
  %364 = phi i64 [ %353, %351 ], [ %362, %358 ]
  %365 = phi i32* [ %357, %351 ], [ %360, %358 ]
  %366 = bitcast i32* %365 to i8*
  %367 = bitcast i32* %348 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %366, i8* align 4 %367, i64 %364, i1 false) #12
  %368 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 1, i32 0
  %369 = load i32*, i32** %368, align 8
  br label %370

370:                                              ; preds = %363, %341
  %371 = phi i32 [ %347, %363 ], [ 0, %341 ]
  %372 = phi i32* [ %369, %363 ], [ null, %341 ]
  %373 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %374 = icmp sgt i32 %307, 5
  br i1 %374, label %375, label %378

375:                                              ; preds = %370
  %376 = getelementptr inbounds %union.anon, %union.anon* %373, i64 0, i32 0
  %377 = load i32*, i32** %376, align 8
  br label %381

378:                                              ; preds = %370
  %379 = bitcast %union.anon* %373 to i32*
  %380 = icmp sgt i32 %307, 0
  br i1 %380, label %381, label %484

381:                                              ; preds = %378, %375
  %382 = phi i32* [ %377, %375 ], [ %379, %378 ]
  %383 = zext i32 %307 to i64
  %384 = icmp ult i32 %307, 8
  br i1 %384, label %470, label %385

385:                                              ; preds = %381
  %386 = and i64 %383, 4294967288
  %387 = add nsw i64 %386, -8
  %388 = lshr exact i64 %387, 3
  %389 = add nuw nsw i64 %388, 1
  %390 = and i64 %389, 3
  %391 = icmp ult i64 %387, 24
  br i1 %391, label %437, label %392

392:                                              ; preds = %385
  %393 = sub nsw i64 %389, %390
  br label %394

394:                                              ; preds = %394, %392
  %395 = phi i64 [ 0, %392 ], [ %434, %394 ]
  %396 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %392 ], [ %432, %394 ]
  %397 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %392 ], [ %433, %394 ]
  %398 = phi i64 [ %393, %392 ], [ %435, %394 ]
  %399 = getelementptr inbounds i32, i32* %382, i64 %395
  %400 = bitcast i32* %399 to <4 x i32>*
  %401 = load <4 x i32>, <4 x i32>* %400, align 4
  %402 = getelementptr inbounds i32, i32* %399, i64 4
  %403 = bitcast i32* %402 to <4 x i32>*
  %404 = load <4 x i32>, <4 x i32>* %403, align 4
  %405 = mul nsw <4 x i32> %401, %396
  %406 = mul nsw <4 x i32> %404, %397
  %407 = or i64 %395, 8
  %408 = getelementptr inbounds i32, i32* %382, i64 %407
  %409 = bitcast i32* %408 to <4 x i32>*
  %410 = load <4 x i32>, <4 x i32>* %409, align 4
  %411 = getelementptr inbounds i32, i32* %408, i64 4
  %412 = bitcast i32* %411 to <4 x i32>*
  %413 = load <4 x i32>, <4 x i32>* %412, align 4
  %414 = mul nsw <4 x i32> %410, %405
  %415 = mul nsw <4 x i32> %413, %406
  %416 = or i64 %395, 16
  %417 = getelementptr inbounds i32, i32* %382, i64 %416
  %418 = bitcast i32* %417 to <4 x i32>*
  %419 = load <4 x i32>, <4 x i32>* %418, align 4
  %420 = getelementptr inbounds i32, i32* %417, i64 4
  %421 = bitcast i32* %420 to <4 x i32>*
  %422 = load <4 x i32>, <4 x i32>* %421, align 4
  %423 = mul nsw <4 x i32> %419, %414
  %424 = mul nsw <4 x i32> %422, %415
  %425 = or i64 %395, 24
  %426 = getelementptr inbounds i32, i32* %382, i64 %425
  %427 = bitcast i32* %426 to <4 x i32>*
  %428 = load <4 x i32>, <4 x i32>* %427, align 4
  %429 = getelementptr inbounds i32, i32* %426, i64 4
  %430 = bitcast i32* %429 to <4 x i32>*
  %431 = load <4 x i32>, <4 x i32>* %430, align 4
  %432 = mul nsw <4 x i32> %428, %423
  %433 = mul nsw <4 x i32> %431, %424
  %434 = add i64 %395, 32
  %435 = add i64 %398, -4
  %436 = icmp eq i64 %435, 0
  br i1 %436, label %437, label %394, !llvm.loop !23

437:                                              ; preds = %394, %385
  %438 = phi <4 x i32> [ undef, %385 ], [ %432, %394 ]
  %439 = phi <4 x i32> [ undef, %385 ], [ %433, %394 ]
  %440 = phi i64 [ 0, %385 ], [ %434, %394 ]
  %441 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %385 ], [ %432, %394 ]
  %442 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %385 ], [ %433, %394 ]
  %443 = icmp eq i64 %390, 0
  br i1 %443, label %460, label %444

444:                                              ; preds = %437, %444
  %445 = phi i64 [ %457, %444 ], [ %440, %437 ]
  %446 = phi <4 x i32> [ %455, %444 ], [ %441, %437 ]
  %447 = phi <4 x i32> [ %456, %444 ], [ %442, %437 ]
  %448 = phi i64 [ %458, %444 ], [ %390, %437 ]
  %449 = getelementptr inbounds i32, i32* %382, i64 %445
  %450 = bitcast i32* %449 to <4 x i32>*
  %451 = load <4 x i32>, <4 x i32>* %450, align 4
  %452 = getelementptr inbounds i32, i32* %449, i64 4
  %453 = bitcast i32* %452 to <4 x i32>*
  %454 = load <4 x i32>, <4 x i32>* %453, align 4
  %455 = mul nsw <4 x i32> %451, %446
  %456 = mul nsw <4 x i32> %454, %447
  %457 = add i64 %445, 8
  %458 = add i64 %448, -1
  %459 = icmp eq i64 %458, 0
  br i1 %459, label %460, label %444, !llvm.loop !25

460:                                              ; preds = %444, %437
  %461 = phi <4 x i32> [ %438, %437 ], [ %455, %444 ]
  %462 = phi <4 x i32> [ %439, %437 ], [ %456, %444 ]
  %463 = mul <4 x i32> %462, %461
  %464 = shufflevector <4 x i32> %463, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %465 = mul <4 x i32> %463, %464
  %466 = shufflevector <4 x i32> %465, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %467 = mul <4 x i32> %465, %466
  %468 = extractelement <4 x i32> %467, i32 0
  %469 = icmp eq i64 %386, %383
  br i1 %469, label %481, label %470

470:                                              ; preds = %460, %381
  %471 = phi i64 [ 0, %381 ], [ %386, %460 ]
  %472 = phi i32 [ 1, %381 ], [ %468, %460 ]
  br label %473

473:                                              ; preds = %470, %473
  %474 = phi i64 [ %479, %473 ], [ %471, %470 ]
  %475 = phi i32 [ %478, %473 ], [ %472, %470 ]
  %476 = getelementptr inbounds i32, i32* %382, i64 %474
  %477 = load i32, i32* %476, align 4
  %478 = mul nsw i32 %477, %475
  %479 = add nuw nsw i64 %474, 1
  %480 = icmp eq i64 %479, %383
  br i1 %480, label %481, label %473, !llvm.loop !26

481:                                              ; preds = %473, %460
  %482 = phi i32 [ %468, %460 ], [ %478, %473 ]
  %483 = icmp sgt i32 %482, 0
  br i1 %483, label %484, label %532

484:                                              ; preds = %481, %378
  %485 = phi i32 [ %482, %481 ], [ 1, %378 ]
  %486 = zext i32 %485 to i64
  %487 = and i64 %486, 1
  %488 = icmp eq i32 %485, 1
  br i1 %488, label %518, label %489

489:                                              ; preds = %484
  %490 = sub nsw i64 %486, %487
  br label %491

491:                                              ; preds = %491, %489
  %492 = phi i64 [ 0, %489 ], [ %515, %491 ]
  %493 = phi i64 [ %490, %489 ], [ %516, %491 ]
  %494 = getelementptr inbounds i32, i32* %308, i64 %492
  %495 = load i32, i32* %494, align 4
  %496 = getelementptr inbounds i32, i32* %338, i64 %492
  %497 = load i32, i32* %496, align 4
  %498 = sitofp i32 %495 to double
  %499 = sitofp i32 %497 to double
  %500 = fdiv double %498, %499
  %501 = tail call double @llvm.floor.f64(double %500) #12
  %502 = fptosi double %501 to i32
  %503 = getelementptr inbounds i32, i32* %372, i64 %492
  store i32 %502, i32* %503, align 4
  %504 = or i64 %492, 1
  %505 = getelementptr inbounds i32, i32* %308, i64 %504
  %506 = load i32, i32* %505, align 4
  %507 = getelementptr inbounds i32, i32* %338, i64 %504
  %508 = load i32, i32* %507, align 4
  %509 = sitofp i32 %506 to double
  %510 = sitofp i32 %508 to double
  %511 = fdiv double %509, %510
  %512 = tail call double @llvm.floor.f64(double %511) #12
  %513 = fptosi double %512 to i32
  %514 = getelementptr inbounds i32, i32* %372, i64 %504
  store i32 %513, i32* %514, align 4
  %515 = add nuw nsw i64 %492, 2
  %516 = add i64 %493, -2
  %517 = icmp eq i64 %516, 0
  br i1 %517, label %518, label %491

518:                                              ; preds = %491, %484
  %519 = phi i64 [ 0, %484 ], [ %515, %491 ]
  %520 = icmp eq i64 %487, 0
  br i1 %520, label %532, label %521

521:                                              ; preds = %518
  %522 = getelementptr inbounds i32, i32* %308, i64 %519
  %523 = load i32, i32* %522, align 4
  %524 = getelementptr inbounds i32, i32* %338, i64 %519
  %525 = load i32, i32* %524, align 4
  %526 = sitofp i32 %523 to double
  %527 = sitofp i32 %525 to double
  %528 = fdiv double %526, %527
  %529 = tail call double @llvm.floor.f64(double %528) #12
  %530 = fptosi double %529 to i32
  %531 = getelementptr inbounds i32, i32* %372, i64 %519
  store i32 %530, i32* %531, align 4
  br label %532

532:                                              ; preds = %521, %518, %481
  %533 = icmp sgt i32 %371, 5
  br i1 %533, label %534, label %540

534:                                              ; preds = %532
  %535 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %536 = load i32*, i32** %535, align 8
  %537 = icmp eq i32* %536, null
  br i1 %537, label %540, label %538

538:                                              ; preds = %534
  %539 = bitcast i32* %536 to i8*
  tail call void @_ZdaPv(i8* %539) #11
  br label %540

540:                                              ; preds = %538, %534, %532
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %339) #12
  %541 = icmp sgt i32 %337, 5
  br i1 %541, label %542, label %548

542:                                              ; preds = %540
  %543 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %544 = load i32*, i32** %543, align 8
  %545 = icmp eq i32* %544, null
  br i1 %545, label %548, label %546

546:                                              ; preds = %542
  %547 = bitcast i32* %544 to i8*
  tail call void @_ZdaPv(i8* %547) #11
  br label %548

548:                                              ; preds = %546, %542, %540
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %309) #12
  br i1 %374, label %549, label %555

549:                                              ; preds = %548
  %550 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %551 = load i32*, i32** %550, align 8
  %552 = icmp eq i32* %551, null
  br i1 %552, label %555, label %553

553:                                              ; preds = %549
  %554 = bitcast i32* %551 to i8*
  tail call void @_ZdaPv(i8* %554) #11
  br label %555

555:                                              ; preds = %553, %549, %548
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %275) #12
  br label %1151

556:                                              ; preds = %50
  %557 = getelementptr inbounds %"struct.tflite::ops::builtin::floor_div::(anonymous namespace)::OpData", %"struct.tflite::ops::builtin::floor_div::(anonymous namespace)::OpData"* %17, i64 0, i32 0
  %558 = load i8, i8* %557, align 1, !range !2
  %559 = icmp eq i8 %558, 0
  %560 = icmp eq %struct.TfLiteTensor* %39, null
  br i1 %560, label %565, label %561

561:                                              ; preds = %556
  %562 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %39, i64 0, i32 1
  %563 = bitcast %union.TfLitePtrUnion* %562 to float**
  %564 = load float*, float** %563, align 8
  br label %565

565:                                              ; preds = %561, %556
  %566 = phi float* [ %564, %561 ], [ null, %556 ]
  %567 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %39, i64 0, i32 2
  %568 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %567, align 8
  %569 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %568, i64 0, i32 0
  %570 = load i32, i32* %569, align 4
  %571 = icmp sgt i32 %570, 0
  %572 = sext i32 %570 to i64
  %573 = add nsw i64 %572, -1
  %574 = and i64 %572, 7
  %575 = icmp ult i64 %573, 7
  %576 = sub nsw i64 %572, %574
  %577 = icmp eq i64 %574, 0
  br label %578

578:                                              ; preds = %645, %565
  %579 = phi i64 [ %649, %645 ], [ 0, %565 ]
  br i1 %571, label %580, label %642

580:                                              ; preds = %578
  br i1 %575, label %627, label %581

581:                                              ; preds = %580, %581
  %582 = phi i64 [ %624, %581 ], [ 0, %580 ]
  %583 = phi i64 [ %623, %581 ], [ 1, %580 ]
  %584 = phi i64 [ %625, %581 ], [ %576, %580 ]
  %585 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %568, i64 0, i32 1, i64 %582
  %586 = load i32, i32* %585, align 4
  %587 = sext i32 %586 to i64
  %588 = mul nsw i64 %583, %587
  %589 = or i64 %582, 1
  %590 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %568, i64 0, i32 1, i64 %589
  %591 = load i32, i32* %590, align 4
  %592 = sext i32 %591 to i64
  %593 = mul nsw i64 %588, %592
  %594 = or i64 %582, 2
  %595 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %568, i64 0, i32 1, i64 %594
  %596 = load i32, i32* %595, align 4
  %597 = sext i32 %596 to i64
  %598 = mul nsw i64 %593, %597
  %599 = or i64 %582, 3
  %600 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %568, i64 0, i32 1, i64 %599
  %601 = load i32, i32* %600, align 4
  %602 = sext i32 %601 to i64
  %603 = mul nsw i64 %598, %602
  %604 = or i64 %582, 4
  %605 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %568, i64 0, i32 1, i64 %604
  %606 = load i32, i32* %605, align 4
  %607 = sext i32 %606 to i64
  %608 = mul nsw i64 %603, %607
  %609 = or i64 %582, 5
  %610 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %568, i64 0, i32 1, i64 %609
  %611 = load i32, i32* %610, align 4
  %612 = sext i32 %611 to i64
  %613 = mul nsw i64 %608, %612
  %614 = or i64 %582, 6
  %615 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %568, i64 0, i32 1, i64 %614
  %616 = load i32, i32* %615, align 4
  %617 = sext i32 %616 to i64
  %618 = mul nsw i64 %613, %617
  %619 = or i64 %582, 7
  %620 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %568, i64 0, i32 1, i64 %619
  %621 = load i32, i32* %620, align 4
  %622 = sext i32 %621 to i64
  %623 = mul nsw i64 %618, %622
  %624 = add nuw nsw i64 %582, 8
  %625 = add i64 %584, -8
  %626 = icmp eq i64 %625, 0
  br i1 %626, label %627, label %581

627:                                              ; preds = %581, %580
  %628 = phi i64 [ undef, %580 ], [ %623, %581 ]
  %629 = phi i64 [ 0, %580 ], [ %624, %581 ]
  %630 = phi i64 [ 1, %580 ], [ %623, %581 ]
  br i1 %577, label %642, label %631

631:                                              ; preds = %627, %631
  %632 = phi i64 [ %639, %631 ], [ %629, %627 ]
  %633 = phi i64 [ %638, %631 ], [ %630, %627 ]
  %634 = phi i64 [ %640, %631 ], [ %574, %627 ]
  %635 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %568, i64 0, i32 1, i64 %632
  %636 = load i32, i32* %635, align 4
  %637 = sext i32 %636 to i64
  %638 = mul nsw i64 %633, %637
  %639 = add nuw nsw i64 %632, 1
  %640 = add i64 %634, -1
  %641 = icmp eq i64 %640, 0
  br i1 %641, label %642, label %631, !llvm.loop !28

642:                                              ; preds = %627, %631, %578
  %643 = phi i64 [ 1, %578 ], [ %628, %627 ], [ %638, %631 ]
  %644 = icmp sgt i64 %643, %579
  br i1 %644, label %645, label %653

645:                                              ; preds = %642
  %646 = getelementptr inbounds float, float* %566, i64 %579
  %647 = load float, float* %646, align 4
  %648 = fcmp oeq float %647, 0.000000e+00
  %649 = add nuw nsw i64 %579, 1
  br i1 %648, label %650, label %578

650:                                              ; preds = %645
  %651 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %652 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %651, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %652(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0)) #12
  br label %1151

653:                                              ; preds = %642
  br i1 %559, label %779, label %654

654:                                              ; preds = %653
  %655 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %655) #12
  %656 = icmp eq %struct.TfLiteTensor* %29, null
  br i1 %656, label %657, label %659

657:                                              ; preds = %654
  %658 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %658, align 8, !alias.scope !29
  br label %687

659:                                              ; preds = %654
  %660 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %661 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %660, align 8, !noalias !29
  %662 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %661, i64 0, i32 0
  %663 = load i32, i32* %662, align 4, !noalias !29
  %664 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %661, i64 0, i32 1, i64 0
  %665 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %663, i32* %665, align 8, !alias.scope !29
  %666 = icmp sgt i32 %663, 5
  br i1 %666, label %667, label %674

667:                                              ; preds = %659
  %668 = sext i32 %663 to i64
  %669 = shl nsw i64 %668, 2
  %670 = tail call i8* @_Znam(i64 %669) #11, !noalias !29
  %671 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %672 = bitcast i32** %671 to i8**
  store i8* %670, i8** %672, align 8, !alias.scope !29
  %673 = bitcast i8* %670 to i32*
  br label %679

674:                                              ; preds = %659
  %675 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %676 = bitcast %union.anon* %675 to i32*
  %677 = sext i32 %663 to i64
  %678 = shl nsw i64 %677, 2
  br label %679

679:                                              ; preds = %674, %667
  %680 = phi i64 [ %669, %667 ], [ %678, %674 ]
  %681 = phi i32* [ %673, %667 ], [ %676, %674 ]
  %682 = bitcast i32* %681 to i8*
  %683 = bitcast i32* %664 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %682, i8* align 4 %683, i64 %680, i1 false) #12
  %684 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 1
  %685 = bitcast %union.TfLitePtrUnion* %684 to float**
  %686 = load float*, float** %685, align 8
  br label %687

687:                                              ; preds = %679, %657
  %688 = phi float* [ %686, %679 ], [ null, %657 ]
  %689 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %689) #12
  br i1 %560, label %690, label %692

690:                                              ; preds = %687
  %691 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %691, align 8, !alias.scope !32
  br label %714

692:                                              ; preds = %687
  %693 = load i32, i32* %569, align 4, !noalias !32
  %694 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %568, i64 0, i32 1, i64 0
  %695 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %693, i32* %695, align 8, !alias.scope !32
  %696 = icmp sgt i32 %693, 5
  br i1 %696, label %697, label %704

697:                                              ; preds = %692
  %698 = sext i32 %693 to i64
  %699 = shl nsw i64 %698, 2
  %700 = tail call i8* @_Znam(i64 %699) #11, !noalias !32
  %701 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %702 = bitcast i32** %701 to i8**
  store i8* %700, i8** %702, align 8, !alias.scope !32
  %703 = bitcast i8* %700 to i32*
  br label %709

704:                                              ; preds = %692
  %705 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %706 = bitcast %union.anon* %705 to i32*
  %707 = sext i32 %693 to i64
  %708 = shl nsw i64 %707, 2
  br label %709

709:                                              ; preds = %704, %697
  %710 = phi i64 [ %699, %697 ], [ %708, %704 ]
  %711 = phi i32* [ %703, %697 ], [ %706, %704 ]
  %712 = bitcast i32* %711 to i8*
  %713 = bitcast i32* %694 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %712, i8* align 4 %713, i64 %710, i1 false) #12
  br label %714

714:                                              ; preds = %709, %690
  %715 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %715) #12
  %716 = icmp eq %struct.TfLiteTensor* %51, null
  br i1 %716, label %717, label %719

717:                                              ; preds = %714
  %718 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %718, align 8, !alias.scope !35
  br label %747

719:                                              ; preds = %714
  %720 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 2
  %721 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %720, align 8, !noalias !35
  %722 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %721, i64 0, i32 0
  %723 = load i32, i32* %722, align 4, !noalias !35
  %724 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %721, i64 0, i32 1, i64 0
  %725 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %723, i32* %725, align 8, !alias.scope !35
  %726 = icmp sgt i32 %723, 5
  br i1 %726, label %727, label %734

727:                                              ; preds = %719
  %728 = sext i32 %723 to i64
  %729 = shl nsw i64 %728, 2
  %730 = tail call i8* @_Znam(i64 %729) #11, !noalias !35
  %731 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %732 = bitcast i32** %731 to i8**
  store i8* %730, i8** %732, align 8, !alias.scope !35
  %733 = bitcast i8* %730 to i32*
  br label %739

734:                                              ; preds = %719
  %735 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %736 = bitcast %union.anon* %735 to i32*
  %737 = sext i32 %723 to i64
  %738 = shl nsw i64 %737, 2
  br label %739

739:                                              ; preds = %734, %727
  %740 = phi i64 [ %729, %727 ], [ %738, %734 ]
  %741 = phi i32* [ %733, %727 ], [ %736, %734 ]
  %742 = bitcast i32* %741 to i8*
  %743 = bitcast i32* %724 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %742, i8* align 4 %743, i64 %740, i1 false) #12
  %744 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 1
  %745 = bitcast %union.TfLitePtrUnion* %744 to float**
  %746 = load float*, float** %745, align 8
  br label %747

747:                                              ; preds = %739, %717
  %748 = phi float* [ %746, %739 ], [ null, %717 ]
  call void @_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIfffEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, float* %688, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, float* %566, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, float* %748, float (float, float)* nonnull @_ZN6tflite3ops7builtin9floor_div12_GLOBAL__N_18FloorDivIfEET_S5_S5_) #12
  %749 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %750 = load i32, i32* %749, align 8
  %751 = icmp sgt i32 %750, 5
  br i1 %751, label %752, label %758

752:                                              ; preds = %747
  %753 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %754 = load i32*, i32** %753, align 8
  %755 = icmp eq i32* %754, null
  br i1 %755, label %758, label %756

756:                                              ; preds = %752
  %757 = bitcast i32* %754 to i8*
  call void @_ZdaPv(i8* %757) #11
  br label %758

758:                                              ; preds = %756, %752, %747
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %715) #12
  %759 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %760 = load i32, i32* %759, align 8
  %761 = icmp sgt i32 %760, 5
  br i1 %761, label %762, label %768

762:                                              ; preds = %758
  %763 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %764 = load i32*, i32** %763, align 8
  %765 = icmp eq i32* %764, null
  br i1 %765, label %768, label %766

766:                                              ; preds = %762
  %767 = bitcast i32* %764 to i8*
  call void @_ZdaPv(i8* %767) #11
  br label %768

768:                                              ; preds = %766, %762, %758
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %689) #12
  %769 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %770 = load i32, i32* %769, align 8
  %771 = icmp sgt i32 %770, 5
  br i1 %771, label %772, label %778

772:                                              ; preds = %768
  %773 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %774 = load i32*, i32** %773, align 8
  %775 = icmp eq i32* %774, null
  br i1 %775, label %778, label %776

776:                                              ; preds = %772
  %777 = bitcast i32* %774 to i8*
  call void @_ZdaPv(i8* %777) #11
  br label %778

778:                                              ; preds = %776, %772, %768
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %655) #12
  br label %1151

779:                                              ; preds = %653
  %780 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %780) #12
  %781 = icmp eq %struct.TfLiteTensor* %29, null
  br i1 %781, label %782, label %784

782:                                              ; preds = %779
  %783 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %783, align 8, !alias.scope !38
  br label %813

784:                                              ; preds = %779
  %785 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %786 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %785, align 8, !noalias !38
  %787 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %786, i64 0, i32 0
  %788 = load i32, i32* %787, align 4, !noalias !38
  %789 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %786, i64 0, i32 1, i64 0
  %790 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %788, i32* %790, align 8, !alias.scope !38
  %791 = icmp sgt i32 %788, 5
  br i1 %791, label %792, label %799

792:                                              ; preds = %784
  %793 = sext i32 %788 to i64
  %794 = shl nsw i64 %793, 2
  %795 = tail call i8* @_Znam(i64 %794) #11, !noalias !38
  %796 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %797 = bitcast i32** %796 to i8**
  store i8* %795, i8** %797, align 8, !alias.scope !38
  %798 = bitcast i8* %795 to i32*
  br label %804

799:                                              ; preds = %784
  %800 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %801 = bitcast %union.anon* %800 to i32*
  %802 = sext i32 %788 to i64
  %803 = shl nsw i64 %802, 2
  br label %804

804:                                              ; preds = %799, %792
  %805 = phi i64 [ %794, %792 ], [ %803, %799 ]
  %806 = phi i32* [ %798, %792 ], [ %801, %799 ]
  %807 = bitcast i32* %806 to i8*
  %808 = bitcast i32* %789 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %807, i8* align 4 %808, i64 %805, i1 false) #12
  %809 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 1
  %810 = bitcast %union.TfLitePtrUnion* %809 to float**
  %811 = load float*, float** %810, align 8
  %812 = bitcast float* %811 to i8*
  br label %813

813:                                              ; preds = %804, %782
  %814 = phi i32 [ %788, %804 ], [ 0, %782 ]
  %815 = phi i8* [ %812, %804 ], [ null, %782 ]
  %816 = phi float* [ %811, %804 ], [ null, %782 ]
  %817 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %817) #12
  br i1 %560, label %818, label %820

818:                                              ; preds = %813
  %819 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %819, align 8, !alias.scope !41
  br label %846

820:                                              ; preds = %813
  %821 = load i32, i32* %569, align 4, !noalias !41
  %822 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %568, i64 0, i32 1, i64 0
  %823 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %821, i32* %823, align 8, !alias.scope !41
  %824 = icmp sgt i32 %821, 5
  br i1 %824, label %825, label %832

825:                                              ; preds = %820
  %826 = sext i32 %821 to i64
  %827 = shl nsw i64 %826, 2
  %828 = tail call i8* @_Znam(i64 %827) #11, !noalias !41
  %829 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %830 = bitcast i32** %829 to i8**
  store i8* %828, i8** %830, align 8, !alias.scope !41
  %831 = bitcast i8* %828 to i32*
  br label %837

832:                                              ; preds = %820
  %833 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %834 = bitcast %union.anon* %833 to i32*
  %835 = sext i32 %821 to i64
  %836 = shl nsw i64 %835, 2
  br label %837

837:                                              ; preds = %832, %825
  %838 = phi i64 [ %827, %825 ], [ %836, %832 ]
  %839 = phi i32* [ %831, %825 ], [ %834, %832 ]
  %840 = bitcast i32* %839 to i8*
  %841 = bitcast i32* %822 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %840, i8* align 4 %841, i64 %838, i1 false) #12
  %842 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %39, i64 0, i32 1
  %843 = bitcast %union.TfLitePtrUnion* %842 to float**
  %844 = load float*, float** %843, align 8
  %845 = bitcast float* %844 to i8*
  br label %846

846:                                              ; preds = %837, %818
  %847 = phi i32 [ %821, %837 ], [ 0, %818 ]
  %848 = phi i8* [ %845, %837 ], [ null, %818 ]
  %849 = phi float* [ %844, %837 ], [ null, %818 ]
  %850 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %850) #12
  %851 = icmp eq %struct.TfLiteTensor* %51, null
  br i1 %851, label %852, label %854

852:                                              ; preds = %846
  %853 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %853, align 8, !alias.scope !44
  br label %883

854:                                              ; preds = %846
  %855 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 2
  %856 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %855, align 8, !noalias !44
  %857 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %856, i64 0, i32 0
  %858 = load i32, i32* %857, align 4, !noalias !44
  %859 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %856, i64 0, i32 1, i64 0
  %860 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %858, i32* %860, align 8, !alias.scope !44
  %861 = icmp sgt i32 %858, 5
  br i1 %861, label %862, label %869

862:                                              ; preds = %854
  %863 = sext i32 %858 to i64
  %864 = shl nsw i64 %863, 2
  %865 = tail call i8* @_Znam(i64 %864) #11, !noalias !44
  %866 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %867 = bitcast i32** %866 to i8**
  store i8* %865, i8** %867, align 8, !alias.scope !44
  %868 = bitcast i8* %865 to i32*
  br label %874

869:                                              ; preds = %854
  %870 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %871 = bitcast %union.anon* %870 to i32*
  %872 = sext i32 %858 to i64
  %873 = shl nsw i64 %872, 2
  br label %874

874:                                              ; preds = %869, %862
  %875 = phi i64 [ %864, %862 ], [ %873, %869 ]
  %876 = phi i32* [ %868, %862 ], [ %871, %869 ]
  %877 = bitcast i32* %876 to i8*
  %878 = bitcast i32* %859 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %877, i8* align 4 %878, i64 %875, i1 false) #12
  %879 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 1
  %880 = bitcast %union.TfLitePtrUnion* %879 to float**
  %881 = load float*, float** %880, align 8
  %882 = bitcast float* %881 to i8*
  br label %883

883:                                              ; preds = %874, %852
  %884 = phi i32 [ %858, %874 ], [ 0, %852 ]
  %885 = phi i8* [ %882, %874 ], [ null, %852 ]
  %886 = phi float* [ %881, %874 ], [ null, %852 ]
  %887 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %888 = icmp sgt i32 %814, 5
  br i1 %888, label %889, label %892

889:                                              ; preds = %883
  %890 = getelementptr inbounds %union.anon, %union.anon* %887, i64 0, i32 0
  %891 = load i32*, i32** %890, align 8
  br label %895

892:                                              ; preds = %883
  %893 = bitcast %union.anon* %887 to i32*
  %894 = icmp sgt i32 %814, 0
  br i1 %894, label %895, label %998

895:                                              ; preds = %892, %889
  %896 = phi i32* [ %891, %889 ], [ %893, %892 ]
  %897 = zext i32 %814 to i64
  %898 = icmp ult i32 %814, 8
  br i1 %898, label %984, label %899

899:                                              ; preds = %895
  %900 = and i64 %897, 4294967288
  %901 = add nsw i64 %900, -8
  %902 = lshr exact i64 %901, 3
  %903 = add nuw nsw i64 %902, 1
  %904 = and i64 %903, 3
  %905 = icmp ult i64 %901, 24
  br i1 %905, label %951, label %906

906:                                              ; preds = %899
  %907 = sub nsw i64 %903, %904
  br label %908

908:                                              ; preds = %908, %906
  %909 = phi i64 [ 0, %906 ], [ %948, %908 ]
  %910 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %906 ], [ %946, %908 ]
  %911 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %906 ], [ %947, %908 ]
  %912 = phi i64 [ %907, %906 ], [ %949, %908 ]
  %913 = getelementptr inbounds i32, i32* %896, i64 %909
  %914 = bitcast i32* %913 to <4 x i32>*
  %915 = load <4 x i32>, <4 x i32>* %914, align 4
  %916 = getelementptr inbounds i32, i32* %913, i64 4
  %917 = bitcast i32* %916 to <4 x i32>*
  %918 = load <4 x i32>, <4 x i32>* %917, align 4
  %919 = mul nsw <4 x i32> %915, %910
  %920 = mul nsw <4 x i32> %918, %911
  %921 = or i64 %909, 8
  %922 = getelementptr inbounds i32, i32* %896, i64 %921
  %923 = bitcast i32* %922 to <4 x i32>*
  %924 = load <4 x i32>, <4 x i32>* %923, align 4
  %925 = getelementptr inbounds i32, i32* %922, i64 4
  %926 = bitcast i32* %925 to <4 x i32>*
  %927 = load <4 x i32>, <4 x i32>* %926, align 4
  %928 = mul nsw <4 x i32> %924, %919
  %929 = mul nsw <4 x i32> %927, %920
  %930 = or i64 %909, 16
  %931 = getelementptr inbounds i32, i32* %896, i64 %930
  %932 = bitcast i32* %931 to <4 x i32>*
  %933 = load <4 x i32>, <4 x i32>* %932, align 4
  %934 = getelementptr inbounds i32, i32* %931, i64 4
  %935 = bitcast i32* %934 to <4 x i32>*
  %936 = load <4 x i32>, <4 x i32>* %935, align 4
  %937 = mul nsw <4 x i32> %933, %928
  %938 = mul nsw <4 x i32> %936, %929
  %939 = or i64 %909, 24
  %940 = getelementptr inbounds i32, i32* %896, i64 %939
  %941 = bitcast i32* %940 to <4 x i32>*
  %942 = load <4 x i32>, <4 x i32>* %941, align 4
  %943 = getelementptr inbounds i32, i32* %940, i64 4
  %944 = bitcast i32* %943 to <4 x i32>*
  %945 = load <4 x i32>, <4 x i32>* %944, align 4
  %946 = mul nsw <4 x i32> %942, %937
  %947 = mul nsw <4 x i32> %945, %938
  %948 = add i64 %909, 32
  %949 = add i64 %912, -4
  %950 = icmp eq i64 %949, 0
  br i1 %950, label %951, label %908, !llvm.loop !47

951:                                              ; preds = %908, %899
  %952 = phi <4 x i32> [ undef, %899 ], [ %946, %908 ]
  %953 = phi <4 x i32> [ undef, %899 ], [ %947, %908 ]
  %954 = phi i64 [ 0, %899 ], [ %948, %908 ]
  %955 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %899 ], [ %946, %908 ]
  %956 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %899 ], [ %947, %908 ]
  %957 = icmp eq i64 %904, 0
  br i1 %957, label %974, label %958

958:                                              ; preds = %951, %958
  %959 = phi i64 [ %971, %958 ], [ %954, %951 ]
  %960 = phi <4 x i32> [ %969, %958 ], [ %955, %951 ]
  %961 = phi <4 x i32> [ %970, %958 ], [ %956, %951 ]
  %962 = phi i64 [ %972, %958 ], [ %904, %951 ]
  %963 = getelementptr inbounds i32, i32* %896, i64 %959
  %964 = bitcast i32* %963 to <4 x i32>*
  %965 = load <4 x i32>, <4 x i32>* %964, align 4
  %966 = getelementptr inbounds i32, i32* %963, i64 4
  %967 = bitcast i32* %966 to <4 x i32>*
  %968 = load <4 x i32>, <4 x i32>* %967, align 4
  %969 = mul nsw <4 x i32> %965, %960
  %970 = mul nsw <4 x i32> %968, %961
  %971 = add i64 %959, 8
  %972 = add i64 %962, -1
  %973 = icmp eq i64 %972, 0
  br i1 %973, label %974, label %958, !llvm.loop !48

974:                                              ; preds = %958, %951
  %975 = phi <4 x i32> [ %952, %951 ], [ %969, %958 ]
  %976 = phi <4 x i32> [ %953, %951 ], [ %970, %958 ]
  %977 = mul <4 x i32> %976, %975
  %978 = shufflevector <4 x i32> %977, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %979 = mul <4 x i32> %977, %978
  %980 = shufflevector <4 x i32> %979, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %981 = mul <4 x i32> %979, %980
  %982 = extractelement <4 x i32> %981, i32 0
  %983 = icmp eq i64 %900, %897
  br i1 %983, label %995, label %984

984:                                              ; preds = %974, %895
  %985 = phi i64 [ 0, %895 ], [ %900, %974 ]
  %986 = phi i32 [ 1, %895 ], [ %982, %974 ]
  br label %987

987:                                              ; preds = %984, %987
  %988 = phi i64 [ %993, %987 ], [ %985, %984 ]
  %989 = phi i32 [ %992, %987 ], [ %986, %984 ]
  %990 = getelementptr inbounds i32, i32* %896, i64 %988
  %991 = load i32, i32* %990, align 4
  %992 = mul nsw i32 %991, %989
  %993 = add nuw nsw i64 %988, 1
  %994 = icmp eq i64 %993, %897
  br i1 %994, label %995, label %987, !llvm.loop !49

995:                                              ; preds = %987, %974
  %996 = phi i32 [ %982, %974 ], [ %992, %987 ]
  %997 = icmp sgt i32 %996, 0
  br i1 %997, label %998, label %1123

998:                                              ; preds = %995, %892
  %999 = phi i32 [ %996, %995 ], [ 1, %892 ]
  %1000 = zext i32 %999 to i64
  %1001 = icmp ult i32 %999, 4
  br i1 %1001, label %1077, label %1002

1002:                                             ; preds = %998
  %1003 = getelementptr float, float* %886, i64 %1000
  %1004 = bitcast float* %1003 to i8*
  %1005 = getelementptr float, float* %816, i64 %1000
  %1006 = bitcast float* %1005 to i8*
  %1007 = getelementptr float, float* %849, i64 %1000
  %1008 = bitcast float* %1007 to i8*
  %1009 = icmp ult i8* %885, %1006
  %1010 = icmp ult i8* %815, %1004
  %1011 = and i1 %1009, %1010
  %1012 = icmp ult i8* %885, %1008
  %1013 = icmp ult i8* %848, %1004
  %1014 = and i1 %1012, %1013
  %1015 = or i1 %1011, %1014
  br i1 %1015, label %1077, label %1016

1016:                                             ; preds = %1002
  %1017 = and i64 %1000, 4294967292
  %1018 = add nsw i64 %1017, -4
  %1019 = lshr exact i64 %1018, 2
  %1020 = add nuw nsw i64 %1019, 1
  %1021 = and i64 %1020, 1
  %1022 = icmp eq i64 %1018, 0
  br i1 %1022, label %1058, label %1023

1023:                                             ; preds = %1016
  %1024 = sub nuw nsw i64 %1020, %1021
  br label %1025

1025:                                             ; preds = %1025, %1023
  %1026 = phi i64 [ 0, %1023 ], [ %1055, %1025 ]
  %1027 = phi i64 [ %1024, %1023 ], [ %1056, %1025 ]
  %1028 = getelementptr inbounds float, float* %816, i64 %1026
  %1029 = bitcast float* %1028 to <4 x float>*
  %1030 = load <4 x float>, <4 x float>* %1029, align 4, !alias.scope !50
  %1031 = getelementptr inbounds float, float* %849, i64 %1026
  %1032 = bitcast float* %1031 to <4 x float>*
  %1033 = load <4 x float>, <4 x float>* %1032, align 4, !alias.scope !53
  %1034 = fpext <4 x float> %1030 to <4 x double>
  %1035 = fpext <4 x float> %1033 to <4 x double>
  %1036 = fdiv <4 x double> %1034, %1035
  %1037 = call <4 x double> @llvm.floor.v4f64(<4 x double> %1036)
  %1038 = fptrunc <4 x double> %1037 to <4 x float>
  %1039 = getelementptr inbounds float, float* %886, i64 %1026
  %1040 = bitcast float* %1039 to <4 x float>*
  store <4 x float> %1038, <4 x float>* %1040, align 4, !alias.scope !55, !noalias !57
  %1041 = or i64 %1026, 4
  %1042 = getelementptr inbounds float, float* %816, i64 %1041
  %1043 = bitcast float* %1042 to <4 x float>*
  %1044 = load <4 x float>, <4 x float>* %1043, align 4, !alias.scope !50
  %1045 = getelementptr inbounds float, float* %849, i64 %1041
  %1046 = bitcast float* %1045 to <4 x float>*
  %1047 = load <4 x float>, <4 x float>* %1046, align 4, !alias.scope !53
  %1048 = fpext <4 x float> %1044 to <4 x double>
  %1049 = fpext <4 x float> %1047 to <4 x double>
  %1050 = fdiv <4 x double> %1048, %1049
  %1051 = call <4 x double> @llvm.floor.v4f64(<4 x double> %1050)
  %1052 = fptrunc <4 x double> %1051 to <4 x float>
  %1053 = getelementptr inbounds float, float* %886, i64 %1041
  %1054 = bitcast float* %1053 to <4 x float>*
  store <4 x float> %1052, <4 x float>* %1054, align 4, !alias.scope !55, !noalias !57
  %1055 = add i64 %1026, 8
  %1056 = add i64 %1027, -2
  %1057 = icmp eq i64 %1056, 0
  br i1 %1057, label %1058, label %1025, !llvm.loop !58

1058:                                             ; preds = %1025, %1016
  %1059 = phi i64 [ 0, %1016 ], [ %1055, %1025 ]
  %1060 = icmp eq i64 %1021, 0
  br i1 %1060, label %1075, label %1061

1061:                                             ; preds = %1058
  %1062 = getelementptr inbounds float, float* %816, i64 %1059
  %1063 = bitcast float* %1062 to <4 x float>*
  %1064 = load <4 x float>, <4 x float>* %1063, align 4, !alias.scope !50
  %1065 = getelementptr inbounds float, float* %849, i64 %1059
  %1066 = bitcast float* %1065 to <4 x float>*
  %1067 = load <4 x float>, <4 x float>* %1066, align 4, !alias.scope !53
  %1068 = fpext <4 x float> %1064 to <4 x double>
  %1069 = fpext <4 x float> %1067 to <4 x double>
  %1070 = fdiv <4 x double> %1068, %1069
  %1071 = call <4 x double> @llvm.floor.v4f64(<4 x double> %1070)
  %1072 = fptrunc <4 x double> %1071 to <4 x float>
  %1073 = getelementptr inbounds float, float* %886, i64 %1059
  %1074 = bitcast float* %1073 to <4 x float>*
  store <4 x float> %1072, <4 x float>* %1074, align 4, !alias.scope !55, !noalias !57
  br label %1075

1075:                                             ; preds = %1058, %1061
  %1076 = icmp eq i64 %1017, %1000
  br i1 %1076, label %1123, label %1077

1077:                                             ; preds = %1075, %1002, %998
  %1078 = phi i64 [ 0, %1002 ], [ 0, %998 ], [ %1017, %1075 ]
  %1079 = xor i64 %1078, -1
  %1080 = and i64 %1000, 1
  %1081 = icmp eq i64 %1080, 0
  br i1 %1081, label %1094, label %1082

1082:                                             ; preds = %1077
  %1083 = getelementptr inbounds float, float* %816, i64 %1078
  %1084 = load float, float* %1083, align 4
  %1085 = getelementptr inbounds float, float* %849, i64 %1078
  %1086 = load float, float* %1085, align 4
  %1087 = fpext float %1084 to double
  %1088 = fpext float %1086 to double
  %1089 = fdiv double %1087, %1088
  %1090 = tail call double @llvm.floor.f64(double %1089) #12
  %1091 = fptrunc double %1090 to float
  %1092 = getelementptr inbounds float, float* %886, i64 %1078
  store float %1091, float* %1092, align 4
  %1093 = or i64 %1078, 1
  br label %1094

1094:                                             ; preds = %1077, %1082
  %1095 = phi i64 [ %1078, %1077 ], [ %1093, %1082 ]
  %1096 = sub nsw i64 0, %1000
  %1097 = icmp eq i64 %1079, %1096
  br i1 %1097, label %1123, label %1098

1098:                                             ; preds = %1094, %1098
  %1099 = phi i64 [ %1121, %1098 ], [ %1095, %1094 ]
  %1100 = getelementptr inbounds float, float* %816, i64 %1099
  %1101 = load float, float* %1100, align 4
  %1102 = getelementptr inbounds float, float* %849, i64 %1099
  %1103 = load float, float* %1102, align 4
  %1104 = fpext float %1101 to double
  %1105 = fpext float %1103 to double
  %1106 = fdiv double %1104, %1105
  %1107 = tail call double @llvm.floor.f64(double %1106) #12
  %1108 = fptrunc double %1107 to float
  %1109 = getelementptr inbounds float, float* %886, i64 %1099
  store float %1108, float* %1109, align 4
  %1110 = add nuw nsw i64 %1099, 1
  %1111 = getelementptr inbounds float, float* %816, i64 %1110
  %1112 = load float, float* %1111, align 4
  %1113 = getelementptr inbounds float, float* %849, i64 %1110
  %1114 = load float, float* %1113, align 4
  %1115 = fpext float %1112 to double
  %1116 = fpext float %1114 to double
  %1117 = fdiv double %1115, %1116
  %1118 = tail call double @llvm.floor.f64(double %1117) #12
  %1119 = fptrunc double %1118 to float
  %1120 = getelementptr inbounds float, float* %886, i64 %1110
  store float %1119, float* %1120, align 4
  %1121 = add nuw nsw i64 %1099, 2
  %1122 = icmp eq i64 %1121, %1000
  br i1 %1122, label %1123, label %1098, !llvm.loop !59

1123:                                             ; preds = %1094, %1098, %1075, %995
  %1124 = icmp sgt i32 %884, 5
  br i1 %1124, label %1125, label %1131

1125:                                             ; preds = %1123
  %1126 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %1127 = load i32*, i32** %1126, align 8
  %1128 = icmp eq i32* %1127, null
  br i1 %1128, label %1131, label %1129

1129:                                             ; preds = %1125
  %1130 = bitcast i32* %1127 to i8*
  tail call void @_ZdaPv(i8* %1130) #11
  br label %1131

1131:                                             ; preds = %1129, %1125, %1123
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %850) #12
  %1132 = icmp sgt i32 %847, 5
  br i1 %1132, label %1133, label %1139

1133:                                             ; preds = %1131
  %1134 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %1135 = load i32*, i32** %1134, align 8
  %1136 = icmp eq i32* %1135, null
  br i1 %1136, label %1139, label %1137

1137:                                             ; preds = %1133
  %1138 = bitcast i32* %1135 to i8*
  tail call void @_ZdaPv(i8* %1138) #11
  br label %1139

1139:                                             ; preds = %1137, %1133, %1131
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %817) #12
  br i1 %888, label %1140, label %1146

1140:                                             ; preds = %1139
  %1141 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %1142 = load i32*, i32** %1141, align 8
  %1143 = icmp eq i32* %1142, null
  br i1 %1143, label %1146, label %1144

1144:                                             ; preds = %1140
  %1145 = bitcast i32* %1142 to i8*
  tail call void @_ZdaPv(i8* %1145) #11
  br label %1146

1146:                                             ; preds = %1144, %1140, %1139
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %780) #12
  br label %1151

1147:                                             ; preds = %50
  %1148 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1149 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1148, align 8
  %1150 = tail call i8* @TfLiteTypeGetName(i32 %53) #12
  tail call void (%struct.TfLiteContext*, i8*, ...) %1149(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i64 0, i64 0), i8* %1150) #12
  br label %1151

1151:                                             ; preds = %1146, %778, %650, %555, %273, %147, %1147
  %1152 = phi i32 [ 1, %1147 ], [ 1, %147 ], [ 0, %555 ], [ 0, %273 ], [ 1, %650 ], [ 0, %1146 ], [ 0, %778 ]
  ret i32 %1152
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #6

declare zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #6

declare i32 @_ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray(%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteIntArray**) local_unnamed_addr #6

declare %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray*) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIiiiEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E(%"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, i32 (i32, i32)*) local_unnamed_addr #7 comdat {
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::NdArrayDesc", align 4
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %12 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %13, align 8, !alias.scope !60
  %14 = load i32, i32* %11, align 8, !noalias !60
  %15 = icmp sgt i32 %14, 4
  br i1 %15, label %16, label %17

16:                                               ; preds = %7
  tail call void @abort() #13, !noalias !60
  unreachable

17:                                               ; preds = %7
  store i32 4, i32* %13, align 8, !alias.scope !60
  %18 = sub i32 4, %14
  %19 = icmp sgt i32 %18, 0
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %19, label %21, label %101

21:                                               ; preds = %17
  %22 = bitcast %union.anon* %20 to [5 x i32]*
  %23 = zext i32 %18 to i64
  %24 = icmp ult i32 %18, 8
  br i1 %24, label %94, label %25

25:                                               ; preds = %21
  %26 = and i64 %23, 4294967288
  %27 = add nsw i64 %26, -8
  %28 = lshr exact i64 %27, 3
  %29 = add nuw nsw i64 %28, 1
  %30 = and i64 %29, 7
  %31 = icmp ult i64 %27, 56
  br i1 %31, label %79, label %32

32:                                               ; preds = %25
  %33 = sub nsw i64 %29, %30
  br label %34

34:                                               ; preds = %34, %32
  %35 = phi i64 [ 0, %32 ], [ %76, %34 ]
  %36 = phi i64 [ %33, %32 ], [ %77, %34 ]
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %35
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !60
  %39 = getelementptr inbounds i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !60
  %41 = or i64 %35, 8
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !60
  %44 = getelementptr inbounds i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !60
  %46 = or i64 %35, 16
  %47 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !60
  %49 = getelementptr inbounds i32, i32* %47, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !60
  %51 = or i64 %35, 24
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %51
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !60
  %54 = getelementptr inbounds i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !60
  %56 = or i64 %35, 32
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !60
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !60
  %61 = or i64 %35, 40
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !60
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !60
  %66 = or i64 %35, 48
  %67 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %66
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !60
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !60
  %71 = or i64 %35, 56
  %72 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %71
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !60
  %74 = getelementptr inbounds i32, i32* %72, i64 4
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !60
  %76 = add i64 %35, 64
  %77 = add i64 %36, -8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %34, !llvm.loop !63

79:                                               ; preds = %34, %25
  %80 = phi i64 [ 0, %25 ], [ %76, %34 ]
  %81 = icmp eq i64 %30, 0
  br i1 %81, label %92, label %82

82:                                               ; preds = %79, %82
  %83 = phi i64 [ %89, %82 ], [ %80, %79 ]
  %84 = phi i64 [ %90, %82 ], [ %30, %79 ]
  %85 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %83
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !60
  %87 = getelementptr inbounds i32, i32* %85, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !60
  %89 = add i64 %83, 8
  %90 = add i64 %84, -1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %82, !llvm.loop !64

92:                                               ; preds = %82, %79
  %93 = icmp eq i64 %26, %23
  br i1 %93, label %101, label %94

94:                                               ; preds = %92, %21
  %95 = phi i64 [ 0, %21 ], [ %26, %92 ]
  br label %96

96:                                               ; preds = %94, %96
  %97 = phi i64 [ %99, %96 ], [ %95, %94 ]
  %98 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %97
  store i32 1, i32* %98, align 4, !alias.scope !60
  %99 = add nuw nsw i64 %97, 1
  %100 = icmp eq i64 %99, %23
  br i1 %100, label %101, label %96, !llvm.loop !65

101:                                              ; preds = %96, %92, %17
  %102 = getelementptr inbounds %union.anon, %union.anon* %20, i64 0, i32 0
  %103 = bitcast %union.anon* %20 to i32*
  %104 = sext i32 %18 to i64
  %105 = getelementptr inbounds i32, i32* %103, i64 %104
  %106 = bitcast i32* %105 to i8*
  %107 = icmp sgt i32 %14, 5
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %109 = getelementptr inbounds %union.anon, %union.anon* %108, i64 0, i32 0
  %110 = load i32*, i32** %109, align 8, !noalias !60
  %111 = bitcast %union.anon* %108 to i32*
  %112 = select i1 %107, i32* %110, i32* %111
  %113 = bitcast i32* %112 to i8*
  %114 = sext i32 %14 to i64
  %115 = shl nsw i64 %114, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %113, i64 %115, i1 false) #12
  %116 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %116) #12
  %117 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 0
  %118 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 1
  %119 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 2
  %120 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 3
  %121 = bitcast %"struct.tflite::NdArrayDesc"* %10 to i8*
  %122 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %122, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %121) #12
  %123 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 0
  %124 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 1
  %125 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 2
  %126 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 3
  %127 = bitcast %"struct.tflite::NdArrayDesc"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %127, i8 -86, i64 32, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %2, %"struct.tflite::NdArrayDesc"* nonnull %9, %"struct.tflite::NdArrayDesc"* nonnull %10)
  %128 = load i32, i32* %13, align 8
  %129 = icmp sgt i32 %128, 5
  %130 = load i32*, i32** %102, align 8
  %131 = select i1 %129, i32* %130, i32* %103
  %132 = load i32, i32* %131, align 4
  %133 = icmp sgt i32 %132, 0
  br i1 %133, label %134, label %153

134:                                              ; preds = %101
  %135 = bitcast %union.anon* %20 to [5 x i32]*
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %135, i64 0, i64 1
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %138 = bitcast [16 x i8]* %137 to i32*
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %140 = bitcast i8* %139 to i32*
  %141 = getelementptr inbounds i32, i32* %103, i64 1
  %142 = getelementptr inbounds i32, i32* %130, i64 1
  %143 = select i1 %129, i32* %142, i32* %136
  %144 = getelementptr inbounds i32, i32* %130, i64 2
  %145 = select i1 %129, i32* %144, i32* %138
  %146 = getelementptr inbounds i32, i32* %130, i64 3
  %147 = select i1 %129, i32* %146, i32* %140
  br label %148

148:                                              ; preds = %134, %172
  %149 = phi i32 [ %132, %134 ], [ %173, %172 ]
  %150 = phi i32 [ 0, %134 ], [ %174, %172 ]
  %151 = load i32, i32* %143, align 4
  %152 = icmp sgt i32 %151, 0
  br i1 %152, label %160, label %172

153:                                              ; preds = %172, %101
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %121) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %116) #12
  %154 = xor i1 %129, true
  %155 = icmp eq i32* %130, null
  %156 = or i1 %155, %154
  br i1 %156, label %159, label %157

157:                                              ; preds = %153
  %158 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %158) #11
  br label %159

159:                                              ; preds = %153, %157
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #12
  ret void

160:                                              ; preds = %148, %189
  %161 = phi i32 [ %190, %189 ], [ %151, %148 ]
  %162 = phi i32 [ %191, %189 ], [ 0, %148 ]
  %163 = load i32, i32* %145, align 4
  %164 = icmp sgt i32 %163, 0
  br i1 %164, label %165, label %189

165:                                              ; preds = %160
  %166 = load i32, i32* %141, align 4
  %167 = mul nsw i32 %166, %150
  %168 = add nsw i32 %167, %162
  %169 = load i32, i32* %147, align 4
  br label %176

170:                                              ; preds = %189
  %171 = load i32, i32* %131, align 4
  br label %172

172:                                              ; preds = %170, %148
  %173 = phi i32 [ %171, %170 ], [ %149, %148 ]
  %174 = add nuw nsw i32 %150, 1
  %175 = icmp slt i32 %174, %173
  br i1 %175, label %148, label %153

176:                                              ; preds = %165, %195
  %177 = phi i32 [ %163, %165 ], [ %196, %195 ]
  %178 = phi i32 [ %169, %165 ], [ %197, %195 ]
  %179 = phi i32 [ 0, %165 ], [ %198, %195 ]
  %180 = icmp sgt i32 %178, 0
  br i1 %180, label %181, label %195

181:                                              ; preds = %176
  %182 = load i32, i32* %138, align 8
  %183 = mul nsw i32 %168, %182
  %184 = add nsw i32 %183, %179
  %185 = load i32, i32* %140, align 4
  %186 = mul nsw i32 %184, %185
  br label %200

187:                                              ; preds = %195
  %188 = load i32, i32* %143, align 4
  br label %189

189:                                              ; preds = %187, %160
  %190 = phi i32 [ %188, %187 ], [ %161, %160 ]
  %191 = add nuw nsw i32 %162, 1
  %192 = icmp slt i32 %191, %190
  br i1 %192, label %160, label %170

193:                                              ; preds = %200
  %194 = load i32, i32* %145, align 4
  br label %195

195:                                              ; preds = %193, %176
  %196 = phi i32 [ %194, %193 ], [ %177, %176 ]
  %197 = phi i32 [ %235, %193 ], [ %178, %176 ]
  %198 = add nuw nsw i32 %179, 1
  %199 = icmp slt i32 %198, %196
  br i1 %199, label %176, label %187

200:                                              ; preds = %181, %200
  %201 = phi i32 [ 0, %181 ], [ %234, %200 ]
  %202 = add nsw i32 %186, %201
  %203 = load i32, i32* %117, align 4
  %204 = mul nsw i32 %203, %150
  %205 = load i32, i32* %118, align 4
  %206 = mul nsw i32 %205, %162
  %207 = add nsw i32 %206, %204
  %208 = load i32, i32* %119, align 4
  %209 = mul nsw i32 %208, %179
  %210 = add nsw i32 %207, %209
  %211 = load i32, i32* %120, align 4
  %212 = mul nsw i32 %211, %201
  %213 = add nsw i32 %210, %212
  %214 = load i32, i32* %123, align 4
  %215 = mul nsw i32 %214, %150
  %216 = load i32, i32* %124, align 4
  %217 = mul nsw i32 %216, %162
  %218 = add nsw i32 %217, %215
  %219 = load i32, i32* %125, align 4
  %220 = mul nsw i32 %219, %179
  %221 = add nsw i32 %218, %220
  %222 = load i32, i32* %126, align 4
  %223 = mul nsw i32 %222, %201
  %224 = add nsw i32 %221, %223
  %225 = sext i32 %213 to i64
  %226 = getelementptr inbounds i32, i32* %1, i64 %225
  %227 = load i32, i32* %226, align 4
  %228 = sext i32 %224 to i64
  %229 = getelementptr inbounds i32, i32* %3, i64 %228
  %230 = load i32, i32* %229, align 4
  %231 = call i32 %6(i32 %227, i32 %230) #12
  %232 = sext i32 %202 to i64
  %233 = getelementptr inbounds i32, i32* %5, i64 %232
  store i32 %231, i32* %233, align 4
  %234 = add nuw nsw i32 %201, 1
  %235 = load i32, i32* %147, align 4
  %236 = icmp slt i32 %234, %235
  br i1 %236, label %200, label %193
}

; Function Attrs: nounwind readnone ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin9floor_div12_GLOBAL__N_18FloorDivIiEET_S5_S5_(i32, i32) #8 {
  %3 = sitofp i32 %0 to double
  %4 = sitofp i32 %1 to double
  %5 = fdiv double %3, %4
  %6 = tail call double @llvm.floor.f64(double %5)
  %7 = fptosi double %6 to i32
  ret i32 %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"*) local_unnamed_addr #7 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %8, align 8, !alias.scope !66
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8, !noalias !66
  %11 = icmp sgt i32 %10, 4
  br i1 %11, label %12, label %13

12:                                               ; preds = %4
  tail call void @abort() #13, !noalias !66
  unreachable

13:                                               ; preds = %4
  store i32 4, i32* %8, align 8, !alias.scope !66
  %14 = sub i32 4, %10
  %15 = icmp sgt i32 %14, 0
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %15, label %17, label %97

17:                                               ; preds = %13
  %18 = bitcast %union.anon* %16 to [5 x i32]*
  %19 = zext i32 %14 to i64
  %20 = icmp ult i32 %14, 8
  br i1 %20, label %90, label %21

21:                                               ; preds = %17
  %22 = and i64 %19, 4294967288
  %23 = add nsw i64 %22, -8
  %24 = lshr exact i64 %23, 3
  %25 = add nuw nsw i64 %24, 1
  %26 = and i64 %25, 7
  %27 = icmp ult i64 %23, 56
  br i1 %27, label %75, label %28

28:                                               ; preds = %21
  %29 = sub nsw i64 %25, %26
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %72, %30 ]
  %32 = phi i64 [ %29, %28 ], [ %73, %30 ]
  %33 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %31
  %34 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %34, align 8, !alias.scope !66
  %35 = getelementptr inbounds i32, i32* %33, i64 4
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !66
  %37 = or i64 %31, 8
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %37
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %39, align 8, !alias.scope !66
  %40 = getelementptr inbounds i32, i32* %38, i64 4
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !66
  %42 = or i64 %31, 16
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !66
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !66
  %47 = or i64 %31, 24
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !66
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !66
  %52 = or i64 %31, 32
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !66
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !66
  %57 = or i64 %31, 40
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !66
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !66
  %62 = or i64 %31, 48
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !66
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !66
  %67 = or i64 %31, 56
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !66
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !66
  %72 = add i64 %31, 64
  %73 = add i64 %32, -8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %30, !llvm.loop !69

75:                                               ; preds = %30, %21
  %76 = phi i64 [ 0, %21 ], [ %72, %30 ]
  %77 = icmp eq i64 %26, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %75, %78
  %79 = phi i64 [ %85, %78 ], [ %76, %75 ]
  %80 = phi i64 [ %86, %78 ], [ %26, %75 ]
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %79
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !66
  %83 = getelementptr inbounds i32, i32* %81, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !66
  %85 = add i64 %79, 8
  %86 = add i64 %80, -1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %78, !llvm.loop !70

88:                                               ; preds = %78, %75
  %89 = icmp eq i64 %22, %19
  br i1 %89, label %97, label %90

90:                                               ; preds = %88, %17
  %91 = phi i64 [ 0, %17 ], [ %22, %88 ]
  br label %92

92:                                               ; preds = %90, %92
  %93 = phi i64 [ %95, %92 ], [ %91, %90 ]
  %94 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %93
  store i32 1, i32* %94, align 4, !alias.scope !66
  %95 = add nuw nsw i64 %93, 1
  %96 = icmp eq i64 %95, %19
  br i1 %96, label %97, label %92, !llvm.loop !71

97:                                               ; preds = %92, %88, %13
  %98 = getelementptr inbounds %union.anon, %union.anon* %16, i64 0, i32 0
  %99 = bitcast %union.anon* %16 to i32*
  %100 = sext i32 %14 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = bitcast i32* %101 to i8*
  %103 = icmp sgt i32 %10, 5
  %104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %105 = getelementptr inbounds %union.anon, %union.anon* %104, i64 0, i32 0
  %106 = load i32*, i32** %105, align 8, !noalias !66
  %107 = bitcast %union.anon* %104 to i32*
  %108 = select i1 %103, i32* %106, i32* %107
  %109 = bitcast i32* %108 to i8*
  %110 = sext i32 %10 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %109, i64 %111, i1 false) #12
  %112 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %112) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 32, i1 false)
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %113, align 8, !alias.scope !72
  %114 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %115 = load i32, i32* %114, align 8, !noalias !72
  %116 = icmp sgt i32 %115, 4
  br i1 %116, label %117, label %118

117:                                              ; preds = %97
  tail call void @abort() #13, !noalias !72
  unreachable

118:                                              ; preds = %97
  store i32 4, i32* %113, align 8, !alias.scope !72
  %119 = sub i32 4, %115
  %120 = icmp sgt i32 %119, 0
  %121 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %122 = bitcast %union.anon* %121 to [5 x i32]*
  br i1 %120, label %123, label %202

123:                                              ; preds = %118
  %124 = zext i32 %119 to i64
  %125 = icmp ult i32 %119, 8
  br i1 %125, label %195, label %126

126:                                              ; preds = %123
  %127 = and i64 %124, 4294967288
  %128 = add nsw i64 %127, -8
  %129 = lshr exact i64 %128, 3
  %130 = add nuw nsw i64 %129, 1
  %131 = and i64 %130, 7
  %132 = icmp ult i64 %128, 56
  br i1 %132, label %180, label %133

133:                                              ; preds = %126
  %134 = sub nsw i64 %130, %131
  br label %135

135:                                              ; preds = %135, %133
  %136 = phi i64 [ 0, %133 ], [ %177, %135 ]
  %137 = phi i64 [ %134, %133 ], [ %178, %135 ]
  %138 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %136
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %139, align 8, !alias.scope !72
  %140 = getelementptr inbounds i32, i32* %138, i64 4
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %141, align 8, !alias.scope !72
  %142 = or i64 %136, 8
  %143 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %142
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %144, align 8, !alias.scope !72
  %145 = getelementptr inbounds i32, i32* %143, i64 4
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !72
  %147 = or i64 %136, 16
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %147
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %149, align 8, !alias.scope !72
  %150 = getelementptr inbounds i32, i32* %148, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !72
  %152 = or i64 %136, 24
  %153 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %152
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %154, align 8, !alias.scope !72
  %155 = getelementptr inbounds i32, i32* %153, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !72
  %157 = or i64 %136, 32
  %158 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %157
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %159, align 8, !alias.scope !72
  %160 = getelementptr inbounds i32, i32* %158, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !72
  %162 = or i64 %136, 40
  %163 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %164, align 8, !alias.scope !72
  %165 = getelementptr inbounds i32, i32* %163, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !72
  %167 = or i64 %136, 48
  %168 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %167
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %169, align 8, !alias.scope !72
  %170 = getelementptr inbounds i32, i32* %168, i64 4
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !72
  %172 = or i64 %136, 56
  %173 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %172
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %174, align 8, !alias.scope !72
  %175 = getelementptr inbounds i32, i32* %173, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %176, align 8, !alias.scope !72
  %177 = add i64 %136, 64
  %178 = add i64 %137, -8
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %135, !llvm.loop !75

180:                                              ; preds = %135, %126
  %181 = phi i64 [ 0, %126 ], [ %177, %135 ]
  %182 = icmp eq i64 %131, 0
  br i1 %182, label %193, label %183

183:                                              ; preds = %180, %183
  %184 = phi i64 [ %190, %183 ], [ %181, %180 ]
  %185 = phi i64 [ %191, %183 ], [ %131, %180 ]
  %186 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %184
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %187, align 8, !alias.scope !72
  %188 = getelementptr inbounds i32, i32* %186, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %189, align 8, !alias.scope !72
  %190 = add i64 %184, 8
  %191 = add i64 %185, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %183, !llvm.loop !76

193:                                              ; preds = %183, %180
  %194 = icmp eq i64 %127, %124
  br i1 %194, label %202, label %195

195:                                              ; preds = %193, %123
  %196 = phi i64 [ 0, %123 ], [ %127, %193 ]
  br label %197

197:                                              ; preds = %195, %197
  %198 = phi i64 [ %200, %197 ], [ %196, %195 ]
  %199 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %198
  store i32 1, i32* %199, align 4, !alias.scope !72
  %200 = add nuw nsw i64 %198, 1
  %201 = icmp eq i64 %200, %124
  br i1 %201, label %202, label %197, !llvm.loop !77

202:                                              ; preds = %197, %193, %118
  %203 = getelementptr inbounds %union.anon, %union.anon* %121, i64 0, i32 0
  %204 = bitcast %union.anon* %121 to i32*
  %205 = sext i32 %119 to i64
  %206 = getelementptr inbounds i32, i32* %204, i64 %205
  %207 = bitcast i32* %206 to i8*
  %208 = icmp sgt i32 %115, 5
  %209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %210 = getelementptr inbounds %union.anon, %union.anon* %209, i64 0, i32 0
  %211 = load i32*, i32** %210, align 8, !noalias !72
  %212 = bitcast %union.anon* %209 to i32*
  %213 = select i1 %208, i32* %211, i32* %212
  %214 = bitcast i32* %213 to i8*
  %215 = sext i32 %115 to i64
  %216 = shl nsw i64 %215, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %207, i8* align 4 %214, i64 %216, i1 false) #12
  %217 = bitcast %union.anon* %16 to [5 x i32]*
  %218 = load i32, i32* %8, align 8
  %219 = icmp sgt i32 %218, 5
  %220 = load i32*, i32** %98, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 3
  %222 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %223 = bitcast i8* %222 to i32*
  %224 = select i1 %219, i32* %221, i32* %223
  %225 = load i32, i32* %224, align 4
  %226 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 3
  store i32 %225, i32* %226, align 4
  %227 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 3
  store i32 1, i32* %227, align 4
  %228 = load i32, i32* %224, align 4
  %229 = getelementptr inbounds i32, i32* %220, i64 2
  %230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %231 = bitcast [16 x i8]* %230 to i32*
  %232 = select i1 %219, i32* %229, i32* %231
  %233 = load i32, i32* %232, align 4
  %234 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 2
  store i32 %233, i32* %234, align 4
  %235 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 2
  store i32 %228, i32* %235, align 4
  %236 = load i32, i32* %232, align 4
  %237 = mul nsw i32 %236, %228
  %238 = getelementptr inbounds i32, i32* %220, i64 1
  %239 = getelementptr inbounds [5 x i32], [5 x i32]* %217, i64 0, i64 1
  %240 = select i1 %219, i32* %238, i32* %239
  %241 = load i32, i32* %240, align 4
  %242 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 1
  store i32 %241, i32* %242, align 4
  %243 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 1
  store i32 %237, i32* %243, align 4
  %244 = load i32, i32* %240, align 4
  %245 = mul nsw i32 %244, %237
  %246 = select i1 %219, i32* %220, i32* %99
  %247 = load i32, i32* %246, align 4
  %248 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 0
  store i32 %247, i32* %248, align 4
  %249 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 0
  store i32 %245, i32* %249, align 4
  %250 = load i32, i32* %113, align 8
  %251 = icmp sgt i32 %250, 5
  %252 = load i32*, i32** %203, align 8
  %253 = getelementptr inbounds i32, i32* %252, i64 3
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %255 = bitcast i8* %254 to i32*
  %256 = select i1 %251, i32* %253, i32* %255
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 3
  store i32 %257, i32* %258, align 4
  %259 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 3
  store i32 1, i32* %259, align 4
  %260 = load i32, i32* %256, align 4
  %261 = getelementptr inbounds i32, i32* %252, i64 2
  %262 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %263 = bitcast [16 x i8]* %262 to i32*
  %264 = select i1 %251, i32* %261, i32* %263
  %265 = load i32, i32* %264, align 4
  %266 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 2
  store i32 %265, i32* %266, align 4
  %267 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 2
  store i32 %260, i32* %267, align 4
  %268 = load i32, i32* %264, align 4
  %269 = mul nsw i32 %268, %260
  %270 = getelementptr inbounds i32, i32* %252, i64 1
  %271 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 1
  %272 = select i1 %251, i32* %270, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 1
  store i32 %273, i32* %274, align 4
  %275 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 1
  store i32 %269, i32* %275, align 4
  %276 = load i32, i32* %272, align 4
  %277 = mul nsw i32 %276, %269
  %278 = select i1 %251, i32* %252, i32* %204
  %279 = load i32, i32* %278, align 4
  %280 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 0
  store i32 %279, i32* %280, align 4
  %281 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 0
  store i32 %277, i32* %281, align 4
  %282 = bitcast %union.anon* %16 to i32*
  %283 = select i1 %219, i32* %220, i32* %282
  %284 = load i32, i32* %283, align 4
  %285 = bitcast %union.anon* %121 to i32*
  %286 = select i1 %251, i32* %252, i32* %285
  %287 = load i32, i32* %286, align 4
  %288 = icmp eq i32 %284, %287
  br i1 %288, label %302, label %298

289:                                              ; preds = %338
  %290 = bitcast i32* %252 to i8*
  tail call void @_ZdaPv(i8* %290) #11
  br label %291

291:                                              ; preds = %338, %289
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %112) #12
  %292 = xor i1 %219, true
  %293 = icmp eq i32* %220, null
  %294 = or i1 %293, %292
  br i1 %294, label %297, label %295

295:                                              ; preds = %291
  %296 = bitcast i32* %220 to i8*
  tail call void @_ZdaPv(i8* %296) #11
  br label %297

297:                                              ; preds = %291, %295
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #12
  ret void

298:                                              ; preds = %202
  %299 = icmp eq i32 %284, 1
  br i1 %299, label %300, label %301

300:                                              ; preds = %298
  store i32 0, i32* %249, align 4
  store i32 %287, i32* %248, align 4
  br label %302

301:                                              ; preds = %298
  store i32 0, i32* %281, align 4
  store i32 %284, i32* %280, align 4
  br label %302

302:                                              ; preds = %202, %300, %301
  %303 = load i32, i32* %240, align 4
  %304 = load i32, i32* %272, align 4
  %305 = icmp eq i32 %303, %304
  br i1 %305, label %310, label %306

306:                                              ; preds = %302
  %307 = icmp eq i32 %303, 1
  br i1 %307, label %309, label %308

308:                                              ; preds = %306
  store i32 0, i32* %275, align 4
  store i32 %303, i32* %274, align 4
  br label %310

309:                                              ; preds = %306
  store i32 0, i32* %243, align 4
  store i32 %304, i32* %242, align 4
  br label %310

310:                                              ; preds = %309, %308, %302
  %311 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %312 = bitcast [16 x i8]* %311 to i32*
  %313 = select i1 %219, i32* %229, i32* %312
  %314 = load i32, i32* %313, align 4
  %315 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %316 = bitcast [16 x i8]* %315 to i32*
  %317 = select i1 %251, i32* %261, i32* %316
  %318 = load i32, i32* %317, align 4
  %319 = icmp eq i32 %314, %318
  br i1 %319, label %324, label %320

320:                                              ; preds = %310
  %321 = icmp eq i32 %314, 1
  br i1 %321, label %323, label %322

322:                                              ; preds = %320
  store i32 0, i32* %267, align 4
  store i32 %314, i32* %266, align 4
  br label %324

323:                                              ; preds = %320
  store i32 0, i32* %235, align 4
  store i32 %318, i32* %234, align 4
  br label %324

324:                                              ; preds = %323, %322, %310
  %325 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %326 = bitcast i8* %325 to i32*
  %327 = select i1 %219, i32* %221, i32* %326
  %328 = load i32, i32* %327, align 4
  %329 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %330 = bitcast i8* %329 to i32*
  %331 = select i1 %251, i32* %253, i32* %330
  %332 = load i32, i32* %331, align 4
  %333 = icmp eq i32 %328, %332
  br i1 %333, label %338, label %334

334:                                              ; preds = %324
  %335 = icmp eq i32 %328, 1
  br i1 %335, label %337, label %336

336:                                              ; preds = %334
  store i32 0, i32* %259, align 4
  store i32 %328, i32* %258, align 4
  br label %338

337:                                              ; preds = %334
  store i32 0, i32* %227, align 4
  store i32 %332, i32* %226, align 4
  br label %338

338:                                              ; preds = %337, %336, %324
  %339 = xor i1 %251, true
  %340 = icmp eq i32* %252, null
  %341 = or i1 %340, %339
  br i1 %341, label %291, label %289
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastBinaryFunction4DSlowIfffEEvRKNS_12RuntimeShapeEPKT0_S4_PKT1_S4_PT_PFSB_S5_S8_E(%"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, float (float, float)*) local_unnamed_addr #7 comdat {
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::NdArrayDesc", align 4
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %12 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %13, align 8, !alias.scope !78
  %14 = load i32, i32* %11, align 8, !noalias !78
  %15 = icmp sgt i32 %14, 4
  br i1 %15, label %16, label %17

16:                                               ; preds = %7
  tail call void @abort() #13, !noalias !78
  unreachable

17:                                               ; preds = %7
  store i32 4, i32* %13, align 8, !alias.scope !78
  %18 = sub i32 4, %14
  %19 = icmp sgt i32 %18, 0
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %19, label %21, label %101

21:                                               ; preds = %17
  %22 = bitcast %union.anon* %20 to [5 x i32]*
  %23 = zext i32 %18 to i64
  %24 = icmp ult i32 %18, 8
  br i1 %24, label %94, label %25

25:                                               ; preds = %21
  %26 = and i64 %23, 4294967288
  %27 = add nsw i64 %26, -8
  %28 = lshr exact i64 %27, 3
  %29 = add nuw nsw i64 %28, 1
  %30 = and i64 %29, 7
  %31 = icmp ult i64 %27, 56
  br i1 %31, label %79, label %32

32:                                               ; preds = %25
  %33 = sub nsw i64 %29, %30
  br label %34

34:                                               ; preds = %34, %32
  %35 = phi i64 [ 0, %32 ], [ %76, %34 ]
  %36 = phi i64 [ %33, %32 ], [ %77, %34 ]
  %37 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %35
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !78
  %39 = getelementptr inbounds i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !78
  %41 = or i64 %35, 8
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %41
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !78
  %44 = getelementptr inbounds i32, i32* %42, i64 4
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !78
  %46 = or i64 %35, 16
  %47 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %46
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !78
  %49 = getelementptr inbounds i32, i32* %47, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !78
  %51 = or i64 %35, 24
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %51
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !78
  %54 = getelementptr inbounds i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !78
  %56 = or i64 %35, 32
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !78
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !78
  %61 = or i64 %35, 40
  %62 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !78
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !78
  %66 = or i64 %35, 48
  %67 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %66
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !78
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !78
  %71 = or i64 %35, 56
  %72 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %71
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !78
  %74 = getelementptr inbounds i32, i32* %72, i64 4
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !78
  %76 = add i64 %35, 64
  %77 = add i64 %36, -8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %34, !llvm.loop !81

79:                                               ; preds = %34, %25
  %80 = phi i64 [ 0, %25 ], [ %76, %34 ]
  %81 = icmp eq i64 %30, 0
  br i1 %81, label %92, label %82

82:                                               ; preds = %79, %82
  %83 = phi i64 [ %89, %82 ], [ %80, %79 ]
  %84 = phi i64 [ %90, %82 ], [ %30, %79 ]
  %85 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %83
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !78
  %87 = getelementptr inbounds i32, i32* %85, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !78
  %89 = add i64 %83, 8
  %90 = add i64 %84, -1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %82, !llvm.loop !82

92:                                               ; preds = %82, %79
  %93 = icmp eq i64 %26, %23
  br i1 %93, label %101, label %94

94:                                               ; preds = %92, %21
  %95 = phi i64 [ 0, %21 ], [ %26, %92 ]
  br label %96

96:                                               ; preds = %94, %96
  %97 = phi i64 [ %99, %96 ], [ %95, %94 ]
  %98 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %97
  store i32 1, i32* %98, align 4, !alias.scope !78
  %99 = add nuw nsw i64 %97, 1
  %100 = icmp eq i64 %99, %23
  br i1 %100, label %101, label %96, !llvm.loop !83

101:                                              ; preds = %96, %92, %17
  %102 = getelementptr inbounds %union.anon, %union.anon* %20, i64 0, i32 0
  %103 = bitcast %union.anon* %20 to i32*
  %104 = sext i32 %18 to i64
  %105 = getelementptr inbounds i32, i32* %103, i64 %104
  %106 = bitcast i32* %105 to i8*
  %107 = icmp sgt i32 %14, 5
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %109 = getelementptr inbounds %union.anon, %union.anon* %108, i64 0, i32 0
  %110 = load i32*, i32** %109, align 8, !noalias !78
  %111 = bitcast %union.anon* %108 to i32*
  %112 = select i1 %107, i32* %110, i32* %111
  %113 = bitcast i32* %112 to i8*
  %114 = sext i32 %14 to i64
  %115 = shl nsw i64 %114, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %113, i64 %115, i1 false) #12
  %116 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %116) #12
  %117 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 0
  %118 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 1
  %119 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 2
  %120 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %9, i64 0, i32 1, i64 3
  %121 = bitcast %"struct.tflite::NdArrayDesc"* %10 to i8*
  %122 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %122, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %121) #12
  %123 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 0
  %124 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 1
  %125 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 2
  %126 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %10, i64 0, i32 1, i64 3
  %127 = bitcast %"struct.tflite::NdArrayDesc"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %127, i8 -86, i64 32, i1 false)
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %2, %"struct.tflite::NdArrayDesc"* nonnull %9, %"struct.tflite::NdArrayDesc"* nonnull %10)
  %128 = load i32, i32* %13, align 8
  %129 = icmp sgt i32 %128, 5
  %130 = load i32*, i32** %102, align 8
  %131 = select i1 %129, i32* %130, i32* %103
  %132 = load i32, i32* %131, align 4
  %133 = icmp sgt i32 %132, 0
  br i1 %133, label %134, label %153

134:                                              ; preds = %101
  %135 = bitcast %union.anon* %20 to [5 x i32]*
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %135, i64 0, i64 1
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %138 = bitcast [16 x i8]* %137 to i32*
  %139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %140 = bitcast i8* %139 to i32*
  %141 = getelementptr inbounds i32, i32* %103, i64 1
  %142 = getelementptr inbounds i32, i32* %130, i64 1
  %143 = select i1 %129, i32* %142, i32* %136
  %144 = getelementptr inbounds i32, i32* %130, i64 2
  %145 = select i1 %129, i32* %144, i32* %138
  %146 = getelementptr inbounds i32, i32* %130, i64 3
  %147 = select i1 %129, i32* %146, i32* %140
  br label %148

148:                                              ; preds = %134, %172
  %149 = phi i32 [ %132, %134 ], [ %173, %172 ]
  %150 = phi i32 [ 0, %134 ], [ %174, %172 ]
  %151 = load i32, i32* %143, align 4
  %152 = icmp sgt i32 %151, 0
  br i1 %152, label %160, label %172

153:                                              ; preds = %172, %101
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %121) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %116) #12
  %154 = xor i1 %129, true
  %155 = icmp eq i32* %130, null
  %156 = or i1 %155, %154
  br i1 %156, label %159, label %157

157:                                              ; preds = %153
  %158 = bitcast i32* %130 to i8*
  call void @_ZdaPv(i8* %158) #11
  br label %159

159:                                              ; preds = %153, %157
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #12
  ret void

160:                                              ; preds = %148, %189
  %161 = phi i32 [ %190, %189 ], [ %151, %148 ]
  %162 = phi i32 [ %191, %189 ], [ 0, %148 ]
  %163 = load i32, i32* %145, align 4
  %164 = icmp sgt i32 %163, 0
  br i1 %164, label %165, label %189

165:                                              ; preds = %160
  %166 = load i32, i32* %141, align 4
  %167 = mul nsw i32 %166, %150
  %168 = add nsw i32 %167, %162
  %169 = load i32, i32* %147, align 4
  br label %176

170:                                              ; preds = %189
  %171 = load i32, i32* %131, align 4
  br label %172

172:                                              ; preds = %170, %148
  %173 = phi i32 [ %171, %170 ], [ %149, %148 ]
  %174 = add nuw nsw i32 %150, 1
  %175 = icmp slt i32 %174, %173
  br i1 %175, label %148, label %153

176:                                              ; preds = %165, %195
  %177 = phi i32 [ %163, %165 ], [ %196, %195 ]
  %178 = phi i32 [ %169, %165 ], [ %197, %195 ]
  %179 = phi i32 [ 0, %165 ], [ %198, %195 ]
  %180 = icmp sgt i32 %178, 0
  br i1 %180, label %181, label %195

181:                                              ; preds = %176
  %182 = load i32, i32* %138, align 8
  %183 = mul nsw i32 %168, %182
  %184 = add nsw i32 %183, %179
  %185 = load i32, i32* %140, align 4
  %186 = mul nsw i32 %184, %185
  br label %200

187:                                              ; preds = %195
  %188 = load i32, i32* %143, align 4
  br label %189

189:                                              ; preds = %187, %160
  %190 = phi i32 [ %188, %187 ], [ %161, %160 ]
  %191 = add nuw nsw i32 %162, 1
  %192 = icmp slt i32 %191, %190
  br i1 %192, label %160, label %170

193:                                              ; preds = %200
  %194 = load i32, i32* %145, align 4
  br label %195

195:                                              ; preds = %193, %176
  %196 = phi i32 [ %194, %193 ], [ %177, %176 ]
  %197 = phi i32 [ %235, %193 ], [ %178, %176 ]
  %198 = add nuw nsw i32 %179, 1
  %199 = icmp slt i32 %198, %196
  br i1 %199, label %176, label %187

200:                                              ; preds = %181, %200
  %201 = phi i32 [ 0, %181 ], [ %234, %200 ]
  %202 = add nsw i32 %186, %201
  %203 = load i32, i32* %117, align 4
  %204 = mul nsw i32 %203, %150
  %205 = load i32, i32* %118, align 4
  %206 = mul nsw i32 %205, %162
  %207 = add nsw i32 %206, %204
  %208 = load i32, i32* %119, align 4
  %209 = mul nsw i32 %208, %179
  %210 = add nsw i32 %207, %209
  %211 = load i32, i32* %120, align 4
  %212 = mul nsw i32 %211, %201
  %213 = add nsw i32 %210, %212
  %214 = load i32, i32* %123, align 4
  %215 = mul nsw i32 %214, %150
  %216 = load i32, i32* %124, align 4
  %217 = mul nsw i32 %216, %162
  %218 = add nsw i32 %217, %215
  %219 = load i32, i32* %125, align 4
  %220 = mul nsw i32 %219, %179
  %221 = add nsw i32 %218, %220
  %222 = load i32, i32* %126, align 4
  %223 = mul nsw i32 %222, %201
  %224 = add nsw i32 %221, %223
  %225 = sext i32 %213 to i64
  %226 = getelementptr inbounds float, float* %1, i64 %225
  %227 = load float, float* %226, align 4
  %228 = sext i32 %224 to i64
  %229 = getelementptr inbounds float, float* %3, i64 %228
  %230 = load float, float* %229, align 4
  %231 = call float %6(float %227, float %230) #12
  %232 = sext i32 %202 to i64
  %233 = getelementptr inbounds float, float* %5, i64 %232
  store float %231, float* %233, align 4
  %234 = add nuw nsw i32 %201, 1
  %235 = load i32, i32* %147, align 4
  %236 = icmp slt i32 %234, %235
  br i1 %236, label %200, label %193
}

; Function Attrs: nounwind readnone ssp uwtable
define internal float @_ZN6tflite3ops7builtin9floor_div12_GLOBAL__N_18FloorDivIfEET_S5_S5_(float, float) #8 {
  %3 = fpext float %0 to double
  %4 = fpext float %1 to double
  %5 = fdiv double %3, %4
  %6 = tail call double @llvm.floor.f64(double %5)
  %7 = fptrunc double %6 to float
  ret float %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind readnone speculatable
declare <4 x double> @llvm.floor.v4f64(<4 x double>) #10

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!7 = distinct !{!7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!10 = distinct !{!10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!13 = distinct !{!13, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!16 = distinct !{!16, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!19 = distinct !{!19, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!22 = distinct !{!22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.isvectorized", i32 1}
!25 = distinct !{!25, !4}
!26 = distinct !{!26, !27, !24}
!27 = !{!"llvm.loop.unroll.runtime.disable"}
!28 = distinct !{!28, !4}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!31 = distinct !{!31, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!34 = distinct !{!34, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!37 = distinct !{!37, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!40 = distinct !{!40, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!43 = distinct !{!43, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!46 = distinct !{!46, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!47 = distinct !{!47, !24}
!48 = distinct !{!48, !4}
!49 = distinct !{!49, !27, !24}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = !{!56}
!56 = distinct !{!56, !52}
!57 = !{!51, !54}
!58 = distinct !{!58, !24}
!59 = distinct !{!59, !24}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!62 = distinct !{!62, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!63 = distinct !{!63, !24}
!64 = distinct !{!64, !4}
!65 = distinct !{!65, !27, !24}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!68 = distinct !{!68, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!69 = distinct !{!69, !24}
!70 = distinct !{!70, !4}
!71 = distinct !{!71, !27, !24}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!74 = distinct !{!74, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!75 = distinct !{!75, !24}
!76 = distinct !{!76, !4}
!77 = distinct !{!77, !27, !24}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!80 = distinct !{!80, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!81 = distinct !{!81, !24}
!82 = distinct !{!82, !4}
!83 = distinct !{!83, !27, !24}
