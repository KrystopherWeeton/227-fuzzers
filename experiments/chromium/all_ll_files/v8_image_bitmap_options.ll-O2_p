; ModuleID = 'gen/third_party/blink/renderer/bindings/core/v8/v8_image_bitmap_options.cc'
source_filename = "gen/third_party/blink/renderer/bindings/core/v8/v8_image_bitmap_options.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.77", i32, [4 x i8], %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.213", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.229", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.247", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.254", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.193", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.113" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__atomic_base.115" }
%"struct.std::__1::__atomic_base.115" = type { %"struct.std::__1::__cxx_atomic_impl.116" }
%"struct.std::__1::__cxx_atomic_impl.116" = type { %"struct.std::__1::__cxx_atomic_base_impl.117" }
%"struct.std::__1::__cxx_atomic_base_impl.117" = type { i64 }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist.124"* }
%"class.blink::Worklist.124" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::Worklist.152"* }
%"class.blink::Worklist.152" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::Worklist.159"* }
%"class.blink::Worklist.159" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::Worklist.166"* }
%"class.blink::Worklist.166" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.173", %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.187", [4 x i8] }>
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175", %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { i64 }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { float }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.196", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.205" }
%"class.WTF::Vector.205" = type { %"class.WTF::VectorBuffer.206" }
%"class.WTF::VectorBuffer.206" = type { %"class.WTF::VectorBufferBase.207" }
%"class.WTF::VectorBufferBase.207" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.221" }
%"class.WTF::VectorBuffer.221" = type { %"class.WTF::VectorBufferBase.222" }
%"class.WTF::VectorBufferBase.222" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.235" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.124"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.131"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.138"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.145"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.152"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.285" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.253 }
%class.scoped_refptr.253 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.254" = type { %"struct.std::__1::__atomic_base.255" }
%"struct.std::__1::__atomic_base.255" = type { %"struct.std::__1::__cxx_atomic_impl.256" }
%"struct.std::__1::__cxx_atomic_impl.256" = type { %"struct.std::__1::__cxx_atomic_base_impl.257" }
%"struct.std::__1::__cxx_atomic_base_impl.257" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.v8::Value" = type { i8 }
%"class.blink::ImageBitmapOptions" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.24", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.71", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.258", %"class.std::__1::unique_ptr.263", %"class.blink::Persistent.269", %"class.blink::Persistent.273", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.8", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", i32, i32 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.24" = type { %"class.WTF::HashTable.25" }
%"class.WTF::HashTable.25" = type <{ %"struct.WTF::KeyValuePair.28"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.28" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.37", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.32", i8* }
%"class.WTF::HashMap.32" = type { %"class.WTF::HashTable.33" }
%"class.WTF::HashTable.33" = type <{ %"struct.WTF::KeyValuePair.36"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.36" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.37" = type { %"class.v8::PersistentValueMapBase.38" }
%"class.v8::PersistentValueMapBase.38" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.39", i8* }
%"class.WTF::HashMap.39" = type { %"class.WTF::HashTable.40" }
%"class.WTF::HashTable.40" = type <{ %"struct.WTF::KeyValuePair.43"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.43" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.44" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.55", %"class.WTF::Vector.61", i8, i32 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.61" = type { %"class.WTF::VectorBuffer.62" }
%"class.WTF::VectorBuffer.62" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.292, %"class.blink::Member.311", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.292 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.293", i32, i32, %"class.blink::Persistent.295" }
%"class.WTF::RefCounted.293" = type { %"class.base::RefCounted.294" }
%"class.base::RefCounted.294" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.295" = type { %"class.blink::PersistentBase.296" }
%"class.blink::PersistentBase.296" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.301" }
%"class.WTF::HashMap.301" = type { %"class.WTF::HashTable.302" }
%"class.WTF::HashTable.302" = type <{ %"struct.WTF::KeyValuePair.304"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.304" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.308" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.305" }
%"class.blink::MemberBase.305" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.308" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.308" = type { %"class.v8::TracedReference.309" }
%"class.v8::TracedReference.309" = type { %"class.v8::BasicTracedReference.310" }
%"class.v8::BasicTracedReference.310" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.311" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.258" = type { %"class.WTF::VectorBuffer.259" }
%"class.WTF::VectorBuffer.259" = type { %"class.WTF::VectorBufferBase.260" }
%"class.WTF::VectorBufferBase.260" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.269" = type { %"class.blink::PersistentBase.270" }
%"class.blink::PersistentBase.270" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.273" = type { %"class.blink::PersistentBase.274" }
%"class.blink::PersistentBase.274" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.279" }
%"class.WTF::Vector.279" = type { %"class.WTF::VectorBuffer.280" }
%"class.WTF::VectorBuffer.280" = type { %"class.WTF::VectorBufferBase.281" }
%"class.WTF::VectorBufferBase.281" = type { %"struct.std::__1::pair.282"*, i32, i32 }
%"struct.std::__1::pair.282" = type { %"class.blink::UntracedMember", %"class.blink::Member" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase.283" }
%"class.blink::MemberBase.283" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.313" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::String" = type { i8 }
%"class.v8::Uint32" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::Integer" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.v8::Int32" = type { i8 }

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@_ZZN5blink20V8ImageBitmapOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18ImageBitmapOptionsERNS_14ExceptionStateEE12kValidValues = internal constant [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0)], align 16
@.str.1 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"ColorSpaceConversion\00", align 1
@_ZZN5blink20V8ImageBitmapOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18ImageBitmapOptionsERNS_14ExceptionStateEE12kValidValues_0 = internal constant [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0)], align 16
@.str.4 = private unnamed_addr constant [6 x i8] c"flipY\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"ImageOrientation\00", align 1
@_ZZN5blink20V8ImageBitmapOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18ImageBitmapOptionsERNS_14ExceptionStateEE12kValidValues_1 = internal constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0)], align 16
@.str.6 = private unnamed_addr constant [12 x i8] c"premultiply\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"PremultiplyAlpha\00", align 1
@_ZZN5blink20V8ImageBitmapOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18ImageBitmapOptionsERNS_14ExceptionStateEE12kValidValues_2 = internal constant [4 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0)], align 16
@.str.8 = private unnamed_addr constant [10 x i8] c"pixelated\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"low\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"medium\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"high\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"ResizeQuality\00", align 1
@_ZZN5blinkL31eternalV8ImageBitmapOptionsKeysEPN2v87IsolateEE5kKeys = internal constant [6 x i8*] [i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i32 0, i32 0)], align 16
@.str.13 = private unnamed_addr constant [21 x i8] c"colorSpaceConversion\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"imageOrientation\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"premultiplyAlpha\00", align 1
@.str.16 = private unnamed_addr constant [13 x i8] c"resizeHeight\00", align 1
@.str.17 = private unnamed_addr constant [14 x i8] c"resizeQuality\00", align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"resizeWidth\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 6, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZZN5blinkL31eternalV8ImageBitmapOptionsKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.20 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.21 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20V8ImageBitmapOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18ImageBitmapOptionsERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ImageBitmapOptions"* nocapture, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.blink::V8StringResource", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::V8StringResource", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.blink::V8StringResource", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.blink::V8StringResource", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = icmp eq %"class.v8::Value"* %1, null
  br i1 %18, label %1112, label %19

19:                                               ; preds = %4
  %20 = bitcast %"class.v8::Value"* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 3
  %23 = icmp eq i64 %22, 1
  br i1 %23, label %24, label %40

24:                                               ; preds = %19
  %25 = add i64 %21, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i64 %21, -4294967296
  %29 = zext i32 %27 to i64
  %30 = or i64 %28, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = icmp eq i16 %33, 67
  br i1 %34, label %35, label %40

35:                                               ; preds = %24
  %36 = add i64 %21, 23
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = ashr i32 %38, 1
  switch i32 %39, label %40 [
    i32 5, label %1112
    i32 3, label %1112
  ]

40:                                               ; preds = %35, %24, %19
  %41 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #7
  br i1 %41, label %43, label %42

42:                                               ; preds = %40
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0)) #7
  br label %1112

43:                                               ; preds = %40
  %44 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %45 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %46 = add i64 %45, 8
  %47 = inttoptr i64 %46 to %"class.blink::V8PerIsolateData"**
  %48 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %47, align 8
  %49 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %48, i8* bitcast ([6 x i8*]* @_ZZN5blinkL31eternalV8ImageBitmapOptionsKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.313"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.313"*)) #7
  %50 = extractvalue { i64, %"class.v8::Eternal"* } %49, 1
  %51 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %51) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #7
  %52 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #7
  %53 = bitcast %"class.v8::Eternal"* %50 to %"class.v8::Value"**
  %54 = load %"class.v8::Value"*, %"class.v8::Value"** %53, align 8
  %55 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %54) #7
  %56 = icmp eq %"class.v8::Value"* %55, null
  br i1 %56, label %57, label %63

57:                                               ; preds = %43
  %58 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %59 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %60 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %60, i64 5
  %62 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %61, align 8
  call void %62(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %58) #7
  br label %1111

63:                                               ; preds = %43
  %64 = bitcast %"class.v8::Value"* %55 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = and i64 %65, 3
  %67 = icmp eq i64 %66, 1
  br i1 %67, label %68, label %85

68:                                               ; preds = %63
  %69 = add i64 %65, -1
  %70 = inttoptr i64 %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = and i64 %65, -4294967296
  %73 = zext i32 %71 to i64
  %74 = or i64 %72, %73
  %75 = add i64 %74, 7
  %76 = inttoptr i64 %75 to i16*
  %77 = load i16, i16* %76, align 2
  %78 = icmp eq i16 %77, 67
  br i1 %78, label %79, label %85

79:                                               ; preds = %68
  %80 = add i64 %65, 23
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, -2
  %84 = icmp eq i32 %83, 10
  br i1 %84, label %291, label %85

85:                                               ; preds = %68, %63, %79
  %86 = bitcast %"class.blink::V8StringResource"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %86) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 152, i1 false)
  %87 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %55, %"class.v8::Value"** %87, align 8
  %88 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 1
  store i32 0, i32* %88, align 8
  %89 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %89, align 8
  %90 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1
  %91 = bitcast %"class.std::__1::unique_ptr"* %90 to i64*
  store i64 0, i64* %91, align 8
  %92 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %6, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %92, label %93, label %269

93:                                               ; preds = %85
  %94 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #7
  %95 = load %"class.v8::Value"*, %"class.v8::Value"** %87, align 8
  %96 = icmp eq %"class.v8::Value"* %95, null
  br i1 %96, label %101, label %97, !prof !2

97:                                               ; preds = %93
  %98 = bitcast %"class.v8::Value"* %95 to %"class.v8::String"*
  %99 = load i32, i32* %88, align 8
  %100 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %98, i32 %99) #7
  br label %121

101:                                              ; preds = %93
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %121

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i33
  %113 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #7
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !2

118:                                              ; preds = %109
  call void @llvm.trap() #7
  unreachable

119:                                              ; preds = %109
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %110, align 4
  br label %121

121:                                              ; preds = %97, %101, %104, %119
  %122 = phi %"class.WTF::StringImpl"* [ %100, %97 ], [ null, %101 ], [ %102, %104 ], [ %102, %119 ]
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %123, align 8
  %124 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i64 20) #7
  %125 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %7, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZZN5blink20V8ImageBitmapOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18ImageBitmapOptionsERNS_14ExceptionStateEE12kValidValues, i64 0, i64 0), i64 2, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %126 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %121
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #7
  br label %142

142:                                              ; preds = %121, %138, %141
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #7
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #7
  br label %158

158:                                              ; preds = %142, %154, %157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #7
  br i1 %125, label %159, label %269

159:                                              ; preds = %158
  %160 = load %"class.v8::Value"*, %"class.v8::Value"** %87, align 8
  %161 = icmp eq %"class.v8::Value"* %160, null
  br i1 %161, label %162, label %186, !prof !2

162:                                              ; preds = %159
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %165, label %167

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %2, i64 0, i32 4
  br label %211

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %184

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = zext i32 %174 to i33
  %176 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %175, i33 1) #7
  %177 = extractvalue { i33, i1 } %176, 1
  %178 = extractvalue { i33, i1 } %176, 0
  %179 = icmp slt i33 %178, 0
  %180 = or i1 %177, %179
  br i1 %180, label %181, label %182, !prof !2

181:                                              ; preds = %172
  call void @llvm.trap() #7
  unreachable

182:                                              ; preds = %172
  %183 = trunc i33 %178 to i32
  store i32 %183, i32* %173, align 4
  br label %184

184:                                              ; preds = %167, %182
  %185 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %2, i64 0, i32 4
  br label %192

186:                                              ; preds = %159
  %187 = bitcast %"class.v8::Value"* %160 to %"class.v8::String"*
  %188 = load i32, i32* %88, align 8
  %189 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %187, i32 %188) #7
  %190 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %2, i64 0, i32 4
  %191 = icmp eq %"class.WTF::StringImpl"* %189, null
  br i1 %191, label %211, label %192

192:                                              ; preds = %184, %186
  %193 = phi %"class.WTF::String"* [ %185, %184 ], [ %190, %186 ]
  %194 = phi %"class.WTF::StringImpl"* [ %163, %184 ], [ %189, %186 ]
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %192
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #7
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !2

208:                                              ; preds = %199
  call void @llvm.trap() #7
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %165, %209, %192, %186
  %212 = phi i1 [ false, %209 ], [ false, %192 ], [ true, %186 ], [ true, %165 ]
  %213 = phi %"class.WTF::String"* [ %193, %209 ], [ %193, %192 ], [ %190, %186 ], [ %166, %165 ]
  %214 = phi %"class.WTF::StringImpl"* [ %194, %209 ], [ %194, %192 ], [ null, %186 ], [ null, %165 ]
  %215 = ptrtoint %"class.WTF::StringImpl"* %214 to i64
  %216 = bitcast %"class.WTF::String"* %213 to i64*
  %217 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %213, i64 0, i32 0, i32 0
  %218 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %217, align 8
  store i64 %215, i64* %216, align 8
  %219 = icmp eq %"class.WTF::StringImpl"* %218, null
  br i1 %219, label %233, label %220

220:                                              ; preds = %211
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load atomic i32, i32* %221 monotonic, align 4
  %223 = and i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 0
  %226 = load i32, i32* %225, align 4
  br i1 %224, label %227, label %229

227:                                              ; preds = %220
  %228 = add i32 %226, -1
  store i32 %228, i32* %225, align 4
  br label %229

229:                                              ; preds = %227, %220
  %230 = phi i32 [ %228, %227 ], [ %226, %220 ]
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %229
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %218) #7
  br label %233

233:                                              ; preds = %211, %229, %232
  br i1 %212, label %247, label %234

234:                                              ; preds = %233
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load atomic i32, i32* %235 monotonic, align 4
  %237 = and i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  br i1 %238, label %241, label %243

241:                                              ; preds = %234
  %242 = add i32 %240, -1
  store i32 %242, i32* %239, align 4
  br label %243

243:                                              ; preds = %241, %234
  %244 = phi i32 [ %242, %241 ], [ %240, %234 ]
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %243
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %214) #7
  br label %247

247:                                              ; preds = %233, %243, %246
  %248 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %249 = load i8*, i8** %248, align 8
  store i8* null, i8** %248, align 8
  %250 = icmp eq i8* %249, null
  br i1 %250, label %252, label %251

251:                                              ; preds = %247
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %249) #7
  br label %252

252:                                              ; preds = %251, %247
  %253 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %254 = icmp eq %"class.WTF::StringImpl"* %253, null
  br i1 %254, label %268, label %255

255:                                              ; preds = %252
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = load atomic i32, i32* %256 monotonic, align 4
  %258 = and i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 0
  %261 = load i32, i32* %260, align 4
  br i1 %259, label %262, label %264

262:                                              ; preds = %255
  %263 = add i32 %261, -1
  store i32 %263, i32* %260, align 4
  br label %264

264:                                              ; preds = %262, %255
  %265 = phi i32 [ %263, %262 ], [ %261, %255 ]
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %268

267:                                              ; preds = %264
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %253) #7
  br label %268

268:                                              ; preds = %252, %264, %267
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %86) #7
  br label %291

269:                                              ; preds = %158, %85
  %270 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %271 = load i8*, i8** %270, align 8
  store i8* null, i8** %270, align 8
  %272 = icmp eq i8* %271, null
  br i1 %272, label %274, label %273

273:                                              ; preds = %269
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %271) #7
  br label %274

274:                                              ; preds = %273, %269
  %275 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %276 = icmp eq %"class.WTF::StringImpl"* %275, null
  br i1 %276, label %290, label %277

277:                                              ; preds = %274
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  br i1 %281, label %284, label %286

284:                                              ; preds = %277
  %285 = add i32 %283, -1
  store i32 %285, i32* %282, align 4
  br label %286

286:                                              ; preds = %284, %277
  %287 = phi i32 [ %285, %284 ], [ %283, %277 ]
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %286
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %275) #7
  br label %290

290:                                              ; preds = %274, %286, %289
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %86) #7
  br label %1111

291:                                              ; preds = %268, %79
  %292 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 1, i32 0
  %293 = bitcast %"class.v8::Name"** %292 to %"class.v8::Value"**
  %294 = load %"class.v8::Value"*, %"class.v8::Value"** %293, align 8
  %295 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %294) #7
  %296 = icmp eq %"class.v8::Value"* %295, null
  br i1 %296, label %297, label %303

297:                                              ; preds = %291
  %298 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %299 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %300 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %299, align 8
  %301 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %300, i64 5
  %302 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %301, align 8
  call void %302(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %298) #7
  br label %1111

303:                                              ; preds = %291
  %304 = bitcast %"class.v8::Value"* %295 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = and i64 %305, 3
  %307 = icmp eq i64 %306, 1
  br i1 %307, label %308, label %325

308:                                              ; preds = %303
  %309 = add i64 %305, -1
  %310 = inttoptr i64 %309 to i32*
  %311 = load i32, i32* %310, align 4
  %312 = and i64 %305, -4294967296
  %313 = zext i32 %311 to i64
  %314 = or i64 %312, %313
  %315 = add i64 %314, 7
  %316 = inttoptr i64 %315 to i16*
  %317 = load i16, i16* %316, align 2
  %318 = icmp eq i16 %317, 67
  br i1 %318, label %319, label %325

319:                                              ; preds = %308
  %320 = add i64 %305, 23
  %321 = inttoptr i64 %320 to i32*
  %322 = load i32, i32* %321, align 4
  %323 = and i32 %322, -2
  %324 = icmp eq i32 %323, 10
  br i1 %324, label %531, label %325

325:                                              ; preds = %308, %303, %319
  %326 = bitcast %"class.blink::V8StringResource"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %326) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %326, i8 -86, i64 152, i1 false)
  %327 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %295, %"class.v8::Value"** %327, align 8
  %328 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 1
  store i32 0, i32* %328, align 8
  %329 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %329, align 8
  %330 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1
  %331 = bitcast %"class.std::__1::unique_ptr"* %330 to i64*
  store i64 0, i64* %331, align 8
  %332 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %9, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %332, label %333, label %509

333:                                              ; preds = %325
  %334 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %334) #7
  %335 = load %"class.v8::Value"*, %"class.v8::Value"** %327, align 8
  %336 = icmp eq %"class.v8::Value"* %335, null
  br i1 %336, label %341, label %337, !prof !2

337:                                              ; preds = %333
  %338 = bitcast %"class.v8::Value"* %335 to %"class.v8::String"*
  %339 = load i32, i32* %328, align 8
  %340 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %338, i32 %339) #7
  br label %361

341:                                              ; preds = %333
  %342 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %329, align 8
  %343 = icmp eq %"class.WTF::StringImpl"* %342, null
  br i1 %343, label %361, label %344

344:                                              ; preds = %341
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = load atomic i32, i32* %345 monotonic, align 4
  %347 = and i32 %346, 2
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %349, label %361

349:                                              ; preds = %344
  %350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 0
  %351 = load i32, i32* %350, align 4
  %352 = zext i32 %351 to i33
  %353 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %352, i33 1) #7
  %354 = extractvalue { i33, i1 } %353, 1
  %355 = extractvalue { i33, i1 } %353, 0
  %356 = icmp slt i33 %355, 0
  %357 = or i1 %354, %356
  br i1 %357, label %358, label %359, !prof !2

358:                                              ; preds = %349
  call void @llvm.trap() #7
  unreachable

359:                                              ; preds = %349
  %360 = trunc i33 %355 to i32
  store i32 %360, i32* %350, align 4
  br label %361

361:                                              ; preds = %337, %341, %344, %359
  %362 = phi %"class.WTF::StringImpl"* [ %340, %337 ], [ null, %341 ], [ %342, %344 ], [ %342, %359 ]
  %363 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %362, %"class.WTF::StringImpl"** %363, align 8
  %364 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %364) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i64 16) #7
  %365 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %10, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZZN5blink20V8ImageBitmapOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18ImageBitmapOptionsERNS_14ExceptionStateEE12kValidValues_0, i64 0, i64 0), i64 2, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %366 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %366, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %367, null
  br i1 %368, label %382, label %369

369:                                              ; preds = %361
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %371 = load atomic i32, i32* %370 monotonic, align 4
  %372 = and i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 0
  %375 = load i32, i32* %374, align 4
  br i1 %373, label %376, label %378

376:                                              ; preds = %369
  %377 = add i32 %375, -1
  store i32 %377, i32* %374, align 4
  br label %378

378:                                              ; preds = %376, %369
  %379 = phi i32 [ %377, %376 ], [ %375, %369 ]
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %382

381:                                              ; preds = %378
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %367) #7
  br label %382

382:                                              ; preds = %361, %378, %381
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %364) #7
  %383 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %363, align 8
  %384 = icmp eq %"class.WTF::StringImpl"* %383, null
  br i1 %384, label %398, label %385

385:                                              ; preds = %382
  %386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %387 = load atomic i32, i32* %386 monotonic, align 4
  %388 = and i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 0
  %391 = load i32, i32* %390, align 4
  br i1 %389, label %392, label %394

392:                                              ; preds = %385
  %393 = add i32 %391, -1
  store i32 %393, i32* %390, align 4
  br label %394

394:                                              ; preds = %392, %385
  %395 = phi i32 [ %393, %392 ], [ %391, %385 ]
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %397, label %398

397:                                              ; preds = %394
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %383) #7
  br label %398

398:                                              ; preds = %382, %394, %397
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %334) #7
  br i1 %365, label %399, label %509

399:                                              ; preds = %398
  %400 = load %"class.v8::Value"*, %"class.v8::Value"** %327, align 8
  %401 = icmp eq %"class.v8::Value"* %400, null
  br i1 %401, label %402, label %426, !prof !2

402:                                              ; preds = %399
  %403 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %329, align 8
  %404 = icmp eq %"class.WTF::StringImpl"* %403, null
  br i1 %404, label %405, label %407

405:                                              ; preds = %402
  %406 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %2, i64 0, i32 5
  br label %451

407:                                              ; preds = %402
  %408 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %403, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %409 = load atomic i32, i32* %408 monotonic, align 4
  %410 = and i32 %409, 2
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %412, label %424

412:                                              ; preds = %407
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %403, i64 0, i32 0
  %414 = load i32, i32* %413, align 4
  %415 = zext i32 %414 to i33
  %416 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %415, i33 1) #7
  %417 = extractvalue { i33, i1 } %416, 1
  %418 = extractvalue { i33, i1 } %416, 0
  %419 = icmp slt i33 %418, 0
  %420 = or i1 %417, %419
  br i1 %420, label %421, label %422, !prof !2

421:                                              ; preds = %412
  call void @llvm.trap() #7
  unreachable

422:                                              ; preds = %412
  %423 = trunc i33 %418 to i32
  store i32 %423, i32* %413, align 4
  br label %424

424:                                              ; preds = %407, %422
  %425 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %2, i64 0, i32 5
  br label %432

426:                                              ; preds = %399
  %427 = bitcast %"class.v8::Value"* %400 to %"class.v8::String"*
  %428 = load i32, i32* %328, align 8
  %429 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %427, i32 %428) #7
  %430 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %2, i64 0, i32 5
  %431 = icmp eq %"class.WTF::StringImpl"* %429, null
  br i1 %431, label %451, label %432

432:                                              ; preds = %424, %426
  %433 = phi %"class.WTF::String"* [ %425, %424 ], [ %430, %426 ]
  %434 = phi %"class.WTF::StringImpl"* [ %403, %424 ], [ %429, %426 ]
  %435 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %434, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %436 = load atomic i32, i32* %435 monotonic, align 4
  %437 = and i32 %436, 2
  %438 = icmp eq i32 %437, 0
  br i1 %438, label %439, label %451

439:                                              ; preds = %432
  %440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %434, i64 0, i32 0
  %441 = load i32, i32* %440, align 4
  %442 = zext i32 %441 to i33
  %443 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %442, i33 1) #7
  %444 = extractvalue { i33, i1 } %443, 1
  %445 = extractvalue { i33, i1 } %443, 0
  %446 = icmp slt i33 %445, 0
  %447 = or i1 %444, %446
  br i1 %447, label %448, label %449, !prof !2

448:                                              ; preds = %439
  call void @llvm.trap() #7
  unreachable

449:                                              ; preds = %439
  %450 = trunc i33 %445 to i32
  store i32 %450, i32* %440, align 4
  br label %451

451:                                              ; preds = %405, %449, %432, %426
  %452 = phi i1 [ false, %449 ], [ false, %432 ], [ true, %426 ], [ true, %405 ]
  %453 = phi %"class.WTF::String"* [ %433, %449 ], [ %433, %432 ], [ %430, %426 ], [ %406, %405 ]
  %454 = phi %"class.WTF::StringImpl"* [ %434, %449 ], [ %434, %432 ], [ null, %426 ], [ null, %405 ]
  %455 = ptrtoint %"class.WTF::StringImpl"* %454 to i64
  %456 = bitcast %"class.WTF::String"* %453 to i64*
  %457 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %453, i64 0, i32 0, i32 0
  %458 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %457, align 8
  store i64 %455, i64* %456, align 8
  %459 = icmp eq %"class.WTF::StringImpl"* %458, null
  br i1 %459, label %473, label %460

460:                                              ; preds = %451
  %461 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %458, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %462 = load atomic i32, i32* %461 monotonic, align 4
  %463 = and i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %458, i64 0, i32 0
  %466 = load i32, i32* %465, align 4
  br i1 %464, label %467, label %469

467:                                              ; preds = %460
  %468 = add i32 %466, -1
  store i32 %468, i32* %465, align 4
  br label %469

469:                                              ; preds = %467, %460
  %470 = phi i32 [ %468, %467 ], [ %466, %460 ]
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %472, label %473

472:                                              ; preds = %469
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %458) #7
  br label %473

473:                                              ; preds = %451, %469, %472
  br i1 %452, label %487, label %474

474:                                              ; preds = %473
  %475 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %454, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %476 = load atomic i32, i32* %475 monotonic, align 4
  %477 = and i32 %476, 2
  %478 = icmp eq i32 %477, 0
  %479 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %454, i64 0, i32 0
  %480 = load i32, i32* %479, align 4
  br i1 %478, label %481, label %483

481:                                              ; preds = %474
  %482 = add i32 %480, -1
  store i32 %482, i32* %479, align 4
  br label %483

483:                                              ; preds = %481, %474
  %484 = phi i32 [ %482, %481 ], [ %480, %474 ]
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %486, label %487

486:                                              ; preds = %483
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %454) #7
  br label %487

487:                                              ; preds = %473, %483, %486
  %488 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %489 = load i8*, i8** %488, align 8
  store i8* null, i8** %488, align 8
  %490 = icmp eq i8* %489, null
  br i1 %490, label %492, label %491

491:                                              ; preds = %487
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %489) #7
  br label %492

492:                                              ; preds = %491, %487
  %493 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %329, align 8
  %494 = icmp eq %"class.WTF::StringImpl"* %493, null
  br i1 %494, label %508, label %495

495:                                              ; preds = %492
  %496 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %493, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %497 = load atomic i32, i32* %496 monotonic, align 4
  %498 = and i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %493, i64 0, i32 0
  %501 = load i32, i32* %500, align 4
  br i1 %499, label %502, label %504

502:                                              ; preds = %495
  %503 = add i32 %501, -1
  store i32 %503, i32* %500, align 4
  br label %504

504:                                              ; preds = %502, %495
  %505 = phi i32 [ %503, %502 ], [ %501, %495 ]
  %506 = icmp eq i32 %505, 0
  br i1 %506, label %507, label %508

507:                                              ; preds = %504
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %493) #7
  br label %508

508:                                              ; preds = %492, %504, %507
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %326) #7
  br label %531

509:                                              ; preds = %398, %325
  %510 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %511 = load i8*, i8** %510, align 8
  store i8* null, i8** %510, align 8
  %512 = icmp eq i8* %511, null
  br i1 %512, label %514, label %513

513:                                              ; preds = %509
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %511) #7
  br label %514

514:                                              ; preds = %513, %509
  %515 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %329, align 8
  %516 = icmp eq %"class.WTF::StringImpl"* %515, null
  br i1 %516, label %530, label %517

517:                                              ; preds = %514
  %518 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %515, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %519 = load atomic i32, i32* %518 monotonic, align 4
  %520 = and i32 %519, 2
  %521 = icmp eq i32 %520, 0
  %522 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %515, i64 0, i32 0
  %523 = load i32, i32* %522, align 4
  br i1 %521, label %524, label %526

524:                                              ; preds = %517
  %525 = add i32 %523, -1
  store i32 %525, i32* %522, align 4
  br label %526

526:                                              ; preds = %524, %517
  %527 = phi i32 [ %525, %524 ], [ %523, %517 ]
  %528 = icmp eq i32 %527, 0
  br i1 %528, label %529, label %530

529:                                              ; preds = %526
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %515) #7
  br label %530

530:                                              ; preds = %514, %526, %529
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %326) #7
  br label %1111

531:                                              ; preds = %508, %319
  %532 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 2, i32 0
  %533 = bitcast %"class.v8::Name"** %532 to %"class.v8::Value"**
  %534 = load %"class.v8::Value"*, %"class.v8::Value"** %533, align 8
  %535 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %534) #7
  %536 = icmp eq %"class.v8::Value"* %535, null
  br i1 %536, label %537, label %543

537:                                              ; preds = %531
  %538 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %539 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %540 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %539, align 8
  %541 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %540, i64 5
  %542 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %541, align 8
  call void %542(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %538) #7
  br label %1111

543:                                              ; preds = %531
  %544 = bitcast %"class.v8::Value"* %535 to i64*
  %545 = load i64, i64* %544, align 8
  %546 = and i64 %545, 3
  %547 = icmp eq i64 %546, 1
  br i1 %547, label %548, label %565

548:                                              ; preds = %543
  %549 = add i64 %545, -1
  %550 = inttoptr i64 %549 to i32*
  %551 = load i32, i32* %550, align 4
  %552 = and i64 %545, -4294967296
  %553 = zext i32 %551 to i64
  %554 = or i64 %552, %553
  %555 = add i64 %554, 7
  %556 = inttoptr i64 %555 to i16*
  %557 = load i16, i16* %556, align 2
  %558 = icmp eq i16 %557, 67
  br i1 %558, label %559, label %565

559:                                              ; preds = %548
  %560 = add i64 %545, 23
  %561 = inttoptr i64 %560 to i32*
  %562 = load i32, i32* %561, align 4
  %563 = and i32 %562, -2
  %564 = icmp eq i32 %563, 10
  br i1 %564, label %771, label %565

565:                                              ; preds = %548, %543, %559
  %566 = bitcast %"class.blink::V8StringResource"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %566) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %566, i8 -86, i64 152, i1 false)
  %567 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %535, %"class.v8::Value"** %567, align 8
  %568 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 1
  store i32 0, i32* %568, align 8
  %569 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %569, align 8
  %570 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 3, i32 1
  %571 = bitcast %"class.std::__1::unique_ptr"* %570 to i64*
  store i64 0, i64* %571, align 8
  %572 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %12, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %572, label %573, label %749

573:                                              ; preds = %565
  %574 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %574) #7
  %575 = load %"class.v8::Value"*, %"class.v8::Value"** %567, align 8
  %576 = icmp eq %"class.v8::Value"* %575, null
  br i1 %576, label %581, label %577, !prof !2

577:                                              ; preds = %573
  %578 = bitcast %"class.v8::Value"* %575 to %"class.v8::String"*
  %579 = load i32, i32* %568, align 8
  %580 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %578, i32 %579) #7
  br label %601

581:                                              ; preds = %573
  %582 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %569, align 8
  %583 = icmp eq %"class.WTF::StringImpl"* %582, null
  br i1 %583, label %601, label %584

584:                                              ; preds = %581
  %585 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %582, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %586 = load atomic i32, i32* %585 monotonic, align 4
  %587 = and i32 %586, 2
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %589, label %601

589:                                              ; preds = %584
  %590 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %582, i64 0, i32 0
  %591 = load i32, i32* %590, align 4
  %592 = zext i32 %591 to i33
  %593 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %592, i33 1) #7
  %594 = extractvalue { i33, i1 } %593, 1
  %595 = extractvalue { i33, i1 } %593, 0
  %596 = icmp slt i33 %595, 0
  %597 = or i1 %594, %596
  br i1 %597, label %598, label %599, !prof !2

598:                                              ; preds = %589
  call void @llvm.trap() #7
  unreachable

599:                                              ; preds = %589
  %600 = trunc i33 %595 to i32
  store i32 %600, i32* %590, align 4
  br label %601

601:                                              ; preds = %577, %581, %584, %599
  %602 = phi %"class.WTF::StringImpl"* [ %580, %577 ], [ null, %581 ], [ %582, %584 ], [ %582, %599 ]
  %603 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %602, %"class.WTF::StringImpl"** %603, align 8
  %604 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %604) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i64 16) #7
  %605 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %13, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZZN5blink20V8ImageBitmapOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18ImageBitmapOptionsERNS_14ExceptionStateEE12kValidValues_1, i64 0, i64 0), i64 3, %"class.WTF::String"* nonnull dereferenceable(8) %14, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %606 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %607 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %606, align 8
  %608 = icmp eq %"class.WTF::StringImpl"* %607, null
  br i1 %608, label %622, label %609

609:                                              ; preds = %601
  %610 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %607, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %611 = load atomic i32, i32* %610 monotonic, align 4
  %612 = and i32 %611, 2
  %613 = icmp eq i32 %612, 0
  %614 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %607, i64 0, i32 0
  %615 = load i32, i32* %614, align 4
  br i1 %613, label %616, label %618

616:                                              ; preds = %609
  %617 = add i32 %615, -1
  store i32 %617, i32* %614, align 4
  br label %618

618:                                              ; preds = %616, %609
  %619 = phi i32 [ %617, %616 ], [ %615, %609 ]
  %620 = icmp eq i32 %619, 0
  br i1 %620, label %621, label %622

621:                                              ; preds = %618
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %607) #7
  br label %622

622:                                              ; preds = %601, %618, %621
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %604) #7
  %623 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %603, align 8
  %624 = icmp eq %"class.WTF::StringImpl"* %623, null
  br i1 %624, label %638, label %625

625:                                              ; preds = %622
  %626 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %623, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %627 = load atomic i32, i32* %626 monotonic, align 4
  %628 = and i32 %627, 2
  %629 = icmp eq i32 %628, 0
  %630 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %623, i64 0, i32 0
  %631 = load i32, i32* %630, align 4
  br i1 %629, label %632, label %634

632:                                              ; preds = %625
  %633 = add i32 %631, -1
  store i32 %633, i32* %630, align 4
  br label %634

634:                                              ; preds = %632, %625
  %635 = phi i32 [ %633, %632 ], [ %631, %625 ]
  %636 = icmp eq i32 %635, 0
  br i1 %636, label %637, label %638

637:                                              ; preds = %634
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %623) #7
  br label %638

638:                                              ; preds = %622, %634, %637
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %574) #7
  br i1 %605, label %639, label %749

639:                                              ; preds = %638
  %640 = load %"class.v8::Value"*, %"class.v8::Value"** %567, align 8
  %641 = icmp eq %"class.v8::Value"* %640, null
  br i1 %641, label %642, label %666, !prof !2

642:                                              ; preds = %639
  %643 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %569, align 8
  %644 = icmp eq %"class.WTF::StringImpl"* %643, null
  br i1 %644, label %645, label %647

645:                                              ; preds = %642
  %646 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %2, i64 0, i32 6
  br label %691

647:                                              ; preds = %642
  %648 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %643, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %649 = load atomic i32, i32* %648 monotonic, align 4
  %650 = and i32 %649, 2
  %651 = icmp eq i32 %650, 0
  br i1 %651, label %652, label %664

652:                                              ; preds = %647
  %653 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %643, i64 0, i32 0
  %654 = load i32, i32* %653, align 4
  %655 = zext i32 %654 to i33
  %656 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %655, i33 1) #7
  %657 = extractvalue { i33, i1 } %656, 1
  %658 = extractvalue { i33, i1 } %656, 0
  %659 = icmp slt i33 %658, 0
  %660 = or i1 %657, %659
  br i1 %660, label %661, label %662, !prof !2

661:                                              ; preds = %652
  call void @llvm.trap() #7
  unreachable

662:                                              ; preds = %652
  %663 = trunc i33 %658 to i32
  store i32 %663, i32* %653, align 4
  br label %664

664:                                              ; preds = %647, %662
  %665 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %2, i64 0, i32 6
  br label %672

666:                                              ; preds = %639
  %667 = bitcast %"class.v8::Value"* %640 to %"class.v8::String"*
  %668 = load i32, i32* %568, align 8
  %669 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %667, i32 %668) #7
  %670 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %2, i64 0, i32 6
  %671 = icmp eq %"class.WTF::StringImpl"* %669, null
  br i1 %671, label %691, label %672

672:                                              ; preds = %664, %666
  %673 = phi %"class.WTF::String"* [ %665, %664 ], [ %670, %666 ]
  %674 = phi %"class.WTF::StringImpl"* [ %643, %664 ], [ %669, %666 ]
  %675 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %676 = load atomic i32, i32* %675 monotonic, align 4
  %677 = and i32 %676, 2
  %678 = icmp eq i32 %677, 0
  br i1 %678, label %679, label %691

679:                                              ; preds = %672
  %680 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 0, i32 0
  %681 = load i32, i32* %680, align 4
  %682 = zext i32 %681 to i33
  %683 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %682, i33 1) #7
  %684 = extractvalue { i33, i1 } %683, 1
  %685 = extractvalue { i33, i1 } %683, 0
  %686 = icmp slt i33 %685, 0
  %687 = or i1 %684, %686
  br i1 %687, label %688, label %689, !prof !2

688:                                              ; preds = %679
  call void @llvm.trap() #7
  unreachable

689:                                              ; preds = %679
  %690 = trunc i33 %685 to i32
  store i32 %690, i32* %680, align 4
  br label %691

691:                                              ; preds = %645, %689, %672, %666
  %692 = phi i1 [ false, %689 ], [ false, %672 ], [ true, %666 ], [ true, %645 ]
  %693 = phi %"class.WTF::String"* [ %673, %689 ], [ %673, %672 ], [ %670, %666 ], [ %646, %645 ]
  %694 = phi %"class.WTF::StringImpl"* [ %674, %689 ], [ %674, %672 ], [ null, %666 ], [ null, %645 ]
  %695 = ptrtoint %"class.WTF::StringImpl"* %694 to i64
  %696 = bitcast %"class.WTF::String"* %693 to i64*
  %697 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %693, i64 0, i32 0, i32 0
  %698 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %697, align 8
  store i64 %695, i64* %696, align 8
  %699 = icmp eq %"class.WTF::StringImpl"* %698, null
  br i1 %699, label %713, label %700

700:                                              ; preds = %691
  %701 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %698, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %702 = load atomic i32, i32* %701 monotonic, align 4
  %703 = and i32 %702, 2
  %704 = icmp eq i32 %703, 0
  %705 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %698, i64 0, i32 0
  %706 = load i32, i32* %705, align 4
  br i1 %704, label %707, label %709

707:                                              ; preds = %700
  %708 = add i32 %706, -1
  store i32 %708, i32* %705, align 4
  br label %709

709:                                              ; preds = %707, %700
  %710 = phi i32 [ %708, %707 ], [ %706, %700 ]
  %711 = icmp eq i32 %710, 0
  br i1 %711, label %712, label %713

712:                                              ; preds = %709
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %698) #7
  br label %713

713:                                              ; preds = %691, %709, %712
  br i1 %692, label %727, label %714

714:                                              ; preds = %713
  %715 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %694, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %716 = load atomic i32, i32* %715 monotonic, align 4
  %717 = and i32 %716, 2
  %718 = icmp eq i32 %717, 0
  %719 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %694, i64 0, i32 0
  %720 = load i32, i32* %719, align 4
  br i1 %718, label %721, label %723

721:                                              ; preds = %714
  %722 = add i32 %720, -1
  store i32 %722, i32* %719, align 4
  br label %723

723:                                              ; preds = %721, %714
  %724 = phi i32 [ %722, %721 ], [ %720, %714 ]
  %725 = icmp eq i32 %724, 0
  br i1 %725, label %726, label %727

726:                                              ; preds = %723
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %694) #7
  br label %727

727:                                              ; preds = %713, %723, %726
  %728 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %729 = load i8*, i8** %728, align 8
  store i8* null, i8** %728, align 8
  %730 = icmp eq i8* %729, null
  br i1 %730, label %732, label %731

731:                                              ; preds = %727
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %729) #7
  br label %732

732:                                              ; preds = %731, %727
  %733 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %569, align 8
  %734 = icmp eq %"class.WTF::StringImpl"* %733, null
  br i1 %734, label %748, label %735

735:                                              ; preds = %732
  %736 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %733, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %737 = load atomic i32, i32* %736 monotonic, align 4
  %738 = and i32 %737, 2
  %739 = icmp eq i32 %738, 0
  %740 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %733, i64 0, i32 0
  %741 = load i32, i32* %740, align 4
  br i1 %739, label %742, label %744

742:                                              ; preds = %735
  %743 = add i32 %741, -1
  store i32 %743, i32* %740, align 4
  br label %744

744:                                              ; preds = %742, %735
  %745 = phi i32 [ %743, %742 ], [ %741, %735 ]
  %746 = icmp eq i32 %745, 0
  br i1 %746, label %747, label %748

747:                                              ; preds = %744
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %733) #7
  br label %748

748:                                              ; preds = %732, %744, %747
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %566) #7
  br label %771

749:                                              ; preds = %638, %565
  %750 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %751 = load i8*, i8** %750, align 8
  store i8* null, i8** %750, align 8
  %752 = icmp eq i8* %751, null
  br i1 %752, label %754, label %753

753:                                              ; preds = %749
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %751) #7
  br label %754

754:                                              ; preds = %753, %749
  %755 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %569, align 8
  %756 = icmp eq %"class.WTF::StringImpl"* %755, null
  br i1 %756, label %770, label %757

757:                                              ; preds = %754
  %758 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %755, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %759 = load atomic i32, i32* %758 monotonic, align 4
  %760 = and i32 %759, 2
  %761 = icmp eq i32 %760, 0
  %762 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %755, i64 0, i32 0
  %763 = load i32, i32* %762, align 4
  br i1 %761, label %764, label %766

764:                                              ; preds = %757
  %765 = add i32 %763, -1
  store i32 %765, i32* %762, align 4
  br label %766

766:                                              ; preds = %764, %757
  %767 = phi i32 [ %765, %764 ], [ %763, %757 ]
  %768 = icmp eq i32 %767, 0
  br i1 %768, label %769, label %770

769:                                              ; preds = %766
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %755) #7
  br label %770

770:                                              ; preds = %754, %766, %769
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %566) #7
  br label %1111

771:                                              ; preds = %748, %559
  %772 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 3, i32 0
  %773 = bitcast %"class.v8::Name"** %772 to %"class.v8::Value"**
  %774 = load %"class.v8::Value"*, %"class.v8::Value"** %773, align 8
  %775 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %774) #7
  %776 = icmp eq %"class.v8::Value"* %775, null
  br i1 %776, label %777, label %783

777:                                              ; preds = %771
  %778 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %779 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %780 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %779, align 8
  %781 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %780, i64 5
  %782 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %781, align 8
  call void %782(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %778) #7
  br label %1111

783:                                              ; preds = %771
  %784 = bitcast %"class.v8::Value"* %775 to i64*
  %785 = load i64, i64* %784, align 8
  %786 = and i64 %785, 3
  %787 = icmp eq i64 %786, 1
  br i1 %787, label %788, label %805

788:                                              ; preds = %783
  %789 = add i64 %785, -1
  %790 = inttoptr i64 %789 to i32*
  %791 = load i32, i32* %790, align 4
  %792 = and i64 %785, -4294967296
  %793 = zext i32 %791 to i64
  %794 = or i64 %792, %793
  %795 = add i64 %794, 7
  %796 = inttoptr i64 %795 to i16*
  %797 = load i16, i16* %796, align 2
  %798 = icmp eq i16 %797, 67
  br i1 %798, label %799, label %805

799:                                              ; preds = %788
  %800 = add i64 %785, 23
  %801 = inttoptr i64 %800 to i32*
  %802 = load i32, i32* %801, align 4
  %803 = and i32 %802, -2
  %804 = icmp eq i32 %803, 10
  br i1 %804, label %821, label %805

805:                                              ; preds = %788, %783, %799
  %806 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %775) #7
  br i1 %806, label %807, label %810, !prof !3

807:                                              ; preds = %805
  %808 = bitcast %"class.v8::Value"* %775 to %"class.v8::Uint32"*
  %809 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %808) #7
  br label %813

810:                                              ; preds = %805
  %811 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %775) #7
  %812 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %775, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %813

813:                                              ; preds = %807, %810
  %814 = phi i32 [ %809, %807 ], [ %812, %810 ]
  %815 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %816 = load i32, i32* %815, align 8
  %817 = icmp eq i32 %816, 0
  br i1 %817, label %818, label %1111

818:                                              ; preds = %813
  %819 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %2, i64 0, i32 7
  store i32 %814, i32* %819, align 8
  %820 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %2, i64 0, i32 1
  store i8 1, i8* %820, align 8
  br label %821

821:                                              ; preds = %818, %799
  %822 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 4, i32 0
  %823 = bitcast %"class.v8::Name"** %822 to %"class.v8::Value"**
  %824 = load %"class.v8::Value"*, %"class.v8::Value"** %823, align 8
  %825 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %824) #7
  %826 = icmp eq %"class.v8::Value"* %825, null
  br i1 %826, label %827, label %833

827:                                              ; preds = %821
  %828 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %829 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %830 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %829, align 8
  %831 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %830, i64 5
  %832 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %831, align 8
  call void %832(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %828) #7
  br label %1111

833:                                              ; preds = %821
  %834 = bitcast %"class.v8::Value"* %825 to i64*
  %835 = load i64, i64* %834, align 8
  %836 = and i64 %835, 3
  %837 = icmp eq i64 %836, 1
  br i1 %837, label %838, label %855

838:                                              ; preds = %833
  %839 = add i64 %835, -1
  %840 = inttoptr i64 %839 to i32*
  %841 = load i32, i32* %840, align 4
  %842 = and i64 %835, -4294967296
  %843 = zext i32 %841 to i64
  %844 = or i64 %842, %843
  %845 = add i64 %844, 7
  %846 = inttoptr i64 %845 to i16*
  %847 = load i16, i16* %846, align 2
  %848 = icmp eq i16 %847, 67
  br i1 %848, label %849, label %855

849:                                              ; preds = %838
  %850 = add i64 %835, 23
  %851 = inttoptr i64 %850 to i32*
  %852 = load i32, i32* %851, align 4
  %853 = and i32 %852, -2
  %854 = icmp eq i32 %853, 10
  br i1 %854, label %1061, label %855

855:                                              ; preds = %838, %833, %849
  %856 = bitcast %"class.blink::V8StringResource"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %856) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %856, i8 -86, i64 152, i1 false)
  %857 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %825, %"class.v8::Value"** %857, align 8
  %858 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 1
  store i32 0, i32* %858, align 8
  %859 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %859, align 8
  %860 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 3, i32 1
  %861 = bitcast %"class.std::__1::unique_ptr"* %860 to i64*
  store i64 0, i64* %861, align 8
  %862 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %15, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %862, label %863, label %1039

863:                                              ; preds = %855
  %864 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %864) #7
  %865 = load %"class.v8::Value"*, %"class.v8::Value"** %857, align 8
  %866 = icmp eq %"class.v8::Value"* %865, null
  br i1 %866, label %871, label %867, !prof !2

867:                                              ; preds = %863
  %868 = bitcast %"class.v8::Value"* %865 to %"class.v8::String"*
  %869 = load i32, i32* %858, align 8
  %870 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %868, i32 %869) #7
  br label %891

871:                                              ; preds = %863
  %872 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %859, align 8
  %873 = icmp eq %"class.WTF::StringImpl"* %872, null
  br i1 %873, label %891, label %874

874:                                              ; preds = %871
  %875 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %872, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %876 = load atomic i32, i32* %875 monotonic, align 4
  %877 = and i32 %876, 2
  %878 = icmp eq i32 %877, 0
  br i1 %878, label %879, label %891

879:                                              ; preds = %874
  %880 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %872, i64 0, i32 0
  %881 = load i32, i32* %880, align 4
  %882 = zext i32 %881 to i33
  %883 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %882, i33 1) #7
  %884 = extractvalue { i33, i1 } %883, 1
  %885 = extractvalue { i33, i1 } %883, 0
  %886 = icmp slt i33 %885, 0
  %887 = or i1 %884, %886
  br i1 %887, label %888, label %889, !prof !2

888:                                              ; preds = %879
  call void @llvm.trap() #7
  unreachable

889:                                              ; preds = %879
  %890 = trunc i33 %885 to i32
  store i32 %890, i32* %880, align 4
  br label %891

891:                                              ; preds = %867, %871, %874, %889
  %892 = phi %"class.WTF::StringImpl"* [ %870, %867 ], [ null, %871 ], [ %872, %874 ], [ %872, %889 ]
  %893 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %892, %"class.WTF::StringImpl"** %893, align 8
  %894 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %894) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %17, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0), i64 13) #7
  %895 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %16, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZZN5blink20V8ImageBitmapOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18ImageBitmapOptionsERNS_14ExceptionStateEE12kValidValues_2, i64 0, i64 0), i64 4, %"class.WTF::String"* nonnull dereferenceable(8) %17, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %896 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %897 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %896, align 8
  %898 = icmp eq %"class.WTF::StringImpl"* %897, null
  br i1 %898, label %912, label %899

899:                                              ; preds = %891
  %900 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %897, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %901 = load atomic i32, i32* %900 monotonic, align 4
  %902 = and i32 %901, 2
  %903 = icmp eq i32 %902, 0
  %904 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %897, i64 0, i32 0
  %905 = load i32, i32* %904, align 4
  br i1 %903, label %906, label %908

906:                                              ; preds = %899
  %907 = add i32 %905, -1
  store i32 %907, i32* %904, align 4
  br label %908

908:                                              ; preds = %906, %899
  %909 = phi i32 [ %907, %906 ], [ %905, %899 ]
  %910 = icmp eq i32 %909, 0
  br i1 %910, label %911, label %912

911:                                              ; preds = %908
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %897) #7
  br label %912

912:                                              ; preds = %891, %908, %911
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %894) #7
  %913 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %893, align 8
  %914 = icmp eq %"class.WTF::StringImpl"* %913, null
  br i1 %914, label %928, label %915

915:                                              ; preds = %912
  %916 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %913, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %917 = load atomic i32, i32* %916 monotonic, align 4
  %918 = and i32 %917, 2
  %919 = icmp eq i32 %918, 0
  %920 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %913, i64 0, i32 0
  %921 = load i32, i32* %920, align 4
  br i1 %919, label %922, label %924

922:                                              ; preds = %915
  %923 = add i32 %921, -1
  store i32 %923, i32* %920, align 4
  br label %924

924:                                              ; preds = %922, %915
  %925 = phi i32 [ %923, %922 ], [ %921, %915 ]
  %926 = icmp eq i32 %925, 0
  br i1 %926, label %927, label %928

927:                                              ; preds = %924
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %913) #7
  br label %928

928:                                              ; preds = %912, %924, %927
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %864) #7
  br i1 %895, label %929, label %1039

929:                                              ; preds = %928
  %930 = load %"class.v8::Value"*, %"class.v8::Value"** %857, align 8
  %931 = icmp eq %"class.v8::Value"* %930, null
  br i1 %931, label %932, label %956, !prof !2

932:                                              ; preds = %929
  %933 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %859, align 8
  %934 = icmp eq %"class.WTF::StringImpl"* %933, null
  br i1 %934, label %935, label %937

935:                                              ; preds = %932
  %936 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %2, i64 0, i32 9
  br label %981

937:                                              ; preds = %932
  %938 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %933, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %939 = load atomic i32, i32* %938 monotonic, align 4
  %940 = and i32 %939, 2
  %941 = icmp eq i32 %940, 0
  br i1 %941, label %942, label %954

942:                                              ; preds = %937
  %943 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %933, i64 0, i32 0
  %944 = load i32, i32* %943, align 4
  %945 = zext i32 %944 to i33
  %946 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %945, i33 1) #7
  %947 = extractvalue { i33, i1 } %946, 1
  %948 = extractvalue { i33, i1 } %946, 0
  %949 = icmp slt i33 %948, 0
  %950 = or i1 %947, %949
  br i1 %950, label %951, label %952, !prof !2

951:                                              ; preds = %942
  call void @llvm.trap() #7
  unreachable

952:                                              ; preds = %942
  %953 = trunc i33 %948 to i32
  store i32 %953, i32* %943, align 4
  br label %954

954:                                              ; preds = %937, %952
  %955 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %2, i64 0, i32 9
  br label %962

956:                                              ; preds = %929
  %957 = bitcast %"class.v8::Value"* %930 to %"class.v8::String"*
  %958 = load i32, i32* %858, align 8
  %959 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %957, i32 %958) #7
  %960 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %2, i64 0, i32 9
  %961 = icmp eq %"class.WTF::StringImpl"* %959, null
  br i1 %961, label %981, label %962

962:                                              ; preds = %954, %956
  %963 = phi %"class.WTF::String"* [ %955, %954 ], [ %960, %956 ]
  %964 = phi %"class.WTF::StringImpl"* [ %933, %954 ], [ %959, %956 ]
  %965 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %964, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %966 = load atomic i32, i32* %965 monotonic, align 4
  %967 = and i32 %966, 2
  %968 = icmp eq i32 %967, 0
  br i1 %968, label %969, label %981

969:                                              ; preds = %962
  %970 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %964, i64 0, i32 0
  %971 = load i32, i32* %970, align 4
  %972 = zext i32 %971 to i33
  %973 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %972, i33 1) #7
  %974 = extractvalue { i33, i1 } %973, 1
  %975 = extractvalue { i33, i1 } %973, 0
  %976 = icmp slt i33 %975, 0
  %977 = or i1 %974, %976
  br i1 %977, label %978, label %979, !prof !2

978:                                              ; preds = %969
  call void @llvm.trap() #7
  unreachable

979:                                              ; preds = %969
  %980 = trunc i33 %975 to i32
  store i32 %980, i32* %970, align 4
  br label %981

981:                                              ; preds = %935, %979, %962, %956
  %982 = phi i1 [ false, %979 ], [ false, %962 ], [ true, %956 ], [ true, %935 ]
  %983 = phi %"class.WTF::String"* [ %963, %979 ], [ %963, %962 ], [ %960, %956 ], [ %936, %935 ]
  %984 = phi %"class.WTF::StringImpl"* [ %964, %979 ], [ %964, %962 ], [ null, %956 ], [ null, %935 ]
  %985 = ptrtoint %"class.WTF::StringImpl"* %984 to i64
  %986 = bitcast %"class.WTF::String"* %983 to i64*
  %987 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %983, i64 0, i32 0, i32 0
  %988 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %987, align 8
  store i64 %985, i64* %986, align 8
  %989 = icmp eq %"class.WTF::StringImpl"* %988, null
  br i1 %989, label %1003, label %990

990:                                              ; preds = %981
  %991 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %988, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %992 = load atomic i32, i32* %991 monotonic, align 4
  %993 = and i32 %992, 2
  %994 = icmp eq i32 %993, 0
  %995 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %988, i64 0, i32 0
  %996 = load i32, i32* %995, align 4
  br i1 %994, label %997, label %999

997:                                              ; preds = %990
  %998 = add i32 %996, -1
  store i32 %998, i32* %995, align 4
  br label %999

999:                                              ; preds = %997, %990
  %1000 = phi i32 [ %998, %997 ], [ %996, %990 ]
  %1001 = icmp eq i32 %1000, 0
  br i1 %1001, label %1002, label %1003

1002:                                             ; preds = %999
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %988) #7
  br label %1003

1003:                                             ; preds = %981, %999, %1002
  br i1 %982, label %1017, label %1004

1004:                                             ; preds = %1003
  %1005 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %984, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1006 = load atomic i32, i32* %1005 monotonic, align 4
  %1007 = and i32 %1006, 2
  %1008 = icmp eq i32 %1007, 0
  %1009 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %984, i64 0, i32 0
  %1010 = load i32, i32* %1009, align 4
  br i1 %1008, label %1011, label %1013

1011:                                             ; preds = %1004
  %1012 = add i32 %1010, -1
  store i32 %1012, i32* %1009, align 4
  br label %1013

1013:                                             ; preds = %1011, %1004
  %1014 = phi i32 [ %1012, %1011 ], [ %1010, %1004 ]
  %1015 = icmp eq i32 %1014, 0
  br i1 %1015, label %1016, label %1017

1016:                                             ; preds = %1013
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %984) #7
  br label %1017

1017:                                             ; preds = %1003, %1013, %1016
  %1018 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1019 = load i8*, i8** %1018, align 8
  store i8* null, i8** %1018, align 8
  %1020 = icmp eq i8* %1019, null
  br i1 %1020, label %1022, label %1021

1021:                                             ; preds = %1017
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1019) #7
  br label %1022

1022:                                             ; preds = %1021, %1017
  %1023 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %859, align 8
  %1024 = icmp eq %"class.WTF::StringImpl"* %1023, null
  br i1 %1024, label %1038, label %1025

1025:                                             ; preds = %1022
  %1026 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1023, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1027 = load atomic i32, i32* %1026 monotonic, align 4
  %1028 = and i32 %1027, 2
  %1029 = icmp eq i32 %1028, 0
  %1030 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1023, i64 0, i32 0
  %1031 = load i32, i32* %1030, align 4
  br i1 %1029, label %1032, label %1034

1032:                                             ; preds = %1025
  %1033 = add i32 %1031, -1
  store i32 %1033, i32* %1030, align 4
  br label %1034

1034:                                             ; preds = %1032, %1025
  %1035 = phi i32 [ %1033, %1032 ], [ %1031, %1025 ]
  %1036 = icmp eq i32 %1035, 0
  br i1 %1036, label %1037, label %1038

1037:                                             ; preds = %1034
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1023) #7
  br label %1038

1038:                                             ; preds = %1022, %1034, %1037
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %856) #7
  br label %1061

1039:                                             ; preds = %928, %855
  %1040 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1041 = load i8*, i8** %1040, align 8
  store i8* null, i8** %1040, align 8
  %1042 = icmp eq i8* %1041, null
  br i1 %1042, label %1044, label %1043

1043:                                             ; preds = %1039
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1041) #7
  br label %1044

1044:                                             ; preds = %1043, %1039
  %1045 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %859, align 8
  %1046 = icmp eq %"class.WTF::StringImpl"* %1045, null
  br i1 %1046, label %1060, label %1047

1047:                                             ; preds = %1044
  %1048 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1045, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1049 = load atomic i32, i32* %1048 monotonic, align 4
  %1050 = and i32 %1049, 2
  %1051 = icmp eq i32 %1050, 0
  %1052 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1045, i64 0, i32 0
  %1053 = load i32, i32* %1052, align 4
  br i1 %1051, label %1054, label %1056

1054:                                             ; preds = %1047
  %1055 = add i32 %1053, -1
  store i32 %1055, i32* %1052, align 4
  br label %1056

1056:                                             ; preds = %1054, %1047
  %1057 = phi i32 [ %1055, %1054 ], [ %1053, %1047 ]
  %1058 = icmp eq i32 %1057, 0
  br i1 %1058, label %1059, label %1060

1059:                                             ; preds = %1056
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1045) #7
  br label %1060

1060:                                             ; preds = %1044, %1056, %1059
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %856) #7
  br label %1111

1061:                                             ; preds = %1038, %849
  %1062 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %50, i64 5, i32 0
  %1063 = bitcast %"class.v8::Name"** %1062 to %"class.v8::Value"**
  %1064 = load %"class.v8::Value"*, %"class.v8::Value"** %1063, align 8
  %1065 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %44, %"class.v8::Context"* %52, %"class.v8::Value"* %1064) #7
  %1066 = icmp eq %"class.v8::Value"* %1065, null
  br i1 %1066, label %1067, label %1073

1067:                                             ; preds = %1061
  %1068 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %1069 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1070 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1069, align 8
  %1071 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1070, i64 5
  %1072 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1071, align 8
  call void %1072(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1068) #7
  br label %1111

1073:                                             ; preds = %1061
  %1074 = bitcast %"class.v8::Value"* %1065 to i64*
  %1075 = load i64, i64* %1074, align 8
  %1076 = and i64 %1075, 3
  %1077 = icmp eq i64 %1076, 1
  br i1 %1077, label %1078, label %1095

1078:                                             ; preds = %1073
  %1079 = add i64 %1075, -1
  %1080 = inttoptr i64 %1079 to i32*
  %1081 = load i32, i32* %1080, align 4
  %1082 = and i64 %1075, -4294967296
  %1083 = zext i32 %1081 to i64
  %1084 = or i64 %1082, %1083
  %1085 = add i64 %1084, 7
  %1086 = inttoptr i64 %1085 to i16*
  %1087 = load i16, i16* %1086, align 2
  %1088 = icmp eq i16 %1087, 67
  br i1 %1088, label %1089, label %1095

1089:                                             ; preds = %1078
  %1090 = add i64 %1075, 23
  %1091 = inttoptr i64 %1090 to i32*
  %1092 = load i32, i32* %1091, align 4
  %1093 = and i32 %1092, -2
  %1094 = icmp eq i32 %1093, 10
  br i1 %1094, label %1111, label %1095

1095:                                             ; preds = %1078, %1073, %1089
  %1096 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %1065) #7
  br i1 %1096, label %1097, label %1100, !prof !3

1097:                                             ; preds = %1095
  %1098 = bitcast %"class.v8::Value"* %1065 to %"class.v8::Uint32"*
  %1099 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %1098) #7
  br label %1103

1100:                                             ; preds = %1095
  %1101 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %1065) #7
  %1102 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1065, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %1103

1103:                                             ; preds = %1097, %1100
  %1104 = phi i32 [ %1099, %1097 ], [ %1102, %1100 ]
  %1105 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1106 = load i32, i32* %1105, align 8
  %1107 = icmp eq i32 %1106, 0
  br i1 %1107, label %1108, label %1111

1108:                                             ; preds = %1103
  %1109 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %2, i64 0, i32 10
  store i32 %1104, i32* %1109, align 8
  %1110 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %2, i64 0, i32 2
  store i8 1, i8* %1110, align 1
  br label %1111

1111:                                             ; preds = %1103, %813, %297, %530, %777, %1067, %1108, %1089, %1060, %827, %770, %537, %290, %57
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %51) #7
  br label %1112

1112:                                             ; preds = %35, %35, %4, %1111, %42
  ret void
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::TryCatch", align 8
  %4 = tail call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* %0)
  br i1 %4, label %23, label %5

5:                                                ; preds = %2
  %6 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #7
  %7 = bitcast %"class.v8::TryCatch"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false) #7
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %3, %"class.v8::Isolate"* %6) #7
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.v8::Value"*, %"class.v8::Value"** %8, align 8
  %10 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #7
  %11 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %9, %"class.v8::Context"* %10) #7
  %12 = ptrtoint %"class.v8::String"* %11 to i64
  %13 = bitcast %"class.blink::V8StringResource"* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = icmp eq %"class.v8::String"* %11, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %5
  %16 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %3) #7
  %17 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %18 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %18, i64 5
  %20 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %19, align 8
  call void %20(%"class.blink::ExceptionState"* %1, %"class.v8::Value"* %16) #7
  br label %21

21:                                               ; preds = %5, %15
  %22 = phi i1 [ false, %15 ], [ true, %5 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #7
  br label %23

23:                                               ; preds = %21, %2
  %24 = phi i1 [ true, %2 ], [ %22, %21 ]
  ret i1 %24
}

declare zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), i8**, i64, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink18ImageBitmapOptions8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::ImageBitmapOptions"* nocapture readonly, %"class.v8::Object"* nocapture readnone, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #7
  %5 = tail call zeroext i1 @_ZN5blink22toV8ImageBitmapOptionsEPKNS_18ImageBitmapOptionsEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::ImageBitmapOptions"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* undef, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink22toV8ImageBitmapOptionsEPKNS_18ImageBitmapOptionsEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::ImageBitmapOptions"* nocapture readonly, %"class.v8::Object"*, %"class.v8::Object"* nocapture readnone, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %10 = add i64 %9, 8
  %11 = inttoptr i64 %10 to %"class.blink::V8PerIsolateData"**
  %12 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %11, align 8
  %13 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %12, i8* bitcast ([6 x i8*]* @_ZZN5blinkL31eternalV8ImageBitmapOptionsKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.313"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.313"*)) #7
  %14 = extractvalue { i64, %"class.v8::Eternal"* } %13, 1
  %15 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #7
  %16 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %0, i64 0, i32 4, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %4
  %20 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #7
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %26 = bitcast i8** %25 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %23, i32* %27, align 8
  %28 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #7
  br label %33

29:                                               ; preds = %4
  %30 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i32 0, i32 7) #7
  %31 = icmp eq %"class.v8::String"* %30, null
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %29
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %33

33:                                               ; preds = %32, %29, %19
  %34 = phi %"class.v8::String"* [ %28, %19 ], [ %30, %29 ], [ null, %32 ]
  %35 = bitcast %"class.v8::String"* %34 to %"class.v8::Value"*
  %36 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %14, i64 0, i32 0
  %37 = load %"class.v8::Name"*, %"class.v8::Name"** %36, align 8
  %38 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %15, %"class.v8::Name"* %37, %"class.v8::Value"* %35) #7
  %39 = trunc i16 %38 to i8
  %40 = icmp ne i8 %39, 0
  %41 = icmp ugt i16 %38, 255
  %42 = and i1 %41, %40
  br i1 %42, label %43, label %160

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %0, i64 0, i32 5, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %57, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #7
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %49, align 8
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 1
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %54 = bitcast i8** %53 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %51, i32* %55, align 8
  %56 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #7
  br label %61

57:                                               ; preds = %43
  %58 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32 0, i32 4) #7
  %59 = icmp eq %"class.v8::String"* %58, null
  br i1 %59, label %60, label %61, !prof !2

60:                                               ; preds = %57
  call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %61

61:                                               ; preds = %60, %57, %47
  %62 = phi %"class.v8::String"* [ %56, %47 ], [ %58, %57 ], [ null, %60 ]
  %63 = bitcast %"class.v8::String"* %62 to %"class.v8::Value"*
  %64 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %14, i64 1, i32 0
  %65 = load %"class.v8::Name"*, %"class.v8::Name"** %64, align 8
  %66 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %15, %"class.v8::Name"* %65, %"class.v8::Value"* %63) #7
  %67 = trunc i16 %66 to i8
  %68 = icmp ne i8 %67, 0
  %69 = icmp ugt i16 %66, 255
  %70 = and i1 %69, %68
  br i1 %70, label %71, label %160

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %0, i64 0, i32 6, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %85, label %75

75:                                               ; preds = %71
  %76 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #7
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %77, align 8
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 1
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %82 = bitcast i8** %81 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %80, %"class.WTF::StringImpl"** %82, align 8
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %79, i32* %83, align 8
  %84 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #7
  br label %89

85:                                               ; preds = %71
  %86 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i32 0, i32 7) #7
  %87 = icmp eq %"class.v8::String"* %86, null
  br i1 %87, label %88, label %89, !prof !2

88:                                               ; preds = %85
  call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %89

89:                                               ; preds = %88, %85, %75
  %90 = phi %"class.v8::String"* [ %84, %75 ], [ %86, %85 ], [ null, %88 ]
  %91 = bitcast %"class.v8::String"* %90 to %"class.v8::Value"*
  %92 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %14, i64 2, i32 0
  %93 = load %"class.v8::Name"*, %"class.v8::Name"** %92, align 8
  %94 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %15, %"class.v8::Name"* %93, %"class.v8::Value"* %91) #7
  %95 = trunc i16 %94 to i8
  %96 = icmp ne i8 %95, 0
  %97 = icmp ugt i16 %94, 255
  %98 = and i1 %97, %96
  br i1 %98, label %99, label %160

99:                                               ; preds = %89
  %100 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %0, i64 0, i32 1
  %101 = load i8, i8* %100, align 8, !range !4
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %115, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %0, i64 0, i32 7
  %105 = load i32, i32* %104, align 8
  %106 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %105) #7
  %107 = bitcast %"class.v8::Integer"* %106 to %"class.v8::Value"*
  %108 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %14, i64 3, i32 0
  %109 = load %"class.v8::Name"*, %"class.v8::Name"** %108, align 8
  %110 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %15, %"class.v8::Name"* %109, %"class.v8::Value"* %107) #7
  %111 = trunc i16 %110 to i8
  %112 = icmp ne i8 %111, 0
  %113 = icmp ugt i16 %110, 255
  %114 = and i1 %113, %112
  br i1 %114, label %115, label %160

115:                                              ; preds = %99, %103
  %116 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %0, i64 0, i32 9, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %129, label %119

119:                                              ; preds = %115
  %120 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #7
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %117, %"class.WTF::StringImpl"** %121, align 8
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 1
  %125 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %126 = bitcast i8** %125 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %124, %"class.WTF::StringImpl"** %126, align 8
  %127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %123, i32* %127, align 8
  %128 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #7
  br label %133

129:                                              ; preds = %115
  %130 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), i32 0, i32 3) #7
  %131 = icmp eq %"class.v8::String"* %130, null
  br i1 %131, label %132, label %133, !prof !2

132:                                              ; preds = %129
  call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %133

133:                                              ; preds = %132, %129, %119
  %134 = phi %"class.v8::String"* [ %128, %119 ], [ %130, %129 ], [ null, %132 ]
  %135 = bitcast %"class.v8::String"* %134 to %"class.v8::Value"*
  %136 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %14, i64 4, i32 0
  %137 = load %"class.v8::Name"*, %"class.v8::Name"** %136, align 8
  %138 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %15, %"class.v8::Name"* %137, %"class.v8::Value"* %135) #7
  %139 = trunc i16 %138 to i8
  %140 = icmp ne i8 %139, 0
  %141 = icmp ugt i16 %138, 255
  %142 = and i1 %141, %140
  br i1 %142, label %143, label %160

143:                                              ; preds = %133
  %144 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %0, i64 0, i32 2
  %145 = load i8, i8* %144, align 1, !range !4
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %159, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.blink::ImageBitmapOptions", %"class.blink::ImageBitmapOptions"* %0, i64 0, i32 10
  %149 = load i32, i32* %148, align 8
  %150 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %149) #7
  %151 = bitcast %"class.v8::Integer"* %150 to %"class.v8::Value"*
  %152 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %14, i64 5, i32 0
  %153 = load %"class.v8::Name"*, %"class.v8::Name"** %152, align 8
  %154 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %15, %"class.v8::Name"* %153, %"class.v8::Value"* %151) #7
  %155 = trunc i16 %154 to i8
  %156 = icmp ne i8 %155, 0
  %157 = icmp ugt i16 %154, 255
  %158 = and i1 %157, %156
  br i1 %158, label %159, label %160

159:                                              ; preds = %143, %147
  br label %160

160:                                              ; preds = %61, %103, %159, %147, %133, %89, %33
  %161 = phi i1 [ false, %33 ], [ false, %61 ], [ false, %89 ], [ false, %103 ], [ false, %133 ], [ true, %159 ], [ false, %147 ]
  ret i1 %161
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #7
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #7
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #7
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !2

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #7
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ImageBitmapOptions"* @_ZN5blink17NativeValueTraitsINS_18ImageBitmapOptionsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 64) #7
  %5 = bitcast i8* %4 to %"class.blink::ImageBitmapOptions"*
  tail call void @_ZN5blink18ImageBitmapOptionsC1Ev(%"class.blink::ImageBitmapOptions"* %5) #7
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink20V8ImageBitmapOptions6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18ImageBitmapOptionsERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::ImageBitmapOptions"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::ImageBitmapOptions"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.313"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink18ImageBitmapOptionsC1Ev(%"class.blink::ImageBitmapOptions"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !5

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !3

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #7
  br i1 %22, label %23, label %80, !prof !3

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #7
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #7
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #7
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #7
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #7
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #7
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"*) local_unnamed_addr #1

declare i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
