; ModuleID = '../../third_party/skia/modules/skottie/src/Path.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/Path.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp.29 = type { %"class.sksg::Path"* }
%"class.sksg::Path" = type { %"class.sksg::GeometryNode.base", [6 x i8], %class.SkPath }
%"class.sksg::GeometryNode.base" = type { %"class.sksg::Node.base" }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkPath = type <{ %class.sk_sp.31, i32, %"struct.std::__1::atomic.34", %"struct.std::__1::atomic.34", i8, i8 }>
%class.sk_sp.31 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.32, %class.SkTDArray.33, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.32 = type { i8*, i32, i32 }
%class.SkTDArray.33 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.39 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.34" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.39 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.40", [3 x i8] }
%"struct.std::__1::atomic.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl.42" }
%"struct.std::__1::__cxx_atomic_impl.42" = type { %"struct.std::__1::__cxx_atomic_base_impl.43" }
%"struct.std::__1::__cxx_atomic_base_impl.43" = type { i8 }
%"struct.std::__1::atomic.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__cxx_atomic_impl.37" }
%"struct.std::__1::__cxx_atomic_impl.37" = type { %"struct.std::__1::__cxx_atomic_base_impl.38" }
%"struct.std::__1::__cxx_atomic_base_impl.38" = type { i8 }
%"class.skottie::internal::AnimationBuilder" = type { %class.sk_sp, %"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr", %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %class.sk_sp.5, %"struct.skottie::Animation::Builder::Stats"*, %struct.SkSize, float, float, i32, %"class.std::__1::vector"*, i8*, i8, %class.SkTHashMap, %class.SkTHashMap.11, %class.SkTHashMap.20 }
%class.sk_sp = type { %"class.skresources::ResourceProvider"* }
%"class.skresources::ResourceProvider" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr" = type { %class.sk_sp.1 }
%class.sk_sp.1 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2 = type { %"class.skottie::PropertyObserver"* }
%"class.skottie::PropertyObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.3 = type { %"class.skottie::Logger"* }
%"class.skottie::Logger" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.4 = type { %"class.skottie::MarkerObserver"* }
%"class.skottie::MarkerObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.5 = type { %"class.skottie::PrecompInterceptor"* }
%"class.skottie::PrecompInterceptor" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::Animation::Builder::Stats" = type { float, float, float, i64, i64 }
%struct.SkSize = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.6*, %class.sk_sp.6*, %"class.std::__1::__compressed_pair" }
%class.sk_sp.6 = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.6* }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.11 = type { %class.SkTHashTable.12 }
%class.SkTHashTable.12 = type { i32, i32, %class.SkAutoTArray.13 }
%class.SkAutoTArray.13 = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%"class.skjson::Value" = type { [8 x i8] }
%"class.skottie::ShapeValue" = type { %"class.std::__1::vector.45" }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { float*, float*, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { float* }
%"class.skottie::internal::AnimatablePropertyContainer" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.skottie::internal::Animator.base" = type { %class.SkRefCnt.base }
%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.skottie::internal::(anonymous namespace)::PathAdapter" = type { %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::ShapeValue" }
%"class.skottie::internal::DiscardableAdapterBase" = type { %"class.skottie::internal::AnimatablePropertyContainer.base", %class.sk_sp.29 }
%"class.skottie::internal::AnimatablePropertyContainer.base" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8 }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

@_ZTVN7skottie8internal12_GLOBAL__N_111PathAdapterE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::PathAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_111PathAdapterD2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::PathAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_111PathAdapterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::PathAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_111PathAdapter6onSyncEv to i8*)] }, align 8
@_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111PathAdapterEN4sksg4PathEEE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111PathAdapterEN4sksg4PathEED2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111PathAdapterEN4sksg4PathEED0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7skottie8internal27AnimatablePropertyContainerE = external unnamed_addr constant { [7 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7skottie8internal16AnimationBuilder10attachPathERKN6skjson5ValueE(%class.sk_sp.29* noalias sret, %"class.skottie::internal::AnimationBuilder"*, %"class.skjson::Value"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPath, align 8
  %5 = alloca %class.sk_sp.6, align 8
  %6 = getelementptr inbounds %class.sk_sp.29, %class.sk_sp.29* %0, i64 0, i32 0
  store %"class.sksg::Path"* null, %"class.sksg::Path"** %6, align 8, !alias.scope !2
  %7 = tail call i8* @_Znwm(i64 80) #11, !noalias !5
  %8 = tail call i8* @_Znwm(i64 64) #11, !noalias !8
  %9 = bitcast i8* %8 to %"class.sksg::Path"*
  %10 = bitcast %class.SkPath* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12, !noalias !8
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %4) #12, !noalias !8
  call void @_ZN4sksg4PathC1ERK6SkPath(%"class.sksg::Path"* nonnull %9, %class.SkPath* nonnull dereferenceable(16) %4) #12, !noalias !8
  %11 = ptrtoint i8* %8 to i64
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %4) #12, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12, !noalias !8
  %12 = getelementptr inbounds i8, i8* %7, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 1, i32* %13, align 4, !noalias !5
  %14 = bitcast i8* %7 to i32 (...)***
  %15 = getelementptr inbounds i8, i8* %7, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 25, i1 false) #12, !noalias !5
  %16 = getelementptr inbounds i8, i8* %7, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %11, i64* %17, align 8, !noalias !5
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_111PathAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !noalias !5
  %18 = getelementptr inbounds i8, i8* %7, i64 56
  %19 = bitcast i8* %18 to %"class.skottie::ShapeValue"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #12, !noalias !5
  %20 = bitcast i8* %7 to %"class.skottie::internal::AnimatablePropertyContainer"*
  %21 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %2, i64 0, i32 0, i64 0
  %22 = load i8, i8* %21, align 8, !noalias !5
  %23 = and i8 %22, 7
  %24 = icmp eq i8 %23, 7
  %25 = bitcast %"class.skjson::Value"* %2 to %"class.skjson::ObjectValue"*
  %26 = select i1 %24, %"class.skjson::ObjectValue"* %25, %"class.skjson::ObjectValue"* null
  %27 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindINS_10ShapeValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %20, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %1, %"class.skjson::ObjectValue"* %26, %"class.skottie::ShapeValue"* %19) #12, !noalias !5
  %28 = ptrtoint i8* %7 to i64
  call void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %20) #12, !noalias !5
  %29 = bitcast i8* %16 to %class.sk_sp.29*
  %30 = icmp eq %class.sk_sp.29* %29, %0
  br i1 %30, label %51, label %31

31:                                               ; preds = %3
  %32 = bitcast i8* %16 to %"class.sksg::Path"**
  %33 = load %"class.sksg::Path"*, %"class.sksg::Path"** %32, align 8, !noalias !2
  %34 = icmp eq %"class.sksg::Path"* %33, null
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  store %"class.sksg::Path"* null, %"class.sksg::Path"** %6, align 8, !alias.scope !2
  br label %51

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.sksg::Path", %"class.sksg::Path"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 1 monotonic
  %39 = load %"class.sksg::Path"*, %"class.sksg::Path"** %6, align 8, !alias.scope !2
  %40 = bitcast %"class.sksg::Path"* %39 to %class.SkRefCntBase*
  store %"class.sksg::Path"* %33, %"class.sksg::Path"** %6, align 8, !alias.scope !2
  %41 = icmp eq %"class.sksg::Path"* %39, null
  br i1 %41, label %51, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.sksg::Path", %"class.sksg::Path"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 -1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %51

46:                                               ; preds = %42
  %47 = bitcast %"class.sksg::Path"* %39 to void (%class.SkRefCntBase*)***
  %48 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, i64 2
  %50 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, align 8
  call void %50(%class.SkRefCntBase* nonnull %40) #12
  br label %51

51:                                               ; preds = %46, %42, %36, %35, %3
  %52 = bitcast i8* %15 to %class.sk_sp.6**
  %53 = load %class.sk_sp.6*, %class.sk_sp.6** %52, align 8, !noalias !2
  %54 = getelementptr inbounds i8, i8* %7, i64 24
  %55 = bitcast i8* %54 to %class.sk_sp.6**
  %56 = load %class.sk_sp.6*, %class.sk_sp.6** %55, align 8, !noalias !2
  %57 = icmp eq %class.sk_sp.6* %53, %56
  br i1 %57, label %90, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.skottie::internal::AnimationBuilder", %"class.skottie::internal::AnimationBuilder"* %1, i64 0, i32 11
  %60 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %59, align 8, !noalias !2
  %61 = bitcast %class.sk_sp.6* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #12, !noalias !2
  %62 = bitcast %class.sk_sp.6* %5 to i64*
  store i64 %28, i64* %62, align 8, !noalias !2
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %60, i64 0, i32 0, i32 1
  %64 = load %class.sk_sp.6*, %class.sk_sp.6** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %60, i64 0, i32 0, i32 2, i32 0, i32 0
  %66 = load %class.sk_sp.6*, %class.sk_sp.6** %65, align 8
  %67 = icmp ult %class.sk_sp.6* %64, %66
  br i1 %67, label %68, label %74

68:                                               ; preds = %58
  %69 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %5, i64 0, i32 0
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %69, align 8, !noalias !2
  %70 = bitcast %class.sk_sp.6* %64 to i64*
  store i64 %28, i64* %70, align 8
  %71 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %64, i64 1
  %72 = ptrtoint %class.sk_sp.6* %71 to i64
  %73 = bitcast %class.sk_sp.6** %63 to i64*
  store i64 %72, i64* %73, align 8
  br label %75

74:                                               ; preds = %58
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %60, %class.sk_sp.6* nonnull dereferenceable(8) %5) #12
  br label %75

75:                                               ; preds = %74, %68
  %76 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %5, i64 0, i32 0
  %77 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %76, align 8, !noalias !2
  %78 = icmp eq %"class.skottie::internal::Animator"* %77, null
  br i1 %78, label %89, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %77, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 -1 acq_rel
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %89

83:                                               ; preds = %79
  %84 = bitcast %"class.skottie::internal::Animator"* %77 to %class.SkRefCntBase*
  %85 = bitcast %"class.skottie::internal::Animator"* %77 to void (%class.SkRefCntBase*)***
  %86 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %85, align 8
  %87 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %86, i64 2
  %88 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %87, align 8
  call void %88(%class.SkRefCntBase* nonnull %84) #12
  br label %89

89:                                               ; preds = %83, %79, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #12, !noalias !2
  br label %105

90:                                               ; preds = %51
  %91 = bitcast i8* %7 to %"class.skottie::internal::Animator"*
  %92 = bitcast i8* %7 to i1 (%"class.skottie::internal::Animator"*, float)***
  %93 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %92, align 8, !noalias !2
  %94 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %93, i64 3
  %95 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %94, align 8
  %96 = call zeroext i1 %95(%"class.skottie::internal::Animator"* nonnull %91, float 0.000000e+00) #12
  %97 = atomicrmw add i32* %13, i32 -1 acq_rel, !noalias !2
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %105

99:                                               ; preds = %90
  %100 = bitcast i8* %7 to %class.SkRefCntBase*
  %101 = bitcast i8* %7 to void (%class.SkRefCntBase*)***
  %102 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %101, align 8, !noalias !2
  %103 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %102, i64 2
  %104 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %103, align 8
  call void %104(%class.SkRefCntBase* nonnull %100) #12
  br label %105

105:                                              ; preds = %89, %90, %99
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_111PathAdapterD2Ev(%"class.skottie::internal::(anonymous namespace)::PathAdapter"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PathAdapter", %"class.skottie::internal::(anonymous namespace)::PathAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_111PathAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PathAdapter", %"class.skottie::internal::(anonymous namespace)::PathAdapter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint float* %4 to i64
  %8 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PathAdapter", %"class.skottie::internal::(anonymous namespace)::PathAdapter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast float* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111PathAdapterEN4sksg4PathEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PathAdapter", %"class.skottie::internal::(anonymous namespace)::PathAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %13 = load %"class.sksg::Path"*, %"class.sksg::Path"** %12, align 8
  %14 = icmp eq %"class.sksg::Path"* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.sksg::Path", %"class.sksg::Path"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %"class.sksg::Path"* %13 to %class.SkRefCntBase*
  %21 = bitcast %"class.sksg::Path"* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #12
  br label %25

25:                                               ; preds = %19, %15, %11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PathAdapter", %"class.skottie::internal::(anonymous namespace)::PathAdapter"* %0, i64 0, i32 0, i32 0, i32 2
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %26, i64 0, i32 0, i32 0
  %28 = load %class.sk_sp.6*, %class.sk_sp.6** %27, align 8
  %29 = icmp eq %class.sk_sp.6* %28, null
  br i1 %29, label %58, label %30

30:                                               ; preds = %25
  %31 = bitcast %class.sk_sp.6* %28 to i8*
  %32 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PathAdapter", %"class.skottie::internal::(anonymous namespace)::PathAdapter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %33 = load %class.sk_sp.6*, %class.sk_sp.6** %32, align 8
  %34 = icmp eq %class.sk_sp.6* %33, %28
  br i1 %34, label %56, label %35

35:                                               ; preds = %30, %51
  %36 = phi %class.sk_sp.6* [ %37, %51 ], [ %33, %30 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 -1
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 0, i32 0
  %39 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %38, align 8
  %40 = icmp eq %"class.skottie::internal::Animator"* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %39, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = bitcast %"class.skottie::internal::Animator"* %39 to %class.SkRefCntBase*
  %47 = bitcast %"class.skottie::internal::Animator"* %39 to void (%class.SkRefCntBase*)***
  %48 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, i64 2
  %50 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, align 8
  tail call void %50(%class.SkRefCntBase* nonnull %46) #12
  br label %51

51:                                               ; preds = %45, %41, %35
  %52 = icmp eq %class.sk_sp.6* %37, %28
  br i1 %52, label %53, label %35

53:                                               ; preds = %51
  %54 = bitcast %"class.std::__1::vector"* %26 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %30
  %57 = phi i8* [ %55, %53 ], [ %31, %30 ]
  store %class.sk_sp.6* %28, %class.sk_sp.6** %32, align 8
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %25, %56
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_111PathAdapterD0Ev(%"class.skottie::internal::(anonymous namespace)::PathAdapter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PathAdapter", %"class.skottie::internal::(anonymous namespace)::PathAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_111PathAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PathAdapter", %"class.skottie::internal::(anonymous namespace)::PathAdapter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint float* %4 to i64
  %8 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PathAdapter", %"class.skottie::internal::(anonymous namespace)::PathAdapter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast float* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111PathAdapterEN4sksg4PathEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PathAdapter", %"class.skottie::internal::(anonymous namespace)::PathAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %13 = load %"class.sksg::Path"*, %"class.sksg::Path"** %12, align 8
  %14 = icmp eq %"class.sksg::Path"* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.sksg::Path", %"class.sksg::Path"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %"class.sksg::Path"* %13 to %class.SkRefCntBase*
  %21 = bitcast %"class.sksg::Path"* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #12
  br label %25

25:                                               ; preds = %19, %15, %11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PathAdapter", %"class.skottie::internal::(anonymous namespace)::PathAdapter"* %0, i64 0, i32 0, i32 0, i32 2
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %26, i64 0, i32 0, i32 0
  %28 = load %class.sk_sp.6*, %class.sk_sp.6** %27, align 8
  %29 = icmp eq %class.sk_sp.6* %28, null
  br i1 %29, label %58, label %30

30:                                               ; preds = %25
  %31 = bitcast %class.sk_sp.6* %28 to i8*
  %32 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PathAdapter", %"class.skottie::internal::(anonymous namespace)::PathAdapter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %33 = load %class.sk_sp.6*, %class.sk_sp.6** %32, align 8
  %34 = icmp eq %class.sk_sp.6* %33, %28
  br i1 %34, label %56, label %35

35:                                               ; preds = %30, %51
  %36 = phi %class.sk_sp.6* [ %37, %51 ], [ %33, %30 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 -1
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 0, i32 0
  %39 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %38, align 8
  %40 = icmp eq %"class.skottie::internal::Animator"* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %39, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = bitcast %"class.skottie::internal::Animator"* %39 to %class.SkRefCntBase*
  %47 = bitcast %"class.skottie::internal::Animator"* %39 to void (%class.SkRefCntBase*)***
  %48 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, i64 2
  %50 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, align 8
  tail call void %50(%class.SkRefCntBase* nonnull %46) #12
  br label %51

51:                                               ; preds = %45, %41, %35
  %52 = icmp eq %class.sk_sp.6* %37, %28
  br i1 %52, label %53, label %35

53:                                               ; preds = %51
  %54 = bitcast %"class.std::__1::vector"* %26 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %30
  %57 = phi i8* [ %55, %53 ], [ %31, %30 ]
  store %class.sk_sp.6* %28, %class.sk_sp.6** %32, align 8
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %25, %56
  %59 = bitcast %"class.skottie::internal::(anonymous namespace)::PathAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %59) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #12
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf(%"class.skottie::internal::AnimatablePropertyContainer"*, float) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_111PathAdapter6onSyncEv(%"class.skottie::internal::(anonymous namespace)::PathAdapter"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.SkPath, align 8
  %3 = bitcast %class.SkPath* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #12
  %4 = getelementptr inbounds %class.SkPath, %class.SkPath* %2, i64 0, i32 4
  %5 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PathAdapter", %"class.skottie::internal::(anonymous namespace)::PathAdapter"* %0, i64 0, i32 1
  %6 = bitcast %class.SkPath* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNK7skottie10ShapeValuecv6SkPathEv(%class.SkPath* nonnull sret %2, %"class.skottie::ShapeValue"* %5) #12
  %7 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PathAdapter", %"class.skottie::internal::(anonymous namespace)::PathAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %8 = load %"class.sksg::Path"*, %"class.sksg::Path"** %7, align 8
  %9 = getelementptr inbounds %"class.sksg::Path", %"class.sksg::Path"* %8, i64 0, i32 2, i32 4
  %10 = load i8, i8* %9, align 2
  %11 = and i8 %10, 3
  %12 = load i8, i8* %4, align 2
  %13 = and i8 %12, -8
  %14 = or i8 %13, %11
  %15 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PathAdapter", %"class.skottie::internal::(anonymous namespace)::PathAdapter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = load %class.sk_sp.6*, %class.sk_sp.6** %15, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::PathAdapter", %"class.skottie::internal::(anonymous namespace)::PathAdapter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %18 = load %class.sk_sp.6*, %class.sk_sp.6** %17, align 8
  %19 = icmp ne %class.sk_sp.6* %16, %18
  %20 = zext i1 %19 to i8
  %21 = shl nuw nsw i8 %20, 2
  %22 = or i8 %21, %14
  store i8 %22, i8* %4, align 2
  %23 = getelementptr inbounds %"class.sksg::Path", %"class.sksg::Path"* %8, i64 0, i32 2
  %24 = call zeroext i1 @_ZeqRK6SkPathS1_(%class.SkPath* dereferenceable(16) %23, %class.SkPath* nonnull dereferenceable(16) %2) #12
  br i1 %24, label %28, label %25

25:                                               ; preds = %1
  %26 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %23, %class.SkPath* nonnull dereferenceable(16) %2) #12
  %27 = bitcast %"class.sksg::Path"* %8 to %"class.sksg::Node"*
  call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %27, i1 zeroext true) #12
  br label %28

28:                                               ; preds = %1, %25
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #12
  ret void
}

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #3

declare void @_ZN4sksg4PathC1ERK6SkPath(%"class.sksg::Path"*, %class.SkPath* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111PathAdapterEN4sksg4PathEED2Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111PathAdapterEN4sksg4PathEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.sksg::Path"*, %"class.sksg::Path"** %3, align 8
  %5 = icmp eq %"class.sksg::Path"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sksg::Path", %"class.sksg::Path"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.sksg::Path"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.sksg::Path"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #12
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #12
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #11
  br label %49

49:                                               ; preds = %16, %47
  ret void
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111PathAdapterEN4sksg4PathEED0Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture readnone) unnamed_addr #6 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindINS_10ShapeValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, %"class.skottie::ShapeValue"*) local_unnamed_addr #3

declare void @_ZNK7skottie10ShapeValuecv6SkPathEv(%class.SkPath* sret, %"class.skottie::ShapeValue"*) local_unnamed_addr #3

declare zeroext i1 @_ZeqRK6SkPathS1_(%class.SkPath* dereferenceable(16), %class.SkPath* dereferenceable(16)) local_unnamed_addr #3

declare dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp.6* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.6** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.6** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %class.sk_sp.6*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.6* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.6* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.6* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %40, align 8
  %43 = bitcast %class.sk_sp.6* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 1
  %45 = ptrtoint %class.sk_sp.6* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.6*, %class.sk_sp.6** %46, align 8
  %48 = ptrtoint %class.sk_sp.6* %47 to i64
  %49 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  %50 = icmp eq %class.sk_sp.6* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.6, %class.sk_sp.6* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.skottie::internal::Animator"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.6* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.6* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.6* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %65, align 8
  %68 = bitcast %class.sk_sp.6* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !11

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.6* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.6* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.6* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.6* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.6* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.6* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %81, align 8
  %84 = bitcast %class.sk_sp.6* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.6* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %87, align 8
  %90 = bitcast %class.sk_sp.6* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.6* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %93, align 8
  %96 = bitcast %class.sk_sp.6* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.6* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %99, align 8
  %102 = bitcast %class.sk_sp.6* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.6* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %105, align 8
  %108 = bitcast %class.sk_sp.6* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.6* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %111, align 8
  %114 = bitcast %class.sk_sp.6* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.6* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %117, align 8
  %120 = bitcast %class.sk_sp.6* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.6* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %123, align 8
  %126 = bitcast %class.sk_sp.6* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.6* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.6* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.6* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.6* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.6* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.6*
  %138 = icmp eq %class.sk_sp.6* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp.6* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %141, i64 0, i32 0
  %143 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %142, align 8
  %144 = icmp eq %"class.skottie::internal::Animator"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.skottie::internal::Animator"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.skottie::internal::Animator"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #12
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp.6* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #11
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_111PathAdapterEJRKN6skjson5ValueERKS1_EEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSE_: argument 0"}
!4 = distinct !{!4, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_111PathAdapterEJRKN6skjson5ValueERKS1_EEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSE_"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111PathAdapterEN4sksg4PathEE4MakeIJRKN6skjson5ValueERKNS0_16AnimationBuilderEEEE5sk_spIS3_EDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_111PathAdapterEN4sksg4PathEE4MakeIJRKN6skjson5ValueERKNS0_16AnimationBuilderEEEE5sk_spIS3_EDpOT_"}
!8 = !{!9, !6, !3}
!9 = distinct !{!9, !10, !"_ZN4sksg4Path4MakeEv: argument 0"}
!10 = distinct !{!10, !"_ZN4sksg4Path4MakeEv"}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
