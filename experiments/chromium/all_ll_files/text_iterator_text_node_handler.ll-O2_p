; ModuleID = '../../third_party/blink/renderer/core/editing/iterators/text_iterator_text_node_handler.cc'
source_filename = "../../third_party/blink/renderer/core/editing/iterators/text_iterator_text_node_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::TextIteratorTextNodeHandler" = type { %"class.blink::Text"*, i32, i32, i8, %"class.WTF::Vector.1653", i32, %"class.blink::InlineTextBox"*, i8, i8, %"class.blink::InlineTextBox"*, %"class.blink::LayoutText"*, i8, %"class.WTF::Vector.1659", i32, %"class.blink::TextIteratorBehavior", %"class.blink::TextIteratorTextState"* }
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.1702" }
%"class.blink::Member.1702" = type { %"class.blink::MemberBase.1703" }
%"class.blink::MemberBase.1703" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1704" }
%"class.blink::Member.1704" = type { %"class.blink::MemberBase.1705" }
%"class.blink::MemberBase.1705" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.1706" }
%"class.WTF::Vector.1706" = type { %"class.WTF::VectorBuffer.1707" }
%"class.WTF::VectorBuffer.1707" = type { %"class.WTF::VectorBufferBase.1708" }
%"class.WTF::VectorBufferBase.1708" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1711", %"class.absl::optional.1711", %"class.absl::optional.1711" }
%"class.absl::optional.1711" = type { %"class.absl::optional_internal::optional_data.1712" }
%"class.absl::optional_internal::optional_data.1712" = type { %"class.absl::optional_internal::optional_data_base.1713" }
%"class.absl::optional_internal::optional_data_base.1713" = type { %"class.absl::optional_internal::optional_data_dtor_base.1714" }
%"class.absl::optional_internal::optional_data_dtor_base.1714" = type { i8, %union.anon.1715 }
%union.anon.1715 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1716 }
%class.scoped_refptr.1716 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1717", %"class.WTF::Vector.630", %"class.WTF::Vector.1719", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1717" = type { %"class.base::RefCounted.1718" }
%"class.base::RefCounted.1718" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1719" = type { %"class.WTF::VectorBuffer.1720" }
%"class.WTF::VectorBuffer.1720" = type { %"class.WTF::VectorBufferBase.1721" }
%"class.WTF::VectorBufferBase.1721" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1722 }
%union.anon.1722 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.1726" }
%"class.WTF::VectorBuffer.1726" = type { %"class.WTF::VectorBufferBase.1727", [32 x i8] }
%"class.WTF::VectorBufferBase.1727" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1730 }
%class.scoped_refptr.1730 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.1740" }
%"class.blink::Member.1740" = type { %"class.blink::MemberBase.1741" }
%"class.blink::MemberBase.1741" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1736" }
%"class.blink::MemberBase.1736" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1737" }
%"class.blink::MemberBase.1737" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1738" }
%"class.blink::MemberBase.1738" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1739" }
%"class.blink::MemberBase.1739" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1731", %"class.WTF::Vector.1731" }
%"class.WTF::Vector.1731" = type { %"class.WTF::VectorBuffer.1732" }
%"class.WTF::VectorBuffer.1732" = type { %"class.WTF::VectorBufferBase.1733" }
%"class.WTF::VectorBufferBase.1733" = type { %class.scoped_refptr.1730*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::ParkableString" = type { %class.scoped_refptr.1623 }
%class.scoped_refptr.1623 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.1624", %"class.WTF::String", %"class.std::__1::unique_ptr.1626" }
%"class.WTF::RefCounted.1624" = type { %"class.base::RefCounted.1625" }
%"class.base::RefCounted.1625" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1626" = type { %"class.std::__1::__compressed_pair.1627" }
%"class.std::__1::__compressed_pair.1627" = type { %"struct.std::__1::__compressed_pair_elem.1628" }
%"struct.std::__1::__compressed_pair_elem.1628" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.1629", %"class.std::__1::unique_ptr.1640", %"class.WTF::Vector.1646", i8, i32 }
%"class.std::__1::unique_ptr.1629" = type { %"class.std::__1::__compressed_pair.1630" }
%"class.std::__1::__compressed_pair.1630" = type { %"struct.std::__1::__compressed_pair_elem.1631" }
%"struct.std::__1::__compressed_pair_elem.1631" = type { %"class.WTF::Vector.1632"* }
%"class.WTF::Vector.1632" = type { %"class.WTF::VectorBuffer.1633" }
%"class.WTF::VectorBuffer.1633" = type { %"class.WTF::VectorBufferBase.1634" }
%"class.WTF::VectorBufferBase.1634" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.1640" = type { %"class.std::__1::__compressed_pair.1641" }
%"class.std::__1::__compressed_pair.1641" = type { %"struct.std::__1::__compressed_pair_elem.1642" }
%"struct.std::__1::__compressed_pair_elem.1642" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.1646" = type { %"class.WTF::VectorBuffer.1647" }
%"class.WTF::VectorBuffer.1647" = type { %"class.WTF::VectorBufferBase.1634", [32 x i8] }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::Vector.1653" = type { %"class.WTF::VectorBuffer.1654" }
%"class.WTF::VectorBuffer.1654" = type { %"class.WTF::VectorBufferBase.1655" }
%"class.WTF::VectorBufferBase.1655" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::InlineTextBox" = type { %"class.blink::InlineBox", %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*, i32, i16, i16 }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.1658 }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1658 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.WTF::Vector.1659" = type { %"class.WTF::VectorBuffer.1660" }
%"class.WTF::VectorBuffer.1660" = type { %"class.WTF::VectorBufferBase.1661" }
%"class.WTF::VectorBufferBase.1661" = type { %"class.blink::InlineTextBox"**, i32, i32 }
%"class.blink::TextIteratorBehavior" = type { %union.anon.1664 }
%union.anon.1664 = type { i32 }
%"class.blink::TextIteratorTextState" = type { %"class.blink::TextIteratorBehavior", i32, i16, %"class.WTF::String", i32, %"class.blink::Node"*, %"class.blink::Node"*, %"class.absl::optional.1666", %"class.absl::optional.1666", i32, i8, i16 }
%"class.absl::optional.1666" = type { %"class.absl::optional_internal::optional_data.1667" }
%"class.absl::optional_internal::optional_data.1667" = type { %"class.absl::optional_internal::optional_data_base.1668" }
%"class.absl::optional_internal::optional_data_base.1668" = type { %"class.absl::optional_internal::optional_data_dtor_base.1669" }
%"class.absl::optional_internal::optional_data_dtor_base.1669" = type { i8, %union.anon.1670 }
%union.anon.1670 = type { i32 }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.1742", %"class.blink::Member.1744", %"class.blink::Member.1746", %"class.blink::Member.1765", %"class.blink::Member.1767" }
%"class.blink::Member.1742" = type { %"class.blink::MemberBase.1743" }
%"class.blink::MemberBase.1743" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.1744" = type { %"class.blink::MemberBase.1745" }
%"class.blink::MemberBase.1745" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.1746" = type { %"class.blink::MemberBase.1747" }
%"class.blink::MemberBase.1747" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.1750", %"class.blink::HeapHashSet.1759" }
%"class.blink::HeapVector.1750" = type { %"class.WTF::Vector.1753" }
%"class.WTF::Vector.1753" = type { %"class.WTF::VectorBuffer.1754" }
%"class.WTF::VectorBuffer.1754" = type { %"class.WTF::VectorBufferBase.1755" }
%"class.WTF::VectorBufferBase.1755" = type { %"class.blink::Member.1756"*, i32, i32 }
%"class.blink::Member.1756" = type { %"class.blink::MemberBase.1757" }
%"class.blink::MemberBase.1757" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.1759" = type { %"class.WTF::HashSet.1762" }
%"class.WTF::HashSet.1762" = type { %"class.WTF::HashTable.1763" }
%"class.WTF::HashTable.1763" = type <{ %"class.blink::Member.1756"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1765" = type { %"class.blink::MemberBase.1766" }
%"class.blink::MemberBase.1766" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.1767" = type { %"class.blink::MemberBase.1768" }
%"class.blink::MemberBase.1768" = type { %"class.blink::HeapHashSet.1769"* }
%"class.blink::HeapHashSet.1769" = type opaque
%"class.blink::EphemeralRangeTemplate" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate" }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"struct.blink::(anonymous namespace)::StringAndOffsetRange" = type { %"class.WTF::String", i32, i32 }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.1653", %"class.WTF::HashMap.1671", %"class.WTF::String" }
%"class.WTF::HashMap.1671" = type { %"class.WTF::HashTable.1672" }
%"class.WTF::HashTable.1672" = type <{ %"struct.WTF::KeyValuePair.1675"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1675" = type opaque
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::FirstLetterPseudoElement" = type { %"class.blink::PseudoElement.base", %"class.blink::LayoutTextFragment"* }
%"class.blink::PseudoElement.base" = type <{ %"class.blink::Element", i8 }>
%"class.blink::LayoutTextFragment" = type { %"class.blink::LayoutText", i32, i32, i8, %class.scoped_refptr.5, %"class.blink::UntracedMember.1676" }
%"class.blink::UntracedMember.1676" = type { %"class.blink::MemberBase.1677" }
%"class.blink::MemberBase.1677" = type { %"class.blink::FirstLetterPseudoElement"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1678, %"class.std::__1::unique_ptr.1679", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1678 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1690", i16, %class.scoped_refptr.1678 }
%"class.WTF::ThreadSafeRefCounted.1690" = type { %"class.base::RefCountedThreadSafe.1691" }
%"class.base::RefCountedThreadSafe.1691" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1679" = type { %"class.std::__1::__compressed_pair.1680" }
%"class.std::__1::__compressed_pair.1680" = type { %"struct.std::__1::__compressed_pair_elem.1681" }
%"struct.std::__1::__compressed_pair_elem.1681" = type { %"class.WTF::Vector.1682"* }
%"class.WTF::Vector.1682" = type { %"class.WTF::VectorBuffer.1683" }
%"class.WTF::VectorBuffer.1683" = type { %"class.WTF::VectorBufferBase.1684" }
%"class.WTF::VectorBufferBase.1684" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.blink::LayoutBox" = type opaque
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink13InlineTextBox14CompareByStartEPKS0_S2_ = comdat any

$_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink13InlineTextBoxEEEmm = comdat any

$_ZN3WTF6VectorIPN5blink13InlineTextBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZNSt3__16__sortIRPFbPKN5blink13InlineTextBoxES4_EPPS2_EEvT0_SA_T_ = comdat any

$_ZNSt3__17__sort4IRPFbPKN5blink13InlineTextBoxES4_EPPS2_EEjT0_SA_SA_SA_T_ = comdat any

$_ZNSt3__17__sort5IRPFbPKN5blink13InlineTextBoxES4_EPPS2_EEjT0_SA_SA_SA_SA_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRPFbPKN5blink13InlineTextBoxES4_EPPS2_EEvT0_SA_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbPKN5blink13InlineTextBoxES4_EPPS2_EEbT0_SA_T_ = comdat any

$_ZN3WTF6VectorIPN5blink13InlineTextBoxELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [91 x i8] c"../../third_party/blink/renderer/core/editing/iterators/text_iterator_text_node_handler.cc\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"first_letter && first_letter->IsText()\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink13InlineTextBoxEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InlineTextBox *]\00", align 1

@_ZN5blink27TextIteratorTextNodeHandlerC1ERKNS_20TextIteratorBehaviorEPNS_21TextIteratorTextStateE = hidden unnamed_addr alias void (%"class.blink::TextIteratorTextNodeHandler"*, %"class.blink::TextIteratorBehavior"*, %"class.blink::TextIteratorTextState"*), void (%"class.blink::TextIteratorTextNodeHandler"*, %"class.blink::TextIteratorBehavior"*, %"class.blink::TextIteratorTextState"*)* @_ZN5blink27TextIteratorTextNodeHandlerC2ERKNS_20TextIteratorBehaviorEPNS_21TextIteratorTextStateE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27TextIteratorTextNodeHandlerC2ERKNS_20TextIteratorBehaviorEPNS_21TextIteratorTextStateE(%"class.blink::TextIteratorTextNodeHandler"*, %"class.blink::TextIteratorBehavior"* dereferenceable(4), %"class.blink::TextIteratorTextState"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 4
  %5 = bitcast %"class.WTF::Vector.1653"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #11
  %6 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 6
  store %"class.blink::InlineTextBox"* null, %"class.blink::InlineTextBox"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 7
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 8
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 9
  %10 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 12
  %11 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 14
  %12 = bitcast %"class.blink::TextIteratorTextNodeHandler"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 17, i1 false)
  %13 = bitcast %"class.blink::InlineTextBox"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 17, i1 false)
  %14 = bitcast %"class.WTF::Vector.1659"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false)
  tail call void @_ZN5blink20TextIteratorBehaviorC1ERKS0_(%"class.blink::TextIteratorBehavior"* %11, %"class.blink::TextIteratorBehavior"* dereferenceable(4) %1) #11
  %15 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 15
  store %"class.blink::TextIteratorTextState"* %2, %"class.blink::TextIteratorTextState"** %15, align 8
  ret void
}

declare void @_ZN5blink20TextIteratorBehaviorC1ERKS0_(%"class.blink::TextIteratorBehavior"*, %"class.blink::TextIteratorBehavior"* dereferenceable(4)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink27TextIteratorTextNodeHandler23HandleRemainingTextRunsEv(%"class.blink::TextIteratorTextNodeHandler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink27TextIteratorTextNodeHandler26HandleTextNodeWithLayoutNGEv(%"class.blink::TextIteratorTextNodeHandler"* %0)
  br label %56

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 6
  %8 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %7, align 8
  %9 = icmp eq %"class.blink::InlineTextBox"* %8, null
  br i1 %9, label %10, label %50

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 9
  %12 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %11, align 8
  %13 = icmp eq %"class.blink::InlineTextBox"* %12, null
  %14 = ptrtoint %"class.blink::InlineTextBox"* %12 to i64
  br i1 %13, label %51, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp ult i32 %17, %19
  br i1 %20, label %21, label %51

21:                                               ; preds = %15
  %22 = bitcast %"class.blink::InlineTextBox"** %7 to i64*
  store i64 %14, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 0
  %24 = bitcast %"class.blink::InlineTextBox"** %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #11
  %25 = load %"class.blink::Text"*, %"class.blink::Text"** %23, align 8
  %26 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %25, i64 0, i32 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %25, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %29, label %35, label %31

31:                                               ; preds = %21
  %32 = bitcast %"class.blink::NodeData"** %30 to %"class.blink::NodeRareData"**
  %33 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %33, i64 0, i32 1, i32 0, i32 0
  br label %37

35:                                               ; preds = %21
  %36 = bitcast %"class.blink::NodeData"** %30 to %"class.blink::NodeRenderingData"**
  br label %37

37:                                               ; preds = %35, %31
  %38 = phi %"class.blink::NodeRenderingData"** [ %34, %31 ], [ %36, %35 ]
  %39 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %39, i64 0, i32 1
  %41 = bitcast %"class.blink::LayoutObject"** %40 to %"class.blink::LayoutText"**
  %42 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %41, align 8
  %43 = bitcast %"class.blink::LayoutText"* %42 to i32 (%"class.blink::LayoutText"*)***
  %44 = load i32 (%"class.blink::LayoutText"*)**, i32 (%"class.blink::LayoutText"*)*** %43, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %44, i64 109
  %46 = load i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutText"* %42) #11
  store i32 %47, i32* %16, align 8
  %48 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %7, align 8
  %49 = icmp eq %"class.blink::InlineTextBox"* %48, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %6, %37
  tail call void @_ZN5blink27TextIteratorTextNodeHandler13HandleTextBoxEv(%"class.blink::TextIteratorTextNodeHandler"* %0)
  br label %56

51:                                               ; preds = %15, %10, %37
  %52 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 7
  %53 = load i8, i8* %52, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %51
  tail call void @_ZN5blink27TextIteratorTextNodeHandler26HandlePreFormattedTextNodeEv(%"class.blink::TextIteratorTextNodeHandler"* %0)
  br label %56

56:                                               ; preds = %5, %50, %55
  %57 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 15
  %58 = load %"class.blink::TextIteratorTextState"*, %"class.blink::TextIteratorTextState"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::TextIteratorTextState", %"class.blink::TextIteratorTextState"* %58, i64 0, i32 5
  %60 = load %"class.blink::Node"*, %"class.blink::Node"** %59, align 8
  %61 = icmp ne %"class.blink::Node"* %60, null
  br label %62

62:                                               ; preds = %56, %51
  %63 = phi i1 [ false, %51 ], [ %61, %56 ]
  ret i1 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27TextIteratorTextNodeHandler26HandleTextNodeWithLayoutNGEv(%"class.blink::TextIteratorTextNodeHandler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.WTF::Vector.1653", align 8
  %7 = alloca %"struct.blink::(anonymous namespace)::StringAndOffsetRange", align 8
  %8 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %9, %11
  br i1 %12, label %13, label %243

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 15
  %15 = bitcast %"class.blink::EphemeralRangeTemplate"* %2 to i8*
  %16 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  %17 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 0
  %18 = bitcast %"class.blink::TextIteratorTextNodeHandler"* %0 to %"class.blink::Node"**
  %19 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  %20 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  %21 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 5
  %22 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 4
  %23 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %24 = bitcast %"class.WTF::Vector.1653"* %6 to i8*
  %25 = bitcast %"class.WTF::Vector.1653"* %6 to i64*
  %26 = bitcast %"class.WTF::Vector.1653"* %22 to i64*
  %27 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::Vector.1653", %"class.WTF::Vector.1653"* %6, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::Vector.1653", %"class.WTF::Vector.1653"* %6, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::Vector.1653", %"class.WTF::Vector.1653"* %6, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 14
  %32 = bitcast %"class.blink::TextIteratorBehavior"* %31 to i24*
  %33 = bitcast %"class.blink::EphemeralRangeTemplate"* %2 to i8*
  br label %34

34:                                               ; preds = %13, %239
  %35 = phi i32 [ %9, %13 ], [ %240, %239 ]
  %36 = load %"class.blink::TextIteratorTextState"*, %"class.blink::TextIteratorTextState"** %14, align 8
  %37 = getelementptr inbounds %"class.blink::TextIteratorTextState", %"class.blink::TextIteratorTextState"* %36, i64 0, i32 5
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %40, label %243

40:                                               ; preds = %34
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #11
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %3, %"class.blink::Node"* %41, i32 %35) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #11
  %42 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %43 = load i32, i32* %10, align 4
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::Node"* %42, i32 %43) #11
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* nonnull %2, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #11
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::EphemeralRangeTemplate"* nonnull %2) #11
  %44 = call %"class.blink::NGOffsetMapping"* @_ZN5blink15NGOffsetMapping6GetForERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #11
  %45 = icmp eq %"class.blink::NGOffsetMapping"* %44, null
  br i1 %45, label %46, label %48

46:                                               ; preds = %40
  %47 = load i32, i32* %10, align 4
  store i32 %47, i32* %8, align 8
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  br label %243

48:                                               ; preds = %40
  %49 = load i32, i32* %21, align 8
  %50 = load i32, i32* %23, align 4
  %51 = icmp ult i32 %49, %50
  br i1 %51, label %68, label %52

52:                                               ; preds = %48
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #11
  call void @_ZNK5blink15NGOffsetMapping26GetMappingUnitsForDOMRangeERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.WTF::Vector.1653"* nonnull sret %6, %"class.blink::NGOffsetMapping"* nonnull %44, %"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %2) #11
  %53 = load i64, i64* %25, align 8
  %54 = load i64, i64* %26, align 8
  store atomic i64 %54, i64* %25 monotonic, align 8
  store atomic i64 %53, i64* %26 monotonic, align 8
  %55 = load i32, i32* %27, align 4
  %56 = load i32, i32* %28, align 8
  store i32 %56, i32* %27, align 4
  store i32 %55, i32* %28, align 8
  %57 = load i32, i32* %23, align 4
  %58 = load i32, i32* %29, align 4
  store i32 %58, i32* %23, align 4
  store i32 %57, i32* %29, align 4
  %59 = icmp eq i64 %54, 0
  %60 = inttoptr i64 %54 to i8*
  br i1 %59, label %66, label %61, !prof !3

61:                                               ; preds = %52
  %62 = icmp eq i32 %57, 0
  br i1 %62, label %64, label %63, !prof !4

63:                                               ; preds = %61
  store i32 0, i32* %29, align 4
  br label %64

64:                                               ; preds = %63, %61
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %60) #11
  store %"class.blink::NGOffsetMappingUnit"* null, %"class.blink::NGOffsetMappingUnit"** %30, align 8
  %65 = load i32, i32* %23, align 4
  br label %66

66:                                               ; preds = %52, %64
  %67 = phi i32 [ %58, %52 ], [ %65, %64 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #11
  store i32 0, i32* %21, align 8
  br label %68

68:                                               ; preds = %48, %66
  %69 = phi i32 [ %50, %48 ], [ %67, %66 ]
  %70 = phi i32 [ %49, %48 ], [ 0, %66 ]
  %71 = load i32, i32* %8, align 8
  %72 = icmp ult i32 %70, %69
  br i1 %72, label %73, label %237

73:                                               ; preds = %68, %228
  %74 = phi i32 [ %232, %228 ], [ %70, %68 ]
  %75 = call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1653"* %22, i32 %74) #11
  %76 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %75, i64 0, i32 5
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %75, i64 0, i32 4
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %77, %79
  br i1 %80, label %228, label %81

81:                                               ; preds = %73
  %82 = load %"class.blink::Text"*, %"class.blink::Text"** %17, align 8
  %83 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %75, i64 0, i32 2
  %84 = load i32, i32* %83, align 8
  %85 = load i24, i24* %32, align 4
  %86 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %82, i64 0, i32 0, i32 0
  %87 = call %"class.blink::LayoutObject"* @_ZN5blink24AssociatedLayoutObjectOfERKNS_4NodeEiNS_16LayoutObjectSideE(%"class.blink::Node"* dereferenceable(64) %86, i32 %84, i32 0) #11
  %88 = icmp eq %"class.blink::LayoutObject"* %87, null
  br i1 %88, label %228, label %89

89:                                               ; preds = %81
  %90 = and i24 %85, 4096
  %91 = icmp ne i24 %90, 0
  %92 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %87, i64 0, i32 5, i32 0
  %93 = bitcast %"class.blink::ComputedStyle"** %92 to %"class.blink::ComputedStyleBase"**
  %94 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %94, i64 0, i32 9
  %96 = bitcast [20 x i8]* %95 to i160*
  %97 = load i160, i160* %96, align 8
  %98 = and i160 %97, 133143986176
  %99 = icmp eq i160 %98, 94489280512
  %100 = or i1 %91, %99
  br i1 %100, label %104, label %101

101:                                              ; preds = %89
  %102 = and i160 %97, 3802951800684688204490109616128
  %103 = icmp eq i160 %102, 1267650600228229401496703205376
  br i1 %103, label %105, label %228

104:                                              ; preds = %89
  br i1 %99, label %228, label %105

105:                                              ; preds = %101, %104
  %106 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %75, i64 0, i32 5
  %107 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %75, i64 0, i32 4
  %108 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %75, i64 0, i32 2
  %109 = bitcast %"struct.blink::(anonymous namespace)::StringAndOffsetRange"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #11
  %110 = getelementptr inbounds %"struct.blink::(anonymous namespace)::StringAndOffsetRange", %"struct.blink::(anonymous namespace)::StringAndOffsetRange"* %7, i64 0, i32 0
  %111 = getelementptr inbounds %"struct.blink::(anonymous namespace)::StringAndOffsetRange", %"struct.blink::(anonymous namespace)::StringAndOffsetRange"* %7, i64 0, i32 0, i32 0, i32 0
  %112 = getelementptr inbounds %"struct.blink::(anonymous namespace)::StringAndOffsetRange", %"struct.blink::(anonymous namespace)::StringAndOffsetRange"* %7, i64 0, i32 1
  %113 = bitcast %"struct.blink::(anonymous namespace)::StringAndOffsetRange"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 -86, i64 16, i1 false)
  %114 = load i24, i24* %32, align 4
  %115 = and i24 %114, 8
  %116 = icmp eq i24 %115, 0
  %117 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %44, i64 0, i32 2
  br i1 %116, label %170, label %118

118:                                              ; preds = %105
  %119 = load i32, i32* %107, align 8
  %120 = load i32, i32* %106, align 4
  %121 = sub i32 %120, %119
  %122 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %117, i32 %119, i32 %121) #11
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %195, label %124

124:                                              ; preds = %118
  %125 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"* nonnull %122, i16 zeroext 160, i16 zeroext 32) #11
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %124
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %124
  %135 = phi i32 [ %133, %132 ], [ %131, %124 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #11
  br label %138

138:                                              ; preds = %137, %134
  %139 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %139, label %195, label %140

140:                                              ; preds = %138
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %157

147:                                              ; preds = %140
  %148 = zext i32 %146 to i33
  %149 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %148, i33 1) #11
  %150 = extractvalue { i33, i1 } %149, 1
  %151 = extractvalue { i33, i1 } %149, 0
  %152 = icmp slt i33 %151, 0
  %153 = or i1 %150, %152
  br i1 %153, label %154, label %155, !prof !4

154:                                              ; preds = %147
  call void @llvm.trap() #11
  unreachable

155:                                              ; preds = %147
  %156 = trunc i33 %151 to i32
  store i32 %156, i32* %145, align 4
  br label %157

157:                                              ; preds = %155, %140
  %158 = phi i32 [ %156, %155 ], [ %146, %140 ]
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 1
  %160 = load i32, i32* %159, align 4
  %161 = load atomic i32, i32* %141 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %158, -1
  store i32 %165, i32* %145, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %158, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %195

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %125) #11
  br label %195

170:                                              ; preds = %105
  %171 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %117, i64 0, i32 0, i32 0
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %171, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %173, label %191, label %174

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %191

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  %182 = zext i32 %181 to i33
  %183 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %182, i33 1) #11
  %184 = extractvalue { i33, i1 } %183, 1
  %185 = extractvalue { i33, i1 } %183, 0
  %186 = icmp slt i33 %185, 0
  %187 = or i1 %184, %186
  br i1 %187, label %188, label %189, !prof !4

188:                                              ; preds = %179
  call void @llvm.trap() #11
  unreachable

189:                                              ; preds = %179
  %190 = trunc i33 %185 to i32
  store i32 %190, i32* %180, align 4
  br label %191

191:                                              ; preds = %189, %174, %170
  %192 = load i32, i32* %107, align 8
  %193 = load i32, i32* %106, align 4
  %194 = zext i32 %192 to i64
  br label %195

195:                                              ; preds = %118, %138, %166, %169, %191
  %196 = phi i32 [ %193, %191 ], [ %160, %166 ], [ %160, %169 ], [ 0, %138 ], [ 0, %118 ]
  %197 = phi i64 [ %194, %191 ], [ 0, %166 ], [ 0, %169 ], [ 0, %138 ], [ 0, %118 ]
  %198 = phi %"class.WTF::StringImpl"* [ %172, %191 ], [ %125, %166 ], [ %125, %169 ], [ null, %138 ], [ null, %118 ]
  %199 = zext i32 %196 to i64
  %200 = shl nuw i64 %199, 32
  %201 = or i64 %200, %197
  store %"class.WTF::StringImpl"* %198, %"class.WTF::StringImpl"** %111, align 8
  %202 = bitcast i32* %112 to i64*
  store i64 %201, i64* %202, align 8
  %203 = trunc i64 %197 to i32
  %204 = load %"class.blink::TextIteratorTextState"*, %"class.blink::TextIteratorTextState"** %14, align 8
  %205 = load %"class.blink::Text"*, %"class.blink::Text"** %17, align 8
  %206 = load i32, i32* %108, align 8
  %207 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %75, i64 0, i32 3
  %208 = load i32, i32* %207, align 4
  call void @_ZN5blink21TextIteratorTextState8EmitTextERKNS_4TextEjjRKN3WTF6StringEjj(%"class.blink::TextIteratorTextState"* %204, %"class.blink::Text"* dereferenceable(88) %205, i32 %206, i32 %208, %"class.WTF::String"* nonnull dereferenceable(8) %110, i32 %203, i32 %196) #11
  %209 = load i32, i32* %207, align 4
  store i32 %209, i32* %8, align 8
  %210 = load i32, i32* %21, align 8
  %211 = add i32 %210, 1
  store i32 %211, i32* %21, align 8
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %212, null
  br i1 %213, label %227, label %214

214:                                              ; preds = %195
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  br i1 %218, label %221, label %223

221:                                              ; preds = %214
  %222 = add i32 %220, -1
  store i32 %222, i32* %219, align 4
  br label %223

223:                                              ; preds = %221, %214
  %224 = phi i32 [ %222, %221 ], [ %220, %214 ]
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %223
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %212) #11
  br label %227

227:                                              ; preds = %226, %223, %195
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #11
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  br label %243

228:                                              ; preds = %101, %81, %73, %104
  %229 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %75, i64 0, i32 3
  %230 = load i32, i32* %229, align 4
  store i32 %230, i32* %8, align 8
  %231 = load i32, i32* %21, align 8
  %232 = add i32 %231, 1
  store i32 %232, i32* %21, align 8
  %233 = load i32, i32* %23, align 4
  %234 = icmp ult i32 %232, %233
  br i1 %234, label %73, label %235

235:                                              ; preds = %228
  %236 = icmp eq i32 %230, %71
  br i1 %236, label %237, label %239

237:                                              ; preds = %68, %235
  %238 = load i32, i32* %10, align 4
  store i32 %238, i32* %8, align 8
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  br label %243

239:                                              ; preds = %235
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  %240 = load i32, i32* %8, align 8
  %241 = load i32, i32* %10, align 4
  %242 = icmp ult i32 %240, %241
  br i1 %242, label %34, label %243

243:                                              ; preds = %34, %239, %1, %237, %227, %46
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink27TextIteratorTextNodeHandler28ShouldProceedToRemainingTextEv(%"class.blink::TextIteratorTextNodeHandler"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 6
  %3 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %2, align 8
  %4 = icmp eq %"class.blink::InlineTextBox"* %3, null
  br i1 %4, label %5, label %15

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 9
  %7 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %6, align 8
  %8 = icmp eq %"class.blink::InlineTextBox"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp ult i32 %11, %13
  br label %15

15:                                               ; preds = %1, %5, %9
  %16 = phi i1 [ %14, %9 ], [ false, %5 ], [ false, %1 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27TextIteratorTextNodeHandler22ProceedToRemainingTextEv(%"class.blink::TextIteratorTextNodeHandler"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 9
  %3 = bitcast %"class.blink::InlineTextBox"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 6
  %6 = bitcast %"class.blink::InlineTextBox"** %5 to i64*
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 0
  %8 = bitcast %"class.blink::InlineTextBox"** %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  %9 = load %"class.blink::Text"*, %"class.blink::Text"** %7, align 8
  %10 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %9, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %9, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %13, label %19, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::NodeData"** %14 to %"class.blink::NodeRareData"**
  %17 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %17, i64 0, i32 1, i32 0, i32 0
  br label %21

19:                                               ; preds = %1
  %20 = bitcast %"class.blink::NodeData"** %14 to %"class.blink::NodeRenderingData"**
  br label %21

21:                                               ; preds = %15, %19
  %22 = phi %"class.blink::NodeRenderingData"** [ %18, %15 ], [ %20, %19 ]
  %23 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %23, i64 0, i32 1
  %25 = bitcast %"class.blink::LayoutObject"** %24 to %"class.blink::LayoutText"**
  %26 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %25, align 8
  %27 = bitcast %"class.blink::LayoutText"* %26 to i32 (%"class.blink::LayoutText"*)***
  %28 = load i32 (%"class.blink::LayoutText"*)**, i32 (%"class.blink::LayoutText"*)*** %27, align 8
  %29 = getelementptr inbounds i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %28, i64 109
  %30 = load i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %29, align 8
  %31 = tail call i32 %30(%"class.blink::LayoutText"* %26) #11
  %32 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 1
  store i32 %31, i32* %32, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27TextIteratorTextNodeHandler13HandleTextBoxEv(%"class.blink::TextIteratorTextNodeHandler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 10
  %3 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 14
  %5 = bitcast %"class.blink::TextIteratorBehavior"* %4 to i24*
  %6 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 6
  %7 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 12
  %11 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 11
  %12 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 15
  %13 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 13
  %14 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 9
  %15 = bitcast %"class.blink::InlineTextBox"** %6 to i64*
  %16 = bitcast %"class.blink::InlineTextBox"** %14 to i8*
  br label %17

17:                                               ; preds = %408, %1
  %18 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %2, align 8
  %19 = icmp eq %"class.blink::LayoutText"* %18, null
  br i1 %19, label %20, label %39

20:                                               ; preds = %17
  %21 = load %"class.blink::Text"*, %"class.blink::Text"** %3, align 8
  %22 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %21, i64 0, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %21, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %25, label %31, label %27

27:                                               ; preds = %20
  %28 = bitcast %"class.blink::NodeData"** %26 to %"class.blink::NodeRareData"**
  %29 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %29, i64 0, i32 1, i32 0, i32 0
  br label %33

31:                                               ; preds = %20
  %32 = bitcast %"class.blink::NodeData"** %26 to %"class.blink::NodeRenderingData"**
  br label %33

33:                                               ; preds = %27, %31
  %34 = phi %"class.blink::NodeRenderingData"** [ %30, %27 ], [ %32, %31 ]
  %35 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %35, i64 0, i32 1
  %37 = bitcast %"class.blink::LayoutObject"** %36 to %"class.blink::LayoutText"**
  %38 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %37, align 8
  br label %39

39:                                               ; preds = %17, %33
  %40 = phi %"class.blink::LayoutText"* [ %38, %33 ], [ %18, %17 ]
  %41 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %40, i64 0, i32 0
  %42 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %40, i64 0, i32 0, i32 5, i32 0
  %43 = bitcast %"class.blink::ComputedStyle"** %42 to %"class.blink::ComputedStyleBase"**
  %44 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %44, i64 0, i32 9
  %46 = bitcast [20 x i8]* %45 to i160*
  %47 = load i160, i160* %46, align 8
  %48 = and i160 %47, 3802951800684688204490109616128
  %49 = icmp eq i160 %48, 1267650600228229401496703205376
  br i1 %49, label %55, label %50

50:                                               ; preds = %39
  %51 = load i24, i24* %5, align 4
  %52 = and i24 %51, 4096
  %53 = icmp eq i24 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %50
  store %"class.blink::InlineTextBox"* null, %"class.blink::InlineTextBox"** %6, align 8
  br label %387

55:                                               ; preds = %50, %39
  %56 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %40, i64 0, i32 7, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %76, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %76

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = zext i32 %66 to i33
  %68 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %67, i33 1) #11
  %69 = extractvalue { i33, i1 } %68, 1
  %70 = extractvalue { i33, i1 } %68, 0
  %71 = icmp slt i33 %70, 0
  %72 = or i1 %69, %71
  br i1 %72, label %73, label %74, !prof !4

73:                                               ; preds = %64
  tail call void @llvm.trap() #11
  unreachable

74:                                               ; preds = %64
  %75 = trunc i33 %70 to i32
  store i32 %75, i32* %65, align 4
  br label %76

76:                                               ; preds = %55, %59, %74
  %77 = bitcast %"class.blink::LayoutText"* %40 to i32 (%"class.blink::LayoutText"*)***
  %78 = load i32 (%"class.blink::LayoutText"*)**, i32 (%"class.blink::LayoutText"*)*** %77, align 8
  %79 = getelementptr inbounds i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %78, i64 109
  %80 = load i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %79, align 8
  %81 = tail call i32 %80(%"class.blink::LayoutText"* %40) #11
  %82 = load i32, i32* %7, align 8
  %83 = sub i32 %82, %81
  %84 = load i32, i32* %8, align 4
  %85 = sub i32 %84, %81
  %86 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %6, align 8
  %87 = icmp eq %"class.blink::InlineTextBox"* %86, null
  br i1 %87, label %367, label %88

88:                                               ; preds = %76
  %89 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %40, i64 0, i32 1
  %90 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %40, i64 0, i32 0, i32 4
  %91 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %90 to i96*
  %92 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %40, i64 0, i32 9, i32 0
  br label %93

93:                                               ; preds = %88, %365
  %94 = phi %"class.blink::InlineTextBox"* [ %86, %88 ], [ %238, %365 ]
  %95 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %94, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = icmp ult i32 %96, %83
  %98 = select i1 %97, i32 %83, i32 %96
  %99 = load i16, i16* %89, align 8
  %100 = and i16 %99, 512
  %101 = icmp eq i16 %100, 0
  br i1 %101, label %108, label %102

102:                                              ; preds = %93
  %103 = load i32, i32* %9, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %118, label %105

105:                                              ; preds = %102
  %106 = tail call dereferenceable(8) %"class.blink::InlineTextBox"** @_ZN3WTF6VectorIPN5blink13InlineTextBoxELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1659"* %10, i32 0) #11
  %107 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %106, align 8
  br label %118

108:                                              ; preds = %93
  %109 = load i96, i96* %91, align 4
  %110 = and i96 %109, 268435456
  %111 = icmp eq i96 %110, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %108
  %113 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #11
  br label %114

114:                                              ; preds = %108, %112
  %115 = phi %"class.blink::InlineTextBoxList"* [ %113, %112 ], [ %92, %108 ]
  %116 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %116, align 8
  br label %118

118:                                              ; preds = %105, %102, %114
  %119 = phi %"class.blink::InlineTextBox"* [ %117, %114 ], [ %107, %105 ], [ null, %102 ]
  %120 = load i8, i8* %11, align 8, !range !2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %129

122:                                              ; preds = %118
  %123 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %6, align 8
  %124 = icmp eq %"class.blink::InlineTextBox"* %123, %119
  %125 = icmp uge i32 %96, %83
  %126 = and i1 %125, %124
  %127 = icmp ne i32 %98, 0
  %128 = and i1 %127, %126
  br i1 %128, label %129, label %207

129:                                              ; preds = %118, %122
  %130 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  %131 = load %"class.blink::TextIteratorTextState"*, %"class.blink::TextIteratorTextState"** %12, align 8
  %132 = getelementptr inbounds %"class.blink::TextIteratorTextState", %"class.blink::TextIteratorTextState"* %131, i64 0, i32 11
  %133 = load i16, i16* %132, align 2
  switch i16 %133, label %147 [
    i16 32, label %141
    i16 9, label %141
    i16 10, label %134
    i16 0, label %207
  ]

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %130, i64 0, i32 0, i32 9
  %136 = bitcast [20 x i8]* %135 to i160*
  %137 = load i160, i160* %136, align 8
  %138 = lshr i160 %137, 12
  %139 = trunc i160 %138 to i32
  %140 = and i32 %139, 127
  switch i32 %140, label %147 [
    i32 16, label %207
    i32 1, label %207
  ]

141:                                              ; preds = %129, %129
  %142 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %130, i64 0, i32 0, i32 9
  %143 = bitcast [20 x i8]* %142 to i160*
  %144 = load i160, i160* %143, align 8
  %145 = and i160 %144, 286720
  %146 = icmp eq i160 %145, 0
  br i1 %146, label %207, label %147

147:                                              ; preds = %129, %134, %141
  %148 = icmp eq i32 %98, 0
  br i1 %148, label %205, label %149

149:                                              ; preds = %147
  %150 = add i32 %98, -1
  br i1 %58, label %205, label %151

151:                                              ; preds = %149
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 1
  %153 = load i32, i32* %152, align 4
  %154 = icmp ugt i32 %153, %150
  br i1 %154, label %155, label %205

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 1
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 1
  br i1 %159, label %167, label %161

161:                                              ; preds = %155
  %162 = bitcast %"class.WTF::StringImpl"* %160 to i8*
  %163 = zext i32 %150 to i64
  %164 = getelementptr inbounds i8, i8* %162, i64 %163
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i16
  br label %172

167:                                              ; preds = %155
  %168 = bitcast %"class.WTF::StringImpl"* %160 to i16*
  %169 = zext i32 %150 to i64
  %170 = getelementptr inbounds i16, i16* %168, i64 %169
  %171 = load i16, i16* %170, align 2
  br label %172

172:                                              ; preds = %161, %167
  %173 = phi i16 [ %166, %161 ], [ %171, %167 ]
  %174 = icmp eq i16 %173, 32
  br i1 %174, label %175, label %205

175:                                              ; preds = %172
  %176 = bitcast %"class.WTF::StringImpl"* %160 to i8*
  %177 = bitcast %"class.WTF::StringImpl"* %160 to i16*
  %178 = zext i32 %150 to i64
  br label %179

179:                                              ; preds = %175, %198
  %180 = phi i64 [ %178, %175 ], [ %201, %198 ]
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %202, label %182

182:                                              ; preds = %179
  %183 = trunc i64 %180 to i32
  %184 = add i32 %183, -1
  %185 = icmp ugt i32 %153, %184
  br i1 %185, label %186, label %202

186:                                              ; preds = %182
  %187 = load atomic i32, i32* %156 monotonic, align 4
  %188 = and i32 %187, 1
  %189 = icmp eq i32 %188, 0
  %190 = zext i32 %184 to i64
  br i1 %189, label %195, label %191

191:                                              ; preds = %186
  %192 = getelementptr inbounds i8, i8* %176, i64 %190
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i16
  br label %198

195:                                              ; preds = %186
  %196 = getelementptr inbounds i16, i16* %177, i64 %190
  %197 = load i16, i16* %196, align 2
  br label %198

198:                                              ; preds = %191, %195
  %199 = phi i16 [ %194, %191 ], [ %197, %195 ]
  %200 = icmp eq i16 %199, 32
  %201 = add nsw i64 %180, -1
  br i1 %200, label %179, label %202

202:                                              ; preds = %182, %179, %198
  %203 = trunc i64 %180 to i32
  %204 = add i32 %203, 1
  tail call void @_ZN5blink27TextIteratorTextNodeHandler8EmitTextEPKNS_10LayoutTextEjj(%"class.blink::TextIteratorTextNodeHandler"* %0, %"class.blink::LayoutText"* %40, i32 %203, i32 %204)
  br label %367

205:                                              ; preds = %149, %151, %147, %172
  %206 = load %"class.blink::Text"*, %"class.blink::Text"** %3, align 8
  tail call void @_ZN5blink21TextIteratorTextState16EmitChar16BeforeEDsRKNS_4TextEj(%"class.blink::TextIteratorTextState"* %131, i16 zeroext 32, %"class.blink::Text"* dereferenceable(88) %206, i32 %98) #11
  store i8 0, i8* %11, align 8
  br label %367

207:                                              ; preds = %129, %134, %134, %122, %141
  %208 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %6, align 8
  %209 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %208, i64 0, i32 4
  %210 = load i16, i16* %209, align 4
  %211 = zext i16 %210 to i32
  %212 = add i32 %96, %211
  %213 = icmp ult i32 %85, %212
  %214 = select i1 %213, i32 %85, i32 %212
  %215 = load i16, i16* %89, align 8
  %216 = and i16 %215, 512
  %217 = icmp eq i16 %216, 0
  br i1 %217, label %225, label %218

218:                                              ; preds = %207
  %219 = load i32, i32* %13, align 8
  %220 = add i32 %219, 1
  %221 = load i32, i32* %9, align 4
  %222 = icmp ult i32 %220, %221
  br i1 %222, label %223, label %236

223:                                              ; preds = %218
  %224 = tail call dereferenceable(8) %"class.blink::InlineTextBox"** @_ZN3WTF6VectorIPN5blink13InlineTextBoxELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1659"* %10, i32 %220) #11
  br label %227

225:                                              ; preds = %207
  %226 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %208, i64 0, i32 2
  br label %227

227:                                              ; preds = %223, %225
  %228 = phi %"class.blink::InlineTextBox"** [ %224, %223 ], [ %226, %225 ]
  %229 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %228, align 8
  %230 = icmp eq %"class.blink::InlineTextBox"* %229, null
  br i1 %230, label %236, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %229, i64 0, i32 0, i32 4, i32 0
  %233 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %232, align 8
  %234 = icmp eq %"class.blink::LayoutObject"* %233, %41
  br i1 %234, label %236, label %235

235:                                              ; preds = %231
  store %"class.blink::InlineTextBox"* null, %"class.blink::InlineTextBox"** %6, align 8
  br label %367

236:                                              ; preds = %227, %218, %231
  %237 = phi i1 [ true, %231 ], [ false, %227 ], [ false, %218 ]
  %238 = phi %"class.blink::InlineTextBox"* [ %229, %231 ], [ null, %227 ], [ null, %218 ]
  %239 = icmp ult i32 %98, %214
  br i1 %239, label %240, label %354

240:                                              ; preds = %236
  br i1 %58, label %319, label %241

241:                                              ; preds = %240
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 1
  %243 = load i32, i32* %242, align 4
  %244 = icmp ugt i32 %243, %98
  br i1 %244, label %245, label %279

245:                                              ; preds = %241
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load atomic i32, i32* %246 monotonic, align 4
  %248 = and i32 %247, 1
  %249 = icmp eq i32 %248, 0
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 1
  br i1 %249, label %257, label %251

251:                                              ; preds = %245
  %252 = bitcast %"class.WTF::StringImpl"* %250 to i8*
  %253 = zext i32 %98 to i64
  %254 = getelementptr inbounds i8, i8* %252, i64 %253
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i16
  br label %262

257:                                              ; preds = %245
  %258 = bitcast %"class.WTF::StringImpl"* %250 to i16*
  %259 = zext i32 %98 to i64
  %260 = getelementptr inbounds i16, i16* %258, i64 %259
  %261 = load i16, i16* %260, align 2
  br label %262

262:                                              ; preds = %251, %257
  %263 = phi i16 [ %256, %251 ], [ %261, %257 ]
  %264 = icmp eq i16 %263, 10
  br i1 %264, label %265, label %279

265:                                              ; preds = %262
  %266 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %43, align 8
  %267 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %266, i64 0, i32 9
  %268 = bitcast [20 x i8]* %267 to i160*
  %269 = load i160, i160* %268, align 8
  %270 = and i160 %269, 520192
  %271 = icmp eq i160 %270, 32768
  %272 = load %"class.blink::TextIteratorTextState"*, %"class.blink::TextIteratorTextState"** %12, align 8
  %273 = load %"class.blink::Text"*, %"class.blink::Text"** %3, align 8
  br i1 %271, label %274, label %275

274:                                              ; preds = %265
  tail call void @_ZN5blink21TextIteratorTextState16EmitChar16BeforeEDsRKNS_4TextEj(%"class.blink::TextIteratorTextState"* %272, i16 zeroext 10, %"class.blink::Text"* dereferenceable(88) %273, i32 %98) #11
  br label %276

275:                                              ; preds = %265
  tail call void @_ZN5blink21TextIteratorTextState22EmitReplacmentCodeUnitEDsRKNS_4TextEj(%"class.blink::TextIteratorTextState"* %272, i16 zeroext 32, %"class.blink::Text"* dereferenceable(88) %273, i32 %98) #11
  br label %276

276:                                              ; preds = %275, %274
  store i8 0, i8* %11, align 8
  %277 = add i32 %81, 1
  %278 = add i32 %277, %98
  store i32 %278, i32* %7, align 8
  br label %324

279:                                              ; preds = %262, %241
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = load atomic i32, i32* %280 monotonic, align 4
  %282 = and i32 %281, 1
  %283 = icmp eq i32 %282, 0
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 1
  br i1 %283, label %299, label %285

285:                                              ; preds = %279
  br i1 %244, label %286, label %319

286:                                              ; preds = %285
  %287 = bitcast %"class.WTF::StringImpl"* %284 to i8*
  %288 = zext i32 %98 to i64
  %289 = getelementptr inbounds i8, i8* %287, i64 %288
  %290 = sub i32 %243, %98
  %291 = zext i32 %290 to i64
  %292 = tail call i8* @memchr(i8* %289, i32 10, i64 %291) #12
  %293 = icmp eq i8* %292, null
  %294 = ptrtoint i8* %292 to i64
  %295 = ptrtoint %"class.WTF::StringImpl"* %284 to i64
  %296 = sub i64 %294, %295
  %297 = trunc i64 %296 to i32
  %298 = select i1 %293, i32 -1, i32 %297
  br label %314

299:                                              ; preds = %279
  %300 = bitcast %"class.WTF::StringImpl"* %284 to i16*
  br i1 %244, label %301, label %319

301:                                              ; preds = %299
  %302 = zext i32 %98 to i64
  br label %303

303:                                              ; preds = %308, %301
  %304 = phi i64 [ %302, %301 ], [ %309, %308 ]
  %305 = getelementptr inbounds i16, i16* %300, i64 %304
  %306 = load i16, i16* %305, align 2
  %307 = icmp eq i16 %306, 10
  br i1 %307, label %312, label %308

308:                                              ; preds = %303
  %309 = add nuw nsw i64 %304, 1
  %310 = trunc i64 %309 to i32
  %311 = icmp eq i32 %243, %310
  br i1 %311, label %319, label %303

312:                                              ; preds = %303
  %313 = trunc i64 %304 to i32
  br label %314

314:                                              ; preds = %286, %312
  %315 = phi i32 [ %298, %286 ], [ %313, %312 ]
  %316 = icmp eq i32 %315, -1
  %317 = icmp ugt i32 %315, %214
  %318 = or i1 %316, %317
  br i1 %318, label %319, label %321

319:                                              ; preds = %308, %240, %299, %285, %314
  %320 = tail call i32 @_ZN5blink27TextIteratorTextNodeHandler29RestoreCollapsedTrailingSpaceEPNS_13InlineTextBoxEj(%"class.blink::TextIteratorTextNodeHandler"* %0, %"class.blink::InlineTextBox"* %238, i32 %214)
  br label %321

321:                                              ; preds = %314, %319
  %322 = phi i32 [ %320, %319 ], [ %315, %314 ]
  %323 = add i32 %322, %81
  store i32 %323, i32* %7, align 8
  tail call void @_ZN5blink27TextIteratorTextNodeHandler8EmitTextEPKNS_10LayoutTextEjj(%"class.blink::TextIteratorTextNodeHandler"* %0, %"class.blink::LayoutText"* %40, i32 %98, i32 %322)
  br label %324

324:                                              ; preds = %321, %276
  %325 = load %"class.blink::TextIteratorTextState"*, %"class.blink::TextIteratorTextState"** %12, align 8
  %326 = tail call i32 @_ZNK5blink21TextIteratorTextState17PositionEndOffsetEv(%"class.blink::TextIteratorTextState"* %325) #11
  %327 = add i32 %212, %81
  %328 = icmp ult i32 %326, %327
  br i1 %328, label %367, label %329

329:                                              ; preds = %324
  %330 = load i24, i24* %5, align 4
  %331 = and i24 %330, 16384
  %332 = icmp ne i24 %331, 0
  %333 = icmp eq i32 %212, %85
  %334 = and i1 %333, %332
  br i1 %334, label %335, label %336

335:                                              ; preds = %329
  store %"class.blink::InlineTextBox"* null, %"class.blink::InlineTextBox"** %6, align 8
  br label %367

336:                                              ; preds = %329
  br i1 %237, label %337, label %339

337:                                              ; preds = %336
  %338 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %238, i64 0, i32 3
  br label %342

339:                                              ; preds = %336
  br i1 %58, label %347, label %340

340:                                              ; preds = %339
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 1
  br label %342

342:                                              ; preds = %340, %337
  %343 = phi i32* [ %338, %337 ], [ %341, %340 ]
  %344 = load i32, i32* %343, align 4
  %345 = icmp ugt i32 %344, %214
  br i1 %345, label %346, label %347

346:                                              ; preds = %342
  store i8 1, i8* %11, align 8
  br label %347

347:                                              ; preds = %339, %346, %342
  store %"class.blink::InlineTextBox"* %238, %"class.blink::InlineTextBox"** %6, align 8
  %348 = load i16, i16* %89, align 8
  %349 = and i16 %348, 512
  %350 = icmp eq i16 %349, 0
  br i1 %350, label %367, label %351

351:                                              ; preds = %347
  %352 = load i32, i32* %13, align 8
  %353 = add i32 %352, 1
  store i32 %353, i32* %13, align 8
  br label %367

354:                                              ; preds = %236
  %355 = icmp ult i32 %96, %85
  br i1 %355, label %358, label %356

356:                                              ; preds = %354
  %357 = load i32, i32* %8, align 4
  store i32 %357, i32* %7, align 8
  br label %367

358:                                              ; preds = %354
  store %"class.blink::InlineTextBox"* %238, %"class.blink::InlineTextBox"** %6, align 8
  %359 = load i16, i16* %89, align 8
  %360 = and i16 %359, 512
  %361 = icmp eq i16 %360, 0
  br i1 %361, label %365, label %362

362:                                              ; preds = %358
  %363 = load i32, i32* %13, align 8
  %364 = add i32 %363, 1
  store i32 %364, i32* %13, align 8
  br label %365

365:                                              ; preds = %358, %362
  %366 = icmp eq %"class.blink::InlineTextBox"* %238, null
  br i1 %366, label %367, label %93

367:                                              ; preds = %365, %76, %347, %351, %324, %356, %335, %235, %202, %205
  %368 = phi i32 [ 1, %205 ], [ 1, %202 ], [ 1, %235 ], [ 1, %335 ], [ 1, %356 ], [ 1, %324 ], [ 1, %351 ], [ 1, %347 ], [ 0, %76 ], [ 0, %365 ]
  br i1 %58, label %382, label %369

369:                                              ; preds = %367
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %371 = load atomic i32, i32* %370 monotonic, align 4
  %372 = and i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %375 = load i32, i32* %374, align 4
  br i1 %373, label %376, label %378

376:                                              ; preds = %369
  %377 = add i32 %375, -1
  store i32 %377, i32* %374, align 4
  br label %378

378:                                              ; preds = %376, %369
  %379 = phi i32 [ %377, %376 ], [ %375, %369 ]
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %382

381:                                              ; preds = %378
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #11
  br label %382

382:                                              ; preds = %367, %378, %381
  %383 = icmp eq i32 %368, 0
  br i1 %383, label %384, label %419

384:                                              ; preds = %382
  %385 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %6, align 8
  %386 = icmp eq %"class.blink::InlineTextBox"* %385, null
  br i1 %386, label %387, label %419

387:                                              ; preds = %54, %384
  %388 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %14, align 8
  %389 = icmp eq %"class.blink::InlineTextBox"* %388, null
  %390 = ptrtoint %"class.blink::InlineTextBox"* %388 to i64
  br i1 %389, label %419, label %391

391:                                              ; preds = %387
  %392 = load i32, i32* %7, align 8
  %393 = load i32, i32* %8, align 4
  %394 = icmp ult i32 %392, %393
  br i1 %394, label %395, label %419

395:                                              ; preds = %391
  store i64 %390, i64* %15, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #11
  %396 = load %"class.blink::Text"*, %"class.blink::Text"** %3, align 8
  %397 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %396, i64 0, i32 0, i32 0, i32 1
  %398 = load i32, i32* %397, align 8
  %399 = and i32 %398, 1
  %400 = icmp eq i32 %399, 0
  %401 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %396, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %400, label %406, label %402

402:                                              ; preds = %395
  %403 = bitcast %"class.blink::NodeData"** %401 to %"class.blink::NodeRareData"**
  %404 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %403, align 8
  %405 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %404, i64 0, i32 1, i32 0, i32 0
  br label %408

406:                                              ; preds = %395
  %407 = bitcast %"class.blink::NodeData"** %401 to %"class.blink::NodeRenderingData"**
  br label %408

408:                                              ; preds = %402, %406
  %409 = phi %"class.blink::NodeRenderingData"** [ %405, %402 ], [ %407, %406 ]
  %410 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %409, align 8
  %411 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %410, i64 0, i32 1
  %412 = bitcast %"class.blink::LayoutObject"** %411 to %"class.blink::LayoutText"**
  %413 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %412, align 8
  %414 = bitcast %"class.blink::LayoutText"* %413 to i32 (%"class.blink::LayoutText"*)***
  %415 = load i32 (%"class.blink::LayoutText"*)**, i32 (%"class.blink::LayoutText"*)*** %414, align 8
  %416 = getelementptr inbounds i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %415, i64 109
  %417 = load i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %416, align 8
  %418 = tail call i32 %417(%"class.blink::LayoutText"* %413) #11
  store i32 %418, i32* %7, align 8
  br label %17

419:                                              ; preds = %384, %387, %391, %382
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27TextIteratorTextNodeHandler26HandlePreFormattedTextNodeEv(%"class.blink::TextIteratorTextNodeHandler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 0
  %3 = load %"class.blink::Text"*, %"class.blink::Text"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %3, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %3, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %7, label %13, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %11 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %11, i64 0, i32 1, i32 0, i32 0
  br label %15

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRenderingData"**
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi %"class.blink::NodeRenderingData"** [ %12, %9 ], [ %14, %13 ]
  %17 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %17, i64 0, i32 1
  %19 = bitcast %"class.blink::LayoutObject"** %18 to %"class.blink::LayoutText"**
  %20 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %20, i64 0, i32 7, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %41, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i33
  %33 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #11
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !4

38:                                               ; preds = %29
  tail call void @llvm.trap() #11
  unreachable

39:                                               ; preds = %29
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  br label %41

41:                                               ; preds = %15, %24, %39
  %42 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 7
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 11
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %101, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %20, i64 0, i32 0, i32 5, i32 0
  %48 = bitcast %"class.blink::ComputedStyle"** %47 to %"class.blink::ComputedStyleBase"**
  %49 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %49, i64 0, i32 9
  %51 = bitcast [20 x i8]* %50 to i160*
  %52 = load i160, i160* %51, align 8
  %53 = and i160 %52, 3802951800684688204490109616128
  %54 = icmp eq i160 %53, 1267650600228229401496703205376
  br i1 %54, label %95, label %55

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %20, i64 0, i32 1
  %57 = load i16, i16* %56, align 8
  %58 = and i16 %57, 8192
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %101, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %20, i64 1, i32 0, i32 1
  %62 = bitcast %"class.blink::DisplayItemClient.base"* %61 to i8*
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %101, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %20, i64 1, i32 0, i32 4, i32 0, i64 4
  %67 = bitcast i8* %66 to %"class.blink::FirstLetterPseudoElement"**
  %68 = load %"class.blink::FirstLetterPseudoElement"*, %"class.blink::FirstLetterPseudoElement"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::FirstLetterPseudoElement", %"class.blink::FirstLetterPseudoElement"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.blink::FirstLetterPseudoElement", %"class.blink::FirstLetterPseudoElement"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %72, label %78, label %74

74:                                               ; preds = %65
  %75 = bitcast %"class.blink::NodeData"** %73 to %"class.blink::NodeRareData"**
  %76 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %76, i64 0, i32 1, i32 0, i32 0
  br label %80

78:                                               ; preds = %65
  %79 = bitcast %"class.blink::NodeData"** %73 to %"class.blink::NodeRenderingData"**
  br label %80

80:                                               ; preds = %78, %74
  %81 = phi %"class.blink::NodeRenderingData"** [ %77, %74 ], [ %79, %78 ]
  %82 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %82, i64 0, i32 1
  %84 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %83, align 8
  %85 = icmp eq %"class.blink::LayoutObject"* %84, null
  br i1 %85, label %101, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %84, i64 0, i32 5, i32 0
  %88 = bitcast %"class.blink::ComputedStyle"** %87 to %"class.blink::ComputedStyleBase"**
  %89 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %89, i64 0, i32 9
  %91 = bitcast [20 x i8]* %90 to i160*
  %92 = load i160, i160* %91, align 8
  %93 = and i160 %92, 3802951800684688204490109616128
  %94 = icmp eq i160 %93, 1267650600228229401496703205376
  br i1 %94, label %95, label %101

95:                                               ; preds = %46, %86
  %96 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 15
  %99 = load %"class.blink::TextIteratorTextState"*, %"class.blink::TextIteratorTextState"** %98, align 8
  %100 = load %"class.blink::Text"*, %"class.blink::Text"** %2, align 8
  tail call void @_ZN5blink21TextIteratorTextState16EmitChar16BeforeEDsRKNS_4TextEj(%"class.blink::TextIteratorTextState"* %99, i16 zeroext 32, %"class.blink::Text"* dereferenceable(88) %100, i32 %97) #11
  store i8 0, i8* %43, align 8
  store i8 1, i8* %42, align 8
  br label %245

101:                                              ; preds = %80, %60, %55, %41, %86
  %102 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 8
  %103 = load i8, i8* %102, align 1, !range !2
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %105, label %187

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %20, i64 0, i32 1
  %107 = load i16, i16* %106, align 8
  %108 = and i16 %107, 8192
  %109 = icmp eq i16 %108, 0
  br i1 %109, label %187, label %110

110:                                              ; preds = %105
  %111 = bitcast %"class.blink::LayoutText"* %20 to %"class.blink::LayoutTextFragment"*
  %112 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 1
  %113 = load i32, i32* %112, align 8
  %114 = bitcast %"class.blink::LayoutText"* %20 to i32 (%"class.blink::LayoutTextFragment"*)***
  %115 = load i32 (%"class.blink::LayoutTextFragment"*)**, i32 (%"class.blink::LayoutTextFragment"*)*** %114, align 8
  %116 = getelementptr inbounds i32 (%"class.blink::LayoutTextFragment"*)*, i32 (%"class.blink::LayoutTextFragment"*)** %115, i64 109
  %117 = load i32 (%"class.blink::LayoutTextFragment"*)*, i32 (%"class.blink::LayoutTextFragment"*)** %116, align 8
  %118 = tail call i32 %117(%"class.blink::LayoutTextFragment"* %111) #11
  %119 = icmp ult i32 %113, %118
  br i1 %119, label %120, label %187

120:                                              ; preds = %110
  %121 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = load i32 (%"class.blink::LayoutTextFragment"*)**, i32 (%"class.blink::LayoutTextFragment"*)*** %114, align 8
  %124 = getelementptr inbounds i32 (%"class.blink::LayoutTextFragment"*)*, i32 (%"class.blink::LayoutTextFragment"*)** %123, i64 109
  %125 = load i32 (%"class.blink::LayoutTextFragment"*)*, i32 (%"class.blink::LayoutTextFragment"*)** %124, align 8
  %126 = tail call i32 %125(%"class.blink::LayoutTextFragment"* %111) #11
  %127 = icmp ule i32 %122, %126
  tail call void @_ZN5blink27TextIteratorTextNodeHandler25HandleTextNodeFirstLetterEPNS_18LayoutTextFragmentE(%"class.blink::TextIteratorTextNodeHandler"* %0, %"class.blink::LayoutTextFragment"* %111)
  %128 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 10
  %129 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %128, align 8
  %130 = icmp eq %"class.blink::LayoutText"* %129, null
  br i1 %130, label %179, label %131

131:                                              ; preds = %120
  %132 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %129, i64 0, i32 7, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %152, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %152

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = zext i32 %142 to i33
  %144 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %143, i33 1) #11
  %145 = extractvalue { i33, i1 } %144, 1
  %146 = extractvalue { i33, i1 } %144, 0
  %147 = icmp slt i33 %146, 0
  %148 = or i1 %145, %147
  br i1 %148, label %149, label %150, !prof !4

149:                                              ; preds = %140
  tail call void @llvm.trap() #11
  unreachable

150:                                              ; preds = %140
  %151 = trunc i33 %146 to i32
  store i32 %151, i32* %141, align 4
  br label %152

152:                                              ; preds = %131, %135, %150
  %153 = load i32, i32* %112, align 8
  br i1 %127, label %157, label %154

154:                                              ; preds = %152
  br i1 %134, label %160, label %155

155:                                              ; preds = %154
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 1
  br label %157

157:                                              ; preds = %152, %155
  %158 = phi i32* [ %156, %155 ], [ %121, %152 ]
  %159 = load i32, i32* %158, align 4
  br label %160

160:                                              ; preds = %157, %154
  %161 = phi i32 [ 0, %154 ], [ %159, %157 ]
  %162 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %128, align 8
  tail call void @_ZN5blink27TextIteratorTextNodeHandler8EmitTextEPKNS_10LayoutTextEjj(%"class.blink::TextIteratorTextNodeHandler"* %0, %"class.blink::LayoutText"* %162, i32 %153, i32 %161)
  store %"class.blink::LayoutText"* null, %"class.blink::LayoutText"** %128, align 8
  %163 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 6
  store %"class.blink::InlineTextBox"* null, %"class.blink::InlineTextBox"** %163, align 8
  store i32 %161, i32* %112, align 8
  br i1 %127, label %165, label %164

164:                                              ; preds = %160
  store i8 1, i8* %42, align 8
  br label %165

165:                                              ; preds = %164, %160
  br i1 %134, label %245, label %166

166:                                              ; preds = %165
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %175

173:                                              ; preds = %166
  %174 = add i32 %172, -1
  store i32 %174, i32* %171, align 4
  br label %175

175:                                              ; preds = %173, %166
  %176 = phi i32 [ %174, %173 ], [ %172, %166 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %245

178:                                              ; preds = %175
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #11
  br label %245

179:                                              ; preds = %120
  br i1 %127, label %180, label %182

180:                                              ; preds = %179
  %181 = load i32, i32* %121, align 4
  store i32 %181, i32* %112, align 8
  br label %245

182:                                              ; preds = %179
  %183 = load i32 (%"class.blink::LayoutTextFragment"*)**, i32 (%"class.blink::LayoutTextFragment"*)*** %114, align 8
  %184 = getelementptr inbounds i32 (%"class.blink::LayoutTextFragment"*)*, i32 (%"class.blink::LayoutTextFragment"*)** %183, i64 109
  %185 = load i32 (%"class.blink::LayoutTextFragment"*)*, i32 (%"class.blink::LayoutTextFragment"*)** %184, align 8
  %186 = tail call i32 %185(%"class.blink::LayoutTextFragment"* %111) #11
  store i32 %186, i32* %112, align 8
  br label %187

187:                                              ; preds = %105, %101, %182, %110
  %188 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %20, i64 0, i32 0, i32 5, i32 0
  %189 = bitcast %"class.blink::ComputedStyle"** %188 to %"class.blink::ComputedStyleBase"**
  %190 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %190, i64 0, i32 9
  %192 = bitcast [20 x i8]* %191 to i160*
  %193 = load i160, i160* %192, align 8
  %194 = and i160 %193, 3802951800684688204490109616128
  %195 = icmp eq i160 %194, 1267650600228229401496703205376
  br i1 %195, label %202, label %196

196:                                              ; preds = %187
  %197 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 14
  %198 = bitcast %"class.blink::TextIteratorBehavior"* %197 to i24*
  %199 = load i24, i24* %198, align 4
  %200 = and i24 %199, 4096
  %201 = icmp eq i24 %200, 0
  br i1 %201, label %245, label %202

202:                                              ; preds = %196, %187
  %203 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 1
  %204 = load i32, i32* %203, align 8
  %205 = bitcast %"class.blink::LayoutText"* %20 to i32 (%"class.blink::LayoutText"*)***
  %206 = load i32 (%"class.blink::LayoutText"*)**, i32 (%"class.blink::LayoutText"*)*** %205, align 8
  %207 = getelementptr inbounds i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %206, i64 109
  %208 = load i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %207, align 8
  %209 = tail call i32 %208(%"class.blink::LayoutText"* %20) #11
  %210 = sub i32 %204, %209
  br i1 %23, label %214, label %211

211:                                              ; preds = %202
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 1
  %213 = load i32, i32* %212, align 4
  br label %214

214:                                              ; preds = %202, %211
  %215 = phi i32 [ %213, %211 ], [ 0, %202 ]
  %216 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 2
  %217 = load i32, i32* %216, align 4
  %218 = load i32 (%"class.blink::LayoutText"*)**, i32 (%"class.blink::LayoutText"*)*** %205, align 8
  %219 = getelementptr inbounds i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %218, i64 109
  %220 = load i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %219, align 8
  %221 = tail call i32 %220(%"class.blink::LayoutText"* %20) #11
  %222 = sub i32 %217, %221
  %223 = icmp ult i32 %222, %215
  %224 = select i1 %223, i32 %222, i32 %215
  %225 = icmp ult i32 %210, %224
  br i1 %225, label %226, label %245

226:                                              ; preds = %214
  %227 = load %"class.blink::Text"*, %"class.blink::Text"** %2, align 8
  %228 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %227, i64 0, i32 0, i32 0, i32 1
  %229 = load i32, i32* %228, align 8
  %230 = and i32 %229, 1
  %231 = icmp eq i32 %230, 0
  %232 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %227, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %231, label %237, label %233

233:                                              ; preds = %226
  %234 = bitcast %"class.blink::NodeData"** %232 to %"class.blink::NodeRareData"**
  %235 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %234, align 8
  %236 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %235, i64 0, i32 1, i32 0, i32 0
  br label %239

237:                                              ; preds = %226
  %238 = bitcast %"class.blink::NodeData"** %232 to %"class.blink::NodeRenderingData"**
  br label %239

239:                                              ; preds = %233, %237
  %240 = phi %"class.blink::NodeRenderingData"** [ %236, %233 ], [ %238, %237 ]
  %241 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %240, align 8
  %242 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %241, i64 0, i32 1
  %243 = bitcast %"class.blink::LayoutObject"** %242 to %"class.blink::LayoutText"**
  %244 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %243, align 8
  tail call void @_ZN5blink27TextIteratorTextNodeHandler8EmitTextEPKNS_10LayoutTextEjj(%"class.blink::TextIteratorTextNodeHandler"* %0, %"class.blink::LayoutText"* %244, i32 %210, i32 %224)
  br label %245

245:                                              ; preds = %196, %239, %214, %178, %175, %165, %180, %95
  br i1 %23, label %259, label %246

246:                                              ; preds = %245
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load atomic i32, i32* %247 monotonic, align 4
  %249 = and i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %252 = load i32, i32* %251, align 4
  br i1 %250, label %253, label %255

253:                                              ; preds = %246
  %254 = add i32 %252, -1
  store i32 %254, i32* %251, align 4
  br label %255

255:                                              ; preds = %253, %246
  %256 = phi i32 [ %254, %253 ], [ %252, %246 ]
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %259

258:                                              ; preds = %255
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #11
  br label %259

259:                                              ; preds = %245, %255, %258
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"*, %"class.blink::Node"*, i32) unnamed_addr #1

declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.blink::NGOffsetMapping"* @_ZN5blink15NGOffsetMapping6GetForERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* sret, %"class.blink::EphemeralRangeTemplate"*) local_unnamed_addr #1

declare void @_ZNK5blink15NGOffsetMapping26GetMappingUnitsForDOMRangeERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.WTF::Vector.1653"* sret, %"class.blink::NGOffsetMapping"*, %"class.blink::EphemeralRangeTemplate"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN5blink21TextIteratorTextState8EmitTextERKNS_4TextEjjRKN3WTF6StringEjj(%"class.blink::TextIteratorTextState"*, %"class.blink::Text"* dereferenceable(88), i32, i32, %"class.WTF::String"* dereferenceable(8), i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink27TextIteratorTextNodeHandler23ShouldHandleFirstLetterERKNS_10LayoutTextE(%"class.blink::TextIteratorTextNodeHandler"* nocapture readonly, %"class.blink::LayoutText"* dereferenceable(144)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 8
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %21

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %1, i64 0, i32 1
  %8 = load i16, i16* %7, align 8
  %9 = and i16 %8, 8192
  %10 = icmp eq i16 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::LayoutText"* %1 to %"class.blink::LayoutTextFragment"*
  %13 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = bitcast %"class.blink::LayoutText"* %1 to i32 (%"class.blink::LayoutTextFragment"*)***
  %16 = load i32 (%"class.blink::LayoutTextFragment"*)**, i32 (%"class.blink::LayoutTextFragment"*)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.blink::LayoutTextFragment"*)*, i32 (%"class.blink::LayoutTextFragment"*)** %16, i64 109
  %18 = load i32 (%"class.blink::LayoutTextFragment"*)*, i32 (%"class.blink::LayoutTextFragment"*)** %17, align 8
  %19 = tail call i32 %18(%"class.blink::LayoutTextFragment"* %12) #11
  %20 = icmp ult i32 %14, %19
  br label %21

21:                                               ; preds = %6, %2, %11
  %22 = phi i1 [ %20, %11 ], [ false, %2 ], [ false, %6 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27TextIteratorTextNodeHandler16EmitChar16BeforeEDsj(%"class.blink::TextIteratorTextNodeHandler"* nocapture, i16 zeroext, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 15
  %5 = load %"class.blink::TextIteratorTextState"*, %"class.blink::TextIteratorTextState"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 0
  %7 = load %"class.blink::Text"*, %"class.blink::Text"** %6, align 8
  tail call void @_ZN5blink21TextIteratorTextState16EmitChar16BeforeEDsRKNS_4TextEj(%"class.blink::TextIteratorTextState"* %5, i16 zeroext %1, %"class.blink::Text"* dereferenceable(88) %7, i32 %2) #11
  %8 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 11
  store i8 0, i8* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27TextIteratorTextNodeHandler25HandleTextNodeFirstLetterEPNS_18LayoutTextFragmentE(%"class.blink::TextIteratorTextNodeHandler"* nocapture, %"class.blink::LayoutTextFragment"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 8
  store i8 1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.blink::LayoutTextFragment", %"class.blink::LayoutTextFragment"* %1, i64 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %101, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::LayoutTextFragment", %"class.blink::LayoutTextFragment"* %1, i64 0, i32 5, i32 0, i32 0
  %10 = load %"class.blink::FirstLetterPseudoElement"*, %"class.blink::FirstLetterPseudoElement"** %9, align 8
  %11 = icmp eq %"class.blink::FirstLetterPseudoElement"* %10, null
  br i1 %11, label %101, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::FirstLetterPseudoElement", %"class.blink::FirstLetterPseudoElement"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.blink::FirstLetterPseudoElement", %"class.blink::FirstLetterPseudoElement"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %16, label %22, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.blink::NodeData"** %17 to %"class.blink::NodeRareData"**
  %20 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %20, i64 0, i32 1, i32 0, i32 0
  br label %24

22:                                               ; preds = %12
  %23 = bitcast %"class.blink::NodeData"** %17 to %"class.blink::NodeRenderingData"**
  br label %24

24:                                               ; preds = %18, %22
  %25 = phi %"class.blink::NodeRenderingData"** [ %21, %18 ], [ %23, %22 ]
  %26 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %26, i64 0, i32 1
  %28 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 5, i32 0
  %30 = bitcast %"class.blink::ComputedStyle"** %29 to %"class.blink::ComputedStyleBase"**
  %31 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %31, i64 0, i32 9
  %33 = bitcast [20 x i8]* %32 to i160*
  %34 = load i160, i160* %33, align 8
  %35 = and i160 %34, 3802951800684688204490109616128
  %36 = icmp eq i160 %35, 1267650600228229401496703205376
  br i1 %36, label %43, label %37

37:                                               ; preds = %24
  %38 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 14
  %39 = bitcast %"class.blink::TextIteratorBehavior"* %38 to i24*
  %40 = load i24, i24* %39, align 4
  %41 = and i24 %40, 4096
  %42 = icmp eq i24 %41, 0
  br i1 %42, label %101, label %43

43:                                               ; preds = %37, %24
  %44 = bitcast %"class.blink::LayoutObject"* %28 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %45 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %45, i64 13
  %47 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %46, align 8
  %48 = tail call %"class.blink::LayoutObjectChildList"* %47(%"class.blink::LayoutObject"* %28) #11
  %49 = icmp eq %"class.blink::LayoutObjectChildList"* %48, null
  br i1 %49, label %54, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %48, i64 0, i32 0
  %52 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %51, align 8
  %53 = bitcast %"class.blink::LayoutObject"* %52 to %"class.blink::LayoutText"*
  br label %54

54:                                               ; preds = %43, %50
  %55 = phi %"class.blink::LayoutText"* [ %53, %50 ], [ null, %43 ]
  %56 = phi %"class.blink::LayoutObject"* [ %52, %50 ], [ null, %43 ]
  %57 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 12
  %58 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %70, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %66, label %65

65:                                               ; preds = %61
  store i32 0, i32* %62, align 4
  br label %66

66:                                               ; preds = %65, %61
  %67 = bitcast %"class.WTF::Vector.1659"* %57 to i8**
  %68 = load i8*, i8** %67, align 8
  %69 = bitcast %"class.WTF::Vector.1659"* %57 to i64*
  store atomic i64 0, i64* %69 monotonic, align 8
  store i32 0, i32* %58, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %68) #11
  br label %70

70:                                               ; preds = %54, %66
  %71 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 6
  %72 = bitcast %"class.blink::InlineTextBox"** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 9
  %75 = bitcast %"class.blink::InlineTextBox"** %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = icmp eq %"class.blink::LayoutObject"* %56, null
  br i1 %76, label %83, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %56, i64 0, i32 4
  %79 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %78 to i96*
  %80 = load i96, i96* %79, align 4
  %81 = and i96 %80, 33554432
  %82 = icmp eq i96 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %77, %70
  %84 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str, i64 0, i64 0), i32 546, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0)) #11
  %85 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #11
  br label %86

86:                                               ; preds = %77, %83
  %87 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 10
  store %"class.blink::LayoutText"* %55, %"class.blink::LayoutText"** %87, align 8
  %88 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %55, i64 0, i32 0, i32 4
  %89 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %88 to i96*
  %90 = load i96, i96* %89, align 4
  %91 = and i96 %90, 268435456
  %92 = icmp eq i96 %91, 0
  br i1 %92, label %95, label %93

93:                                               ; preds = %86
  %94 = call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #11
  br label %97

95:                                               ; preds = %86
  %96 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %55, i64 0, i32 9, i32 0
  br label %97

97:                                               ; preds = %93, %95
  %98 = phi %"class.blink::InlineTextBoxList"* [ %94, %93 ], [ %96, %95 ]
  %99 = bitcast %"class.blink::InlineTextBoxList"* %98 to i64*
  %100 = load i64, i64* %99, align 8
  store i64 %100, i64* %72, align 8
  br label %101

101:                                              ; preds = %37, %2, %8, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27TextIteratorTextNodeHandler8EmitTextEPKNS_10LayoutTextEjj(%"class.blink::TextIteratorTextNodeHandler"* nocapture, %"class.blink::LayoutText"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 14
  %9 = bitcast %"class.blink::TextIteratorBehavior"* %8 to i24*
  %10 = load i24, i24* %9, align 4
  %11 = and i24 %10, 32
  %12 = icmp eq i24 %11, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.blink::LayoutText"* %1 to %"class.WTF::StringImpl"* (%"class.blink::LayoutText"*)***
  %15 = load %"class.WTF::StringImpl"* (%"class.blink::LayoutText"*)**, %"class.WTF::StringImpl"* (%"class.blink::LayoutText"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::LayoutText"*)*, %"class.WTF::StringImpl"* (%"class.blink::LayoutText"*)** %15, i64 108
  %17 = load %"class.WTF::StringImpl"* (%"class.blink::LayoutText"*)*, %"class.WTF::StringImpl"* (%"class.blink::LayoutText"*)** %16, align 8
  %18 = tail call %"class.WTF::StringImpl"* %17(%"class.blink::LayoutText"* %1) #11
  %19 = ptrtoint %"class.WTF::StringImpl"* %18 to i64
  %20 = bitcast %"class.WTF::String"* %5 to i64*
  store i64 %19, i64* %20, align 8
  br label %42

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %1, i64 0, i32 7, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %7, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #11
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !4

39:                                               ; preds = %30
  tail call void @llvm.trap() #11
  unreachable

40:                                               ; preds = %30
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %31, align 4
  br label %42

42:                                               ; preds = %40, %25, %21, %13
  %43 = load i24, i24* %9, align 4
  %44 = and i24 %43, 8
  %45 = icmp eq i24 %44, 0
  br i1 %45, label %65, label %46

46:                                               ; preds = %42
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %65, label %49

49:                                               ; preds = %46
  %50 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"* nonnull %47, i16 zeroext 160, i16 zeroext 32) #11
  %51 = ptrtoint %"class.WTF::StringImpl"* %50 to i64
  %52 = bitcast %"class.WTF::String"* %5 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %49
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %49
  %62 = phi i32 [ %60, %59 ], [ %58, %49 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #11
  br label %65

65:                                               ; preds = %42, %64, %61, %46
  %66 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 15
  %67 = load %"class.blink::TextIteratorTextState"*, %"class.blink::TextIteratorTextState"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 0
  %69 = load %"class.blink::Text"*, %"class.blink::Text"** %68, align 8
  %70 = bitcast %"class.blink::LayoutText"* %1 to i32 (%"class.blink::LayoutText"*)***
  %71 = load i32 (%"class.blink::LayoutText"*)**, i32 (%"class.blink::LayoutText"*)*** %70, align 8
  %72 = getelementptr inbounds i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %71, i64 109
  %73 = load i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %72, align 8
  %74 = tail call i32 %73(%"class.blink::LayoutText"* %1) #11
  %75 = add i32 %74, %2
  %76 = load i32 (%"class.blink::LayoutText"*)**, i32 (%"class.blink::LayoutText"*)*** %70, align 8
  %77 = getelementptr inbounds i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %76, i64 109
  %78 = load i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %77, align 8
  %79 = tail call i32 %78(%"class.blink::LayoutText"* %1) #11
  %80 = add i32 %79, %3
  call void @_ZN5blink21TextIteratorTextState8EmitTextERKNS_4TextEjjRKN3WTF6StringEjj(%"class.blink::TextIteratorTextState"* %67, %"class.blink::Text"* dereferenceable(88) %69, i32 %75, i32 %80, %"class.WTF::String"* nonnull dereferenceable(8) %5, i32 %2, i32 %3) #11
  %81 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 11
  store i8 0, i8* %81, align 8
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %65
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #11
  br label %97

97:                                               ; preds = %65, %93, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27TextIteratorTextNodeHandler21HandleTextNodeInRangeEPKNS_4TextEjj(%"class.blink::TextIteratorTextNodeHandler"*, %"class.blink::Text"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.WTF::Vector.1653", align 8
  %8 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %9 = alloca %"class.blink::PositionTemplate", align 8
  %10 = alloca %"class.blink::PositionTemplate", align 8
  %11 = alloca %"class.blink::InlineTextBox"*, align 8
  %12 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 0
  store %"class.blink::Text"* %1, %"class.blink::Text"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 1
  store i32 %2, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 2
  store i32 %3, i32* %14, align 4
  %15 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 8
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 10
  store %"class.blink::LayoutText"* null, %"class.blink::LayoutText"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 3
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 4
  %19 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  store i32 0, i32* %23, align 4
  br label %27

27:                                               ; preds = %26, %22
  %28 = bitcast %"class.WTF::Vector.1653"* %18 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = bitcast %"class.WTF::Vector.1653"* %18 to i64*
  store atomic i64 0, i64* %30 monotonic, align 8
  store i32 0, i32* %19, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %29) #11
  %31 = load i32, i32* %13, align 8
  br label %32

32:                                               ; preds = %4, %27
  %33 = phi i32 [ %2, %4 ], [ %31, %27 ]
  %34 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %1, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %6, %"class.blink::Node"* %35, i32 %33) #11
  %36 = call %"class.blink::NGOffsetMapping"* @_ZN5blink15NGOffsetMapping6GetForERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #11
  %37 = icmp eq %"class.blink::NGOffsetMapping"* %36, null
  br i1 %37, label %87, label %38

38:                                               ; preds = %32
  %39 = load i32, i32* %14, align 4
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %41, label %60

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %1, i64 0, i32 0, i32 1
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %1, i64 0, i32 0, i32 2
  %47 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %46) #11
  br label %50

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %1, i64 0, i32 0, i32 3
  br label %50

50:                                               ; preds = %45, %48
  %51 = phi %"class.WTF::String"* [ %47, %45 ], [ %49, %48 ]
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %51, i64 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  br label %58

58:                                               ; preds = %50, %55
  %59 = phi i32 [ %57, %55 ], [ 0, %50 ]
  store i32 %59, i32* %14, align 4
  br label %60

60:                                               ; preds = %58, %38
  store i8 1, i8* %17, align 8
  %61 = bitcast %"class.WTF::Vector.1653"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #11
  %62 = bitcast %"class.blink::EphemeralRangeTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %62) #11
  %63 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #11
  %64 = load i32, i32* %13, align 8
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %9, %"class.blink::Node"* %35, i32 %64) #11
  %65 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #11
  %66 = load i32, i32* %14, align 4
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %10, %"class.blink::Node"* %35, i32 %66) #11
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* nonnull %8, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %9, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %10) #11
  call void @_ZNK5blink15NGOffsetMapping26GetMappingUnitsForDOMRangeERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.WTF::Vector.1653"* nonnull sret %7, %"class.blink::NGOffsetMapping"* nonnull %36, %"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %8) #11
  %67 = bitcast %"class.WTF::Vector.1653"* %7 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.WTF::Vector.1653"* %18 to i64*
  %70 = load i64, i64* %69, align 8
  store atomic i64 %70, i64* %67 monotonic, align 8
  store atomic i64 %68, i64* %69 monotonic, align 8
  %71 = getelementptr inbounds %"class.WTF::Vector.1653", %"class.WTF::Vector.1653"* %7, i64 0, i32 0, i32 0, i32 1
  %72 = load i32, i32* %19, align 4
  %73 = load i32, i32* %71, align 8
  store i32 %73, i32* %19, align 4
  store i32 %72, i32* %71, align 8
  %74 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %75 = getelementptr inbounds %"class.WTF::Vector.1653", %"class.WTF::Vector.1653"* %7, i64 0, i32 0, i32 0, i32 2
  %76 = load i32, i32* %74, align 4
  %77 = load i32, i32* %75, align 4
  store i32 %77, i32* %74, align 4
  store i32 %76, i32* %75, align 4
  %78 = getelementptr inbounds %"class.WTF::Vector.1653", %"class.WTF::Vector.1653"* %7, i64 0, i32 0, i32 0, i32 0
  %79 = icmp eq i64 %70, 0
  %80 = inttoptr i64 %70 to i8*
  br i1 %79, label %85, label %81, !prof !3

81:                                               ; preds = %60
  %82 = icmp eq i32 %76, 0
  br i1 %82, label %84, label %83, !prof !4

83:                                               ; preds = %81
  store i32 0, i32* %75, align 4
  br label %84

84:                                               ; preds = %83, %81
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %80) #11
  store %"class.blink::NGOffsetMappingUnit"* null, %"class.blink::NGOffsetMappingUnit"** %78, align 8
  br label %85

85:                                               ; preds = %60, %84
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %62) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #11
  %86 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 5
  store i32 0, i32* %86, align 8
  call void @_ZN5blink27TextIteratorTextNodeHandler26HandleTextNodeWithLayoutNGEv(%"class.blink::TextIteratorTextNodeHandler"* %0)
  br label %343

87:                                               ; preds = %32
  %88 = load %"class.blink::Text"*, %"class.blink::Text"** %12, align 8
  %89 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %88, i64 0, i32 0, i32 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %88, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %92, label %98, label %94

94:                                               ; preds = %87
  %95 = bitcast %"class.blink::NodeData"** %93 to %"class.blink::NodeRareData"**
  %96 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %96, i64 0, i32 1, i32 0, i32 0
  br label %100

98:                                               ; preds = %87
  %99 = bitcast %"class.blink::NodeData"** %93 to %"class.blink::NodeRenderingData"**
  br label %100

100:                                              ; preds = %94, %98
  %101 = phi %"class.blink::NodeRenderingData"** [ %97, %94 ], [ %99, %98 ]
  %102 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %102, i64 0, i32 1
  %104 = bitcast %"class.blink::LayoutObject"** %103 to %"class.blink::LayoutText"**
  %105 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %105, i64 0, i32 7, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %126, label %109

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %126

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = zext i32 %116 to i33
  %118 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %117, i33 1) #11
  %119 = extractvalue { i33, i1 } %118, 1
  %120 = extractvalue { i33, i1 } %118, 0
  %121 = icmp slt i33 %120, 0
  %122 = or i1 %119, %121
  br i1 %122, label %123, label %124, !prof !4

123:                                              ; preds = %114
  call void @llvm.trap() #11
  unreachable

124:                                              ; preds = %114
  %125 = trunc i33 %120 to i32
  store i32 %125, i32* %115, align 4
  br label %126

126:                                              ; preds = %100, %109, %124
  %127 = load i32, i32* %14, align 4
  %128 = icmp eq i32 %127, -1
  br i1 %128, label %129, label %141

129:                                              ; preds = %126
  %130 = bitcast %"class.blink::LayoutText"* %105 to i32 (%"class.blink::LayoutText"*)***
  %131 = load i32 (%"class.blink::LayoutText"*)**, i32 (%"class.blink::LayoutText"*)*** %130, align 8
  %132 = getelementptr inbounds i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %131, i64 109
  %133 = load i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %132, align 8
  %134 = call i32 %133(%"class.blink::LayoutText"* %105) #11
  br i1 %108, label %138, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  br label %138

138:                                              ; preds = %129, %135
  %139 = phi i32 [ %137, %135 ], [ 0, %129 ]
  %140 = add i32 %139, %134
  store i32 %140, i32* %14, align 4
  br label %141

141:                                              ; preds = %138, %126
  %142 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %105, i64 0, i32 0, i32 5, i32 0
  %143 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %143, i64 0, i32 0, i32 9
  %145 = bitcast [20 x i8]* %144 to i160*
  %146 = load i160, i160* %145, align 8
  %147 = and i160 %146, 286720
  %148 = icmp eq i160 %147, 0
  br i1 %148, label %150, label %149

149:                                              ; preds = %141
  call void @_ZN5blink27TextIteratorTextNodeHandler26HandlePreFormattedTextNodeEv(%"class.blink::TextIteratorTextNodeHandler"* %0)
  br label %329

150:                                              ; preds = %141
  %151 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %105, i64 0, i32 0, i32 4
  %152 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %151 to i96*
  %153 = load i96, i96* %152, align 4
  %154 = and i96 %153, 268435456
  %155 = icmp eq i96 %154, 0
  br i1 %155, label %158, label %156

156:                                              ; preds = %150
  %157 = call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #11
  br label %160

158:                                              ; preds = %150
  %159 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %105, i64 0, i32 9, i32 0
  br label %160

160:                                              ; preds = %156, %158
  %161 = phi %"class.blink::InlineTextBoxList"* [ %157, %156 ], [ %159, %158 ]
  %162 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %161, i64 0, i32 0, i32 0
  %163 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %162, align 8
  %164 = icmp eq %"class.blink::InlineTextBox"* %163, null
  br i1 %164, label %179, label %165

165:                                              ; preds = %160
  %166 = load i96, i96* %152, align 4
  %167 = and i96 %166, 268435456
  %168 = icmp eq i96 %167, 0
  br i1 %168, label %171, label %169

169:                                              ; preds = %165
  %170 = call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #11
  br label %173

171:                                              ; preds = %165
  %172 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %105, i64 0, i32 9, i32 0
  br label %173

173:                                              ; preds = %169, %171
  %174 = phi %"class.blink::InlineTextBoxList"* [ %170, %169 ], [ %172, %171 ]
  %175 = bitcast %"class.blink::InlineTextBoxList"* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 6
  %178 = bitcast %"class.blink::InlineTextBox"** %177 to i64*
  store i64 %176, i64* %178, align 8
  br label %179

179:                                              ; preds = %160, %173
  %180 = load i8, i8* %15, align 1, !range !2
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %182, label %197

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %105, i64 0, i32 1
  %184 = load i16, i16* %183, align 8
  %185 = and i16 %184, 8192
  %186 = icmp eq i16 %185, 0
  br i1 %186, label %197, label %187

187:                                              ; preds = %182
  %188 = bitcast %"class.blink::LayoutText"* %105 to %"class.blink::LayoutTextFragment"*
  %189 = load i32, i32* %13, align 8
  %190 = bitcast %"class.blink::LayoutText"* %105 to i32 (%"class.blink::LayoutTextFragment"*)***
  %191 = load i32 (%"class.blink::LayoutTextFragment"*)**, i32 (%"class.blink::LayoutTextFragment"*)*** %190, align 8
  %192 = getelementptr inbounds i32 (%"class.blink::LayoutTextFragment"*)*, i32 (%"class.blink::LayoutTextFragment"*)** %191, i64 109
  %193 = load i32 (%"class.blink::LayoutTextFragment"*)*, i32 (%"class.blink::LayoutTextFragment"*)** %192, align 8
  %194 = call i32 %193(%"class.blink::LayoutTextFragment"* %188) #11
  %195 = icmp ult i32 %189, %194
  br i1 %195, label %196, label %197

196:                                              ; preds = %187
  call void @_ZN5blink27TextIteratorTextNodeHandler25HandleTextNodeFirstLetterEPNS_18LayoutTextFragmentE(%"class.blink::TextIteratorTextNodeHandler"* %0, %"class.blink::LayoutTextFragment"* %188)
  br label %197

197:                                              ; preds = %182, %179, %196, %187
  %198 = phi i1 [ true, %196 ], [ false, %187 ], [ false, %179 ], [ false, %182 ]
  %199 = load i96, i96* %152, align 4
  %200 = and i96 %199, 268435456
  %201 = icmp eq i96 %200, 0
  br i1 %201, label %204, label %202

202:                                              ; preds = %197
  %203 = call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #11
  br label %206

204:                                              ; preds = %197
  %205 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %105, i64 0, i32 9, i32 0
  br label %206

206:                                              ; preds = %202, %204
  %207 = phi %"class.blink::InlineTextBoxList"* [ %203, %202 ], [ %205, %204 ]
  %208 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %207, i64 0, i32 0, i32 0
  %209 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %208, align 8
  %210 = icmp eq %"class.blink::InlineTextBox"* %209, null
  br i1 %210, label %211, label %234

211:                                              ; preds = %206
  br i1 %108, label %212, label %213

212:                                              ; preds = %211
  br i1 %198, label %235, label %254

213:                                              ; preds = %211
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 1
  %215 = load i32, i32* %214, align 4
  %216 = icmp eq i32 %215, 0
  %217 = or i1 %198, %216
  br i1 %217, label %234, label %218

218:                                              ; preds = %213
  %219 = bitcast %"class.blink::ComputedStyle"** %142 to %"class.blink::ComputedStyleBase"**
  %220 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %219, align 8
  %221 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %220, i64 0, i32 9
  %222 = bitcast [20 x i8]* %221 to i160*
  %223 = load i160, i160* %222, align 8
  %224 = and i160 %223, 3802951800684688204490109616128
  %225 = icmp eq i160 %224, 1267650600228229401496703205376
  br i1 %225, label %232, label %226

226:                                              ; preds = %218
  %227 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 14
  %228 = bitcast %"class.blink::TextIteratorBehavior"* %227 to i24*
  %229 = load i24, i24* %228, align 4
  %230 = and i24 %229, 4096
  %231 = icmp eq i24 %230, 0
  br i1 %231, label %330, label %232

232:                                              ; preds = %226, %218
  %233 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 11
  store i8 1, i8* %233, align 8
  br label %330

234:                                              ; preds = %213, %206
  br i1 %198, label %235, label %254

235:                                              ; preds = %212, %234
  %236 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %16, align 8
  %237 = icmp eq %"class.blink::LayoutText"* %236, null
  br i1 %237, label %238, label %254

238:                                              ; preds = %235
  %239 = load i32, i32* %14, align 4
  %240 = bitcast %"class.blink::LayoutText"* %105 to i32 (%"class.blink::LayoutText"*)***
  %241 = load i32 (%"class.blink::LayoutText"*)**, i32 (%"class.blink::LayoutText"*)*** %240, align 8
  %242 = getelementptr inbounds i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %241, i64 109
  %243 = load i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %242, align 8
  %244 = call i32 %243(%"class.blink::LayoutText"* %105) #11
  %245 = icmp ugt i32 %239, %244
  br i1 %245, label %249, label %246

246:                                              ; preds = %238
  %247 = load i32, i32* %14, align 4
  store i32 %247, i32* %13, align 8
  %248 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 6
  store %"class.blink::InlineTextBox"* null, %"class.blink::InlineTextBox"** %248, align 8
  br label %329

249:                                              ; preds = %238
  %250 = load i32 (%"class.blink::LayoutText"*)**, i32 (%"class.blink::LayoutText"*)*** %240, align 8
  %251 = getelementptr inbounds i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %250, i64 109
  %252 = load i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %251, align 8
  %253 = call i32 %252(%"class.blink::LayoutText"* %105) #11
  store i32 %253, i32* %13, align 8
  br label %254

254:                                              ; preds = %212, %235, %249, %234
  %255 = phi %"class.blink::LayoutText"* [ %105, %249 ], [ %105, %234 ], [ %236, %235 ], [ %105, %212 ]
  %256 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %255, i64 0, i32 1
  %257 = load i16, i16* %256, align 8
  %258 = and i16 %257, 512
  %259 = icmp eq i16 %258, 0
  br i1 %259, label %328, label %260

260:                                              ; preds = %254
  %261 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 12
  %262 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %263 = load i32, i32* %262, align 8
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %274, label %265

265:                                              ; preds = %260
  %266 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %267 = load i32, i32* %266, align 4
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %270, label %269

269:                                              ; preds = %265
  store i32 0, i32* %266, align 4
  br label %270

270:                                              ; preds = %269, %265
  %271 = bitcast %"class.WTF::Vector.1659"* %261 to i8**
  %272 = load i8*, i8** %271, align 8
  %273 = bitcast %"class.WTF::Vector.1659"* %261 to i64*
  store atomic i64 0, i64* %273 monotonic, align 8
  store i32 0, i32* %262, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %272) #11
  br label %274

274:                                              ; preds = %260, %270
  %275 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %255, i64 0, i32 0, i32 4
  %276 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %275 to i96*
  %277 = load i96, i96* %276, align 4
  %278 = and i96 %277, 268435456
  %279 = icmp eq i96 %278, 0
  br i1 %279, label %282, label %280

280:                                              ; preds = %274
  %281 = call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #11
  br label %284

282:                                              ; preds = %274
  %283 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %255, i64 0, i32 9, i32 0
  br label %284

284:                                              ; preds = %280, %282
  %285 = phi %"class.blink::InlineTextBoxList"* [ %281, %280 ], [ %283, %282 ]
  %286 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %285, i64 0, i32 0, i32 0
  %287 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %286, align 8
  %288 = icmp eq %"class.blink::InlineTextBox"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %284
  %290 = bitcast %"class.blink::InlineTextBox"** %11 to i8*
  %291 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %292 = getelementptr inbounds %"class.WTF::Vector.1659", %"class.WTF::Vector.1659"* %261, i64 0, i32 0, i32 0, i32 0
  br label %304

293:                                              ; preds = %318, %284
  %294 = getelementptr inbounds %"class.WTF::Vector.1659", %"class.WTF::Vector.1659"* %261, i64 0, i32 0, i32 0, i32 0
  %295 = load %"class.blink::InlineTextBox"**, %"class.blink::InlineTextBox"*** %294, align 8
  %296 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %297 = load i32, i32* %296, align 4
  %298 = zext i32 %297 to i64
  %299 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %295, i64 %298
  %300 = bitcast i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %300)
  store i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)* @_ZN5blink13InlineTextBox14CompareByStartEPKS0_S2_, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %5, align 8
  call void @_ZNSt3__16__sortIRPFbPKN5blink13InlineTextBoxES4_EPPS2_EEvT0_SA_T_(%"class.blink::InlineTextBox"** %295, %"class.blink::InlineTextBox"** %299, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** nonnull dereferenceable(8) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %300)
  %301 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 13
  store i32 0, i32* %301, align 8
  %302 = load i32, i32* %296, align 4
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %325, label %322

304:                                              ; preds = %289, %318
  %305 = phi %"class.blink::InlineTextBox"* [ %287, %289 ], [ %320, %318 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %290) #11
  store %"class.blink::InlineTextBox"* %305, %"class.blink::InlineTextBox"** %11, align 8
  %306 = load i32, i32* %291, align 4
  %307 = load i32, i32* %262, align 8
  %308 = icmp eq i32 %306, %307
  br i1 %308, label %317, label %309, !prof !4

309:                                              ; preds = %304
  %310 = ptrtoint %"class.blink::InlineTextBox"* %305 to i64
  %311 = load %"class.blink::InlineTextBox"**, %"class.blink::InlineTextBox"*** %292, align 8
  %312 = zext i32 %306 to i64
  %313 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %311, i64 %312
  %314 = bitcast %"class.blink::InlineTextBox"** %313 to i64*
  store i64 %310, i64* %314, align 8
  %315 = load i32, i32* %291, align 4
  %316 = add i32 %315, 1
  store i32 %316, i32* %291, align 4
  br label %318

317:                                              ; preds = %304
  call void @_ZN3WTF6VectorIPN5blink13InlineTextBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.1659"* %261, %"class.blink::InlineTextBox"** nonnull dereferenceable(8) %11) #11
  br label %318

318:                                              ; preds = %309, %317
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %290) #11
  %319 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %305, i64 0, i32 2
  %320 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %319, align 8
  %321 = icmp eq %"class.blink::InlineTextBox"* %320, null
  br i1 %321, label %293, label %304

322:                                              ; preds = %293
  %323 = call dereferenceable(8) %"class.blink::InlineTextBox"** @_ZN3WTF6VectorIPN5blink13InlineTextBoxELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1659"* %261, i32 0) #11
  %324 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %323, align 8
  br label %325

325:                                              ; preds = %293, %322
  %326 = phi %"class.blink::InlineTextBox"* [ %324, %322 ], [ null, %293 ]
  %327 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 6
  store %"class.blink::InlineTextBox"* %326, %"class.blink::InlineTextBox"** %327, align 8
  br label %328

328:                                              ; preds = %254, %325
  call void @_ZN5blink27TextIteratorTextNodeHandler13HandleTextBoxEv(%"class.blink::TextIteratorTextNodeHandler"* %0)
  br label %329

329:                                              ; preds = %246, %328, %149
  br i1 %108, label %343, label %330

330:                                              ; preds = %226, %232, %329
  %331 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %332 = load atomic i32, i32* %331 monotonic, align 4
  %333 = and i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %336 = load i32, i32* %335, align 4
  br i1 %334, label %337, label %339

337:                                              ; preds = %330
  %338 = add i32 %336, -1
  store i32 %338, i32* %335, align 4
  br label %339

339:                                              ; preds = %337, %330
  %340 = phi i32 [ %338, %337 ], [ %336, %330 ]
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %342, label %343

342:                                              ; preds = %339
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #11
  br label %343

343:                                              ; preds = %342, %339, %329, %85
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink13InlineTextBox14CompareByStartEPKS0_S2_(%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*) #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = icmp ult i32 %4, %6
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27TextIteratorTextNodeHandler23HandleTextNodeStartFromEPKNS_4TextEj(%"class.blink::TextIteratorTextNodeHandler"*, %"class.blink::Text"*, i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink27TextIteratorTextNodeHandler21HandleTextNodeInRangeEPKNS_4TextEjj(%"class.blink::TextIteratorTextNodeHandler"* %0, %"class.blink::Text"* %1, i32 %2, i32 -1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27TextIteratorTextNodeHandler19HandleTextNodeEndAtEPKNS_4TextEj(%"class.blink::TextIteratorTextNodeHandler"*, %"class.blink::Text"*, i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink27TextIteratorTextNodeHandler21HandleTextNodeInRangeEPKNS_4TextEjj(%"class.blink::TextIteratorTextNodeHandler"* %0, %"class.blink::Text"* %1, i32 0, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27TextIteratorTextNodeHandler19HandleTextNodeWholeEPKNS_4TextE(%"class.blink::TextIteratorTextNodeHandler"*, %"class.blink::Text"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink27TextIteratorTextNodeHandler21HandleTextNodeInRangeEPKNS_4TextEjj(%"class.blink::TextIteratorTextNodeHandler"* %0, %"class.blink::Text"* %1, i32 0, i32 -1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink27TextIteratorTextNodeHandler29RestoreCollapsedTrailingSpaceEPNS_13InlineTextBoxEj(%"class.blink::TextIteratorTextNodeHandler"* nocapture readonly, %"class.blink::InlineTextBox"* readnone, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::InlineTextBox"* %1, null
  br i1 %4, label %5, label %152

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 6
  %7 = bitcast %"class.blink::InlineTextBox"** %6 to %"class.blink::InlineBox"**
  %8 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %7, align 8
  %9 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %8) #11
  %10 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %9, i64 0, i32 0, i32 5
  %11 = bitcast %"class.blink::InlineFlowBox"** %10 to %"class.blink::RootInlineBox"**
  %12 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %11, align 8
  %13 = icmp eq %"class.blink::RootInlineBox"* %12, null
  br i1 %13, label %152, label %14

14:                                               ; preds = %5
  %15 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %7, align 8
  %16 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %15) #11
  %17 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %16, i64 0, i32 0, i32 3
  %18 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %17, align 8
  %19 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %7, align 8
  %20 = icmp eq %"class.blink::InlineBox"* %18, %19
  br i1 %20, label %21, label %152

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 10
  %23 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %22, align 8
  %24 = icmp eq %"class.blink::LayoutText"* %23, null
  br i1 %24, label %25, label %45

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 0
  %27 = load %"class.blink::Text"*, %"class.blink::Text"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %27, i64 0, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %27, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %31, label %37, label %33

33:                                               ; preds = %25
  %34 = bitcast %"class.blink::NodeData"** %32 to %"class.blink::NodeRareData"**
  %35 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %35, i64 0, i32 1, i32 0, i32 0
  br label %39

37:                                               ; preds = %25
  %38 = bitcast %"class.blink::NodeData"** %32 to %"class.blink::NodeRenderingData"**
  br label %39

39:                                               ; preds = %33, %37
  %40 = phi %"class.blink::NodeRenderingData"** [ %36, %33 ], [ %38, %37 ]
  %41 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %41, i64 0, i32 1
  %43 = bitcast %"class.blink::LayoutObject"** %42 to %"class.blink::LayoutText"**
  %44 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %43, align 8
  br label %45

45:                                               ; preds = %21, %39
  %46 = phi %"class.blink::LayoutText"* [ %44, %39 ], [ %23, %21 ]
  %47 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %46, i64 0, i32 7, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %152, label %50

50:                                               ; preds = %45
  %51 = tail call zeroext i1 @_ZNK3WTF10StringImpl8EndsWithEDs(%"class.WTF::StringImpl"* nonnull %48, i16 zeroext 32) #11
  br i1 %51, label %52, label %152

52:                                               ; preds = %50
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %59, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = add i32 %57, -1
  br label %59

59:                                               ; preds = %52, %55
  %60 = phi i32 [ %58, %55 ], [ -1, %52 ]
  %61 = icmp eq i32 %60, %2
  br i1 %61, label %62, label %152

62:                                               ; preds = %59
  %63 = add i32 %2, -1
  br i1 %54, label %88, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp ugt i32 %66, %63
  br i1 %67, label %68, label %88

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 1
  br i1 %72, label %80, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::StringImpl"* %73 to i8*
  %76 = zext i32 %63 to i64
  %77 = getelementptr inbounds i8, i8* %75, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i16
  br label %85

80:                                               ; preds = %68
  %81 = bitcast %"class.WTF::StringImpl"* %73 to i16*
  %82 = zext i32 %63 to i64
  %83 = getelementptr inbounds i16, i16* %81, i64 %82
  %84 = load i16, i16* %83, align 2
  br label %85

85:                                               ; preds = %74, %80
  %86 = phi i16 [ %79, %74 ], [ %84, %80 ]
  %87 = icmp eq i16 %86, 32
  br i1 %87, label %152, label %88

88:                                               ; preds = %62, %64, %85
  %89 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %7, align 8
  %90 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %89) #11
  %91 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %90, i64 0, i32 0, i32 5
  %92 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %92, i64 0, i32 2
  %94 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %93, align 8
  %95 = icmp eq %"class.blink::InlineBox"* %94, null
  br i1 %95, label %96, label %98

96:                                               ; preds = %88
  %97 = add i32 %2, 1
  br label %152

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %94, i64 0, i32 4, i32 0
  %100 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %100, i64 0, i32 4
  %102 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %101 to i96*
  %103 = load i96, i96* %102, align 4
  %104 = and i96 %103, 16777216
  %105 = icmp eq i96 %104, 0
  br i1 %105, label %106, label %150

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %100, i64 0, i32 6, i32 0, i32 0
  %108 = load %"class.blink::Node"*, %"class.blink::Node"** %107, align 8
  %109 = icmp eq %"class.blink::Node"* %108, null
  br i1 %109, label %150, label %110

110:                                              ; preds = %106
  %111 = bitcast %"class.blink::Node"* %108 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %112 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %111, align 8
  %113 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %112, i64 28
  %114 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %113, align 8
  %115 = tail call %"class.WTF::StringImpl"* %114(%"class.blink::Node"* nonnull %108) #11
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %150, label %117

117:                                              ; preds = %110
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %134, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 1
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 1
  br i1 %125, label %131, label %127

127:                                              ; preds = %121
  %128 = bitcast %"class.WTF::StringImpl"* %126 to i8*
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i16
  br label %134

131:                                              ; preds = %121
  %132 = bitcast %"class.WTF::StringImpl"* %126 to i16*
  %133 = load i16, i16* %132, align 2
  br label %134

134:                                              ; preds = %117, %127, %131
  %135 = phi i16 [ %133, %131 ], [ %130, %127 ], [ 0, %117 ]
  %136 = icmp ne i16 %135, 32
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %134
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %134
  %146 = phi i32 [ %144, %143 ], [ %142, %134 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #11
  br i1 %136, label %150, label %152

149:                                              ; preds = %145
  br i1 %136, label %150, label %152

150:                                              ; preds = %110, %106, %98, %148, %149
  %151 = add i32 %2, 1
  br label %152

152:                                              ; preds = %45, %150, %149, %148, %59, %50, %85, %96, %3, %5, %14
  %153 = phi i32 [ %2, %14 ], [ %2, %5 ], [ %2, %3 ], [ %2, %59 ], [ %2, %50 ], [ %2, %85 ], [ %97, %96 ], [ %151, %150 ], [ %2, %149 ], [ %2, %148 ], [ %2, %45 ]
  ret i32 %153
}

declare dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27TextIteratorTextNodeHandler22EmitReplacmentCodeUnitEDsj(%"class.blink::TextIteratorTextNodeHandler"* nocapture, i16 zeroext, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 15
  %5 = load %"class.blink::TextIteratorTextState"*, %"class.blink::TextIteratorTextState"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 0
  %7 = load %"class.blink::Text"*, %"class.blink::Text"** %6, align 8
  tail call void @_ZN5blink21TextIteratorTextState22EmitReplacmentCodeUnitEDsRKNS_4TextEj(%"class.blink::TextIteratorTextState"* %5, i16 zeroext %1, %"class.blink::Text"* dereferenceable(88) %7, i32 %2) #11
  %8 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 11
  store i8 0, i8* %8, align 8
  ret void
}

declare i32 @_ZNK5blink21TextIteratorTextState17PositionEndOffsetEv(%"class.blink::TextIteratorTextState"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink27TextIteratorTextNodeHandler44ShouldFixLeadingWhiteSpaceForReplacedElementEv(%"class.blink::TextIteratorTextNodeHandler"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 11
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink27TextIteratorTextNodeHandler38FixLeadingWhiteSpaceForReplacedElementEv(%"class.blink::TextIteratorTextNodeHandler"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 11
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 15
  %11 = load %"class.blink::TextIteratorTextState"*, %"class.blink::TextIteratorTextState"** %10, align 8
  %12 = bitcast %"class.blink::TextIteratorTextNodeHandler"* %0 to %"class.blink::Node"**
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  tail call void @_ZN5blink21TextIteratorTextState19EmitChar16AfterNodeEDsRKNS_4NodeE(%"class.blink::TextIteratorTextState"* %11, i16 zeroext 32, %"class.blink::Node"* dereferenceable(64) %13) #11
  store i8 0, i8* %6, align 8
  br label %14

14:                                               ; preds = %5, %1, %9
  %15 = phi i1 [ true, %9 ], [ false, %5 ], [ false, %1 ]
  ret i1 %15
}

declare void @_ZN5blink21TextIteratorTextState19EmitChar16AfterNodeEDsRKNS_4NodeE(%"class.blink::TextIteratorTextState"*, i16 zeroext, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink27TextIteratorTextNodeHandler29ResetCollapsedWhiteSpaceFixupEv(%"class.blink::TextIteratorTextNodeHandler"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextIteratorTextNodeHandler", %"class.blink::TextIteratorTextNodeHandler"* %0, i64 0, i32 11
  store i8 0, i8* %2, align 8
  ret void
}

declare void @_ZN5blink21TextIteratorTextState16EmitChar16BeforeEDsRKNS_4TextEj(%"class.blink::TextIteratorTextState"*, i16 zeroext, %"class.blink::Text"* dereferenceable(88), i32) local_unnamed_addr #1

declare void @_ZN5blink21TextIteratorTextState22EmitReplacmentCodeUnitEDsRKNS_4TextEj(%"class.blink::TextIteratorTextState"*, i16 zeroext, %"class.blink::Text"* dereferenceable(88), i32) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare %"class.blink::LayoutObject"* @_ZN5blink24AssociatedLayoutObjectOfERKNS_4NodeEiNS_16LayoutObjectSideE(%"class.blink::Node"* dereferenceable(64), i32, i32) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"*) local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK3WTF10StringImpl8EndsWithEDs(%"class.WTF::StringImpl"*, i16 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #9

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"*, i16 zeroext, i16 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1653"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1653", %"class.WTF::Vector.1653"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.1653", %"class.WTF::Vector.1653"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %24, i64 %25
  ret %"class.blink::NGOffsetMappingUnit"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink13InlineTextBoxEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink13InlineTextBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.1659"*, %"class.blink::InlineTextBox"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1659", %"class.WTF::Vector.1659"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1659", %"class.WTF::Vector.1659"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::InlineTextBox"**, %"class.blink::InlineTextBox"*** %6, align 8
  %8 = icmp ugt %"class.blink::InlineTextBox"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %7, i64 %10
  %12 = icmp ugt %"class.blink::InlineTextBox"** %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1659", %"class.WTF::Vector.1659"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::InlineTextBox"** %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink13InlineTextBoxEEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink13InlineTextBoxEEEPKcv, i64 0, i64 0)) #11
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1659"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::InlineTextBox"**
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::InlineTextBox"**, %"class.blink::InlineTextBox"*** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::InlineTextBox"** %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::InlineTextBox"** %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #11
  %47 = bitcast %"class.WTF::Vector.1659"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  %51 = bitcast %"class.WTF::Vector.1659"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::InlineTextBox"**
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::InlineTextBox"** %1 to i64
  %56 = ptrtoint %"class.blink::InlineTextBox"** %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.1659", %"class.WTF::Vector.1659"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::InlineTextBox"** %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink13InlineTextBoxEEEmm(i64 %71) #11
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink13InlineTextBoxEEEPKcv, i64 0, i64 0)) #11
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1659"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::InlineTextBox"**, %"class.blink::InlineTextBox"*** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::InlineTextBox"** %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::InlineTextBox"** %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #11
  %87 = bitcast %"class.WTF::Vector.1659"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #11
  %91 = bitcast %"class.WTF::Vector.1659"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::InlineTextBox"**
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::InlineTextBox"** [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::InlineTextBox"** [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::InlineTextBox"** [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %100, i64 %103
  %105 = bitcast %"class.blink::InlineTextBox"** %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.blink::InlineTextBox"** %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbPKN5blink13InlineTextBoxES4_EPPS2_EEvT0_SA_T_(%"class.blink::InlineTextBox"**, %"class.blink::InlineTextBox"**, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %264, %3
  %5 = phi %"class.blink::InlineTextBox"** [ %1, %3 ], [ %243, %264 ]
  %6 = phi %"class.blink::InlineTextBox"** [ %0, %3 ], [ %17, %264 ]
  %7 = ptrtoint %"class.blink::InlineTextBox"** %5 to i64
  %8 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %5, i64 -1
  %9 = bitcast %"class.blink::InlineTextBox"** %8 to i64*
  %10 = bitcast %"class.blink::InlineTextBox"** %8 to i64*
  %11 = bitcast %"class.blink::InlineTextBox"** %8 to i64*
  %12 = bitcast %"class.blink::InlineTextBox"** %8 to i64*
  %13 = ptrtoint %"class.blink::InlineTextBox"** %5 to i64
  br label %14

14:                                               ; preds = %273, %4
  %15 = phi %"class.blink::InlineTextBox"** [ %6, %4 ], [ %274, %273 ]
  br label %16

16:                                               ; preds = %187, %14
  %17 = phi %"class.blink::InlineTextBox"** [ %15, %14 ], [ %174, %187 ]
  %18 = ptrtoint %"class.blink::InlineTextBox"** %17 to i64
  %19 = sub i64 %7, %18
  %20 = ashr exact i64 %19, 3
  switch i64 %20, label %86 [
    i64 0, label %277
    i64 1, label %277
    i64 2, label %21
    i64 3, label %32
    i64 4, label %75
    i64 5, label %80
  ]

21:                                               ; preds = %16
  %22 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %23 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %5, i64 -1
  %24 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %23, align 8
  %25 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %17, align 8
  %26 = tail call zeroext i1 %22(%"class.blink::InlineTextBox"* %24, %"class.blink::InlineTextBox"* %25) #11
  br i1 %26, label %27, label %277

27:                                               ; preds = %21
  %28 = bitcast %"class.blink::InlineTextBox"** %17 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::InlineTextBox"** %23 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %28, align 8
  store i64 %29, i64* %30, align 8
  br label %277

32:                                               ; preds = %16
  %33 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %17, i64 1
  %34 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %5, i64 -1
  %35 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %36 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %33, align 8
  %37 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %17, align 8
  %38 = tail call zeroext i1 %35(%"class.blink::InlineTextBox"* %36, %"class.blink::InlineTextBox"* %37) #11
  %39 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %40 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %34, align 8
  %41 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %33, align 8
  %42 = tail call zeroext i1 %39(%"class.blink::InlineTextBox"* %40, %"class.blink::InlineTextBox"* %41) #11
  br i1 %38, label %58, label %43

43:                                               ; preds = %32
  br i1 %42, label %44, label %277

44:                                               ; preds = %43
  %45 = bitcast %"class.blink::InlineTextBox"** %33 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::InlineTextBox"** %34 to i64*
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %45, align 8
  store i64 %46, i64* %47, align 8
  %49 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %50 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %33, align 8
  %51 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %17, align 8
  %52 = tail call zeroext i1 %49(%"class.blink::InlineTextBox"* %50, %"class.blink::InlineTextBox"* %51) #11
  br i1 %52, label %53, label %277

53:                                               ; preds = %44
  %54 = bitcast %"class.blink::InlineTextBox"** %17 to <2 x i64>*
  %55 = load <2 x i64>, <2 x i64>* %54, align 8
  %56 = shufflevector <2 x i64> %55, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %57 = bitcast %"class.blink::InlineTextBox"** %17 to <2 x i64>*
  store <2 x i64> %56, <2 x i64>* %57, align 8
  br label %277

58:                                               ; preds = %32
  %59 = bitcast %"class.blink::InlineTextBox"** %17 to i64*
  %60 = load i64, i64* %59, align 8
  br i1 %42, label %61, label %64

61:                                               ; preds = %58
  %62 = bitcast %"class.blink::InlineTextBox"** %34 to i64*
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %59, align 8
  store i64 %60, i64* %62, align 8
  br label %277

64:                                               ; preds = %58
  %65 = bitcast %"class.blink::InlineTextBox"** %33 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %59, align 8
  store i64 %60, i64* %65, align 8
  %67 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %68 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %34, align 8
  %69 = inttoptr i64 %60 to %"class.blink::InlineTextBox"*
  %70 = tail call zeroext i1 %67(%"class.blink::InlineTextBox"* %68, %"class.blink::InlineTextBox"* %69) #11
  br i1 %70, label %71, label %277

71:                                               ; preds = %64
  %72 = load i64, i64* %65, align 8
  %73 = bitcast %"class.blink::InlineTextBox"** %34 to i64*
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %65, align 8
  store i64 %72, i64* %73, align 8
  br label %277

75:                                               ; preds = %16
  %76 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %17, i64 1
  %77 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %17, i64 2
  %78 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %5, i64 -1
  %79 = tail call i32 @_ZNSt3__17__sort4IRPFbPKN5blink13InlineTextBoxES4_EPPS2_EEjT0_SA_SA_SA_T_(%"class.blink::InlineTextBox"** %17, %"class.blink::InlineTextBox"** %76, %"class.blink::InlineTextBox"** %77, %"class.blink::InlineTextBox"** %78, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8) %2)
  br label %277

80:                                               ; preds = %16
  %81 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %17, i64 1
  %82 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %17, i64 2
  %83 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %17, i64 3
  %84 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %5, i64 -1
  %85 = tail call i32 @_ZNSt3__17__sort5IRPFbPKN5blink13InlineTextBoxES4_EPPS2_EEjT0_SA_SA_SA_SA_T_(%"class.blink::InlineTextBox"** %17, %"class.blink::InlineTextBox"** %81, %"class.blink::InlineTextBox"** %82, %"class.blink::InlineTextBox"** %83, %"class.blink::InlineTextBox"** %84, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8) %2)
  br label %277

86:                                               ; preds = %16
  %87 = icmp slt i64 %19, 248
  br i1 %87, label %88, label %89

88:                                               ; preds = %86
  tail call void @_ZNSt3__118__insertion_sort_3IRPFbPKN5blink13InlineTextBoxES4_EPPS2_EEvT0_SA_T_(%"class.blink::InlineTextBox"** %17, %"class.blink::InlineTextBox"** %5, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8) %2)
  br label %277

89:                                               ; preds = %86
  %90 = icmp sgt i64 %19, 7992
  %91 = sdiv i64 %20, 2
  %92 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %17, i64 %91
  br i1 %90, label %93, label %98

93:                                               ; preds = %89
  %94 = sdiv i64 %20, 4
  %95 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %17, i64 %94
  %96 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %92, i64 %94
  %97 = tail call i32 @_ZNSt3__17__sort5IRPFbPKN5blink13InlineTextBoxES4_EPPS2_EEjT0_SA_SA_SA_SA_T_(%"class.blink::InlineTextBox"** %17, %"class.blink::InlineTextBox"** %95, %"class.blink::InlineTextBox"** %92, %"class.blink::InlineTextBox"** %96, %"class.blink::InlineTextBox"** %8, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8) %2)
  br label %135

98:                                               ; preds = %89
  %99 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %100 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %92, align 8
  %101 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %17, align 8
  %102 = tail call zeroext i1 %99(%"class.blink::InlineTextBox"* %100, %"class.blink::InlineTextBox"* %101) #11
  %103 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %104 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %8, align 8
  %105 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %92, align 8
  %106 = tail call zeroext i1 %103(%"class.blink::InlineTextBox"* %104, %"class.blink::InlineTextBox"* %105) #11
  br i1 %102, label %120, label %107

107:                                              ; preds = %98
  br i1 %106, label %108, label %135

108:                                              ; preds = %107
  %109 = bitcast %"class.blink::InlineTextBox"** %92 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = load i64, i64* %9, align 8
  store i64 %111, i64* %109, align 8
  store i64 %110, i64* %9, align 8
  %112 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %113 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %92, align 8
  %114 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %17, align 8
  %115 = tail call zeroext i1 %112(%"class.blink::InlineTextBox"* %113, %"class.blink::InlineTextBox"* %114) #11
  br i1 %115, label %116, label %135

116:                                              ; preds = %108
  %117 = bitcast %"class.blink::InlineTextBox"** %17 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = load i64, i64* %109, align 8
  store i64 %119, i64* %117, align 8
  store i64 %118, i64* %109, align 8
  br label %135

120:                                              ; preds = %98
  %121 = bitcast %"class.blink::InlineTextBox"** %17 to i64*
  %122 = load i64, i64* %121, align 8
  br i1 %106, label %123, label %125

123:                                              ; preds = %120
  %124 = load i64, i64* %11, align 8
  store i64 %124, i64* %121, align 8
  store i64 %122, i64* %11, align 8
  br label %135

125:                                              ; preds = %120
  %126 = bitcast %"class.blink::InlineTextBox"** %92 to i64*
  %127 = load i64, i64* %126, align 8
  store i64 %127, i64* %121, align 8
  store i64 %122, i64* %126, align 8
  %128 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %129 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %8, align 8
  %130 = inttoptr i64 %122 to %"class.blink::InlineTextBox"*
  %131 = tail call zeroext i1 %128(%"class.blink::InlineTextBox"* %129, %"class.blink::InlineTextBox"* %130) #11
  br i1 %131, label %132, label %135

132:                                              ; preds = %125
  %133 = load i64, i64* %126, align 8
  %134 = load i64, i64* %10, align 8
  store i64 %134, i64* %126, align 8
  store i64 %133, i64* %10, align 8
  br label %135

135:                                              ; preds = %132, %125, %123, %116, %108, %107, %93
  %136 = phi i32 [ %97, %93 ], [ 1, %123 ], [ 0, %107 ], [ 2, %116 ], [ 1, %108 ], [ 2, %132 ], [ 1, %125 ]
  %137 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %138 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %17, align 8
  %139 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %92, align 8
  %140 = tail call zeroext i1 %137(%"class.blink::InlineTextBox"* %138, %"class.blink::InlineTextBox"* %139) #11
  br i1 %140, label %205, label %141

141:                                              ; preds = %135, %194
  %142 = phi %"class.blink::InlineTextBox"** [ %143, %194 ], [ %8, %135 ]
  %143 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %142, i64 -1
  %144 = icmp eq %"class.blink::InlineTextBox"** %17, %143
  br i1 %144, label %145, label %194

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %17, i64 1
  %147 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %148 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %17, align 8
  %149 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %8, align 8
  %150 = tail call zeroext i1 %147(%"class.blink::InlineTextBox"* %148, %"class.blink::InlineTextBox"* %149) #11
  br i1 %150, label %167, label %151

151:                                              ; preds = %145
  %152 = icmp eq %"class.blink::InlineTextBox"** %146, %8
  br i1 %152, label %277, label %153

153:                                              ; preds = %151, %164
  %154 = phi %"class.blink::InlineTextBox"** [ %165, %164 ], [ %146, %151 ]
  %155 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %156 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %17, align 8
  %157 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %154, align 8
  %158 = tail call zeroext i1 %155(%"class.blink::InlineTextBox"* %156, %"class.blink::InlineTextBox"* %157) #11
  br i1 %158, label %159, label %164

159:                                              ; preds = %153
  %160 = bitcast %"class.blink::InlineTextBox"** %154 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = load i64, i64* %12, align 8
  store i64 %162, i64* %160, align 8
  store i64 %161, i64* %12, align 8
  %163 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %154, i64 1
  br label %167

164:                                              ; preds = %153
  %165 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %154, i64 1
  %166 = icmp eq %"class.blink::InlineTextBox"** %165, %8
  br i1 %166, label %277, label %153

167:                                              ; preds = %159, %145
  %168 = phi %"class.blink::InlineTextBox"** [ %146, %145 ], [ %163, %159 ]
  %169 = icmp eq %"class.blink::InlineTextBox"** %168, %8
  br i1 %169, label %277, label %170

170:                                              ; preds = %167, %189
  %171 = phi %"class.blink::InlineTextBox"** [ %179, %189 ], [ %168, %167 ]
  %172 = phi %"class.blink::InlineTextBox"** [ %184, %189 ], [ %8, %167 ]
  br label %173

173:                                              ; preds = %173, %170
  %174 = phi %"class.blink::InlineTextBox"** [ %171, %170 ], [ %179, %173 ]
  %175 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %176 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %17, align 8
  %177 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %174, align 8
  %178 = tail call zeroext i1 %175(%"class.blink::InlineTextBox"* %176, %"class.blink::InlineTextBox"* %177) #11
  %179 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %174, i64 1
  br i1 %178, label %180, label %173

180:                                              ; preds = %173, %180
  %181 = phi %"class.blink::InlineTextBox"** [ %184, %180 ], [ %172, %173 ]
  %182 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %183 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %17, align 8
  %184 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %181, i64 -1
  %185 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %184, align 8
  %186 = tail call zeroext i1 %182(%"class.blink::InlineTextBox"* %183, %"class.blink::InlineTextBox"* %185) #11
  br i1 %186, label %180, label %187

187:                                              ; preds = %180
  %188 = icmp ult %"class.blink::InlineTextBox"** %174, %184
  br i1 %188, label %189, label %16

189:                                              ; preds = %187
  %190 = bitcast %"class.blink::InlineTextBox"** %174 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast %"class.blink::InlineTextBox"** %184 to i64*
  %193 = load i64, i64* %192, align 8
  store i64 %193, i64* %190, align 8
  store i64 %191, i64* %192, align 8
  br label %170

194:                                              ; preds = %141
  %195 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %196 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %143, align 8
  %197 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %92, align 8
  %198 = tail call zeroext i1 %195(%"class.blink::InlineTextBox"* %196, %"class.blink::InlineTextBox"* %197) #11
  br i1 %198, label %199, label %141

199:                                              ; preds = %194
  %200 = bitcast %"class.blink::InlineTextBox"** %17 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast %"class.blink::InlineTextBox"** %143 to i64*
  %203 = load i64, i64* %202, align 8
  store i64 %203, i64* %200, align 8
  store i64 %201, i64* %202, align 8
  %204 = add i32 %136, 1
  br label %205

205:                                              ; preds = %135, %199
  %206 = phi i32 [ %204, %199 ], [ %136, %135 ]
  %207 = phi %"class.blink::InlineTextBox"** [ %143, %199 ], [ %8, %135 ]
  %208 = ptrtoint %"class.blink::InlineTextBox"** %17 to i64
  %209 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %17, i64 1
  %210 = icmp ult %"class.blink::InlineTextBox"** %209, %207
  br i1 %210, label %211, label %240

211:                                              ; preds = %205, %232
  %212 = phi %"class.blink::InlineTextBox"** [ %239, %232 ], [ %92, %205 ]
  %213 = phi i32 [ %237, %232 ], [ %206, %205 ]
  %214 = phi %"class.blink::InlineTextBox"** [ %222, %232 ], [ %209, %205 ]
  %215 = phi %"class.blink::InlineTextBox"** [ %226, %232 ], [ %207, %205 ]
  br label %216

216:                                              ; preds = %216, %211
  %217 = phi %"class.blink::InlineTextBox"** [ %214, %211 ], [ %222, %216 ]
  %218 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %219 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %217, align 8
  %220 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %212, align 8
  %221 = tail call zeroext i1 %218(%"class.blink::InlineTextBox"* %219, %"class.blink::InlineTextBox"* %220) #11
  %222 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %217, i64 1
  br i1 %221, label %216, label %223

223:                                              ; preds = %216, %223
  %224 = phi %"class.blink::InlineTextBox"** [ %226, %223 ], [ %215, %216 ]
  %225 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %226 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %224, i64 -1
  %227 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %226, align 8
  %228 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %212, align 8
  %229 = tail call zeroext i1 %225(%"class.blink::InlineTextBox"* %227, %"class.blink::InlineTextBox"* %228) #11
  br i1 %229, label %230, label %223

230:                                              ; preds = %223
  %231 = icmp ugt %"class.blink::InlineTextBox"** %217, %226
  br i1 %231, label %240, label %232

232:                                              ; preds = %230
  %233 = bitcast %"class.blink::InlineTextBox"** %217 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = bitcast %"class.blink::InlineTextBox"** %226 to i64*
  %236 = load i64, i64* %235, align 8
  store i64 %236, i64* %233, align 8
  store i64 %234, i64* %235, align 8
  %237 = add i32 %213, 1
  %238 = icmp eq %"class.blink::InlineTextBox"** %212, %217
  %239 = select i1 %238, %"class.blink::InlineTextBox"** %226, %"class.blink::InlineTextBox"** %212
  br label %211

240:                                              ; preds = %230, %205
  %241 = phi %"class.blink::InlineTextBox"** [ %92, %205 ], [ %212, %230 ]
  %242 = phi i32 [ %206, %205 ], [ %213, %230 ]
  %243 = phi %"class.blink::InlineTextBox"** [ %209, %205 ], [ %217, %230 ]
  %244 = icmp eq %"class.blink::InlineTextBox"** %243, %241
  br i1 %244, label %256, label %245

245:                                              ; preds = %240
  %246 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %247 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %241, align 8
  %248 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %243, align 8
  %249 = tail call zeroext i1 %246(%"class.blink::InlineTextBox"* %247, %"class.blink::InlineTextBox"* %248) #11
  br i1 %249, label %250, label %256

250:                                              ; preds = %245
  %251 = bitcast %"class.blink::InlineTextBox"** %243 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = bitcast %"class.blink::InlineTextBox"** %241 to i64*
  %254 = load i64, i64* %253, align 8
  store i64 %254, i64* %251, align 8
  store i64 %252, i64* %253, align 8
  %255 = add i32 %242, 1
  br label %256

256:                                              ; preds = %240, %250, %245
  %257 = phi i32 [ %255, %250 ], [ %242, %245 ], [ %242, %240 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %256
  %260 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPKN5blink13InlineTextBoxES4_EPPS2_EEbT0_SA_T_(%"class.blink::InlineTextBox"** %17, %"class.blink::InlineTextBox"** %243, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8) %2)
  %261 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %243, i64 1
  %262 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPKN5blink13InlineTextBoxES4_EPPS2_EEbT0_SA_T_(%"class.blink::InlineTextBox"** %261, %"class.blink::InlineTextBox"** %5, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8) %2)
  br i1 %262, label %263, label %265

263:                                              ; preds = %259
  br i1 %260, label %277, label %264

264:                                              ; preds = %263, %275
  br label %4

265:                                              ; preds = %259
  br i1 %260, label %273, label %266

266:                                              ; preds = %265, %256
  %267 = ptrtoint %"class.blink::InlineTextBox"** %243 to i64
  %268 = sub i64 %267, %208
  %269 = sub i64 %13, %267
  %270 = icmp slt i64 %268, %269
  br i1 %270, label %271, label %275

271:                                              ; preds = %266
  tail call void @_ZNSt3__16__sortIRPFbPKN5blink13InlineTextBoxES4_EPPS2_EEvT0_SA_T_(%"class.blink::InlineTextBox"** %17, %"class.blink::InlineTextBox"** %243, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8) %2)
  %272 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %243, i64 1
  br label %273

273:                                              ; preds = %271, %265
  %274 = phi %"class.blink::InlineTextBox"** [ %261, %265 ], [ %272, %271 ]
  br label %14

275:                                              ; preds = %266
  %276 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %243, i64 1
  tail call void @_ZNSt3__16__sortIRPFbPKN5blink13InlineTextBoxES4_EPPS2_EEvT0_SA_T_(%"class.blink::InlineTextBox"** %276, %"class.blink::InlineTextBox"** %5, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8) %2)
  br label %264

277:                                              ; preds = %263, %167, %16, %16, %151, %164, %71, %64, %61, %53, %44, %43, %21, %27, %75, %80, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbPKN5blink13InlineTextBoxES4_EPPS2_EEjT0_SA_SA_SA_T_(%"class.blink::InlineTextBox"**, %"class.blink::InlineTextBox"**, %"class.blink::InlineTextBox"**, %"class.blink::InlineTextBox"**, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %4, align 8
  %7 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %1, align 8
  %8 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, align 8
  %9 = tail call zeroext i1 %6(%"class.blink::InlineTextBox"* %7, %"class.blink::InlineTextBox"* %8) #11
  %10 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %4, align 8
  %11 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %2, align 8
  %12 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %1, align 8
  %13 = tail call zeroext i1 %10(%"class.blink::InlineTextBox"* %11, %"class.blink::InlineTextBox"* %12) #11
  br i1 %9, label %28, label %14

14:                                               ; preds = %5
  br i1 %13, label %15, label %45

15:                                               ; preds = %14
  %16 = bitcast %"class.blink::InlineTextBox"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.blink::InlineTextBox"** %2 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  %20 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %4, align 8
  %21 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %1, align 8
  %22 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, align 8
  %23 = tail call zeroext i1 %20(%"class.blink::InlineTextBox"* %21, %"class.blink::InlineTextBox"* %22) #11
  br i1 %23, label %24, label %45

24:                                               ; preds = %15
  %25 = bitcast %"class.blink::InlineTextBox"** %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* %16, align 8
  store i64 %27, i64* %25, align 8
  store i64 %26, i64* %16, align 8
  br label %45

28:                                               ; preds = %5
  %29 = bitcast %"class.blink::InlineTextBox"** %0 to i64*
  %30 = load i64, i64* %29, align 8
  br i1 %13, label %31, label %34

31:                                               ; preds = %28
  %32 = bitcast %"class.blink::InlineTextBox"** %2 to i64*
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %29, align 8
  store i64 %30, i64* %32, align 8
  br label %45

34:                                               ; preds = %28
  %35 = bitcast %"class.blink::InlineTextBox"** %1 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %29, align 8
  store i64 %30, i64* %35, align 8
  %37 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %4, align 8
  %38 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %2, align 8
  %39 = inttoptr i64 %30 to %"class.blink::InlineTextBox"*
  %40 = tail call zeroext i1 %37(%"class.blink::InlineTextBox"* %38, %"class.blink::InlineTextBox"* %39) #11
  br i1 %40, label %41, label %45

41:                                               ; preds = %34
  %42 = load i64, i64* %35, align 8
  %43 = bitcast %"class.blink::InlineTextBox"** %2 to i64*
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %35, align 8
  store i64 %42, i64* %43, align 8
  br label %45

45:                                               ; preds = %14, %15, %24, %31, %34, %41
  %46 = phi i32 [ 1, %31 ], [ 0, %14 ], [ 2, %24 ], [ 1, %15 ], [ 2, %41 ], [ 1, %34 ]
  %47 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %4, align 8
  %48 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %3, align 8
  %49 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %2, align 8
  %50 = tail call zeroext i1 %47(%"class.blink::InlineTextBox"* %48, %"class.blink::InlineTextBox"* %49) #11
  br i1 %50, label %51, label %75

51:                                               ; preds = %45
  %52 = bitcast %"class.blink::InlineTextBox"** %2 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.blink::InlineTextBox"** %3 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %52, align 8
  store i64 %53, i64* %54, align 8
  %56 = add nuw nsw i32 %46, 1
  %57 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %4, align 8
  %58 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %2, align 8
  %59 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %1, align 8
  %60 = tail call zeroext i1 %57(%"class.blink::InlineTextBox"* %58, %"class.blink::InlineTextBox"* %59) #11
  br i1 %60, label %61, label %75

61:                                               ; preds = %51
  %62 = bitcast %"class.blink::InlineTextBox"** %1 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = load i64, i64* %52, align 8
  store i64 %64, i64* %62, align 8
  store i64 %63, i64* %52, align 8
  %65 = add nuw nsw i32 %46, 2
  %66 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %4, align 8
  %67 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %1, align 8
  %68 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, align 8
  %69 = tail call zeroext i1 %66(%"class.blink::InlineTextBox"* %67, %"class.blink::InlineTextBox"* %68) #11
  br i1 %69, label %70, label %75

70:                                               ; preds = %61
  %71 = bitcast %"class.blink::InlineTextBox"** %0 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = load i64, i64* %62, align 8
  store i64 %73, i64* %71, align 8
  store i64 %72, i64* %62, align 8
  %74 = add nuw nsw i32 %46, 3
  br label %75

75:                                               ; preds = %51, %70, %61, %45
  %76 = phi i32 [ %74, %70 ], [ %65, %61 ], [ %56, %51 ], [ %46, %45 ]
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRPFbPKN5blink13InlineTextBoxES4_EPPS2_EEjT0_SA_SA_SA_SA_T_(%"class.blink::InlineTextBox"**, %"class.blink::InlineTextBox"**, %"class.blink::InlineTextBox"**, %"class.blink::InlineTextBox"**, %"class.blink::InlineTextBox"**, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRPFbPKN5blink13InlineTextBoxES4_EPPS2_EEjT0_SA_SA_SA_T_(%"class.blink::InlineTextBox"** %0, %"class.blink::InlineTextBox"** %1, %"class.blink::InlineTextBox"** %2, %"class.blink::InlineTextBox"** %3, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8) %5)
  %8 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %5, align 8
  %9 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %4, align 8
  %10 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %3, align 8
  %11 = tail call zeroext i1 %8(%"class.blink::InlineTextBox"* %9, %"class.blink::InlineTextBox"* %10) #11
  br i1 %11, label %12, label %45

12:                                               ; preds = %6
  %13 = bitcast %"class.blink::InlineTextBox"** %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.blink::InlineTextBox"** %4 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 %14, i64* %15, align 8
  %17 = add i32 %7, 1
  %18 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %5, align 8
  %19 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %3, align 8
  %20 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %2, align 8
  %21 = tail call zeroext i1 %18(%"class.blink::InlineTextBox"* %19, %"class.blink::InlineTextBox"* %20) #11
  br i1 %21, label %22, label %45

22:                                               ; preds = %12
  %23 = bitcast %"class.blink::InlineTextBox"** %2 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = load i64, i64* %13, align 8
  store i64 %25, i64* %23, align 8
  store i64 %24, i64* %13, align 8
  %26 = add i32 %7, 2
  %27 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %5, align 8
  %28 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %2, align 8
  %29 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %1, align 8
  %30 = tail call zeroext i1 %27(%"class.blink::InlineTextBox"* %28, %"class.blink::InlineTextBox"* %29) #11
  br i1 %30, label %31, label %45

31:                                               ; preds = %22
  %32 = bitcast %"class.blink::InlineTextBox"** %1 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = load i64, i64* %23, align 8
  store i64 %34, i64* %32, align 8
  store i64 %33, i64* %23, align 8
  %35 = add i32 %7, 3
  %36 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %5, align 8
  %37 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %1, align 8
  %38 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, align 8
  %39 = tail call zeroext i1 %36(%"class.blink::InlineTextBox"* %37, %"class.blink::InlineTextBox"* %38) #11
  br i1 %39, label %40, label %45

40:                                               ; preds = %31
  %41 = bitcast %"class.blink::InlineTextBox"** %0 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = load i64, i64* %32, align 8
  store i64 %43, i64* %41, align 8
  store i64 %42, i64* %32, align 8
  %44 = add i32 %7, 4
  br label %45

45:                                               ; preds = %12, %31, %40, %22, %6
  %46 = phi i32 [ %44, %40 ], [ %35, %31 ], [ %26, %22 ], [ %17, %12 ], [ %7, %6 ]
  ret i32 %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRPFbPKN5blink13InlineTextBoxES4_EPPS2_EEvT0_SA_T_(%"class.blink::InlineTextBox"**, %"class.blink::InlineTextBox"**, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, i64 2
  %5 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, i64 1
  %6 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %7 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %5, align 8
  %8 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, align 8
  %9 = tail call zeroext i1 %6(%"class.blink::InlineTextBox"* %7, %"class.blink::InlineTextBox"* %8) #11
  %10 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %11 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %4, align 8
  %12 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %5, align 8
  %13 = tail call zeroext i1 %10(%"class.blink::InlineTextBox"* %11, %"class.blink::InlineTextBox"* %12) #11
  br i1 %9, label %29, label %14

14:                                               ; preds = %3
  br i1 %13, label %15, label %47

15:                                               ; preds = %14
  %16 = bitcast %"class.blink::InlineTextBox"** %5 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.blink::InlineTextBox"** %4 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  %20 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %21 = inttoptr i64 %19 to %"class.blink::InlineTextBox"*
  %22 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, align 8
  %23 = tail call zeroext i1 %20(%"class.blink::InlineTextBox"* %21, %"class.blink::InlineTextBox"* %22) #11
  br i1 %23, label %24, label %47

24:                                               ; preds = %15
  %25 = bitcast %"class.blink::InlineTextBox"** %0 to <2 x i64>*
  %26 = load <2 x i64>, <2 x i64>* %25, align 8
  %27 = shufflevector <2 x i64> %26, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %28 = bitcast %"class.blink::InlineTextBox"** %0 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %28, align 8
  br label %47

29:                                               ; preds = %3
  %30 = bitcast %"class.blink::InlineTextBox"** %0 to i64*
  %31 = load i64, i64* %30, align 8
  br i1 %13, label %32, label %35

32:                                               ; preds = %29
  %33 = bitcast %"class.blink::InlineTextBox"** %4 to i64*
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %30, align 8
  store i64 %31, i64* %33, align 8
  br label %47

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::InlineTextBox"** %5 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %30, align 8
  store i64 %31, i64* %36, align 8
  %38 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %39 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %4, align 8
  %40 = inttoptr i64 %31 to %"class.blink::InlineTextBox"*
  %41 = tail call zeroext i1 %38(%"class.blink::InlineTextBox"* %39, %"class.blink::InlineTextBox"* %40) #11
  br i1 %41, label %42, label %47

42:                                               ; preds = %35
  %43 = bitcast %"class.blink::InlineTextBox"** %5 to <2 x i64>*
  %44 = load <2 x i64>, <2 x i64>* %43, align 8
  %45 = shufflevector <2 x i64> %44, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %46 = bitcast %"class.blink::InlineTextBox"** %5 to <2 x i64>*
  store <2 x i64> %45, <2 x i64>* %46, align 8
  br label %47

47:                                               ; preds = %14, %15, %24, %32, %35, %42
  %48 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, i64 3
  %49 = icmp eq %"class.blink::InlineTextBox"** %48, %1
  br i1 %49, label %50, label %51

50:                                               ; preds = %77, %47
  ret void

51:                                               ; preds = %47, %77
  %52 = phi %"class.blink::InlineTextBox"** [ %78, %77 ], [ %48, %47 ]
  %53 = phi %"class.blink::InlineTextBox"** [ %52, %77 ], [ %4, %47 ]
  %54 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %55 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %52, align 8
  %56 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %53, align 8
  %57 = tail call zeroext i1 %54(%"class.blink::InlineTextBox"* %55, %"class.blink::InlineTextBox"* %56) #11
  br i1 %57, label %58, label %77

58:                                               ; preds = %51
  %59 = bitcast %"class.blink::InlineTextBox"** %52 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = inttoptr i64 %60 to %"class.blink::InlineTextBox"*
  br label %62

62:                                               ; preds = %69, %58
  %63 = phi %"class.blink::InlineTextBox"** [ %52, %58 ], [ %64, %69 ]
  %64 = phi %"class.blink::InlineTextBox"** [ %53, %58 ], [ %71, %69 ]
  %65 = bitcast %"class.blink::InlineTextBox"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.blink::InlineTextBox"** %63 to i64*
  store i64 %66, i64* %67, align 8
  %68 = icmp eq %"class.blink::InlineTextBox"** %64, %0
  br i1 %68, label %74, label %69

69:                                               ; preds = %62
  %70 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %71 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %64, i64 -1
  %72 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %71, align 8
  %73 = tail call zeroext i1 %70(%"class.blink::InlineTextBox"* %61, %"class.blink::InlineTextBox"* %72) #11
  br i1 %73, label %62, label %74

74:                                               ; preds = %62, %69
  %75 = phi %"class.blink::InlineTextBox"** [ %64, %69 ], [ %0, %62 ]
  %76 = bitcast %"class.blink::InlineTextBox"** %75 to i64*
  store i64 %60, i64* %76, align 8
  br label %77

77:                                               ; preds = %74, %51
  %78 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %52, i64 1
  %79 = icmp eq %"class.blink::InlineTextBox"** %78, %1
  br i1 %79, label %50, label %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPKN5blink13InlineTextBoxES4_EPPS2_EEbT0_SA_T_(%"class.blink::InlineTextBox"**, %"class.blink::InlineTextBox"**, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint %"class.blink::InlineTextBox"** %1 to i64
  %5 = ptrtoint %"class.blink::InlineTextBox"** %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  switch i64 %7, label %73 [
    i64 0, label %156
    i64 1, label %156
    i64 2, label %8
    i64 3, label %19
    i64 4, label %62
    i64 5, label %67
  ]

8:                                                ; preds = %3
  %9 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %10 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %1, i64 -1
  %11 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %10, align 8
  %12 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, align 8
  %13 = tail call zeroext i1 %9(%"class.blink::InlineTextBox"* %11, %"class.blink::InlineTextBox"* %12) #11
  br i1 %13, label %14, label %156

14:                                               ; preds = %8
  %15 = bitcast %"class.blink::InlineTextBox"** %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.blink::InlineTextBox"** %10 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 %16, i64* %17, align 8
  br label %156

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, i64 1
  %21 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %1, i64 -1
  %22 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %23 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %20, align 8
  %24 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, align 8
  %25 = tail call zeroext i1 %22(%"class.blink::InlineTextBox"* %23, %"class.blink::InlineTextBox"* %24) #11
  %26 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %27 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %21, align 8
  %28 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %20, align 8
  %29 = tail call zeroext i1 %26(%"class.blink::InlineTextBox"* %27, %"class.blink::InlineTextBox"* %28) #11
  br i1 %25, label %45, label %30

30:                                               ; preds = %19
  br i1 %29, label %31, label %156

31:                                               ; preds = %30
  %32 = bitcast %"class.blink::InlineTextBox"** %20 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::InlineTextBox"** %21 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %32, align 8
  store i64 %33, i64* %34, align 8
  %36 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %37 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %20, align 8
  %38 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, align 8
  %39 = tail call zeroext i1 %36(%"class.blink::InlineTextBox"* %37, %"class.blink::InlineTextBox"* %38) #11
  br i1 %39, label %40, label %156

40:                                               ; preds = %31
  %41 = bitcast %"class.blink::InlineTextBox"** %0 to <2 x i64>*
  %42 = load <2 x i64>, <2 x i64>* %41, align 8
  %43 = shufflevector <2 x i64> %42, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %44 = bitcast %"class.blink::InlineTextBox"** %0 to <2 x i64>*
  store <2 x i64> %43, <2 x i64>* %44, align 8
  br label %156

45:                                               ; preds = %19
  %46 = bitcast %"class.blink::InlineTextBox"** %0 to i64*
  %47 = load i64, i64* %46, align 8
  br i1 %29, label %48, label %51

48:                                               ; preds = %45
  %49 = bitcast %"class.blink::InlineTextBox"** %21 to i64*
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %46, align 8
  store i64 %47, i64* %49, align 8
  br label %156

51:                                               ; preds = %45
  %52 = bitcast %"class.blink::InlineTextBox"** %20 to i64*
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %46, align 8
  store i64 %47, i64* %52, align 8
  %54 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %55 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %21, align 8
  %56 = inttoptr i64 %47 to %"class.blink::InlineTextBox"*
  %57 = tail call zeroext i1 %54(%"class.blink::InlineTextBox"* %55, %"class.blink::InlineTextBox"* %56) #11
  br i1 %57, label %58, label %156

58:                                               ; preds = %51
  %59 = load i64, i64* %52, align 8
  %60 = bitcast %"class.blink::InlineTextBox"** %21 to i64*
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %52, align 8
  store i64 %59, i64* %60, align 8
  br label %156

62:                                               ; preds = %3
  %63 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, i64 1
  %64 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, i64 2
  %65 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %1, i64 -1
  %66 = tail call i32 @_ZNSt3__17__sort4IRPFbPKN5blink13InlineTextBoxES4_EPPS2_EEjT0_SA_SA_SA_T_(%"class.blink::InlineTextBox"** %0, %"class.blink::InlineTextBox"** %63, %"class.blink::InlineTextBox"** %64, %"class.blink::InlineTextBox"** %65, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8) %2)
  br label %156

67:                                               ; preds = %3
  %68 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, i64 1
  %69 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, i64 2
  %70 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, i64 3
  %71 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %1, i64 -1
  %72 = tail call i32 @_ZNSt3__17__sort5IRPFbPKN5blink13InlineTextBoxES4_EPPS2_EEjT0_SA_SA_SA_SA_T_(%"class.blink::InlineTextBox"** %0, %"class.blink::InlineTextBox"** %68, %"class.blink::InlineTextBox"** %69, %"class.blink::InlineTextBox"** %70, %"class.blink::InlineTextBox"** %71, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** dereferenceable(8) %2)
  br label %156

73:                                               ; preds = %3
  %74 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, i64 2
  %75 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, i64 1
  %76 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %77 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %75, align 8
  %78 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, align 8
  %79 = tail call zeroext i1 %76(%"class.blink::InlineTextBox"* %77, %"class.blink::InlineTextBox"* %78) #11
  %80 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %81 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %74, align 8
  %82 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %75, align 8
  %83 = tail call zeroext i1 %80(%"class.blink::InlineTextBox"* %81, %"class.blink::InlineTextBox"* %82) #11
  br i1 %79, label %99, label %84

84:                                               ; preds = %73
  br i1 %83, label %85, label %117

85:                                               ; preds = %84
  %86 = bitcast %"class.blink::InlineTextBox"** %75 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.blink::InlineTextBox"** %74 to i64*
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %86, align 8
  store i64 %87, i64* %88, align 8
  %90 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %91 = inttoptr i64 %89 to %"class.blink::InlineTextBox"*
  %92 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, align 8
  %93 = tail call zeroext i1 %90(%"class.blink::InlineTextBox"* %91, %"class.blink::InlineTextBox"* %92) #11
  br i1 %93, label %94, label %117

94:                                               ; preds = %85
  %95 = bitcast %"class.blink::InlineTextBox"** %0 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8
  %97 = shufflevector <2 x i64> %96, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %98 = bitcast %"class.blink::InlineTextBox"** %0 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %98, align 8
  br label %117

99:                                               ; preds = %73
  %100 = bitcast %"class.blink::InlineTextBox"** %0 to i64*
  %101 = load i64, i64* %100, align 8
  br i1 %83, label %102, label %105

102:                                              ; preds = %99
  %103 = bitcast %"class.blink::InlineTextBox"** %74 to i64*
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %100, align 8
  store i64 %101, i64* %103, align 8
  br label %117

105:                                              ; preds = %99
  %106 = bitcast %"class.blink::InlineTextBox"** %75 to i64*
  %107 = load i64, i64* %106, align 8
  store i64 %107, i64* %100, align 8
  store i64 %101, i64* %106, align 8
  %108 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %109 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %74, align 8
  %110 = inttoptr i64 %101 to %"class.blink::InlineTextBox"*
  %111 = tail call zeroext i1 %108(%"class.blink::InlineTextBox"* %109, %"class.blink::InlineTextBox"* %110) #11
  br i1 %111, label %112, label %117

112:                                              ; preds = %105
  %113 = bitcast %"class.blink::InlineTextBox"** %75 to <2 x i64>*
  %114 = load <2 x i64>, <2 x i64>* %113, align 8
  %115 = shufflevector <2 x i64> %114, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %116 = bitcast %"class.blink::InlineTextBox"** %75 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %116, align 8
  br label %117

117:                                              ; preds = %84, %85, %94, %102, %105, %112
  %118 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %0, i64 3
  %119 = icmp eq %"class.blink::InlineTextBox"** %118, %1
  br i1 %119, label %156, label %120

120:                                              ; preds = %117, %149
  %121 = phi %"class.blink::InlineTextBox"** [ %151, %149 ], [ %118, %117 ]
  %122 = phi i32 [ %150, %149 ], [ 0, %117 ]
  %123 = phi %"class.blink::InlineTextBox"** [ %121, %149 ], [ %74, %117 ]
  %124 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %125 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %121, align 8
  %126 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %123, align 8
  %127 = tail call zeroext i1 %124(%"class.blink::InlineTextBox"* %125, %"class.blink::InlineTextBox"* %126) #11
  br i1 %127, label %128, label %149

128:                                              ; preds = %120
  %129 = bitcast %"class.blink::InlineTextBox"** %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = inttoptr i64 %130 to %"class.blink::InlineTextBox"*
  br label %132

132:                                              ; preds = %139, %128
  %133 = phi %"class.blink::InlineTextBox"** [ %121, %128 ], [ %134, %139 ]
  %134 = phi %"class.blink::InlineTextBox"** [ %123, %128 ], [ %141, %139 ]
  %135 = bitcast %"class.blink::InlineTextBox"** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"class.blink::InlineTextBox"** %133 to i64*
  store i64 %136, i64* %137, align 8
  %138 = icmp eq %"class.blink::InlineTextBox"** %134, %0
  br i1 %138, label %144, label %139

139:                                              ; preds = %132
  %140 = load i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)*, i1 (%"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*)** %2, align 8
  %141 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %134, i64 -1
  %142 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %141, align 8
  %143 = tail call zeroext i1 %140(%"class.blink::InlineTextBox"* %131, %"class.blink::InlineTextBox"* %142) #11
  br i1 %143, label %132, label %144

144:                                              ; preds = %132, %139
  %145 = phi %"class.blink::InlineTextBox"** [ %134, %139 ], [ %0, %132 ]
  %146 = bitcast %"class.blink::InlineTextBox"** %145 to i64*
  store i64 %130, i64* %146, align 8
  %147 = add i32 %122, 1
  %148 = icmp eq i32 %147, 8
  br i1 %148, label %153, label %149

149:                                              ; preds = %144, %120
  %150 = phi i32 [ %147, %144 ], [ %122, %120 ]
  %151 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %121, i64 1
  %152 = icmp eq %"class.blink::InlineTextBox"** %151, %1
  br i1 %152, label %156, label %120

153:                                              ; preds = %144
  %154 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %121, i64 1
  %155 = icmp eq %"class.blink::InlineTextBox"** %154, %1
  br label %156

156:                                              ; preds = %149, %153, %117, %58, %51, %48, %40, %31, %30, %8, %14, %3, %3, %67, %62
  %157 = phi i1 [ true, %67 ], [ true, %62 ], [ true, %3 ], [ true, %3 ], [ true, %14 ], [ true, %8 ], [ true, %30 ], [ true, %31 ], [ true, %40 ], [ true, %48 ], [ true, %51 ], [ true, %58 ], [ true, %117 ], [ %155, %153 ], [ true, %149 ]
  ret i1 %157
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::InlineTextBox"** @_ZN3WTF6VectorIPN5blink13InlineTextBoxELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1659"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1659", %"class.WTF::Vector.1659"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.1659", %"class.WTF::Vector.1659"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::InlineTextBox"**, %"class.blink::InlineTextBox"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %24, i64 %25
  ret %"class.blink::InlineTextBox"** %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
