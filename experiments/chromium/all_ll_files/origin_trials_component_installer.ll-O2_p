; ModuleID = '../../components/component_updater/installer_policies/origin_trials_component_installer.cc'
source_filename = "../../components/component_updater/installer_policies/origin_trials_component_installer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.component_updater::OriginTrialsComponentInstallerPolicy" = type { %"class.component_updater::ComponentInstallerPolicy" }
%"class.component_updater::ComponentInstallerPolicy" = type { i32 (...)** }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"struct.update_client::CrxInstaller::Result" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.base::Version" = type { %"class.std::__1::vector.28" }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { i32*, i32*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i32* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { i64 }

$_ZN17component_updater36OriginTrialsComponentInstallerPolicyD0Ev = comdat any

@_ZN17component_updater12_GLOBAL__N_120kOriginTrialSha2HashE = internal constant [32 x i8] c"\BB\A6\95R?U\C7\80\ACR2\1B\E7\22\F5\CEj\FD\9C\9E\A9*\0BP`+\7Fld\80\09\04", align 16
@_ZN17component_updater12_GLOBAL__N_124kManifestOriginTrialsKeyE = internal constant [14 x i8] c"origin-trials\00", align 1
@.str = private unnamed_addr constant [13 x i8] c"OriginTrials\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"Origin Trials\00", align 1
@_ZTVN17component_updater36OriginTrialsComponentInstallerPolicyE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.component_updater::ComponentInstallerPolicy"*)* @_ZN17component_updater24ComponentInstallerPolicyD2Ev to i8*), i8* bitcast (void (%"class.component_updater::OriginTrialsComponentInstallerPolicy"*)* @_ZN17component_updater36OriginTrialsComponentInstallerPolicyD0Ev to i8*), i8* bitcast (i1 (%"class.component_updater::OriginTrialsComponentInstallerPolicy"*, %"class.base::DictionaryValue"*, %"class.base::FilePath"*)* @_ZNK17component_updater36OriginTrialsComponentInstallerPolicy18VerifyInstallationERKN4base15DictionaryValueERKNS1_8FilePathE to i8*), i8* bitcast (i1 (%"class.component_updater::OriginTrialsComponentInstallerPolicy"*)* @_ZNK17component_updater36OriginTrialsComponentInstallerPolicy42SupportsGroupPolicyEnabledComponentUpdatesEv to i8*), i8* bitcast (i1 (%"class.component_updater::OriginTrialsComponentInstallerPolicy"*)* @_ZNK17component_updater36OriginTrialsComponentInstallerPolicy25RequiresNetworkEncryptionEv to i8*), i8* bitcast (void (%"struct.update_client::CrxInstaller::Result"*, %"class.component_updater::OriginTrialsComponentInstallerPolicy"*, %"class.base::DictionaryValue"*, %"class.base::FilePath"*)* @_ZN17component_updater36OriginTrialsComponentInstallerPolicy15OnCustomInstallERKN4base15DictionaryValueERKNS1_8FilePathE to i8*), i8* bitcast (void (%"class.component_updater::OriginTrialsComponentInstallerPolicy"*)* @_ZN17component_updater36OriginTrialsComponentInstallerPolicy17OnCustomUninstallEv to i8*), i8* bitcast (void (%"class.component_updater::OriginTrialsComponentInstallerPolicy"*, %"class.base::Version"*, %"class.base::FilePath"*, %"class.base::DictionaryValue"*)* @_ZN17component_updater36OriginTrialsComponentInstallerPolicy14ComponentReadyERKN4base7VersionERKNS1_8FilePathENSt3__110unique_ptrINS1_15DictionaryValueENS8_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.base::FilePath"*, %"class.component_updater::OriginTrialsComponentInstallerPolicy"*)* @_ZNK17component_updater36OriginTrialsComponentInstallerPolicy21GetRelativeInstallDirEv to i8*), i8* bitcast (void (%"class.component_updater::OriginTrialsComponentInstallerPolicy"*, %"class.std::__1::vector"*)* @_ZNK17component_updater36OriginTrialsComponentInstallerPolicy7GetHashEPNSt3__16vectorIhNS1_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.component_updater::OriginTrialsComponentInstallerPolicy"*)* @_ZNK17component_updater36OriginTrialsComponentInstallerPolicy7GetNameEv to i8*), i8* bitcast (void (%"class.std::__1::map"*, %"class.component_updater::OriginTrialsComponentInstallerPolicy"*)* @_ZNK17component_updater36OriginTrialsComponentInstallerPolicy22GetInstallerAttributesEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17component_updater36OriginTrialsComponentInstallerPolicy16GetComponentHashEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.std::__1::vector"* %0, null
  br i1 %2, label %59, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = icmp ult i64 %9, 32
  %11 = inttoptr i64 %8 to i8*
  br i1 %10, label %37, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %8
  %17 = icmp ult i64 %16, 32
  %18 = getelementptr inbounds [32 x i8], [32 x i8]* @_ZN17component_updater12_GLOBAL__N_120kOriginTrialSha2HashE, i64 0, i64 %16
  %19 = select i1 %17, i8* %18, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN17component_updater12_GLOBAL__N_120kOriginTrialSha2HashE, i64 1, i64 0)
  %20 = ptrtoint i8* %19 to i64
  %21 = sub i64 %20, ptrtoint ([32 x i8]* @_ZN17component_updater12_GLOBAL__N_120kOriginTrialSha2HashE to i64)
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 16 getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN17component_updater12_GLOBAL__N_120kOriginTrialSha2HashE, i64 0, i64 0), i64 %21, i1 false) #7
  br label %24

24:                                               ; preds = %23, %12
  br i1 %17, label %25, label %35

25:                                               ; preds = %24
  %26 = load i64, i64* %14, align 8
  %27 = sub i64 ptrtoint (i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN17component_updater12_GLOBAL__N_120kOriginTrialSha2HashE, i64 1, i64 0) to i64), %20
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = inttoptr i64 %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %19, i64 %27, i1 false) #7
  %31 = getelementptr inbounds i8, i8* %30, i64 %27
  %32 = ptrtoint i8* %31 to i64
  br label %33

33:                                               ; preds = %29, %25
  %34 = phi i64 [ %32, %29 ], [ %26, %25 ]
  store i64 %34, i64* %14, align 8
  br label %59

35:                                               ; preds = %24
  %36 = getelementptr inbounds i8, i8* %11, i64 %21
  store i8* %36, i8** %13, align 8
  br label %59

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %39 = icmp eq i64 %8, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %42 = bitcast i8** %41 to i64*
  store i64 %8, i64* %42, align 8
  tail call void @_ZdlPv(i8* nonnull %11) #8
  %43 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 24, i1 false) #7
  br label %46

44:                                               ; preds = %37
  %45 = icmp ult i64 %6, 4611686018427387903
  br i1 %45, label %46, label %51

46:                                               ; preds = %40, %44
  %47 = phi i64 [ 0, %40 ], [ %6, %44 ]
  %48 = shl i64 %47, 1
  %49 = icmp ugt i64 %48, 32
  %50 = select i1 %49, i64 %48, i64 32
  br label %51

51:                                               ; preds = %46, %44
  %52 = phi i64 [ %50, %46 ], [ 9223372036854775807, %44 ]
  %53 = tail call i8* @_Znwm(i64 %52) #8
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  store i8* %53, i8** %54, align 8
  store i8* %53, i8** %38, align 8
  %55 = getelementptr inbounds i8, i8* %53, i64 %52
  store i8* %55, i8** %4, align 8
  %56 = bitcast i8** %54 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %53, i8* align 16 getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN17component_updater12_GLOBAL__N_120kOriginTrialSha2HashE, i64 0, i64 0), i64 32, i1 false) #7
  %57 = getelementptr inbounds i8, i8* %53, i64 32
  %58 = ptrtoint i8* %57 to i64
  store i64 %58, i64* %56, align 8
  br label %59

59:                                               ; preds = %51, %35, %33, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17component_updater36OriginTrialsComponentInstallerPolicy7GetHashEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.component_updater::OriginTrialsComponentInstallerPolicy"* nocapture readnone, %"class.std::__1::vector"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.std::__1::vector"* %1, null
  br i1 %3, label %60, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = icmp ult i64 %10, 32
  %12 = inttoptr i64 %9 to i8*
  br i1 %11, label %38, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %9
  %18 = icmp ult i64 %17, 32
  %19 = getelementptr inbounds [32 x i8], [32 x i8]* @_ZN17component_updater12_GLOBAL__N_120kOriginTrialSha2HashE, i64 0, i64 %17
  %20 = select i1 %18, i8* %19, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN17component_updater12_GLOBAL__N_120kOriginTrialSha2HashE, i64 1, i64 0)
  %21 = ptrtoint i8* %20 to i64
  %22 = sub i64 %21, ptrtoint ([32 x i8]* @_ZN17component_updater12_GLOBAL__N_120kOriginTrialSha2HashE to i64)
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 16 getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN17component_updater12_GLOBAL__N_120kOriginTrialSha2HashE, i64 0, i64 0), i64 %22, i1 false) #7
  br label %25

25:                                               ; preds = %24, %13
  br i1 %18, label %26, label %36

26:                                               ; preds = %25
  %27 = load i64, i64* %15, align 8
  %28 = sub i64 ptrtoint (i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN17component_updater12_GLOBAL__N_120kOriginTrialSha2HashE, i64 1, i64 0) to i64), %21
  %29 = icmp sgt i64 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = inttoptr i64 %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* align 1 %20, i64 %28, i1 false) #7
  %32 = getelementptr inbounds i8, i8* %31, i64 %28
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %30, %26
  %35 = phi i64 [ %33, %30 ], [ %27, %26 ]
  store i64 %35, i64* %15, align 8
  br label %60

36:                                               ; preds = %25
  %37 = getelementptr inbounds i8, i8* %12, i64 %22
  store i8* %37, i8** %14, align 8
  br label %60

38:                                               ; preds = %4
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %40 = icmp eq i64 %9, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %43 = bitcast i8** %42 to i64*
  store i64 %9, i64* %43, align 8
  tail call void @_ZdlPv(i8* nonnull %12) #8
  %44 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #7
  br label %47

45:                                               ; preds = %38
  %46 = icmp ult i64 %7, 4611686018427387903
  br i1 %46, label %47, label %52

47:                                               ; preds = %45, %41
  %48 = phi i64 [ 0, %41 ], [ %7, %45 ]
  %49 = shl i64 %48, 1
  %50 = icmp ugt i64 %49, 32
  %51 = select i1 %50, i64 %49, i64 32
  br label %52

52:                                               ; preds = %47, %45
  %53 = phi i64 [ %51, %47 ], [ 9223372036854775807, %45 ]
  %54 = tail call i8* @_Znwm(i64 %53) #8
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  store i8* %54, i8** %55, align 8
  store i8* %54, i8** %39, align 8
  %56 = getelementptr inbounds i8, i8* %54, i64 %53
  store i8* %56, i8** %5, align 8
  %57 = bitcast i8** %55 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %54, i8* align 16 getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN17component_updater12_GLOBAL__N_120kOriginTrialSha2HashE, i64 0, i64 0), i64 32, i1 false) #7
  %58 = getelementptr inbounds i8, i8* %54, i64 32
  %59 = ptrtoint i8* %58 to i64
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %2, %34, %36, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK17component_updater36OriginTrialsComponentInstallerPolicy18VerifyInstallationERKN4base15DictionaryValueERKNS1_8FilePathE(%"class.component_updater::OriginTrialsComponentInstallerPolicy"* nocapture readnone, %"class.base::DictionaryValue"* dereferenceable(32), %"class.base::FilePath"* nocapture readnone dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZNK4base15DictionaryValue6HasKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::DictionaryValue"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN17component_updater12_GLOBAL__N_124kManifestOriginTrialsKeyE, i64 0, i64 0), i64 13) #7
  ret i1 %4
}

declare zeroext i1 @_ZNK4base15DictionaryValue6HasKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::DictionaryValue"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK17component_updater36OriginTrialsComponentInstallerPolicy42SupportsGroupPolicyEnabledComponentUpdatesEv(%"class.component_updater::OriginTrialsComponentInstallerPolicy"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK17component_updater36OriginTrialsComponentInstallerPolicy25RequiresNetworkEncryptionEv(%"class.component_updater::OriginTrialsComponentInstallerPolicy"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17component_updater36OriginTrialsComponentInstallerPolicy15OnCustomInstallERKN4base15DictionaryValueERKNS1_8FilePathE(%"struct.update_client::CrxInstaller::Result"* noalias nocapture sret, %"class.component_updater::OriginTrialsComponentInstallerPolicy"* nocapture readnone, %"class.base::DictionaryValue"* nocapture readnone dereferenceable(32), %"class.base::FilePath"* nocapture readnone dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = bitcast %"struct.update_client::CrxInstaller::Result"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 56, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN17component_updater36OriginTrialsComponentInstallerPolicy17OnCustomUninstallEv(%"class.component_updater::OriginTrialsComponentInstallerPolicy"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17component_updater36OriginTrialsComponentInstallerPolicy14ComponentReadyERKN4base7VersionERKNS1_8FilePathENSt3__110unique_ptrINS1_15DictionaryValueENS8_14default_deleteISA_EEEE(%"class.component_updater::OriginTrialsComponentInstallerPolicy"* nocapture readnone, %"class.base::Version"* nocapture readnone dereferenceable(24), %"class.base::FilePath"* nocapture readnone dereferenceable(24), %"class.base::DictionaryValue"*) unnamed_addr #0 align 2 {
  %5 = icmp eq %"class.base::DictionaryValue"* %3, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %3, i64 0, i32 0
  tail call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %7) #7
  %8 = bitcast %"class.base::DictionaryValue"* %3 to i8*
  tail call void @_ZdlPv(i8* %8) #8
  br label %9

9:                                                ; preds = %4, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17component_updater36OriginTrialsComponentInstallerPolicy21GetRelativeInstallDirEv(%"class.base::FilePath"* noalias sret, %"class.component_updater::OriginTrialsComponentInstallerPolicy"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 12) #7
  ret void
}

declare void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17component_updater36OriginTrialsComponentInstallerPolicy7GetNameEv(%"class.std::__1::basic_string"* noalias sret, %"class.component_updater::OriginTrialsComponentInstallerPolicy"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 13, i8* %4, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i64 13, i1 false) #7
  %6 = getelementptr inbounds i8, i8* %5, i64 13
  store i8 0, i8* %6, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17component_updater36OriginTrialsComponentInstallerPolicy22GetInstallerAttributesEv(%"class.std::__1::map"* noalias sret, %"class.component_updater::OriginTrialsComponentInstallerPolicy"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_node_base"** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %5, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN17component_updater24ComponentInstallerPolicyD2Ev(%"class.component_updater::ComponentInstallerPolicy"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17component_updater36OriginTrialsComponentInstallerPolicyD0Ev(%"class.component_updater::OriginTrialsComponentInstallerPolicy"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.component_updater::OriginTrialsComponentInstallerPolicy", %"class.component_updater::OriginTrialsComponentInstallerPolicy"* %0, i64 0, i32 0
  tail call void @_ZN17component_updater24ComponentInstallerPolicyD2Ev(%"class.component_updater::ComponentInstallerPolicy"* %2) #7
  %3 = bitcast %"class.component_updater::OriginTrialsComponentInstallerPolicy"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
