; ModuleID = '../../third_party/pdfium/xfa/fxfa/cxfa_ffcheckbutton.cpp'
source_filename = "../../third_party/pdfium/xfa/fxfa/cxfa_ffcheckbutton.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.fxcrt::UnownedPtr.33" = type { %class.CFWL_Widget* }
%class.CFWL_Widget = type { %class.IFWL_WidgetDelegate, %"class.CFWL_Widget::Properties", %class.CFX_RectF, i32, i64, %"class.cppgc::internal::BasicMember.18", %"class.cppgc::internal::BasicMember.19", %"class.cppgc::internal::BasicMember.20", %"class.cppgc::internal::BasicMember.4", %"class.cppgc::internal::BasicMember.3" }
%class.IFWL_WidgetDelegate = type { %"class.cppgc::GarbageCollectedMixin" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.CFWL_Widget::Properties" = type { i32, i32, i32 }
%class.CFX_RectF = type { float, float, float, float }
%"class.cppgc::internal::BasicMember.18" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.19" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.20" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.4" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.3" = type { %"class.cppgc::internal::MemberBase" }
%class.CFX_PTemplate = type { float, float }
%"struct.std::__1::atomic.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__atomic_base.98" }
%"struct.std::__1::__atomic_base.98" = type { %"struct.std::__1::__cxx_atomic_impl.99" }
%"struct.std::__1::__cxx_atomic_impl.99" = type { %"struct.std::__1::__cxx_atomic_base_impl.100" }
%"struct.std::__1::__cxx_atomic_base_impl.100" = type { i16 }
%class.CXFA_FFCheckButton = type { %class.CXFA_FFField, %"class.cppgc::internal::BasicMember.4", %"class.cppgc::internal::BasicMember.5", %class.CFX_RectF }
%class.CXFA_FFField = type { %class.CXFA_FFWidget, %class.IFWL_WidgetDelegate, %class.CFX_RectF, %class.CFX_RectF, %"class.cppgc::internal::BasicMember.3" }
%class.CXFA_FFWidget = type { %"class.CFWL_Widget::AdapterIface", %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.0", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.2", %class.CFX_RectF }
%"class.CFWL_Widget::AdapterIface" = type { %"class.cppgc::GarbageCollectedMixin" }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.0" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.1" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.2" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.5" = type { %"class.cppgc::internal::MemberBase" }
%class.CXFA_Node = type { %class.CXFA_Object, %"class.fxjs::GCedTreeNodeMixin", i32, i8, i8, i8, %"class.pdfium::span.9", %"class.pdfium::span.11", i32, %"class.fxcrt::UnownedPtr.13", i8, i8, i8, i32, %"class.cppgc::internal::BasicMember.2", %"class.std::__1::vector", %"class.cppgc::internal::BasicMember.15", %"class.cppgc::internal::BasicMember.16" }
%class.CXFA_Object = type { i32 (...)**, i32, i16, %"class.fxcrt::StringViewTemplate", i32, %"class.cppgc::internal::BasicMember.7", %"class.cppgc::internal::BasicMember.8" }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i8* }
%"class.cppgc::internal::BasicMember.7" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.8" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxjs::GCedTreeNodeMixin" = type { %"class.cppgc::GarbageCollectedMixin", %"class.fxcrt::TreeNode" }
%"class.fxcrt::TreeNode" = type { i32 (...)**, %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2" }
%"class.pdfium::span.9" = type { %"class.fxcrt::UnownedPtr.10", i64 }
%"class.fxcrt::UnownedPtr.10" = type { %"struct.CXFA_Node::PropertyData"* }
%"struct.CXFA_Node::PropertyData" = type { i16, i8, i8 }
%"class.pdfium::span.11" = type { %"class.fxcrt::UnownedPtr.12", i64 }
%"class.fxcrt::UnownedPtr.12" = type { %"struct.CXFA_Node::AttributeData"* }
%"struct.CXFA_Node::AttributeData" = type { i16, i8, i8* }
%"class.fxcrt::UnownedPtr.13" = type { %class.CFX_XMLNode* }
%class.CFX_XMLNode = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cppgc::internal::BasicMember.2"*, %"class.cppgc::internal::BasicMember.2"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cppgc::internal::BasicMember.2"* }
%"class.cppgc::internal::BasicMember.15" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.16" = type { %"class.cppgc::internal::MemberBase" }
%class.CXFA_CheckButton = type { %class.CXFA_Node }
%"class.cppgc::Visitor" = type { i32 (...)** }
%"class.CFWL_Widget::ScopedUpdateLock" = type { %"class.fxcrt::UnownedPtr.33" }
%class.CFWL_App = type { %"class.cppgc::internal::BasicMember.22", %"class.cppgc::internal::BasicMember.20", %"class.cppgc::internal::BasicMember.23" }
%"class.cppgc::internal::BasicMember.22" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.23" = type { %"class.cppgc::internal::MemberBase" }
%"class.CFWL_App::AdapterIface" = type { %"class.cppgc::GarbageCollectedMixin" }
%"class.cppgc::Heap" = type { i32 (...)** }
%"class.cppgc::AllocationHandle" = type opaque
%class.CFWL_CheckBox = type <{ %class.CFWL_Widget, %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, %struct.FDE_TextStyle, i8, i8, [3 x i8], float, [4 x i8] }>
%struct.FDE_TextStyle = type { i8, i8, i8 }
%"struct.cppgc::internal::CagedHeapLocalData" = type { i8, %"class.cppgc::internal::HeapBase"* }
%"class.cppgc::internal::HeapBase" = type opaque
%class.CFWL_NoteDriver = type { %"class.std::__1::map", %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i64 }
%class.CXFA_Margin = type opaque
%class.CXFA_Caption = type { %class.CXFA_Node }
%class.CXFA_Para = type { %class.CXFA_Node }
%class.CXFA_Border = type { %class.CXFA_Rectangle }
%class.CXFA_Rectangle = type { %class.CXFA_Box }
%class.CXFA_Box = type { %class.CXFA_Node }
%class.CFGAS_GEGraphics = type { %"class.fxcrt::UnownedPtr.34", %"struct.CFGAS_GEGraphics::TInfo", %"class.std::__1::vector.44" }
%"class.fxcrt::UnownedPtr.34" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type opaque
%"struct.CFGAS_GEGraphics::TInfo" = type { %class.CFX_GraphStateData, %class.CFX_Matrix, i8, %class.CFGAS_GEColor, %class.CFGAS_GEColor }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.35" }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { float*, float*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { float* }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFGAS_GEColor = type { i32, i32, %"class.fxcrt::UnownedPtr.42", %"class.fxcrt::UnownedPtr.43" }
%"class.fxcrt::UnownedPtr.42" = type { %class.CFGAS_GEPattern* }
%class.CFGAS_GEPattern = type opaque
%"class.fxcrt::UnownedPtr.43" = type { %class.CFGAS_GEShading* }
%class.CFGAS_GEShading = type opaque
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr"* }
%class.CXFA_FFApp = type { %"class.CFWL_App::AdapterIface", %"class.fxcrt::UnownedPtr.52", %"class.cppgc::internal::BasicMember.53", %"class.cppgc::internal::BasicMember.54", %"class.cppgc::internal::BasicMember.55", %"class.cppgc::internal::BasicMember.19" }
%"class.fxcrt::UnownedPtr.52" = type { %class.IXFA_AppProvider* }
%class.IXFA_AppProvider = type { i32 (...)** }
%"class.cppgc::internal::BasicMember.53" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.54" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.55" = type { %"class.cppgc::internal::MemberBase" }
%class.CFWL_WidgetMgr = type { %"class.cppgc::internal::BasicMember.57", %"class.cppgc::internal::BasicMember.19", %"class.std::__1::map.58" }
%"class.cppgc::internal::BasicMember.57" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::map.58" = type { %"class.std::__1::__tree.59" }
%"class.std::__1::__tree.59" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.60", %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%class.CFWL_MessageMouse = type <{ %class.CFWL_Message, i8, i8, [2 x i8], %class.CFX_PTemplate, [4 x i8] }>
%class.CFWL_Message = type { i32 (...)**, i32, %"class.fxcrt::UnownedPtr.33", %"class.fxcrt::UnownedPtr.33" }
%class.CFWL_Event = type { i32 (...)**, i32, %class.CFWL_Widget*, %class.CFWL_Widget* }
%class.CXFA_EventParam = type { i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, %"class.fxcrt::UnownedPtr.69", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString" }
%"class.fxcrt::UnownedPtr.69" = type { %class.CXFA_Node* }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.70" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%class.CXFA_FFDocView = type { i8, i8, %"class.std::__1::vector.75", %"class.cppgc::internal::BasicMember.82", %"class.cppgc::internal::BasicMember.83", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.84", %"class.std::__1::list", %"class.std::__1::vector", %"class.std::__1::list.89", %"class.std::__1::list", %"class.std::__1::list", i32, i32 }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"*, %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.fxcrt::WideString"* }
%"class.cppgc::internal::BasicMember.82" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.83" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.84" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::list.89" = type { %"class.std::__1::__list_imp.90" }
%"class.std::__1::__list_imp.90" = type { %"struct.std::__1::__list_node_base.91", %"class.std::__1::__compressed_pair.92" }
%"struct.std::__1::__list_node_base.91" = type { %"struct.std::__1::__list_node_base.91"*, %"struct.std::__1::__list_node_base.91"* }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.85" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%class.CFX_VTemplate = type opaque
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %"class.fxcrt::WideString" }
%class.CXFA_FFDropDown = type opaque

$_ZN5cppgc8internal14TraceTraitBaseI16CXFA_CheckButtonE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5cppgc8internal14FinalizerTraitI11CFWL_WidgetE8FinalizeEPv = comdat any

$_ZN5cppgc8internal14TraceTraitBaseI11CFWL_WidgetE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5cppgc8internal9NameTraitI11CFWL_WidgetE7GetNameEPKv = comdat any

$_ZZN5cppgc8internal11GCInfoTraitI11CFWL_WidgetE5IndexEvE16registered_index = comdat any

@_ZTV18CXFA_FFCheckButton = hidden unnamed_addr constant { [60 x i8*], [8 x i8*] } { [60 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CXFA_FFCheckButton*, %"class.cppgc::Visitor"*)* @_ZNK18CXFA_FFCheckButton5TraceEPN5cppgc7VisitorE to i8*), i8* bitcast (void (%class.CXFA_FFCheckButton*)* @_ZN18CXFA_FFCheckButtonD2Ev to i8*), i8* bitcast (void (%class.CXFA_FFCheckButton*)* @_ZN18CXFA_FFCheckButtonD0Ev to i8*), i8* bitcast (void (%class.CFX_Matrix*, %class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget15GetRotateMatrixEv to i8*), i8* bitcast (void (%class.CXFA_FFWidget*, i1, %class.CFX_RectF*)* @_ZN13CXFA_FFWidget12DisplayCaretEbPK9CFX_RectF to i8*), i8* bitcast (void (%class.CXFA_FFWidget*, i32*, float*)* @_ZN13CXFA_FFWidget26GetBorderColorAndThicknessEPjPf to i8*), i8* bitcast (void (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget11PreFinalizeEv to i8*), i8* bitcast (%class.CXFA_FFField* (%class.CXFA_FFField*)* @_ZN12CXFA_FFField7AsFieldEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CXFA_FFField*, i32)* @_ZN12CXFA_FFField7GetBBoxEN13CXFA_FFWidget11FocusOptionE to i8*), i8* bitcast (void (%class.CXFA_FFCheckButton*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*, i32)* @_ZN18CXFA_FFCheckButton12RenderWidgetEP16CFGAS_GEGraphicsRK10CFX_MatrixN13CXFA_FFWidget15HighlightOptionE to i8*), i8* bitcast (i1 (%class.CXFA_FFField*)* @_ZN12CXFA_FFField8IsLoadedEv to i8*), i8* bitcast (i1 (%class.CXFA_FFCheckButton*)* @_ZN18CXFA_FFCheckButton10LoadWidgetEv to i8*), i8* bitcast (i1 (%class.CXFA_FFCheckButton*)* @_ZN18CXFA_FFCheckButton13PerformLayoutEv to i8*), i8* bitcast (i1 (%class.CXFA_FFCheckButton*)* @_ZN18CXFA_FFCheckButton13UpdateFWLDataEv to i8*), i8* bitcast (void (%class.CXFA_FFCheckButton*)* @_ZN18CXFA_FFCheckButton20UpdateWidgetPropertyEv to i8*), i8* bitcast (i1 (%class.CXFA_FFField*, i32, %class.CFX_PTemplate*, i8)* @_ZN12CXFA_FFField24AcceptsFocusOnButtonDownEjRK13CFX_PTemplateIfE16FWL_MouseCommand to i8*), i8* bitcast (i1 (%class.CXFA_FFField*)* @_ZN12CXFA_FFField12OnMouseEnterEv to i8*), i8* bitcast (i1 (%class.CXFA_FFField*)* @_ZN12CXFA_FFField11OnMouseExitEv to i8*), i8* bitcast (i1 (%class.CXFA_FFField*, i32, %class.CFX_PTemplate*)* @_ZN12CXFA_FFField13OnLButtonDownEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFCheckButton*, i32, %class.CFX_PTemplate*)* @_ZN18CXFA_FFCheckButton11OnLButtonUpEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFField*, i32, %class.CFX_PTemplate*)* @_ZN12CXFA_FFField15OnLButtonDblClkEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFField*, i32, %class.CFX_PTemplate*)* @_ZN12CXFA_FFField11OnMouseMoveEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFField*, i32, %class.CFX_PTemplate*, %class.CFX_VTemplate*)* @_ZN12CXFA_FFField12OnMouseWheelEjRK13CFX_PTemplateIfERK13CFX_VTemplateIiE to i8*), i8* bitcast (i1 (%class.CXFA_FFField*, i32, %class.CFX_PTemplate*)* @_ZN12CXFA_FFField13OnRButtonDownEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFField*, i32, %class.CFX_PTemplate*)* @_ZN12CXFA_FFField11OnRButtonUpEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFField*, i32, %class.CFX_PTemplate*)* @_ZN12CXFA_FFField15OnRButtonDblClkEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFField*, %class.CXFA_FFWidget*)* @_ZN12CXFA_FFField10OnSetFocusEP13CXFA_FFWidget to i8*), i8* bitcast (i1 (%class.CXFA_FFField*, %class.CXFA_FFWidget*)* @_ZN12CXFA_FFField11OnKillFocusEP13CXFA_FFWidget to i8*), i8* bitcast (i1 (%class.CXFA_FFField*, i32, i32)* @_ZN12CXFA_FFField9OnKeyDownEjj to i8*), i8* bitcast (i1 (%class.CXFA_FFField*, i32, i32)* @_ZN12CXFA_FFField7OnKeyUpEjj to i8*), i8* bitcast (i1 (%class.CXFA_FFField*, i32, i32)* @_ZN12CXFA_FFField6OnCharEjj to i8*), i8* bitcast (i32 (%class.CXFA_FFField*, %class.CFX_PTemplate*)* @_ZN12CXFA_FFField7HitTestERK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget7CanUndoEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget7CanRedoEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget7CanCopyEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget6CanCutEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget8CanPasteEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget12CanSelectAllEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget9CanDeleteEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget11CanDeSelectEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget4UndoEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget4RedoEv to i8*), i8* bitcast (void (%"class.pdfium::Optional"*, %class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget4CopyEv to i8*), i8* bitcast (void (%"class.pdfium::Optional"*, %class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget3CutEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, %"class.fxcrt::WideString"*)* @_ZN13CXFA_FFWidget5PasteERKN5fxcrt10WideStringE to i8*), i8* bitcast (void (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget9SelectAllEv to i8*), i8* bitcast (void (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget6DeleteEv to i8*), i8* bitcast (void (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget8DeSelectEv to i8*), i8* bitcast (void (%"class.fxcrt::WideString"*, %class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget7GetTextEv to i8*), i8* bitcast (i8 (%class.CXFA_FFCheckButton*)* @_ZN18CXFA_FFCheckButton16GetFormFieldTypeEv to i8*), i8* bitcast (i1 (%class.CXFA_FFField*, %class.CFX_PTemplate*)* @_ZN12CXFA_FFField14PtInActiveRectERK13CFX_PTemplateIfE to i8*), i8* bitcast (%class.CXFA_FFDropDown* (%class.CXFA_FFField*)* @_ZN12CXFA_FFField10AsDropDownEv to i8*), i8* bitcast (void (%class.CXFA_FFCheckButton*, %class.CFWL_Message*)* @_ZN18CXFA_FFCheckButton16OnProcessMessageEP12CFWL_Message to i8*), i8* bitcast (void (%class.CXFA_FFCheckButton*, %class.CFWL_Event*)* @_ZN18CXFA_FFCheckButton14OnProcessEventEP10CFWL_Event to i8*), i8* bitcast (void (%class.CXFA_FFCheckButton*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)* @_ZN18CXFA_FFCheckButton12OnDrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix to i8*), i8* bitcast (void (%class.CXFA_FFField*)* @_ZN12CXFA_FFField10SetFWLRectEv to i8*), i8* bitcast (i1 (%class.CXFA_FFCheckButton*)* @_ZN18CXFA_FFCheckButton10CommitDataEv to i8*), i8* bitcast (i1 (%class.CXFA_FFCheckButton*)* @_ZN18CXFA_FFCheckButton13IsDataChangedEv to i8*)], [8 x i8*] [i8* inttoptr (i64 -56 to i8*), i8* null, i8* bitcast (void (%class.CXFA_FFCheckButton*, %"class.cppgc::Visitor"*)* @_ZThn56_NK18CXFA_FFCheckButton5TraceEPN5cppgc7VisitorE to i8*), i8* bitcast (void (%class.CXFA_FFCheckButton*)* @_ZThn56_N18CXFA_FFCheckButtonD1Ev to i8*), i8* bitcast (void (%class.CXFA_FFCheckButton*)* @_ZThn56_N18CXFA_FFCheckButtonD0Ev to i8*), i8* bitcast (void (%class.CXFA_FFCheckButton*, %class.CFWL_Message*)* @_ZThn56_N18CXFA_FFCheckButton16OnProcessMessageEP12CFWL_Message to i8*), i8* bitcast (void (%class.CXFA_FFCheckButton*, %class.CFWL_Event*)* @_ZThn56_N18CXFA_FFCheckButton14OnProcessEventEP10CFWL_Event to i8*), i8* bitcast (void (%class.CXFA_FFCheckButton*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)* @_ZThn56_N18CXFA_FFCheckButton12OnDrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix to i8*)] }, align 8
@__const._ZN18CXFA_FFCheckButton11OnLButtonUpEjRK13CFX_PTemplateIfE.msg = private unnamed_addr constant <{ { i32 (...)**, i32, [4 x i8], %"class.fxcrt::UnownedPtr.33", %"class.fxcrt::UnownedPtr.33" }, i8, i8, [2 x i8], %class.CFX_PTemplate, [4 x i8] }> <{ { i32 (...)**, i32, [4 x i8], %"class.fxcrt::UnownedPtr.33", %"class.fxcrt::UnownedPtr.33" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.fxcrt::UnownedPtr.33" { %class.CFWL_Widget* inttoptr (i64 -6148914691236517206 to %class.CFWL_Widget*) }, %"class.fxcrt::UnownedPtr.33" { %class.CFWL_Widget* inttoptr (i64 -6148914691236517206 to %class.CFWL_Widget*) } }, i8 -86, i8 -86, [2 x i8] c"\AA\AA", %class.CFX_PTemplate { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZZN5cppgc8internal11GCInfoTraitI11CFWL_WidgetE5IndexEvE16registered_index = linkonce_odr hidden global %"struct.std::__1::atomic.96" zeroinitializer, comdat, align 2
@_ZN5cppgc12NameProvider11kHiddenNameE = external constant [13 x i8], align 1

@_ZN18CXFA_FFCheckButtonC1EP9CXFA_NodeP16CXFA_CheckButton = hidden unnamed_addr alias void (%class.CXFA_FFCheckButton*, %class.CXFA_Node*, %class.CXFA_CheckButton*), void (%class.CXFA_FFCheckButton*, %class.CXFA_Node*, %class.CXFA_CheckButton*)* @_ZN18CXFA_FFCheckButtonC2EP9CXFA_NodeP16CXFA_CheckButton
@_ZN18CXFA_FFCheckButtonD1Ev = hidden unnamed_addr alias void (%class.CXFA_FFCheckButton*), void (%class.CXFA_FFCheckButton*)* @_ZN18CXFA_FFCheckButtonD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CXFA_FFCheckButtonC2EP9CXFA_NodeP16CXFA_CheckButton(%class.CXFA_FFCheckButton*, %class.CXFA_Node*, %class.CXFA_CheckButton*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0
  tail call void @_ZN12CXFA_FFFieldC2EP9CXFA_Node(%class.CXFA_FFField* %4, %class.CXFA_Node* %1) #5
  %5 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [60 x i8*], [8 x i8*] }, { [60 x i8*], [8 x i8*] }* @_ZTV18CXFA_FFCheckButton, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [60 x i8*], [8 x i8*] }, { [60 x i8*], [8 x i8*] }* @_ZTV18CXFA_FFCheckButton, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 1, i32 0, i32 0
  store i8* null, i8** %7, align 8
  %8 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 2
  %9 = bitcast %"class.cppgc::internal::BasicMember.5"* %8 to %class.CXFA_CheckButton**
  store %class.CXFA_CheckButton* %2, %class.CXFA_CheckButton** %9, align 8
  %10 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 3
  %11 = bitcast %class.CFX_RectF* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 16, i1 false) #5
  ret void
}

declare void @_ZN12CXFA_FFFieldC2EP9CXFA_Node(%class.CXFA_FFField*, %class.CXFA_Node*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN12CXFA_FFFieldD2Ev(%class.CXFA_FFField*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CXFA_FFCheckButtonD2Ev(%class.CXFA_FFCheckButton*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0
  tail call void @_ZN12CXFA_FFFieldD2Ev(%class.CXFA_FFField* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N18CXFA_FFCheckButtonD1Ev(%class.CXFA_FFCheckButton*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 -1, i32 0, i32 3
  %3 = bitcast %class.CFX_RectF* %2 to %class.CXFA_FFField*
  tail call void @_ZN12CXFA_FFFieldD2Ev(%class.CXFA_FFField* %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CXFA_FFCheckButtonD0Ev(%class.CXFA_FFCheckButton*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0
  tail call void @_ZN12CXFA_FFFieldD2Ev(%class.CXFA_FFField* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N18CXFA_FFCheckButtonD0Ev(%class.CXFA_FFCheckButton*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 -1, i32 0, i32 3
  %3 = bitcast %class.CFX_RectF* %2 to %class.CXFA_FFField*
  tail call void @_ZN12CXFA_FFFieldD2Ev(%class.CXFA_FFField* %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18CXFA_FFCheckButton5TraceEPN5cppgc7VisitorE(%class.CXFA_FFCheckButton*, %"class.cppgc::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0
  tail call void @_ZNK12CXFA_FFField5TraceEPN5cppgc7VisitorE(%class.CXFA_FFField* %3, %"class.cppgc::Visitor"* %1) #5
  %4 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 1
  %5 = bitcast %"class.cppgc::internal::BasicMember.4"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = tail call { i8*, void (%"class.cppgc::Visitor"*, i8*)* } @_ZN5cppgc8internal30TraceTraitFromInnerAddressImpl18GetTraceDescriptorEPKv(i8* nonnull %9) #5
  %11 = extractvalue { i8*, void (%"class.cppgc::Visitor"*, i8*)* } %10, 0
  %12 = extractvalue { i8*, void (%"class.cppgc::Visitor"*, i8*)* } %10, 1
  %13 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  %14 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %14, i64 4
  %16 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.cppgc::Visitor"* %1, i8* nonnull %9, i8* %11, void (%"class.cppgc::Visitor"*, i8*)* %12) #5
  br label %17

17:                                               ; preds = %2, %8
  %18 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 2
  %19 = bitcast %"class.cppgc::internal::BasicMember.5"* %18 to i64*
  %20 = load atomic i64, i64* %19 monotonic, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %17
  %23 = inttoptr i64 %20 to i8*
  %24 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  %25 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %25, i64 4
  %27 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %26, align 8
  tail call void %27(%"class.cppgc::Visitor"* %1, i8* nonnull %23, i8* nonnull %23, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI16CXFA_CheckButtonE5TraceEPNS_7VisitorEPKv) #5
  br label %28

28:                                               ; preds = %17, %22
  ret void
}

declare void @_ZNK12CXFA_FFField5TraceEPN5cppgc7VisitorE(%class.CXFA_FFField*, %"class.cppgc::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_NK18CXFA_FFCheckButton5TraceEPN5cppgc7VisitorE(%class.CXFA_FFCheckButton*, %"class.cppgc::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 -1, i32 0, i32 3
  %4 = bitcast %class.CFX_RectF* %3 to %class.CXFA_FFField*
  tail call void @_ZNK12CXFA_FFField5TraceEPN5cppgc7VisitorE(%class.CXFA_FFField* %4, %"class.cppgc::Visitor"* %1) #5
  %5 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 6, i32 2
  %6 = bitcast float* %5 to i64*
  %7 = load atomic i64, i64* %6 monotonic, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %2
  %10 = inttoptr i64 %7 to i8*
  %11 = tail call { i8*, void (%"class.cppgc::Visitor"*, i8*)* } @_ZN5cppgc8internal30TraceTraitFromInnerAddressImpl18GetTraceDescriptorEPKv(i8* nonnull %10) #5
  %12 = extractvalue { i8*, void (%"class.cppgc::Visitor"*, i8*)* } %11, 0
  %13 = extractvalue { i8*, void (%"class.cppgc::Visitor"*, i8*)* } %11, 1
  %14 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  %15 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %15, i64 4
  %17 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.cppgc::Visitor"* %1, i8* nonnull %10, i8* %12, void (%"class.cppgc::Visitor"*, i8*)* %13) #5
  br label %18

18:                                               ; preds = %9, %2
  %19 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 7
  %20 = bitcast %class.CFX_RectF* %19 to i64*
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %18
  %24 = inttoptr i64 %21 to i8*
  %25 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  %26 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %26, i64 4
  %28 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.cppgc::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI16CXFA_CheckButtonE5TraceEPNS_7VisitorEPKv) #5
  br label %29

29:                                               ; preds = %18, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CXFA_FFCheckButton10LoadWidgetEv(%class.CXFA_FFCheckButton*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.CFWL_Widget::ScopedUpdateLock", align 8
  %3 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 0
  %4 = tail call %class.CFWL_App* @_ZNK13CXFA_FFWidget9GetFWLAppEv(%class.CXFA_FFWidget* %3) #5
  %5 = bitcast %class.CFWL_App* %4 to %"class.CFWL_App::AdapterIface"**
  %6 = load %"class.CFWL_App::AdapterIface"*, %"class.CFWL_App::AdapterIface"** %5, align 8
  %7 = bitcast %"class.CFWL_App::AdapterIface"* %6 to %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)***
  %8 = load %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)**, %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)*, %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)** %8, i64 6
  %10 = load %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)*, %"class.cppgc::Heap"* (%"class.CFWL_App::AdapterIface"*)** %9, align 8
  %11 = tail call %"class.cppgc::Heap"* %10(%"class.CFWL_App::AdapterIface"* %6) #5
  %12 = tail call %"class.cppgc::AllocationHandle"* @_ZN5cppgc4Heap19GetAllocationHandleEv(%"class.cppgc::Heap"* %11) #5
  %13 = tail call %class.CFWL_App* @_ZNK13CXFA_FFWidget9GetFWLAppEv(%class.CXFA_FFWidget* %3) #5
  %14 = load atomic i16, i16* getelementptr inbounds (%"struct.std::__1::atomic.96", %"struct.std::__1::atomic.96"* @_ZZN5cppgc8internal11GCInfoTraitI11CFWL_WidgetE5IndexEvE16registered_index, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 2
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %1
  %17 = tail call zeroext i16 @_ZN5cppgc8internal17EnsureGCInfoIndexERNSt3__16atomicItEEPFvPvEPFvPNS_7VisitorEPKvEPFNS0_14HeapObjectNameESB_Eb(%"struct.std::__1::atomic.96"* nonnull dereferenceable(2) @_ZZN5cppgc8internal11GCInfoTraitI11CFWL_WidgetE5IndexEvE16registered_index, void (i8*)* nonnull @_ZN5cppgc8internal14FinalizerTraitI11CFWL_WidgetE8FinalizeEPv, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI11CFWL_WidgetE5TraceEPNS_7VisitorEPKv, { i8*, i8 } (i8*)* nonnull @_ZN5cppgc8internal9NameTraitI11CFWL_WidgetE7GetNameEPKv, i1 zeroext true) #5
  br label %18

18:                                               ; preds = %1, %16
  %19 = phi i16 [ %17, %16 ], [ %14, %1 ]
  %20 = tail call i8* @_ZN5cppgc8internal33MakeGarbageCollectedTraitInternal8AllocateERNS_16AllocationHandleEmt(%"class.cppgc::AllocationHandle"* %12, i64 168, i16 zeroext %19) #5
  %21 = bitcast i8* %20 to %class.CFWL_CheckBox*
  tail call void @_ZN13CFWL_CheckBoxC1EP8CFWL_App(%class.CFWL_CheckBox* %21, %class.CFWL_App* %13) #5
  %22 = getelementptr inbounds i8, i8* %20, i64 -4
  %23 = bitcast i8* %22 to i16*
  %24 = atomicrmw or i16* %23, i16 1 release
  %25 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0
  %26 = bitcast i8* %20 to %class.CFWL_Widget*
  tail call void @_ZN12CXFA_FFField15SetNormalWidgetEP11CFWL_Widget(%class.CXFA_FFField* %25, %class.CFWL_Widget* %26) #5
  %27 = getelementptr inbounds i8, i8* %20, i64 48
  %28 = ptrtoint %class.CXFA_FFCheckButton* %0 to i64
  %29 = bitcast i8* %27 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  %30 = bitcast %class.CXFA_FFCheckButton* %0 to i8*
  %31 = and i64 %28, -4294967296
  %32 = ptrtoint i8* %27 to i64
  %33 = sub i64 %32, %31
  %34 = icmp ult i64 %33, 4294967297
  br i1 %34, label %35, label %41

35:                                               ; preds = %18
  %36 = inttoptr i64 %31 to %"struct.cppgc::internal::CagedHeapLocalData"*
  %37 = getelementptr inbounds %"struct.cppgc::internal::CagedHeapLocalData", %"struct.cppgc::internal::CagedHeapLocalData"* %36, i64 0, i32 0
  %38 = load i8, i8* %37, align 536870912, !range !2
  %39 = icmp eq i8 %38, 1
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %35
  tail call void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8* %30) #5
  br label %41

41:                                               ; preds = %18, %35, %40
  %42 = getelementptr inbounds i8, i8* %20, i64 56
  %43 = bitcast i8* %42 to %class.CFWL_App**
  %44 = load %class.CFWL_App*, %class.CFWL_App** %43, align 8
  %45 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %44, i64 0, i32 2
  %46 = bitcast %"class.cppgc::internal::BasicMember.23"* %45 to %class.CFWL_NoteDriver**
  %47 = load %class.CFWL_NoteDriver*, %class.CFWL_NoteDriver** %46, align 8
  tail call void @_ZN15CFWL_NoteDriver19RegisterEventTargetEP11CFWL_WidgetS1_(%class.CFWL_NoteDriver* %47, %class.CFWL_Widget* %26, %class.CFWL_Widget* %26) #5
  %48 = getelementptr inbounds i8, i8* %20, i64 72
  %49 = bitcast i8* %48 to %class.IFWL_WidgetDelegate**
  %50 = load %class.IFWL_WidgetDelegate*, %class.IFWL_WidgetDelegate** %49, align 8
  %51 = icmp eq %class.IFWL_WidgetDelegate* %50, null
  %52 = bitcast i8* %20 to %class.IFWL_WidgetDelegate*
  %53 = select i1 %51, %class.IFWL_WidgetDelegate* %52, %class.IFWL_WidgetDelegate* %50
  %54 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 1
  %55 = ptrtoint %class.IFWL_WidgetDelegate* %53 to i64
  %56 = bitcast %"class.cppgc::internal::BasicMember.4"* %54 to i64*
  store atomic i64 %55, i64* %56 monotonic, align 8
  %57 = bitcast %class.IFWL_WidgetDelegate* %53 to i8*
  %58 = and i64 %55, -4294967296
  %59 = ptrtoint %"class.cppgc::internal::BasicMember.4"* %54 to i64
  %60 = sub i64 %59, %58
  %61 = icmp ult i64 %60, 4294967297
  br i1 %61, label %62, label %68

62:                                               ; preds = %41
  %63 = inttoptr i64 %58 to %"struct.cppgc::internal::CagedHeapLocalData"*
  %64 = getelementptr inbounds %"struct.cppgc::internal::CagedHeapLocalData", %"struct.cppgc::internal::CagedHeapLocalData"* %63, i64 0, i32 0
  %65 = load i8, i8* %64, align 536870912, !range !2
  %66 = icmp eq i8 %65, 1
  br i1 %66, label %67, label %68, !prof !3

67:                                               ; preds = %62
  tail call void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8* %57) #5
  br label %68

68:                                               ; preds = %41, %62, %67
  %69 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 1
  %70 = ptrtoint %class.IFWL_WidgetDelegate* %69 to i64
  %71 = bitcast i8* %48 to i64*
  store atomic i64 %70, i64* %71 monotonic, align 8
  %72 = bitcast %class.IFWL_WidgetDelegate* %69 to i8*
  %73 = and i64 %70, -4294967296
  %74 = ptrtoint i8* %48 to i64
  %75 = sub i64 %74, %73
  %76 = icmp ult i64 %75, 4294967297
  br i1 %76, label %77, label %83

77:                                               ; preds = %68
  %78 = inttoptr i64 %73 to %"struct.cppgc::internal::CagedHeapLocalData"*
  %79 = getelementptr inbounds %"struct.cppgc::internal::CagedHeapLocalData", %"struct.cppgc::internal::CagedHeapLocalData"* %78, i64 0, i32 0
  %80 = load i8, i8* %79, align 536870912, !range !2
  %81 = icmp eq i8 %80, 1
  br i1 %81, label %82, label %83, !prof !3

82:                                               ; preds = %77
  tail call void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8* %72) #5
  br label %83

83:                                               ; preds = %68, %77, %82
  %84 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 0, i32 4
  %85 = bitcast %"class.cppgc::internal::BasicMember.2"* %84 to %class.CXFA_Node**
  %86 = load %class.CXFA_Node*, %class.CXFA_Node** %85, align 8
  %87 = tail call zeroext i1 @_ZN9CXFA_Node13IsRadioButtonEv(%class.CXFA_Node* %86) #5
  br i1 %87, label %88, label %89

88:                                               ; preds = %83
  tail call void @_ZN11CFWL_Widget14ModifyStylesExEjj(%class.CFWL_Widget* %26, i32 128, i32 -1) #5
  br label %89

89:                                               ; preds = %88, %83
  %90 = bitcast %"class.CFWL_Widget::ScopedUpdateLock"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #5
  %91 = getelementptr inbounds %"class.CFWL_Widget::ScopedUpdateLock", %"class.CFWL_Widget::ScopedUpdateLock"* %2, i64 0, i32 0, i32 0
  store %class.CFWL_Widget* inttoptr (i64 -6148914691236517206 to %class.CFWL_Widget*), %class.CFWL_Widget** %91, align 8
  call void @_ZN11CFWL_Widget16ScopedUpdateLockC1EPS_(%"class.CFWL_Widget::ScopedUpdateLock"* nonnull %2, %class.CFWL_Widget* %26) #5
  call void @_ZN18CXFA_FFCheckButton20UpdateWidgetPropertyEv(%class.CXFA_FFCheckButton* %0)
  %92 = load %class.CXFA_Node*, %class.CXFA_Node** %85, align 8
  %93 = call zeroext i8 @_ZN9CXFA_Node13GetCheckStateEv(%class.CXFA_Node* %92) #5
  %94 = icmp eq i8 %93, 2
  br i1 %94, label %95, label %101

95:                                               ; preds = %89
  %96 = call %class.CFWL_Widget* @_ZN12CXFA_FFField15GetNormalWidgetEv(%class.CXFA_FFField* %25) #5
  %97 = bitcast %class.CFWL_Widget* %96 to void (%class.CFWL_Widget*, i32)***
  %98 = load void (%class.CFWL_Widget*, i32)**, void (%class.CFWL_Widget*, i32)*** %97, align 8
  %99 = getelementptr inbounds void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %98, i64 13
  %100 = load void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %99, align 8
  call void %100(%class.CFWL_Widget* %96, i32 512) #5
  br label %112

101:                                              ; preds = %89
  %102 = icmp eq i8 %93, 0
  %103 = call %class.CFWL_Widget* @_ZN12CXFA_FFField15GetNormalWidgetEv(%class.CXFA_FFField* %25) #5
  %104 = bitcast %class.CFWL_Widget* %103 to void (%class.CFWL_Widget*, i32)***
  %105 = load void (%class.CFWL_Widget*, i32)**, void (%class.CFWL_Widget*, i32)*** %104, align 8
  br i1 %102, label %106, label %109

106:                                              ; preds = %101
  %107 = getelementptr inbounds void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %105, i64 13
  %108 = load void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %107, align 8
  call void %108(%class.CFWL_Widget* %103, i32 256) #5
  br label %112

109:                                              ; preds = %101
  %110 = getelementptr inbounds void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %105, i64 14
  %111 = load void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %110, align 8
  call void %111(%class.CFWL_Widget* %103, i32 256) #5
  br label %112

112:                                              ; preds = %95, %106, %109
  call void @_ZN11CFWL_Widget16ScopedUpdateLockD1Ev(%"class.CFWL_Widget::ScopedUpdateLock"* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #5
  %113 = call zeroext i1 @_ZN12CXFA_FFField10LoadWidgetEv(%class.CXFA_FFField* %25) #5
  ret i1 %113
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %class.CFWL_App* @_ZNK13CXFA_FFWidget9GetFWLAppEv(%class.CXFA_FFWidget*) local_unnamed_addr #1

declare %"class.cppgc::AllocationHandle"* @_ZN5cppgc4Heap19GetAllocationHandleEv(%"class.cppgc::Heap"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN12CXFA_FFField15SetNormalWidgetEP11CFWL_Widget(%class.CXFA_FFField*, %class.CFWL_Widget*) local_unnamed_addr #1

declare void @_ZN15CFWL_NoteDriver19RegisterEventTargetEP11CFWL_WidgetS1_(%class.CFWL_NoteDriver*, %class.CFWL_Widget*, %class.CFWL_Widget*) local_unnamed_addr #1

declare zeroext i1 @_ZN9CXFA_Node13IsRadioButtonEv(%class.CXFA_Node*) local_unnamed_addr #1

declare void @_ZN11CFWL_Widget14ModifyStylesExEjj(%class.CFWL_Widget*, i32, i32) unnamed_addr #1

declare void @_ZN11CFWL_Widget16ScopedUpdateLockC1EPS_(%"class.CFWL_Widget::ScopedUpdateLock"*, %class.CFWL_Widget*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CXFA_FFCheckButton20UpdateWidgetPropertyEv(%class.CXFA_FFCheckButton*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0
  %3 = tail call %class.CFWL_Widget* @_ZN12CXFA_FFField15GetNormalWidgetEv(%class.CXFA_FFField* %2) #5
  %4 = icmp eq %class.CFWL_Widget* %3, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.CFWL_Widget* %3 to %class.CFWL_CheckBox*
  %7 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 0, i32 4
  %8 = bitcast %"class.cppgc::internal::BasicMember.2"* %7 to %class.CXFA_Node**
  %9 = load %class.CXFA_Node*, %class.CXFA_Node** %8, align 8
  %10 = tail call float @_ZN9CXFA_Node18GetCheckButtonSizeEv(%class.CXFA_Node* %9) #5
  tail call void @_ZN13CFWL_CheckBox10SetBoxSizeEf(%class.CFWL_CheckBox* nonnull %6, float %10) #5
  %11 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 2
  %12 = bitcast %"class.cppgc::internal::BasicMember.5"* %11 to %class.CXFA_CheckButton**
  %13 = load %class.CXFA_CheckButton*, %class.CXFA_CheckButton** %12, align 8
  %14 = tail call zeroext i16 @_ZN16CXFA_CheckButton7GetMarkEv(%class.CXFA_CheckButton* %13) #5
  switch i16 %14, label %20 [
    i16 198, label %15
    i16 138, label %16
    i16 10, label %24
    i16 131, label %17
    i16 245, label %18
    i16 176, label %19
  ]

15:                                               ; preds = %5
  br label %24

16:                                               ; preds = %5
  br label %24

17:                                               ; preds = %5
  br label %24

18:                                               ; preds = %5
  br label %24

19:                                               ; preds = %5
  br label %24

20:                                               ; preds = %5
  %21 = load %class.CXFA_CheckButton*, %class.CXFA_CheckButton** %12, align 8
  %22 = tail call zeroext i1 @_ZN16CXFA_CheckButton7IsRoundEv(%class.CXFA_CheckButton* %21) #5
  %23 = select i1 %22, i32 1024, i32 2048
  br label %24

24:                                               ; preds = %20, %19, %18, %17, %5, %16, %15
  %25 = phi i32 [ 5120, %19 ], [ 4096, %18 ], [ 3072, %17 ], [ 2048, %5 ], [ 1024, %16 ], [ 0, %15 ], [ %23, %20 ]
  %26 = load %class.CXFA_CheckButton*, %class.CXFA_CheckButton** %12, align 8
  %27 = tail call zeroext i1 @_ZN16CXFA_CheckButton14IsAllowNeutralEv(%class.CXFA_CheckButton* %26) #5
  %28 = or i32 %25, 64
  %29 = select i1 %27, i32 %28, i32 %25
  tail call void @_ZN11CFWL_Widget14ModifyStylesExEjj(%class.CFWL_Widget* nonnull %3, i32 %29, i32 7232) #5
  br label %30

30:                                               ; preds = %1, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CXFA_FFCheckButton16SetFWLCheckStateE14XFA_CheckState(%class.CXFA_FFCheckButton*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i8 %1, 2
  br i1 %3, label %4, label %11

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0
  %6 = tail call %class.CFWL_Widget* @_ZN12CXFA_FFField15GetNormalWidgetEv(%class.CXFA_FFField* %5) #5
  %7 = bitcast %class.CFWL_Widget* %6 to void (%class.CFWL_Widget*, i32)***
  %8 = load void (%class.CFWL_Widget*, i32)**, void (%class.CFWL_Widget*, i32)*** %7, align 8
  %9 = getelementptr inbounds void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %8, i64 13
  %10 = load void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %9, align 8
  tail call void %10(%class.CFWL_Widget* %6, i32 512) #5
  br label %23

11:                                               ; preds = %2
  %12 = icmp eq i8 %1, 0
  %13 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0
  %14 = tail call %class.CFWL_Widget* @_ZN12CXFA_FFField15GetNormalWidgetEv(%class.CXFA_FFField* %13) #5
  %15 = bitcast %class.CFWL_Widget* %14 to void (%class.CFWL_Widget*, i32)***
  %16 = load void (%class.CFWL_Widget*, i32)**, void (%class.CFWL_Widget*, i32)*** %15, align 8
  br i1 %12, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %16, i64 13
  %19 = load void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %18, align 8
  tail call void %19(%class.CFWL_Widget* %14, i32 256) #5
  br label %23

20:                                               ; preds = %11
  %21 = getelementptr inbounds void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %16, i64 14
  %22 = load void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %21, align 8
  tail call void %22(%class.CFWL_Widget* %14, i32 256) #5
  br label %23

23:                                               ; preds = %17, %20, %4
  ret void
}

declare zeroext i8 @_ZN9CXFA_Node13GetCheckStateEv(%class.CXFA_Node*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN11CFWL_Widget16ScopedUpdateLockD1Ev(%"class.CFWL_Widget::ScopedUpdateLock"*) unnamed_addr #2

declare zeroext i1 @_ZN12CXFA_FFField10LoadWidgetEv(%class.CXFA_FFField*) unnamed_addr #1

declare %class.CFWL_Widget* @_ZN12CXFA_FFField15GetNormalWidgetEv(%class.CXFA_FFField*) local_unnamed_addr #1

declare void @_ZN13CFWL_CheckBox10SetBoxSizeEf(%class.CFWL_CheckBox*, float) local_unnamed_addr #1

declare float @_ZN9CXFA_Node18GetCheckButtonSizeEv(%class.CXFA_Node*) local_unnamed_addr #1

declare zeroext i16 @_ZN16CXFA_CheckButton7GetMarkEv(%class.CXFA_CheckButton*) local_unnamed_addr #1

declare zeroext i1 @_ZN16CXFA_CheckButton7IsRoundEv(%class.CXFA_CheckButton*) local_unnamed_addr #1

declare zeroext i1 @_ZN16CXFA_CheckButton14IsAllowNeutralEv(%class.CXFA_CheckButton*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CXFA_FFCheckButton13PerformLayoutEv(%class.CXFA_FFCheckButton*) unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = bitcast { <2 x float>, <2 x float> }* %2 to %class.CFX_RectF*
  %4 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 0
  %5 = tail call zeroext i1 @_ZN13CXFA_FFWidget13PerformLayoutEv(%class.CXFA_FFWidget* %4) #5
  %6 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.cppgc::internal::BasicMember.2"* %6 to %class.CXFA_Node**
  %8 = load %class.CXFA_Node*, %class.CXFA_Node** %7, align 8
  %9 = tail call float @_ZN9CXFA_Node18GetCheckButtonSizeEv(%class.CXFA_Node* %8) #5
  %10 = load %class.CXFA_Node*, %class.CXFA_Node** %7, align 8
  %11 = tail call %class.CXFA_Margin* @_ZNK9CXFA_Node17GetMarginIfExistsEv(%class.CXFA_Node* %10) #5
  %12 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #5
  %13 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1, i64 0
  %14 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 0, i32 3
  %15 = tail call { <2 x float>, <2 x float> } @_ZN13CXFA_FFWidget20GetRectWithoutRotateEv(%class.CXFA_FFWidget* %4) #5
  %16 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  %17 = extractvalue { <2 x float>, <2 x float> } %15, 0
  store <2 x float> %17, <2 x float>* %16, align 8
  %18 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  %19 = extractvalue { <2 x float>, <2 x float> } %15, 1
  store <2 x float> %19, <2 x float>* %18, align 8
  call void @_Z21XFA_RectWithoutMarginP9CFX_RectFPK11CXFA_Margin(%class.CFX_RectF* nonnull %3, %class.CXFA_Margin* %11) #5
  %20 = load %class.CXFA_Node*, %class.CXFA_Node** %7, align 8
  %21 = call %class.CXFA_Caption* @_ZNK9CXFA_Node18GetCaptionIfExistsEv(%class.CXFA_Node* %20) #5
  %22 = icmp ne %class.CXFA_Caption* %21, null
  br i1 %22, label %23, label %38

23:                                               ; preds = %1
  %24 = call zeroext i1 @_ZN12CXFA_Caption9IsVisibleEv(%class.CXFA_Caption* nonnull %21) #5
  br i1 %24, label %25, label %38

25:                                               ; preds = %23
  %26 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 3
  %27 = bitcast %class.CFX_RectF* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* nonnull align 8 %12, i64 16, i1 false)
  %28 = call zeroext i16 @_ZN12CXFA_Caption16GetPlacementTypeEv(%class.CXFA_Caption* nonnull %21) #5
  %29 = call float @_ZNK12CXFA_Caption10GetReserveEv(%class.CXFA_Caption* nonnull %21) #5
  %30 = fcmp ugt float %29, 0.000000e+00
  br i1 %30, label %38, label %31

31:                                               ; preds = %25
  switch i16 %28, label %35 [
    i16 85, label %32
    i16 33, label %32
  ]

32:                                               ; preds = %31, %31
  %33 = load float, float* %14, align 4
  %34 = fsub float %33, %9
  br label %38

35:                                               ; preds = %31
  %36 = load float, float* %13, align 8
  %37 = fsub float %36, %9
  br label %38

38:                                               ; preds = %25, %35, %32, %23, %1
  %39 = phi i16 [ %28, %32 ], [ %28, %35 ], [ %28, %25 ], [ 165, %23 ], [ 165, %1 ]
  %40 = phi float [ %34, %32 ], [ %37, %35 ], [ %29, %25 ], [ 0.000000e+00, %23 ], [ 0.000000e+00, %1 ]
  %41 = load %class.CXFA_Node*, %class.CXFA_Node** %7, align 8
  %42 = call %class.CXFA_Para* @_ZNK9CXFA_Node15GetParaIfExistsEv(%class.CXFA_Node* %41) #5
  %43 = icmp eq %class.CXFA_Para* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %38
  %45 = call zeroext i16 @_ZN9CXFA_Para18GetHorizontalAlignEv(%class.CXFA_Para* nonnull %42) #5
  %46 = call zeroext i16 @_ZN9CXFA_Para16GetVerticalAlignEv(%class.CXFA_Para* nonnull %42) #5
  br label %47

47:                                               ; preds = %38, %44
  %48 = phi i16 [ %45, %44 ], [ 252, %38 ]
  %49 = phi i16 [ %46, %44 ], [ 33, %38 ]
  %50 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0
  %51 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 2
  %52 = bitcast %class.CFX_RectF* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* nonnull align 8 %12, i64 16, i1 false)
  br i1 %22, label %53, label %55

53:                                               ; preds = %47
  %54 = call %class.CXFA_Margin* @_ZN12CXFA_Caption17GetMarginIfExistsEv(%class.CXFA_Caption* nonnull %21) #5
  br label %55

55:                                               ; preds = %47, %53
  %56 = phi %class.CXFA_Margin* [ %54, %53 ], [ null, %47 ]
  switch i16 %39, label %137 [
    i16 252, label %57
    i16 33, label %82
    i16 54, label %91
    i16 85, label %117
    i16 202, label %128
  ]

57:                                               ; preds = %55
  %58 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 3, i32 2
  store float %40, float* %58, align 8
  %59 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 3
  call void @_Z21XFA_RectWithoutMarginP9CFX_RectFPK11CXFA_Margin(%class.CFX_RectF* %59, %class.CXFA_Margin* %56) #5
  %60 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 3, i32 3
  %61 = load float, float* %60, align 4
  %62 = fcmp olt float %61, 0.000000e+00
  br i1 %62, label %63, label %67

63:                                               ; preds = %57
  %64 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 3, i32 1
  %65 = load float, float* %64, align 4
  %66 = fadd float %61, %65
  store float %66, float* %64, align 4
  br label %67

67:                                               ; preds = %63, %57
  %68 = load float, float* %58, align 8
  %69 = fcmp olt float %68, 0.000000e+00
  br i1 %69, label %70, label %75

70:                                               ; preds = %67
  %71 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %59, i64 0, i32 0
  %72 = load float, float* %71, align 8
  %73 = fadd float %68, %72
  store float %73, float* %71, align 8
  %74 = fsub float -0.000000e+00, %68
  store float %74, float* %58, align 8
  br label %75

75:                                               ; preds = %67, %70
  %76 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 2, i32 2
  %77 = load float, float* %76, align 8
  %78 = fsub float %77, %40
  store float %78, float* %76, align 8
  %79 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %51, i64 0, i32 0
  %80 = load float, float* %79, align 8
  %81 = fadd float %40, %80
  store float %81, float* %79, align 8
  br label %128

82:                                               ; preds = %55
  %83 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 3
  %84 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 3, i32 3
  store float %40, float* %84, align 4
  call void @_Z21XFA_RectWithoutMarginP9CFX_RectFPK11CXFA_Margin(%class.CFX_RectF* %83, %class.CXFA_Margin* %56) #5
  %85 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 2, i32 3
  %86 = load float, float* %85, align 4
  %87 = fsub float %86, %40
  store float %87, float* %85, align 4
  %88 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 2, i32 1
  %89 = load float, float* %88, align 4
  %90 = fadd float %40, %89
  store float %90, float* %88, align 4
  br label %128

91:                                               ; preds = %55
  %92 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 3
  %93 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %92, i64 0, i32 0
  %94 = load float, float* %93, align 4
  %95 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 3, i32 2
  %96 = load float, float* %95, align 4
  %97 = fadd float %94, %96
  %98 = fsub float %97, %40
  store float %98, float* %93, align 8
  store float %40, float* %95, align 8
  call void @_Z21XFA_RectWithoutMarginP9CFX_RectFPK11CXFA_Margin(%class.CFX_RectF* %92, %class.CXFA_Margin* %56) #5
  %99 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 3, i32 3
  %100 = load float, float* %99, align 4
  %101 = fcmp olt float %100, 0.000000e+00
  br i1 %101, label %102, label %106

102:                                              ; preds = %91
  %103 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 3, i32 1
  %104 = load float, float* %103, align 4
  %105 = fadd float %100, %104
  store float %105, float* %103, align 4
  br label %106

106:                                              ; preds = %102, %91
  %107 = load float, float* %95, align 8
  %108 = fcmp olt float %107, 0.000000e+00
  br i1 %108, label %109, label %113

109:                                              ; preds = %106
  %110 = load float, float* %93, align 8
  %111 = fadd float %107, %110
  store float %111, float* %93, align 8
  %112 = fsub float -0.000000e+00, %107
  store float %112, float* %95, align 8
  br label %113

113:                                              ; preds = %106, %109
  %114 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 2, i32 2
  %115 = load float, float* %114, align 8
  %116 = fsub float %115, %40
  store float %116, float* %114, align 8
  br label %128

117:                                              ; preds = %55
  %118 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 3
  %119 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 3, i32 1
  %120 = load float, float* %119, align 4
  %121 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 3, i32 3
  %122 = load float, float* %121, align 4
  %123 = fadd float %120, %122
  %124 = fsub float %123, %40
  store float %124, float* %119, align 4
  store float %40, float* %121, align 4
  call void @_Z21XFA_RectWithoutMarginP9CFX_RectFPK11CXFA_Margin(%class.CFX_RectF* %118, %class.CXFA_Margin* %56) #5
  %125 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 2, i32 3
  %126 = load float, float* %125, align 4
  %127 = fsub float %126, %40
  store float %127, float* %125, align 4
  br label %128

128:                                              ; preds = %55, %117, %113, %82, %75
  switch i16 %48, label %144 [
    i16 129, label %129
    i16 54, label %137
  ]

129:                                              ; preds = %128
  %130 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 2, i32 2
  %131 = load float, float* %130, align 8
  %132 = fsub float %131, %9
  %133 = fmul float %132, 5.000000e-01
  %134 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %51, i64 0, i32 0
  %135 = load float, float* %134, align 8
  %136 = fadd float %135, %133
  store float %136, float* %134, align 8
  br label %144

137:                                              ; preds = %55, %128
  %138 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %51, i64 0, i32 0
  %139 = load float, float* %138, align 4
  %140 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 2, i32 2
  %141 = load float, float* %140, align 4
  %142 = fadd float %139, %141
  %143 = fsub float %142, %9
  store float %143, float* %138, align 8
  br label %144

144:                                              ; preds = %128, %137, %129
  switch i16 %49, label %160 [
    i16 162, label %145
    i16 85, label %153
  ]

145:                                              ; preds = %144
  %146 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 2, i32 3
  %147 = load float, float* %146, align 4
  %148 = fsub float %147, %9
  %149 = fmul float %148, 5.000000e-01
  %150 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 2, i32 1
  %151 = load float, float* %150, align 4
  %152 = fadd float %151, %149
  store float %152, float* %150, align 4
  br label %160

153:                                              ; preds = %144
  %154 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 2, i32 1
  %155 = load float, float* %154, align 4
  %156 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 2, i32 3
  %157 = load float, float* %156, align 4
  %158 = fadd float %155, %157
  %159 = fsub float %158, %9
  store float %159, float* %154, align 4
  br label %160

160:                                              ; preds = %144, %153, %145
  %161 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 2, i32 2
  store float %9, float* %161, align 8
  %162 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 2, i32 3
  store float %9, float* %162, align 4
  call void @_ZN18CXFA_FFCheckButton11AddUIMarginE18XFA_AttributeValue(%class.CXFA_FFCheckButton* %0, i16 zeroext %39)
  %163 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 3
  %164 = bitcast %class.CFX_RectF* %163 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %164, i8* align 4 %52, i64 16, i1 false)
  %165 = load %class.CXFA_Node*, %class.CXFA_Node** %7, align 8
  %166 = call %class.CXFA_Border* @_ZN9CXFA_Node11GetUIBorderEv(%class.CXFA_Node* %165) #5
  %167 = icmp eq %class.CXFA_Border* %166, null
  br i1 %167, label %171, label %168

168:                                              ; preds = %160
  %169 = getelementptr inbounds %class.CXFA_Border, %class.CXFA_Border* %166, i64 0, i32 0, i32 0, i32 0
  %170 = call %class.CXFA_Margin* @_ZNK9CXFA_Node17GetMarginIfExistsEv(%class.CXFA_Node* %169) #5
  call void @_Z21XFA_RectWithoutMarginP9CFX_RectFPK11CXFA_Margin(%class.CFX_RectF* %51, %class.CXFA_Margin* %170) #5
  br label %171

171:                                              ; preds = %160, %168
  %172 = load float, float* %161, align 4
  %173 = fcmp olt float %172, 0.000000e+00
  br i1 %173, label %174, label %179

174:                                              ; preds = %171
  %175 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %51, i64 0, i32 0
  %176 = load float, float* %175, align 4
  %177 = fadd float %172, %176
  store float %177, float* %175, align 4
  %178 = fsub float -0.000000e+00, %172
  store float %178, float* %161, align 4
  br label %179

179:                                              ; preds = %174, %171
  %180 = load float, float* %162, align 4
  %181 = fcmp olt float %180, 0.000000e+00
  br i1 %181, label %182, label %187

182:                                              ; preds = %179
  %183 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 2, i32 1
  %184 = load float, float* %183, align 4
  %185 = fadd float %180, %184
  store float %185, float* %183, align 4
  %186 = fsub float -0.000000e+00, %180
  store float %186, float* %162, align 4
  br label %187

187:                                              ; preds = %179, %182
  call void @_ZN12CXFA_FFField13LayoutCaptionEv(%class.CXFA_FFField* %50) #5
  call void @_ZN12CXFA_FFField10SetFWLRectEv(%class.CXFA_FFField* %50) #5
  %188 = call %class.CFWL_Widget* @_ZN12CXFA_FFField15GetNormalWidgetEv(%class.CXFA_FFField* %50) #5
  %189 = icmp eq %class.CFWL_Widget* %188, null
  br i1 %189, label %196, label %190

190:                                              ; preds = %187
  %191 = call %class.CFWL_Widget* @_ZN12CXFA_FFField15GetNormalWidgetEv(%class.CXFA_FFField* %50) #5
  %192 = bitcast %class.CFWL_Widget* %191 to void (%class.CFWL_Widget*)***
  %193 = load void (%class.CFWL_Widget*)**, void (%class.CFWL_Widget*)*** %192, align 8
  %194 = getelementptr inbounds void (%class.CFWL_Widget*)*, void (%class.CFWL_Widget*)** %193, i64 15
  %195 = load void (%class.CFWL_Widget*)*, void (%class.CFWL_Widget*)** %194, align 8
  call void %195(%class.CFWL_Widget* %191) #5
  br label %196

196:                                              ; preds = %187, %190
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #5
  ret i1 true
}

declare zeroext i1 @_ZN13CXFA_FFWidget13PerformLayoutEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare %class.CXFA_Margin* @_ZNK9CXFA_Node17GetMarginIfExistsEv(%class.CXFA_Node*) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN13CXFA_FFWidget20GetRectWithoutRotateEv(%class.CXFA_FFWidget*) local_unnamed_addr #1

declare void @_Z21XFA_RectWithoutMarginP9CFX_RectFPK11CXFA_Margin(%class.CFX_RectF*, %class.CXFA_Margin*) local_unnamed_addr #1

declare %class.CXFA_Caption* @_ZNK9CXFA_Node18GetCaptionIfExistsEv(%class.CXFA_Node*) local_unnamed_addr #1

declare zeroext i1 @_ZN12CXFA_Caption9IsVisibleEv(%class.CXFA_Caption*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare zeroext i16 @_ZN12CXFA_Caption16GetPlacementTypeEv(%class.CXFA_Caption*) local_unnamed_addr #1

declare float @_ZNK12CXFA_Caption10GetReserveEv(%class.CXFA_Caption*) local_unnamed_addr #1

declare %class.CXFA_Para* @_ZNK9CXFA_Node15GetParaIfExistsEv(%class.CXFA_Node*) local_unnamed_addr #1

declare zeroext i16 @_ZN9CXFA_Para18GetHorizontalAlignEv(%class.CXFA_Para*) local_unnamed_addr #1

declare zeroext i16 @_ZN9CXFA_Para16GetVerticalAlignEv(%class.CXFA_Para*) local_unnamed_addr #1

declare %class.CXFA_Margin* @_ZN12CXFA_Caption17GetMarginIfExistsEv(%class.CXFA_Caption*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CXFA_FFCheckButton21CapLeftRightPlacementEPK11CXFA_Margin(%class.CXFA_FFCheckButton*, %class.CXFA_Margin*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 3
  tail call void @_Z21XFA_RectWithoutMarginP9CFX_RectFPK11CXFA_Margin(%class.CFX_RectF* %3, %class.CXFA_Margin* %1) #5
  %4 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 3, i32 3
  %5 = load float, float* %4, align 4
  %6 = fcmp olt float %5, 0.000000e+00
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 3, i32 1
  %9 = load float, float* %8, align 4
  %10 = fadd float %5, %9
  store float %10, float* %8, align 4
  br label %11

11:                                               ; preds = %7, %2
  %12 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 3, i32 2
  %13 = load float, float* %12, align 8
  %14 = fcmp olt float %13, 0.000000e+00
  br i1 %14, label %15, label %20

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 0, i32 0
  %17 = load float, float* %16, align 8
  %18 = fadd float %13, %17
  store float %18, float* %16, align 8
  %19 = fsub float -0.000000e+00, %13
  store float %19, float* %12, align 8
  br label %20

20:                                               ; preds = %15, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CXFA_FFCheckButton11AddUIMarginE18XFA_AttributeValue(%class.CXFA_FFCheckButton* nocapture, i16 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.cppgc::internal::BasicMember.2"* %3 to %class.CXFA_Node**
  %5 = load %class.CXFA_Node*, %class.CXFA_Node** %4, align 8
  %6 = tail call { <2 x float>, <2 x float> } @_ZN9CXFA_Node11GetUIMarginEv(%class.CXFA_Node* %5) #5
  %7 = extractvalue { <2 x float>, <2 x float> } %6, 0
  %8 = extractvalue { <2 x float>, <2 x float> } %6, 1
  %9 = extractelement <2 x float> %7, i32 1
  %10 = fmul float %9, 5.000000e-01
  %11 = extractelement <2 x float> %8, i32 1
  %12 = fmul float %11, 5.000000e-01
  %13 = fsub float %10, %12
  %14 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 2, i32 1
  %16 = load float, float* %15, align 4
  %17 = fsub float %16, %13
  store float %17, float* %15, align 4
  %18 = extractelement <2 x float> %7, i32 0
  %19 = extractelement <2 x float> %8, i32 0
  %20 = fadd float %18, %19
  %21 = fadd float %9, %11
  %22 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 2, i32 2
  %23 = load float, float* %22, align 8
  %24 = fcmp olt float %23, %20
  br i1 %24, label %25, label %40

25:                                               ; preds = %2
  %26 = fsub float %20, %23
  switch i16 %1, label %32 [
    i16 252, label %27
    i16 54, label %27
  ]

27:                                               ; preds = %25, %25
  %28 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %14, i64 0, i32 0
  %29 = load float, float* %28, align 8
  %30 = fsub float %29, %26
  store float %30, float* %28, align 8
  %31 = fmul float %26, 2.000000e+00
  br label %37

32:                                               ; preds = %25
  %33 = fmul float %26, 2.000000e+00
  %34 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %14, i64 0, i32 0
  %35 = load float, float* %34, align 8
  %36 = fsub float %35, %33
  store float %36, float* %34, align 8
  br label %37

37:                                               ; preds = %32, %27
  %38 = phi float [ %33, %32 ], [ %31, %27 ]
  %39 = fadd float %23, %38
  store float %39, float* %22, align 8
  br label %40

40:                                               ; preds = %37, %2
  %41 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 2, i32 3
  %42 = load float, float* %41, align 4
  %43 = fcmp olt float %42, %21
  br i1 %43, label %44, label %55

44:                                               ; preds = %40
  %45 = icmp eq i16 %1, 54
  %46 = fsub float %21, %42
  br i1 %45, label %47, label %51

47:                                               ; preds = %44
  %48 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %14, i64 0, i32 0
  %49 = load float, float* %48, align 8
  %50 = fsub float %49, %46
  store float %50, float* %48, align 8
  br label %51

51:                                               ; preds = %44, %47
  %52 = fsub float %17, %46
  store float %52, float* %15, align 4
  %53 = fmul float %46, 2.000000e+00
  %54 = fadd float %42, %53
  store float %54, float* %41, align 4
  br label %55

55:                                               ; preds = %51, %40
  ret void
}

declare %class.CXFA_Border* @_ZN9CXFA_Node11GetUIBorderEv(%class.CXFA_Node*) local_unnamed_addr #1

declare void @_ZN12CXFA_FFField13LayoutCaptionEv(%class.CXFA_FFField*) local_unnamed_addr #1

declare void @_ZN12CXFA_FFField10SetFWLRectEv(%class.CXFA_FFField*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN9CXFA_Node11GetUIMarginEv(%class.CXFA_Node*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CXFA_FFCheckButton12RenderWidgetEP16CFGAS_GEGraphicsRK10CFX_MatrixN13CXFA_FFWidget15HighlightOptionE(%class.CXFA_FFCheckButton*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* nocapture readonly dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %5 = alloca %class.CFX_Matrix, align 16
  %6 = alloca %class.CFX_Matrix, align 16
  %7 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 0
  %8 = tail call zeroext i1 @_ZNK13CXFA_FFWidget16HasVisibleStatusEv(%class.CXFA_FFWidget* %7) #5
  br i1 %8, label %9, label %114

9:                                                ; preds = %4
  %10 = bitcast %class.CFX_Matrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #5
  %11 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 0
  %12 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 1
  %13 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 2
  %14 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 3
  %15 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 4
  %16 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 5
  %17 = bitcast %class.CFX_Matrix* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -1, i64 24, i1 false)
  call void @_ZN13CXFA_FFWidget15GetRotateMatrixEv(%class.CFX_Matrix* nonnull sret %5, %class.CXFA_FFWidget* %7) #5
  %18 = load float, float* %11, align 16, !noalias !4
  %19 = load float, float* %12, align 4, !noalias !4
  %20 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 2
  %21 = bitcast %class.CFX_Matrix* %2 to <2 x float>*
  %22 = load <2 x float>, <2 x float>* %21, align 4, !noalias !4
  %23 = shufflevector <2 x float> %22, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %24 = bitcast float* %20 to <2 x float>*
  %25 = load <2 x float>, <2 x float>* %24, align 4, !noalias !4
  %26 = shufflevector <2 x float> %25, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %27 = load float, float* %13, align 8, !noalias !4
  %28 = load float, float* %14, align 4, !noalias !4
  %29 = insertelement <4 x float> undef, float %18, i32 0
  %30 = shufflevector <4 x float> %29, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %31 = extractelement <2 x float> %22, i32 0
  %32 = extractelement <2 x float> %22, i32 1
  %33 = shufflevector <4 x float> %30, <4 x float> %23, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %34 = insertelement <4 x float> undef, float %31, i32 0
  %35 = insertelement <4 x float> %34, float %32, i32 1
  %36 = insertelement <4 x float> %35, float %27, i32 2
  %37 = insertelement <4 x float> %36, float %27, i32 3
  %38 = fmul <4 x float> %33, %37
  %39 = insertelement <4 x float> undef, float %19, i32 0
  %40 = shufflevector <4 x float> %39, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %41 = extractelement <2 x float> %25, i32 0
  %42 = extractelement <2 x float> %25, i32 1
  %43 = shufflevector <4 x float> %40, <4 x float> %26, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %44 = insertelement <4 x float> undef, float %41, i32 0
  %45 = insertelement <4 x float> %44, float %42, i32 1
  %46 = insertelement <4 x float> %45, float %28, i32 2
  %47 = insertelement <4 x float> %46, float %28, i32 3
  %48 = fmul <4 x float> %43, %47
  %49 = fadd <4 x float> %38, %48
  %50 = load float, float* %15, align 16, !noalias !4
  %51 = fmul float %31, %50
  %52 = load float, float* %16, align 4, !noalias !4
  %53 = fmul float %41, %52
  %54 = fadd float %51, %53
  %55 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 4
  %56 = load float, float* %55, align 4, !noalias !4
  %57 = fadd float %56, %54
  %58 = fmul float %32, %50
  %59 = fmul float %42, %52
  %60 = fadd float %58, %59
  %61 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 5
  %62 = load float, float* %61, align 4, !noalias !4
  %63 = fadd float %60, %62
  %64 = bitcast %class.CFX_Matrix* %5 to <4 x float>*
  store <4 x float> %49, <4 x float>* %64, align 16
  store float %57, float* %15, align 16
  store float %63, float* %16, align 4
  call void @_ZN13CXFA_FFWidget12RenderWidgetEP16CFGAS_GEGraphicsRK10CFX_MatrixNS_15HighlightOptionE(%class.CXFA_FFWidget* %7, %class.CFGAS_GEGraphics* %1, %class.CFX_Matrix* nonnull dereferenceable(24) %5, i32 %3) #5
  %65 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 0, i32 4
  %66 = bitcast %"class.cppgc::internal::BasicMember.2"* %65 to %class.CXFA_Node**
  %67 = load %class.CXFA_Node*, %class.CXFA_Node** %66, align 8
  %68 = call %class.CXFA_Border* @_ZN9CXFA_Node11GetUIBorderEv(%class.CXFA_Node* %67) #5
  %69 = getelementptr inbounds %class.CXFA_Border, %class.CXFA_Border* %68, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0
  %71 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 2
  %72 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 2
  %73 = bitcast %"class.cppgc::internal::BasicMember.5"* %72 to %class.CXFA_CheckButton**
  %74 = load %class.CXFA_CheckButton*, %class.CXFA_CheckButton** %73, align 8
  %75 = call zeroext i1 @_ZN16CXFA_CheckButton7IsRoundEv(%class.CXFA_CheckButton* %74) #5
  call void @_ZN13CXFA_FFWidget18DrawBorderWithFlagEP16CFGAS_GEGraphicsP8CXFA_BoxRK9CFX_RectFRK10CFX_Matrixb(%class.CXFA_FFWidget* %7, %class.CFGAS_GEGraphics* %1, %class.CXFA_Box* %69, %class.CFX_RectF* dereferenceable(16) %71, %class.CFX_Matrix* nonnull dereferenceable(24) %5, i1 zeroext %75) #5
  call void @_ZN12CXFA_FFField13RenderCaptionEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CXFA_FFField* %70, %class.CFGAS_GEGraphics* %1, %class.CFX_Matrix* nonnull dereferenceable(24) %5) #5
  %76 = load %class.CXFA_CheckButton*, %class.CXFA_CheckButton** %73, align 8
  %77 = call zeroext i1 @_ZN16CXFA_CheckButton7IsRoundEv(%class.CXFA_CheckButton* %76) #5
  %78 = zext i1 %77 to i32
  call void @_ZN12CXFA_FFField13DrawHighlightEP16CFGAS_GEGraphicsRK10CFX_MatrixN13CXFA_FFWidget15HighlightOptionENS_11ShapeOptionE(%class.CXFA_FFField* %70, %class.CFGAS_GEGraphics* %1, %class.CFX_Matrix* nonnull dereferenceable(24) %5, i32 %3, i32 %78) #5
  %79 = bitcast %class.CFX_Matrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #5
  %80 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %6, i64 0, i32 4
  %81 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %6, i64 0, i32 5
  %82 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 3, i32 0
  %83 = load float, float* %82, align 8
  %84 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 3, i32 1
  %85 = load float, float* %84, align 4
  %86 = bitcast %class.CFX_Matrix* %5 to <4 x float>*
  %87 = load <4 x float>, <4 x float>* %86, align 16, !noalias !7
  %88 = extractelement <4 x float> %87, i32 2
  %89 = extractelement <4 x float> %87, i32 3
  %90 = extractelement <4 x float> %87, i32 0
  %91 = extractelement <4 x float> %87, i32 1
  %92 = fmul <4 x float> %87, zeroinitializer
  %93 = shufflevector <4 x float> %92, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %94 = fadd <4 x float> %87, %93
  %95 = fmul float %83, %90
  %96 = fmul float %85, %88
  %97 = fadd float %95, %96
  %98 = load float, float* %15, align 16, !noalias !7
  %99 = fadd float %97, %98
  %100 = fmul float %83, %91
  %101 = fmul float %85, %89
  %102 = fadd float %100, %101
  %103 = load float, float* %16, align 4, !noalias !7
  %104 = fadd float %102, %103
  %105 = bitcast %class.CFX_Matrix* %6 to <4 x float>*
  store <4 x float> %94, <4 x float>* %105, align 16
  store float %99, float* %80, align 16
  store float %104, float* %81, align 4
  %106 = call %class.CXFA_FFApp* @_ZN13CXFA_FFWidget6GetAppEv(%class.CXFA_FFWidget* %7) #5
  %107 = getelementptr inbounds %class.CXFA_FFApp, %class.CXFA_FFApp* %106, i64 0, i32 5
  %108 = bitcast %"class.cppgc::internal::BasicMember.19"* %107 to %class.CFWL_App**
  %109 = load %class.CFWL_App*, %class.CFWL_App** %108, align 8
  %110 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %109, i64 0, i32 1
  %111 = bitcast %"class.cppgc::internal::BasicMember.20"* %110 to %class.CFWL_WidgetMgr**
  %112 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %111, align 8
  %113 = call %class.CFWL_Widget* @_ZN12CXFA_FFField15GetNormalWidgetEv(%class.CXFA_FFField* %70) #5
  call void @_ZN14CFWL_WidgetMgr12OnDrawWidgetEP11CFWL_WidgetP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_WidgetMgr* %112, %class.CFWL_Widget* %113, %class.CFGAS_GEGraphics* %1, %class.CFX_Matrix* nonnull dereferenceable(24) %6) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #5
  br label %114

114:                                              ; preds = %4, %9
  ret void
}

declare zeroext i1 @_ZNK13CXFA_FFWidget16HasVisibleStatusEv(%class.CXFA_FFWidget*) local_unnamed_addr #1

declare void @_ZN13CXFA_FFWidget15GetRotateMatrixEv(%class.CFX_Matrix* sret, %class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget12RenderWidgetEP16CFGAS_GEGraphicsRK10CFX_MatrixNS_15HighlightOptionE(%class.CXFA_FFWidget*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* dereferenceable(24), i32) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget18DrawBorderWithFlagEP16CFGAS_GEGraphicsP8CXFA_BoxRK9CFX_RectFRK10CFX_Matrixb(%class.CXFA_FFWidget*, %class.CFGAS_GEGraphics*, %class.CXFA_Box*, %class.CFX_RectF* dereferenceable(16), %class.CFX_Matrix* dereferenceable(24), i1 zeroext) local_unnamed_addr #1

declare void @_ZN12CXFA_FFField13RenderCaptionEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CXFA_FFField*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN12CXFA_FFField13DrawHighlightEP16CFGAS_GEGraphicsRK10CFX_MatrixN13CXFA_FFWidget15HighlightOptionENS_11ShapeOptionE(%class.CXFA_FFField*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* dereferenceable(24), i32, i32) local_unnamed_addr #1

declare %class.CXFA_FFApp* @_ZN13CXFA_FFWidget6GetAppEv(%class.CXFA_FFWidget*) local_unnamed_addr #1

declare void @_ZN14CFWL_WidgetMgr12OnDrawWidgetEP11CFWL_WidgetP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_WidgetMgr*, %class.CFWL_Widget*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CXFA_FFCheckButton11OnLButtonUpEjRK13CFX_PTemplateIfE(%class.CXFA_FFCheckButton*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_MessageMouse, align 8
  %5 = alloca %class.CFX_PTemplate, align 4
  %6 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0
  %7 = tail call %class.CFWL_Widget* @_ZN12CXFA_FFField15GetNormalWidgetEv(%class.CXFA_FFField* %6) #5
  %8 = icmp eq %class.CFWL_Widget* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 0
  %11 = tail call zeroext i1 @_ZN13CXFA_FFWidget12IsButtonDownEv(%class.CXFA_FFWidget* %10) #5
  br i1 %11, label %12, label %17

12:                                               ; preds = %9
  tail call void @_ZN13CXFA_FFWidget13SetButtonDownEb(%class.CXFA_FFWidget* %10, i1 zeroext false) #5
  %13 = bitcast %class.CFWL_MessageMouse* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 bitcast (<{ { i32 (...)**, i32, [4 x i8], %"class.fxcrt::UnownedPtr.33", %"class.fxcrt::UnownedPtr.33" }, i8, i8, [2 x i8], %class.CFX_PTemplate, [4 x i8] }>* @__const._ZN18CXFA_FFCheckButton11OnLButtonUpEjRK13CFX_PTemplateIfE.msg to i8*), i64 48, i1 false)
  %14 = tail call %class.CFWL_Widget* @_ZN12CXFA_FFField15GetNormalWidgetEv(%class.CXFA_FFField* %6) #5
  %15 = trunc i32 %1 to i8
  call void @_ZN12CXFA_FFField11FWLToClientERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %5, %class.CXFA_FFField* %6, %class.CFX_PTemplate* dereferenceable(8) %2) #5
  call void @_ZN17CFWL_MessageMouseC1EP11CFWL_Widget16FWL_MouseCommandh13CFX_PTemplateIfE(%class.CFWL_MessageMouse* nonnull %4, %class.CFWL_Widget* %14, i8 zeroext 1, i8 zeroext %15, %class.CFX_PTemplate* nonnull %5) #5
  %16 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %4, i64 0, i32 0
  call void @_ZN12CXFA_FFField22SendMessageToFWLWidgetEP12CFWL_Message(%class.CXFA_FFField* %6, %class.CFWL_Message* nonnull %16) #5
  call void @_ZN17CFWL_MessageMouseD1Ev(%class.CFWL_MessageMouse* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #5
  br label %17

17:                                               ; preds = %9, %3, %12
  %18 = phi i1 [ true, %12 ], [ false, %3 ], [ false, %9 ]
  ret i1 %18
}

declare zeroext i1 @_ZN13CXFA_FFWidget12IsButtonDownEv(%class.CXFA_FFWidget*) local_unnamed_addr #1

declare void @_ZN13CXFA_FFWidget13SetButtonDownEb(%class.CXFA_FFWidget*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN12CXFA_FFField11FWLToClientERK13CFX_PTemplateIfE(%class.CFX_PTemplate* sret, %class.CXFA_FFField*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN17CFWL_MessageMouseC1EP11CFWL_Widget16FWL_MouseCommandh13CFX_PTemplateIfE(%class.CFWL_MessageMouse*, %class.CFWL_Widget*, i8 zeroext, i8 zeroext, %class.CFX_PTemplate*) unnamed_addr #1

declare void @_ZN12CXFA_FFField22SendMessageToFWLWidgetEP12CFWL_Message(%class.CXFA_FFField*, %class.CFWL_Message*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN17CFWL_MessageMouseD1Ev(%class.CFWL_MessageMouse*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN18CXFA_FFCheckButton17FWLState2XFAStateEv(%class.CXFA_FFCheckButton*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0
  %3 = tail call %class.CFWL_Widget* @_ZN12CXFA_FFField15GetNormalWidgetEv(%class.CXFA_FFField* %2) #5
  %4 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %3, i64 0, i32 1, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 256
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = and i32 %5, 512
  %10 = icmp eq i32 %9, 0
  %11 = select i1 %10, i8 1, i8 2
  br label %12

12:                                               ; preds = %8, %1
  %13 = phi i8 [ 0, %1 ], [ %11, %8 ]
  ret i8 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CXFA_FFCheckButton10CommitDataEv(%class.CXFA_FFCheckButton*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.cppgc::internal::BasicMember.2"* %2 to %class.CXFA_Node**
  %4 = load %class.CXFA_Node*, %class.CXFA_Node** %3, align 8
  %5 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0
  %6 = tail call %class.CFWL_Widget* @_ZN12CXFA_FFField15GetNormalWidgetEv(%class.CXFA_FFField* %5) #5
  %7 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %6, i64 0, i32 1, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %1
  %12 = and i32 %8, 512
  %13 = icmp eq i32 %12, 0
  %14 = select i1 %13, i8 1, i8 2
  br label %15

15:                                               ; preds = %1, %11
  %16 = phi i8 [ 0, %1 ], [ %14, %11 ]
  tail call void @_ZN9CXFA_Node13SetCheckStateE14XFA_CheckState(%class.CXFA_Node* %4, i8 zeroext %16) #5
  ret i1 true
}

declare void @_ZN9CXFA_Node13SetCheckStateE14XFA_CheckState(%class.CXFA_Node*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CXFA_FFCheckButton13IsDataChangedEv(%class.CXFA_FFCheckButton*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0
  %3 = tail call %class.CFWL_Widget* @_ZN12CXFA_FFField15GetNormalWidgetEv(%class.CXFA_FFField* %2) #5
  %4 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %3, i64 0, i32 1, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 256
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = and i32 %5, 512
  %10 = icmp eq i32 %9, 0
  %11 = select i1 %10, i8 1, i8 2
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i8 [ 0, %1 ], [ %11, %8 ]
  %14 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 0, i32 4
  %15 = bitcast %"class.cppgc::internal::BasicMember.2"* %14 to %class.CXFA_Node**
  %16 = load %class.CXFA_Node*, %class.CXFA_Node** %15, align 8
  %17 = tail call zeroext i8 @_ZN9CXFA_Node13GetCheckStateEv(%class.CXFA_Node* %16) #5
  %18 = icmp ne i8 %17, %13
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CXFA_FFCheckButton13UpdateFWLDataEv(%class.CXFA_FFCheckButton*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0
  %3 = tail call %class.CFWL_Widget* @_ZN12CXFA_FFField15GetNormalWidgetEv(%class.CXFA_FFField* %2) #5
  %4 = icmp eq %class.CFWL_Widget* %3, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.cppgc::internal::BasicMember.2"* %6 to %class.CXFA_Node**
  %8 = load %class.CXFA_Node*, %class.CXFA_Node** %7, align 8
  %9 = tail call zeroext i8 @_ZN9CXFA_Node13GetCheckStateEv(%class.CXFA_Node* %8) #5
  %10 = icmp eq i8 %9, 2
  br i1 %10, label %11, label %17

11:                                               ; preds = %5
  %12 = tail call %class.CFWL_Widget* @_ZN12CXFA_FFField15GetNormalWidgetEv(%class.CXFA_FFField* %2) #5
  %13 = bitcast %class.CFWL_Widget* %12 to void (%class.CFWL_Widget*, i32)***
  %14 = load void (%class.CFWL_Widget*, i32)**, void (%class.CFWL_Widget*, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %14, i64 13
  %16 = load void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %15, align 8
  tail call void %16(%class.CFWL_Widget* %12, i32 512) #5
  br label %28

17:                                               ; preds = %5
  %18 = icmp eq i8 %9, 0
  %19 = tail call %class.CFWL_Widget* @_ZN12CXFA_FFField15GetNormalWidgetEv(%class.CXFA_FFField* %2) #5
  %20 = bitcast %class.CFWL_Widget* %19 to void (%class.CFWL_Widget*, i32)***
  %21 = load void (%class.CFWL_Widget*, i32)**, void (%class.CFWL_Widget*, i32)*** %20, align 8
  br i1 %18, label %22, label %25

22:                                               ; preds = %17
  %23 = getelementptr inbounds void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %21, i64 13
  %24 = load void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %23, align 8
  tail call void %24(%class.CFWL_Widget* %19, i32 256) #5
  br label %28

25:                                               ; preds = %17
  %26 = getelementptr inbounds void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %21, i64 14
  %27 = load void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %26, align 8
  tail call void %27(%class.CFWL_Widget* %19, i32 256) #5
  br label %28

28:                                               ; preds = %11, %22, %25
  %29 = tail call %class.CFWL_Widget* @_ZN12CXFA_FFField15GetNormalWidgetEv(%class.CXFA_FFField* %2) #5
  %30 = bitcast %class.CFWL_Widget* %29 to void (%class.CFWL_Widget*)***
  %31 = load void (%class.CFWL_Widget*)**, void (%class.CFWL_Widget*)*** %30, align 8
  %32 = getelementptr inbounds void (%class.CFWL_Widget*)*, void (%class.CFWL_Widget*)** %31, i64 15
  %33 = load void (%class.CFWL_Widget*)*, void (%class.CFWL_Widget*)** %32, align 8
  tail call void %33(%class.CFWL_Widget* %29) #5
  br label %34

34:                                               ; preds = %1, %28
  %35 = phi i1 [ true, %28 ], [ false, %1 ]
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CXFA_FFCheckButton16OnProcessMessageEP12CFWL_Message(%class.CXFA_FFCheckButton* nocapture readonly, %class.CFWL_Message*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 1
  %4 = bitcast %"class.cppgc::internal::BasicMember.4"* %3 to %class.IFWL_WidgetDelegate**
  %5 = load %class.IFWL_WidgetDelegate*, %class.IFWL_WidgetDelegate** %4, align 8
  %6 = bitcast %class.IFWL_WidgetDelegate* %5 to void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)***
  %7 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)**, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)** %7, i64 3
  %9 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)** %8, align 8
  tail call void %9(%class.IFWL_WidgetDelegate* %5, %class.CFWL_Message* %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N18CXFA_FFCheckButton16OnProcessMessageEP12CFWL_Message(%class.CXFA_FFCheckButton* nocapture readonly, %class.CFWL_Message*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 -1, i32 0, i32 3
  %4 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 6, i32 2
  %5 = bitcast float* %4 to %class.IFWL_WidgetDelegate**
  %6 = load %class.IFWL_WidgetDelegate*, %class.IFWL_WidgetDelegate** %5, align 8
  %7 = bitcast %class.IFWL_WidgetDelegate* %6 to void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)***
  %8 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)**, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)** %8, i64 3
  %10 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Message*)** %9, align 8
  tail call void %10(%class.IFWL_WidgetDelegate* %6, %class.CFWL_Message* %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CXFA_FFCheckButton14OnProcessEventEP10CFWL_Event(%class.CXFA_FFCheckButton*, %class.CFWL_Event*) unnamed_addr #0 align 2 {
  %3 = alloca %class.CXFA_EventParam, align 8
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0
  tail call void @_ZN12CXFA_FFField14OnProcessEventEP10CFWL_Event(%class.CXFA_FFField* %5, %class.CFWL_Event* %1) #5
  %6 = getelementptr inbounds %class.CFWL_Event, %class.CFWL_Event* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %72

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.CXFA_EventParam, %class.CXFA_EventParam* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %10) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 96, i1 false)
  call void @_ZN15CXFA_EventParamC1Ev(%class.CXFA_EventParam* nonnull %3) #5
  store i8 1, i8* %10, align 8
  %11 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #5
  %12 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 0, i32 4
  %13 = bitcast %"class.cppgc::internal::BasicMember.2"* %12 to %class.CXFA_Node**
  %14 = load %class.CXFA_Node*, %class.CXFA_Node** %13, align 8
  call void @_ZN9CXFA_Node8GetValueE16XFA_ValuePicture(%"class.fxcrt::WideString"* nonnull sret %4, %class.CXFA_Node* %14, i8 zeroext 0) #5
  %15 = getelementptr inbounds %class.CXFA_EventParam, %class.CXFA_EventParam* %3, i64 0, i32 16
  %16 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %15, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4) #5
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #5
  %17 = load %class.CXFA_Node*, %class.CXFA_Node** %13, align 8
  %18 = call %class.CXFA_Node* @_ZN9CXFA_Node20GetExclGroupIfExistsEv(%class.CXFA_Node* %17) #5
  %19 = call zeroext i1 @_ZN12CXFA_FFField20ProcessCommittedDataEv(%class.CXFA_FFField* %5) #5
  br i1 %19, label %20, label %36

20:                                               ; preds = %9
  %21 = getelementptr inbounds %class.CXFA_EventParam, %class.CXFA_EventParam* %3, i64 0, i32 10, i32 0
  store %class.CXFA_Node* %18, %class.CXFA_Node** %21, align 8
  %22 = icmp eq %class.CXFA_Node* %18, null
  br i1 %22, label %30, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.cppgc::internal::BasicMember.0"* %24 to %class.CXFA_FFDocView**
  %26 = load %class.CXFA_FFDocView*, %class.CXFA_FFDocView** %25, align 8
  call void @_ZN14CXFA_FFDocView15AddValidateNodeEP9CXFA_Node(%class.CXFA_FFDocView* %26, %class.CXFA_Node* nonnull %18) #5
  %27 = load %class.CXFA_FFDocView*, %class.CXFA_FFDocView** %25, align 8
  call void @_ZN14CXFA_FFDocView16AddCalculateNodeEP9CXFA_Node(%class.CXFA_FFDocView* %27, %class.CXFA_Node* nonnull %18) #5
  %28 = load %class.CXFA_FFDocView*, %class.CXFA_FFDocView** %25, align 8
  %29 = call i32 @_ZN9CXFA_Node12ProcessEventEP14CXFA_FFDocView18XFA_AttributeValueP15CXFA_EventParam(%class.CXFA_Node* nonnull %18, %class.CXFA_FFDocView* %28, i16 zeroext 150, %class.CXFA_EventParam* nonnull %3) #5
  br label %30

30:                                               ; preds = %20, %23
  %31 = load %class.CXFA_Node*, %class.CXFA_Node** %13, align 8
  store %class.CXFA_Node* %31, %class.CXFA_Node** %21, align 8
  %32 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 0, i32 2
  %33 = bitcast %"class.cppgc::internal::BasicMember.0"* %32 to %class.CXFA_FFDocView**
  %34 = load %class.CXFA_FFDocView*, %class.CXFA_FFDocView** %33, align 8
  %35 = call i32 @_ZN9CXFA_Node12ProcessEventEP14CXFA_FFDocView18XFA_AttributeValueP15CXFA_EventParam(%class.CXFA_Node* %31, %class.CXFA_FFDocView* %34, i16 zeroext 150, %class.CXFA_EventParam* nonnull %3) #5
  br label %57

36:                                               ; preds = %9
  %37 = load %class.CXFA_Node*, %class.CXFA_Node** %13, align 8
  %38 = call zeroext i8 @_ZN9CXFA_Node13GetCheckStateEv(%class.CXFA_Node* %37) #5
  %39 = icmp eq i8 %38, 2
  br i1 %39, label %40, label %46

40:                                               ; preds = %36
  %41 = call %class.CFWL_Widget* @_ZN12CXFA_FFField15GetNormalWidgetEv(%class.CXFA_FFField* %5) #5
  %42 = bitcast %class.CFWL_Widget* %41 to void (%class.CFWL_Widget*, i32)***
  %43 = load void (%class.CFWL_Widget*, i32)**, void (%class.CFWL_Widget*, i32)*** %42, align 8
  %44 = getelementptr inbounds void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %43, i64 13
  %45 = load void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %44, align 8
  call void %45(%class.CFWL_Widget* %41, i32 512) #5
  br label %57

46:                                               ; preds = %36
  %47 = icmp eq i8 %38, 0
  %48 = call %class.CFWL_Widget* @_ZN12CXFA_FFField15GetNormalWidgetEv(%class.CXFA_FFField* %5) #5
  %49 = bitcast %class.CFWL_Widget* %48 to void (%class.CFWL_Widget*, i32)***
  %50 = load void (%class.CFWL_Widget*, i32)**, void (%class.CFWL_Widget*, i32)*** %49, align 8
  br i1 %47, label %51, label %54

51:                                               ; preds = %46
  %52 = getelementptr inbounds void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %50, i64 13
  %53 = load void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %52, align 8
  call void %53(%class.CFWL_Widget* %48, i32 256) #5
  br label %57

54:                                               ; preds = %46
  %55 = getelementptr inbounds void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %50, i64 14
  %56 = load void (%class.CFWL_Widget*, i32)*, void (%class.CFWL_Widget*, i32)** %55, align 8
  call void %56(%class.CFWL_Widget* %48, i32 256) #5
  br label %57

57:                                               ; preds = %54, %51, %40, %30
  %58 = icmp eq %class.CXFA_Node* %18, null
  br i1 %58, label %65, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %class.CXFA_EventParam, %class.CXFA_EventParam* %3, i64 0, i32 10, i32 0
  store %class.CXFA_Node* %18, %class.CXFA_Node** %60, align 8
  %61 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 0, i32 2
  %62 = bitcast %"class.cppgc::internal::BasicMember.0"* %61 to %class.CXFA_FFDocView**
  %63 = load %class.CXFA_FFDocView*, %class.CXFA_FFDocView** %62, align 8
  %64 = call i32 @_ZN9CXFA_Node12ProcessEventEP14CXFA_FFDocView18XFA_AttributeValueP15CXFA_EventParam(%class.CXFA_Node* nonnull %18, %class.CXFA_FFDocView* %63, i16 zeroext 220, %class.CXFA_EventParam* nonnull %3) #5
  br label %65

65:                                               ; preds = %57, %59
  %66 = load %class.CXFA_Node*, %class.CXFA_Node** %13, align 8
  %67 = getelementptr inbounds %class.CXFA_EventParam, %class.CXFA_EventParam* %3, i64 0, i32 10, i32 0
  store %class.CXFA_Node* %66, %class.CXFA_Node** %67, align 8
  %68 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 0, i32 0, i32 2
  %69 = bitcast %"class.cppgc::internal::BasicMember.0"* %68 to %class.CXFA_FFDocView**
  %70 = load %class.CXFA_FFDocView*, %class.CXFA_FFDocView** %69, align 8
  %71 = call i32 @_ZN9CXFA_Node12ProcessEventEP14CXFA_FFDocView18XFA_AttributeValueP15CXFA_EventParam(%class.CXFA_Node* %66, %class.CXFA_FFDocView* %70, i16 zeroext 220, %class.CXFA_EventParam* nonnull %3) #5
  call void @_ZN15CXFA_EventParamD1Ev(%class.CXFA_EventParam* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %10) #5
  br label %72

72:                                               ; preds = %2, %65
  %73 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 1
  %74 = bitcast %"class.cppgc::internal::BasicMember.4"* %73 to %class.IFWL_WidgetDelegate**
  %75 = load %class.IFWL_WidgetDelegate*, %class.IFWL_WidgetDelegate** %74, align 8
  %76 = bitcast %class.IFWL_WidgetDelegate* %75 to void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)***
  %77 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)**, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)*** %76, align 8
  %78 = getelementptr inbounds void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)** %77, i64 4
  %79 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)** %78, align 8
  call void %79(%class.IFWL_WidgetDelegate* %75, %class.CFWL_Event* %1) #5
  ret void
}

declare void @_ZN12CXFA_FFField14OnProcessEventEP10CFWL_Event(%class.CXFA_FFField*, %class.CFWL_Event*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN15CXFA_EventParamC1Ev(%class.CXFA_EventParam*) unnamed_addr #1

declare void @_ZN9CXFA_Node8GetValueE16XFA_ValuePicture(%"class.fxcrt::WideString"* sret, %class.CXFA_Node*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #2

declare %class.CXFA_Node* @_ZN9CXFA_Node20GetExclGroupIfExistsEv(%class.CXFA_Node*) local_unnamed_addr #1

declare zeroext i1 @_ZN12CXFA_FFField20ProcessCommittedDataEv(%class.CXFA_FFField*) local_unnamed_addr #1

declare void @_ZN14CXFA_FFDocView15AddValidateNodeEP9CXFA_Node(%class.CXFA_FFDocView*, %class.CXFA_Node*) local_unnamed_addr #1

declare void @_ZN14CXFA_FFDocView16AddCalculateNodeEP9CXFA_Node(%class.CXFA_FFDocView*, %class.CXFA_Node*) local_unnamed_addr #1

declare i32 @_ZN9CXFA_Node12ProcessEventEP14CXFA_FFDocView18XFA_AttributeValueP15CXFA_EventParam(%class.CXFA_Node*, %class.CXFA_FFDocView*, i16 zeroext, %class.CXFA_EventParam*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN15CXFA_EventParamD1Ev(%class.CXFA_EventParam*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N18CXFA_FFCheckButton14OnProcessEventEP10CFWL_Event(%class.CXFA_FFCheckButton*, %class.CFWL_Event*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 -1, i32 0, i32 3
  %4 = bitcast %class.CFX_RectF* %3 to %class.CXFA_FFCheckButton*
  tail call void @_ZN18CXFA_FFCheckButton14OnProcessEventEP10CFWL_Event(%class.CXFA_FFCheckButton* %4, %class.CFWL_Event* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CXFA_FFCheckButton12OnDrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CXFA_FFCheckButton* nocapture readonly, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 0, i32 1
  %5 = bitcast %"class.cppgc::internal::BasicMember.4"* %4 to %class.IFWL_WidgetDelegate**
  %6 = load %class.IFWL_WidgetDelegate*, %class.IFWL_WidgetDelegate** %5, align 8
  %7 = bitcast %class.IFWL_WidgetDelegate* %6 to void (%class.IFWL_WidgetDelegate*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)***
  %8 = load void (%class.IFWL_WidgetDelegate*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)**, void (%class.IFWL_WidgetDelegate*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.IFWL_WidgetDelegate*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)*, void (%class.IFWL_WidgetDelegate*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)** %8, i64 5
  %10 = load void (%class.IFWL_WidgetDelegate*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)*, void (%class.IFWL_WidgetDelegate*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)** %9, align 8
  tail call void %10(%class.IFWL_WidgetDelegate* %6, %class.CFGAS_GEGraphics* %1, %class.CFX_Matrix* dereferenceable(24) %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N18CXFA_FFCheckButton12OnDrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CXFA_FFCheckButton* nocapture readonly, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CXFA_FFCheckButton, %class.CXFA_FFCheckButton* %0, i64 -1, i32 0, i32 3
  %5 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %4, i64 6, i32 2
  %6 = bitcast float* %5 to %class.IFWL_WidgetDelegate**
  %7 = load %class.IFWL_WidgetDelegate*, %class.IFWL_WidgetDelegate** %6, align 8
  %8 = bitcast %class.IFWL_WidgetDelegate* %7 to void (%class.IFWL_WidgetDelegate*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)***
  %9 = load void (%class.IFWL_WidgetDelegate*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)**, void (%class.IFWL_WidgetDelegate*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.IFWL_WidgetDelegate*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)*, void (%class.IFWL_WidgetDelegate*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)** %9, i64 5
  %11 = load void (%class.IFWL_WidgetDelegate*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)*, void (%class.IFWL_WidgetDelegate*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)** %10, align 8
  tail call void %11(%class.IFWL_WidgetDelegate* %7, %class.CFGAS_GEGraphics* %1, %class.CFX_Matrix* dereferenceable(24) %2) #5
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i8 @_ZN18CXFA_FFCheckButton16GetFormFieldTypeEv(%class.CXFA_FFCheckButton* nocapture readnone) unnamed_addr #4 align 2 {
  ret i8 9
}

declare void @_ZN13CXFA_FFWidget12DisplayCaretEbPK9CFX_RectF(%class.CXFA_FFWidget*, i1 zeroext, %class.CFX_RectF*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget26GetBorderColorAndThicknessEPjPf(%class.CXFA_FFWidget*, i32*, float*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget11PreFinalizeEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare %class.CXFA_FFField* @_ZN12CXFA_FFField7AsFieldEv(%class.CXFA_FFField*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN12CXFA_FFField7GetBBoxEN13CXFA_FFWidget11FocusOptionE(%class.CXFA_FFField*, i32) unnamed_addr #1

declare zeroext i1 @_ZN12CXFA_FFField8IsLoadedEv(%class.CXFA_FFField*) unnamed_addr #1

declare zeroext i1 @_ZN12CXFA_FFField24AcceptsFocusOnButtonDownEjRK13CFX_PTemplateIfE16FWL_MouseCommand(%class.CXFA_FFField*, i32, %class.CFX_PTemplate* dereferenceable(8), i8 zeroext) unnamed_addr #1

declare zeroext i1 @_ZN12CXFA_FFField12OnMouseEnterEv(%class.CXFA_FFField*) unnamed_addr #1

declare zeroext i1 @_ZN12CXFA_FFField11OnMouseExitEv(%class.CXFA_FFField*) unnamed_addr #1

declare zeroext i1 @_ZN12CXFA_FFField13OnLButtonDownEjRK13CFX_PTemplateIfE(%class.CXFA_FFField*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN12CXFA_FFField15OnLButtonDblClkEjRK13CFX_PTemplateIfE(%class.CXFA_FFField*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN12CXFA_FFField11OnMouseMoveEjRK13CFX_PTemplateIfE(%class.CXFA_FFField*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN12CXFA_FFField12OnMouseWheelEjRK13CFX_PTemplateIfERK13CFX_VTemplateIiE(%class.CXFA_FFField*, i32, %class.CFX_PTemplate* dereferenceable(8), %class.CFX_VTemplate*) unnamed_addr #1

declare zeroext i1 @_ZN12CXFA_FFField13OnRButtonDownEjRK13CFX_PTemplateIfE(%class.CXFA_FFField*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN12CXFA_FFField11OnRButtonUpEjRK13CFX_PTemplateIfE(%class.CXFA_FFField*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN12CXFA_FFField15OnRButtonDblClkEjRK13CFX_PTemplateIfE(%class.CXFA_FFField*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN12CXFA_FFField10OnSetFocusEP13CXFA_FFWidget(%class.CXFA_FFField*, %class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN12CXFA_FFField11OnKillFocusEP13CXFA_FFWidget(%class.CXFA_FFField*, %class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN12CXFA_FFField9OnKeyDownEjj(%class.CXFA_FFField*, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZN12CXFA_FFField7OnKeyUpEjj(%class.CXFA_FFField*, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZN12CXFA_FFField6OnCharEjj(%class.CXFA_FFField*, i32, i32) unnamed_addr #1

declare i32 @_ZN12CXFA_FFField7HitTestERK13CFX_PTemplateIfE(%class.CXFA_FFField*, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget7CanUndoEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget7CanRedoEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget7CanCopyEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget6CanCutEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget8CanPasteEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget12CanSelectAllEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget9CanDeleteEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget11CanDeSelectEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget4UndoEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget4RedoEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget4CopyEv(%"class.pdfium::Optional"* sret, %class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget3CutEv(%"class.pdfium::Optional"* sret, %class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget5PasteERKN5fxcrt10WideStringE(%class.CXFA_FFWidget*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget9SelectAllEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget6DeleteEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget8DeSelectEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget7GetTextEv(%"class.fxcrt::WideString"* sret, %class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN12CXFA_FFField14PtInActiveRectERK13CFX_PTemplateIfE(%class.CXFA_FFField*, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare %class.CXFA_FFDropDown* @_ZN12CXFA_FFField10AsDropDownEv(%class.CXFA_FFField*) unnamed_addr #1

declare void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8*) local_unnamed_addr #1

declare { i8*, void (%"class.cppgc::Visitor"*, i8*)* } @_ZN5cppgc8internal30TraceTraitFromInnerAddressImpl18GetTraceDescriptorEPKv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14TraceTraitBaseI16CXFA_CheckButtonE5TraceEPNS_7VisitorEPKv(%"class.cppgc::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %class.CXFA_Node*
  tail call void @_ZNK9CXFA_Node5TraceEPN5cppgc7VisitorE(%class.CXFA_Node* %3, %"class.cppgc::Visitor"* %0) #5
  ret void
}

declare void @_ZNK9CXFA_Node5TraceEPN5cppgc7VisitorE(%class.CXFA_Node*, %"class.cppgc::Visitor"*) unnamed_addr #1

declare void @_ZN13CFWL_CheckBoxC1EP8CFWL_App(%class.CFWL_CheckBox*, %class.CFWL_App*) unnamed_addr #1

declare i8* @_ZN5cppgc8internal33MakeGarbageCollectedTraitInternal8AllocateERNS_16AllocationHandleEmt(%"class.cppgc::AllocationHandle"*, i64, i16 zeroext) local_unnamed_addr #1

declare zeroext i16 @_ZN5cppgc8internal17EnsureGCInfoIndexERNSt3__16atomicItEEPFvPvEPFvPNS_7VisitorEPKvEPFNS0_14HeapObjectNameESB_Eb(%"struct.std::__1::atomic.96"* dereferenceable(2), void (i8*)*, void (%"class.cppgc::Visitor"*, i8*)*, { i8*, i8 } (i8*)*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14FinalizerTraitI11CFWL_WidgetE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %class.CFWL_Widget*
  %3 = bitcast i8* %0 to void (%class.CFWL_Widget*)***
  %4 = load void (%class.CFWL_Widget*)**, void (%class.CFWL_Widget*)*** %3, align 8
  %5 = getelementptr inbounds void (%class.CFWL_Widget*)*, void (%class.CFWL_Widget*)** %4, i64 1
  %6 = load void (%class.CFWL_Widget*)*, void (%class.CFWL_Widget*)** %5, align 8
  tail call void %6(%class.CFWL_Widget* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14TraceTraitBaseI11CFWL_WidgetE5TraceEPNS_7VisitorEPKv(%"class.cppgc::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %class.CFWL_Widget*
  %4 = bitcast i8* %1 to void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)***
  %5 = load void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)**, void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)*** %4, align 8
  %6 = load void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)*, void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)** %5, align 8
  tail call void %6(%class.CFWL_Widget* %3, %"class.cppgc::Visitor"* %0) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5cppgc8internal9NameTraitI11CFWL_WidgetE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN5cppgc12NameProvider11kHiddenNameE, i64 0, i64 0), i8 1 }
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!6 = distinct !{!6, !"_ZNK10CFX_MatrixmlERKS_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!9 = distinct !{!9, !"_ZNK10CFX_MatrixmlERKS_"}
