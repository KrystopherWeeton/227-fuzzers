; ModuleID = '../../third_party/libjpeg_turbo/jdmerge.c'
source_filename = "../../third_party/libjpeg_turbo/jdmerge.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.jpeg_decompress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32, %struct.jpeg_source_mgr*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i8, i8, i16, i16, i32, i8, i32, %struct.jpeg_marker_struct*, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master*, %struct.jpeg_d_main_controller*, %struct.jpeg_d_coef_controller*, %struct.jpeg_d_post_controller*, %struct.jpeg_input_controller*, %struct.jpeg_marker_reader*, %struct.jpeg_entropy_decoder*, %struct.jpeg_inverse_dct*, %struct.jpeg_upsampler*, %struct.jpeg_color_deconverter*, %struct.jpeg_color_quantizer* }
%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.jpeg_source_mgr = type { i8*, i64, {}*, i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i64)*, i32 (%struct.jpeg_decompress_struct*, i32)*, {}* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.jpeg_marker_struct = type { %struct.jpeg_marker_struct*, i8, i32, i32, i8* }
%struct.jpeg_decomp_master = type { {}*, {}*, i32, i32, i32, [10 x i32], [10 x i32], i32, i32 }
%struct.jpeg_d_main_controller = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)* }
%struct.jpeg_d_coef_controller = type { {}*, i32 (%struct.jpeg_decompress_struct*)*, {}*, i32 (%struct.jpeg_decompress_struct*, i8***)*, %struct.jvirt_barray_control** }
%struct.jpeg_d_post_controller = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*, i32)* }
%struct.jpeg_input_controller = type { i32 (%struct.jpeg_decompress_struct*)*, {}*, {}*, {}*, i32, i32 }
%struct.jpeg_marker_reader = type { {}*, i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, i32, i32, i32, i32 }
%struct.jpeg_entropy_decoder = type { {}*, i32 (%struct.jpeg_decompress_struct*, [64 x i16]**)*, i32 }
%struct.jpeg_inverse_dct = type { {}*, [10 x void (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*, i16*, i8**, i32)*] }
%struct.jpeg_upsampler = type { {}*, void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*, i32)*, i32 }
%struct.jpeg_color_deconverter = type { {}*, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* }
%struct.jpeg_color_quantizer = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*, {}*, {}* }
%struct.my_merged_upsampler = type { %struct.jpeg_upsampler, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)*, i32*, i32*, i64*, i64*, i8*, i32, i32, i32 }

@dither_matrix = internal unnamed_addr constant [4 x i64] [i64 524810, i64 201592326, i64 51052809, i64 252120325], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @jinit_merged_upsampler(%struct.jpeg_decompress_struct*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 1
  %3 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %3, i64 0, i32 0
  %5 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %4, align 8
  %6 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  %7 = tail call i8* %5(%struct.jpeg_common_struct* %6, i32 1, i64 88) #4
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %9 = bitcast %struct.jpeg_upsampler** %8 to i8**
  store i8* %7, i8** %9, align 8
  %10 = bitcast i8* %7 to void (%struct.jpeg_decompress_struct*)**
  store void (%struct.jpeg_decompress_struct*)* @start_pass_merged_upsample, void (%struct.jpeg_decompress_struct*)** %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 16
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 29
  %16 = load i32, i32* %15, align 8
  %17 = mul i32 %16, %14
  %18 = getelementptr inbounds i8, i8* %7, i64 76
  %19 = bitcast i8* %18 to i32*
  store i32 %17, i32* %19, align 4
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 62
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 2
  %23 = getelementptr inbounds i8, i8* %7, i64 8
  %24 = bitcast i8* %23 to void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*, i32)**
  br i1 %22, label %25, label %46

25:                                               ; preds = %1
  store void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*, i32)* @merged_2v_upsample, void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*, i32)** %24, align 8
  %26 = tail call i32 @jsimd_can_h2v2_merged_upsample() #4
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds i8, i8* %7, i64 24
  %29 = bitcast i8* %28 to void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)**
  %30 = select i1 %27, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)* @h2v2_merged_upsample, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)* @jsimd_h2v2_merged_upsample
  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)* %30, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)** %29, align 8
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 11
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 16
  br i1 %33, label %34, label %39

34:                                               ; preds = %25
  %35 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 21
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  %38 = select i1 %37, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)* @h2v2_merged_upsample_565, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)* @h2v2_merged_upsample_565D
  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)* %38, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)** %29, align 8
  br label %39

39:                                               ; preds = %34, %25
  %40 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8
  %41 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %40, i64 0, i32 1
  %42 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %41, align 8
  %43 = load i32, i32* %19, align 4
  %44 = zext i32 %43 to i64
  %45 = tail call i8* %42(%struct.jpeg_common_struct* %6, i32 1, i64 %44) #4
  br label %60

46:                                               ; preds = %1
  store void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*, i32)* @merged_1v_upsample, void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*, i32)** %24, align 8
  %47 = tail call i32 @jsimd_can_h2v1_merged_upsample() #4
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds i8, i8* %7, i64 24
  %50 = bitcast i8* %49 to void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)**
  %51 = select i1 %48, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)* @h2v1_merged_upsample, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)* @jsimd_h2v1_merged_upsample
  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)* %51, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)** %50, align 8
  %52 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 11
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 16
  br i1 %54, label %55, label %60

55:                                               ; preds = %46
  %56 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 21
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %57, 0
  %59 = select i1 %58, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)* @h2v1_merged_upsample_565, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)* @h2v1_merged_upsample_565D
  store void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)* %59, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)** %50, align 8
  br label %60

60:                                               ; preds = %46, %55, %39
  %61 = phi i8* [ %45, %39 ], [ null, %55 ], [ null, %46 ]
  %62 = getelementptr inbounds i8, i8* %7, i64 64
  %63 = bitcast i8* %62 to i8**
  store i8* %61, i8** %63, align 8
  %64 = bitcast %struct.jpeg_upsampler** %8 to %struct.my_merged_upsampler**
  %65 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %64, align 8
  %66 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8
  %67 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %66, i64 0, i32 0
  %68 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %67, align 8
  %69 = tail call i8* %68(%struct.jpeg_common_struct* %6, i32 1, i64 1024) #4
  %70 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %65, i64 0, i32 2
  %71 = bitcast i32** %70 to i8**
  store i8* %69, i8** %71, align 8
  %72 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8
  %73 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %72, i64 0, i32 0
  %74 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %73, align 8
  %75 = tail call i8* %74(%struct.jpeg_common_struct* %6, i32 1, i64 1024) #4
  %76 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %65, i64 0, i32 3
  %77 = bitcast i32** %76 to i8**
  store i8* %75, i8** %77, align 8
  %78 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8
  %79 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %78, i64 0, i32 0
  %80 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %79, align 8
  %81 = tail call i8* %80(%struct.jpeg_common_struct* %6, i32 1, i64 2048) #4
  %82 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %65, i64 0, i32 4
  %83 = bitcast i64** %82 to i8**
  store i8* %81, i8** %83, align 8
  %84 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8
  %85 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %84, i64 0, i32 0
  %86 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %85, align 8
  %87 = tail call i8* %86(%struct.jpeg_common_struct* %6, i32 1, i64 2048) #4
  %88 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %65, i64 0, i32 5
  %89 = bitcast i64** %88 to i8**
  store i8* %87, i8** %89, align 8
  br label %90

90:                                               ; preds = %90, %60
  %91 = phi i64 [ 0, %60 ], [ %112, %90 ]
  %92 = phi i64 [ -128, %60 ], [ %113, %90 ]
  %93 = mul nsw i64 %92, 91881
  %94 = add nsw i64 %93, 32768
  %95 = lshr i64 %94, 16
  %96 = trunc i64 %95 to i32
  %97 = load i32*, i32** %70, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %91
  store i32 %96, i32* %98, align 4
  %99 = mul nsw i64 %92, 116130
  %100 = add nsw i64 %99, 32768
  %101 = lshr i64 %100, 16
  %102 = trunc i64 %101 to i32
  %103 = load i32*, i32** %76, align 8
  %104 = getelementptr inbounds i32, i32* %103, i64 %91
  store i32 %102, i32* %104, align 4
  %105 = mul nsw i64 %92, -46802
  %106 = load i64*, i64** %82, align 8
  %107 = getelementptr inbounds i64, i64* %106, i64 %91
  store i64 %105, i64* %107, align 8
  %108 = mul nsw i64 %92, -22554
  %109 = add nsw i64 %108, 32768
  %110 = load i64*, i64** %88, align 8
  %111 = getelementptr inbounds i64, i64* %110, i64 %91
  store i64 %109, i64* %111, align 8
  %112 = add nuw nsw i64 %91, 1
  %113 = add nsw i64 %92, 1
  %114 = icmp eq i64 %112, 256
  br i1 %114, label %115, label %90

115:                                              ; preds = %90
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @start_pass_merged_upsample(%struct.jpeg_decompress_struct* nocapture readonly) #2 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %3 = bitcast %struct.jpeg_upsampler** %2 to %struct.my_merged_upsampler**
  %4 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %3, align 8
  %5 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %4, i64 0, i32 7
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 28
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %4, i64 0, i32 9
  store i32 %7, i32* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @merged_2v_upsample(%struct.jpeg_decompress_struct*, i8***, i32* nocapture, i32, i8**, i32* nocapture, i32) #0 {
  %8 = alloca [2 x i8*], align 16
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %10 = bitcast %struct.jpeg_upsampler** %9 to %struct.my_merged_upsampler**
  %11 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %10, align 8
  %12 = bitcast [2 x i8*]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #4
  %13 = getelementptr inbounds [2 x i8*], [2 x i8*]* %8, i64 0, i64 0
  %14 = getelementptr inbounds [2 x i8*], [2 x i8*]* %8, i64 0, i64 1
  %15 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %11, i64 0, i32 7
  %16 = bitcast [2 x i8*]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 16, i1 false)
  %17 = load i32, i32* %15, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %35, label %19

19:                                               ; preds = %7
  %20 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %11, i64 0, i32 8
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 11
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 16
  br i1 %24, label %25, label %29

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %27 = load i32, i32* %26, align 8
  %28 = shl i32 %27, 1
  br label %29

29:                                               ; preds = %25, %19
  %30 = phi i32 [ %28, %25 ], [ %21, %19 ]
  %31 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %11, i64 0, i32 6
  %32 = load i32, i32* %5, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i8*, i8** %4, i64 %33
  tail call void @jcopy_sample_rows(i8** %31, i32 0, i8** %34, i32 0, i32 1, i32 %30) #4
  store i32 0, i32* %15, align 8
  br label %66

35:                                               ; preds = %7
  %36 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %11, i64 0, i32 9
  %37 = load i32, i32* %36, align 8
  %38 = icmp ult i32 %37, 2
  %39 = select i1 %38, i32 %37, i32 2
  %40 = load i32, i32* %5, align 4
  %41 = sub i32 %6, %40
  %42 = icmp ugt i32 %39, %41
  %43 = select i1 %42, i32 %41, i32 %39
  %44 = zext i32 %40 to i64
  %45 = getelementptr inbounds i8*, i8** %4, i64 %44
  %46 = bitcast i8** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast [2 x i8*]* %8 to i64*
  store i64 %47, i64* %48, align 16
  %49 = icmp ugt i32 %43, 1
  br i1 %49, label %50, label %57

50:                                               ; preds = %35
  %51 = add i32 %40, 1
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i8*, i8** %4, i64 %52
  %54 = bitcast i8** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast i8** %14 to i64*
  store i64 %55, i64* %56, align 8
  br label %62

57:                                               ; preds = %35
  %58 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %11, i64 0, i32 6
  %59 = bitcast i8** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast i8** %14 to i64*
  store i64 %60, i64* %61, align 8
  store i32 1, i32* %15, align 8
  br label %62

62:                                               ; preds = %57, %50
  %63 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %11, i64 0, i32 1
  %64 = load void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)*, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)** %63, align 8
  %65 = load i32, i32* %2, align 4
  call void %64(%struct.jpeg_decompress_struct* %0, i8*** %1, i32 %65, i8** nonnull %13) #4
  br label %66

66:                                               ; preds = %62, %29
  %67 = phi i32 [ 1, %29 ], [ %43, %62 ]
  %68 = load i32, i32* %5, align 4
  %69 = add i32 %68, %67
  store i32 %69, i32* %5, align 4
  %70 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %11, i64 0, i32 9
  %71 = load i32, i32* %70, align 8
  %72 = sub i32 %71, %67
  store i32 %72, i32* %70, align 8
  %73 = load i32, i32* %15, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %66
  %76 = load i32, i32* %2, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %2, align 4
  br label %78

78:                                               ; preds = %66, %75
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #4
  ret void
}

declare i32 @jsimd_can_h2v2_merged_upsample() local_unnamed_addr #3

declare void @jsimd_h2v2_merged_upsample(%struct.jpeg_decompress_struct*, i8***, i32, i8**) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @h2v2_merged_upsample(%struct.jpeg_decompress_struct* readonly, i8*** readonly, i32, i8** nocapture readonly) #2 {
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 11
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %1219 [
    i32 6, label %7
    i32 7, label %205
    i32 12, label %205
    i32 8, label %409
    i32 9, label %607
    i32 13, label %607
    i32 10, label %811
    i32 14, label %811
    i32 11, label %1015
    i32 15, label %1015
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %9 = bitcast %struct.jpeg_upsampler** %8 to %struct.my_merged_upsampler**
  %10 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %9, align 8
  %11 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %10, i64 0, i32 2
  %14 = load i32*, i32** %13, align 8
  %15 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %10, i64 0, i32 3
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %10, i64 0, i32 4
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %10, i64 0, i32 5
  %20 = load i64*, i64** %19, align 8
  %21 = load i8**, i8*** %1, align 8
  %22 = shl i32 %2, 1
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i8*, i8** %21, i64 %23
  %25 = load i8*, i8** %24, align 8
  %26 = or i32 %22, 1
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds i8*, i8** %21, i64 %27
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds i8**, i8*** %1, i64 1
  %31 = load i8**, i8*** %30, align 8
  %32 = zext i32 %2 to i64
  %33 = getelementptr inbounds i8*, i8** %31, i64 %32
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds i8**, i8*** %1, i64 2
  %36 = load i8**, i8*** %35, align 8
  %37 = getelementptr inbounds i8*, i8** %36, i64 %32
  %38 = load i8*, i8** %37, align 8
  %39 = load i8*, i8** %3, align 8
  %40 = getelementptr inbounds i8*, i8** %3, i64 1
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 1
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %147, label %46

46:                                               ; preds = %7, %46
  %47 = phi i32 [ %143, %46 ], [ %44, %7 ]
  %48 = phi i8* [ %56, %46 ], [ %38, %7 ]
  %49 = phi i8* [ %54, %46 ], [ %34, %7 ]
  %50 = phi i8* [ %125, %46 ], [ %29, %7 ]
  %51 = phi i8* [ %89, %46 ], [ %25, %7 ]
  %52 = phi i8* [ %142, %46 ], [ %41, %7 ]
  %53 = phi i8* [ %106, %46 ], [ %39, %7 ]
  %54 = getelementptr inbounds i8, i8* %49, i64 1
  %55 = load i8, i8* %49, align 1
  %56 = getelementptr inbounds i8, i8* %48, i64 1
  %57 = load i8, i8* %48, align 1
  %58 = zext i8 %57 to i64
  %59 = getelementptr inbounds i32, i32* %14, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = zext i8 %55 to i64
  %62 = getelementptr inbounds i64, i64* %20, i64 %61
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds i64, i64* %18, i64 %58
  %65 = load i64, i64* %64, align 8
  %66 = add nsw i64 %65, %63
  %67 = lshr i64 %66, 16
  %68 = trunc i64 %67 to i32
  %69 = getelementptr inbounds i32, i32* %16, i64 %61
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds i8, i8* %51, i64 1
  %72 = load i8, i8* %51, align 1
  %73 = zext i8 %72 to i32
  %74 = add nsw i32 %60, %73
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i8, i8* %12, i64 %75
  %77 = load i8, i8* %76, align 1
  store i8 %77, i8* %53, align 1
  %78 = add nsw i32 %73, %68
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %12, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = getelementptr inbounds i8, i8* %53, i64 1
  store i8 %81, i8* %82, align 1
  %83 = add nsw i32 %70, %73
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %12, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = getelementptr inbounds i8, i8* %53, i64 2
  store i8 %86, i8* %87, align 1
  %88 = getelementptr inbounds i8, i8* %53, i64 3
  %89 = getelementptr inbounds i8, i8* %51, i64 2
  %90 = load i8, i8* %71, align 1
  %91 = zext i8 %90 to i32
  %92 = add nsw i32 %60, %91
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i8, i8* %12, i64 %93
  %95 = load i8, i8* %94, align 1
  store i8 %95, i8* %88, align 1
  %96 = add nsw i32 %91, %68
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %12, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = getelementptr inbounds i8, i8* %53, i64 4
  store i8 %99, i8* %100, align 1
  %101 = add nsw i32 %70, %91
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %12, i64 %102
  %104 = load i8, i8* %103, align 1
  %105 = getelementptr inbounds i8, i8* %53, i64 5
  store i8 %104, i8* %105, align 1
  %106 = getelementptr inbounds i8, i8* %53, i64 6
  %107 = getelementptr inbounds i8, i8* %50, i64 1
  %108 = load i8, i8* %50, align 1
  %109 = zext i8 %108 to i32
  %110 = add nsw i32 %60, %109
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %12, i64 %111
  %113 = load i8, i8* %112, align 1
  store i8 %113, i8* %52, align 1
  %114 = add nsw i32 %109, %68
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i8, i8* %12, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = getelementptr inbounds i8, i8* %52, i64 1
  store i8 %117, i8* %118, align 1
  %119 = add nsw i32 %70, %109
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i8, i8* %12, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = getelementptr inbounds i8, i8* %52, i64 2
  store i8 %122, i8* %123, align 1
  %124 = getelementptr inbounds i8, i8* %52, i64 3
  %125 = getelementptr inbounds i8, i8* %50, i64 2
  %126 = load i8, i8* %107, align 1
  %127 = zext i8 %126 to i32
  %128 = add nsw i32 %60, %127
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i8, i8* %12, i64 %129
  %131 = load i8, i8* %130, align 1
  store i8 %131, i8* %124, align 1
  %132 = add nsw i32 %127, %68
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i8, i8* %12, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = getelementptr inbounds i8, i8* %52, i64 4
  store i8 %135, i8* %136, align 1
  %137 = add nsw i32 %70, %127
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i8, i8* %12, i64 %138
  %140 = load i8, i8* %139, align 1
  %141 = getelementptr inbounds i8, i8* %52, i64 5
  store i8 %140, i8* %141, align 1
  %142 = getelementptr inbounds i8, i8* %52, i64 6
  %143 = add nsw i32 %47, -1
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %46

145:                                              ; preds = %46
  %146 = load i32, i32* %42, align 8
  br label %147

147:                                              ; preds = %145, %7
  %148 = phi i32 [ %43, %7 ], [ %146, %145 ]
  %149 = phi i8* [ %39, %7 ], [ %106, %145 ]
  %150 = phi i8* [ %41, %7 ], [ %142, %145 ]
  %151 = phi i8* [ %25, %7 ], [ %89, %145 ]
  %152 = phi i8* [ %29, %7 ], [ %125, %145 ]
  %153 = phi i8* [ %34, %7 ], [ %54, %145 ]
  %154 = phi i8* [ %38, %7 ], [ %56, %145 ]
  %155 = and i32 %148, 1
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %1417, label %157

157:                                              ; preds = %147
  %158 = load i8, i8* %153, align 1
  %159 = load i8, i8* %154, align 1
  %160 = zext i8 %159 to i64
  %161 = getelementptr inbounds i32, i32* %14, i64 %160
  %162 = load i32, i32* %161, align 4
  %163 = zext i8 %158 to i64
  %164 = getelementptr inbounds i64, i64* %20, i64 %163
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds i64, i64* %18, i64 %160
  %167 = load i64, i64* %166, align 8
  %168 = add nsw i64 %167, %165
  %169 = lshr i64 %168, 16
  %170 = trunc i64 %169 to i32
  %171 = getelementptr inbounds i32, i32* %16, i64 %163
  %172 = load i32, i32* %171, align 4
  %173 = load i8, i8* %151, align 1
  %174 = zext i8 %173 to i32
  %175 = add nsw i32 %162, %174
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds i8, i8* %12, i64 %176
  %178 = load i8, i8* %177, align 1
  store i8 %178, i8* %149, align 1
  %179 = add nsw i32 %174, %170
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i8, i8* %12, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = getelementptr inbounds i8, i8* %149, i64 1
  store i8 %182, i8* %183, align 1
  %184 = add nsw i32 %172, %174
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds i8, i8* %12, i64 %185
  %187 = load i8, i8* %186, align 1
  %188 = getelementptr inbounds i8, i8* %149, i64 2
  store i8 %187, i8* %188, align 1
  %189 = load i8, i8* %152, align 1
  %190 = zext i8 %189 to i32
  %191 = add nsw i32 %162, %190
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds i8, i8* %12, i64 %192
  %194 = load i8, i8* %193, align 1
  store i8 %194, i8* %150, align 1
  %195 = add nsw i32 %190, %170
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds i8, i8* %12, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = getelementptr inbounds i8, i8* %150, i64 1
  store i8 %198, i8* %199, align 1
  %200 = add nsw i32 %172, %190
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds i8, i8* %12, i64 %201
  %203 = load i8, i8* %202, align 1
  %204 = getelementptr inbounds i8, i8* %150, i64 2
  store i8 %203, i8* %204, align 1
  br label %1417

205:                                              ; preds = %4, %4
  %206 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %207 = bitcast %struct.jpeg_upsampler** %206 to %struct.my_merged_upsampler**
  %208 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %207, align 8
  %209 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %210 = load i8*, i8** %209, align 8
  %211 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %208, i64 0, i32 2
  %212 = load i32*, i32** %211, align 8
  %213 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %208, i64 0, i32 3
  %214 = load i32*, i32** %213, align 8
  %215 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %208, i64 0, i32 4
  %216 = load i64*, i64** %215, align 8
  %217 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %208, i64 0, i32 5
  %218 = load i64*, i64** %217, align 8
  %219 = load i8**, i8*** %1, align 8
  %220 = shl i32 %2, 1
  %221 = zext i32 %220 to i64
  %222 = getelementptr inbounds i8*, i8** %219, i64 %221
  %223 = load i8*, i8** %222, align 8
  %224 = or i32 %220, 1
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds i8*, i8** %219, i64 %225
  %227 = load i8*, i8** %226, align 8
  %228 = getelementptr inbounds i8**, i8*** %1, i64 1
  %229 = load i8**, i8*** %228, align 8
  %230 = zext i32 %2 to i64
  %231 = getelementptr inbounds i8*, i8** %229, i64 %230
  %232 = load i8*, i8** %231, align 8
  %233 = getelementptr inbounds i8**, i8*** %1, i64 2
  %234 = load i8**, i8*** %233, align 8
  %235 = getelementptr inbounds i8*, i8** %234, i64 %230
  %236 = load i8*, i8** %235, align 8
  %237 = load i8*, i8** %3, align 8
  %238 = getelementptr inbounds i8*, i8** %3, i64 1
  %239 = load i8*, i8** %238, align 8
  %240 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %241 = load i32, i32* %240, align 8
  %242 = lshr i32 %241, 1
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %349, label %244

244:                                              ; preds = %205, %244
  %245 = phi i32 [ %345, %244 ], [ %242, %205 ]
  %246 = phi i8* [ %254, %244 ], [ %236, %205 ]
  %247 = phi i8* [ %252, %244 ], [ %232, %205 ]
  %248 = phi i8* [ %326, %244 ], [ %227, %205 ]
  %249 = phi i8* [ %288, %244 ], [ %223, %205 ]
  %250 = phi i8* [ %344, %244 ], [ %239, %205 ]
  %251 = phi i8* [ %306, %244 ], [ %237, %205 ]
  %252 = getelementptr inbounds i8, i8* %247, i64 1
  %253 = load i8, i8* %247, align 1
  %254 = getelementptr inbounds i8, i8* %246, i64 1
  %255 = load i8, i8* %246, align 1
  %256 = zext i8 %255 to i64
  %257 = getelementptr inbounds i32, i32* %212, i64 %256
  %258 = load i32, i32* %257, align 4
  %259 = zext i8 %253 to i64
  %260 = getelementptr inbounds i64, i64* %218, i64 %259
  %261 = load i64, i64* %260, align 8
  %262 = getelementptr inbounds i64, i64* %216, i64 %256
  %263 = load i64, i64* %262, align 8
  %264 = add nsw i64 %263, %261
  %265 = lshr i64 %264, 16
  %266 = trunc i64 %265 to i32
  %267 = getelementptr inbounds i32, i32* %214, i64 %259
  %268 = load i32, i32* %267, align 4
  %269 = getelementptr inbounds i8, i8* %249, i64 1
  %270 = load i8, i8* %249, align 1
  %271 = zext i8 %270 to i32
  %272 = add nsw i32 %258, %271
  %273 = sext i32 %272 to i64
  %274 = getelementptr inbounds i8, i8* %210, i64 %273
  %275 = load i8, i8* %274, align 1
  store i8 %275, i8* %251, align 1
  %276 = add nsw i32 %271, %266
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds i8, i8* %210, i64 %277
  %279 = load i8, i8* %278, align 1
  %280 = getelementptr inbounds i8, i8* %251, i64 1
  store i8 %279, i8* %280, align 1
  %281 = add nsw i32 %268, %271
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds i8, i8* %210, i64 %282
  %284 = load i8, i8* %283, align 1
  %285 = getelementptr inbounds i8, i8* %251, i64 2
  store i8 %284, i8* %285, align 1
  %286 = getelementptr inbounds i8, i8* %251, i64 3
  store i8 -1, i8* %286, align 1
  %287 = getelementptr inbounds i8, i8* %251, i64 4
  %288 = getelementptr inbounds i8, i8* %249, i64 2
  %289 = load i8, i8* %269, align 1
  %290 = zext i8 %289 to i32
  %291 = add nsw i32 %258, %290
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds i8, i8* %210, i64 %292
  %294 = load i8, i8* %293, align 1
  store i8 %294, i8* %287, align 1
  %295 = add nsw i32 %290, %266
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds i8, i8* %210, i64 %296
  %298 = load i8, i8* %297, align 1
  %299 = getelementptr inbounds i8, i8* %251, i64 5
  store i8 %298, i8* %299, align 1
  %300 = add nsw i32 %268, %290
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds i8, i8* %210, i64 %301
  %303 = load i8, i8* %302, align 1
  %304 = getelementptr inbounds i8, i8* %251, i64 6
  store i8 %303, i8* %304, align 1
  %305 = getelementptr inbounds i8, i8* %251, i64 7
  store i8 -1, i8* %305, align 1
  %306 = getelementptr inbounds i8, i8* %251, i64 8
  %307 = getelementptr inbounds i8, i8* %248, i64 1
  %308 = load i8, i8* %248, align 1
  %309 = zext i8 %308 to i32
  %310 = add nsw i32 %258, %309
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds i8, i8* %210, i64 %311
  %313 = load i8, i8* %312, align 1
  store i8 %313, i8* %250, align 1
  %314 = add nsw i32 %309, %266
  %315 = sext i32 %314 to i64
  %316 = getelementptr inbounds i8, i8* %210, i64 %315
  %317 = load i8, i8* %316, align 1
  %318 = getelementptr inbounds i8, i8* %250, i64 1
  store i8 %317, i8* %318, align 1
  %319 = add nsw i32 %268, %309
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds i8, i8* %210, i64 %320
  %322 = load i8, i8* %321, align 1
  %323 = getelementptr inbounds i8, i8* %250, i64 2
  store i8 %322, i8* %323, align 1
  %324 = getelementptr inbounds i8, i8* %250, i64 3
  store i8 -1, i8* %324, align 1
  %325 = getelementptr inbounds i8, i8* %250, i64 4
  %326 = getelementptr inbounds i8, i8* %248, i64 2
  %327 = load i8, i8* %307, align 1
  %328 = zext i8 %327 to i32
  %329 = add nsw i32 %258, %328
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds i8, i8* %210, i64 %330
  %332 = load i8, i8* %331, align 1
  store i8 %332, i8* %325, align 1
  %333 = add nsw i32 %328, %266
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds i8, i8* %210, i64 %334
  %336 = load i8, i8* %335, align 1
  %337 = getelementptr inbounds i8, i8* %250, i64 5
  store i8 %336, i8* %337, align 1
  %338 = add nsw i32 %268, %328
  %339 = sext i32 %338 to i64
  %340 = getelementptr inbounds i8, i8* %210, i64 %339
  %341 = load i8, i8* %340, align 1
  %342 = getelementptr inbounds i8, i8* %250, i64 6
  store i8 %341, i8* %342, align 1
  %343 = getelementptr inbounds i8, i8* %250, i64 7
  store i8 -1, i8* %343, align 1
  %344 = getelementptr inbounds i8, i8* %250, i64 8
  %345 = add nsw i32 %245, -1
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %347, label %244

347:                                              ; preds = %244
  %348 = load i32, i32* %240, align 8
  br label %349

349:                                              ; preds = %347, %205
  %350 = phi i32 [ %241, %205 ], [ %348, %347 ]
  %351 = phi i8* [ %237, %205 ], [ %306, %347 ]
  %352 = phi i8* [ %239, %205 ], [ %344, %347 ]
  %353 = phi i8* [ %223, %205 ], [ %288, %347 ]
  %354 = phi i8* [ %227, %205 ], [ %326, %347 ]
  %355 = phi i8* [ %232, %205 ], [ %252, %347 ]
  %356 = phi i8* [ %236, %205 ], [ %254, %347 ]
  %357 = and i32 %350, 1
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %1417, label %359

359:                                              ; preds = %349
  %360 = load i8, i8* %355, align 1
  %361 = load i8, i8* %356, align 1
  %362 = zext i8 %361 to i64
  %363 = getelementptr inbounds i32, i32* %212, i64 %362
  %364 = load i32, i32* %363, align 4
  %365 = zext i8 %360 to i64
  %366 = getelementptr inbounds i64, i64* %218, i64 %365
  %367 = load i64, i64* %366, align 8
  %368 = getelementptr inbounds i64, i64* %216, i64 %362
  %369 = load i64, i64* %368, align 8
  %370 = add nsw i64 %369, %367
  %371 = lshr i64 %370, 16
  %372 = trunc i64 %371 to i32
  %373 = getelementptr inbounds i32, i32* %214, i64 %365
  %374 = load i32, i32* %373, align 4
  %375 = load i8, i8* %353, align 1
  %376 = zext i8 %375 to i32
  %377 = add nsw i32 %364, %376
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds i8, i8* %210, i64 %378
  %380 = load i8, i8* %379, align 1
  store i8 %380, i8* %351, align 1
  %381 = add nsw i32 %376, %372
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds i8, i8* %210, i64 %382
  %384 = load i8, i8* %383, align 1
  %385 = getelementptr inbounds i8, i8* %351, i64 1
  store i8 %384, i8* %385, align 1
  %386 = add nsw i32 %374, %376
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds i8, i8* %210, i64 %387
  %389 = load i8, i8* %388, align 1
  %390 = getelementptr inbounds i8, i8* %351, i64 2
  store i8 %389, i8* %390, align 1
  %391 = getelementptr inbounds i8, i8* %351, i64 3
  store i8 -1, i8* %391, align 1
  %392 = load i8, i8* %354, align 1
  %393 = zext i8 %392 to i32
  %394 = add nsw i32 %364, %393
  %395 = sext i32 %394 to i64
  %396 = getelementptr inbounds i8, i8* %210, i64 %395
  %397 = load i8, i8* %396, align 1
  store i8 %397, i8* %352, align 1
  %398 = add nsw i32 %393, %372
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds i8, i8* %210, i64 %399
  %401 = load i8, i8* %400, align 1
  %402 = getelementptr inbounds i8, i8* %352, i64 1
  store i8 %401, i8* %402, align 1
  %403 = add nsw i32 %374, %393
  %404 = sext i32 %403 to i64
  %405 = getelementptr inbounds i8, i8* %210, i64 %404
  %406 = load i8, i8* %405, align 1
  %407 = getelementptr inbounds i8, i8* %352, i64 2
  store i8 %406, i8* %407, align 1
  %408 = getelementptr inbounds i8, i8* %352, i64 3
  store i8 -1, i8* %408, align 1
  br label %1417

409:                                              ; preds = %4
  %410 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %411 = bitcast %struct.jpeg_upsampler** %410 to %struct.my_merged_upsampler**
  %412 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %411, align 8
  %413 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %414 = load i8*, i8** %413, align 8
  %415 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %412, i64 0, i32 2
  %416 = load i32*, i32** %415, align 8
  %417 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %412, i64 0, i32 3
  %418 = load i32*, i32** %417, align 8
  %419 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %412, i64 0, i32 4
  %420 = load i64*, i64** %419, align 8
  %421 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %412, i64 0, i32 5
  %422 = load i64*, i64** %421, align 8
  %423 = load i8**, i8*** %1, align 8
  %424 = shl i32 %2, 1
  %425 = zext i32 %424 to i64
  %426 = getelementptr inbounds i8*, i8** %423, i64 %425
  %427 = load i8*, i8** %426, align 8
  %428 = or i32 %424, 1
  %429 = zext i32 %428 to i64
  %430 = getelementptr inbounds i8*, i8** %423, i64 %429
  %431 = load i8*, i8** %430, align 8
  %432 = getelementptr inbounds i8**, i8*** %1, i64 1
  %433 = load i8**, i8*** %432, align 8
  %434 = zext i32 %2 to i64
  %435 = getelementptr inbounds i8*, i8** %433, i64 %434
  %436 = load i8*, i8** %435, align 8
  %437 = getelementptr inbounds i8**, i8*** %1, i64 2
  %438 = load i8**, i8*** %437, align 8
  %439 = getelementptr inbounds i8*, i8** %438, i64 %434
  %440 = load i8*, i8** %439, align 8
  %441 = load i8*, i8** %3, align 8
  %442 = getelementptr inbounds i8*, i8** %3, i64 1
  %443 = load i8*, i8** %442, align 8
  %444 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %445 = load i32, i32* %444, align 8
  %446 = lshr i32 %445, 1
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %549, label %448

448:                                              ; preds = %409, %448
  %449 = phi i32 [ %545, %448 ], [ %446, %409 ]
  %450 = phi i8* [ %458, %448 ], [ %440, %409 ]
  %451 = phi i8* [ %456, %448 ], [ %436, %409 ]
  %452 = phi i8* [ %527, %448 ], [ %431, %409 ]
  %453 = phi i8* [ %491, %448 ], [ %427, %409 ]
  %454 = phi i8* [ %544, %448 ], [ %443, %409 ]
  %455 = phi i8* [ %508, %448 ], [ %441, %409 ]
  %456 = getelementptr inbounds i8, i8* %451, i64 1
  %457 = load i8, i8* %451, align 1
  %458 = getelementptr inbounds i8, i8* %450, i64 1
  %459 = load i8, i8* %450, align 1
  %460 = zext i8 %459 to i64
  %461 = getelementptr inbounds i32, i32* %416, i64 %460
  %462 = load i32, i32* %461, align 4
  %463 = zext i8 %457 to i64
  %464 = getelementptr inbounds i64, i64* %422, i64 %463
  %465 = load i64, i64* %464, align 8
  %466 = getelementptr inbounds i64, i64* %420, i64 %460
  %467 = load i64, i64* %466, align 8
  %468 = add nsw i64 %467, %465
  %469 = lshr i64 %468, 16
  %470 = trunc i64 %469 to i32
  %471 = getelementptr inbounds i32, i32* %418, i64 %463
  %472 = load i32, i32* %471, align 4
  %473 = getelementptr inbounds i8, i8* %453, i64 1
  %474 = load i8, i8* %453, align 1
  %475 = zext i8 %474 to i32
  %476 = add nsw i32 %462, %475
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds i8, i8* %414, i64 %477
  %479 = load i8, i8* %478, align 1
  %480 = getelementptr inbounds i8, i8* %455, i64 2
  store i8 %479, i8* %480, align 1
  %481 = add nsw i32 %475, %470
  %482 = sext i32 %481 to i64
  %483 = getelementptr inbounds i8, i8* %414, i64 %482
  %484 = load i8, i8* %483, align 1
  %485 = getelementptr inbounds i8, i8* %455, i64 1
  store i8 %484, i8* %485, align 1
  %486 = add nsw i32 %472, %475
  %487 = sext i32 %486 to i64
  %488 = getelementptr inbounds i8, i8* %414, i64 %487
  %489 = load i8, i8* %488, align 1
  store i8 %489, i8* %455, align 1
  %490 = getelementptr inbounds i8, i8* %455, i64 3
  %491 = getelementptr inbounds i8, i8* %453, i64 2
  %492 = load i8, i8* %473, align 1
  %493 = zext i8 %492 to i32
  %494 = add nsw i32 %462, %493
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds i8, i8* %414, i64 %495
  %497 = load i8, i8* %496, align 1
  %498 = getelementptr inbounds i8, i8* %455, i64 5
  store i8 %497, i8* %498, align 1
  %499 = add nsw i32 %493, %470
  %500 = sext i32 %499 to i64
  %501 = getelementptr inbounds i8, i8* %414, i64 %500
  %502 = load i8, i8* %501, align 1
  %503 = getelementptr inbounds i8, i8* %455, i64 4
  store i8 %502, i8* %503, align 1
  %504 = add nsw i32 %472, %493
  %505 = sext i32 %504 to i64
  %506 = getelementptr inbounds i8, i8* %414, i64 %505
  %507 = load i8, i8* %506, align 1
  store i8 %507, i8* %490, align 1
  %508 = getelementptr inbounds i8, i8* %455, i64 6
  %509 = getelementptr inbounds i8, i8* %452, i64 1
  %510 = load i8, i8* %452, align 1
  %511 = zext i8 %510 to i32
  %512 = add nsw i32 %462, %511
  %513 = sext i32 %512 to i64
  %514 = getelementptr inbounds i8, i8* %414, i64 %513
  %515 = load i8, i8* %514, align 1
  %516 = getelementptr inbounds i8, i8* %454, i64 2
  store i8 %515, i8* %516, align 1
  %517 = add nsw i32 %511, %470
  %518 = sext i32 %517 to i64
  %519 = getelementptr inbounds i8, i8* %414, i64 %518
  %520 = load i8, i8* %519, align 1
  %521 = getelementptr inbounds i8, i8* %454, i64 1
  store i8 %520, i8* %521, align 1
  %522 = add nsw i32 %472, %511
  %523 = sext i32 %522 to i64
  %524 = getelementptr inbounds i8, i8* %414, i64 %523
  %525 = load i8, i8* %524, align 1
  store i8 %525, i8* %454, align 1
  %526 = getelementptr inbounds i8, i8* %454, i64 3
  %527 = getelementptr inbounds i8, i8* %452, i64 2
  %528 = load i8, i8* %509, align 1
  %529 = zext i8 %528 to i32
  %530 = add nsw i32 %462, %529
  %531 = sext i32 %530 to i64
  %532 = getelementptr inbounds i8, i8* %414, i64 %531
  %533 = load i8, i8* %532, align 1
  %534 = getelementptr inbounds i8, i8* %454, i64 5
  store i8 %533, i8* %534, align 1
  %535 = add nsw i32 %529, %470
  %536 = sext i32 %535 to i64
  %537 = getelementptr inbounds i8, i8* %414, i64 %536
  %538 = load i8, i8* %537, align 1
  %539 = getelementptr inbounds i8, i8* %454, i64 4
  store i8 %538, i8* %539, align 1
  %540 = add nsw i32 %472, %529
  %541 = sext i32 %540 to i64
  %542 = getelementptr inbounds i8, i8* %414, i64 %541
  %543 = load i8, i8* %542, align 1
  store i8 %543, i8* %526, align 1
  %544 = getelementptr inbounds i8, i8* %454, i64 6
  %545 = add nsw i32 %449, -1
  %546 = icmp eq i32 %545, 0
  br i1 %546, label %547, label %448

547:                                              ; preds = %448
  %548 = load i32, i32* %444, align 8
  br label %549

549:                                              ; preds = %547, %409
  %550 = phi i32 [ %445, %409 ], [ %548, %547 ]
  %551 = phi i8* [ %441, %409 ], [ %508, %547 ]
  %552 = phi i8* [ %443, %409 ], [ %544, %547 ]
  %553 = phi i8* [ %427, %409 ], [ %491, %547 ]
  %554 = phi i8* [ %431, %409 ], [ %527, %547 ]
  %555 = phi i8* [ %436, %409 ], [ %456, %547 ]
  %556 = phi i8* [ %440, %409 ], [ %458, %547 ]
  %557 = and i32 %550, 1
  %558 = icmp eq i32 %557, 0
  br i1 %558, label %1417, label %559

559:                                              ; preds = %549
  %560 = load i8, i8* %555, align 1
  %561 = load i8, i8* %556, align 1
  %562 = zext i8 %561 to i64
  %563 = getelementptr inbounds i32, i32* %416, i64 %562
  %564 = load i32, i32* %563, align 4
  %565 = zext i8 %560 to i64
  %566 = getelementptr inbounds i64, i64* %422, i64 %565
  %567 = load i64, i64* %566, align 8
  %568 = getelementptr inbounds i64, i64* %420, i64 %562
  %569 = load i64, i64* %568, align 8
  %570 = add nsw i64 %569, %567
  %571 = lshr i64 %570, 16
  %572 = trunc i64 %571 to i32
  %573 = getelementptr inbounds i32, i32* %418, i64 %565
  %574 = load i32, i32* %573, align 4
  %575 = load i8, i8* %553, align 1
  %576 = zext i8 %575 to i32
  %577 = add nsw i32 %564, %576
  %578 = sext i32 %577 to i64
  %579 = getelementptr inbounds i8, i8* %414, i64 %578
  %580 = load i8, i8* %579, align 1
  %581 = getelementptr inbounds i8, i8* %551, i64 2
  store i8 %580, i8* %581, align 1
  %582 = add nsw i32 %576, %572
  %583 = sext i32 %582 to i64
  %584 = getelementptr inbounds i8, i8* %414, i64 %583
  %585 = load i8, i8* %584, align 1
  %586 = getelementptr inbounds i8, i8* %551, i64 1
  store i8 %585, i8* %586, align 1
  %587 = add nsw i32 %574, %576
  %588 = sext i32 %587 to i64
  %589 = getelementptr inbounds i8, i8* %414, i64 %588
  %590 = load i8, i8* %589, align 1
  store i8 %590, i8* %551, align 1
  %591 = load i8, i8* %554, align 1
  %592 = zext i8 %591 to i32
  %593 = add nsw i32 %564, %592
  %594 = sext i32 %593 to i64
  %595 = getelementptr inbounds i8, i8* %414, i64 %594
  %596 = load i8, i8* %595, align 1
  %597 = getelementptr inbounds i8, i8* %552, i64 2
  store i8 %596, i8* %597, align 1
  %598 = add nsw i32 %592, %572
  %599 = sext i32 %598 to i64
  %600 = getelementptr inbounds i8, i8* %414, i64 %599
  %601 = load i8, i8* %600, align 1
  %602 = getelementptr inbounds i8, i8* %552, i64 1
  store i8 %601, i8* %602, align 1
  %603 = add nsw i32 %574, %592
  %604 = sext i32 %603 to i64
  %605 = getelementptr inbounds i8, i8* %414, i64 %604
  %606 = load i8, i8* %605, align 1
  store i8 %606, i8* %552, align 1
  br label %1417

607:                                              ; preds = %4, %4
  %608 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %609 = bitcast %struct.jpeg_upsampler** %608 to %struct.my_merged_upsampler**
  %610 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %609, align 8
  %611 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %612 = load i8*, i8** %611, align 8
  %613 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %610, i64 0, i32 2
  %614 = load i32*, i32** %613, align 8
  %615 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %610, i64 0, i32 3
  %616 = load i32*, i32** %615, align 8
  %617 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %610, i64 0, i32 4
  %618 = load i64*, i64** %617, align 8
  %619 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %610, i64 0, i32 5
  %620 = load i64*, i64** %619, align 8
  %621 = load i8**, i8*** %1, align 8
  %622 = shl i32 %2, 1
  %623 = zext i32 %622 to i64
  %624 = getelementptr inbounds i8*, i8** %621, i64 %623
  %625 = load i8*, i8** %624, align 8
  %626 = or i32 %622, 1
  %627 = zext i32 %626 to i64
  %628 = getelementptr inbounds i8*, i8** %621, i64 %627
  %629 = load i8*, i8** %628, align 8
  %630 = getelementptr inbounds i8**, i8*** %1, i64 1
  %631 = load i8**, i8*** %630, align 8
  %632 = zext i32 %2 to i64
  %633 = getelementptr inbounds i8*, i8** %631, i64 %632
  %634 = load i8*, i8** %633, align 8
  %635 = getelementptr inbounds i8**, i8*** %1, i64 2
  %636 = load i8**, i8*** %635, align 8
  %637 = getelementptr inbounds i8*, i8** %636, i64 %632
  %638 = load i8*, i8** %637, align 8
  %639 = load i8*, i8** %3, align 8
  %640 = getelementptr inbounds i8*, i8** %3, i64 1
  %641 = load i8*, i8** %640, align 8
  %642 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %643 = load i32, i32* %642, align 8
  %644 = lshr i32 %643, 1
  %645 = icmp eq i32 %644, 0
  br i1 %645, label %751, label %646

646:                                              ; preds = %607, %646
  %647 = phi i32 [ %747, %646 ], [ %644, %607 ]
  %648 = phi i8* [ %656, %646 ], [ %638, %607 ]
  %649 = phi i8* [ %654, %646 ], [ %634, %607 ]
  %650 = phi i8* [ %728, %646 ], [ %629, %607 ]
  %651 = phi i8* [ %690, %646 ], [ %625, %607 ]
  %652 = phi i8* [ %746, %646 ], [ %641, %607 ]
  %653 = phi i8* [ %708, %646 ], [ %639, %607 ]
  %654 = getelementptr inbounds i8, i8* %649, i64 1
  %655 = load i8, i8* %649, align 1
  %656 = getelementptr inbounds i8, i8* %648, i64 1
  %657 = load i8, i8* %648, align 1
  %658 = zext i8 %657 to i64
  %659 = getelementptr inbounds i32, i32* %614, i64 %658
  %660 = load i32, i32* %659, align 4
  %661 = zext i8 %655 to i64
  %662 = getelementptr inbounds i64, i64* %620, i64 %661
  %663 = load i64, i64* %662, align 8
  %664 = getelementptr inbounds i64, i64* %618, i64 %658
  %665 = load i64, i64* %664, align 8
  %666 = add nsw i64 %665, %663
  %667 = lshr i64 %666, 16
  %668 = trunc i64 %667 to i32
  %669 = getelementptr inbounds i32, i32* %616, i64 %661
  %670 = load i32, i32* %669, align 4
  %671 = getelementptr inbounds i8, i8* %651, i64 1
  %672 = load i8, i8* %651, align 1
  %673 = zext i8 %672 to i32
  %674 = add nsw i32 %660, %673
  %675 = sext i32 %674 to i64
  %676 = getelementptr inbounds i8, i8* %612, i64 %675
  %677 = load i8, i8* %676, align 1
  %678 = getelementptr inbounds i8, i8* %653, i64 2
  store i8 %677, i8* %678, align 1
  %679 = add nsw i32 %673, %668
  %680 = sext i32 %679 to i64
  %681 = getelementptr inbounds i8, i8* %612, i64 %680
  %682 = load i8, i8* %681, align 1
  %683 = getelementptr inbounds i8, i8* %653, i64 1
  store i8 %682, i8* %683, align 1
  %684 = add nsw i32 %670, %673
  %685 = sext i32 %684 to i64
  %686 = getelementptr inbounds i8, i8* %612, i64 %685
  %687 = load i8, i8* %686, align 1
  store i8 %687, i8* %653, align 1
  %688 = getelementptr inbounds i8, i8* %653, i64 3
  store i8 -1, i8* %688, align 1
  %689 = getelementptr inbounds i8, i8* %653, i64 4
  %690 = getelementptr inbounds i8, i8* %651, i64 2
  %691 = load i8, i8* %671, align 1
  %692 = zext i8 %691 to i32
  %693 = add nsw i32 %660, %692
  %694 = sext i32 %693 to i64
  %695 = getelementptr inbounds i8, i8* %612, i64 %694
  %696 = load i8, i8* %695, align 1
  %697 = getelementptr inbounds i8, i8* %653, i64 6
  store i8 %696, i8* %697, align 1
  %698 = add nsw i32 %692, %668
  %699 = sext i32 %698 to i64
  %700 = getelementptr inbounds i8, i8* %612, i64 %699
  %701 = load i8, i8* %700, align 1
  %702 = getelementptr inbounds i8, i8* %653, i64 5
  store i8 %701, i8* %702, align 1
  %703 = add nsw i32 %670, %692
  %704 = sext i32 %703 to i64
  %705 = getelementptr inbounds i8, i8* %612, i64 %704
  %706 = load i8, i8* %705, align 1
  store i8 %706, i8* %689, align 1
  %707 = getelementptr inbounds i8, i8* %653, i64 7
  store i8 -1, i8* %707, align 1
  %708 = getelementptr inbounds i8, i8* %653, i64 8
  %709 = getelementptr inbounds i8, i8* %650, i64 1
  %710 = load i8, i8* %650, align 1
  %711 = zext i8 %710 to i32
  %712 = add nsw i32 %660, %711
  %713 = sext i32 %712 to i64
  %714 = getelementptr inbounds i8, i8* %612, i64 %713
  %715 = load i8, i8* %714, align 1
  %716 = getelementptr inbounds i8, i8* %652, i64 2
  store i8 %715, i8* %716, align 1
  %717 = add nsw i32 %711, %668
  %718 = sext i32 %717 to i64
  %719 = getelementptr inbounds i8, i8* %612, i64 %718
  %720 = load i8, i8* %719, align 1
  %721 = getelementptr inbounds i8, i8* %652, i64 1
  store i8 %720, i8* %721, align 1
  %722 = add nsw i32 %670, %711
  %723 = sext i32 %722 to i64
  %724 = getelementptr inbounds i8, i8* %612, i64 %723
  %725 = load i8, i8* %724, align 1
  store i8 %725, i8* %652, align 1
  %726 = getelementptr inbounds i8, i8* %652, i64 3
  store i8 -1, i8* %726, align 1
  %727 = getelementptr inbounds i8, i8* %652, i64 4
  %728 = getelementptr inbounds i8, i8* %650, i64 2
  %729 = load i8, i8* %709, align 1
  %730 = zext i8 %729 to i32
  %731 = add nsw i32 %660, %730
  %732 = sext i32 %731 to i64
  %733 = getelementptr inbounds i8, i8* %612, i64 %732
  %734 = load i8, i8* %733, align 1
  %735 = getelementptr inbounds i8, i8* %652, i64 6
  store i8 %734, i8* %735, align 1
  %736 = add nsw i32 %730, %668
  %737 = sext i32 %736 to i64
  %738 = getelementptr inbounds i8, i8* %612, i64 %737
  %739 = load i8, i8* %738, align 1
  %740 = getelementptr inbounds i8, i8* %652, i64 5
  store i8 %739, i8* %740, align 1
  %741 = add nsw i32 %670, %730
  %742 = sext i32 %741 to i64
  %743 = getelementptr inbounds i8, i8* %612, i64 %742
  %744 = load i8, i8* %743, align 1
  store i8 %744, i8* %727, align 1
  %745 = getelementptr inbounds i8, i8* %652, i64 7
  store i8 -1, i8* %745, align 1
  %746 = getelementptr inbounds i8, i8* %652, i64 8
  %747 = add nsw i32 %647, -1
  %748 = icmp eq i32 %747, 0
  br i1 %748, label %749, label %646

749:                                              ; preds = %646
  %750 = load i32, i32* %642, align 8
  br label %751

751:                                              ; preds = %749, %607
  %752 = phi i32 [ %643, %607 ], [ %750, %749 ]
  %753 = phi i8* [ %639, %607 ], [ %708, %749 ]
  %754 = phi i8* [ %641, %607 ], [ %746, %749 ]
  %755 = phi i8* [ %625, %607 ], [ %690, %749 ]
  %756 = phi i8* [ %629, %607 ], [ %728, %749 ]
  %757 = phi i8* [ %634, %607 ], [ %654, %749 ]
  %758 = phi i8* [ %638, %607 ], [ %656, %749 ]
  %759 = and i32 %752, 1
  %760 = icmp eq i32 %759, 0
  br i1 %760, label %1417, label %761

761:                                              ; preds = %751
  %762 = load i8, i8* %757, align 1
  %763 = load i8, i8* %758, align 1
  %764 = zext i8 %763 to i64
  %765 = getelementptr inbounds i32, i32* %614, i64 %764
  %766 = load i32, i32* %765, align 4
  %767 = zext i8 %762 to i64
  %768 = getelementptr inbounds i64, i64* %620, i64 %767
  %769 = load i64, i64* %768, align 8
  %770 = getelementptr inbounds i64, i64* %618, i64 %764
  %771 = load i64, i64* %770, align 8
  %772 = add nsw i64 %771, %769
  %773 = lshr i64 %772, 16
  %774 = trunc i64 %773 to i32
  %775 = getelementptr inbounds i32, i32* %616, i64 %767
  %776 = load i32, i32* %775, align 4
  %777 = load i8, i8* %755, align 1
  %778 = zext i8 %777 to i32
  %779 = add nsw i32 %766, %778
  %780 = sext i32 %779 to i64
  %781 = getelementptr inbounds i8, i8* %612, i64 %780
  %782 = load i8, i8* %781, align 1
  %783 = getelementptr inbounds i8, i8* %753, i64 2
  store i8 %782, i8* %783, align 1
  %784 = add nsw i32 %778, %774
  %785 = sext i32 %784 to i64
  %786 = getelementptr inbounds i8, i8* %612, i64 %785
  %787 = load i8, i8* %786, align 1
  %788 = getelementptr inbounds i8, i8* %753, i64 1
  store i8 %787, i8* %788, align 1
  %789 = add nsw i32 %776, %778
  %790 = sext i32 %789 to i64
  %791 = getelementptr inbounds i8, i8* %612, i64 %790
  %792 = load i8, i8* %791, align 1
  store i8 %792, i8* %753, align 1
  %793 = getelementptr inbounds i8, i8* %753, i64 3
  store i8 -1, i8* %793, align 1
  %794 = load i8, i8* %756, align 1
  %795 = zext i8 %794 to i32
  %796 = add nsw i32 %766, %795
  %797 = sext i32 %796 to i64
  %798 = getelementptr inbounds i8, i8* %612, i64 %797
  %799 = load i8, i8* %798, align 1
  %800 = getelementptr inbounds i8, i8* %754, i64 2
  store i8 %799, i8* %800, align 1
  %801 = add nsw i32 %795, %774
  %802 = sext i32 %801 to i64
  %803 = getelementptr inbounds i8, i8* %612, i64 %802
  %804 = load i8, i8* %803, align 1
  %805 = getelementptr inbounds i8, i8* %754, i64 1
  store i8 %804, i8* %805, align 1
  %806 = add nsw i32 %776, %795
  %807 = sext i32 %806 to i64
  %808 = getelementptr inbounds i8, i8* %612, i64 %807
  %809 = load i8, i8* %808, align 1
  store i8 %809, i8* %754, align 1
  %810 = getelementptr inbounds i8, i8* %754, i64 3
  store i8 -1, i8* %810, align 1
  br label %1417

811:                                              ; preds = %4, %4
  %812 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %813 = bitcast %struct.jpeg_upsampler** %812 to %struct.my_merged_upsampler**
  %814 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %813, align 8
  %815 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %816 = load i8*, i8** %815, align 8
  %817 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %814, i64 0, i32 2
  %818 = load i32*, i32** %817, align 8
  %819 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %814, i64 0, i32 3
  %820 = load i32*, i32** %819, align 8
  %821 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %814, i64 0, i32 4
  %822 = load i64*, i64** %821, align 8
  %823 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %814, i64 0, i32 5
  %824 = load i64*, i64** %823, align 8
  %825 = load i8**, i8*** %1, align 8
  %826 = shl i32 %2, 1
  %827 = zext i32 %826 to i64
  %828 = getelementptr inbounds i8*, i8** %825, i64 %827
  %829 = load i8*, i8** %828, align 8
  %830 = or i32 %826, 1
  %831 = zext i32 %830 to i64
  %832 = getelementptr inbounds i8*, i8** %825, i64 %831
  %833 = load i8*, i8** %832, align 8
  %834 = getelementptr inbounds i8**, i8*** %1, i64 1
  %835 = load i8**, i8*** %834, align 8
  %836 = zext i32 %2 to i64
  %837 = getelementptr inbounds i8*, i8** %835, i64 %836
  %838 = load i8*, i8** %837, align 8
  %839 = getelementptr inbounds i8**, i8*** %1, i64 2
  %840 = load i8**, i8*** %839, align 8
  %841 = getelementptr inbounds i8*, i8** %840, i64 %836
  %842 = load i8*, i8** %841, align 8
  %843 = load i8*, i8** %3, align 8
  %844 = getelementptr inbounds i8*, i8** %3, i64 1
  %845 = load i8*, i8** %844, align 8
  %846 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %847 = load i32, i32* %846, align 8
  %848 = lshr i32 %847, 1
  %849 = icmp eq i32 %848, 0
  br i1 %849, label %955, label %850

850:                                              ; preds = %811, %850
  %851 = phi i32 [ %951, %850 ], [ %848, %811 ]
  %852 = phi i8* [ %860, %850 ], [ %842, %811 ]
  %853 = phi i8* [ %858, %850 ], [ %838, %811 ]
  %854 = phi i8* [ %932, %850 ], [ %833, %811 ]
  %855 = phi i8* [ %894, %850 ], [ %829, %811 ]
  %856 = phi i8* [ %950, %850 ], [ %845, %811 ]
  %857 = phi i8* [ %912, %850 ], [ %843, %811 ]
  %858 = getelementptr inbounds i8, i8* %853, i64 1
  %859 = load i8, i8* %853, align 1
  %860 = getelementptr inbounds i8, i8* %852, i64 1
  %861 = load i8, i8* %852, align 1
  %862 = zext i8 %861 to i64
  %863 = getelementptr inbounds i32, i32* %818, i64 %862
  %864 = load i32, i32* %863, align 4
  %865 = zext i8 %859 to i64
  %866 = getelementptr inbounds i64, i64* %824, i64 %865
  %867 = load i64, i64* %866, align 8
  %868 = getelementptr inbounds i64, i64* %822, i64 %862
  %869 = load i64, i64* %868, align 8
  %870 = add nsw i64 %869, %867
  %871 = lshr i64 %870, 16
  %872 = trunc i64 %871 to i32
  %873 = getelementptr inbounds i32, i32* %820, i64 %865
  %874 = load i32, i32* %873, align 4
  %875 = getelementptr inbounds i8, i8* %855, i64 1
  %876 = load i8, i8* %855, align 1
  %877 = zext i8 %876 to i32
  %878 = add nsw i32 %864, %877
  %879 = sext i32 %878 to i64
  %880 = getelementptr inbounds i8, i8* %816, i64 %879
  %881 = load i8, i8* %880, align 1
  %882 = getelementptr inbounds i8, i8* %857, i64 3
  store i8 %881, i8* %882, align 1
  %883 = add nsw i32 %877, %872
  %884 = sext i32 %883 to i64
  %885 = getelementptr inbounds i8, i8* %816, i64 %884
  %886 = load i8, i8* %885, align 1
  %887 = getelementptr inbounds i8, i8* %857, i64 2
  store i8 %886, i8* %887, align 1
  %888 = add nsw i32 %874, %877
  %889 = sext i32 %888 to i64
  %890 = getelementptr inbounds i8, i8* %816, i64 %889
  %891 = load i8, i8* %890, align 1
  %892 = getelementptr inbounds i8, i8* %857, i64 1
  store i8 %891, i8* %892, align 1
  store i8 -1, i8* %857, align 1
  %893 = getelementptr inbounds i8, i8* %857, i64 4
  %894 = getelementptr inbounds i8, i8* %855, i64 2
  %895 = load i8, i8* %875, align 1
  %896 = zext i8 %895 to i32
  %897 = add nsw i32 %864, %896
  %898 = sext i32 %897 to i64
  %899 = getelementptr inbounds i8, i8* %816, i64 %898
  %900 = load i8, i8* %899, align 1
  %901 = getelementptr inbounds i8, i8* %857, i64 7
  store i8 %900, i8* %901, align 1
  %902 = add nsw i32 %896, %872
  %903 = sext i32 %902 to i64
  %904 = getelementptr inbounds i8, i8* %816, i64 %903
  %905 = load i8, i8* %904, align 1
  %906 = getelementptr inbounds i8, i8* %857, i64 6
  store i8 %905, i8* %906, align 1
  %907 = add nsw i32 %874, %896
  %908 = sext i32 %907 to i64
  %909 = getelementptr inbounds i8, i8* %816, i64 %908
  %910 = load i8, i8* %909, align 1
  %911 = getelementptr inbounds i8, i8* %857, i64 5
  store i8 %910, i8* %911, align 1
  store i8 -1, i8* %893, align 1
  %912 = getelementptr inbounds i8, i8* %857, i64 8
  %913 = getelementptr inbounds i8, i8* %854, i64 1
  %914 = load i8, i8* %854, align 1
  %915 = zext i8 %914 to i32
  %916 = add nsw i32 %864, %915
  %917 = sext i32 %916 to i64
  %918 = getelementptr inbounds i8, i8* %816, i64 %917
  %919 = load i8, i8* %918, align 1
  %920 = getelementptr inbounds i8, i8* %856, i64 3
  store i8 %919, i8* %920, align 1
  %921 = add nsw i32 %915, %872
  %922 = sext i32 %921 to i64
  %923 = getelementptr inbounds i8, i8* %816, i64 %922
  %924 = load i8, i8* %923, align 1
  %925 = getelementptr inbounds i8, i8* %856, i64 2
  store i8 %924, i8* %925, align 1
  %926 = add nsw i32 %874, %915
  %927 = sext i32 %926 to i64
  %928 = getelementptr inbounds i8, i8* %816, i64 %927
  %929 = load i8, i8* %928, align 1
  %930 = getelementptr inbounds i8, i8* %856, i64 1
  store i8 %929, i8* %930, align 1
  store i8 -1, i8* %856, align 1
  %931 = getelementptr inbounds i8, i8* %856, i64 4
  %932 = getelementptr inbounds i8, i8* %854, i64 2
  %933 = load i8, i8* %913, align 1
  %934 = zext i8 %933 to i32
  %935 = add nsw i32 %864, %934
  %936 = sext i32 %935 to i64
  %937 = getelementptr inbounds i8, i8* %816, i64 %936
  %938 = load i8, i8* %937, align 1
  %939 = getelementptr inbounds i8, i8* %856, i64 7
  store i8 %938, i8* %939, align 1
  %940 = add nsw i32 %934, %872
  %941 = sext i32 %940 to i64
  %942 = getelementptr inbounds i8, i8* %816, i64 %941
  %943 = load i8, i8* %942, align 1
  %944 = getelementptr inbounds i8, i8* %856, i64 6
  store i8 %943, i8* %944, align 1
  %945 = add nsw i32 %874, %934
  %946 = sext i32 %945 to i64
  %947 = getelementptr inbounds i8, i8* %816, i64 %946
  %948 = load i8, i8* %947, align 1
  %949 = getelementptr inbounds i8, i8* %856, i64 5
  store i8 %948, i8* %949, align 1
  store i8 -1, i8* %931, align 1
  %950 = getelementptr inbounds i8, i8* %856, i64 8
  %951 = add nsw i32 %851, -1
  %952 = icmp eq i32 %951, 0
  br i1 %952, label %953, label %850

953:                                              ; preds = %850
  %954 = load i32, i32* %846, align 8
  br label %955

955:                                              ; preds = %953, %811
  %956 = phi i32 [ %847, %811 ], [ %954, %953 ]
  %957 = phi i8* [ %843, %811 ], [ %912, %953 ]
  %958 = phi i8* [ %845, %811 ], [ %950, %953 ]
  %959 = phi i8* [ %829, %811 ], [ %894, %953 ]
  %960 = phi i8* [ %833, %811 ], [ %932, %953 ]
  %961 = phi i8* [ %838, %811 ], [ %858, %953 ]
  %962 = phi i8* [ %842, %811 ], [ %860, %953 ]
  %963 = and i32 %956, 1
  %964 = icmp eq i32 %963, 0
  br i1 %964, label %1417, label %965

965:                                              ; preds = %955
  %966 = load i8, i8* %961, align 1
  %967 = load i8, i8* %962, align 1
  %968 = zext i8 %967 to i64
  %969 = getelementptr inbounds i32, i32* %818, i64 %968
  %970 = load i32, i32* %969, align 4
  %971 = zext i8 %966 to i64
  %972 = getelementptr inbounds i64, i64* %824, i64 %971
  %973 = load i64, i64* %972, align 8
  %974 = getelementptr inbounds i64, i64* %822, i64 %968
  %975 = load i64, i64* %974, align 8
  %976 = add nsw i64 %975, %973
  %977 = lshr i64 %976, 16
  %978 = trunc i64 %977 to i32
  %979 = getelementptr inbounds i32, i32* %820, i64 %971
  %980 = load i32, i32* %979, align 4
  %981 = load i8, i8* %959, align 1
  %982 = zext i8 %981 to i32
  %983 = add nsw i32 %970, %982
  %984 = sext i32 %983 to i64
  %985 = getelementptr inbounds i8, i8* %816, i64 %984
  %986 = load i8, i8* %985, align 1
  %987 = getelementptr inbounds i8, i8* %957, i64 3
  store i8 %986, i8* %987, align 1
  %988 = add nsw i32 %982, %978
  %989 = sext i32 %988 to i64
  %990 = getelementptr inbounds i8, i8* %816, i64 %989
  %991 = load i8, i8* %990, align 1
  %992 = getelementptr inbounds i8, i8* %957, i64 2
  store i8 %991, i8* %992, align 1
  %993 = add nsw i32 %980, %982
  %994 = sext i32 %993 to i64
  %995 = getelementptr inbounds i8, i8* %816, i64 %994
  %996 = load i8, i8* %995, align 1
  %997 = getelementptr inbounds i8, i8* %957, i64 1
  store i8 %996, i8* %997, align 1
  store i8 -1, i8* %957, align 1
  %998 = load i8, i8* %960, align 1
  %999 = zext i8 %998 to i32
  %1000 = add nsw i32 %970, %999
  %1001 = sext i32 %1000 to i64
  %1002 = getelementptr inbounds i8, i8* %816, i64 %1001
  %1003 = load i8, i8* %1002, align 1
  %1004 = getelementptr inbounds i8, i8* %958, i64 3
  store i8 %1003, i8* %1004, align 1
  %1005 = add nsw i32 %999, %978
  %1006 = sext i32 %1005 to i64
  %1007 = getelementptr inbounds i8, i8* %816, i64 %1006
  %1008 = load i8, i8* %1007, align 1
  %1009 = getelementptr inbounds i8, i8* %958, i64 2
  store i8 %1008, i8* %1009, align 1
  %1010 = add nsw i32 %980, %999
  %1011 = sext i32 %1010 to i64
  %1012 = getelementptr inbounds i8, i8* %816, i64 %1011
  %1013 = load i8, i8* %1012, align 1
  %1014 = getelementptr inbounds i8, i8* %958, i64 1
  store i8 %1013, i8* %1014, align 1
  store i8 -1, i8* %958, align 1
  br label %1417

1015:                                             ; preds = %4, %4
  %1016 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %1017 = bitcast %struct.jpeg_upsampler** %1016 to %struct.my_merged_upsampler**
  %1018 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %1017, align 8
  %1019 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %1020 = load i8*, i8** %1019, align 8
  %1021 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %1018, i64 0, i32 2
  %1022 = load i32*, i32** %1021, align 8
  %1023 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %1018, i64 0, i32 3
  %1024 = load i32*, i32** %1023, align 8
  %1025 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %1018, i64 0, i32 4
  %1026 = load i64*, i64** %1025, align 8
  %1027 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %1018, i64 0, i32 5
  %1028 = load i64*, i64** %1027, align 8
  %1029 = load i8**, i8*** %1, align 8
  %1030 = shl i32 %2, 1
  %1031 = zext i32 %1030 to i64
  %1032 = getelementptr inbounds i8*, i8** %1029, i64 %1031
  %1033 = load i8*, i8** %1032, align 8
  %1034 = or i32 %1030, 1
  %1035 = zext i32 %1034 to i64
  %1036 = getelementptr inbounds i8*, i8** %1029, i64 %1035
  %1037 = load i8*, i8** %1036, align 8
  %1038 = getelementptr inbounds i8**, i8*** %1, i64 1
  %1039 = load i8**, i8*** %1038, align 8
  %1040 = zext i32 %2 to i64
  %1041 = getelementptr inbounds i8*, i8** %1039, i64 %1040
  %1042 = load i8*, i8** %1041, align 8
  %1043 = getelementptr inbounds i8**, i8*** %1, i64 2
  %1044 = load i8**, i8*** %1043, align 8
  %1045 = getelementptr inbounds i8*, i8** %1044, i64 %1040
  %1046 = load i8*, i8** %1045, align 8
  %1047 = load i8*, i8** %3, align 8
  %1048 = getelementptr inbounds i8*, i8** %3, i64 1
  %1049 = load i8*, i8** %1048, align 8
  %1050 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %1051 = load i32, i32* %1050, align 8
  %1052 = lshr i32 %1051, 1
  %1053 = icmp eq i32 %1052, 0
  br i1 %1053, label %1159, label %1054

1054:                                             ; preds = %1015, %1054
  %1055 = phi i32 [ %1155, %1054 ], [ %1052, %1015 ]
  %1056 = phi i8* [ %1064, %1054 ], [ %1046, %1015 ]
  %1057 = phi i8* [ %1062, %1054 ], [ %1042, %1015 ]
  %1058 = phi i8* [ %1136, %1054 ], [ %1037, %1015 ]
  %1059 = phi i8* [ %1098, %1054 ], [ %1033, %1015 ]
  %1060 = phi i8* [ %1154, %1054 ], [ %1049, %1015 ]
  %1061 = phi i8* [ %1116, %1054 ], [ %1047, %1015 ]
  %1062 = getelementptr inbounds i8, i8* %1057, i64 1
  %1063 = load i8, i8* %1057, align 1
  %1064 = getelementptr inbounds i8, i8* %1056, i64 1
  %1065 = load i8, i8* %1056, align 1
  %1066 = zext i8 %1065 to i64
  %1067 = getelementptr inbounds i32, i32* %1022, i64 %1066
  %1068 = load i32, i32* %1067, align 4
  %1069 = zext i8 %1063 to i64
  %1070 = getelementptr inbounds i64, i64* %1028, i64 %1069
  %1071 = load i64, i64* %1070, align 8
  %1072 = getelementptr inbounds i64, i64* %1026, i64 %1066
  %1073 = load i64, i64* %1072, align 8
  %1074 = add nsw i64 %1073, %1071
  %1075 = lshr i64 %1074, 16
  %1076 = trunc i64 %1075 to i32
  %1077 = getelementptr inbounds i32, i32* %1024, i64 %1069
  %1078 = load i32, i32* %1077, align 4
  %1079 = getelementptr inbounds i8, i8* %1059, i64 1
  %1080 = load i8, i8* %1059, align 1
  %1081 = zext i8 %1080 to i32
  %1082 = add nsw i32 %1068, %1081
  %1083 = sext i32 %1082 to i64
  %1084 = getelementptr inbounds i8, i8* %1020, i64 %1083
  %1085 = load i8, i8* %1084, align 1
  %1086 = getelementptr inbounds i8, i8* %1061, i64 1
  store i8 %1085, i8* %1086, align 1
  %1087 = add nsw i32 %1081, %1076
  %1088 = sext i32 %1087 to i64
  %1089 = getelementptr inbounds i8, i8* %1020, i64 %1088
  %1090 = load i8, i8* %1089, align 1
  %1091 = getelementptr inbounds i8, i8* %1061, i64 2
  store i8 %1090, i8* %1091, align 1
  %1092 = add nsw i32 %1078, %1081
  %1093 = sext i32 %1092 to i64
  %1094 = getelementptr inbounds i8, i8* %1020, i64 %1093
  %1095 = load i8, i8* %1094, align 1
  %1096 = getelementptr inbounds i8, i8* %1061, i64 3
  store i8 %1095, i8* %1096, align 1
  store i8 -1, i8* %1061, align 1
  %1097 = getelementptr inbounds i8, i8* %1061, i64 4
  %1098 = getelementptr inbounds i8, i8* %1059, i64 2
  %1099 = load i8, i8* %1079, align 1
  %1100 = zext i8 %1099 to i32
  %1101 = add nsw i32 %1068, %1100
  %1102 = sext i32 %1101 to i64
  %1103 = getelementptr inbounds i8, i8* %1020, i64 %1102
  %1104 = load i8, i8* %1103, align 1
  %1105 = getelementptr inbounds i8, i8* %1061, i64 5
  store i8 %1104, i8* %1105, align 1
  %1106 = add nsw i32 %1100, %1076
  %1107 = sext i32 %1106 to i64
  %1108 = getelementptr inbounds i8, i8* %1020, i64 %1107
  %1109 = load i8, i8* %1108, align 1
  %1110 = getelementptr inbounds i8, i8* %1061, i64 6
  store i8 %1109, i8* %1110, align 1
  %1111 = add nsw i32 %1078, %1100
  %1112 = sext i32 %1111 to i64
  %1113 = getelementptr inbounds i8, i8* %1020, i64 %1112
  %1114 = load i8, i8* %1113, align 1
  %1115 = getelementptr inbounds i8, i8* %1061, i64 7
  store i8 %1114, i8* %1115, align 1
  store i8 -1, i8* %1097, align 1
  %1116 = getelementptr inbounds i8, i8* %1061, i64 8
  %1117 = getelementptr inbounds i8, i8* %1058, i64 1
  %1118 = load i8, i8* %1058, align 1
  %1119 = zext i8 %1118 to i32
  %1120 = add nsw i32 %1068, %1119
  %1121 = sext i32 %1120 to i64
  %1122 = getelementptr inbounds i8, i8* %1020, i64 %1121
  %1123 = load i8, i8* %1122, align 1
  %1124 = getelementptr inbounds i8, i8* %1060, i64 1
  store i8 %1123, i8* %1124, align 1
  %1125 = add nsw i32 %1119, %1076
  %1126 = sext i32 %1125 to i64
  %1127 = getelementptr inbounds i8, i8* %1020, i64 %1126
  %1128 = load i8, i8* %1127, align 1
  %1129 = getelementptr inbounds i8, i8* %1060, i64 2
  store i8 %1128, i8* %1129, align 1
  %1130 = add nsw i32 %1078, %1119
  %1131 = sext i32 %1130 to i64
  %1132 = getelementptr inbounds i8, i8* %1020, i64 %1131
  %1133 = load i8, i8* %1132, align 1
  %1134 = getelementptr inbounds i8, i8* %1060, i64 3
  store i8 %1133, i8* %1134, align 1
  store i8 -1, i8* %1060, align 1
  %1135 = getelementptr inbounds i8, i8* %1060, i64 4
  %1136 = getelementptr inbounds i8, i8* %1058, i64 2
  %1137 = load i8, i8* %1117, align 1
  %1138 = zext i8 %1137 to i32
  %1139 = add nsw i32 %1068, %1138
  %1140 = sext i32 %1139 to i64
  %1141 = getelementptr inbounds i8, i8* %1020, i64 %1140
  %1142 = load i8, i8* %1141, align 1
  %1143 = getelementptr inbounds i8, i8* %1060, i64 5
  store i8 %1142, i8* %1143, align 1
  %1144 = add nsw i32 %1138, %1076
  %1145 = sext i32 %1144 to i64
  %1146 = getelementptr inbounds i8, i8* %1020, i64 %1145
  %1147 = load i8, i8* %1146, align 1
  %1148 = getelementptr inbounds i8, i8* %1060, i64 6
  store i8 %1147, i8* %1148, align 1
  %1149 = add nsw i32 %1078, %1138
  %1150 = sext i32 %1149 to i64
  %1151 = getelementptr inbounds i8, i8* %1020, i64 %1150
  %1152 = load i8, i8* %1151, align 1
  %1153 = getelementptr inbounds i8, i8* %1060, i64 7
  store i8 %1152, i8* %1153, align 1
  store i8 -1, i8* %1135, align 1
  %1154 = getelementptr inbounds i8, i8* %1060, i64 8
  %1155 = add nsw i32 %1055, -1
  %1156 = icmp eq i32 %1155, 0
  br i1 %1156, label %1157, label %1054

1157:                                             ; preds = %1054
  %1158 = load i32, i32* %1050, align 8
  br label %1159

1159:                                             ; preds = %1157, %1015
  %1160 = phi i32 [ %1051, %1015 ], [ %1158, %1157 ]
  %1161 = phi i8* [ %1047, %1015 ], [ %1116, %1157 ]
  %1162 = phi i8* [ %1049, %1015 ], [ %1154, %1157 ]
  %1163 = phi i8* [ %1033, %1015 ], [ %1098, %1157 ]
  %1164 = phi i8* [ %1037, %1015 ], [ %1136, %1157 ]
  %1165 = phi i8* [ %1042, %1015 ], [ %1062, %1157 ]
  %1166 = phi i8* [ %1046, %1015 ], [ %1064, %1157 ]
  %1167 = and i32 %1160, 1
  %1168 = icmp eq i32 %1167, 0
  br i1 %1168, label %1417, label %1169

1169:                                             ; preds = %1159
  %1170 = load i8, i8* %1165, align 1
  %1171 = load i8, i8* %1166, align 1
  %1172 = zext i8 %1171 to i64
  %1173 = getelementptr inbounds i32, i32* %1022, i64 %1172
  %1174 = load i32, i32* %1173, align 4
  %1175 = zext i8 %1170 to i64
  %1176 = getelementptr inbounds i64, i64* %1028, i64 %1175
  %1177 = load i64, i64* %1176, align 8
  %1178 = getelementptr inbounds i64, i64* %1026, i64 %1172
  %1179 = load i64, i64* %1178, align 8
  %1180 = add nsw i64 %1179, %1177
  %1181 = lshr i64 %1180, 16
  %1182 = trunc i64 %1181 to i32
  %1183 = getelementptr inbounds i32, i32* %1024, i64 %1175
  %1184 = load i32, i32* %1183, align 4
  %1185 = load i8, i8* %1163, align 1
  %1186 = zext i8 %1185 to i32
  %1187 = add nsw i32 %1174, %1186
  %1188 = sext i32 %1187 to i64
  %1189 = getelementptr inbounds i8, i8* %1020, i64 %1188
  %1190 = load i8, i8* %1189, align 1
  %1191 = getelementptr inbounds i8, i8* %1161, i64 1
  store i8 %1190, i8* %1191, align 1
  %1192 = add nsw i32 %1186, %1182
  %1193 = sext i32 %1192 to i64
  %1194 = getelementptr inbounds i8, i8* %1020, i64 %1193
  %1195 = load i8, i8* %1194, align 1
  %1196 = getelementptr inbounds i8, i8* %1161, i64 2
  store i8 %1195, i8* %1196, align 1
  %1197 = add nsw i32 %1184, %1186
  %1198 = sext i32 %1197 to i64
  %1199 = getelementptr inbounds i8, i8* %1020, i64 %1198
  %1200 = load i8, i8* %1199, align 1
  %1201 = getelementptr inbounds i8, i8* %1161, i64 3
  store i8 %1200, i8* %1201, align 1
  store i8 -1, i8* %1161, align 1
  %1202 = load i8, i8* %1164, align 1
  %1203 = zext i8 %1202 to i32
  %1204 = add nsw i32 %1174, %1203
  %1205 = sext i32 %1204 to i64
  %1206 = getelementptr inbounds i8, i8* %1020, i64 %1205
  %1207 = load i8, i8* %1206, align 1
  %1208 = getelementptr inbounds i8, i8* %1162, i64 1
  store i8 %1207, i8* %1208, align 1
  %1209 = add nsw i32 %1203, %1182
  %1210 = sext i32 %1209 to i64
  %1211 = getelementptr inbounds i8, i8* %1020, i64 %1210
  %1212 = load i8, i8* %1211, align 1
  %1213 = getelementptr inbounds i8, i8* %1162, i64 2
  store i8 %1212, i8* %1213, align 1
  %1214 = add nsw i32 %1184, %1203
  %1215 = sext i32 %1214 to i64
  %1216 = getelementptr inbounds i8, i8* %1020, i64 %1215
  %1217 = load i8, i8* %1216, align 1
  %1218 = getelementptr inbounds i8, i8* %1162, i64 3
  store i8 %1217, i8* %1218, align 1
  store i8 -1, i8* %1162, align 1
  br label %1417

1219:                                             ; preds = %4
  %1220 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %1221 = bitcast %struct.jpeg_upsampler** %1220 to %struct.my_merged_upsampler**
  %1222 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %1221, align 8
  %1223 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %1224 = load i8*, i8** %1223, align 8
  %1225 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %1222, i64 0, i32 2
  %1226 = load i32*, i32** %1225, align 8
  %1227 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %1222, i64 0, i32 3
  %1228 = load i32*, i32** %1227, align 8
  %1229 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %1222, i64 0, i32 4
  %1230 = load i64*, i64** %1229, align 8
  %1231 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %1222, i64 0, i32 5
  %1232 = load i64*, i64** %1231, align 8
  %1233 = load i8**, i8*** %1, align 8
  %1234 = shl i32 %2, 1
  %1235 = zext i32 %1234 to i64
  %1236 = getelementptr inbounds i8*, i8** %1233, i64 %1235
  %1237 = load i8*, i8** %1236, align 8
  %1238 = or i32 %1234, 1
  %1239 = zext i32 %1238 to i64
  %1240 = getelementptr inbounds i8*, i8** %1233, i64 %1239
  %1241 = load i8*, i8** %1240, align 8
  %1242 = getelementptr inbounds i8**, i8*** %1, i64 1
  %1243 = load i8**, i8*** %1242, align 8
  %1244 = zext i32 %2 to i64
  %1245 = getelementptr inbounds i8*, i8** %1243, i64 %1244
  %1246 = load i8*, i8** %1245, align 8
  %1247 = getelementptr inbounds i8**, i8*** %1, i64 2
  %1248 = load i8**, i8*** %1247, align 8
  %1249 = getelementptr inbounds i8*, i8** %1248, i64 %1244
  %1250 = load i8*, i8** %1249, align 8
  %1251 = load i8*, i8** %3, align 8
  %1252 = getelementptr inbounds i8*, i8** %3, i64 1
  %1253 = load i8*, i8** %1252, align 8
  %1254 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %1255 = load i32, i32* %1254, align 8
  %1256 = lshr i32 %1255, 1
  %1257 = icmp eq i32 %1256, 0
  br i1 %1257, label %1359, label %1258

1258:                                             ; preds = %1219, %1258
  %1259 = phi i32 [ %1355, %1258 ], [ %1256, %1219 ]
  %1260 = phi i8* [ %1268, %1258 ], [ %1250, %1219 ]
  %1261 = phi i8* [ %1266, %1258 ], [ %1246, %1219 ]
  %1262 = phi i8* [ %1337, %1258 ], [ %1241, %1219 ]
  %1263 = phi i8* [ %1301, %1258 ], [ %1237, %1219 ]
  %1264 = phi i8* [ %1354, %1258 ], [ %1253, %1219 ]
  %1265 = phi i8* [ %1318, %1258 ], [ %1251, %1219 ]
  %1266 = getelementptr inbounds i8, i8* %1261, i64 1
  %1267 = load i8, i8* %1261, align 1
  %1268 = getelementptr inbounds i8, i8* %1260, i64 1
  %1269 = load i8, i8* %1260, align 1
  %1270 = zext i8 %1269 to i64
  %1271 = getelementptr inbounds i32, i32* %1226, i64 %1270
  %1272 = load i32, i32* %1271, align 4
  %1273 = zext i8 %1267 to i64
  %1274 = getelementptr inbounds i64, i64* %1232, i64 %1273
  %1275 = load i64, i64* %1274, align 8
  %1276 = getelementptr inbounds i64, i64* %1230, i64 %1270
  %1277 = load i64, i64* %1276, align 8
  %1278 = add nsw i64 %1277, %1275
  %1279 = lshr i64 %1278, 16
  %1280 = trunc i64 %1279 to i32
  %1281 = getelementptr inbounds i32, i32* %1228, i64 %1273
  %1282 = load i32, i32* %1281, align 4
  %1283 = getelementptr inbounds i8, i8* %1263, i64 1
  %1284 = load i8, i8* %1263, align 1
  %1285 = zext i8 %1284 to i32
  %1286 = add nsw i32 %1272, %1285
  %1287 = sext i32 %1286 to i64
  %1288 = getelementptr inbounds i8, i8* %1224, i64 %1287
  %1289 = load i8, i8* %1288, align 1
  store i8 %1289, i8* %1265, align 1
  %1290 = add nsw i32 %1285, %1280
  %1291 = sext i32 %1290 to i64
  %1292 = getelementptr inbounds i8, i8* %1224, i64 %1291
  %1293 = load i8, i8* %1292, align 1
  %1294 = getelementptr inbounds i8, i8* %1265, i64 1
  store i8 %1293, i8* %1294, align 1
  %1295 = add nsw i32 %1282, %1285
  %1296 = sext i32 %1295 to i64
  %1297 = getelementptr inbounds i8, i8* %1224, i64 %1296
  %1298 = load i8, i8* %1297, align 1
  %1299 = getelementptr inbounds i8, i8* %1265, i64 2
  store i8 %1298, i8* %1299, align 1
  %1300 = getelementptr inbounds i8, i8* %1265, i64 3
  %1301 = getelementptr inbounds i8, i8* %1263, i64 2
  %1302 = load i8, i8* %1283, align 1
  %1303 = zext i8 %1302 to i32
  %1304 = add nsw i32 %1272, %1303
  %1305 = sext i32 %1304 to i64
  %1306 = getelementptr inbounds i8, i8* %1224, i64 %1305
  %1307 = load i8, i8* %1306, align 1
  store i8 %1307, i8* %1300, align 1
  %1308 = add nsw i32 %1303, %1280
  %1309 = sext i32 %1308 to i64
  %1310 = getelementptr inbounds i8, i8* %1224, i64 %1309
  %1311 = load i8, i8* %1310, align 1
  %1312 = getelementptr inbounds i8, i8* %1265, i64 4
  store i8 %1311, i8* %1312, align 1
  %1313 = add nsw i32 %1282, %1303
  %1314 = sext i32 %1313 to i64
  %1315 = getelementptr inbounds i8, i8* %1224, i64 %1314
  %1316 = load i8, i8* %1315, align 1
  %1317 = getelementptr inbounds i8, i8* %1265, i64 5
  store i8 %1316, i8* %1317, align 1
  %1318 = getelementptr inbounds i8, i8* %1265, i64 6
  %1319 = getelementptr inbounds i8, i8* %1262, i64 1
  %1320 = load i8, i8* %1262, align 1
  %1321 = zext i8 %1320 to i32
  %1322 = add nsw i32 %1272, %1321
  %1323 = sext i32 %1322 to i64
  %1324 = getelementptr inbounds i8, i8* %1224, i64 %1323
  %1325 = load i8, i8* %1324, align 1
  store i8 %1325, i8* %1264, align 1
  %1326 = add nsw i32 %1321, %1280
  %1327 = sext i32 %1326 to i64
  %1328 = getelementptr inbounds i8, i8* %1224, i64 %1327
  %1329 = load i8, i8* %1328, align 1
  %1330 = getelementptr inbounds i8, i8* %1264, i64 1
  store i8 %1329, i8* %1330, align 1
  %1331 = add nsw i32 %1282, %1321
  %1332 = sext i32 %1331 to i64
  %1333 = getelementptr inbounds i8, i8* %1224, i64 %1332
  %1334 = load i8, i8* %1333, align 1
  %1335 = getelementptr inbounds i8, i8* %1264, i64 2
  store i8 %1334, i8* %1335, align 1
  %1336 = getelementptr inbounds i8, i8* %1264, i64 3
  %1337 = getelementptr inbounds i8, i8* %1262, i64 2
  %1338 = load i8, i8* %1319, align 1
  %1339 = zext i8 %1338 to i32
  %1340 = add nsw i32 %1272, %1339
  %1341 = sext i32 %1340 to i64
  %1342 = getelementptr inbounds i8, i8* %1224, i64 %1341
  %1343 = load i8, i8* %1342, align 1
  store i8 %1343, i8* %1336, align 1
  %1344 = add nsw i32 %1339, %1280
  %1345 = sext i32 %1344 to i64
  %1346 = getelementptr inbounds i8, i8* %1224, i64 %1345
  %1347 = load i8, i8* %1346, align 1
  %1348 = getelementptr inbounds i8, i8* %1264, i64 4
  store i8 %1347, i8* %1348, align 1
  %1349 = add nsw i32 %1282, %1339
  %1350 = sext i32 %1349 to i64
  %1351 = getelementptr inbounds i8, i8* %1224, i64 %1350
  %1352 = load i8, i8* %1351, align 1
  %1353 = getelementptr inbounds i8, i8* %1264, i64 5
  store i8 %1352, i8* %1353, align 1
  %1354 = getelementptr inbounds i8, i8* %1264, i64 6
  %1355 = add nsw i32 %1259, -1
  %1356 = icmp eq i32 %1355, 0
  br i1 %1356, label %1357, label %1258

1357:                                             ; preds = %1258
  %1358 = load i32, i32* %1254, align 8
  br label %1359

1359:                                             ; preds = %1357, %1219
  %1360 = phi i32 [ %1255, %1219 ], [ %1358, %1357 ]
  %1361 = phi i8* [ %1251, %1219 ], [ %1318, %1357 ]
  %1362 = phi i8* [ %1253, %1219 ], [ %1354, %1357 ]
  %1363 = phi i8* [ %1237, %1219 ], [ %1301, %1357 ]
  %1364 = phi i8* [ %1241, %1219 ], [ %1337, %1357 ]
  %1365 = phi i8* [ %1246, %1219 ], [ %1266, %1357 ]
  %1366 = phi i8* [ %1250, %1219 ], [ %1268, %1357 ]
  %1367 = and i32 %1360, 1
  %1368 = icmp eq i32 %1367, 0
  br i1 %1368, label %1417, label %1369

1369:                                             ; preds = %1359
  %1370 = load i8, i8* %1365, align 1
  %1371 = load i8, i8* %1366, align 1
  %1372 = zext i8 %1371 to i64
  %1373 = getelementptr inbounds i32, i32* %1226, i64 %1372
  %1374 = load i32, i32* %1373, align 4
  %1375 = zext i8 %1370 to i64
  %1376 = getelementptr inbounds i64, i64* %1232, i64 %1375
  %1377 = load i64, i64* %1376, align 8
  %1378 = getelementptr inbounds i64, i64* %1230, i64 %1372
  %1379 = load i64, i64* %1378, align 8
  %1380 = add nsw i64 %1379, %1377
  %1381 = lshr i64 %1380, 16
  %1382 = trunc i64 %1381 to i32
  %1383 = getelementptr inbounds i32, i32* %1228, i64 %1375
  %1384 = load i32, i32* %1383, align 4
  %1385 = load i8, i8* %1363, align 1
  %1386 = zext i8 %1385 to i32
  %1387 = add nsw i32 %1374, %1386
  %1388 = sext i32 %1387 to i64
  %1389 = getelementptr inbounds i8, i8* %1224, i64 %1388
  %1390 = load i8, i8* %1389, align 1
  store i8 %1390, i8* %1361, align 1
  %1391 = add nsw i32 %1386, %1382
  %1392 = sext i32 %1391 to i64
  %1393 = getelementptr inbounds i8, i8* %1224, i64 %1392
  %1394 = load i8, i8* %1393, align 1
  %1395 = getelementptr inbounds i8, i8* %1361, i64 1
  store i8 %1394, i8* %1395, align 1
  %1396 = add nsw i32 %1384, %1386
  %1397 = sext i32 %1396 to i64
  %1398 = getelementptr inbounds i8, i8* %1224, i64 %1397
  %1399 = load i8, i8* %1398, align 1
  %1400 = getelementptr inbounds i8, i8* %1361, i64 2
  store i8 %1399, i8* %1400, align 1
  %1401 = load i8, i8* %1364, align 1
  %1402 = zext i8 %1401 to i32
  %1403 = add nsw i32 %1374, %1402
  %1404 = sext i32 %1403 to i64
  %1405 = getelementptr inbounds i8, i8* %1224, i64 %1404
  %1406 = load i8, i8* %1405, align 1
  store i8 %1406, i8* %1362, align 1
  %1407 = add nsw i32 %1402, %1382
  %1408 = sext i32 %1407 to i64
  %1409 = getelementptr inbounds i8, i8* %1224, i64 %1408
  %1410 = load i8, i8* %1409, align 1
  %1411 = getelementptr inbounds i8, i8* %1362, i64 1
  store i8 %1410, i8* %1411, align 1
  %1412 = add nsw i32 %1384, %1402
  %1413 = sext i32 %1412 to i64
  %1414 = getelementptr inbounds i8, i8* %1224, i64 %1413
  %1415 = load i8, i8* %1414, align 1
  %1416 = getelementptr inbounds i8, i8* %1362, i64 2
  store i8 %1415, i8* %1416, align 1
  br label %1417

1417:                                             ; preds = %1369, %1359, %1169, %1159, %965, %955, %761, %751, %559, %549, %359, %349, %157, %147
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @h2v2_merged_upsample_565D(%struct.jpeg_decompress_struct* nocapture readonly, i8*** nocapture readonly, i32, i8** nocapture readonly) #2 {
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %6 = bitcast %struct.jpeg_upsampler** %5 to %struct.my_merged_upsampler**
  %7 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %7, i64 0, i32 2
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %7, i64 0, i32 3
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %7, i64 0, i32 4
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %7, i64 0, i32 5
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 34
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 3
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds [4 x i64], [4 x i64]* @dither_matrix, i64 0, i64 %21
  %23 = load i64, i64* %22, align 8
  %24 = add i32 %19, 1
  %25 = and i32 %24, 3
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds [4 x i64], [4 x i64]* @dither_matrix, i64 0, i64 %26
  %28 = load i64, i64* %27, align 8
  %29 = load i8**, i8*** %1, align 8
  %30 = shl i32 %2, 1
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i8*, i8** %29, i64 %31
  %33 = load i8*, i8** %32, align 8
  %34 = or i32 %30, 1
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8*, i8** %29, i64 %35
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8**, i8*** %1, i64 1
  %39 = load i8**, i8*** %38, align 8
  %40 = zext i32 %2 to i64
  %41 = getelementptr inbounds i8*, i8** %39, i64 %40
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds i8**, i8*** %1, i64 2
  %44 = load i8**, i8*** %43, align 8
  %45 = getelementptr inbounds i8*, i8** %44, i64 %40
  %46 = load i8*, i8** %45, align 8
  %47 = load i8*, i8** %3, align 8
  %48 = getelementptr inbounds i8*, i8** %3, i64 1
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %51 = load i32, i32* %50, align 8
  %52 = lshr i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = insertelement <2 x i64> undef, i64 %23, i32 0
  %55 = insertelement <2 x i64> %54, i64 %28, i32 1
  br i1 %53, label %223, label %56

56:                                               ; preds = %4, %56
  %57 = phi i32 [ %219, %56 ], [ %52, %4 ]
  %58 = phi i8* [ %67, %56 ], [ %46, %4 ]
  %59 = phi i8* [ %65, %56 ], [ %42, %4 ]
  %60 = phi i8* [ %182, %56 ], [ %37, %4 ]
  %61 = phi i8* [ %113, %56 ], [ %33, %4 ]
  %62 = phi i8* [ %218, %56 ], [ %49, %4 ]
  %63 = phi i8* [ %148, %56 ], [ %47, %4 ]
  %64 = phi <2 x i64> [ %206, %56 ], [ %55, %4 ]
  %65 = getelementptr inbounds i8, i8* %59, i64 1
  %66 = load i8, i8* %59, align 1
  %67 = getelementptr inbounds i8, i8* %58, i64 1
  %68 = load i8, i8* %58, align 1
  %69 = zext i8 %68 to i64
  %70 = getelementptr inbounds i32, i32* %11, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = zext i8 %66 to i64
  %73 = getelementptr inbounds i64, i64* %17, i64 %72
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds i64, i64* %15, i64 %69
  %76 = load i64, i64* %75, align 8
  %77 = add nsw i64 %76, %74
  %78 = lshr i64 %77, 16
  %79 = trunc i64 %78 to i32
  %80 = getelementptr inbounds i32, i32* %13, i64 %72
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds i8, i8* %61, i64 1
  %83 = load i8, i8* %61, align 1
  %84 = zext i8 %83 to i32
  %85 = add nsw i32 %71, %84
  %86 = sext i32 %85 to i64
  %87 = and <2 x i64> %64, <i64 255, i64 255>
  %88 = extractelement <2 x i64> %87, i32 0
  %89 = add nsw i64 %88, %86
  %90 = getelementptr inbounds i8, i8* %9, i64 %89
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i16
  %93 = add nsw i32 %84, %79
  %94 = sext i32 %93 to i64
  %95 = lshr i64 %88, 1
  %96 = add nsw i64 %95, %94
  %97 = getelementptr inbounds i8, i8* %9, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i16
  %100 = add nsw i32 %81, %84
  %101 = sext i32 %100 to i64
  %102 = add nsw i64 %88, %101
  %103 = getelementptr inbounds i8, i8* %9, i64 %102
  %104 = load i8, i8* %103, align 1
  %105 = shl nuw i16 %92, 8
  %106 = and i16 %105, -2048
  %107 = shl nuw nsw i16 %99, 3
  %108 = and i16 %107, 2016
  %109 = or i16 %108, %106
  %110 = lshr i8 %104, 3
  %111 = zext i8 %110 to i16
  %112 = or i16 %109, %111
  %113 = getelementptr inbounds i8, i8* %61, i64 2
  %114 = load i8, i8* %82, align 1
  %115 = zext i8 %114 to i32
  %116 = add nsw i32 %71, %115
  %117 = sext i32 %116 to i64
  %118 = lshr <2 x i64> %64, <i64 8, i64 8>
  %119 = and <2 x i64> %118, <i64 255, i64 255>
  %120 = extractelement <2 x i64> %119, i32 0
  %121 = add nsw i64 %120, %117
  %122 = getelementptr inbounds i8, i8* %9, i64 %121
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i16
  %125 = add nsw i32 %115, %79
  %126 = sext i32 %125 to i64
  %127 = lshr i64 %120, 1
  %128 = add nsw i64 %127, %126
  %129 = getelementptr inbounds i8, i8* %9, i64 %128
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i16
  %132 = add nsw i32 %81, %115
  %133 = sext i32 %132 to i64
  %134 = add nsw i64 %120, %133
  %135 = getelementptr inbounds i8, i8* %9, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = shl nuw i16 %124, 8
  %138 = and i16 %137, -2048
  %139 = shl nuw nsw i16 %131, 3
  %140 = and i16 %139, 2016
  %141 = or i16 %140, %138
  %142 = lshr i8 %136, 3
  %143 = zext i8 %142 to i16
  %144 = or i16 %141, %143
  %145 = bitcast i8* %63 to i16*
  store i16 %112, i16* %145, align 2
  %146 = getelementptr inbounds i8, i8* %63, i64 2
  %147 = bitcast i8* %146 to i16*
  store i16 %144, i16* %147, align 2
  %148 = getelementptr inbounds i8, i8* %63, i64 4
  %149 = getelementptr inbounds i8, i8* %60, i64 1
  %150 = load i8, i8* %60, align 1
  %151 = zext i8 %150 to i32
  %152 = add nsw i32 %71, %151
  %153 = sext i32 %152 to i64
  %154 = extractelement <2 x i64> %87, i32 1
  %155 = add nsw i64 %154, %153
  %156 = getelementptr inbounds i8, i8* %9, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i16
  %159 = add nsw i32 %151, %79
  %160 = sext i32 %159 to i64
  %161 = lshr i64 %154, 1
  %162 = add nsw i64 %161, %160
  %163 = getelementptr inbounds i8, i8* %9, i64 %162
  %164 = load i8, i8* %163, align 1
  %165 = zext i8 %164 to i16
  %166 = add nsw i32 %81, %151
  %167 = sext i32 %166 to i64
  %168 = add nsw i64 %154, %167
  %169 = getelementptr inbounds i8, i8* %9, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = shl nuw nsw <2 x i64> %87, <i64 24, i64 24>
  %172 = and <2 x i64> %118, <i64 16776960, i64 16776960>
  %173 = or <2 x i64> %171, %172
  %174 = shl nuw i16 %158, 8
  %175 = and i16 %174, -2048
  %176 = shl nuw nsw i16 %165, 3
  %177 = and i16 %176, 2016
  %178 = or i16 %177, %175
  %179 = lshr i8 %170, 3
  %180 = zext i8 %179 to i16
  %181 = or i16 %178, %180
  %182 = getelementptr inbounds i8, i8* %60, i64 2
  %183 = load i8, i8* %149, align 1
  %184 = zext i8 %183 to i32
  %185 = add nsw i32 %71, %184
  %186 = sext i32 %185 to i64
  %187 = extractelement <2 x i64> %119, i32 1
  %188 = add nsw i64 %187, %186
  %189 = getelementptr inbounds i8, i8* %9, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i16
  %192 = add nsw i32 %184, %79
  %193 = sext i32 %192 to i64
  %194 = lshr i64 %187, 1
  %195 = add nsw i64 %194, %193
  %196 = getelementptr inbounds i8, i8* %9, i64 %195
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i16
  %199 = add nsw i32 %81, %184
  %200 = sext i32 %199 to i64
  %201 = add nsw i64 %187, %200
  %202 = getelementptr inbounds i8, i8* %9, i64 %201
  %203 = load i8, i8* %202, align 1
  %204 = shl nuw nsw <2 x i64> %119, <i64 24, i64 24>
  %205 = lshr exact <2 x i64> %173, <i64 8, i64 8>
  %206 = or <2 x i64> %205, %204
  %207 = shl nuw i16 %191, 8
  %208 = and i16 %207, -2048
  %209 = shl nuw nsw i16 %198, 3
  %210 = and i16 %209, 2016
  %211 = or i16 %210, %208
  %212 = lshr i8 %203, 3
  %213 = zext i8 %212 to i16
  %214 = or i16 %211, %213
  %215 = bitcast i8* %62 to i16*
  store i16 %181, i16* %215, align 2
  %216 = getelementptr inbounds i8, i8* %62, i64 2
  %217 = bitcast i8* %216 to i16*
  store i16 %214, i16* %217, align 2
  %218 = getelementptr inbounds i8, i8* %62, i64 4
  %219 = add nsw i32 %57, -1
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %56

221:                                              ; preds = %56
  %222 = load i32, i32* %50, align 8
  br label %223

223:                                              ; preds = %221, %4
  %224 = phi i32 [ %51, %4 ], [ %222, %221 ]
  %225 = phi i8* [ %47, %4 ], [ %148, %221 ]
  %226 = phi i8* [ %49, %4 ], [ %218, %221 ]
  %227 = phi i8* [ %33, %4 ], [ %113, %221 ]
  %228 = phi i8* [ %37, %4 ], [ %182, %221 ]
  %229 = phi i8* [ %42, %4 ], [ %65, %221 ]
  %230 = phi i8* [ %46, %4 ], [ %67, %221 ]
  %231 = phi <2 x i64> [ %55, %4 ], [ %206, %221 ]
  %232 = and i32 %224, 1
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %312, label %234

234:                                              ; preds = %223
  %235 = load i8, i8* %229, align 1
  %236 = load i8, i8* %230, align 1
  %237 = zext i8 %236 to i64
  %238 = getelementptr inbounds i32, i32* %11, i64 %237
  %239 = load i32, i32* %238, align 4
  %240 = zext i8 %235 to i64
  %241 = getelementptr inbounds i64, i64* %17, i64 %240
  %242 = load i64, i64* %241, align 8
  %243 = getelementptr inbounds i64, i64* %15, i64 %237
  %244 = load i64, i64* %243, align 8
  %245 = add nsw i64 %244, %242
  %246 = lshr i64 %245, 16
  %247 = trunc i64 %246 to i32
  %248 = getelementptr inbounds i32, i32* %13, i64 %240
  %249 = load i32, i32* %248, align 4
  %250 = load i8, i8* %227, align 1
  %251 = zext i8 %250 to i32
  %252 = add nsw i32 %239, %251
  %253 = sext i32 %252 to i64
  %254 = extractelement <2 x i64> %231, i32 0
  %255 = and i64 %254, 255
  %256 = add nsw i64 %255, %253
  %257 = getelementptr inbounds i8, i8* %9, i64 %256
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i16
  %260 = add nsw i32 %251, %247
  %261 = sext i32 %260 to i64
  %262 = lshr i64 %255, 1
  %263 = add nsw i64 %262, %261
  %264 = getelementptr inbounds i8, i8* %9, i64 %263
  %265 = load i8, i8* %264, align 1
  %266 = zext i8 %265 to i16
  %267 = add nsw i32 %249, %251
  %268 = sext i32 %267 to i64
  %269 = add nsw i64 %255, %268
  %270 = getelementptr inbounds i8, i8* %9, i64 %269
  %271 = load i8, i8* %270, align 1
  %272 = shl nuw i16 %259, 8
  %273 = and i16 %272, -2048
  %274 = shl nuw nsw i16 %266, 3
  %275 = and i16 %274, 2016
  %276 = or i16 %275, %273
  %277 = lshr i8 %271, 3
  %278 = zext i8 %277 to i16
  %279 = or i16 %276, %278
  %280 = bitcast i8* %225 to i16*
  store i16 %279, i16* %280, align 2
  %281 = load i8, i8* %228, align 1
  %282 = zext i8 %281 to i32
  %283 = add nsw i32 %239, %282
  %284 = sext i32 %283 to i64
  %285 = extractelement <2 x i64> %231, i32 1
  %286 = and i64 %285, 255
  %287 = add nsw i64 %286, %284
  %288 = getelementptr inbounds i8, i8* %9, i64 %287
  %289 = load i8, i8* %288, align 1
  %290 = zext i8 %289 to i16
  %291 = add nsw i32 %282, %247
  %292 = sext i32 %291 to i64
  %293 = lshr i64 %286, 1
  %294 = add nsw i64 %293, %292
  %295 = getelementptr inbounds i8, i8* %9, i64 %294
  %296 = load i8, i8* %295, align 1
  %297 = zext i8 %296 to i16
  %298 = add nsw i32 %249, %282
  %299 = sext i32 %298 to i64
  %300 = add nsw i64 %286, %299
  %301 = getelementptr inbounds i8, i8* %9, i64 %300
  %302 = load i8, i8* %301, align 1
  %303 = shl nuw i16 %290, 8
  %304 = and i16 %303, -2048
  %305 = shl nuw nsw i16 %297, 3
  %306 = and i16 %305, 2016
  %307 = or i16 %306, %304
  %308 = lshr i8 %302, 3
  %309 = zext i8 %308 to i16
  %310 = or i16 %307, %309
  %311 = bitcast i8* %226 to i16*
  store i16 %310, i16* %311, align 2
  br label %312

312:                                              ; preds = %223, %234
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @h2v2_merged_upsample_565(%struct.jpeg_decompress_struct* nocapture readonly, i8*** nocapture readonly, i32, i8** nocapture readonly) #2 {
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %6 = bitcast %struct.jpeg_upsampler** %5 to %struct.my_merged_upsampler**
  %7 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %7, i64 0, i32 2
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %7, i64 0, i32 3
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %7, i64 0, i32 4
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %7, i64 0, i32 5
  %17 = load i64*, i64** %16, align 8
  %18 = load i8**, i8*** %1, align 8
  %19 = shl i32 %2, 1
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i8*, i8** %18, i64 %20
  %22 = load i8*, i8** %21, align 8
  %23 = or i32 %19, 1
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds i8*, i8** %18, i64 %24
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds i8**, i8*** %1, i64 1
  %28 = load i8**, i8*** %27, align 8
  %29 = zext i32 %2 to i64
  %30 = getelementptr inbounds i8*, i8** %28, i64 %29
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds i8**, i8*** %1, i64 2
  %33 = load i8**, i8*** %32, align 8
  %34 = getelementptr inbounds i8*, i8** %33, i64 %29
  %35 = load i8*, i8** %34, align 8
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds i8*, i8** %3, i64 1
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %40 = load i32, i32* %39, align 8
  %41 = lshr i32 %40, 1
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %180, label %43

43:                                               ; preds = %4, %43
  %44 = phi i32 [ %176, %43 ], [ %41, %4 ]
  %45 = phi i8* [ %53, %43 ], [ %35, %4 ]
  %46 = phi i8* [ %51, %43 ], [ %31, %4 ]
  %47 = phi i8* [ %147, %43 ], [ %26, %4 ]
  %48 = phi i8* [ %93, %43 ], [ %22, %4 ]
  %49 = phi i8* [ %175, %43 ], [ %38, %4 ]
  %50 = phi i8* [ %121, %43 ], [ %36, %4 ]
  %51 = getelementptr inbounds i8, i8* %46, i64 1
  %52 = load i8, i8* %46, align 1
  %53 = getelementptr inbounds i8, i8* %45, i64 1
  %54 = load i8, i8* %45, align 1
  %55 = zext i8 %54 to i64
  %56 = getelementptr inbounds i32, i32* %11, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = zext i8 %52 to i64
  %59 = getelementptr inbounds i64, i64* %17, i64 %58
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds i64, i64* %15, i64 %55
  %62 = load i64, i64* %61, align 8
  %63 = add nsw i64 %62, %60
  %64 = lshr i64 %63, 16
  %65 = trunc i64 %64 to i32
  %66 = getelementptr inbounds i32, i32* %13, i64 %58
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds i8, i8* %48, i64 1
  %69 = load i8, i8* %48, align 1
  %70 = zext i8 %69 to i32
  %71 = add nsw i32 %57, %70
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %9, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i16
  %76 = add nsw i32 %70, %65
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i8, i8* %9, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i16
  %81 = add nsw i32 %67, %70
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i8, i8* %9, i64 %82
  %84 = load i8, i8* %83, align 1
  %85 = shl nuw i16 %75, 8
  %86 = and i16 %85, -2048
  %87 = shl nuw nsw i16 %80, 3
  %88 = and i16 %87, 2016
  %89 = or i16 %88, %86
  %90 = lshr i8 %84, 3
  %91 = zext i8 %90 to i16
  %92 = or i16 %89, %91
  %93 = getelementptr inbounds i8, i8* %48, i64 2
  %94 = load i8, i8* %68, align 1
  %95 = zext i8 %94 to i32
  %96 = add nsw i32 %57, %95
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %9, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i16
  %101 = add nsw i32 %95, %65
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %9, i64 %102
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i16
  %106 = add nsw i32 %67, %95
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds i8, i8* %9, i64 %107
  %109 = load i8, i8* %108, align 1
  %110 = shl nuw i16 %100, 8
  %111 = and i16 %110, -2048
  %112 = shl nuw nsw i16 %105, 3
  %113 = and i16 %112, 2016
  %114 = or i16 %113, %111
  %115 = lshr i8 %109, 3
  %116 = zext i8 %115 to i16
  %117 = or i16 %114, %116
  %118 = bitcast i8* %50 to i16*
  store i16 %92, i16* %118, align 2
  %119 = getelementptr inbounds i8, i8* %50, i64 2
  %120 = bitcast i8* %119 to i16*
  store i16 %117, i16* %120, align 2
  %121 = getelementptr inbounds i8, i8* %50, i64 4
  %122 = getelementptr inbounds i8, i8* %47, i64 1
  %123 = load i8, i8* %47, align 1
  %124 = zext i8 %123 to i32
  %125 = add nsw i32 %57, %124
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i8, i8* %9, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i16
  %130 = add nsw i32 %124, %65
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i8, i8* %9, i64 %131
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i16
  %135 = add nsw i32 %67, %124
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i8, i8* %9, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = shl nuw i16 %129, 8
  %140 = and i16 %139, -2048
  %141 = shl nuw nsw i16 %134, 3
  %142 = and i16 %141, 2016
  %143 = or i16 %142, %140
  %144 = lshr i8 %138, 3
  %145 = zext i8 %144 to i16
  %146 = or i16 %143, %145
  %147 = getelementptr inbounds i8, i8* %47, i64 2
  %148 = load i8, i8* %122, align 1
  %149 = zext i8 %148 to i32
  %150 = add nsw i32 %57, %149
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds i8, i8* %9, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i16
  %155 = add nsw i32 %149, %65
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds i8, i8* %9, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i16
  %160 = add nsw i32 %67, %149
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i8, i8* %9, i64 %161
  %163 = load i8, i8* %162, align 1
  %164 = shl nuw i16 %154, 8
  %165 = and i16 %164, -2048
  %166 = shl nuw nsw i16 %159, 3
  %167 = and i16 %166, 2016
  %168 = or i16 %167, %165
  %169 = lshr i8 %163, 3
  %170 = zext i8 %169 to i16
  %171 = or i16 %168, %170
  %172 = bitcast i8* %49 to i16*
  store i16 %146, i16* %172, align 2
  %173 = getelementptr inbounds i8, i8* %49, i64 2
  %174 = bitcast i8* %173 to i16*
  store i16 %171, i16* %174, align 2
  %175 = getelementptr inbounds i8, i8* %49, i64 4
  %176 = add nsw i32 %44, -1
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %43

178:                                              ; preds = %43
  %179 = load i32, i32* %39, align 8
  br label %180

180:                                              ; preds = %178, %4
  %181 = phi i32 [ %40, %4 ], [ %179, %178 ]
  %182 = phi i8* [ %36, %4 ], [ %121, %178 ]
  %183 = phi i8* [ %38, %4 ], [ %175, %178 ]
  %184 = phi i8* [ %22, %4 ], [ %93, %178 ]
  %185 = phi i8* [ %26, %4 ], [ %147, %178 ]
  %186 = phi i8* [ %31, %4 ], [ %51, %178 ]
  %187 = phi i8* [ %35, %4 ], [ %53, %178 ]
  %188 = and i32 %181, 1
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %256, label %190

190:                                              ; preds = %180
  %191 = load i8, i8* %186, align 1
  %192 = load i8, i8* %187, align 1
  %193 = zext i8 %192 to i64
  %194 = getelementptr inbounds i32, i32* %11, i64 %193
  %195 = load i32, i32* %194, align 4
  %196 = zext i8 %191 to i64
  %197 = getelementptr inbounds i64, i64* %17, i64 %196
  %198 = load i64, i64* %197, align 8
  %199 = getelementptr inbounds i64, i64* %15, i64 %193
  %200 = load i64, i64* %199, align 8
  %201 = add nsw i64 %200, %198
  %202 = lshr i64 %201, 16
  %203 = trunc i64 %202 to i32
  %204 = getelementptr inbounds i32, i32* %13, i64 %196
  %205 = load i32, i32* %204, align 4
  %206 = load i8, i8* %184, align 1
  %207 = zext i8 %206 to i32
  %208 = add nsw i32 %195, %207
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds i8, i8* %9, i64 %209
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i16
  %213 = add nsw i32 %207, %203
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds i8, i8* %9, i64 %214
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i16
  %218 = add nsw i32 %205, %207
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds i8, i8* %9, i64 %219
  %221 = load i8, i8* %220, align 1
  %222 = shl nuw i16 %212, 8
  %223 = and i16 %222, -2048
  %224 = shl nuw nsw i16 %217, 3
  %225 = and i16 %224, 2016
  %226 = or i16 %225, %223
  %227 = lshr i8 %221, 3
  %228 = zext i8 %227 to i16
  %229 = or i16 %226, %228
  %230 = bitcast i8* %182 to i16*
  store i16 %229, i16* %230, align 2
  %231 = load i8, i8* %185, align 1
  %232 = zext i8 %231 to i32
  %233 = add nsw i32 %195, %232
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds i8, i8* %9, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i16
  %238 = add nsw i32 %232, %203
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds i8, i8* %9, i64 %239
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i16
  %243 = add nsw i32 %205, %232
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds i8, i8* %9, i64 %244
  %246 = load i8, i8* %245, align 1
  %247 = shl nuw i16 %237, 8
  %248 = and i16 %247, -2048
  %249 = shl nuw nsw i16 %242, 3
  %250 = and i16 %249, 2016
  %251 = or i16 %250, %248
  %252 = lshr i8 %246, 3
  %253 = zext i8 %252 to i16
  %254 = or i16 %251, %253
  %255 = bitcast i8* %183 to i16*
  store i16 %254, i16* %255, align 2
  br label %256

256:                                              ; preds = %180, %190
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @merged_1v_upsample(%struct.jpeg_decompress_struct*, i8***, i32* nocapture, i32, i8**, i32* nocapture, i32) #0 {
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %9 = bitcast %struct.jpeg_upsampler** %8 to %struct.my_merged_upsampler**
  %10 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %9, align 8
  %11 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %10, i64 0, i32 1
  %12 = load void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)*, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**)** %11, align 8
  %13 = load i32, i32* %2, align 4
  %14 = load i32, i32* %5, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds i8*, i8** %4, i64 %15
  tail call void %12(%struct.jpeg_decompress_struct* %0, i8*** %1, i32 %13, i8** %16) #4
  %17 = load i32, i32* %5, align 4
  %18 = add i32 %17, 1
  store i32 %18, i32* %5, align 4
  %19 = load i32, i32* %2, align 4
  %20 = add i32 %19, 1
  store i32 %20, i32* %2, align 4
  ret void
}

declare i32 @jsimd_can_h2v1_merged_upsample() local_unnamed_addr #3

declare void @jsimd_h2v1_merged_upsample(%struct.jpeg_decompress_struct*, i8***, i32, i8**) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @h2v1_merged_upsample(%struct.jpeg_decompress_struct* readonly, i8*** readonly, i32, i8** nocapture readonly) #2 {
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 11
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %823 [
    i32 6, label %7
    i32 7, label %141
    i32 12, label %141
    i32 8, label %278
    i32 9, label %412
    i32 13, label %412
    i32 10, label %549
    i32 14, label %549
    i32 11, label %686
    i32 15, label %686
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %9 = bitcast %struct.jpeg_upsampler** %8 to %struct.my_merged_upsampler**
  %10 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %9, align 8
  %11 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %10, i64 0, i32 2
  %14 = load i32*, i32** %13, align 8
  %15 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %10, i64 0, i32 3
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %10, i64 0, i32 4
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %10, i64 0, i32 5
  %20 = load i64*, i64** %19, align 8
  %21 = load i8**, i8*** %1, align 8
  %22 = zext i32 %2 to i64
  %23 = getelementptr inbounds i8*, i8** %21, i64 %22
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds i8**, i8*** %1, i64 1
  %26 = load i8**, i8*** %25, align 8
  %27 = getelementptr inbounds i8*, i8** %26, i64 %22
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds i8**, i8*** %1, i64 2
  %30 = load i8**, i8*** %29, align 8
  %31 = getelementptr inbounds i8*, i8** %30, i64 %22
  %32 = load i8*, i8** %31, align 8
  %33 = load i8*, i8** %3, align 8
  %34 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %35 = load i32, i32* %34, align 8
  %36 = lshr i32 %35, 1
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %101, label %38

38:                                               ; preds = %7, %38
  %39 = phi i32 [ %97, %38 ], [ %36, %7 ]
  %40 = phi i8* [ %46, %38 ], [ %32, %7 ]
  %41 = phi i8* [ %44, %38 ], [ %28, %7 ]
  %42 = phi i8* [ %79, %38 ], [ %24, %7 ]
  %43 = phi i8* [ %96, %38 ], [ %33, %7 ]
  %44 = getelementptr inbounds i8, i8* %41, i64 1
  %45 = load i8, i8* %41, align 1
  %46 = getelementptr inbounds i8, i8* %40, i64 1
  %47 = load i8, i8* %40, align 1
  %48 = zext i8 %47 to i64
  %49 = getelementptr inbounds i32, i32* %14, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = zext i8 %45 to i64
  %52 = getelementptr inbounds i64, i64* %20, i64 %51
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds i64, i64* %18, i64 %48
  %55 = load i64, i64* %54, align 8
  %56 = add nsw i64 %55, %53
  %57 = lshr i64 %56, 16
  %58 = trunc i64 %57 to i32
  %59 = getelementptr inbounds i32, i32* %16, i64 %51
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds i8, i8* %42, i64 1
  %62 = load i8, i8* %42, align 1
  %63 = zext i8 %62 to i32
  %64 = add nsw i32 %50, %63
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %12, i64 %65
  %67 = load i8, i8* %66, align 1
  store i8 %67, i8* %43, align 1
  %68 = add nsw i32 %63, %58
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* %12, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = getelementptr inbounds i8, i8* %43, i64 1
  store i8 %71, i8* %72, align 1
  %73 = add nsw i32 %60, %63
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* %12, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = getelementptr inbounds i8, i8* %43, i64 2
  store i8 %76, i8* %77, align 1
  %78 = getelementptr inbounds i8, i8* %43, i64 3
  %79 = getelementptr inbounds i8, i8* %42, i64 2
  %80 = load i8, i8* %61, align 1
  %81 = zext i8 %80 to i32
  %82 = add nsw i32 %50, %81
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i8, i8* %12, i64 %83
  %85 = load i8, i8* %84, align 1
  store i8 %85, i8* %78, align 1
  %86 = add nsw i32 %81, %58
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %12, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = getelementptr inbounds i8, i8* %43, i64 4
  store i8 %89, i8* %90, align 1
  %91 = add nsw i32 %60, %81
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %12, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = getelementptr inbounds i8, i8* %43, i64 5
  store i8 %94, i8* %95, align 1
  %96 = getelementptr inbounds i8, i8* %43, i64 6
  %97 = add nsw i32 %39, -1
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %38

99:                                               ; preds = %38
  %100 = load i32, i32* %34, align 8
  br label %101

101:                                              ; preds = %99, %7
  %102 = phi i32 [ %35, %7 ], [ %100, %99 ]
  %103 = phi i8* [ %33, %7 ], [ %96, %99 ]
  %104 = phi i8* [ %24, %7 ], [ %79, %99 ]
  %105 = phi i8* [ %28, %7 ], [ %44, %99 ]
  %106 = phi i8* [ %32, %7 ], [ %46, %99 ]
  %107 = and i32 %102, 1
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %957, label %109

109:                                              ; preds = %101
  %110 = load i8, i8* %105, align 1
  %111 = load i8, i8* %106, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds i32, i32* %14, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = zext i8 %110 to i64
  %116 = getelementptr inbounds i64, i64* %20, i64 %115
  %117 = load i64, i64* %116, align 8
  %118 = getelementptr inbounds i64, i64* %18, i64 %112
  %119 = load i64, i64* %118, align 8
  %120 = add nsw i64 %119, %117
  %121 = lshr i64 %120, 16
  %122 = trunc i64 %121 to i32
  %123 = getelementptr inbounds i32, i32* %16, i64 %115
  %124 = load i32, i32* %123, align 4
  %125 = load i8, i8* %104, align 1
  %126 = zext i8 %125 to i32
  %127 = add nsw i32 %114, %126
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i8, i8* %12, i64 %128
  %130 = load i8, i8* %129, align 1
  store i8 %130, i8* %103, align 1
  %131 = add nsw i32 %126, %122
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8, i8* %12, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = getelementptr inbounds i8, i8* %103, i64 1
  store i8 %134, i8* %135, align 1
  %136 = add nsw i32 %124, %126
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i8, i8* %12, i64 %137
  %139 = load i8, i8* %138, align 1
  %140 = getelementptr inbounds i8, i8* %103, i64 2
  store i8 %139, i8* %140, align 1
  br label %957

141:                                              ; preds = %4, %4
  %142 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %143 = bitcast %struct.jpeg_upsampler** %142 to %struct.my_merged_upsampler**
  %144 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %143, align 8
  %145 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %146 = load i8*, i8** %145, align 8
  %147 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %144, i64 0, i32 2
  %148 = load i32*, i32** %147, align 8
  %149 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %144, i64 0, i32 3
  %150 = load i32*, i32** %149, align 8
  %151 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %144, i64 0, i32 4
  %152 = load i64*, i64** %151, align 8
  %153 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %144, i64 0, i32 5
  %154 = load i64*, i64** %153, align 8
  %155 = load i8**, i8*** %1, align 8
  %156 = zext i32 %2 to i64
  %157 = getelementptr inbounds i8*, i8** %155, i64 %156
  %158 = load i8*, i8** %157, align 8
  %159 = getelementptr inbounds i8**, i8*** %1, i64 1
  %160 = load i8**, i8*** %159, align 8
  %161 = getelementptr inbounds i8*, i8** %160, i64 %156
  %162 = load i8*, i8** %161, align 8
  %163 = getelementptr inbounds i8**, i8*** %1, i64 2
  %164 = load i8**, i8*** %163, align 8
  %165 = getelementptr inbounds i8*, i8** %164, i64 %156
  %166 = load i8*, i8** %165, align 8
  %167 = load i8*, i8** %3, align 8
  %168 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %169 = load i32, i32* %168, align 8
  %170 = lshr i32 %169, 1
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %237, label %172

172:                                              ; preds = %141, %172
  %173 = phi i32 [ %233, %172 ], [ %170, %141 ]
  %174 = phi i8* [ %180, %172 ], [ %166, %141 ]
  %175 = phi i8* [ %178, %172 ], [ %162, %141 ]
  %176 = phi i8* [ %214, %172 ], [ %158, %141 ]
  %177 = phi i8* [ %232, %172 ], [ %167, %141 ]
  %178 = getelementptr inbounds i8, i8* %175, i64 1
  %179 = load i8, i8* %175, align 1
  %180 = getelementptr inbounds i8, i8* %174, i64 1
  %181 = load i8, i8* %174, align 1
  %182 = zext i8 %181 to i64
  %183 = getelementptr inbounds i32, i32* %148, i64 %182
  %184 = load i32, i32* %183, align 4
  %185 = zext i8 %179 to i64
  %186 = getelementptr inbounds i64, i64* %154, i64 %185
  %187 = load i64, i64* %186, align 8
  %188 = getelementptr inbounds i64, i64* %152, i64 %182
  %189 = load i64, i64* %188, align 8
  %190 = add nsw i64 %189, %187
  %191 = lshr i64 %190, 16
  %192 = trunc i64 %191 to i32
  %193 = getelementptr inbounds i32, i32* %150, i64 %185
  %194 = load i32, i32* %193, align 4
  %195 = getelementptr inbounds i8, i8* %176, i64 1
  %196 = load i8, i8* %176, align 1
  %197 = zext i8 %196 to i32
  %198 = add nsw i32 %184, %197
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds i8, i8* %146, i64 %199
  %201 = load i8, i8* %200, align 1
  store i8 %201, i8* %177, align 1
  %202 = add nsw i32 %197, %192
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds i8, i8* %146, i64 %203
  %205 = load i8, i8* %204, align 1
  %206 = getelementptr inbounds i8, i8* %177, i64 1
  store i8 %205, i8* %206, align 1
  %207 = add nsw i32 %194, %197
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds i8, i8* %146, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = getelementptr inbounds i8, i8* %177, i64 2
  store i8 %210, i8* %211, align 1
  %212 = getelementptr inbounds i8, i8* %177, i64 3
  store i8 -1, i8* %212, align 1
  %213 = getelementptr inbounds i8, i8* %177, i64 4
  %214 = getelementptr inbounds i8, i8* %176, i64 2
  %215 = load i8, i8* %195, align 1
  %216 = zext i8 %215 to i32
  %217 = add nsw i32 %184, %216
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds i8, i8* %146, i64 %218
  %220 = load i8, i8* %219, align 1
  store i8 %220, i8* %213, align 1
  %221 = add nsw i32 %216, %192
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds i8, i8* %146, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = getelementptr inbounds i8, i8* %177, i64 5
  store i8 %224, i8* %225, align 1
  %226 = add nsw i32 %194, %216
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds i8, i8* %146, i64 %227
  %229 = load i8, i8* %228, align 1
  %230 = getelementptr inbounds i8, i8* %177, i64 6
  store i8 %229, i8* %230, align 1
  %231 = getelementptr inbounds i8, i8* %177, i64 7
  store i8 -1, i8* %231, align 1
  %232 = getelementptr inbounds i8, i8* %177, i64 8
  %233 = add nsw i32 %173, -1
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %172

235:                                              ; preds = %172
  %236 = load i32, i32* %168, align 8
  br label %237

237:                                              ; preds = %235, %141
  %238 = phi i32 [ %169, %141 ], [ %236, %235 ]
  %239 = phi i8* [ %167, %141 ], [ %232, %235 ]
  %240 = phi i8* [ %158, %141 ], [ %214, %235 ]
  %241 = phi i8* [ %162, %141 ], [ %178, %235 ]
  %242 = phi i8* [ %166, %141 ], [ %180, %235 ]
  %243 = and i32 %238, 1
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %957, label %245

245:                                              ; preds = %237
  %246 = load i8, i8* %241, align 1
  %247 = load i8, i8* %242, align 1
  %248 = zext i8 %247 to i64
  %249 = getelementptr inbounds i32, i32* %148, i64 %248
  %250 = load i32, i32* %249, align 4
  %251 = zext i8 %246 to i64
  %252 = getelementptr inbounds i64, i64* %154, i64 %251
  %253 = load i64, i64* %252, align 8
  %254 = getelementptr inbounds i64, i64* %152, i64 %248
  %255 = load i64, i64* %254, align 8
  %256 = add nsw i64 %255, %253
  %257 = lshr i64 %256, 16
  %258 = trunc i64 %257 to i32
  %259 = getelementptr inbounds i32, i32* %150, i64 %251
  %260 = load i32, i32* %259, align 4
  %261 = load i8, i8* %240, align 1
  %262 = zext i8 %261 to i32
  %263 = add nsw i32 %250, %262
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds i8, i8* %146, i64 %264
  %266 = load i8, i8* %265, align 1
  store i8 %266, i8* %239, align 1
  %267 = add nsw i32 %262, %258
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds i8, i8* %146, i64 %268
  %270 = load i8, i8* %269, align 1
  %271 = getelementptr inbounds i8, i8* %239, i64 1
  store i8 %270, i8* %271, align 1
  %272 = add nsw i32 %260, %262
  %273 = sext i32 %272 to i64
  %274 = getelementptr inbounds i8, i8* %146, i64 %273
  %275 = load i8, i8* %274, align 1
  %276 = getelementptr inbounds i8, i8* %239, i64 2
  store i8 %275, i8* %276, align 1
  %277 = getelementptr inbounds i8, i8* %239, i64 3
  store i8 -1, i8* %277, align 1
  br label %957

278:                                              ; preds = %4
  %279 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %280 = bitcast %struct.jpeg_upsampler** %279 to %struct.my_merged_upsampler**
  %281 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %280, align 8
  %282 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %283 = load i8*, i8** %282, align 8
  %284 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %281, i64 0, i32 2
  %285 = load i32*, i32** %284, align 8
  %286 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %281, i64 0, i32 3
  %287 = load i32*, i32** %286, align 8
  %288 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %281, i64 0, i32 4
  %289 = load i64*, i64** %288, align 8
  %290 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %281, i64 0, i32 5
  %291 = load i64*, i64** %290, align 8
  %292 = load i8**, i8*** %1, align 8
  %293 = zext i32 %2 to i64
  %294 = getelementptr inbounds i8*, i8** %292, i64 %293
  %295 = load i8*, i8** %294, align 8
  %296 = getelementptr inbounds i8**, i8*** %1, i64 1
  %297 = load i8**, i8*** %296, align 8
  %298 = getelementptr inbounds i8*, i8** %297, i64 %293
  %299 = load i8*, i8** %298, align 8
  %300 = getelementptr inbounds i8**, i8*** %1, i64 2
  %301 = load i8**, i8*** %300, align 8
  %302 = getelementptr inbounds i8*, i8** %301, i64 %293
  %303 = load i8*, i8** %302, align 8
  %304 = load i8*, i8** %3, align 8
  %305 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %306 = load i32, i32* %305, align 8
  %307 = lshr i32 %306, 1
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %372, label %309

309:                                              ; preds = %278, %309
  %310 = phi i32 [ %368, %309 ], [ %307, %278 ]
  %311 = phi i8* [ %317, %309 ], [ %303, %278 ]
  %312 = phi i8* [ %315, %309 ], [ %299, %278 ]
  %313 = phi i8* [ %350, %309 ], [ %295, %278 ]
  %314 = phi i8* [ %367, %309 ], [ %304, %278 ]
  %315 = getelementptr inbounds i8, i8* %312, i64 1
  %316 = load i8, i8* %312, align 1
  %317 = getelementptr inbounds i8, i8* %311, i64 1
  %318 = load i8, i8* %311, align 1
  %319 = zext i8 %318 to i64
  %320 = getelementptr inbounds i32, i32* %285, i64 %319
  %321 = load i32, i32* %320, align 4
  %322 = zext i8 %316 to i64
  %323 = getelementptr inbounds i64, i64* %291, i64 %322
  %324 = load i64, i64* %323, align 8
  %325 = getelementptr inbounds i64, i64* %289, i64 %319
  %326 = load i64, i64* %325, align 8
  %327 = add nsw i64 %326, %324
  %328 = lshr i64 %327, 16
  %329 = trunc i64 %328 to i32
  %330 = getelementptr inbounds i32, i32* %287, i64 %322
  %331 = load i32, i32* %330, align 4
  %332 = getelementptr inbounds i8, i8* %313, i64 1
  %333 = load i8, i8* %313, align 1
  %334 = zext i8 %333 to i32
  %335 = add nsw i32 %321, %334
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds i8, i8* %283, i64 %336
  %338 = load i8, i8* %337, align 1
  %339 = getelementptr inbounds i8, i8* %314, i64 2
  store i8 %338, i8* %339, align 1
  %340 = add nsw i32 %334, %329
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds i8, i8* %283, i64 %341
  %343 = load i8, i8* %342, align 1
  %344 = getelementptr inbounds i8, i8* %314, i64 1
  store i8 %343, i8* %344, align 1
  %345 = add nsw i32 %331, %334
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds i8, i8* %283, i64 %346
  %348 = load i8, i8* %347, align 1
  store i8 %348, i8* %314, align 1
  %349 = getelementptr inbounds i8, i8* %314, i64 3
  %350 = getelementptr inbounds i8, i8* %313, i64 2
  %351 = load i8, i8* %332, align 1
  %352 = zext i8 %351 to i32
  %353 = add nsw i32 %321, %352
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds i8, i8* %283, i64 %354
  %356 = load i8, i8* %355, align 1
  %357 = getelementptr inbounds i8, i8* %314, i64 5
  store i8 %356, i8* %357, align 1
  %358 = add nsw i32 %352, %329
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds i8, i8* %283, i64 %359
  %361 = load i8, i8* %360, align 1
  %362 = getelementptr inbounds i8, i8* %314, i64 4
  store i8 %361, i8* %362, align 1
  %363 = add nsw i32 %331, %352
  %364 = sext i32 %363 to i64
  %365 = getelementptr inbounds i8, i8* %283, i64 %364
  %366 = load i8, i8* %365, align 1
  store i8 %366, i8* %349, align 1
  %367 = getelementptr inbounds i8, i8* %314, i64 6
  %368 = add nsw i32 %310, -1
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %370, label %309

370:                                              ; preds = %309
  %371 = load i32, i32* %305, align 8
  br label %372

372:                                              ; preds = %370, %278
  %373 = phi i32 [ %306, %278 ], [ %371, %370 ]
  %374 = phi i8* [ %304, %278 ], [ %367, %370 ]
  %375 = phi i8* [ %295, %278 ], [ %350, %370 ]
  %376 = phi i8* [ %299, %278 ], [ %315, %370 ]
  %377 = phi i8* [ %303, %278 ], [ %317, %370 ]
  %378 = and i32 %373, 1
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %957, label %380

380:                                              ; preds = %372
  %381 = load i8, i8* %376, align 1
  %382 = load i8, i8* %377, align 1
  %383 = zext i8 %382 to i64
  %384 = getelementptr inbounds i32, i32* %285, i64 %383
  %385 = load i32, i32* %384, align 4
  %386 = zext i8 %381 to i64
  %387 = getelementptr inbounds i64, i64* %291, i64 %386
  %388 = load i64, i64* %387, align 8
  %389 = getelementptr inbounds i64, i64* %289, i64 %383
  %390 = load i64, i64* %389, align 8
  %391 = add nsw i64 %390, %388
  %392 = lshr i64 %391, 16
  %393 = trunc i64 %392 to i32
  %394 = getelementptr inbounds i32, i32* %287, i64 %386
  %395 = load i32, i32* %394, align 4
  %396 = load i8, i8* %375, align 1
  %397 = zext i8 %396 to i32
  %398 = add nsw i32 %385, %397
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds i8, i8* %283, i64 %399
  %401 = load i8, i8* %400, align 1
  %402 = getelementptr inbounds i8, i8* %374, i64 2
  store i8 %401, i8* %402, align 1
  %403 = add nsw i32 %397, %393
  %404 = sext i32 %403 to i64
  %405 = getelementptr inbounds i8, i8* %283, i64 %404
  %406 = load i8, i8* %405, align 1
  %407 = getelementptr inbounds i8, i8* %374, i64 1
  store i8 %406, i8* %407, align 1
  %408 = add nsw i32 %395, %397
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds i8, i8* %283, i64 %409
  %411 = load i8, i8* %410, align 1
  store i8 %411, i8* %374, align 1
  br label %957

412:                                              ; preds = %4, %4
  %413 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %414 = bitcast %struct.jpeg_upsampler** %413 to %struct.my_merged_upsampler**
  %415 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %414, align 8
  %416 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %417 = load i8*, i8** %416, align 8
  %418 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %415, i64 0, i32 2
  %419 = load i32*, i32** %418, align 8
  %420 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %415, i64 0, i32 3
  %421 = load i32*, i32** %420, align 8
  %422 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %415, i64 0, i32 4
  %423 = load i64*, i64** %422, align 8
  %424 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %415, i64 0, i32 5
  %425 = load i64*, i64** %424, align 8
  %426 = load i8**, i8*** %1, align 8
  %427 = zext i32 %2 to i64
  %428 = getelementptr inbounds i8*, i8** %426, i64 %427
  %429 = load i8*, i8** %428, align 8
  %430 = getelementptr inbounds i8**, i8*** %1, i64 1
  %431 = load i8**, i8*** %430, align 8
  %432 = getelementptr inbounds i8*, i8** %431, i64 %427
  %433 = load i8*, i8** %432, align 8
  %434 = getelementptr inbounds i8**, i8*** %1, i64 2
  %435 = load i8**, i8*** %434, align 8
  %436 = getelementptr inbounds i8*, i8** %435, i64 %427
  %437 = load i8*, i8** %436, align 8
  %438 = load i8*, i8** %3, align 8
  %439 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %440 = load i32, i32* %439, align 8
  %441 = lshr i32 %440, 1
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %508, label %443

443:                                              ; preds = %412, %443
  %444 = phi i32 [ %504, %443 ], [ %441, %412 ]
  %445 = phi i8* [ %451, %443 ], [ %437, %412 ]
  %446 = phi i8* [ %449, %443 ], [ %433, %412 ]
  %447 = phi i8* [ %485, %443 ], [ %429, %412 ]
  %448 = phi i8* [ %503, %443 ], [ %438, %412 ]
  %449 = getelementptr inbounds i8, i8* %446, i64 1
  %450 = load i8, i8* %446, align 1
  %451 = getelementptr inbounds i8, i8* %445, i64 1
  %452 = load i8, i8* %445, align 1
  %453 = zext i8 %452 to i64
  %454 = getelementptr inbounds i32, i32* %419, i64 %453
  %455 = load i32, i32* %454, align 4
  %456 = zext i8 %450 to i64
  %457 = getelementptr inbounds i64, i64* %425, i64 %456
  %458 = load i64, i64* %457, align 8
  %459 = getelementptr inbounds i64, i64* %423, i64 %453
  %460 = load i64, i64* %459, align 8
  %461 = add nsw i64 %460, %458
  %462 = lshr i64 %461, 16
  %463 = trunc i64 %462 to i32
  %464 = getelementptr inbounds i32, i32* %421, i64 %456
  %465 = load i32, i32* %464, align 4
  %466 = getelementptr inbounds i8, i8* %447, i64 1
  %467 = load i8, i8* %447, align 1
  %468 = zext i8 %467 to i32
  %469 = add nsw i32 %455, %468
  %470 = sext i32 %469 to i64
  %471 = getelementptr inbounds i8, i8* %417, i64 %470
  %472 = load i8, i8* %471, align 1
  %473 = getelementptr inbounds i8, i8* %448, i64 2
  store i8 %472, i8* %473, align 1
  %474 = add nsw i32 %468, %463
  %475 = sext i32 %474 to i64
  %476 = getelementptr inbounds i8, i8* %417, i64 %475
  %477 = load i8, i8* %476, align 1
  %478 = getelementptr inbounds i8, i8* %448, i64 1
  store i8 %477, i8* %478, align 1
  %479 = add nsw i32 %465, %468
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds i8, i8* %417, i64 %480
  %482 = load i8, i8* %481, align 1
  store i8 %482, i8* %448, align 1
  %483 = getelementptr inbounds i8, i8* %448, i64 3
  store i8 -1, i8* %483, align 1
  %484 = getelementptr inbounds i8, i8* %448, i64 4
  %485 = getelementptr inbounds i8, i8* %447, i64 2
  %486 = load i8, i8* %466, align 1
  %487 = zext i8 %486 to i32
  %488 = add nsw i32 %455, %487
  %489 = sext i32 %488 to i64
  %490 = getelementptr inbounds i8, i8* %417, i64 %489
  %491 = load i8, i8* %490, align 1
  %492 = getelementptr inbounds i8, i8* %448, i64 6
  store i8 %491, i8* %492, align 1
  %493 = add nsw i32 %487, %463
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds i8, i8* %417, i64 %494
  %496 = load i8, i8* %495, align 1
  %497 = getelementptr inbounds i8, i8* %448, i64 5
  store i8 %496, i8* %497, align 1
  %498 = add nsw i32 %465, %487
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds i8, i8* %417, i64 %499
  %501 = load i8, i8* %500, align 1
  store i8 %501, i8* %484, align 1
  %502 = getelementptr inbounds i8, i8* %448, i64 7
  store i8 -1, i8* %502, align 1
  %503 = getelementptr inbounds i8, i8* %448, i64 8
  %504 = add nsw i32 %444, -1
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %506, label %443

506:                                              ; preds = %443
  %507 = load i32, i32* %439, align 8
  br label %508

508:                                              ; preds = %506, %412
  %509 = phi i32 [ %440, %412 ], [ %507, %506 ]
  %510 = phi i8* [ %438, %412 ], [ %503, %506 ]
  %511 = phi i8* [ %429, %412 ], [ %485, %506 ]
  %512 = phi i8* [ %433, %412 ], [ %449, %506 ]
  %513 = phi i8* [ %437, %412 ], [ %451, %506 ]
  %514 = and i32 %509, 1
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %957, label %516

516:                                              ; preds = %508
  %517 = load i8, i8* %512, align 1
  %518 = load i8, i8* %513, align 1
  %519 = zext i8 %518 to i64
  %520 = getelementptr inbounds i32, i32* %419, i64 %519
  %521 = load i32, i32* %520, align 4
  %522 = zext i8 %517 to i64
  %523 = getelementptr inbounds i64, i64* %425, i64 %522
  %524 = load i64, i64* %523, align 8
  %525 = getelementptr inbounds i64, i64* %423, i64 %519
  %526 = load i64, i64* %525, align 8
  %527 = add nsw i64 %526, %524
  %528 = lshr i64 %527, 16
  %529 = trunc i64 %528 to i32
  %530 = getelementptr inbounds i32, i32* %421, i64 %522
  %531 = load i32, i32* %530, align 4
  %532 = load i8, i8* %511, align 1
  %533 = zext i8 %532 to i32
  %534 = add nsw i32 %521, %533
  %535 = sext i32 %534 to i64
  %536 = getelementptr inbounds i8, i8* %417, i64 %535
  %537 = load i8, i8* %536, align 1
  %538 = getelementptr inbounds i8, i8* %510, i64 2
  store i8 %537, i8* %538, align 1
  %539 = add nsw i32 %533, %529
  %540 = sext i32 %539 to i64
  %541 = getelementptr inbounds i8, i8* %417, i64 %540
  %542 = load i8, i8* %541, align 1
  %543 = getelementptr inbounds i8, i8* %510, i64 1
  store i8 %542, i8* %543, align 1
  %544 = add nsw i32 %531, %533
  %545 = sext i32 %544 to i64
  %546 = getelementptr inbounds i8, i8* %417, i64 %545
  %547 = load i8, i8* %546, align 1
  store i8 %547, i8* %510, align 1
  %548 = getelementptr inbounds i8, i8* %510, i64 3
  store i8 -1, i8* %548, align 1
  br label %957

549:                                              ; preds = %4, %4
  %550 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %551 = bitcast %struct.jpeg_upsampler** %550 to %struct.my_merged_upsampler**
  %552 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %551, align 8
  %553 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %554 = load i8*, i8** %553, align 8
  %555 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %552, i64 0, i32 2
  %556 = load i32*, i32** %555, align 8
  %557 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %552, i64 0, i32 3
  %558 = load i32*, i32** %557, align 8
  %559 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %552, i64 0, i32 4
  %560 = load i64*, i64** %559, align 8
  %561 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %552, i64 0, i32 5
  %562 = load i64*, i64** %561, align 8
  %563 = load i8**, i8*** %1, align 8
  %564 = zext i32 %2 to i64
  %565 = getelementptr inbounds i8*, i8** %563, i64 %564
  %566 = load i8*, i8** %565, align 8
  %567 = getelementptr inbounds i8**, i8*** %1, i64 1
  %568 = load i8**, i8*** %567, align 8
  %569 = getelementptr inbounds i8*, i8** %568, i64 %564
  %570 = load i8*, i8** %569, align 8
  %571 = getelementptr inbounds i8**, i8*** %1, i64 2
  %572 = load i8**, i8*** %571, align 8
  %573 = getelementptr inbounds i8*, i8** %572, i64 %564
  %574 = load i8*, i8** %573, align 8
  %575 = load i8*, i8** %3, align 8
  %576 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %577 = load i32, i32* %576, align 8
  %578 = lshr i32 %577, 1
  %579 = icmp eq i32 %578, 0
  br i1 %579, label %645, label %580

580:                                              ; preds = %549, %580
  %581 = phi i32 [ %641, %580 ], [ %578, %549 ]
  %582 = phi i8* [ %588, %580 ], [ %574, %549 ]
  %583 = phi i8* [ %586, %580 ], [ %570, %549 ]
  %584 = phi i8* [ %622, %580 ], [ %566, %549 ]
  %585 = phi i8* [ %640, %580 ], [ %575, %549 ]
  %586 = getelementptr inbounds i8, i8* %583, i64 1
  %587 = load i8, i8* %583, align 1
  %588 = getelementptr inbounds i8, i8* %582, i64 1
  %589 = load i8, i8* %582, align 1
  %590 = zext i8 %589 to i64
  %591 = getelementptr inbounds i32, i32* %556, i64 %590
  %592 = load i32, i32* %591, align 4
  %593 = zext i8 %587 to i64
  %594 = getelementptr inbounds i64, i64* %562, i64 %593
  %595 = load i64, i64* %594, align 8
  %596 = getelementptr inbounds i64, i64* %560, i64 %590
  %597 = load i64, i64* %596, align 8
  %598 = add nsw i64 %597, %595
  %599 = lshr i64 %598, 16
  %600 = trunc i64 %599 to i32
  %601 = getelementptr inbounds i32, i32* %558, i64 %593
  %602 = load i32, i32* %601, align 4
  %603 = getelementptr inbounds i8, i8* %584, i64 1
  %604 = load i8, i8* %584, align 1
  %605 = zext i8 %604 to i32
  %606 = add nsw i32 %592, %605
  %607 = sext i32 %606 to i64
  %608 = getelementptr inbounds i8, i8* %554, i64 %607
  %609 = load i8, i8* %608, align 1
  %610 = getelementptr inbounds i8, i8* %585, i64 3
  store i8 %609, i8* %610, align 1
  %611 = add nsw i32 %605, %600
  %612 = sext i32 %611 to i64
  %613 = getelementptr inbounds i8, i8* %554, i64 %612
  %614 = load i8, i8* %613, align 1
  %615 = getelementptr inbounds i8, i8* %585, i64 2
  store i8 %614, i8* %615, align 1
  %616 = add nsw i32 %602, %605
  %617 = sext i32 %616 to i64
  %618 = getelementptr inbounds i8, i8* %554, i64 %617
  %619 = load i8, i8* %618, align 1
  %620 = getelementptr inbounds i8, i8* %585, i64 1
  store i8 %619, i8* %620, align 1
  store i8 -1, i8* %585, align 1
  %621 = getelementptr inbounds i8, i8* %585, i64 4
  %622 = getelementptr inbounds i8, i8* %584, i64 2
  %623 = load i8, i8* %603, align 1
  %624 = zext i8 %623 to i32
  %625 = add nsw i32 %592, %624
  %626 = sext i32 %625 to i64
  %627 = getelementptr inbounds i8, i8* %554, i64 %626
  %628 = load i8, i8* %627, align 1
  %629 = getelementptr inbounds i8, i8* %585, i64 7
  store i8 %628, i8* %629, align 1
  %630 = add nsw i32 %624, %600
  %631 = sext i32 %630 to i64
  %632 = getelementptr inbounds i8, i8* %554, i64 %631
  %633 = load i8, i8* %632, align 1
  %634 = getelementptr inbounds i8, i8* %585, i64 6
  store i8 %633, i8* %634, align 1
  %635 = add nsw i32 %602, %624
  %636 = sext i32 %635 to i64
  %637 = getelementptr inbounds i8, i8* %554, i64 %636
  %638 = load i8, i8* %637, align 1
  %639 = getelementptr inbounds i8, i8* %585, i64 5
  store i8 %638, i8* %639, align 1
  store i8 -1, i8* %621, align 1
  %640 = getelementptr inbounds i8, i8* %585, i64 8
  %641 = add nsw i32 %581, -1
  %642 = icmp eq i32 %641, 0
  br i1 %642, label %643, label %580

643:                                              ; preds = %580
  %644 = load i32, i32* %576, align 8
  br label %645

645:                                              ; preds = %643, %549
  %646 = phi i32 [ %577, %549 ], [ %644, %643 ]
  %647 = phi i8* [ %575, %549 ], [ %640, %643 ]
  %648 = phi i8* [ %566, %549 ], [ %622, %643 ]
  %649 = phi i8* [ %570, %549 ], [ %586, %643 ]
  %650 = phi i8* [ %574, %549 ], [ %588, %643 ]
  %651 = and i32 %646, 1
  %652 = icmp eq i32 %651, 0
  br i1 %652, label %957, label %653

653:                                              ; preds = %645
  %654 = load i8, i8* %649, align 1
  %655 = load i8, i8* %650, align 1
  %656 = zext i8 %655 to i64
  %657 = getelementptr inbounds i32, i32* %556, i64 %656
  %658 = load i32, i32* %657, align 4
  %659 = zext i8 %654 to i64
  %660 = getelementptr inbounds i64, i64* %562, i64 %659
  %661 = load i64, i64* %660, align 8
  %662 = getelementptr inbounds i64, i64* %560, i64 %656
  %663 = load i64, i64* %662, align 8
  %664 = add nsw i64 %663, %661
  %665 = lshr i64 %664, 16
  %666 = trunc i64 %665 to i32
  %667 = getelementptr inbounds i32, i32* %558, i64 %659
  %668 = load i32, i32* %667, align 4
  %669 = load i8, i8* %648, align 1
  %670 = zext i8 %669 to i32
  %671 = add nsw i32 %658, %670
  %672 = sext i32 %671 to i64
  %673 = getelementptr inbounds i8, i8* %554, i64 %672
  %674 = load i8, i8* %673, align 1
  %675 = getelementptr inbounds i8, i8* %647, i64 3
  store i8 %674, i8* %675, align 1
  %676 = add nsw i32 %670, %666
  %677 = sext i32 %676 to i64
  %678 = getelementptr inbounds i8, i8* %554, i64 %677
  %679 = load i8, i8* %678, align 1
  %680 = getelementptr inbounds i8, i8* %647, i64 2
  store i8 %679, i8* %680, align 1
  %681 = add nsw i32 %668, %670
  %682 = sext i32 %681 to i64
  %683 = getelementptr inbounds i8, i8* %554, i64 %682
  %684 = load i8, i8* %683, align 1
  %685 = getelementptr inbounds i8, i8* %647, i64 1
  store i8 %684, i8* %685, align 1
  store i8 -1, i8* %647, align 1
  br label %957

686:                                              ; preds = %4, %4
  %687 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %688 = bitcast %struct.jpeg_upsampler** %687 to %struct.my_merged_upsampler**
  %689 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %688, align 8
  %690 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %691 = load i8*, i8** %690, align 8
  %692 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %689, i64 0, i32 2
  %693 = load i32*, i32** %692, align 8
  %694 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %689, i64 0, i32 3
  %695 = load i32*, i32** %694, align 8
  %696 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %689, i64 0, i32 4
  %697 = load i64*, i64** %696, align 8
  %698 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %689, i64 0, i32 5
  %699 = load i64*, i64** %698, align 8
  %700 = load i8**, i8*** %1, align 8
  %701 = zext i32 %2 to i64
  %702 = getelementptr inbounds i8*, i8** %700, i64 %701
  %703 = load i8*, i8** %702, align 8
  %704 = getelementptr inbounds i8**, i8*** %1, i64 1
  %705 = load i8**, i8*** %704, align 8
  %706 = getelementptr inbounds i8*, i8** %705, i64 %701
  %707 = load i8*, i8** %706, align 8
  %708 = getelementptr inbounds i8**, i8*** %1, i64 2
  %709 = load i8**, i8*** %708, align 8
  %710 = getelementptr inbounds i8*, i8** %709, i64 %701
  %711 = load i8*, i8** %710, align 8
  %712 = load i8*, i8** %3, align 8
  %713 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %714 = load i32, i32* %713, align 8
  %715 = lshr i32 %714, 1
  %716 = icmp eq i32 %715, 0
  br i1 %716, label %782, label %717

717:                                              ; preds = %686, %717
  %718 = phi i32 [ %778, %717 ], [ %715, %686 ]
  %719 = phi i8* [ %725, %717 ], [ %711, %686 ]
  %720 = phi i8* [ %723, %717 ], [ %707, %686 ]
  %721 = phi i8* [ %759, %717 ], [ %703, %686 ]
  %722 = phi i8* [ %777, %717 ], [ %712, %686 ]
  %723 = getelementptr inbounds i8, i8* %720, i64 1
  %724 = load i8, i8* %720, align 1
  %725 = getelementptr inbounds i8, i8* %719, i64 1
  %726 = load i8, i8* %719, align 1
  %727 = zext i8 %726 to i64
  %728 = getelementptr inbounds i32, i32* %693, i64 %727
  %729 = load i32, i32* %728, align 4
  %730 = zext i8 %724 to i64
  %731 = getelementptr inbounds i64, i64* %699, i64 %730
  %732 = load i64, i64* %731, align 8
  %733 = getelementptr inbounds i64, i64* %697, i64 %727
  %734 = load i64, i64* %733, align 8
  %735 = add nsw i64 %734, %732
  %736 = lshr i64 %735, 16
  %737 = trunc i64 %736 to i32
  %738 = getelementptr inbounds i32, i32* %695, i64 %730
  %739 = load i32, i32* %738, align 4
  %740 = getelementptr inbounds i8, i8* %721, i64 1
  %741 = load i8, i8* %721, align 1
  %742 = zext i8 %741 to i32
  %743 = add nsw i32 %729, %742
  %744 = sext i32 %743 to i64
  %745 = getelementptr inbounds i8, i8* %691, i64 %744
  %746 = load i8, i8* %745, align 1
  %747 = getelementptr inbounds i8, i8* %722, i64 1
  store i8 %746, i8* %747, align 1
  %748 = add nsw i32 %742, %737
  %749 = sext i32 %748 to i64
  %750 = getelementptr inbounds i8, i8* %691, i64 %749
  %751 = load i8, i8* %750, align 1
  %752 = getelementptr inbounds i8, i8* %722, i64 2
  store i8 %751, i8* %752, align 1
  %753 = add nsw i32 %739, %742
  %754 = sext i32 %753 to i64
  %755 = getelementptr inbounds i8, i8* %691, i64 %754
  %756 = load i8, i8* %755, align 1
  %757 = getelementptr inbounds i8, i8* %722, i64 3
  store i8 %756, i8* %757, align 1
  store i8 -1, i8* %722, align 1
  %758 = getelementptr inbounds i8, i8* %722, i64 4
  %759 = getelementptr inbounds i8, i8* %721, i64 2
  %760 = load i8, i8* %740, align 1
  %761 = zext i8 %760 to i32
  %762 = add nsw i32 %729, %761
  %763 = sext i32 %762 to i64
  %764 = getelementptr inbounds i8, i8* %691, i64 %763
  %765 = load i8, i8* %764, align 1
  %766 = getelementptr inbounds i8, i8* %722, i64 5
  store i8 %765, i8* %766, align 1
  %767 = add nsw i32 %761, %737
  %768 = sext i32 %767 to i64
  %769 = getelementptr inbounds i8, i8* %691, i64 %768
  %770 = load i8, i8* %769, align 1
  %771 = getelementptr inbounds i8, i8* %722, i64 6
  store i8 %770, i8* %771, align 1
  %772 = add nsw i32 %739, %761
  %773 = sext i32 %772 to i64
  %774 = getelementptr inbounds i8, i8* %691, i64 %773
  %775 = load i8, i8* %774, align 1
  %776 = getelementptr inbounds i8, i8* %722, i64 7
  store i8 %775, i8* %776, align 1
  store i8 -1, i8* %758, align 1
  %777 = getelementptr inbounds i8, i8* %722, i64 8
  %778 = add nsw i32 %718, -1
  %779 = icmp eq i32 %778, 0
  br i1 %779, label %780, label %717

780:                                              ; preds = %717
  %781 = load i32, i32* %713, align 8
  br label %782

782:                                              ; preds = %780, %686
  %783 = phi i32 [ %714, %686 ], [ %781, %780 ]
  %784 = phi i8* [ %712, %686 ], [ %777, %780 ]
  %785 = phi i8* [ %703, %686 ], [ %759, %780 ]
  %786 = phi i8* [ %707, %686 ], [ %723, %780 ]
  %787 = phi i8* [ %711, %686 ], [ %725, %780 ]
  %788 = and i32 %783, 1
  %789 = icmp eq i32 %788, 0
  br i1 %789, label %957, label %790

790:                                              ; preds = %782
  %791 = load i8, i8* %786, align 1
  %792 = load i8, i8* %787, align 1
  %793 = zext i8 %792 to i64
  %794 = getelementptr inbounds i32, i32* %693, i64 %793
  %795 = load i32, i32* %794, align 4
  %796 = zext i8 %791 to i64
  %797 = getelementptr inbounds i64, i64* %699, i64 %796
  %798 = load i64, i64* %797, align 8
  %799 = getelementptr inbounds i64, i64* %697, i64 %793
  %800 = load i64, i64* %799, align 8
  %801 = add nsw i64 %800, %798
  %802 = lshr i64 %801, 16
  %803 = trunc i64 %802 to i32
  %804 = getelementptr inbounds i32, i32* %695, i64 %796
  %805 = load i32, i32* %804, align 4
  %806 = load i8, i8* %785, align 1
  %807 = zext i8 %806 to i32
  %808 = add nsw i32 %795, %807
  %809 = sext i32 %808 to i64
  %810 = getelementptr inbounds i8, i8* %691, i64 %809
  %811 = load i8, i8* %810, align 1
  %812 = getelementptr inbounds i8, i8* %784, i64 1
  store i8 %811, i8* %812, align 1
  %813 = add nsw i32 %807, %803
  %814 = sext i32 %813 to i64
  %815 = getelementptr inbounds i8, i8* %691, i64 %814
  %816 = load i8, i8* %815, align 1
  %817 = getelementptr inbounds i8, i8* %784, i64 2
  store i8 %816, i8* %817, align 1
  %818 = add nsw i32 %805, %807
  %819 = sext i32 %818 to i64
  %820 = getelementptr inbounds i8, i8* %691, i64 %819
  %821 = load i8, i8* %820, align 1
  %822 = getelementptr inbounds i8, i8* %784, i64 3
  store i8 %821, i8* %822, align 1
  store i8 -1, i8* %784, align 1
  br label %957

823:                                              ; preds = %4
  %824 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %825 = bitcast %struct.jpeg_upsampler** %824 to %struct.my_merged_upsampler**
  %826 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %825, align 8
  %827 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %828 = load i8*, i8** %827, align 8
  %829 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %826, i64 0, i32 2
  %830 = load i32*, i32** %829, align 8
  %831 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %826, i64 0, i32 3
  %832 = load i32*, i32** %831, align 8
  %833 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %826, i64 0, i32 4
  %834 = load i64*, i64** %833, align 8
  %835 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %826, i64 0, i32 5
  %836 = load i64*, i64** %835, align 8
  %837 = load i8**, i8*** %1, align 8
  %838 = zext i32 %2 to i64
  %839 = getelementptr inbounds i8*, i8** %837, i64 %838
  %840 = load i8*, i8** %839, align 8
  %841 = getelementptr inbounds i8**, i8*** %1, i64 1
  %842 = load i8**, i8*** %841, align 8
  %843 = getelementptr inbounds i8*, i8** %842, i64 %838
  %844 = load i8*, i8** %843, align 8
  %845 = getelementptr inbounds i8**, i8*** %1, i64 2
  %846 = load i8**, i8*** %845, align 8
  %847 = getelementptr inbounds i8*, i8** %846, i64 %838
  %848 = load i8*, i8** %847, align 8
  %849 = load i8*, i8** %3, align 8
  %850 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %851 = load i32, i32* %850, align 8
  %852 = lshr i32 %851, 1
  %853 = icmp eq i32 %852, 0
  br i1 %853, label %917, label %854

854:                                              ; preds = %823, %854
  %855 = phi i32 [ %913, %854 ], [ %852, %823 ]
  %856 = phi i8* [ %862, %854 ], [ %848, %823 ]
  %857 = phi i8* [ %860, %854 ], [ %844, %823 ]
  %858 = phi i8* [ %895, %854 ], [ %840, %823 ]
  %859 = phi i8* [ %912, %854 ], [ %849, %823 ]
  %860 = getelementptr inbounds i8, i8* %857, i64 1
  %861 = load i8, i8* %857, align 1
  %862 = getelementptr inbounds i8, i8* %856, i64 1
  %863 = load i8, i8* %856, align 1
  %864 = zext i8 %863 to i64
  %865 = getelementptr inbounds i32, i32* %830, i64 %864
  %866 = load i32, i32* %865, align 4
  %867 = zext i8 %861 to i64
  %868 = getelementptr inbounds i64, i64* %836, i64 %867
  %869 = load i64, i64* %868, align 8
  %870 = getelementptr inbounds i64, i64* %834, i64 %864
  %871 = load i64, i64* %870, align 8
  %872 = add nsw i64 %871, %869
  %873 = lshr i64 %872, 16
  %874 = trunc i64 %873 to i32
  %875 = getelementptr inbounds i32, i32* %832, i64 %867
  %876 = load i32, i32* %875, align 4
  %877 = getelementptr inbounds i8, i8* %858, i64 1
  %878 = load i8, i8* %858, align 1
  %879 = zext i8 %878 to i32
  %880 = add nsw i32 %866, %879
  %881 = sext i32 %880 to i64
  %882 = getelementptr inbounds i8, i8* %828, i64 %881
  %883 = load i8, i8* %882, align 1
  store i8 %883, i8* %859, align 1
  %884 = add nsw i32 %879, %874
  %885 = sext i32 %884 to i64
  %886 = getelementptr inbounds i8, i8* %828, i64 %885
  %887 = load i8, i8* %886, align 1
  %888 = getelementptr inbounds i8, i8* %859, i64 1
  store i8 %887, i8* %888, align 1
  %889 = add nsw i32 %876, %879
  %890 = sext i32 %889 to i64
  %891 = getelementptr inbounds i8, i8* %828, i64 %890
  %892 = load i8, i8* %891, align 1
  %893 = getelementptr inbounds i8, i8* %859, i64 2
  store i8 %892, i8* %893, align 1
  %894 = getelementptr inbounds i8, i8* %859, i64 3
  %895 = getelementptr inbounds i8, i8* %858, i64 2
  %896 = load i8, i8* %877, align 1
  %897 = zext i8 %896 to i32
  %898 = add nsw i32 %866, %897
  %899 = sext i32 %898 to i64
  %900 = getelementptr inbounds i8, i8* %828, i64 %899
  %901 = load i8, i8* %900, align 1
  store i8 %901, i8* %894, align 1
  %902 = add nsw i32 %897, %874
  %903 = sext i32 %902 to i64
  %904 = getelementptr inbounds i8, i8* %828, i64 %903
  %905 = load i8, i8* %904, align 1
  %906 = getelementptr inbounds i8, i8* %859, i64 4
  store i8 %905, i8* %906, align 1
  %907 = add nsw i32 %876, %897
  %908 = sext i32 %907 to i64
  %909 = getelementptr inbounds i8, i8* %828, i64 %908
  %910 = load i8, i8* %909, align 1
  %911 = getelementptr inbounds i8, i8* %859, i64 5
  store i8 %910, i8* %911, align 1
  %912 = getelementptr inbounds i8, i8* %859, i64 6
  %913 = add nsw i32 %855, -1
  %914 = icmp eq i32 %913, 0
  br i1 %914, label %915, label %854

915:                                              ; preds = %854
  %916 = load i32, i32* %850, align 8
  br label %917

917:                                              ; preds = %915, %823
  %918 = phi i32 [ %851, %823 ], [ %916, %915 ]
  %919 = phi i8* [ %849, %823 ], [ %912, %915 ]
  %920 = phi i8* [ %840, %823 ], [ %895, %915 ]
  %921 = phi i8* [ %844, %823 ], [ %860, %915 ]
  %922 = phi i8* [ %848, %823 ], [ %862, %915 ]
  %923 = and i32 %918, 1
  %924 = icmp eq i32 %923, 0
  br i1 %924, label %957, label %925

925:                                              ; preds = %917
  %926 = load i8, i8* %921, align 1
  %927 = load i8, i8* %922, align 1
  %928 = zext i8 %927 to i64
  %929 = getelementptr inbounds i32, i32* %830, i64 %928
  %930 = load i32, i32* %929, align 4
  %931 = zext i8 %926 to i64
  %932 = getelementptr inbounds i64, i64* %836, i64 %931
  %933 = load i64, i64* %932, align 8
  %934 = getelementptr inbounds i64, i64* %834, i64 %928
  %935 = load i64, i64* %934, align 8
  %936 = add nsw i64 %935, %933
  %937 = lshr i64 %936, 16
  %938 = trunc i64 %937 to i32
  %939 = getelementptr inbounds i32, i32* %832, i64 %931
  %940 = load i32, i32* %939, align 4
  %941 = load i8, i8* %920, align 1
  %942 = zext i8 %941 to i32
  %943 = add nsw i32 %930, %942
  %944 = sext i32 %943 to i64
  %945 = getelementptr inbounds i8, i8* %828, i64 %944
  %946 = load i8, i8* %945, align 1
  store i8 %946, i8* %919, align 1
  %947 = add nsw i32 %942, %938
  %948 = sext i32 %947 to i64
  %949 = getelementptr inbounds i8, i8* %828, i64 %948
  %950 = load i8, i8* %949, align 1
  %951 = getelementptr inbounds i8, i8* %919, i64 1
  store i8 %950, i8* %951, align 1
  %952 = add nsw i32 %940, %942
  %953 = sext i32 %952 to i64
  %954 = getelementptr inbounds i8, i8* %828, i64 %953
  %955 = load i8, i8* %954, align 1
  %956 = getelementptr inbounds i8, i8* %919, i64 2
  store i8 %955, i8* %956, align 1
  br label %957

957:                                              ; preds = %925, %917, %790, %782, %653, %645, %516, %508, %380, %372, %245, %237, %109, %101
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @h2v1_merged_upsample_565D(%struct.jpeg_decompress_struct* nocapture readonly, i8*** nocapture readonly, i32, i8** nocapture readonly) #2 {
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %6 = bitcast %struct.jpeg_upsampler** %5 to %struct.my_merged_upsampler**
  %7 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %7, i64 0, i32 2
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %7, i64 0, i32 3
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %7, i64 0, i32 4
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %7, i64 0, i32 5
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 34
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 3
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds [4 x i64], [4 x i64]* @dither_matrix, i64 0, i64 %21
  %23 = load i64, i64* %22, align 8
  %24 = load i8**, i8*** %1, align 8
  %25 = zext i32 %2 to i64
  %26 = getelementptr inbounds i8*, i8** %24, i64 %25
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds i8**, i8*** %1, i64 1
  %29 = load i8**, i8*** %28, align 8
  %30 = getelementptr inbounds i8*, i8** %29, i64 %25
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds i8**, i8*** %1, i64 2
  %33 = load i8**, i8*** %32, align 8
  %34 = getelementptr inbounds i8*, i8** %33, i64 %25
  %35 = load i8*, i8** %34, align 8
  %36 = load i8*, i8** %3, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %38 = load i32, i32* %37, align 8
  %39 = lshr i32 %38, 1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %140, label %41

41:                                               ; preds = %4, %41
  %42 = phi i64 [ %123, %41 ], [ %23, %4 ]
  %43 = phi i32 [ %136, %41 ], [ %39, %4 ]
  %44 = phi i8* [ %50, %41 ], [ %35, %4 ]
  %45 = phi i8* [ %48, %41 ], [ %31, %4 ]
  %46 = phi i8* [ %99, %41 ], [ %27, %4 ]
  %47 = phi i8* [ %135, %41 ], [ %36, %4 ]
  %48 = getelementptr inbounds i8, i8* %45, i64 1
  %49 = load i8, i8* %45, align 1
  %50 = getelementptr inbounds i8, i8* %44, i64 1
  %51 = load i8, i8* %44, align 1
  %52 = zext i8 %51 to i64
  %53 = getelementptr inbounds i32, i32* %11, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = zext i8 %49 to i64
  %56 = getelementptr inbounds i64, i64* %17, i64 %55
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds i64, i64* %15, i64 %52
  %59 = load i64, i64* %58, align 8
  %60 = add nsw i64 %59, %57
  %61 = lshr i64 %60, 16
  %62 = trunc i64 %61 to i32
  %63 = getelementptr inbounds i32, i32* %13, i64 %55
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds i8, i8* %46, i64 1
  %66 = load i8, i8* %46, align 1
  %67 = zext i8 %66 to i32
  %68 = add nsw i32 %54, %67
  %69 = sext i32 %68 to i64
  %70 = and i64 %42, 255
  %71 = add nsw i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %9, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i16
  %75 = add nsw i32 %67, %62
  %76 = sext i32 %75 to i64
  %77 = lshr i64 %70, 1
  %78 = add nsw i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %9, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i16
  %82 = add nsw i32 %64, %67
  %83 = sext i32 %82 to i64
  %84 = add nsw i64 %70, %83
  %85 = getelementptr inbounds i8, i8* %9, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = shl nuw nsw i64 %70, 24
  %88 = lshr i64 %42, 8
  %89 = and i64 %88, 16776960
  %90 = or i64 %87, %89
  %91 = shl nuw i16 %74, 8
  %92 = and i16 %91, -2048
  %93 = shl nuw nsw i16 %81, 3
  %94 = and i16 %93, 2016
  %95 = or i16 %94, %92
  %96 = lshr i8 %86, 3
  %97 = zext i8 %96 to i16
  %98 = or i16 %95, %97
  %99 = getelementptr inbounds i8, i8* %46, i64 2
  %100 = load i8, i8* %65, align 1
  %101 = zext i8 %100 to i32
  %102 = add nsw i32 %54, %101
  %103 = sext i32 %102 to i64
  %104 = and i64 %88, 255
  %105 = add nsw i64 %104, %103
  %106 = getelementptr inbounds i8, i8* %9, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i16
  %109 = add nsw i32 %101, %62
  %110 = sext i32 %109 to i64
  %111 = lshr i64 %104, 1
  %112 = add nsw i64 %111, %110
  %113 = getelementptr inbounds i8, i8* %9, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i16
  %116 = add nsw i32 %64, %101
  %117 = sext i32 %116 to i64
  %118 = add nsw i64 %104, %117
  %119 = getelementptr inbounds i8, i8* %9, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = shl nuw nsw i64 %104, 24
  %122 = lshr exact i64 %90, 8
  %123 = or i64 %122, %121
  %124 = shl nuw i16 %108, 8
  %125 = and i16 %124, -2048
  %126 = shl nuw nsw i16 %115, 3
  %127 = and i16 %126, 2016
  %128 = or i16 %127, %125
  %129 = lshr i8 %120, 3
  %130 = zext i8 %129 to i16
  %131 = or i16 %128, %130
  %132 = bitcast i8* %47 to i16*
  store i16 %98, i16* %132, align 2
  %133 = getelementptr inbounds i8, i8* %47, i64 2
  %134 = bitcast i8* %133 to i16*
  store i16 %131, i16* %134, align 2
  %135 = getelementptr inbounds i8, i8* %47, i64 4
  %136 = add nsw i32 %43, -1
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %41

138:                                              ; preds = %41
  %139 = load i32, i32* %37, align 8
  br label %140

140:                                              ; preds = %138, %4
  %141 = phi i32 [ %38, %4 ], [ %139, %138 ]
  %142 = phi i8* [ %36, %4 ], [ %135, %138 ]
  %143 = phi i8* [ %27, %4 ], [ %99, %138 ]
  %144 = phi i8* [ %31, %4 ], [ %48, %138 ]
  %145 = phi i8* [ %35, %4 ], [ %50, %138 ]
  %146 = phi i64 [ %23, %4 ], [ %123, %138 ]
  %147 = and i32 %141, 1
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %195, label %149

149:                                              ; preds = %140
  %150 = load i8, i8* %144, align 1
  %151 = load i8, i8* %145, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds i32, i32* %11, i64 %152
  %154 = load i32, i32* %153, align 4
  %155 = zext i8 %150 to i64
  %156 = getelementptr inbounds i64, i64* %17, i64 %155
  %157 = load i64, i64* %156, align 8
  %158 = getelementptr inbounds i64, i64* %15, i64 %152
  %159 = load i64, i64* %158, align 8
  %160 = add nsw i64 %159, %157
  %161 = lshr i64 %160, 16
  %162 = trunc i64 %161 to i32
  %163 = getelementptr inbounds i32, i32* %13, i64 %155
  %164 = load i32, i32* %163, align 4
  %165 = load i8, i8* %143, align 1
  %166 = zext i8 %165 to i32
  %167 = add nsw i32 %154, %166
  %168 = sext i32 %167 to i64
  %169 = and i64 %146, 255
  %170 = add nsw i64 %169, %168
  %171 = getelementptr inbounds i8, i8* %9, i64 %170
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i16
  %174 = add nsw i32 %166, %162
  %175 = sext i32 %174 to i64
  %176 = lshr i64 %169, 1
  %177 = add nsw i64 %176, %175
  %178 = getelementptr inbounds i8, i8* %9, i64 %177
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i16
  %181 = add nsw i32 %164, %166
  %182 = sext i32 %181 to i64
  %183 = add nsw i64 %169, %182
  %184 = getelementptr inbounds i8, i8* %9, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = shl nuw i16 %173, 8
  %187 = and i16 %186, -2048
  %188 = shl nuw nsw i16 %180, 3
  %189 = and i16 %188, 2016
  %190 = or i16 %189, %187
  %191 = lshr i8 %185, 3
  %192 = zext i8 %191 to i16
  %193 = or i16 %190, %192
  %194 = bitcast i8* %142 to i16*
  store i16 %193, i16* %194, align 2
  br label %195

195:                                              ; preds = %140, %149
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @h2v1_merged_upsample_565(%struct.jpeg_decompress_struct* nocapture readonly, i8*** nocapture readonly, i32, i8** nocapture readonly) #2 {
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 85
  %6 = bitcast %struct.jpeg_upsampler** %5 to %struct.my_merged_upsampler**
  %7 = load %struct.my_merged_upsampler*, %struct.my_merged_upsampler** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 65
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %7, i64 0, i32 2
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %7, i64 0, i32 3
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %7, i64 0, i32 4
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %struct.my_merged_upsampler, %struct.my_merged_upsampler* %7, i64 0, i32 5
  %17 = load i64*, i64** %16, align 8
  %18 = load i8**, i8*** %1, align 8
  %19 = zext i32 %2 to i64
  %20 = getelementptr inbounds i8*, i8** %18, i64 %19
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds i8**, i8*** %1, i64 1
  %23 = load i8**, i8*** %22, align 8
  %24 = getelementptr inbounds i8*, i8** %23, i64 %19
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds i8**, i8*** %1, i64 2
  %27 = load i8**, i8*** %26, align 8
  %28 = getelementptr inbounds i8*, i8** %27, i64 %19
  %29 = load i8*, i8** %28, align 8
  %30 = load i8*, i8** %3, align 8
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 27
  %32 = load i32, i32* %31, align 8
  %33 = lshr i32 %32, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %116, label %35

35:                                               ; preds = %4, %35
  %36 = phi i32 [ %112, %35 ], [ %33, %4 ]
  %37 = phi i8* [ %43, %35 ], [ %29, %4 ]
  %38 = phi i8* [ %41, %35 ], [ %25, %4 ]
  %39 = phi i8* [ %83, %35 ], [ %21, %4 ]
  %40 = phi i8* [ %111, %35 ], [ %30, %4 ]
  %41 = getelementptr inbounds i8, i8* %38, i64 1
  %42 = load i8, i8* %38, align 1
  %43 = getelementptr inbounds i8, i8* %37, i64 1
  %44 = load i8, i8* %37, align 1
  %45 = zext i8 %44 to i64
  %46 = getelementptr inbounds i32, i32* %11, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = zext i8 %42 to i64
  %49 = getelementptr inbounds i64, i64* %17, i64 %48
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds i64, i64* %15, i64 %45
  %52 = load i64, i64* %51, align 8
  %53 = add nsw i64 %52, %50
  %54 = lshr i64 %53, 16
  %55 = trunc i64 %54 to i32
  %56 = getelementptr inbounds i32, i32* %13, i64 %48
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds i8, i8* %39, i64 1
  %59 = load i8, i8* %39, align 1
  %60 = zext i8 %59 to i32
  %61 = add nsw i32 %47, %60
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i8, i8* %9, i64 %62
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i16
  %66 = add nsw i32 %60, %55
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i8, i8* %9, i64 %67
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i16
  %71 = add nsw i32 %57, %60
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %9, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = shl nuw i16 %65, 8
  %76 = and i16 %75, -2048
  %77 = shl nuw nsw i16 %70, 3
  %78 = and i16 %77, 2016
  %79 = or i16 %78, %76
  %80 = lshr i8 %74, 3
  %81 = zext i8 %80 to i16
  %82 = or i16 %79, %81
  %83 = getelementptr inbounds i8, i8* %39, i64 2
  %84 = load i8, i8* %58, align 1
  %85 = zext i8 %84 to i32
  %86 = add nsw i32 %47, %85
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %9, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i16
  %91 = add nsw i32 %85, %55
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %9, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i16
  %96 = add nsw i32 %57, %85
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %9, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = shl nuw i16 %90, 8
  %101 = and i16 %100, -2048
  %102 = shl nuw nsw i16 %95, 3
  %103 = and i16 %102, 2016
  %104 = or i16 %103, %101
  %105 = lshr i8 %99, 3
  %106 = zext i8 %105 to i16
  %107 = or i16 %104, %106
  %108 = bitcast i8* %40 to i16*
  store i16 %82, i16* %108, align 2
  %109 = getelementptr inbounds i8, i8* %40, i64 2
  %110 = bitcast i8* %109 to i16*
  store i16 %107, i16* %110, align 2
  %111 = getelementptr inbounds i8, i8* %40, i64 4
  %112 = add nsw i32 %36, -1
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %35

114:                                              ; preds = %35
  %115 = load i32, i32* %31, align 8
  br label %116

116:                                              ; preds = %114, %4
  %117 = phi i32 [ %32, %4 ], [ %115, %114 ]
  %118 = phi i8* [ %30, %4 ], [ %111, %114 ]
  %119 = phi i8* [ %21, %4 ], [ %83, %114 ]
  %120 = phi i8* [ %25, %4 ], [ %41, %114 ]
  %121 = phi i8* [ %29, %4 ], [ %43, %114 ]
  %122 = and i32 %117, 1
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %165, label %124

124:                                              ; preds = %116
  %125 = load i8, i8* %120, align 1
  %126 = load i8, i8* %121, align 1
  %127 = zext i8 %126 to i64
  %128 = getelementptr inbounds i32, i32* %11, i64 %127
  %129 = load i32, i32* %128, align 4
  %130 = zext i8 %125 to i64
  %131 = getelementptr inbounds i64, i64* %17, i64 %130
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds i64, i64* %15, i64 %127
  %134 = load i64, i64* %133, align 8
  %135 = add nsw i64 %134, %132
  %136 = lshr i64 %135, 16
  %137 = trunc i64 %136 to i32
  %138 = getelementptr inbounds i32, i32* %13, i64 %130
  %139 = load i32, i32* %138, align 4
  %140 = load i8, i8* %119, align 1
  %141 = zext i8 %140 to i32
  %142 = add nsw i32 %129, %141
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds i8, i8* %9, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i16
  %147 = add nsw i32 %141, %137
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i8, i8* %9, i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i16
  %152 = add nsw i32 %139, %141
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i8, i8* %9, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = shl nuw i16 %146, 8
  %157 = and i16 %156, -2048
  %158 = shl nuw nsw i16 %151, 3
  %159 = and i16 %158, 2016
  %160 = or i16 %159, %157
  %161 = lshr i8 %155, 3
  %162 = zext i8 %161 to i16
  %163 = or i16 %160, %162
  %164 = bitcast i8* %118 to i16*
  store i16 %163, i16* %164, align 2
  br label %165

165:                                              ; preds = %116, %124
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @jcopy_sample_rows(i8**, i32, i8**, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
