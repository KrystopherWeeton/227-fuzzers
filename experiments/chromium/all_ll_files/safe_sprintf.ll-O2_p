; ModuleID = '../../base/strings/safe_sprintf.cc'
source_filename = "../../base/strings/safe_sprintf.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.base::strings::internal::Arg" = type <{ %union.anon, i32, [4 x i8] }>
%union.anon = type { %struct.anon }
%struct.anon = type { i64, i8 }

@.str = private unnamed_addr constant [3 x i8] c"0x\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"<NULL>\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@_ZN4base7strings12_GLOBAL__N_116kUpCaseHexDigitsE = internal unnamed_addr constant [17 x i8] c"0123456789ABCDEF\00", align 16
@_ZN4base7strings12_GLOBAL__N_118kDownCaseHexDigitsE = internal unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 16

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base7strings8internal12SafeSNPrintfEPcmPKcPKNS1_3ArgEm(i8*, i64, i8* nocapture readonly, %"struct.base::strings::internal::Arg"* nocapture readonly, i64) local_unnamed_addr #0 {
  %6 = icmp slt i64 %1, 1
  br i1 %6, label %547, label %7

7:                                                ; preds = %5
  %8 = add nsw i64 %1, -1
  %9 = load i8, i8* %2, align 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %542, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %0, i64 -1
  %13 = getelementptr inbounds i8, i8* %12, i64 %8
  %14 = add i64 %1, -2
  br label %15

15:                                               ; preds = %11, %536
  %16 = phi i8 [ %9, %11 ], [ %540, %536 ]
  %17 = phi i32 [ 0, %11 ], [ %539, %536 ]
  %18 = phi i8* [ %2, %11 ], [ %538, %536 ]
  %19 = phi i64 [ 0, %11 ], [ %537, %536 ]
  %20 = icmp eq i64 %19, 9223372036854775806
  br i1 %20, label %542, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds i8, i8* %18, i64 1
  %23 = icmp eq i8 %16, 37
  br i1 %23, label %24, label %522

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %18, i64 2
  %26 = load i8, i8* %22, align 1
  br label %27

27:                                               ; preds = %62, %24
  %28 = phi i8* [ %25, %24 ], [ %63, %62 ]
  %29 = phi i64 [ 0, %24 ], [ %60, %62 ]
  %30 = phi i8 [ 32, %24 ], [ %35, %62 ]
  %31 = phi i8 [ %26, %24 ], [ %64, %62 ]
  %32 = sext i8 %31 to i32
  switch i32 %32, label %499 [
    i32 48, label %33
    i32 49, label %33
    i32 50, label %33
    i32 51, label %33
    i32 52, label %33
    i32 53, label %33
    i32 54, label %33
    i32 55, label %33
    i32 56, label %33
    i32 57, label %33
    i32 99, label %67
    i32 100, label %116
    i32 111, label %116
    i32 120, label %116
    i32 88, label %116
    i32 112, label %116
    i32 115, label %419
    i32 37, label %522
  ]

33:                                               ; preds = %27, %27, %27, %27, %27, %27, %27, %27, %27, %27
  %34 = icmp eq i8 %31, 48
  %35 = select i1 %34, i8 48, i8 32
  br label %36

36:                                               ; preds = %62, %33
  %37 = phi i8* [ %28, %33 ], [ %63, %62 ]
  %38 = phi i64 [ %29, %33 ], [ %60, %62 ]
  %39 = phi i8 [ %31, %33 ], [ %64, %62 ]
  %40 = icmp ugt i64 %38, 922337203685477580
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = mul i64 %38, 10
  %43 = sext i8 %39 to i64
  %44 = sub i64 -9223372036854775762, %43
  %45 = icmp ugt i64 %42, %44
  br i1 %45, label %46, label %58

46:                                               ; preds = %58, %41, %36
  br label %47

47:                                               ; preds = %46, %47
  %48 = phi i8* [ %49, %47 ], [ %37, %46 ]
  %49 = getelementptr inbounds i8, i8* %48, i64 1
  %50 = load i8, i8* %48, align 1
  %51 = add i8 %50, -48
  %52 = icmp ult i8 %51, 10
  br i1 %52, label %47, label %53

53:                                               ; preds = %47
  %54 = zext i32 %17 to i64
  %55 = icmp ult i64 %54, %4
  %56 = zext i1 %55 to i32
  %57 = add i32 %17, %56
  br label %499

58:                                               ; preds = %41
  %59 = add nsw i64 %42, -48
  %60 = add i64 %59, %43
  %61 = icmp ugt i64 %60, 9223372036854775806
  br i1 %61, label %46, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds i8, i8* %37, i64 1
  %64 = load i8, i8* %37, align 1
  %65 = add i8 %64, -48
  %66 = icmp ugt i8 %65, 9
  br i1 %66, label %27, label %36

67:                                               ; preds = %27
  %68 = zext i32 %17 to i64
  %69 = icmp ult i64 %68, %4
  br i1 %69, label %70, label %499

70:                                               ; preds = %67
  %71 = add i32 %17, 1
  %72 = getelementptr inbounds %"struct.base::strings::internal::Arg", %"struct.base::strings::internal::Arg"* %3, i64 %68, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = icmp ult i32 %73, 2
  br i1 %74, label %75, label %499

75:                                               ; preds = %70, %86
  %76 = phi i64 [ %89, %86 ], [ %19, %70 ]
  %77 = phi i64 [ %90, %86 ], [ %29, %70 ]
  %78 = icmp ugt i64 %77, 1
  br i1 %78, label %79, label %99

79:                                               ; preds = %75
  %80 = icmp ult i64 %76, %8
  br i1 %80, label %86, label %81

81:                                               ; preds = %79
  %82 = icmp ugt i64 %76, 9223372036854775805
  %83 = add i64 %76, 1
  %84 = select i1 %82, i64 9223372036854775806, i64 %83
  %85 = add i64 %77, -1
  br label %91

86:                                               ; preds = %79
  %87 = getelementptr inbounds i8, i8* %0, i64 %76
  store i8 32, i8* %87, align 1
  %88 = icmp ugt i64 %76, 9223372036854775805
  %89 = add nuw i64 %76, 1
  %90 = add i64 %77, -1
  br i1 %88, label %91, label %75

91:                                               ; preds = %86, %81
  %92 = phi i64 [ %85, %81 ], [ %90, %86 ]
  %93 = phi i64 [ %84, %81 ], [ 9223372036854775806, %86 ]
  %94 = add i64 %92, -1
  %95 = sub i64 9223372036854775807, %92
  %96 = icmp ugt i64 %93, %95
  %97 = add i64 %94, %93
  %98 = select i1 %96, i64 9223372036854775806, i64 %97
  br label %99

99:                                               ; preds = %75, %91
  %100 = phi i64 [ %98, %91 ], [ %76, %75 ]
  %101 = getelementptr inbounds %"struct.base::strings::internal::Arg", %"struct.base::strings::internal::Arg"* %3, i64 %68, i32 0, i32 0, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = trunc i64 %102 to i8
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %542, label %105

105:                                              ; preds = %99
  %106 = icmp ult i64 %100, %8
  br i1 %106, label %107, label %112

107:                                              ; preds = %105
  %108 = getelementptr inbounds i8, i8* %0, i64 %100
  store i8 %103, i8* %108, align 1
  %109 = icmp ugt i64 %100, 9223372036854775805
  %110 = add nuw i64 %100, 1
  %111 = select i1 %109, i64 9223372036854775806, i64 %110
  br label %536

112:                                              ; preds = %105
  %113 = icmp ugt i64 %100, 9223372036854775805
  %114 = add i64 %100, 1
  %115 = select i1 %113, i64 9223372036854775806, i64 %114
  br label %536

116:                                              ; preds = %27, %27, %27, %27, %27
  %117 = zext i32 %17 to i64
  %118 = icmp ult i64 %117, %4
  br i1 %118, label %119, label %499

119:                                              ; preds = %116
  %120 = add i32 %17, 1
  %121 = getelementptr inbounds %"struct.base::strings::internal::Arg", %"struct.base::strings::internal::Arg"* %3, i64 %117
  %122 = icmp eq i8 %31, 112
  %123 = getelementptr inbounds %"struct.base::strings::internal::Arg", %"struct.base::strings::internal::Arg"* %3, i64 %117, i32 1
  %124 = load i32, i32* %123, align 8
  br i1 %122, label %141, label %125

125:                                              ; preds = %119
  %126 = icmp ult i32 %124, 2
  br i1 %126, label %127, label %499

127:                                              ; preds = %125
  %128 = getelementptr inbounds %"struct.base::strings::internal::Arg", %"struct.base::strings::internal::Arg"* %121, i64 0, i32 0, i32 0, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = icmp eq i8 %31, 100
  br i1 %130, label %156, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"struct.base::strings::internal::Arg", %"struct.base::strings::internal::Arg"* %3, i64 %117, i32 0, i32 0, i32 1
  %133 = load i8, i8* %132, align 8
  %134 = icmp ult i8 %133, 8
  br i1 %134, label %135, label %207

135:                                              ; preds = %131
  %136 = zext i8 %133 to i64
  %137 = shl nuw nsw i64 %136, 3
  %138 = shl nsw i64 -1, %137
  %139 = xor i64 %138, -1
  %140 = and i64 %129, %139
  br label %207

141:                                              ; preds = %119
  switch i32 %124, label %499 [
    i32 3, label %142
    i32 2, label %145
    i32 0, label %148
  ]

142:                                              ; preds = %141
  %143 = getelementptr inbounds %"struct.base::strings::internal::Arg", %"struct.base::strings::internal::Arg"* %121, i64 0, i32 0, i32 0, i32 0
  %144 = load i64, i64* %143, align 8
  br label %165

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"struct.base::strings::internal::Arg", %"struct.base::strings::internal::Arg"* %121, i64 0, i32 0, i32 0, i32 0
  %147 = load i64, i64* %146, align 8
  br label %165

148:                                              ; preds = %141
  %149 = getelementptr inbounds %"struct.base::strings::internal::Arg", %"struct.base::strings::internal::Arg"* %3, i64 %117, i32 0, i32 0, i32 1
  %150 = load i8, i8* %149, align 8
  %151 = icmp eq i8 %150, 8
  br i1 %151, label %152, label %499

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"struct.base::strings::internal::Arg", %"struct.base::strings::internal::Arg"* %121, i64 0, i32 0, i32 0, i32 0
  %154 = load i64, i64* %153, align 8
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %165, label %499

156:                                              ; preds = %127
  %157 = icmp eq i32 %124, 0
  %158 = icmp slt i64 %129, 0
  %159 = and i1 %157, %158
  br i1 %159, label %160, label %197

160:                                              ; preds = %156
  %161 = icmp eq i64 %129, -9223372036854775808
  %162 = sub nsw i64 0, %129
  %163 = select i1 %161, i64 9223372036854775807, i64 %162
  %164 = zext i1 %161 to i64
  br label %165

165:                                              ; preds = %152, %145, %142, %160
  %166 = phi i32 [ 10, %160 ], [ 16, %142 ], [ 16, %145 ], [ 16, %152 ]
  %167 = phi i64 [ %163, %160 ], [ %144, %142 ], [ %147, %145 ], [ 0, %152 ]
  %168 = phi i64 [ %164, %160 ], [ 0, %142 ], [ 0, %145 ], [ 0, %152 ]
  %169 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), %160 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %142 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %145 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %152 ]
  %170 = load i8, i8* %169, align 1
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %197, label %172

172:                                              ; preds = %165
  %173 = icmp eq i8 %30, 48
  br i1 %173, label %174, label %192

174:                                              ; preds = %172, %186
  %175 = phi i64 [ %189, %186 ], [ %19, %172 ]
  %176 = phi i64 [ %181, %186 ], [ %29, %172 ]
  %177 = phi i8* [ %182, %186 ], [ %169, %172 ]
  %178 = phi i8 [ %190, %186 ], [ %170, %172 ]
  %179 = icmp eq i64 %176, 0
  %180 = add i64 %176, -1
  %181 = select i1 %179, i64 0, i64 %180
  %182 = getelementptr inbounds i8, i8* %177, i64 1
  %183 = icmp ult i64 %175, %8
  br i1 %183, label %184, label %186

184:                                              ; preds = %174
  %185 = getelementptr inbounds i8, i8* %0, i64 %175
  store i8 %178, i8* %185, align 1
  br label %186

186:                                              ; preds = %174, %184
  %187 = icmp ugt i64 %175, 9223372036854775805
  %188 = add i64 %175, 1
  %189 = select i1 %187, i64 9223372036854775806, i64 %188
  %190 = load i8, i8* %182, align 1
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %197, label %174

192:                                              ; preds = %172, %192
  %193 = phi i8* [ %194, %192 ], [ %169, %172 ]
  %194 = getelementptr inbounds i8, i8* %193, i64 1
  %195 = load i8, i8* %194, align 1
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %197, label %192

197:                                              ; preds = %192, %186, %165, %156
  %198 = phi i32 [ 10, %156 ], [ %166, %165 ], [ %166, %186 ], [ %166, %192 ]
  %199 = phi i64 [ %19, %156 ], [ %19, %165 ], [ %189, %186 ], [ %19, %192 ]
  %200 = phi i64 [ %129, %156 ], [ %167, %165 ], [ %167, %186 ], [ %167, %192 ]
  %201 = phi i64 [ 0, %156 ], [ %168, %165 ], [ %168, %186 ], [ %168, %192 ]
  %202 = phi i8* [ null, %156 ], [ null, %165 ], [ null, %186 ], [ %169, %192 ]
  %203 = phi i8* [ null, %156 ], [ null, %165 ], [ null, %186 ], [ %194, %192 ]
  %204 = phi i64 [ %29, %156 ], [ %29, %165 ], [ %181, %186 ], [ %29, %192 ]
  %205 = ptrtoint i8* %203 to i64
  %206 = ptrtoint i8* %202 to i64
  br label %212

207:                                              ; preds = %135, %131
  %208 = phi i64 [ %140, %135 ], [ %129, %131 ]
  %209 = icmp eq i8 %31, 120
  %210 = icmp eq i8 %31, 111
  %211 = select i1 %210, i32 8, i32 16
  br i1 %209, label %222, label %212

212:                                              ; preds = %207, %197
  %213 = phi i64 [ %206, %197 ], [ 0, %207 ]
  %214 = phi i64 [ %205, %197 ], [ 0, %207 ]
  %215 = phi i64 [ %204, %197 ], [ %29, %207 ]
  %216 = phi i8* [ %203, %197 ], [ null, %207 ]
  %217 = phi i8* [ %202, %197 ], [ null, %207 ]
  %218 = phi i64 [ %201, %197 ], [ 0, %207 ]
  %219 = phi i64 [ %200, %197 ], [ %208, %207 ]
  %220 = phi i64 [ %199, %197 ], [ %19, %207 ]
  %221 = phi i32 [ %198, %197 ], [ %211, %207 ]
  br label %222

222:                                              ; preds = %207, %212
  %223 = phi i64 [ %213, %212 ], [ 0, %207 ]
  %224 = phi i64 [ %214, %212 ], [ 0, %207 ]
  %225 = phi i64 [ %215, %212 ], [ %29, %207 ]
  %226 = phi i8* [ %216, %212 ], [ null, %207 ]
  %227 = phi i8* [ %217, %212 ], [ null, %207 ]
  %228 = phi i64 [ %218, %212 ], [ 0, %207 ]
  %229 = phi i64 [ %219, %212 ], [ %208, %207 ]
  %230 = phi i64 [ %220, %212 ], [ %19, %207 ]
  %231 = phi i32 [ %221, %212 ], [ %211, %207 ]
  %232 = phi [17 x i8]* [ @_ZN4base7strings12_GLOBAL__N_116kUpCaseHexDigitsE, %212 ], [ @_ZN4base7strings12_GLOBAL__N_118kDownCaseHexDigitsE, %207 ]
  %233 = sext i32 %231 to i64
  %234 = sub i64 64, %223
  %235 = add i64 %234, %224
  %236 = icmp ult i64 %230, %8
  %237 = getelementptr inbounds i8, i8* %0, i64 %230
  %238 = icmp ult i8* %237, %13
  %239 = sub i64 %14, %230
  %240 = add i64 %239, -32
  %241 = lshr i64 %240, 5
  %242 = add nuw nsw i64 %241, 1
  %243 = icmp ult i64 %239, 32
  %244 = and i64 %239, -32
  %245 = getelementptr i8, i8* %237, i64 %244
  %246 = and i64 %242, 3
  %247 = icmp ult i64 %240, 96
  %248 = sub nsw i64 %242, %246
  %249 = icmp eq i64 %246, 0
  %250 = icmp eq i64 %239, %244
  br label %251

251:                                              ; preds = %399, %222
  %252 = phi i64 [ %230, %222 ], [ %392, %399 ]
  %253 = phi i64 [ %228, %222 ], [ 0, %399 ]
  %254 = phi i64 [ %229, %222 ], [ %400, %399 ]
  %255 = phi i8* [ %226, %222 ], [ %376, %399 ]
  %256 = phi i64 [ 0, %222 ], [ %350, %399 ]
  %257 = phi i8 [ 0, %222 ], [ %377, %399 ]
  %258 = phi i64 [ %225, %222 ], [ %393, %399 ]
  %259 = icmp ult i64 %252, %8
  br i1 %259, label %348, label %260

260:                                              ; preds = %251
  br i1 %236, label %261, label %342

261:                                              ; preds = %260
  br i1 %238, label %262, label %334

262:                                              ; preds = %261
  br i1 %243, label %263, label %265

263:                                              ; preds = %333, %262
  %264 = phi i8* [ %237, %262 ], [ %245, %333 ]
  br label %337

265:                                              ; preds = %262
  br i1 %247, label %315, label %266

266:                                              ; preds = %265, %266
  %267 = phi i64 [ %312, %266 ], [ 0, %265 ]
  %268 = phi i64 [ %313, %266 ], [ %248, %265 ]
  %269 = getelementptr i8, i8* %237, i64 %267
  %270 = getelementptr inbounds i8, i8* %269, i64 1
  %271 = bitcast i8* %270 to <16 x i8>*
  %272 = load <16 x i8>, <16 x i8>* %271, align 1
  %273 = getelementptr inbounds i8, i8* %270, i64 16
  %274 = bitcast i8* %273 to <16 x i8>*
  %275 = load <16 x i8>, <16 x i8>* %274, align 1
  %276 = bitcast i8* %269 to <16 x i8>*
  store <16 x i8> %272, <16 x i8>* %276, align 1
  %277 = getelementptr i8, i8* %269, i64 16
  %278 = bitcast i8* %277 to <16 x i8>*
  store <16 x i8> %275, <16 x i8>* %278, align 1
  %279 = or i64 %267, 32
  %280 = getelementptr i8, i8* %237, i64 %279
  %281 = getelementptr inbounds i8, i8* %280, i64 1
  %282 = bitcast i8* %281 to <16 x i8>*
  %283 = load <16 x i8>, <16 x i8>* %282, align 1
  %284 = getelementptr inbounds i8, i8* %281, i64 16
  %285 = bitcast i8* %284 to <16 x i8>*
  %286 = load <16 x i8>, <16 x i8>* %285, align 1
  %287 = bitcast i8* %280 to <16 x i8>*
  store <16 x i8> %283, <16 x i8>* %287, align 1
  %288 = getelementptr i8, i8* %280, i64 16
  %289 = bitcast i8* %288 to <16 x i8>*
  store <16 x i8> %286, <16 x i8>* %289, align 1
  %290 = or i64 %267, 64
  %291 = getelementptr i8, i8* %237, i64 %290
  %292 = getelementptr inbounds i8, i8* %291, i64 1
  %293 = bitcast i8* %292 to <16 x i8>*
  %294 = load <16 x i8>, <16 x i8>* %293, align 1
  %295 = getelementptr inbounds i8, i8* %292, i64 16
  %296 = bitcast i8* %295 to <16 x i8>*
  %297 = load <16 x i8>, <16 x i8>* %296, align 1
  %298 = bitcast i8* %291 to <16 x i8>*
  store <16 x i8> %294, <16 x i8>* %298, align 1
  %299 = getelementptr i8, i8* %291, i64 16
  %300 = bitcast i8* %299 to <16 x i8>*
  store <16 x i8> %297, <16 x i8>* %300, align 1
  %301 = or i64 %267, 96
  %302 = getelementptr i8, i8* %237, i64 %301
  %303 = getelementptr inbounds i8, i8* %302, i64 1
  %304 = bitcast i8* %303 to <16 x i8>*
  %305 = load <16 x i8>, <16 x i8>* %304, align 1
  %306 = getelementptr inbounds i8, i8* %303, i64 16
  %307 = bitcast i8* %306 to <16 x i8>*
  %308 = load <16 x i8>, <16 x i8>* %307, align 1
  %309 = bitcast i8* %302 to <16 x i8>*
  store <16 x i8> %305, <16 x i8>* %309, align 1
  %310 = getelementptr i8, i8* %302, i64 16
  %311 = bitcast i8* %310 to <16 x i8>*
  store <16 x i8> %308, <16 x i8>* %311, align 1
  %312 = add i64 %267, 128
  %313 = add i64 %268, -4
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %315, label %266, !llvm.loop !2

315:                                              ; preds = %266, %265
  %316 = phi i64 [ 0, %265 ], [ %312, %266 ]
  br i1 %249, label %333, label %317

317:                                              ; preds = %315, %317
  %318 = phi i64 [ %330, %317 ], [ %316, %315 ]
  %319 = phi i64 [ %331, %317 ], [ %246, %315 ]
  %320 = getelementptr i8, i8* %237, i64 %318
  %321 = getelementptr inbounds i8, i8* %320, i64 1
  %322 = bitcast i8* %321 to <16 x i8>*
  %323 = load <16 x i8>, <16 x i8>* %322, align 1
  %324 = getelementptr inbounds i8, i8* %321, i64 16
  %325 = bitcast i8* %324 to <16 x i8>*
  %326 = load <16 x i8>, <16 x i8>* %325, align 1
  %327 = bitcast i8* %320 to <16 x i8>*
  store <16 x i8> %323, <16 x i8>* %327, align 1
  %328 = getelementptr i8, i8* %320, i64 16
  %329 = bitcast i8* %328 to <16 x i8>*
  store <16 x i8> %326, <16 x i8>* %329, align 1
  %330 = add i64 %318, 32
  %331 = add i64 %319, -1
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %333, label %317, !llvm.loop !4

333:                                              ; preds = %317, %315
  br i1 %250, label %334, label %263

334:                                              ; preds = %337, %333, %261
  %335 = add i64 %256, 1
  %336 = add i64 %252, -1
  br label %348

337:                                              ; preds = %263, %337
  %338 = phi i8* [ %339, %337 ], [ %264, %263 ]
  %339 = getelementptr inbounds i8, i8* %338, i64 1
  %340 = load i8, i8* %339, align 1
  store i8 %340, i8* %338, align 1
  %341 = icmp eq i8* %339, %13
  br i1 %341, label %334, label %337, !llvm.loop !6

342:                                              ; preds = %260
  %343 = sub i64 %252, %8
  %344 = icmp ugt i64 %343, 1
  br i1 %344, label %345, label %348

345:                                              ; preds = %342
  %346 = add i64 %252, -1
  %347 = add i64 %256, 1
  br label %348

348:                                              ; preds = %345, %342, %334, %251
  %349 = phi i64 [ %252, %251 ], [ %336, %334 ], [ %346, %345 ], [ %252, %342 ]
  %350 = phi i64 [ %256, %251 ], [ %335, %334 ], [ %347, %345 ], [ %256, %342 ]
  %351 = icmp ne i64 %254, 0
  %352 = and i8 %257, 1
  %353 = icmp eq i8 %352, 0
  %354 = or i1 %351, %353
  br i1 %354, label %367, label %355

355:                                              ; preds = %348
  %356 = icmp ugt i8* %255, %227
  br i1 %356, label %357, label %363

357:                                              ; preds = %355
  %358 = getelementptr inbounds i8, i8* %255, i64 -1
  %359 = icmp ult i64 %349, %8
  br i1 %359, label %360, label %375

360:                                              ; preds = %357
  %361 = load i8, i8* %358, align 1
  %362 = getelementptr inbounds i8, i8* %0, i64 %349
  store i8 %361, i8* %362, align 1
  br label %375

363:                                              ; preds = %355
  %364 = icmp ult i64 %349, %8
  br i1 %364, label %365, label %375

365:                                              ; preds = %363
  %366 = getelementptr inbounds i8, i8* %0, i64 %349
  store i8 %30, i8* %366, align 1
  br label %375

367:                                              ; preds = %348
  %368 = icmp ult i64 %349, %8
  br i1 %368, label %369, label %375

369:                                              ; preds = %367
  %370 = urem i64 %254, %233
  %371 = add i64 %370, %253
  %372 = getelementptr inbounds [17 x i8], [17 x i8]* %232, i64 0, i64 %371
  %373 = load i8, i8* %372, align 1
  %374 = getelementptr inbounds i8, i8* %0, i64 %349
  store i8 %373, i8* %374, align 1
  br label %375

375:                                              ; preds = %367, %363, %357, %369, %365, %360
  %376 = phi i8* [ %255, %369 ], [ %358, %360 ], [ %255, %365 ], [ %358, %357 ], [ %255, %363 ], [ %255, %367 ]
  %377 = phi i8 [ 1, %369 ], [ %257, %360 ], [ %257, %365 ], [ %257, %357 ], [ %257, %363 ], [ 1, %367 ]
  %378 = icmp ugt i64 %349, 9223372036854775805
  %379 = add i64 %349, 1
  %380 = select i1 %378, i64 9223372036854775806, i64 %379
  %381 = udiv i64 %254, %233
  %382 = icmp eq i64 %258, 0
  br i1 %382, label %391, label %383

383:                                              ; preds = %375
  %384 = add i64 %258, -1
  %385 = icmp ugt i64 %350, %235
  br i1 %385, label %386, label %391

386:                                              ; preds = %383
  %387 = sub i64 9223372036854775807, %258
  %388 = icmp ugt i64 %380, %387
  %389 = add i64 %380, %384
  %390 = select i1 %388, i64 9223372036854775806, i64 %389
  br label %391

391:                                              ; preds = %386, %383, %375
  %392 = phi i64 [ %380, %375 ], [ %390, %386 ], [ %380, %383 ]
  %393 = phi i64 [ 0, %375 ], [ 0, %386 ], [ %384, %383 ]
  %394 = icmp uge i64 %254, %233
  %395 = icmp ne i64 %393, 0
  %396 = or i1 %394, %395
  br i1 %396, label %399, label %397

397:                                              ; preds = %391
  %398 = icmp ugt i8* %376, %227
  br i1 %398, label %399, label %401

399:                                              ; preds = %397, %391
  %400 = phi i64 [ 0, %397 ], [ %381, %391 ]
  br label %251

401:                                              ; preds = %397
  %402 = icmp ugt i64 %392, %8
  %403 = select i1 %402, i64 %8, i64 %392
  %404 = getelementptr inbounds i8, i8* %12, i64 %403
  %405 = icmp ugt i8* %404, %237
  br i1 %405, label %406, label %414

406:                                              ; preds = %401, %406
  %407 = phi i8* [ %412, %406 ], [ %404, %401 ]
  %408 = phi i8* [ %411, %406 ], [ %237, %401 ]
  %409 = load i8, i8* %407, align 1
  %410 = load i8, i8* %408, align 1
  store i8 %410, i8* %407, align 1
  %411 = getelementptr inbounds i8, i8* %408, i64 1
  store i8 %409, i8* %408, align 1
  %412 = getelementptr inbounds i8, i8* %407, i64 -1
  %413 = icmp ugt i8* %412, %411
  br i1 %413, label %406, label %414

414:                                              ; preds = %406, %401
  %415 = sub i64 9223372036854775806, %350
  %416 = icmp ugt i64 %392, %415
  %417 = add i64 %392, %350
  %418 = select i1 %416, i64 9223372036854775806, i64 %417
  br label %536

419:                                              ; preds = %27
  %420 = zext i32 %17 to i64
  %421 = icmp ult i64 %420, %4
  br i1 %421, label %422, label %499

422:                                              ; preds = %419
  %423 = add i32 %17, 1
  %424 = getelementptr inbounds %"struct.base::strings::internal::Arg", %"struct.base::strings::internal::Arg"* %3, i64 %420
  %425 = getelementptr inbounds %"struct.base::strings::internal::Arg", %"struct.base::strings::internal::Arg"* %3, i64 %420, i32 1
  %426 = load i32, i32* %425, align 8
  switch i32 %426, label %499 [
    i32 2, label %427
    i32 0, label %432
  ]

427:                                              ; preds = %422
  %428 = bitcast %"struct.base::strings::internal::Arg"* %424 to i8**
  %429 = load i8*, i8** %428, align 8
  %430 = icmp eq i8* %429, null
  %431 = select i1 %430, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* %429
  br label %440

432:                                              ; preds = %422
  %433 = getelementptr inbounds %"struct.base::strings::internal::Arg", %"struct.base::strings::internal::Arg"* %3, i64 %420, i32 0, i32 0, i32 1
  %434 = load i8, i8* %433, align 8
  %435 = icmp eq i8 %434, 8
  br i1 %435, label %436, label %499

436:                                              ; preds = %432
  %437 = getelementptr inbounds %"struct.base::strings::internal::Arg", %"struct.base::strings::internal::Arg"* %424, i64 0, i32 0, i32 0, i32 0
  %438 = load i64, i64* %437, align 8
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %440, label %499

440:                                              ; preds = %436, %427
  %441 = phi i8* [ %431, %427 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), %436 ]
  %442 = icmp eq i64 %29, 0
  br i1 %442, label %481, label %443

443:                                              ; preds = %440
  %444 = load i8, i8* %441, align 1
  %445 = icmp eq i8 %444, 0
  br i1 %445, label %446, label %474

446:                                              ; preds = %474, %443
  %447 = phi i64 [ 0, %443 ], [ %478, %474 ]
  br label %448

448:                                              ; preds = %446, %459
  %449 = phi i64 [ %462, %459 ], [ %19, %446 ]
  %450 = phi i64 [ %463, %459 ], [ %29, %446 ]
  %451 = icmp ugt i64 %450, %447
  br i1 %451, label %452, label %481

452:                                              ; preds = %448
  %453 = icmp ult i64 %449, %8
  br i1 %453, label %459, label %454

454:                                              ; preds = %452
  %455 = icmp ugt i64 %449, 9223372036854775805
  %456 = add i64 %449, 1
  %457 = select i1 %455, i64 9223372036854775806, i64 %456
  %458 = add i64 %450, -1
  br label %464

459:                                              ; preds = %452
  %460 = getelementptr inbounds i8, i8* %0, i64 %449
  store i8 32, i8* %460, align 1
  %461 = icmp ugt i64 %449, 9223372036854775805
  %462 = add nuw i64 %449, 1
  %463 = add i64 %450, -1
  br i1 %461, label %464, label %448

464:                                              ; preds = %459, %454
  %465 = phi i64 [ %457, %454 ], [ 9223372036854775806, %459 ]
  %466 = phi i64 [ %458, %454 ], [ %463, %459 ]
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %481, label %468

468:                                              ; preds = %464
  %469 = sub i64 %466, %447
  %470 = sub i64 9223372036854775806, %469
  %471 = icmp ugt i64 %465, %470
  %472 = add i64 %469, %465
  %473 = select i1 %471, i64 9223372036854775806, i64 %472
  br label %481

474:                                              ; preds = %443, %474
  %475 = phi i8* [ %477, %474 ], [ %441, %443 ]
  %476 = phi i64 [ %478, %474 ], [ 0, %443 ]
  %477 = getelementptr inbounds i8, i8* %475, i64 1
  %478 = add i64 %476, 1
  %479 = load i8, i8* %477, align 1
  %480 = icmp eq i8 %479, 0
  br i1 %480, label %446, label %474

481:                                              ; preds = %448, %468, %464, %440
  %482 = phi i64 [ %19, %440 ], [ %465, %464 ], [ %473, %468 ], [ %449, %448 ]
  %483 = load i8, i8* %441, align 1
  %484 = icmp eq i8 %483, 0
  br i1 %484, label %536, label %485

485:                                              ; preds = %481, %493
  %486 = phi i8 [ %497, %493 ], [ %483, %481 ]
  %487 = phi i8* [ %489, %493 ], [ %441, %481 ]
  %488 = phi i64 [ %496, %493 ], [ %482, %481 ]
  %489 = getelementptr inbounds i8, i8* %487, i64 1
  %490 = icmp ult i64 %488, %8
  br i1 %490, label %491, label %493

491:                                              ; preds = %485
  %492 = getelementptr inbounds i8, i8* %0, i64 %488
  store i8 %486, i8* %492, align 1
  br label %493

493:                                              ; preds = %485, %491
  %494 = icmp ugt i64 %488, 9223372036854775805
  %495 = add i64 %488, 1
  %496 = select i1 %494, i64 9223372036854775806, i64 %495
  %497 = load i8, i8* %489, align 1
  %498 = icmp eq i8 %497, 0
  br i1 %498, label %536, label %485

499:                                              ; preds = %27, %436, %432, %422, %152, %148, %141, %125, %70, %53, %419, %116, %67
  %500 = phi i8* [ %28, %67 ], [ %28, %116 ], [ %28, %419 ], [ %49, %53 ], [ %28, %70 ], [ %28, %125 ], [ %28, %141 ], [ %28, %148 ], [ %28, %152 ], [ %28, %422 ], [ %28, %432 ], [ %28, %436 ], [ %28, %27 ]
  %501 = phi i32 [ %17, %67 ], [ %17, %116 ], [ %17, %419 ], [ %57, %53 ], [ %71, %70 ], [ %120, %125 ], [ %120, %141 ], [ %120, %148 ], [ %120, %152 ], [ %423, %422 ], [ %423, %432 ], [ %423, %436 ], [ %17, %27 ]
  %502 = phi i8 [ %31, %67 ], [ %31, %116 ], [ %31, %419 ], [ %50, %53 ], [ %31, %70 ], [ %31, %125 ], [ 112, %141 ], [ 112, %148 ], [ 112, %152 ], [ %31, %422 ], [ %31, %432 ], [ %31, %436 ], [ %31, %27 ]
  %503 = icmp ult i64 %19, %8
  br i1 %503, label %504, label %506

504:                                              ; preds = %499
  %505 = getelementptr inbounds i8, i8* %0, i64 %19
  store i8 37, i8* %505, align 1
  br label %506

506:                                              ; preds = %499, %504
  %507 = icmp ugt i64 %19, 9223372036854775805
  %508 = add i64 %19, 1
  %509 = select i1 %507, i64 9223372036854775806, i64 %508
  %510 = icmp eq i8 %502, 0
  br i1 %510, label %542, label %511

511:                                              ; preds = %506
  %512 = icmp ult i64 %509, %8
  br i1 %512, label %513, label %518

513:                                              ; preds = %511
  %514 = getelementptr inbounds i8, i8* %0, i64 %509
  store i8 %502, i8* %514, align 1
  %515 = icmp ugt i64 %509, 9223372036854775805
  %516 = add nuw i64 %509, 1
  %517 = select i1 %515, i64 9223372036854775806, i64 %516
  br label %536

518:                                              ; preds = %511
  %519 = icmp ugt i64 %509, 9223372036854775805
  %520 = add i64 %509, 1
  %521 = select i1 %519, i64 9223372036854775806, i64 %520
  br label %536

522:                                              ; preds = %27, %21
  %523 = phi i8* [ %22, %21 ], [ %28, %27 ]
  %524 = icmp ult i64 %19, %8
  br i1 %524, label %525, label %532

525:                                              ; preds = %522
  %526 = getelementptr inbounds i8, i8* %523, i64 -1
  %527 = load i8, i8* %526, align 1
  %528 = getelementptr inbounds i8, i8* %0, i64 %19
  store i8 %527, i8* %528, align 1
  %529 = icmp ugt i64 %19, 9223372036854775805
  %530 = add nuw i64 %19, 1
  %531 = select i1 %529, i64 9223372036854775806, i64 %530
  br label %536

532:                                              ; preds = %522
  %533 = icmp ugt i64 %19, 9223372036854775805
  %534 = add i64 %19, 1
  %535 = select i1 %533, i64 9223372036854775806, i64 %534
  br label %536

536:                                              ; preds = %493, %481, %112, %107, %414, %513, %518, %532, %525
  %537 = phi i64 [ %531, %525 ], [ %535, %532 ], [ %521, %518 ], [ %517, %513 ], [ %418, %414 ], [ %115, %112 ], [ %111, %107 ], [ %482, %481 ], [ %496, %493 ]
  %538 = phi i8* [ %523, %525 ], [ %523, %532 ], [ %500, %518 ], [ %500, %513 ], [ %28, %414 ], [ %28, %112 ], [ %28, %107 ], [ %28, %481 ], [ %28, %493 ]
  %539 = phi i32 [ %17, %525 ], [ %17, %532 ], [ %501, %518 ], [ %501, %513 ], [ %120, %414 ], [ %71, %112 ], [ %71, %107 ], [ %423, %481 ], [ %423, %493 ]
  %540 = load i8, i8* %538, align 1
  %541 = icmp eq i8 %540, 0
  br i1 %541, label %542, label %15

542:                                              ; preds = %15, %536, %506, %99, %7
  %543 = phi i64 [ 0, %7 ], [ %100, %99 ], [ %509, %506 ], [ %537, %536 ], [ 9223372036854775806, %15 ]
  %544 = icmp ugt i64 %543, %8
  %545 = select i1 %544, i64 %8, i64 %543
  %546 = getelementptr inbounds i8, i8* %0, i64 %545
  store i8 0, i8* %546, align 1
  br label %547

547:                                              ; preds = %5, %542
  %548 = phi i64 [ %543, %542 ], [ -1, %5 ]
  ret i64 %548
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base7strings12SafeSNPrintfEPcmPKc(i8*, i64, i8* nocapture readonly) local_unnamed_addr #0 {
  %4 = icmp slt i64 %1, 1
  br i1 %4, label %43, label %5

5:                                                ; preds = %3
  %6 = add nsw i64 %1, -1
  %7 = load i8, i8* %2, align 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %38, label %9

9:                                                ; preds = %5, %33
  %10 = phi i8 [ %36, %33 ], [ %7, %5 ]
  %11 = phi i8* [ %35, %33 ], [ %2, %5 ]
  %12 = phi i64 [ %26, %33 ], [ 0, %5 ]
  %13 = icmp ult i64 %12, %6
  br i1 %13, label %14, label %20

14:                                               ; preds = %9
  %15 = getelementptr inbounds i8, i8* %0, i64 %12
  store i8 %10, i8* %15, align 1
  %16 = icmp ugt i64 %12, 9223372036854775805
  %17 = add nuw i64 %12, 1
  %18 = select i1 %16, i64 9223372036854775806, i64 %17
  %19 = load i8, i8* %11, align 1
  br label %24

20:                                               ; preds = %9
  %21 = icmp ugt i64 %12, 9223372036854775805
  %22 = add i64 %12, 1
  %23 = select i1 %21, i64 9223372036854775806, i64 %22
  br label %24

24:                                               ; preds = %14, %20
  %25 = phi i8 [ %19, %14 ], [ %10, %20 ]
  %26 = phi i64 [ %18, %14 ], [ %23, %20 ]
  %27 = icmp eq i8 %25, 37
  br i1 %27, label %28, label %33

28:                                               ; preds = %24
  %29 = getelementptr inbounds i8, i8* %11, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 37
  %32 = select i1 %31, i8* %29, i8* %11
  br label %33

33:                                               ; preds = %28, %24
  %34 = phi i8* [ %11, %24 ], [ %32, %28 ]
  %35 = getelementptr inbounds i8, i8* %34, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %9

38:                                               ; preds = %33, %5
  %39 = phi i64 [ 0, %5 ], [ %26, %33 ]
  %40 = icmp ugt i64 %39, %6
  %41 = select i1 %40, i64 %6, i64 %39
  %42 = getelementptr inbounds i8, i8* %0, i64 %41
  store i8 0, i8* %42, align 1
  br label %43

43:                                               ; preds = %3, %38
  %44 = phi i64 [ %39, %38 ], [ -1, %3 ]
  ret i64 %44
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !7, !3}
!7 = !{!"llvm.loop.unroll.runtime.disable"}
