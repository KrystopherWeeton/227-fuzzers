; ModuleID = '../../net/third_party/quiche/src/quic/core/congestion_control/general_loss_algorithm.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/congestion_control/general_loss_algorithm.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.quic::QuicTime::Delta" = type { i64 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.quic::LossDetectionInterface::DetectionStats" = type <{ i64, i64, float, [4 x i8] }>
%"class.quic::GeneralLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", %"class.quic::LossDetectionInterface"*, %"class.quic::QuicTime", i32, [4 x i8], i64, i8, i8, i8, [5 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8] }>
%"class.quic::LossDetectionInterface" = type { i32 (...)** }
%"class.quic::QuicTime" = type { i64 }
%"class.quic::QuicPacketNumber" = type { i64 }
%"class.quic::QuicUnackedPacketMap" = type <{ i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quiche::QuicheCircularDeque", %"class.quic::QuicPacketNumber", i64, [3 x i64], i64, %"class.quic::QuicTime", [3 x %"class.quic::QuicTime"], %"class.quic::QuicTime", %"struct.quic::QuicStreamFrame", %"class.quic::SessionNotifierInterface"*, i8, i8, [6 x i8] }>
%"class.quiche::QuicheCircularDeque" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" = type { %"struct.quic::QuicTransmissionInfo"*, i64 }
%"struct.quic::QuicTransmissionInfo" = type { %"class.std::__1::vector", %"class.quic::QuicTime", i16, i8, i8, i8, i8, i8, i8, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"*, %"class.std::__1::__compressed_pair.43" }
%"struct.quic::QuicFrame" = type { %union.anon }
%union.anon = type { %"struct.quic::QuicStreamFrame" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.quic::QuicFrame"* }
%"struct.quic::QuicStreamFrame" = type { i8, i8, i16, i32, i8*, i64 }
%"class.quic::SessionNotifierInterface" = type { i32 (...)** }
%"class.quic::RttStats" = type <{ %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"struct.quic::RttStats::StandardDeviationCaculator", i8, [7 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", i8, [7 x i8] }>
%"struct.quic::RttStats::StandardDeviationCaculator" = type { i8, double }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"*, %"class.std::__1::__compressed_pair.50" }
%"struct.quic::AckedPacket" = type { %"class.quic::QuicPacketNumber", i16, %"class.quic::QuicTime" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.quic::AckedPacket"* }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"*, %"class.std::__1::__compressed_pair.57" }
%"struct.quic::LostPacket" = type <{ %"class.quic::QuicPacketNumber", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.quic::LostPacket"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.26 }
%union.anon.26 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.quic::QuicConfig" = type { i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, %"class.quic::QuicFixedTagVector", %"class.quic::QuicFixedTagVector", %"class.quic::QuicTime::Delta", %"class.absl::optional", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint32", i8, i8, [6 x i8], %"class.quic::QuicFixedSocketAddress", %"class.quic::QuicFixedSocketAddress", %"class.absl::optional.72", %"class.quic::QuicFixedStatelessResetToken", %"class.std::__1::vector.62", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.absl::optional.78", %"class.absl::optional.78", %"class.absl::optional.78", %"class.absl::optional.78", %"class.absl::optional.78", %"class.absl::optional.78", %"class.absl::flat_hash_map", %"class.absl::flat_hash_map" }
%"class.quic::QuicFixedTagVector" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"class.std::__1::vector.62", %"class.std::__1::vector.62" }
%"class.quic::QuicConfigValue.base" = type <{ i32 (...)**, i32, i8 }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.69 }
%union.anon.69 = type { %"class.quic::QuicTime::Delta" }
%"class.quic::QuicFixedSocketAddress" = type { %"class.quic::QuicConfigValue.base", i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.quic::QuicSocketAddress" = type <{ %"class.quic::QuicIpAddress", i16, [2 x i8] }>
%"class.quic::QuicIpAddress" = type { %union.anon.70, i32 }
%union.anon.70 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.71 }
%union.anon.71 = type { [4 x i32] }
%"class.absl::optional.72" = type { %"class.absl::optional_internal::optional_data.73" }
%"class.absl::optional_internal::optional_data.73" = type { %"class.absl::optional_internal::optional_data_base.74" }
%"class.absl::optional_internal::optional_data_base.74" = type { %"class.absl::optional_internal::optional_data_dtor_base.75" }
%"class.absl::optional_internal::optional_data_dtor_base.75" = type { i8, %union.anon.76 }
%union.anon.76 = type { %"struct.std::__1::pair.77" }
%"struct.std::__1::pair.77" = type { %"class.quic::QuicConnectionId", %"struct.std::__1::array" }
%"class.quic::QuicConnectionId" = type { %union.anon.31 }
%union.anon.31 = type { %struct.anon.33 }
%struct.anon.33 = type { i8, i8* }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.quic::QuicFixedStatelessResetToken" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"struct.std::__1::array", %"struct.std::__1::array", i8 }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { i32*, i32*, %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { i32* }
%"class.quic::QuicFixedUint32" = type { %"class.quic::QuicConfigValue.base", i8, i8, i32, i32 }
%"class.quic::QuicFixedUint62" = type { %"class.quic::QuicConfigValue.base", i8, i8, i64, i64 }
%"class.absl::optional.78" = type { %"class.absl::optional_internal::optional_data.79" }
%"class.absl::optional_internal::optional_data.79" = type { %"class.absl::optional_internal::optional_data_base.80" }
%"class.absl::optional_internal::optional_data_base.80" = type { %"class.absl::optional_internal::optional_data_dtor_base.81" }
%"class.absl::optional_internal::optional_data_dtor_base.81" = type { i8, %union.anon.82 }
%union.anon.82 = type { %"class.quic::QuicConnectionId" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple.83" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple.83" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.84" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.84" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.85" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.85" = type { i64 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.27 }
%struct.anon.27 = type { i8 }

$_ZN4quic22LossDetectionInterfaceD2Ev = comdat any

$_ZN4quic20GeneralLossAlgorithmD0Ev = comdat any

$_ZN4quic20GeneralLossAlgorithm13SetFromConfigERKNS_10QuicConfigENS_11PerspectiveE = comdat any

$_ZN4quic20GeneralLossAlgorithm18OnConfigNegotiatedEv = comdat any

$_ZN4quic20GeneralLossAlgorithm17OnMinRttAvailableEv = comdat any

$_ZN4quic20GeneralLossAlgorithm18OnUserAgentIdKnownEv = comdat any

$_ZN4quic20GeneralLossAlgorithm18OnConnectionClosedEv = comdat any

$_ZN4quic20GeneralLossAlgorithm20OnReorderingDetectedEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [88 x i8] c"../../net/third_party/quiche/src/quic/core/congestion_control/general_loss_algorithm.cc\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"least_in_flight: \00", align 1
@.str.2 = private unnamed_addr constant [43 x i8] c" is greater than largest_sent_packet + 1: \00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"Cannot switch packet_number_space\00", align 1
@_ZTVN4quic20GeneralLossAlgorithmE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::LossDetectionInterface"*)* @_ZN4quic22LossDetectionInterfaceD2Ev to i8*), i8* bitcast (void (%"class.quic::GeneralLossAlgorithm"*)* @_ZN4quic20GeneralLossAlgorithmD0Ev to i8*), i8* bitcast (void (%"class.quic::GeneralLossAlgorithm"*, %"class.quic::QuicConfig"*, i8)* @_ZN4quic20GeneralLossAlgorithm13SetFromConfigERKNS_10QuicConfigENS_11PerspectiveE to i8*), i8* bitcast (void (%"struct.quic::LossDetectionInterface::DetectionStats"*, %"class.quic::GeneralLossAlgorithm"*, %"class.quic::QuicUnackedPacketMap"*, i64, %"class.quic::RttStats"*, i64, %"class.std::__1::vector.48"*, %"class.std::__1::vector.55"*)* @_ZN4quic20GeneralLossAlgorithm12DetectLossesERKNS_20QuicUnackedPacketMapENS_8QuicTimeERKNS_8RttStatsENS_16QuicPacketNumberERKNSt3__16vectorINS_11AckedPacketENS9_9allocatorISB_EEEEPNSA_INS_10LostPacketENSC_ISH_EEEE to i8*), i8* bitcast (i64 (%"class.quic::GeneralLossAlgorithm"*)* @_ZNK4quic20GeneralLossAlgorithm14GetLossTimeoutEv to i8*), i8* bitcast (void (%"class.quic::GeneralLossAlgorithm"*, %"class.quic::QuicUnackedPacketMap"*, %"class.quic::RttStats"*, i64, i64, i64)* @_ZN4quic20GeneralLossAlgorithm20SpuriousLossDetectedERKNS_20QuicUnackedPacketMapERKNS_8RttStatsENS_8QuicTimeENS_16QuicPacketNumberES8_ to i8*), i8* bitcast (void (%"class.quic::GeneralLossAlgorithm"*)* @_ZN4quic20GeneralLossAlgorithm18OnConfigNegotiatedEv to i8*), i8* bitcast (void (%"class.quic::GeneralLossAlgorithm"*)* @_ZN4quic20GeneralLossAlgorithm17OnMinRttAvailableEv to i8*), i8* bitcast (void (%"class.quic::GeneralLossAlgorithm"*)* @_ZN4quic20GeneralLossAlgorithm18OnUserAgentIdKnownEv to i8*), i8* bitcast (void (%"class.quic::GeneralLossAlgorithm"*)* @_ZN4quic20GeneralLossAlgorithm18OnConnectionClosedEv to i8*), i8* bitcast (void (%"class.quic::GeneralLossAlgorithm"*)* @_ZN4quic20GeneralLossAlgorithm20OnReorderingDetectedEv to i8*)] }, align 8
@_ZN4quicL17kAlarmGranularityE = internal unnamed_addr constant %"class.quic::QuicTime::Delta" { i64 1000 }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic20GeneralLossAlgorithm12DetectLossesERKNS_20QuicUnackedPacketMapENS_8QuicTimeERKNS_8RttStatsENS_16QuicPacketNumberERKNSt3__16vectorINS_11AckedPacketENS9_9allocatorISB_EEEEPNSA_INS_10LostPacketENSC_ISH_EEEE(%"struct.quic::LossDetectionInterface::DetectionStats"* noalias nocapture sret, %"class.quic::GeneralLossAlgorithm"*, %"class.quic::QuicUnackedPacketMap"* dereferenceable(240), i64, %"class.quic::RttStats"* nocapture readonly dereferenceable(88), i64, %"class.std::__1::vector.48"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.55"*) unnamed_addr #0 align 2 {
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.quic::QuicPacketNumber", align 8
  %12 = alloca %"class.logging::LogMessage", align 8
  %13 = alloca %"class.quic::QuicPacketNumber", align 8
  %14 = alloca [6 x i8], align 2
  %15 = alloca [6 x i8], align 2
  %16 = getelementptr inbounds %"struct.quic::LossDetectionInterface::DetectionStats", %"struct.quic::LossDetectionInterface::DetectionStats"* %0, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.quic::LossDetectionInterface::DetectionStats", %"struct.quic::LossDetectionInterface::DetectionStats"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.quic::LossDetectionInterface::DetectionStats", %"struct.quic::LossDetectionInterface::DetectionStats"* %0, i64 0, i32 2
  %19 = getelementptr inbounds %"struct.quic::LossDetectionInterface::DetectionStats", %"struct.quic::LossDetectionInterface::DetectionStats"* %0, i64 0, i32 3, i64 0
  %20 = bitcast %"struct.quic::LossDetectionInterface::DetectionStats"* %0 to i8*
  %21 = bitcast i8* %19 to i32*
  store i32 -1431655766, i32* %21, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 20, i1 false) #9
  %22 = getelementptr inbounds %"class.quic::GeneralLossAlgorithm", %"class.quic::GeneralLossAlgorithm"* %1, i64 0, i32 2, i32 0
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %6, i64 0, i32 0, i32 0
  %24 = load %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %6, i64 0, i32 0, i32 1
  %26 = load %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"** %25, align 8
  %27 = icmp eq %"struct.quic::AckedPacket"* %24, %26
  br i1 %27, label %65, label %28

28:                                               ; preds = %8
  %29 = getelementptr inbounds %"class.quic::GeneralLossAlgorithm", %"class.quic::GeneralLossAlgorithm"* %1, i64 0, i32 10
  %30 = tail call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* %29) #9
  br i1 %30, label %31, label %65

31:                                               ; preds = %28
  %32 = load %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"** %23, align 8
  %33 = getelementptr inbounds %"struct.quic::AckedPacket", %"struct.quic::AckedPacket"* %32, i64 0, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.quic::GeneralLossAlgorithm", %"class.quic::GeneralLossAlgorithm"* %1, i64 0, i32 10, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %34, %36
  %38 = ptrtoint %"struct.quic::AckedPacket"* %32 to i64
  br i1 %37, label %39, label %65

39:                                               ; preds = %31
  %40 = load %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"** %25, align 8
  %41 = getelementptr inbounds %"struct.quic::AckedPacket", %"struct.quic::AckedPacket"* %40, i64 -1, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, %5
  br i1 %43, label %44, label %53

44:                                               ; preds = %39
  %45 = ptrtoint %"struct.quic::AckedPacket"* %40 to i64
  %46 = sub i64 %45, %38
  %47 = sdiv exact i64 %46, 24
  %48 = add i64 %34, -1
  %49 = add i64 %48, %47
  %50 = icmp eq i64 %49, %5
  br i1 %50, label %51, label %53

51:                                               ; preds = %44
  %52 = add i64 %5, 1
  store i64 %52, i64* %35, align 8
  br label %406

53:                                               ; preds = %39, %44
  %54 = icmp eq %"struct.quic::AckedPacket"* %32, %40
  br i1 %54, label %65, label %55

55:                                               ; preds = %53, %60
  %56 = phi %"struct.quic::AckedPacket"* [ %58, %60 ], [ %32, %53 ]
  %57 = tail call dereferenceable(8) %"class.quic::QuicPacketNumber"* @_ZN4quic16QuicPacketNumberppEv(%"class.quic::QuicPacketNumber"* %29) #9
  %58 = getelementptr inbounds %"struct.quic::AckedPacket", %"struct.quic::AckedPacket"* %56, i64 1
  %59 = icmp eq %"struct.quic::AckedPacket"* %58, %40
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"struct.quic::AckedPacket", %"struct.quic::AckedPacket"* %58, i64 0, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = load i64, i64* %35, align 8
  %64 = icmp eq i64 %62, %63
  br i1 %64, label %55, label %65

65:                                               ; preds = %55, %60, %53, %31, %28, %8
  %66 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66)
  %67 = getelementptr inbounds %"class.quic::RttStats", %"class.quic::RttStats"* %4, i64 0, i32 3, i32 0
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* %9, align 8
  %69 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69)
  %70 = getelementptr inbounds %"class.quic::RttStats", %"class.quic::RttStats"* %4, i64 0, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %10, align 8
  %72 = icmp slt i64 %68, %71
  %73 = select i1 %72, i64* %10, i64* %9
  %74 = bitcast i64* %73 to %"class.quic::QuicTime::Delta"*
  %75 = load i64, i64* %73, align 8
  %76 = icmp sgt i64 %75, 1000
  %77 = select i1 %76, %"class.quic::QuicTime::Delta"* %74, %"class.quic::QuicTime::Delta"* @_ZN4quicL17kAlarmGranularityE
  %78 = getelementptr inbounds %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta"* %77, i64 0, i32 0
  %79 = load i64, i64* %78, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66)
  %80 = bitcast %"class.quic::QuicPacketNumber"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #9
  %81 = getelementptr inbounds %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber"* %11, i64 0, i32 0
  %82 = tail call i64 @_ZNK4quic20QuicUnackedPacketMap15GetLeastUnackedEv(%"class.quic::QuicUnackedPacketMap"* %2) #9
  store i64 %82, i64* %81, align 8
  %83 = getelementptr inbounds %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicUnackedPacketMap"* %2, i64 0, i32 7, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"class.quic::GeneralLossAlgorithm", %"class.quic::GeneralLossAlgorithm"* %1, i64 0, i32 10
  %86 = tail call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* %85) #9
  br i1 %86, label %87, label %122

87:                                               ; preds = %65
  %88 = getelementptr inbounds %"class.quic::GeneralLossAlgorithm", %"class.quic::GeneralLossAlgorithm"* %1, i64 0, i32 10, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = icmp ult i64 %89, %82
  br i1 %90, label %122, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicUnackedPacketMap"* %2, i64 0, i32 2, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, 1
  %95 = icmp ugt i64 %89, %94
  br i1 %95, label %96, label %111

96:                                               ; preds = %91
  %97 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #9
  %98 = bitcast %"class.quic::QuicPacketNumber"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #9
  br i1 %97, label %99, label %110

99:                                               ; preds = %96
  %100 = bitcast %"class.logging::LogMessage"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %100) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %12, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str, i64 0, i64 0), i32 72, i32 2) #9
  %101 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %12, i64 0, i32 2
  %102 = bitcast %"class.std::__1::basic_ostringstream"* %101 to %"class.std::__1::basic_ostream"*
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %102, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i64 17) #9
  %104 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4quiclsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_16QuicPacketNumberE(%"class.std::__1::basic_ostream"* dereferenceable(160) %103, %"class.quic::QuicPacketNumber"* dereferenceable(8) %85) #9
  %105 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %104, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i64 42) #9
  %106 = load i64, i64* %92, align 8
  %107 = add i64 %106, 1
  %108 = getelementptr inbounds %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber"* %13, i64 0, i32 0
  store i64 %107, i64* %108, align 8
  %109 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4quiclsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_16QuicPacketNumberE(%"class.std::__1::basic_ostream"* dereferenceable(160) %105, %"class.quic::QuicPacketNumber"* nonnull dereferenceable(8) %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %100) #9
  br label %122

110:                                              ; preds = %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #9
  br label %122

111:                                              ; preds = %91
  %112 = sub i64 %89, %82
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %120, label %114

114:                                              ; preds = %111
  %115 = getelementptr inbounds %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicUnackedPacketMap"* %2, i64 0, i32 7, i32 2, i32 1
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %112, %84
  %118 = add i64 %117, %116
  %119 = urem i64 %118, %116
  br label %120

120:                                              ; preds = %111, %114
  %121 = phi i64 [ %119, %114 ], [ %84, %111 ]
  store i64 %89, i64* %81, align 8
  br label %122

122:                                              ; preds = %87, %99, %110, %120, %65
  %123 = phi i64 [ %121, %120 ], [ %84, %87 ], [ %84, %65 ], [ %84, %110 ], [ %84, %99 ]
  call void @_ZN4quic16QuicPacketNumber5ClearEv(%"class.quic::QuicPacketNumber"* %85) #9
  %124 = getelementptr inbounds %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicUnackedPacketMap"* %2, i64 0, i32 7, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp ne i64 %123, %125
  %127 = load i64, i64* %81, align 8
  %128 = icmp ule i64 %127, %5
  %129 = and i1 %126, %128
  br i1 %129, label %130, label %400

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicUnackedPacketMap"* %2, i64 0, i32 7, i32 2, i32 0
  %132 = getelementptr inbounds %"class.quic::GeneralLossAlgorithm", %"class.quic::GeneralLossAlgorithm"* %1, i64 0, i32 11
  %133 = getelementptr inbounds %"class.quic::GeneralLossAlgorithm", %"class.quic::GeneralLossAlgorithm"* %1, i64 0, i32 1
  %134 = getelementptr inbounds %"class.quic::GeneralLossAlgorithm", %"class.quic::GeneralLossAlgorithm"* %1, i64 0, i32 8
  %135 = getelementptr inbounds %"class.quic::GeneralLossAlgorithm", %"class.quic::GeneralLossAlgorithm"* %1, i64 0, i32 5
  %136 = getelementptr inbounds [6 x i8], [6 x i8]* %14, i64 0, i64 0
  %137 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %7, i64 0, i32 0, i32 1
  %138 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %139 = bitcast %"struct.quic::LostPacket"** %137 to i64*
  %140 = bitcast %"class.std::__1::vector.55"* %7 to i64*
  %141 = bitcast %"struct.quic::LostPacket"** %138 to i64*
  %142 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %7, i64 0, i32 0, i32 0
  %143 = icmp eq i64 %79, 0
  %144 = sitofp i64 %79 to float
  %145 = getelementptr inbounds %"class.quic::GeneralLossAlgorithm", %"class.quic::GeneralLossAlgorithm"* %1, i64 0, i32 3
  %146 = getelementptr inbounds [6 x i8], [6 x i8]* %15, i64 0, i64 0
  %147 = getelementptr inbounds %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicUnackedPacketMap"* %2, i64 0, i32 7, i32 2, i32 1
  br label %148

148:                                              ; preds = %130, %386
  %149 = phi float [ 0.000000e+00, %130 ], [ %387, %386 ]
  %150 = phi i64 [ 0, %130 ], [ %388, %386 ]
  %151 = phi i64 [ %123, %130 ], [ %393, %386 ]
  %152 = load %"struct.quic::QuicTransmissionInfo"*, %"struct.quic::QuicTransmissionInfo"** %131, align 8
  %153 = getelementptr inbounds %"struct.quic::QuicTransmissionInfo", %"struct.quic::QuicTransmissionInfo"* %152, i64 %151, i32 3
  %154 = load i8, i8* %153, align 2
  %155 = call zeroext i8 @_ZNK4quic20QuicUnackedPacketMap20GetPacketNumberSpaceENS_15EncryptionLevelE(%"class.quic::QuicUnackedPacketMap"* %2, i8 signext %154) #9
  %156 = load i8, i8* %132, align 8
  %157 = icmp eq i8 %155, %156
  br i1 %157, label %158, label %386

158:                                              ; preds = %148
  %159 = load %"struct.quic::QuicTransmissionInfo"*, %"struct.quic::QuicTransmissionInfo"** %131, align 8
  %160 = getelementptr inbounds %"struct.quic::QuicTransmissionInfo", %"struct.quic::QuicTransmissionInfo"* %159, i64 %151, i32 5
  %161 = load i8, i8* %160, align 4, !range !2
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %386, label %163

163:                                              ; preds = %158
  %164 = load %"class.quic::LossDetectionInterface"*, %"class.quic::LossDetectionInterface"** %133, align 8
  %165 = icmp ne %"class.quic::LossDetectionInterface"* %164, null
  %166 = load i64, i64* %81, align 8
  %167 = icmp ne i64 %166, %5
  %168 = and i1 %165, %167
  br i1 %168, label %169, label %175

169:                                              ; preds = %163
  %170 = bitcast %"class.quic::LossDetectionInterface"* %164 to void (%"class.quic::LossDetectionInterface"*)***
  %171 = load void (%"class.quic::LossDetectionInterface"*)**, void (%"class.quic::LossDetectionInterface"*)*** %170, align 8
  %172 = getelementptr inbounds void (%"class.quic::LossDetectionInterface"*)*, void (%"class.quic::LossDetectionInterface"*)** %171, i64 10
  %173 = load void (%"class.quic::LossDetectionInterface"*)*, void (%"class.quic::LossDetectionInterface"*)** %172, align 8
  call void %173(%"class.quic::LossDetectionInterface"* nonnull %164) #9
  %174 = load i64, i64* %81, align 8
  br label %175

175:                                              ; preds = %163, %169
  %176 = phi i64 [ %166, %163 ], [ %174, %169 ]
  %177 = sub i64 %5, %176
  %178 = icmp ugt i64 %177, %150
  br i1 %178, label %179, label %180

179:                                              ; preds = %175
  store i64 %177, i64* %16, align 8
  br label %180

180:                                              ; preds = %179, %175
  %181 = phi i64 [ %177, %179 ], [ %150, %175 ]
  %182 = load i8, i8* %134, align 2, !range !2
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %184, label %195

184:                                              ; preds = %180
  %185 = load %"struct.quic::QuicTransmissionInfo"*, %"struct.quic::QuicTransmissionInfo"** %131, align 8
  %186 = getelementptr inbounds %"struct.quic::QuicTransmissionInfo", %"struct.quic::QuicTransmissionInfo"* %185, i64 %151, i32 2
  %187 = load i16, i16* %186, align 8
  %188 = call dereferenceable(56) %"struct.quic::QuicTransmissionInfo"* @_ZNK4quic20QuicUnackedPacketMap19GetTransmissionInfoENS_16QuicPacketNumberE(%"class.quic::QuicUnackedPacketMap"* %2, i64 %5) #9
  %189 = getelementptr inbounds %"struct.quic::QuicTransmissionInfo", %"struct.quic::QuicTransmissionInfo"* %188, i64 0, i32 2
  %190 = load i16, i16* %189, align 8
  %191 = icmp ugt i16 %187, %190
  br i1 %191, label %282, label %192

192:                                              ; preds = %184
  %193 = load i64, i64* %81, align 8
  %194 = sub i64 %5, %193
  br label %195

195:                                              ; preds = %192, %180
  %196 = phi i64 [ %194, %192 ], [ %177, %180 ]
  %197 = phi i64 [ %193, %192 ], [ %176, %180 ]
  %198 = load i64, i64* %135, align 8
  %199 = icmp ult i64 %196, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %195
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %136)
  %201 = load %"struct.quic::QuicTransmissionInfo"*, %"struct.quic::QuicTransmissionInfo"** %131, align 8
  %202 = getelementptr inbounds %"struct.quic::QuicTransmissionInfo", %"struct.quic::QuicTransmissionInfo"* %201, i64 %151, i32 2
  %203 = load i16, i16* %202, align 8
  %204 = load %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"** %137, align 8
  %205 = load %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"** %138, align 8
  %206 = icmp ult %"struct.quic::LostPacket"* %204, %205
  %207 = ptrtoint %"struct.quic::LostPacket"* %205 to i64
  br i1 %206, label %208, label %214

208:                                              ; preds = %200
  %209 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %204, i64 0, i32 0, i32 0
  store i64 %197, i64* %209, align 8
  %210 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %204, i64 0, i32 1
  store i16 %203, i16* %210, align 8
  %211 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %204, i64 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %211, i8* nonnull align 2 %136, i64 6, i1 false)
  %212 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %204, i64 1
  %213 = ptrtoint %"struct.quic::LostPacket"* %212 to i64
  store i64 %213, i64* %139, align 8
  br label %269

214:                                              ; preds = %200
  %215 = ptrtoint %"struct.quic::LostPacket"* %204 to i64
  %216 = load i64, i64* %140, align 8
  %217 = sub i64 %215, %216
  %218 = ashr exact i64 %217, 4
  %219 = add nsw i64 %218, 1
  %220 = icmp ugt i64 %219, 1152921504606846975
  br i1 %220, label %221, label %223

221:                                              ; preds = %214
  %222 = bitcast %"class.std::__1::vector.55"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %222) #10
  unreachable

223:                                              ; preds = %214
  %224 = sub i64 %207, %216
  %225 = ashr exact i64 %224, 4
  %226 = icmp ult i64 %225, 576460752303423487
  br i1 %226, label %227, label %235

227:                                              ; preds = %223
  %228 = ashr exact i64 %224, 3
  %229 = icmp ult i64 %228, %219
  %230 = select i1 %229, i64 %219, i64 %228
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %240, label %232

232:                                              ; preds = %227
  %233 = icmp ugt i64 %230, 1152921504606846975
  br i1 %233, label %234, label %235

234:                                              ; preds = %232
  call void @abort() #10
  unreachable

235:                                              ; preds = %232, %223
  %236 = phi i64 [ %230, %232 ], [ 1152921504606846975, %223 ]
  %237 = shl i64 %236, 4
  %238 = call i8* @_Znwm(i64 %237) #11
  %239 = bitcast i8* %238 to %"struct.quic::LostPacket"*
  br label %240

240:                                              ; preds = %235, %227
  %241 = phi i64 [ %236, %235 ], [ 0, %227 ]
  %242 = phi %"struct.quic::LostPacket"* [ %239, %235 ], [ null, %227 ]
  %243 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %242, i64 %218
  %244 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %242, i64 %241
  %245 = ptrtoint %"struct.quic::LostPacket"* %244 to i64
  %246 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %243, i64 0, i32 0, i32 0
  store i64 %197, i64* %246, align 8
  %247 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %242, i64 %218, i32 1
  store i16 %203, i16* %247, align 8
  %248 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %242, i64 %218, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %248, i8* nonnull align 2 %136, i64 6, i1 false)
  %249 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %243, i64 1
  %250 = ptrtoint %"struct.quic::LostPacket"* %249 to i64
  %251 = load %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"** %142, align 8
  %252 = load i64, i64* %139, align 8
  %253 = ptrtoint %"struct.quic::LostPacket"* %251 to i64
  %254 = sub i64 %252, %253
  %255 = ashr exact i64 %254, 4
  %256 = sub nsw i64 0, %255
  %257 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %243, i64 %256
  %258 = ptrtoint %"struct.quic::LostPacket"* %257 to i64
  %259 = icmp sgt i64 %254, 0
  br i1 %259, label %260, label %264

260:                                              ; preds = %240
  %261 = bitcast %"struct.quic::LostPacket"* %257 to i8*
  %262 = bitcast %"struct.quic::LostPacket"* %251 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %261, i8* align 8 %262, i64 %254, i1 false) #9
  %263 = load %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"** %142, align 8
  br label %264

264:                                              ; preds = %260, %240
  %265 = phi %"struct.quic::LostPacket"* [ %251, %240 ], [ %263, %260 ]
  store i64 %258, i64* %140, align 8
  store i64 %250, i64* %139, align 8
  store i64 %245, i64* %141, align 8
  %266 = icmp eq %"struct.quic::LostPacket"* %265, null
  br i1 %266, label %269, label %267

267:                                              ; preds = %264
  %268 = bitcast %"struct.quic::LostPacket"* %265 to i8*
  call void @_ZdlPv(i8* %268) #11
  br label %269

269:                                              ; preds = %208, %264, %267
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %136)
  %270 = load %"struct.quic::QuicTransmissionInfo"*, %"struct.quic::QuicTransmissionInfo"** %131, align 8
  %271 = getelementptr inbounds %"struct.quic::QuicTransmissionInfo", %"struct.quic::QuicTransmissionInfo"* %270, i64 %151, i32 1, i32 0
  %272 = load i64, i64* %271, align 8
  %273 = icmp sge i64 %272, %3
  %274 = or i1 %143, %273
  br i1 %274, label %279, label %275

275:                                              ; preds = %269
  %276 = sub nsw i64 %3, %272
  %277 = sitofp i64 %276 to float
  %278 = fdiv float %277, %144
  br label %279

279:                                              ; preds = %269, %275
  %280 = phi float [ %278, %275 ], [ 1.000000e+00, %269 ]
  %281 = fadd float %280, %149
  store float %281, float* %18, align 8
  br label %386

282:                                              ; preds = %195, %184
  %283 = load i32, i32* %145, align 8
  %284 = sext i32 %283 to i64
  %285 = ashr i64 %79, %284
  %286 = load %"struct.quic::QuicTransmissionInfo"*, %"struct.quic::QuicTransmissionInfo"** %131, align 8
  %287 = getelementptr inbounds %"struct.quic::QuicTransmissionInfo", %"struct.quic::QuicTransmissionInfo"* %286, i64 %151, i32 1, i32 0
  %288 = load i64, i64* %287, align 8
  %289 = add i64 %288, %79
  %290 = add i64 %289, %285
  %291 = icmp sgt i64 %290, %3
  br i1 %291, label %292, label %304

292:                                              ; preds = %282
  %293 = add nsw i32 %283, 1
  %294 = sext i32 %293 to i64
  %295 = ashr i64 %79, %294
  %296 = add nsw i64 %289, %295
  %297 = icmp sgt i64 %296, %3
  br i1 %297, label %299, label %298

298:                                              ; preds = %292
  store i64 1, i64* %17, align 8
  br label %299

299:                                              ; preds = %292, %298
  store i64 %290, i64* %22, align 8
  %300 = call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* %85) #9
  br i1 %300, label %400, label %301

301:                                              ; preds = %299
  %302 = getelementptr inbounds %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber"* %85, i64 0, i32 0
  %303 = load i64, i64* %81, align 8
  store i64 %303, i64* %302, align 8
  br label %400

304:                                              ; preds = %282
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %146)
  %305 = load i64, i64* %81, align 8
  %306 = getelementptr inbounds %"struct.quic::QuicTransmissionInfo", %"struct.quic::QuicTransmissionInfo"* %286, i64 %151, i32 2
  %307 = load i16, i16* %306, align 8
  %308 = load %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"** %137, align 8
  %309 = load %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"** %138, align 8
  %310 = icmp ult %"struct.quic::LostPacket"* %308, %309
  %311 = ptrtoint %"struct.quic::LostPacket"* %309 to i64
  br i1 %310, label %312, label %318

312:                                              ; preds = %304
  %313 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %308, i64 0, i32 0, i32 0
  store i64 %305, i64* %313, align 8
  %314 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %308, i64 0, i32 1
  store i16 %307, i16* %314, align 8
  %315 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %308, i64 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %315, i8* nonnull align 2 %146, i64 6, i1 false)
  %316 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %308, i64 1
  %317 = ptrtoint %"struct.quic::LostPacket"* %316 to i64
  store i64 %317, i64* %139, align 8
  br label %373

318:                                              ; preds = %304
  %319 = ptrtoint %"struct.quic::LostPacket"* %308 to i64
  %320 = load i64, i64* %140, align 8
  %321 = sub i64 %319, %320
  %322 = ashr exact i64 %321, 4
  %323 = add nsw i64 %322, 1
  %324 = icmp ugt i64 %323, 1152921504606846975
  br i1 %324, label %325, label %327

325:                                              ; preds = %318
  %326 = bitcast %"class.std::__1::vector.55"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %326) #10
  unreachable

327:                                              ; preds = %318
  %328 = sub i64 %311, %320
  %329 = ashr exact i64 %328, 4
  %330 = icmp ult i64 %329, 576460752303423487
  br i1 %330, label %331, label %339

331:                                              ; preds = %327
  %332 = ashr exact i64 %328, 3
  %333 = icmp ult i64 %332, %323
  %334 = select i1 %333, i64 %323, i64 %332
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %344, label %336

336:                                              ; preds = %331
  %337 = icmp ugt i64 %334, 1152921504606846975
  br i1 %337, label %338, label %339

338:                                              ; preds = %336
  call void @abort() #10
  unreachable

339:                                              ; preds = %336, %327
  %340 = phi i64 [ %334, %336 ], [ 1152921504606846975, %327 ]
  %341 = shl i64 %340, 4
  %342 = call i8* @_Znwm(i64 %341) #11
  %343 = bitcast i8* %342 to %"struct.quic::LostPacket"*
  br label %344

344:                                              ; preds = %339, %331
  %345 = phi i64 [ %340, %339 ], [ 0, %331 ]
  %346 = phi %"struct.quic::LostPacket"* [ %343, %339 ], [ null, %331 ]
  %347 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %346, i64 %322
  %348 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %346, i64 %345
  %349 = ptrtoint %"struct.quic::LostPacket"* %348 to i64
  %350 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %347, i64 0, i32 0, i32 0
  store i64 %305, i64* %350, align 8
  %351 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %346, i64 %322, i32 1
  store i16 %307, i16* %351, align 8
  %352 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %346, i64 %322, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %352, i8* nonnull align 2 %146, i64 6, i1 false)
  %353 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %347, i64 1
  %354 = ptrtoint %"struct.quic::LostPacket"* %353 to i64
  %355 = load %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"** %142, align 8
  %356 = load i64, i64* %139, align 8
  %357 = ptrtoint %"struct.quic::LostPacket"* %355 to i64
  %358 = sub i64 %356, %357
  %359 = ashr exact i64 %358, 4
  %360 = sub nsw i64 0, %359
  %361 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %347, i64 %360
  %362 = ptrtoint %"struct.quic::LostPacket"* %361 to i64
  %363 = icmp sgt i64 %358, 0
  br i1 %363, label %364, label %368

364:                                              ; preds = %344
  %365 = bitcast %"struct.quic::LostPacket"* %361 to i8*
  %366 = bitcast %"struct.quic::LostPacket"* %355 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %365, i8* align 8 %366, i64 %358, i1 false) #9
  %367 = load %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"** %142, align 8
  br label %368

368:                                              ; preds = %364, %344
  %369 = phi %"struct.quic::LostPacket"* [ %355, %344 ], [ %367, %364 ]
  store i64 %362, i64* %140, align 8
  store i64 %354, i64* %139, align 8
  store i64 %349, i64* %141, align 8
  %370 = icmp eq %"struct.quic::LostPacket"* %369, null
  br i1 %370, label %373, label %371

371:                                              ; preds = %368
  %372 = bitcast %"struct.quic::LostPacket"* %369 to i8*
  call void @_ZdlPv(i8* %372) #11
  br label %373

373:                                              ; preds = %312, %368, %371
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %146)
  %374 = load %"struct.quic::QuicTransmissionInfo"*, %"struct.quic::QuicTransmissionInfo"** %131, align 8
  %375 = getelementptr inbounds %"struct.quic::QuicTransmissionInfo", %"struct.quic::QuicTransmissionInfo"* %374, i64 %151, i32 1, i32 0
  %376 = load i64, i64* %375, align 8
  %377 = icmp sge i64 %376, %3
  %378 = or i1 %143, %377
  br i1 %378, label %383, label %379

379:                                              ; preds = %373
  %380 = sub nsw i64 %3, %376
  %381 = sitofp i64 %380 to float
  %382 = fdiv float %381, %144
  br label %383

383:                                              ; preds = %373, %379
  %384 = phi float [ %382, %379 ], [ 1.000000e+00, %373 ]
  %385 = fadd float %384, %149
  store float %385, float* %18, align 8
  br label %386

386:                                              ; preds = %279, %383, %158, %148
  %387 = phi float [ %281, %279 ], [ %385, %383 ], [ %149, %158 ], [ %149, %148 ]
  %388 = phi i64 [ %181, %279 ], [ %181, %383 ], [ %150, %158 ], [ %150, %148 ]
  %389 = load i64, i64* %147, align 8
  %390 = add i64 %389, -1
  %391 = icmp eq i64 %390, %151
  %392 = add i64 %151, 1
  %393 = select i1 %391, i64 0, i64 %392
  %394 = call dereferenceable(8) %"class.quic::QuicPacketNumber"* @_ZN4quic16QuicPacketNumberppEv(%"class.quic::QuicPacketNumber"* nonnull %11) #9
  %395 = load i64, i64* %124, align 8
  %396 = icmp ne i64 %393, %395
  %397 = load i64, i64* %81, align 8
  %398 = icmp ule i64 %397, %5
  %399 = and i1 %396, %398
  br i1 %399, label %148, label %400

400:                                              ; preds = %386, %122, %299, %301
  %401 = call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* %85) #9
  br i1 %401, label %405, label %402

402:                                              ; preds = %400
  %403 = add i64 %5, 1
  %404 = getelementptr inbounds %"class.quic::GeneralLossAlgorithm", %"class.quic::GeneralLossAlgorithm"* %1, i64 0, i32 10, i32 0
  store i64 %403, i64* %404, align 8
  br label %405

405:                                              ; preds = %402, %400
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #9
  br label %406

406:                                              ; preds = %405, %51
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(8) %"class.quic::QuicPacketNumber"* @_ZN4quic16QuicPacketNumberppEv(%"class.quic::QuicPacketNumber"*) local_unnamed_addr #2

declare i64 @_ZNK4quic20QuicUnackedPacketMap15GetLeastUnackedEv(%"class.quic::QuicUnackedPacketMap"*) local_unnamed_addr #2

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4quiclsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_16QuicPacketNumberE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.quic::QuicPacketNumber"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

declare void @_ZN4quic16QuicPacketNumber5ClearEv(%"class.quic::QuicPacketNumber"*) local_unnamed_addr #2

declare zeroext i8 @_ZNK4quic20QuicUnackedPacketMap20GetPacketNumberSpaceENS_15EncryptionLevelE(%"class.quic::QuicUnackedPacketMap"*, i8 signext) local_unnamed_addr #2

declare dereferenceable(56) %"struct.quic::QuicTransmissionInfo"* @_ZNK4quic20QuicUnackedPacketMap19GetTransmissionInfoENS_16QuicPacketNumberE(%"class.quic::QuicUnackedPacketMap"*, i64) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4quic20GeneralLossAlgorithm14GetLossTimeoutEv(%"class.quic::GeneralLossAlgorithm"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.quic::GeneralLossAlgorithm", %"class.quic::GeneralLossAlgorithm"* %0, i64 0, i32 2, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic20GeneralLossAlgorithm20SpuriousLossDetectedERKNS_20QuicUnackedPacketMapERKNS_8RttStatsENS_8QuicTimeENS_16QuicPacketNumberES8_(%"class.quic::GeneralLossAlgorithm"* nocapture, %"class.quic::QuicUnackedPacketMap"* dereferenceable(240), %"class.quic::RttStats"* nocapture readonly dereferenceable(88), i64, i64, i64) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.quic::GeneralLossAlgorithm", %"class.quic::GeneralLossAlgorithm"* %0, i64 0, i32 7
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %42, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.quic::GeneralLossAlgorithm", %"class.quic::GeneralLossAlgorithm"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %42

14:                                               ; preds = %10
  %15 = tail call dereferenceable(56) %"struct.quic::QuicTransmissionInfo"* @_ZNK4quic20QuicUnackedPacketMap19GetTransmissionInfoENS_16QuicPacketNumberE(%"class.quic::QuicUnackedPacketMap"* %1, i64 %4) #9
  %16 = getelementptr inbounds %"struct.quic::QuicTransmissionInfo", %"struct.quic::QuicTransmissionInfo"* %15, i64 0, i32 1, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = sub nsw i64 %3, %17
  %19 = getelementptr inbounds %"class.quic::RttStats", %"class.quic::RttStats"* %2, i64 0, i32 3, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.quic::RttStats", %"class.quic::RttStats"* %2, i64 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp slt i64 %20, %22
  %24 = select i1 %23, i64 %22, i64 %20
  %25 = load i32, i32* %11, align 8
  %26 = sext i32 %25 to i64
  %27 = ashr i64 %24, %26
  %28 = add nsw i64 %27, %24
  %29 = icmp slt i64 %28, %18
  %30 = icmp sgt i32 %25, 0
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %42

32:                                               ; preds = %14, %32
  %33 = phi i64 [ %34, %32 ], [ %26, %14 ]
  %34 = add nsw i64 %33, -1
  %35 = ashr i64 %24, %34
  %36 = add nsw i64 %35, %24
  %37 = icmp slt i64 %36, %18
  %38 = icmp sgt i64 %34, 0
  %39 = and i1 %38, %37
  br i1 %39, label %32, label %40

40:                                               ; preds = %32
  %41 = trunc i64 %34 to i32
  store i32 %41, i32* %11, align 8
  br label %42

42:                                               ; preds = %14, %40, %6, %10
  %43 = getelementptr inbounds %"class.quic::GeneralLossAlgorithm", %"class.quic::GeneralLossAlgorithm"* %0, i64 0, i32 6
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.quic::GeneralLossAlgorithm", %"class.quic::GeneralLossAlgorithm"* %0, i64 0, i32 5
  %48 = sub i64 %5, %4
  %49 = add i64 %48, 1
  %50 = load i64, i64* %47, align 8
  %51 = icmp ult i64 %50, %49
  %52 = select i1 %51, i64 %49, i64 %50
  store i64 %52, i64* %47, align 8
  br label %53

53:                                               ; preds = %42, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic20GeneralLossAlgorithm10InitializeENS_17PacketNumberSpaceEPNS_22LossDetectionInterfaceE(%"class.quic::GeneralLossAlgorithm"* nocapture, i8 zeroext, %"class.quic::LossDetectionInterface"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = getelementptr inbounds %"class.quic::GeneralLossAlgorithm", %"class.quic::GeneralLossAlgorithm"* %0, i64 0, i32 1
  store %"class.quic::LossDetectionInterface"* %2, %"class.quic::LossDetectionInterface"** %5, align 8
  %6 = getelementptr inbounds %"class.quic::GeneralLossAlgorithm", %"class.quic::GeneralLossAlgorithm"* %0, i64 0, i32 11
  %7 = load i8, i8* %6, align 8
  %8 = icmp ult i8 %7, 3
  br i1 %8, label %9, label %16

9:                                                ; preds = %3
  %10 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #9
  br i1 %10, label %11, label %17

11:                                               ; preds = %9
  %12 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %12) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str, i64 0, i64 0), i32 184, i32 2) #9
  %13 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %13 to %"class.std::__1::basic_ostream"*
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %14, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i64 33) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %12) #9
  br label %17

16:                                               ; preds = %3
  store i8 %1, i8* %6, align 8
  br label %17

17:                                               ; preds = %11, %9, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic20GeneralLossAlgorithm5ResetEv(%"class.quic::GeneralLossAlgorithm"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::GeneralLossAlgorithm", %"class.quic::GeneralLossAlgorithm"* %0, i64 0, i32 2, i32 0
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.quic::GeneralLossAlgorithm", %"class.quic::GeneralLossAlgorithm"* %0, i64 0, i32 10
  tail call void @_ZN4quic16QuicPacketNumber5ClearEv(%"class.quic::QuicPacketNumber"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic22LossDetectionInterfaceD2Ev(%"class.quic::LossDetectionInterface"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic20GeneralLossAlgorithmD0Ev(%"class.quic::GeneralLossAlgorithm"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.quic::GeneralLossAlgorithm"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic20GeneralLossAlgorithm13SetFromConfigERKNS_10QuicConfigENS_11PerspectiveE(%"class.quic::GeneralLossAlgorithm"*, %"class.quic::QuicConfig"* dereferenceable(1112), i8 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic20GeneralLossAlgorithm18OnConfigNegotiatedEv(%"class.quic::GeneralLossAlgorithm"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic20GeneralLossAlgorithm17OnMinRttAvailableEv(%"class.quic::GeneralLossAlgorithm"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic20GeneralLossAlgorithm18OnUserAgentIdKnownEv(%"class.quic::GeneralLossAlgorithm"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic20GeneralLossAlgorithm18OnConnectionClosedEv(%"class.quic::GeneralLossAlgorithm"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic20GeneralLossAlgorithm20OnReorderingDetectedEv(%"class.quic::GeneralLossAlgorithm"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
