; ModuleID = '../../chrome/browser/vr/input_delegate_for_testing.cc'
source_filename = "../../chrome/browser/vr/input_delegate_for_testing.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Vector3dF" = type { float, float, float }
%"struct.vr::ControllerModel" = type <{ %"class.gfx::Transform", %"class.gfx::Vector3dF", %"class.gfx::Point3F", i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", float, i8, i8, [2 x i8], i32, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Point3F" = type { float, float, float }
%"class.gfx::PointF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.vr::InputDelegateForTesting" = type { %"class.vr::InputDelegate", %"class.vr::UiInterface"*, %"class.std::__1::queue", %"struct.vr::ControllerModel", %"struct.vr::ControllerModel", %"class.base::TimeTicks", %"class.std::__1::unique_ptr" }
%"class.vr::InputDelegate" = type { i32 (...)** }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.1" }
%"struct.std::__1::__split_buffer" = type { %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.vr::ControllerModel"** }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.vr::GestureDetector"* }
%"class.vr::GestureDetector" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.8", i8, i8, [2 x i8], i32, %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, [6 x i8], %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.vr::GestureDetector::GestureDetectorState"* }
%"struct.vr::GestureDetector::GestureDetectorState" = type { i32, %"struct.vr::GestureDetector::TouchPoint", %"struct.vr::GestureDetector::TouchPoint", %"struct.vr::GestureDetector::TouchPoint", %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.vr::GestureDetector::TouchPoint" = type { %"class.gfx::PointF", %"class.base::TimeTicks" }
%"class.gfx::Vector2dF" = type { float, float }
%"class.vr::UiInterface" = type { i32 (...)** }
%"class.gfx::Quaternion" = type { double, double, double, double }
%"struct.vr::ControllerTestInput" = type { i32, i32, %"class.gfx::PointF" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.15"*, %"class.std::__1::unique_ptr.15"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.vr::InputEvent"* }
%"class.vr::InputEvent" = type { i32 (...)**, %struct.anon.80, i32, %"class.base::TimeTicks", %"class.gfx::PointF" }
%struct.anon.80 = type { float, float }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.std::__1::unique_ptr.15"* }
%"class.vr::PlatformControllerForTesting" = type { %"class.vr::PlatformController", %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"*, %"class.base::TimeTicks" }
%"class.vr::PlatformController" = type { i32 (...)** }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.21" }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.device::mojom::XRInputSourceState"* }
%"class.device::mojom::XRInputSourceState" = type { i32, %"class.mojo::StructPtr.24", %"class.absl::optional", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.absl::optional.44", %"class.absl::optional.49", %"class.mojo::StructPtr.54" }
%"class.mojo::StructPtr.24" = type { %"class.std::__1::unique_ptr.25" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.device::mojom::XRInputSourceDescription"* }
%"class.device::mojom::XRInputSourceDescription" = type { i32, i32, %"class.absl::optional", %"class.std::__1::vector.28" }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.32 }
%union.anon.32 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [3 x i8], %union.anon }
%union.anon = type { %"class.gfx::Transform" }
%"class.absl::optional.44" = type { %"class.absl::optional_internal::optional_data.45" }
%"class.absl::optional_internal::optional_data.45" = type { %"class.absl::optional_internal::optional_data_base.46" }
%"class.absl::optional_internal::optional_data_base.46" = type { %"class.absl::optional_internal::optional_data_dtor_base.47" }
%"class.absl::optional_internal::optional_data_dtor_base.47" = type { i8, [3 x i8], %union.anon.48 }
%union.anon.48 = type { %"class.device::Gamepad" }
%"class.device::Gamepad" = type <{ i8, i8, [128 x i16], [2 x i8], i64, i32, i32, [16 x double], i32, [32 x %"class.device::GamepadButton"], %"class.device::GamepadHapticActuator", i32, %"class.device::GamepadPose", i32, i32, i8, [3 x i8] }>
%"class.device::GamepadButton" = type <{ i8, i8, i8, i8, double }>
%"class.device::GamepadHapticActuator" = type { i8, i32 }
%"class.device::GamepadPose" = type { i8, i8, i8, %"class.device::GamepadQuaternion", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector" }
%"class.device::GamepadQuaternion" = type { i8, float, float, float, float }
%"class.device::GamepadVector" = type { i8, float, float, float }
%"class.absl::optional.49" = type { %"class.absl::optional_internal::optional_data.50" }
%"class.absl::optional_internal::optional_data.50" = type { %"class.absl::optional_internal::optional_data_base.51" }
%"class.absl::optional_internal::optional_data_base.51" = type { %"class.absl::optional_internal::optional_data_dtor_base.52" }
%"class.absl::optional_internal::optional_data_dtor_base.52" = type { i8, %union.anon.53 }
%union.anon.53 = type { %"class.gfx::PointF" }
%"class.mojo::StructPtr.54" = type { %"class.std::__1::unique_ptr.55" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.device::mojom::XRHandTrackingData"* }
%"class.device::mojom::XRHandTrackingData" = type { %"class.std::__1::vector.58" }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"class.mojo::StructPtr.60"*, %"class.mojo::StructPtr.60"*, %"class.std::__1::__compressed_pair.67" }
%"class.mojo::StructPtr.60" = type { %"class.std::__1::unique_ptr.61" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.device::mojom::XRHandJointData"* }
%"class.device::mojom::XRHandJointData" = type { i32, %"class.gfx::Transform", float }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.mojo::StructPtr.60"* }
%"struct.std::__1::__split_buffer.85" = type { %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"**, %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.std::__1::allocator"* }
%"class.std::__1::allocator" = type { i8 }

$_ZNSt3__112__deque_baseIN2vr15ControllerModelENS_9allocatorIS2_EEE5clearEv = comdat any

$_ZNSt3__15dequeIN2vr15ControllerModelENS_9allocatorIS2_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN2vr15ControllerModelENS_9allocatorIS3_EEE9push_backEOS3_ = comdat any

$_ZNSt3__114__split_bufferIPN2vr15ControllerModelENS_9allocatorIS3_EEE10push_frontEOS3_ = comdat any

$_ZNSt3__114__split_bufferIPN2vr15ControllerModelERNS_9allocatorIS3_EEE10push_frontERKS3_ = comdat any

@_ZTVN2vr23InputDelegateForTestingE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.vr::InputDelegateForTesting"*)* @_ZN2vr23InputDelegateForTestingD2Ev to i8*), i8* bitcast (void (%"class.vr::InputDelegateForTesting"*)* @_ZN2vr23InputDelegateForTestingD0Ev to i8*), i8* bitcast (void (%"class.gfx::Transform"*, %"class.vr::InputDelegateForTesting"*)* @_ZN2vr23InputDelegateForTesting11GetHeadPoseEv to i8*), i8* bitcast (void (%"class.vr::InputDelegateForTesting"*, i1)* @_ZN2vr23InputDelegateForTesting14OnTriggerEventEb to i8*), i8* bitcast (void (%"class.vr::InputDelegateForTesting"*, %"class.gfx::Transform"*, i64, i1)* @_ZN2vr23InputDelegateForTesting16UpdateControllerERKN3gfx9TransformEN4base9TimeTicksEb to i8*), i8* bitcast (void (%"struct.vr::ControllerModel"*, %"class.vr::InputDelegateForTesting"*, %"class.gfx::Transform"*)* @_ZN2vr23InputDelegateForTesting18GetControllerModelERKN3gfx9TransformE to i8*), i8* bitcast (void (%"class.std::__1::vector"*, %"class.vr::InputDelegateForTesting"*, i64)* @_ZN2vr23InputDelegateForTesting11GetGesturesEN4base9TimeTicksE to i8*), i8* bitcast (void (%"class.mojo::StructPtr"*, %"class.vr::InputDelegateForTesting"*)* @_ZN2vr23InputDelegateForTesting19GetInputSourceStateEv to i8*), i8* bitcast (void (%"class.vr::InputDelegateForTesting"*)* @_ZN2vr23InputDelegateForTesting8OnResumeEv to i8*), i8* bitcast (void (%"class.vr::InputDelegateForTesting"*)* @_ZN2vr23InputDelegateForTesting7OnPauseEv to i8*)] }, align 8
@_ZN12_GLOBAL__N_114kForwardVectorE = internal constant %"class.gfx::Vector3dF" { float 0.000000e+00, float 0.000000e+00, float -1.000000e+00 }, align 4
@__const._ZN2vr23InputDelegateForTesting31QueueControllerActionForTestingENS_19ControllerTestInputE.controller_model = private unnamed_addr constant %"struct.vr::ControllerModel" <{ %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, %"class.gfx::Vector3dF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::Point3F" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, %"class.base::TimeTicks" { %"class.base::time_internal::TimeBase" { i64 -6148914691236517206 } }, %"class.base::TimeTicks" { %"class.base::time_internal::TimeBase" { i64 -6148914691236517206 } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZN12_GLOBAL__N_124kStartControllerPositionE = internal constant %"class.gfx::Vector3dF" { float 0x3FD3333340000000, float 0xBFD3333340000000, float 0xBFD3333340000000 }, align 4
@_ZN2vrL7kOriginE = internal constant %"class.gfx::Point3F" zeroinitializer, align 4
@__const._ZN12_GLOBAL__N_121SetOriginAndTransformEPN2vr15ControllerModelE.mat = private unnamed_addr constant %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, align 4
@_ZN12_GLOBAL__N_118kLaserOriginOffsetE = internal unnamed_addr constant %"class.gfx::Point3F" { float 0.000000e+00, float 0.000000e+00, float 0xBFA99999A0000000 }, align 4
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4

@_ZN2vr23InputDelegateForTestingC1EPNS_11UiInterfaceE = hidden unnamed_addr alias void (%"class.vr::InputDelegateForTesting"*, %"class.vr::UiInterface"*), void (%"class.vr::InputDelegateForTesting"*, %"class.vr::UiInterface"*)* @_ZN2vr23InputDelegateForTestingC2EPNS_11UiInterfaceE
@_ZN2vr23InputDelegateForTestingD1Ev = hidden unnamed_addr alias void (%"class.vr::InputDelegateForTesting"*), void (%"class.vr::InputDelegateForTesting"*)* @_ZN2vr23InputDelegateForTestingD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr23InputDelegateForTestingC2EPNS_11UiInterfaceE(%"class.vr::InputDelegateForTesting"*, %"class.vr::UiInterface"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Transform", align 4
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = alloca %"class.gfx::Quaternion", align 8
  %6 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN2vr23InputDelegateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 1
  store %"class.vr::UiInterface"* %1, %"class.vr::UiInterface"** %7, align 8
  %8 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::queue"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false) #10
  %10 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 3
  tail call void @_ZN2vr15ControllerModelC1Ev(%"struct.vr::ControllerModel"* %10) #10
  %11 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 4
  tail call void @_ZN2vr15ControllerModelC1Ev(%"struct.vr::ControllerModel"* %11) #10
  %12 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 5, i32 0, i32 0
  %13 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 6
  %14 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  %15 = bitcast i64* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false)
  %16 = tail call i8* @_Znwm(i64 80) #11
  %17 = bitcast i8* %16 to %"class.vr::GestureDetector"*
  tail call void @_ZN2vr15GestureDetectorC1Ev(%"class.vr::GestureDetector"* nonnull %17) #10
  %18 = ptrtoint i8* %16 to i64
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.vr::GestureDetector"*, %"class.vr::GestureDetector"** %19, align 8
  store i64 %18, i64* %14, align 8
  %21 = icmp eq %"class.vr::GestureDetector"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %2
  %23 = bitcast %"class.vr::GestureDetector"* %20 to void (%"class.vr::GestureDetector"*)***
  %24 = load void (%"class.vr::GestureDetector"*)**, void (%"class.vr::GestureDetector"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.vr::GestureDetector"*)*, void (%"class.vr::GestureDetector"*)** %24, i64 1
  %26 = load void (%"class.vr::GestureDetector"*)*, void (%"class.vr::GestureDetector"*)** %25, align 8
  tail call void %26(%"class.vr::GestureDetector"* nonnull %20) #10
  br label %27

27:                                               ; preds = %22, %2
  %28 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 3, i32 1
  %29 = bitcast %"class.gfx::Vector3dF"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 bitcast (%"class.gfx::Vector3dF"* @_ZN12_GLOBAL__N_114kForwardVectorE to i8*), i64 12, i1 false)
  %30 = bitcast %"class.gfx::Transform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %30) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN12_GLOBAL__N_121SetOriginAndTransformEPN2vr15ControllerModelE.mat to i8*), i64 68, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #10
  %31 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %3, i64 0, i32 0, i32 1
  store i8 0, i8* %31, align 4
  call void @_ZN3gfx9Transform11Translate3dERKNS_9Vector3dFE(%"class.gfx::Transform"* nonnull %3, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) @_ZN12_GLOBAL__N_124kStartControllerPositionE) #10
  %32 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %32) #10
  %33 = bitcast %"class.gfx::Quaternion"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #10
  call void @_ZN3gfx10QuaternionC1ERKNS_9Vector3dFES3_(%"class.gfx::Quaternion"* nonnull %5, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) @_ZN12_GLOBAL__N_114kForwardVectorE, %"class.gfx::Vector3dF"* dereferenceable(12) %28) #10
  call void @_ZN3gfx9TransformC1ERKNS_10QuaternionE(%"class.gfx::Transform"* nonnull %4, %"class.gfx::Quaternion"* nonnull dereferenceable(32) %5) #10
  call void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"* nonnull %3, %"class.gfx::Transform"* nonnull dereferenceable(68) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #10
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %32) #10
  %34 = bitcast %"struct.vr::ControllerModel"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* nonnull align 4 %30, i64 68, i1 false) #10
  %35 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 3, i32 2
  %36 = bitcast %"class.gfx::Point3F"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 4 bitcast (%"class.gfx::Point3F"* @_ZN12_GLOBAL__N_118kLaserOriginOffsetE to i8*), i64 12, i1 false) #10
  call void @_ZNK3gfx9Transform14TransformPointEPNS_7Point3FE(%"class.gfx::Transform"* nonnull %3, %"class.gfx::Point3F"* %35) #10
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %30) #10
  ret void
}

declare void @_ZN2vr15ControllerModelC1Ev(%"struct.vr::ControllerModel"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr23InputDelegateForTestingD2Ev(%"class.vr::InputDelegateForTesting"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN2vr23InputDelegateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"class.vr::GestureDetector"*, %"class.vr::GestureDetector"** %3, align 8
  store %"class.vr::GestureDetector"* null, %"class.vr::GestureDetector"** %3, align 8
  %5 = icmp eq %"class.vr::GestureDetector"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.vr::GestureDetector"* %4 to void (%"class.vr::GestureDetector"*)***
  %8 = load void (%"class.vr::GestureDetector"*)**, void (%"class.vr::GestureDetector"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.vr::GestureDetector"*)*, void (%"class.vr::GestureDetector"*)** %8, i64 1
  %10 = load void (%"class.vr::GestureDetector"*)*, void (%"class.vr::GestureDetector"*)** %9, align 8
  tail call void %10(%"class.vr::GestureDetector"* nonnull %4) #10
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 4
  tail call void @_ZN2vr15ControllerModelD1Ev(%"struct.vr::ControllerModel"* %12) #10
  %13 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 3
  tail call void @_ZN2vr15ControllerModelD1Ev(%"struct.vr::ControllerModel"* %13) #10
  %14 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %14, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__112__deque_baseIN2vr15ControllerModelENS_9allocatorIS2_EEE5clearEv(%"class.std::__1::__deque_base"* %15) #10
  %16 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %17 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %16, align 8
  %18 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %19 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %18, align 8
  %20 = icmp eq %"struct.vr::ControllerModel"** %17, %19
  br i1 %20, label %39, label %21

21:                                               ; preds = %11, %21
  %22 = phi %"struct.vr::ControllerModel"** [ %25, %21 ], [ %17, %11 ]
  %23 = bitcast %"struct.vr::ControllerModel"** %22 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #11
  %25 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %22, i64 1
  %26 = icmp eq %"struct.vr::ControllerModel"** %25, %19
  br i1 %26, label %27, label %21

27:                                               ; preds = %21
  %28 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %16, align 8
  %29 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %18, align 8
  %30 = icmp eq %"struct.vr::ControllerModel"** %29, %28
  br i1 %30, label %39, label %31

31:                                               ; preds = %27
  %32 = ptrtoint %"struct.vr::ControllerModel"** %28 to i64
  %33 = getelementptr %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %29, i64 -1
  %34 = ptrtoint %"struct.vr::ControllerModel"** %33 to i64
  %35 = sub i64 %34, %32
  %36 = lshr i64 %35, 3
  %37 = xor i64 %36, -1
  %38 = getelementptr %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %29, i64 %37
  store %"struct.vr::ControllerModel"** %38, %"struct.vr::ControllerModel"*** %18, align 8
  br label %39

39:                                               ; preds = %31, %27, %11
  %40 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %40, align 8
  %42 = icmp eq %"struct.vr::ControllerModel"** %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"struct.vr::ControllerModel"** %41 to i8*
  tail call void @_ZdlPv(i8* %44) #11
  br label %45

45:                                               ; preds = %39, %43
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2vr15ControllerModelD1Ev(%"struct.vr::ControllerModel"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr23InputDelegateForTestingD0Ev(%"class.vr::InputDelegateForTesting"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2vr23InputDelegateForTestingD2Ev(%"class.vr::InputDelegateForTesting"* %0) #10
  %2 = bitcast %"class.vr::InputDelegateForTesting"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr23InputDelegateForTesting11GetHeadPoseEv(%"class.gfx::Transform"* noalias nocapture sret, %"class.vr::InputDelegateForTesting"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gfx::Transform"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #10
  %4 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %4, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2vr23InputDelegateForTesting14OnTriggerEventEb(%"class.vr::InputDelegateForTesting"* nocapture, i1 zeroext) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr23InputDelegateForTesting31QueueControllerActionForTestingENS_19ControllerTestInputE(%"class.vr::InputDelegateForTesting"*, i64, <2 x float>) local_unnamed_addr #6 align 2 {
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = alloca %"class.gfx::Transform", align 4
  %6 = alloca %"class.gfx::Quaternion", align 8
  %7 = alloca %"class.gfx::Transform", align 4
  %8 = alloca %"class.gfx::Transform", align 4
  %9 = alloca %"class.gfx::Quaternion", align 8
  %10 = alloca %"class.gfx::Transform", align 4
  %11 = alloca %"class.gfx::Transform", align 4
  %12 = alloca %"class.gfx::Quaternion", align 8
  %13 = alloca %"class.gfx::Transform", align 4
  %14 = alloca %"class.gfx::Transform", align 4
  %15 = alloca %"class.gfx::Quaternion", align 8
  %16 = alloca { i64, <2 x float> }, align 8
  %17 = bitcast { i64, <2 x float> }* %16 to %"struct.vr::ControllerTestInput"*
  %18 = alloca %"struct.vr::ControllerModel", align 8
  %19 = alloca %"struct.vr::ControllerModel", align 8
  %20 = alloca %"struct.vr::ControllerModel", align 8
  %21 = alloca %"struct.vr::ControllerModel", align 8
  %22 = alloca %"class.gfx::Point3F", align 8
  %23 = alloca %"class.gfx::Vector3dF", align 8
  %24 = alloca %"class.gfx::Point3F", align 8
  %25 = alloca %"struct.vr::ControllerModel", align 8
  %26 = alloca %"struct.vr::ControllerModel", align 8
  %27 = alloca %"struct.vr::ControllerModel", align 8
  %28 = alloca %"struct.vr::ControllerModel", align 8
  %29 = alloca %"struct.vr::ControllerModel", align 8
  %30 = getelementptr inbounds { i64, <2 x float> }, { i64, <2 x float> }* %16, i64 0, i32 0
  store i64 %1, i64* %30, align 8
  %31 = getelementptr inbounds { i64, <2 x float> }, { i64, <2 x float> }* %16, i64 0, i32 1
  store <2 x float> %2, <2 x float>* %31, align 8
  %32 = bitcast %"struct.vr::ControllerModel"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %32) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 bitcast (%"struct.vr::ControllerModel"* @__const._ZN2vr23InputDelegateForTesting31QueueControllerActionForTestingENS_19ControllerTestInputE.controller_model to i8*), i64 152, i1 false)
  call void @_ZN2vr15ControllerModelC1Ev(%"struct.vr::ControllerModel"* nonnull %18) #10
  %33 = trunc i64 %1 to i32
  switch i32 %33, label %110 [
    i32 0, label %34
    i32 1, label %43
  ]

34:                                               ; preds = %3
  %35 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %18, i64 0, i32 1
  %36 = bitcast %"class.gfx::Vector3dF"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 bitcast (%"class.gfx::Vector3dF"* @_ZN12_GLOBAL__N_114kForwardVectorE to i8*), i64 12, i1 false)
  %37 = bitcast %"class.gfx::Transform"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %37) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %37, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN12_GLOBAL__N_121SetOriginAndTransformEPN2vr15ControllerModelE.mat to i8*), i64 68, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %37, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #10
  %38 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %13, i64 0, i32 0, i32 1
  store i8 0, i8* %38, align 4
  call void @_ZN3gfx9Transform11Translate3dERKNS_9Vector3dFE(%"class.gfx::Transform"* nonnull %13, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) @_ZN12_GLOBAL__N_124kStartControllerPositionE) #10
  %39 = bitcast %"class.gfx::Transform"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %39) #10
  %40 = bitcast %"class.gfx::Quaternion"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #10
  call void @_ZN3gfx10QuaternionC1ERKNS_9Vector3dFES3_(%"class.gfx::Quaternion"* nonnull %15, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) @_ZN12_GLOBAL__N_114kForwardVectorE, %"class.gfx::Vector3dF"* dereferenceable(12) %35) #10
  call void @_ZN3gfx9TransformC1ERKNS_10QuaternionE(%"class.gfx::Transform"* nonnull %14, %"class.gfx::Quaternion"* nonnull dereferenceable(32) %15) #10
  call void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"* nonnull %13, %"class.gfx::Transform"* nonnull dereferenceable(68) %14) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #10
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %39) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 4 %37, i64 68, i1 false) #10
  %41 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %18, i64 0, i32 2
  %42 = bitcast %"class.gfx::Point3F"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 4 bitcast (%"class.gfx::Point3F"* @_ZN12_GLOBAL__N_118kLaserOriginOffsetE to i8*), i64 12, i1 false) #10
  call void @_ZNK3gfx9Transform14TransformPointEPNS_7Point3FE(%"class.gfx::Transform"* nonnull %13, %"class.gfx::Point3F"* %41) #10
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %37) #10
  br label %148

43:                                               ; preds = %3
  %44 = bitcast %"struct.vr::ControllerModel"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %44) #10
  %45 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %46 = load i64, i64* %45, align 8, !noalias !2
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %60, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8, !noalias !2
  %51 = add i64 %46, -1
  %52 = add i64 %51, %50
  %53 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %54 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %53, align 8, !noalias !2
  %55 = udiv i64 %52, 26
  %56 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %54, i64 %55
  %57 = load %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %56, align 8
  %58 = urem i64 %52, 26
  %59 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %57, i64 %58
  br label %62

60:                                               ; preds = %43
  %61 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 3
  br label %62

62:                                               ; preds = %48, %60
  %63 = phi %"struct.vr::ControllerModel"* [ %59, %48 ], [ %61, %60 ]
  call void @_ZN2vr15ControllerModelC1ERKS0_(%"struct.vr::ControllerModel"* nonnull %19, %"struct.vr::ControllerModel"* dereferenceable(152) %63) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 68, i1 false)
  call void @_ZN2vr15ControllerModelD1Ev(%"struct.vr::ControllerModel"* nonnull %19) #10
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %44) #10
  %64 = bitcast %"struct.vr::ControllerModel"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %64) #10
  %65 = load i64, i64* %45, align 8, !noalias !5
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %79, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8, !noalias !5
  %70 = add i64 %65, -1
  %71 = add i64 %70, %69
  %72 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %73 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %72, align 8, !noalias !5
  %74 = udiv i64 %71, 26
  %75 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %73, i64 %74
  %76 = load %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %75, align 8
  %77 = urem i64 %71, 26
  %78 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %76, i64 %77
  br label %81

79:                                               ; preds = %62
  %80 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 3
  br label %81

81:                                               ; preds = %67, %79
  %82 = phi %"struct.vr::ControllerModel"* [ %78, %67 ], [ %80, %79 ]
  call void @_ZN2vr15ControllerModelC1ERKS0_(%"struct.vr::ControllerModel"* nonnull %20, %"struct.vr::ControllerModel"* dereferenceable(152) %82) #10
  %83 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %20, i64 0, i32 1
  %84 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %18, i64 0, i32 1
  %85 = bitcast %"class.gfx::Vector3dF"* %84 to i8*
  %86 = bitcast %"class.gfx::Vector3dF"* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %85, i8* align 4 %86, i64 12, i1 false)
  call void @_ZN2vr15ControllerModelD1Ev(%"struct.vr::ControllerModel"* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %64) #10
  %87 = bitcast %"struct.vr::ControllerModel"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %87) #10
  %88 = load i64, i64* %45, align 8, !noalias !8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %102, label %90

90:                                               ; preds = %81
  %91 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %92 = load i64, i64* %91, align 8, !noalias !8
  %93 = add i64 %88, -1
  %94 = add i64 %93, %92
  %95 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %96 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %95, align 8, !noalias !8
  %97 = udiv i64 %94, 26
  %98 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %96, i64 %97
  %99 = load %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %98, align 8
  %100 = urem i64 %94, 26
  %101 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %99, i64 %100
  br label %104

102:                                              ; preds = %81
  %103 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 3
  br label %104

104:                                              ; preds = %90, %102
  %105 = phi %"struct.vr::ControllerModel"* [ %101, %90 ], [ %103, %102 ]
  call void @_ZN2vr15ControllerModelC1ERKS0_(%"struct.vr::ControllerModel"* nonnull %21, %"struct.vr::ControllerModel"* dereferenceable(152) %105) #10
  %106 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %21, i64 0, i32 2
  %107 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %18, i64 0, i32 2
  %108 = bitcast %"class.gfx::Point3F"* %107 to i8*
  %109 = bitcast %"class.gfx::Point3F"* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %109, i64 12, i1 false)
  call void @_ZN2vr15ControllerModelD1Ev(%"struct.vr::ControllerModel"* nonnull %21) #10
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %87) #10
  br label %148

110:                                              ; preds = %3
  %111 = bitcast %"class.gfx::Point3F"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %111) #10
  %112 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %22, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %112, align 8
  %113 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %22, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %113, align 4
  %114 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %22, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %114, align 8
  %115 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 1
  %116 = load %"class.vr::UiInterface"*, %"class.vr::UiInterface"** %115, align 8
  %117 = bitcast <2 x float>* %31 to %"class.gfx::PointF"*
  %118 = bitcast %"class.vr::UiInterface"* %116 to { <2 x float>, float } (%"class.vr::UiInterface"*, i32, %"class.gfx::PointF"*)***
  %119 = load { <2 x float>, float } (%"class.vr::UiInterface"*, i32, %"class.gfx::PointF"*)**, { <2 x float>, float } (%"class.vr::UiInterface"*, i32, %"class.gfx::PointF"*)*** %118, align 8
  %120 = getelementptr inbounds { <2 x float>, float } (%"class.vr::UiInterface"*, i32, %"class.gfx::PointF"*)*, { <2 x float>, float } (%"class.vr::UiInterface"*, i32, %"class.gfx::PointF"*)** %119, i64 11
  %121 = load { <2 x float>, float } (%"class.vr::UiInterface"*, i32, %"class.gfx::PointF"*)*, { <2 x float>, float } (%"class.vr::UiInterface"*, i32, %"class.gfx::PointF"*)** %120, align 8
  %122 = call { <2 x float>, float } %121(%"class.vr::UiInterface"* %116, i32 %33, %"class.gfx::PointF"* dereferenceable(8) %117) #10
  %123 = extractvalue { <2 x float>, float } %122, 0
  %124 = extractvalue { <2 x float>, float } %122, 1
  %125 = bitcast %"class.gfx::Point3F"* %22 to <2 x float>*
  store <2 x float> %123, <2 x float>* %125, align 8
  store float %124, float* %114, align 8
  %126 = bitcast %"class.gfx::Vector3dF"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %126) #10
  %127 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %23, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %127, align 8
  %128 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %23, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %128, align 4
  %129 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %23, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %129, align 8
  %130 = bitcast %"class.gfx::Point3F"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %130) #10
  %131 = call { <2 x float>, float } @_ZN3gfxmiERKNS_7Point3FERKNS_9Vector3dFE(%"class.gfx::Point3F"* nonnull dereferenceable(12) %22, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) @_ZN12_GLOBAL__N_124kStartControllerPositionE) #10
  %132 = extractvalue { <2 x float>, float } %131, 0
  %133 = extractvalue { <2 x float>, float } %131, 1
  %134 = bitcast %"class.gfx::Point3F"* %24 to <2 x float>*
  store <2 x float> %132, <2 x float>* %134, align 8
  %135 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %24, i64 0, i32 2
  store float %133, float* %135, align 8
  %136 = call { <2 x float>, float } @_ZN3gfxmiERKNS_7Point3FES2_(%"class.gfx::Point3F"* nonnull dereferenceable(12) %24, %"class.gfx::Point3F"* nonnull dereferenceable(12) @_ZN2vrL7kOriginE) #10
  %137 = extractvalue { <2 x float>, float } %136, 0
  %138 = extractvalue { <2 x float>, float } %136, 1
  %139 = bitcast %"class.gfx::Vector3dF"* %23 to <2 x float>*
  store <2 x float> %137, <2 x float>* %139, align 8
  store float %138, float* %129, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %130) #10
  %140 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %18, i64 0, i32 1
  %141 = call zeroext i1 @_ZNK3gfx9Vector3dF13GetNormalizedEPS0_(%"class.gfx::Vector3dF"* nonnull %23, %"class.gfx::Vector3dF"* %140) #10
  %142 = bitcast %"class.gfx::Transform"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %142) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %142, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN12_GLOBAL__N_121SetOriginAndTransformEPN2vr15ControllerModelE.mat to i8*), i64 68, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %142, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #10
  %143 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %10, i64 0, i32 0, i32 1
  store i8 0, i8* %143, align 4
  call void @_ZN3gfx9Transform11Translate3dERKNS_9Vector3dFE(%"class.gfx::Transform"* nonnull %10, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) @_ZN12_GLOBAL__N_124kStartControllerPositionE) #10
  %144 = bitcast %"class.gfx::Transform"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %144) #10
  %145 = bitcast %"class.gfx::Quaternion"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %145) #10
  call void @_ZN3gfx10QuaternionC1ERKNS_9Vector3dFES3_(%"class.gfx::Quaternion"* nonnull %12, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) @_ZN12_GLOBAL__N_114kForwardVectorE, %"class.gfx::Vector3dF"* dereferenceable(12) %140) #10
  call void @_ZN3gfx9TransformC1ERKNS_10QuaternionE(%"class.gfx::Transform"* nonnull %11, %"class.gfx::Quaternion"* nonnull dereferenceable(32) %12) #10
  call void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"* nonnull %10, %"class.gfx::Transform"* nonnull dereferenceable(68) %11) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %145) #10
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %144) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 4 %142, i64 68, i1 false) #10
  %146 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %18, i64 0, i32 2
  %147 = bitcast %"class.gfx::Point3F"* %146 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 4 bitcast (%"class.gfx::Point3F"* @_ZN12_GLOBAL__N_118kLaserOriginOffsetE to i8*), i64 12, i1 false) #10
  call void @_ZNK3gfx9Transform14TransformPointEPNS_7Point3FE(%"class.gfx::Transform"* nonnull %10, %"class.gfx::Point3F"* %146) #10
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %142) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %126) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %111) #10
  br label %148

148:                                              ; preds = %104, %110, %34
  %149 = getelementptr inbounds %"struct.vr::ControllerTestInput", %"struct.vr::ControllerTestInput"* %17, i64 0, i32 1
  %150 = load i32, i32* %149, align 4
  switch i32 %150, label %567 [
    i32 0, label %151
    i32 4, label %151
    i32 3, label %191
    i32 5, label %231
    i32 6, label %292
    i32 7, label %332
    i32 8, label %372
    i32 9, label %467
  ]

151:                                              ; preds = %148, %148
  %152 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %18, i64 0, i32 3
  store i32 0, i32* %152, align 4
  %153 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %154 = bitcast %"struct.vr::ControllerModel"*** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %157 = bitcast %"struct.vr::ControllerModel"*** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = sub i64 %155, %158
  %160 = ashr exact i64 %159, 3
  %161 = icmp eq i64 %159, 0
  %162 = mul i64 %160, 26
  %163 = add i64 %162, -1
  %164 = select i1 %161, i64 0, i64 %163
  %165 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %168 = load i64, i64* %167, align 8
  %169 = add i64 %168, %166
  %170 = icmp eq i64 %164, %169
  %171 = inttoptr i64 %158 to %"struct.vr::ControllerModel"**
  %172 = inttoptr i64 %155 to %"struct.vr::ControllerModel"**
  br i1 %170, label %173, label %180

173:                                              ; preds = %151
  %174 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0
  call void @_ZNSt3__15dequeIN2vr15ControllerModelENS_9allocatorIS2_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %174) #10
  %175 = load i64, i64* %167, align 8
  %176 = load i64, i64* %165, align 8
  %177 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %156, align 8
  %178 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %153, align 8
  %179 = add i64 %176, %175
  br label %180

180:                                              ; preds = %173, %151
  %181 = phi i64 [ %179, %173 ], [ %169, %151 ]
  %182 = phi %"struct.vr::ControllerModel"** [ %178, %173 ], [ %172, %151 ]
  %183 = phi %"struct.vr::ControllerModel"** [ %177, %173 ], [ %171, %151 ]
  %184 = icmp eq %"struct.vr::ControllerModel"** %182, %183
  br i1 %184, label %562, label %185

185:                                              ; preds = %180
  %186 = udiv i64 %181, 26
  %187 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %183, i64 %186
  %188 = load %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %187, align 8
  %189 = urem i64 %181, 26
  %190 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %188, i64 %189
  br label %562

191:                                              ; preds = %148
  %192 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %18, i64 0, i32 3
  store i32 1, i32* %192, align 4
  %193 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %194 = bitcast %"struct.vr::ControllerModel"*** %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %197 = bitcast %"struct.vr::ControllerModel"*** %196 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = sub i64 %195, %198
  %200 = ashr exact i64 %199, 3
  %201 = icmp eq i64 %199, 0
  %202 = mul i64 %200, 26
  %203 = add i64 %202, -1
  %204 = select i1 %201, i64 0, i64 %203
  %205 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %206 = load i64, i64* %205, align 8
  %207 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %208 = load i64, i64* %207, align 8
  %209 = add i64 %208, %206
  %210 = icmp eq i64 %204, %209
  %211 = inttoptr i64 %198 to %"struct.vr::ControllerModel"**
  %212 = inttoptr i64 %195 to %"struct.vr::ControllerModel"**
  br i1 %210, label %213, label %220

213:                                              ; preds = %191
  %214 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0
  call void @_ZNSt3__15dequeIN2vr15ControllerModelENS_9allocatorIS2_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %214) #10
  %215 = load i64, i64* %207, align 8
  %216 = load i64, i64* %205, align 8
  %217 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %196, align 8
  %218 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %193, align 8
  %219 = add i64 %216, %215
  br label %220

220:                                              ; preds = %213, %191
  %221 = phi i64 [ %219, %213 ], [ %209, %191 ]
  %222 = phi %"struct.vr::ControllerModel"** [ %218, %213 ], [ %212, %191 ]
  %223 = phi %"struct.vr::ControllerModel"** [ %217, %213 ], [ %211, %191 ]
  %224 = icmp eq %"struct.vr::ControllerModel"** %222, %223
  br i1 %224, label %562, label %225

225:                                              ; preds = %220
  %226 = udiv i64 %221, 26
  %227 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %223, i64 %226
  %228 = load %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %227, align 8
  %229 = urem i64 %221, 26
  %230 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %228, i64 %229
  br label %562

231:                                              ; preds = %148
  %232 = bitcast %"struct.vr::ControllerModel"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %232) #10
  %233 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %234 = load i64, i64* %233, align 8, !noalias !11
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %248, label %236

236:                                              ; preds = %231
  %237 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %238 = load i64, i64* %237, align 8, !noalias !11
  %239 = add i64 %234, -1
  %240 = add i64 %239, %238
  %241 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %242 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %241, align 8, !noalias !11
  %243 = udiv i64 %240, 26
  %244 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %242, i64 %243
  %245 = load %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %244, align 8
  %246 = urem i64 %240, 26
  %247 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %245, i64 %246
  br label %250

248:                                              ; preds = %231
  %249 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 3
  br label %250

250:                                              ; preds = %236, %248
  %251 = phi %"struct.vr::ControllerModel"* [ %247, %236 ], [ %249, %248 ]
  call void @_ZN2vr15ControllerModelC1ERKS0_(%"struct.vr::ControllerModel"* nonnull %25, %"struct.vr::ControllerModel"* dereferenceable(152) %251) #10
  %252 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %25, i64 0, i32 3
  %253 = load i32, i32* %252, align 4
  %254 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %18, i64 0, i32 3
  store i32 %253, i32* %254, align 4
  call void @_ZN2vr15ControllerModelD1Ev(%"struct.vr::ControllerModel"* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %232) #10
  %255 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %256 = bitcast %"struct.vr::ControllerModel"*** %255 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %259 = bitcast %"struct.vr::ControllerModel"*** %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = sub i64 %257, %260
  %262 = ashr exact i64 %261, 3
  %263 = icmp eq i64 %261, 0
  %264 = mul i64 %262, 26
  %265 = add i64 %264, -1
  %266 = select i1 %263, i64 0, i64 %265
  %267 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %268 = load i64, i64* %267, align 8
  %269 = load i64, i64* %233, align 8
  %270 = add i64 %269, %268
  %271 = icmp eq i64 %266, %270
  %272 = inttoptr i64 %260 to %"struct.vr::ControllerModel"**
  %273 = inttoptr i64 %257 to %"struct.vr::ControllerModel"**
  br i1 %271, label %274, label %281

274:                                              ; preds = %250
  %275 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0
  call void @_ZNSt3__15dequeIN2vr15ControllerModelENS_9allocatorIS2_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %275) #10
  %276 = load i64, i64* %233, align 8
  %277 = load i64, i64* %267, align 8
  %278 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %258, align 8
  %279 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %255, align 8
  %280 = add i64 %277, %276
  br label %281

281:                                              ; preds = %274, %250
  %282 = phi i64 [ %280, %274 ], [ %270, %250 ]
  %283 = phi %"struct.vr::ControllerModel"** [ %279, %274 ], [ %273, %250 ]
  %284 = phi %"struct.vr::ControllerModel"** [ %278, %274 ], [ %272, %250 ]
  %285 = icmp eq %"struct.vr::ControllerModel"** %283, %284
  br i1 %285, label %562, label %286

286:                                              ; preds = %281
  %287 = udiv i64 %282, 26
  %288 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %284, i64 %287
  %289 = load %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %288, align 8
  %290 = urem i64 %282, 26
  %291 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %289, i64 %290
  br label %562

292:                                              ; preds = %148
  %293 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %18, i64 0, i32 4
  store i32 1, i32* %293, align 8
  %294 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %295 = bitcast %"struct.vr::ControllerModel"*** %294 to i64*
  %296 = load i64, i64* %295, align 8
  %297 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %298 = bitcast %"struct.vr::ControllerModel"*** %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = sub i64 %296, %299
  %301 = ashr exact i64 %300, 3
  %302 = icmp eq i64 %300, 0
  %303 = mul i64 %301, 26
  %304 = add i64 %303, -1
  %305 = select i1 %302, i64 0, i64 %304
  %306 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %307 = load i64, i64* %306, align 8
  %308 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %309 = load i64, i64* %308, align 8
  %310 = add i64 %309, %307
  %311 = icmp eq i64 %305, %310
  %312 = inttoptr i64 %299 to %"struct.vr::ControllerModel"**
  %313 = inttoptr i64 %296 to %"struct.vr::ControllerModel"**
  br i1 %311, label %314, label %321

314:                                              ; preds = %292
  %315 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0
  call void @_ZNSt3__15dequeIN2vr15ControllerModelENS_9allocatorIS2_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %315) #10
  %316 = load i64, i64* %308, align 8
  %317 = load i64, i64* %306, align 8
  %318 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %297, align 8
  %319 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %294, align 8
  %320 = add i64 %317, %316
  br label %321

321:                                              ; preds = %314, %292
  %322 = phi i64 [ %320, %314 ], [ %310, %292 ]
  %323 = phi %"struct.vr::ControllerModel"** [ %319, %314 ], [ %313, %292 ]
  %324 = phi %"struct.vr::ControllerModel"** [ %318, %314 ], [ %312, %292 ]
  %325 = icmp eq %"struct.vr::ControllerModel"** %323, %324
  br i1 %325, label %562, label %326

326:                                              ; preds = %321
  %327 = udiv i64 %322, 26
  %328 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %324, i64 %327
  %329 = load %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %328, align 8
  %330 = urem i64 %322, 26
  %331 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %329, i64 %330
  br label %562

332:                                              ; preds = %148
  %333 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %18, i64 0, i32 4
  store i32 0, i32* %333, align 8
  %334 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %335 = bitcast %"struct.vr::ControllerModel"*** %334 to i64*
  %336 = load i64, i64* %335, align 8
  %337 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %338 = bitcast %"struct.vr::ControllerModel"*** %337 to i64*
  %339 = load i64, i64* %338, align 8
  %340 = sub i64 %336, %339
  %341 = ashr exact i64 %340, 3
  %342 = icmp eq i64 %340, 0
  %343 = mul i64 %341, 26
  %344 = add i64 %343, -1
  %345 = select i1 %342, i64 0, i64 %344
  %346 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %347 = load i64, i64* %346, align 8
  %348 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %349 = load i64, i64* %348, align 8
  %350 = add i64 %349, %347
  %351 = icmp eq i64 %345, %350
  %352 = inttoptr i64 %339 to %"struct.vr::ControllerModel"**
  %353 = inttoptr i64 %336 to %"struct.vr::ControllerModel"**
  br i1 %351, label %354, label %361

354:                                              ; preds = %332
  %355 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0
  call void @_ZNSt3__15dequeIN2vr15ControllerModelENS_9allocatorIS2_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %355) #10
  %356 = load i64, i64* %348, align 8
  %357 = load i64, i64* %346, align 8
  %358 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %337, align 8
  %359 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %334, align 8
  %360 = add i64 %357, %356
  br label %361

361:                                              ; preds = %354, %332
  %362 = phi i64 [ %360, %354 ], [ %350, %332 ]
  %363 = phi %"struct.vr::ControllerModel"** [ %359, %354 ], [ %353, %332 ]
  %364 = phi %"struct.vr::ControllerModel"** [ %358, %354 ], [ %352, %332 ]
  %365 = icmp eq %"struct.vr::ControllerModel"** %363, %364
  br i1 %365, label %562, label %366

366:                                              ; preds = %361
  %367 = udiv i64 %362, 26
  %368 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %364, i64 %367
  %369 = load %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %368, align 8
  %370 = urem i64 %362, 26
  %371 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %369, i64 %370
  br label %562

372:                                              ; preds = %148
  %373 = bitcast %"struct.vr::ControllerModel"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %373) #10
  %374 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %375 = load i64, i64* %374, align 8, !noalias !14
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %389, label %377

377:                                              ; preds = %372
  %378 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %379 = load i64, i64* %378, align 8, !noalias !14
  %380 = add i64 %375, -1
  %381 = add i64 %380, %379
  %382 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %383 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %382, align 8, !noalias !14
  %384 = udiv i64 %381, 26
  %385 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %383, i64 %384
  %386 = load %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %385, align 8
  %387 = urem i64 %381, 26
  %388 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %386, i64 %387
  br label %391

389:                                              ; preds = %372
  %390 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 3
  br label %391

391:                                              ; preds = %377, %389
  %392 = phi %"struct.vr::ControllerModel"* [ %388, %377 ], [ %390, %389 ]
  call void @_ZN2vr15ControllerModelC1ERKS0_(%"struct.vr::ControllerModel"* nonnull %26, %"struct.vr::ControllerModel"* dereferenceable(152) %392) #10
  %393 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %26, i64 0, i32 1
  %394 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %18, i64 0, i32 1
  %395 = bitcast %"class.gfx::Vector3dF"* %394 to i8*
  %396 = bitcast %"class.gfx::Vector3dF"* %393 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %395, i8* align 4 %396, i64 12, i1 false)
  call void @_ZN2vr15ControllerModelD1Ev(%"struct.vr::ControllerModel"* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %373) #10
  %397 = bitcast %"class.gfx::Transform"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %397) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %397, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN12_GLOBAL__N_121SetOriginAndTransformEPN2vr15ControllerModelE.mat to i8*), i64 68, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %397, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #10
  %398 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %7, i64 0, i32 0, i32 1
  store i8 0, i8* %398, align 4
  call void @_ZN3gfx9Transform11Translate3dERKNS_9Vector3dFE(%"class.gfx::Transform"* nonnull %7, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) @_ZN12_GLOBAL__N_124kStartControllerPositionE) #10
  %399 = bitcast %"class.gfx::Transform"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %399) #10
  %400 = bitcast %"class.gfx::Quaternion"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %400) #10
  call void @_ZN3gfx10QuaternionC1ERKNS_9Vector3dFES3_(%"class.gfx::Quaternion"* nonnull %9, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) @_ZN12_GLOBAL__N_114kForwardVectorE, %"class.gfx::Vector3dF"* dereferenceable(12) %394) #10
  call void @_ZN3gfx9TransformC1ERKNS_10QuaternionE(%"class.gfx::Transform"* nonnull %8, %"class.gfx::Quaternion"* nonnull dereferenceable(32) %9) #10
  call void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"* nonnull %7, %"class.gfx::Transform"* nonnull dereferenceable(68) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %400) #10
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %399) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 4 %397, i64 68, i1 false) #10
  %401 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %18, i64 0, i32 2
  %402 = bitcast %"class.gfx::Point3F"* %401 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %402, i8* align 4 bitcast (%"class.gfx::Point3F"* @_ZN12_GLOBAL__N_118kLaserOriginOffsetE to i8*), i64 12, i1 false) #10
  call void @_ZNK3gfx9Transform14TransformPointEPNS_7Point3FE(%"class.gfx::Transform"* nonnull %7, %"class.gfx::Point3F"* %401) #10
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %397) #10
  %403 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %18, i64 0, i32 6
  store i8 1, i8* %403, align 8
  %404 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %18, i64 0, i32 8
  %405 = bitcast <2 x float>* %31 to i64*
  %406 = bitcast %"class.gfx::PointF"* %404 to i64*
  %407 = load i64, i64* %405, align 8
  store i64 %407, i64* %406, align 4
  %408 = bitcast %"struct.vr::ControllerModel"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %408) #10
  %409 = load i64, i64* %374, align 8, !noalias !17
  %410 = icmp eq i64 %409, 0
  br i1 %410, label %423, label %411

411:                                              ; preds = %391
  %412 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %413 = load i64, i64* %412, align 8, !noalias !17
  %414 = add i64 %409, -1
  %415 = add i64 %414, %413
  %416 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %417 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %416, align 8, !noalias !17
  %418 = udiv i64 %415, 26
  %419 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %417, i64 %418
  %420 = load %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %419, align 8
  %421 = urem i64 %415, 26
  %422 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %420, i64 %421
  br label %425

423:                                              ; preds = %391
  %424 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 3
  br label %425

425:                                              ; preds = %411, %423
  %426 = phi %"struct.vr::ControllerModel"* [ %422, %411 ], [ %424, %423 ]
  call void @_ZN2vr15ControllerModelC1ERKS0_(%"struct.vr::ControllerModel"* nonnull %27, %"struct.vr::ControllerModel"* dereferenceable(152) %426) #10
  %427 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %27, i64 0, i32 3
  %428 = load i32, i32* %427, align 4
  %429 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %18, i64 0, i32 3
  store i32 %428, i32* %429, align 4
  call void @_ZN2vr15ControllerModelD1Ev(%"struct.vr::ControllerModel"* nonnull %27) #10
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %408) #10
  %430 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %431 = bitcast %"struct.vr::ControllerModel"*** %430 to i64*
  %432 = load i64, i64* %431, align 8
  %433 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %434 = bitcast %"struct.vr::ControllerModel"*** %433 to i64*
  %435 = load i64, i64* %434, align 8
  %436 = sub i64 %432, %435
  %437 = ashr exact i64 %436, 3
  %438 = icmp eq i64 %436, 0
  %439 = mul i64 %437, 26
  %440 = add i64 %439, -1
  %441 = select i1 %438, i64 0, i64 %440
  %442 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %443 = load i64, i64* %442, align 8
  %444 = load i64, i64* %374, align 8
  %445 = add i64 %444, %443
  %446 = icmp eq i64 %441, %445
  %447 = inttoptr i64 %435 to %"struct.vr::ControllerModel"**
  %448 = inttoptr i64 %432 to %"struct.vr::ControllerModel"**
  br i1 %446, label %449, label %456

449:                                              ; preds = %425
  %450 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0
  call void @_ZNSt3__15dequeIN2vr15ControllerModelENS_9allocatorIS2_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %450) #10
  %451 = load i64, i64* %374, align 8
  %452 = load i64, i64* %442, align 8
  %453 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %433, align 8
  %454 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %430, align 8
  %455 = add i64 %452, %451
  br label %456

456:                                              ; preds = %449, %425
  %457 = phi i64 [ %455, %449 ], [ %445, %425 ]
  %458 = phi %"struct.vr::ControllerModel"** [ %454, %449 ], [ %448, %425 ]
  %459 = phi %"struct.vr::ControllerModel"** [ %453, %449 ], [ %447, %425 ]
  %460 = icmp eq %"struct.vr::ControllerModel"** %458, %459
  br i1 %460, label %562, label %461

461:                                              ; preds = %456
  %462 = udiv i64 %457, 26
  %463 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %459, i64 %462
  %464 = load %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %463, align 8
  %465 = urem i64 %457, 26
  %466 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %464, i64 %465
  br label %562

467:                                              ; preds = %148
  %468 = bitcast %"struct.vr::ControllerModel"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %468) #10
  %469 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %470 = load i64, i64* %469, align 8, !noalias !20
  %471 = icmp eq i64 %470, 0
  br i1 %471, label %484, label %472

472:                                              ; preds = %467
  %473 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %474 = load i64, i64* %473, align 8, !noalias !20
  %475 = add i64 %470, -1
  %476 = add i64 %475, %474
  %477 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %478 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %477, align 8, !noalias !20
  %479 = udiv i64 %476, 26
  %480 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %478, i64 %479
  %481 = load %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %480, align 8
  %482 = urem i64 %476, 26
  %483 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %481, i64 %482
  br label %486

484:                                              ; preds = %467
  %485 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 3
  br label %486

486:                                              ; preds = %472, %484
  %487 = phi %"struct.vr::ControllerModel"* [ %483, %472 ], [ %485, %484 ]
  call void @_ZN2vr15ControllerModelC1ERKS0_(%"struct.vr::ControllerModel"* nonnull %28, %"struct.vr::ControllerModel"* dereferenceable(152) %487) #10
  %488 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %28, i64 0, i32 1
  %489 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %18, i64 0, i32 1
  %490 = bitcast %"class.gfx::Vector3dF"* %489 to i8*
  %491 = bitcast %"class.gfx::Vector3dF"* %488 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %490, i8* align 4 %491, i64 12, i1 false)
  call void @_ZN2vr15ControllerModelD1Ev(%"struct.vr::ControllerModel"* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %468) #10
  %492 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %492) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %492, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN12_GLOBAL__N_121SetOriginAndTransformEPN2vr15ControllerModelE.mat to i8*), i64 68, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %492, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #10
  %493 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %4, i64 0, i32 0, i32 1
  store i8 0, i8* %493, align 4
  call void @_ZN3gfx9Transform11Translate3dERKNS_9Vector3dFE(%"class.gfx::Transform"* nonnull %4, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) @_ZN12_GLOBAL__N_124kStartControllerPositionE) #10
  %494 = bitcast %"class.gfx::Transform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %494) #10
  %495 = bitcast %"class.gfx::Quaternion"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %495) #10
  call void @_ZN3gfx10QuaternionC1ERKNS_9Vector3dFES3_(%"class.gfx::Quaternion"* nonnull %6, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) @_ZN12_GLOBAL__N_114kForwardVectorE, %"class.gfx::Vector3dF"* dereferenceable(12) %489) #10
  call void @_ZN3gfx9TransformC1ERKNS_10QuaternionE(%"class.gfx::Transform"* nonnull %5, %"class.gfx::Quaternion"* nonnull dereferenceable(32) %6) #10
  call void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"* nonnull %4, %"class.gfx::Transform"* nonnull dereferenceable(68) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %495) #10
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %494) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 4 %492, i64 68, i1 false) #10
  %496 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %18, i64 0, i32 2
  %497 = bitcast %"class.gfx::Point3F"* %496 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %497, i8* align 4 bitcast (%"class.gfx::Point3F"* @_ZN12_GLOBAL__N_118kLaserOriginOffsetE to i8*), i64 12, i1 false) #10
  call void @_ZNK3gfx9Transform14TransformPointEPNS_7Point3FE(%"class.gfx::Transform"* nonnull %4, %"class.gfx::Point3F"* %496) #10
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %492) #10
  %498 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %18, i64 0, i32 6
  store i8 0, i8* %498, align 8
  %499 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %18, i64 0, i32 8
  %500 = bitcast <2 x float>* %31 to i64*
  %501 = bitcast %"class.gfx::PointF"* %499 to i64*
  %502 = load i64, i64* %500, align 8
  store i64 %502, i64* %501, align 4
  %503 = bitcast %"struct.vr::ControllerModel"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %503) #10
  %504 = load i64, i64* %469, align 8, !noalias !23
  %505 = icmp eq i64 %504, 0
  br i1 %505, label %518, label %506

506:                                              ; preds = %486
  %507 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %508 = load i64, i64* %507, align 8, !noalias !23
  %509 = add i64 %504, -1
  %510 = add i64 %509, %508
  %511 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %512 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %511, align 8, !noalias !23
  %513 = udiv i64 %510, 26
  %514 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %512, i64 %513
  %515 = load %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %514, align 8
  %516 = urem i64 %510, 26
  %517 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %515, i64 %516
  br label %520

518:                                              ; preds = %486
  %519 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 3
  br label %520

520:                                              ; preds = %506, %518
  %521 = phi %"struct.vr::ControllerModel"* [ %517, %506 ], [ %519, %518 ]
  call void @_ZN2vr15ControllerModelC1ERKS0_(%"struct.vr::ControllerModel"* nonnull %29, %"struct.vr::ControllerModel"* dereferenceable(152) %521) #10
  %522 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %29, i64 0, i32 3
  %523 = load i32, i32* %522, align 4
  %524 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %18, i64 0, i32 3
  store i32 %523, i32* %524, align 4
  call void @_ZN2vr15ControllerModelD1Ev(%"struct.vr::ControllerModel"* nonnull %29) #10
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %503) #10
  %525 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %526 = bitcast %"struct.vr::ControllerModel"*** %525 to i64*
  %527 = load i64, i64* %526, align 8
  %528 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %529 = bitcast %"struct.vr::ControllerModel"*** %528 to i64*
  %530 = load i64, i64* %529, align 8
  %531 = sub i64 %527, %530
  %532 = ashr exact i64 %531, 3
  %533 = icmp eq i64 %531, 0
  %534 = mul i64 %532, 26
  %535 = add i64 %534, -1
  %536 = select i1 %533, i64 0, i64 %535
  %537 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %538 = load i64, i64* %537, align 8
  %539 = load i64, i64* %469, align 8
  %540 = add i64 %539, %538
  %541 = icmp eq i64 %536, %540
  %542 = inttoptr i64 %530 to %"struct.vr::ControllerModel"**
  %543 = inttoptr i64 %527 to %"struct.vr::ControllerModel"**
  br i1 %541, label %544, label %551

544:                                              ; preds = %520
  %545 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0
  call void @_ZNSt3__15dequeIN2vr15ControllerModelENS_9allocatorIS2_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %545) #10
  %546 = load i64, i64* %469, align 8
  %547 = load i64, i64* %537, align 8
  %548 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %528, align 8
  %549 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %525, align 8
  %550 = add i64 %547, %546
  br label %551

551:                                              ; preds = %544, %520
  %552 = phi i64 [ %550, %544 ], [ %540, %520 ]
  %553 = phi %"struct.vr::ControllerModel"** [ %549, %544 ], [ %543, %520 ]
  %554 = phi %"struct.vr::ControllerModel"** [ %548, %544 ], [ %542, %520 ]
  %555 = icmp eq %"struct.vr::ControllerModel"** %553, %554
  br i1 %555, label %562, label %556

556:                                              ; preds = %551
  %557 = udiv i64 %552, 26
  %558 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %554, i64 %557
  %559 = load %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %558, align 8
  %560 = urem i64 %552, 26
  %561 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %559, i64 %560
  br label %562

562:                                              ; preds = %556, %551, %461, %456, %366, %361, %326, %321, %286, %281, %225, %220, %185, %180
  %563 = phi %"struct.vr::ControllerModel"* [ %190, %185 ], [ null, %180 ], [ %230, %225 ], [ null, %220 ], [ %291, %286 ], [ null, %281 ], [ %331, %326 ], [ null, %321 ], [ %371, %366 ], [ null, %361 ], [ %466, %461 ], [ null, %456 ], [ %561, %556 ], [ null, %551 ]
  %564 = phi i64* [ %167, %185 ], [ %167, %180 ], [ %207, %225 ], [ %207, %220 ], [ %233, %286 ], [ %233, %281 ], [ %308, %326 ], [ %308, %321 ], [ %348, %366 ], [ %348, %361 ], [ %374, %461 ], [ %374, %456 ], [ %469, %556 ], [ %469, %551 ]
  call void @_ZN2vr15ControllerModelC1ERKS0_(%"struct.vr::ControllerModel"* %563, %"struct.vr::ControllerModel"* nonnull dereferenceable(152) %18) #10
  %565 = load i64, i64* %564, align 8
  %566 = add i64 %565, 1
  store i64 %566, i64* %564, align 8
  br label %567

567:                                              ; preds = %562, %148
  call void @_ZN2vr15ControllerModelD1Ev(%"struct.vr::ControllerModel"* nonnull %18) #10
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %32) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr23InputDelegateForTesting18GetMostRecentModelEv(%"struct.vr::ControllerModel"* noalias sret, %"class.vr::InputDelegateForTesting"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %1, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %4, -1
  %10 = add i64 %9, %8
  %11 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %12 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %11, align 8
  %13 = udiv i64 %10, 26
  %14 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %12, i64 %13
  %15 = load %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %14, align 8
  %16 = urem i64 %10, 26
  %17 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %15, i64 %16
  br label %20

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %1, i64 0, i32 3
  br label %20

20:                                               ; preds = %18, %6
  %21 = phi %"struct.vr::ControllerModel"* [ %19, %18 ], [ %17, %6 ]
  tail call void @_ZN2vr15ControllerModelC1ERKS0_(%"struct.vr::ControllerModel"* %0, %"struct.vr::ControllerModel"* dereferenceable(152) %21) #10
  ret void
}

declare { <2 x float>, float } @_ZN3gfxmiERKNS_7Point3FES2_(%"class.gfx::Point3F"* dereferenceable(12), %"class.gfx::Point3F"* dereferenceable(12)) local_unnamed_addr #1

declare { <2 x float>, float } @_ZN3gfxmiERKNS_7Point3FERKNS_9Vector3dFE(%"class.gfx::Point3F"* dereferenceable(12), %"class.gfx::Vector3dF"* dereferenceable(12)) local_unnamed_addr #1

declare zeroext i1 @_ZNK3gfx9Vector3dF13GetNormalizedEPS0_(%"class.gfx::Vector3dF"*, %"class.gfx::Vector3dF"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2vr23InputDelegateForTesting12IsQueueEmptyEv(%"class.vr::InputDelegateForTesting"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr23InputDelegateForTesting16UpdateControllerERKN3gfx9TransformEN4base9TimeTicksEb(%"class.vr::InputDelegateForTesting"* nocapture, %"class.gfx::Transform"* nocapture readnone dereferenceable(68), i64, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 4
  %7 = bitcast %"struct.vr::ControllerModel"* %6 to i8*
  %8 = bitcast %"struct.vr::ControllerModel"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 148, i1 false)
  %9 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %39, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %14 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %13, align 8
  %15 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = udiv i64 %16, 26
  %18 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %14, i64 %17
  %19 = load %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %18, align 8
  %20 = urem i64 %16, 26
  %21 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %19, i64 %20
  %22 = bitcast %"struct.vr::ControllerModel"* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %22, i64 148, i1 false)
  %23 = load %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %18, align 8
  %24 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %23, i64 %20
  tail call void @_ZN2vr15ControllerModelD1Ev(%"struct.vr::ControllerModel"* %24) #10
  %25 = bitcast i64* %15 to <2 x i64>*
  %26 = load <2 x i64>, <2 x i64>* %25, align 8
  %27 = add <2 x i64> %26, <i64 1, i64 -1>
  %28 = bitcast i64* %15 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %28, align 8
  %29 = extractelement <2 x i64> %27, i32 0
  %30 = icmp ult i64 %29, 52
  br i1 %30, label %39, label %31

31:                                               ; preds = %12
  %32 = bitcast %"struct.vr::ControllerModel"*** %13 to i8***
  %33 = load i8**, i8*** %32, align 8
  %34 = load i8*, i8** %33, align 8
  tail call void @_ZdlPv(i8* %34) #11
  %35 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %13, align 8
  %36 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %35, i64 1
  store %"struct.vr::ControllerModel"** %36, %"struct.vr::ControllerModel"*** %13, align 8
  %37 = load i64, i64* %15, align 8
  %38 = add i64 %37, -26
  store i64 %38, i64* %15, align 8
  br label %39

39:                                               ; preds = %31, %12, %4
  %40 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 3, i32 14, i32 0, i32 0
  store i64 %2, i64* %40, align 8
  %41 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 3, i32 15, i32 0, i32 0
  store i64 %2, i64* %41, align 8
  %42 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 3, i32 6
  %43 = load i8, i8* %42, align 8, !range !26
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %0, i64 0, i32 5, i32 0, i32 0
  store i64 %2, i64* %46, align 8
  br label %47

47:                                               ; preds = %39, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr23InputDelegateForTesting18GetControllerModelERKN3gfx9TransformE(%"struct.vr::ControllerModel"* noalias sret, %"class.vr::InputDelegateForTesting"*, %"class.gfx::Transform"* nocapture readnone dereferenceable(68)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %1, i64 0, i32 3
  tail call void @_ZN2vr15ControllerModelC1ERKS0_(%"struct.vr::ControllerModel"* %0, %"struct.vr::ControllerModel"* dereferenceable(152) %4) #10
  ret void
}

declare void @_ZN2vr15ControllerModelC1ERKS0_(%"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"* dereferenceable(152)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr23InputDelegateForTesting11GetGesturesEN4base9TimeTicksE(%"class.std::__1::vector"* noalias sret, %"class.vr::InputDelegateForTesting"*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.vr::PlatformControllerForTesting", align 8
  %5 = bitcast %"class.vr::PlatformControllerForTesting"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %1, i64 0, i32 4
  %7 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %1, i64 0, i32 3
  %8 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %1, i64 0, i32 5, i32 0, i32 0
  %9 = bitcast %"class.vr::PlatformControllerForTesting"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = load i64, i64* %8, align 8
  call void @_ZN2vr28PlatformControllerForTestingC1EPNS_15ControllerModelES2_N4base9TimeTicksE(%"class.vr::PlatformControllerForTesting"* nonnull %4, %"struct.vr::ControllerModel"* %6, %"struct.vr::ControllerModel"* %7, i64 %10) #10
  %11 = getelementptr inbounds %"class.vr::InputDelegateForTesting", %"class.vr::InputDelegateForTesting"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %12 = load %"class.vr::GestureDetector"*, %"class.vr::GestureDetector"** %11, align 8
  %13 = getelementptr inbounds %"class.vr::PlatformControllerForTesting", %"class.vr::PlatformControllerForTesting"* %4, i64 0, i32 0
  call void @_ZN2vr15GestureDetector14DetectGesturesERKNS_18PlatformControllerEN4base9TimeTicksE(%"class.std::__1::vector"* sret %0, %"class.vr::GestureDetector"* %12, %"class.vr::PlatformController"* nonnull dereferenceable(8) %13, i64 %2) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #10
  ret void
}

declare void @_ZN2vr28PlatformControllerForTestingC1EPNS_15ControllerModelES2_N4base9TimeTicksE(%"class.vr::PlatformControllerForTesting"*, %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"*, i64) unnamed_addr #1

declare void @_ZN2vr15GestureDetector14DetectGesturesERKNS_18PlatformControllerEN4base9TimeTicksE(%"class.std::__1::vector"* sret, %"class.vr::GestureDetector"*, %"class.vr::PlatformController"* dereferenceable(8), i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2vr23InputDelegateForTesting19GetInputSourceStateEv(%"class.mojo::StructPtr"* noalias nocapture sret, %"class.vr::InputDelegateForTesting"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 1040) #11, !noalias !27
  %4 = bitcast i8* %3 to %"class.device::mojom::XRInputSourceState"*
  tail call void @_ZN6device5mojom18XRInputSourceStateC1Ev(%"class.device::mojom::XRInputSourceState"* nonnull %4) #10, !noalias !27
  %5 = ptrtoint i8* %3 to i64
  %6 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 %5, i64* %6, align 8, !alias.scope !27
  %7 = tail call i8* @_Znwm(i64 104) #11, !noalias !30
  %8 = bitcast i8* %7 to %"class.device::mojom::XRInputSourceDescription"*
  tail call void @_ZN6device5mojom24XRInputSourceDescriptionC1Ev(%"class.device::mojom::XRInputSourceDescription"* nonnull %8) #10, !noalias !30
  %9 = ptrtoint i8* %7 to i64
  %10 = getelementptr inbounds i8, i8* %3, i64 8
  %11 = bitcast i8* %10 to %"class.device::mojom::XRInputSourceDescription"**
  %12 = load %"class.device::mojom::XRInputSourceDescription"*, %"class.device::mojom::XRInputSourceDescription"** %11, align 8
  store %"class.device::mojom::XRInputSourceDescription"* null, %"class.device::mojom::XRInputSourceDescription"** %11, align 8
  %13 = icmp eq %"class.device::mojom::XRInputSourceDescription"* %12, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = bitcast i8* %10 to i64*
  store i64 %9, i64* %15, align 8
  %16 = bitcast i8* %7 to %"class.device::mojom::XRInputSourceDescription"*
  br label %26

17:                                               ; preds = %2
  tail call void @_ZN6device5mojom24XRInputSourceDescriptionD1Ev(%"class.device::mojom::XRInputSourceDescription"* nonnull %12) #10
  %18 = bitcast %"class.device::mojom::XRInputSourceDescription"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  %19 = bitcast i8* %10 to i64*
  %20 = load %"class.device::mojom::XRInputSourceDescription"*, %"class.device::mojom::XRInputSourceDescription"** %11, align 8
  store i64 %9, i64* %19, align 8
  %21 = icmp eq %"class.device::mojom::XRInputSourceDescription"* %20, null
  %22 = bitcast i8* %7 to %"class.device::mojom::XRInputSourceDescription"*
  br i1 %21, label %26, label %23

23:                                               ; preds = %17
  tail call void @_ZN6device5mojom24XRInputSourceDescriptionD1Ev(%"class.device::mojom::XRInputSourceDescription"* nonnull %20) #10
  %24 = bitcast %"class.device::mojom::XRInputSourceDescription"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #11
  %25 = load %"class.device::mojom::XRInputSourceDescription"*, %"class.device::mojom::XRInputSourceDescription"** %11, align 8
  br label %26

26:                                               ; preds = %14, %17, %23
  %27 = phi %"class.device::mojom::XRInputSourceDescription"* [ %16, %14 ], [ %22, %17 ], [ %25, %23 ]
  %28 = bitcast i8* %3 to i32*
  store i32 1, i32* %28, align 8
  %29 = getelementptr inbounds %"class.device::mojom::XRInputSourceDescription", %"class.device::mojom::XRInputSourceDescription"* %27, i64 0, i32 0
  store i32 2, i32* %29, align 8
  %30 = getelementptr inbounds i8, i8* %3, i64 88
  store i8 1, i8* %30, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2vr23InputDelegateForTesting8OnResumeEv(%"class.vr::InputDelegateForTesting"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2vr23InputDelegateForTesting7OnPauseEv(%"class.vr::InputDelegateForTesting"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

declare void @_ZN3gfx9Transform11Translate3dERKNS_9Vector3dFE(%"class.gfx::Transform"*, %"class.gfx::Vector3dF"* dereferenceable(12)) local_unnamed_addr #1

declare void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #1

declare void @_ZN3gfx10QuaternionC1ERKNS_9Vector3dFES3_(%"class.gfx::Quaternion"*, %"class.gfx::Vector3dF"* dereferenceable(12), %"class.gfx::Vector3dF"* dereferenceable(12)) unnamed_addr #1

declare void @_ZN3gfx9TransformC1ERKNS_10QuaternionE(%"class.gfx::Transform"*, %"class.gfx::Quaternion"* dereferenceable(32)) unnamed_addr #1

declare void @_ZNK3gfx9Transform14TransformPointEPNS_7Point3FE(%"class.gfx::Transform"*, %"class.gfx::Point3F"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIN2vr15ControllerModelENS_9allocatorIS2_EEE5clearEv(%"class.std::__1::__deque_base"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 1
  %3 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = udiv i64 %5, 26
  %7 = urem i64 %5, 26
  %8 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %3, i64 %6
  %9 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 2
  %10 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %9, align 8
  %11 = icmp eq %"struct.vr::ControllerModel"** %10, %3
  %12 = ptrtoint %"struct.vr::ControllerModel"** %10 to i64
  %13 = ptrtoint %"struct.vr::ControllerModel"** %3 to i64
  %14 = bitcast %"struct.vr::ControllerModel"** %3 to i8**
  br i1 %11, label %15, label %17

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  br label %29

17:                                               ; preds = %1
  %18 = load %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %8, align 8
  %19 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %18, i64 %7
  %20 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %5
  %23 = udiv i64 %22, 26
  %24 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %3, i64 %23
  %25 = load %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %24, align 8
  %26 = urem i64 %22, 26
  %27 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %25, i64 %26
  %28 = icmp eq %"struct.vr::ControllerModel"* %27, %19
  br i1 %28, label %29, label %47

29:                                               ; preds = %15, %17
  %30 = phi i64* [ %16, %15 ], [ %20, %17 ]
  %31 = bitcast %"struct.vr::ControllerModel"*** %9 to i64*
  br label %38

32:                                               ; preds = %60
  %33 = bitcast %"struct.vr::ControllerModel"*** %9 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"struct.vr::ControllerModel"*** %2 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = inttoptr i64 %36 to i8**
  br label %38

38:                                               ; preds = %29, %32
  %39 = phi i64* [ %30, %29 ], [ %20, %32 ]
  %40 = phi i64* [ %31, %29 ], [ %33, %32 ]
  %41 = phi i8** [ %14, %29 ], [ %37, %32 ]
  %42 = phi i64 [ %13, %29 ], [ %36, %32 ]
  %43 = phi i64 [ %12, %29 ], [ %34, %32 ]
  store i64 0, i64* %39, align 8
  %44 = sub i64 %43, %42
  %45 = ashr exact i64 %44, 3
  %46 = icmp ugt i64 %45, 2
  br i1 %46, label %65, label %76

47:                                               ; preds = %17, %60
  %48 = phi %"struct.vr::ControllerModel"* [ %63, %60 ], [ %19, %17 ]
  %49 = phi %"struct.vr::ControllerModel"** [ %62, %60 ], [ %8, %17 ]
  tail call void @_ZN2vr15ControllerModelD1Ev(%"struct.vr::ControllerModel"* %48) #10
  %50 = getelementptr inbounds %"struct.vr::ControllerModel", %"struct.vr::ControllerModel"* %48, i64 1
  %51 = ptrtoint %"struct.vr::ControllerModel"* %50 to i64
  %52 = bitcast %"struct.vr::ControllerModel"** %49 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %51, %53
  %55 = icmp eq i64 %54, 3952
  br i1 %55, label %56, label %60

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %49, i64 1
  %58 = bitcast %"struct.vr::ControllerModel"** %57 to i64*
  %59 = load i64, i64* %58, align 8
  br label %60

60:                                               ; preds = %47, %56
  %61 = phi i64 [ %59, %56 ], [ %51, %47 ]
  %62 = phi %"struct.vr::ControllerModel"** [ %57, %56 ], [ %49, %47 ]
  %63 = inttoptr i64 %61 to %"struct.vr::ControllerModel"*
  %64 = icmp eq %"struct.vr::ControllerModel"* %27, %63
  br i1 %64, label %32, label %47

65:                                               ; preds = %38, %65
  %66 = phi i8** [ %75, %65 ], [ %41, %38 ]
  %67 = load i8*, i8** %66, align 8
  tail call void @_ZdlPv(i8* %67) #11
  %68 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %2, align 8
  %69 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %68, i64 1
  store %"struct.vr::ControllerModel"** %69, %"struct.vr::ControllerModel"*** %2, align 8
  %70 = load i64, i64* %40, align 8
  %71 = ptrtoint %"struct.vr::ControllerModel"** %69 to i64
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 3
  %74 = icmp ugt i64 %73, 2
  %75 = bitcast %"struct.vr::ControllerModel"** %69 to i8**
  br i1 %74, label %65, label %76

76:                                               ; preds = %65, %38
  %77 = phi i64 [ %45, %38 ], [ %73, %65 ]
  switch i64 %77, label %81 [
    i64 1, label %79
    i64 2, label %78
  ]

78:                                               ; preds = %76
  br label %79

79:                                               ; preds = %76, %78
  %80 = phi i64 [ 26, %78 ], [ 13, %76 ]
  store i64 %80, i64* %4, align 8
  br label %81

81:                                               ; preds = %79, %76
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6device5mojom24XRInputSourceDescriptionD1Ev(%"class.device::mojom::XRInputSourceDescription"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN2vr15GestureDetectorC1Ev(%"class.vr::GestureDetector"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN2vr15ControllerModelENS_9allocatorIS2_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.vr::ControllerModel"*, align 8
  %3 = alloca %"struct.vr::ControllerModel"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.85", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 25
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -26
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %10, align 8
  %12 = bitcast %"struct.vr::ControllerModel"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %11, i64 1
  store %"struct.vr::ControllerModel"** %14, %"struct.vr::ControllerModel"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %17, align 8
  %19 = icmp eq %"struct.vr::ControllerModel"** %16, %18
  %20 = ptrtoint %"struct.vr::ControllerModel"** %18 to i64
  %21 = bitcast %"struct.vr::ControllerModel"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %23, align 8
  %25 = icmp ugt %"struct.vr::ControllerModel"** %14, %24
  %26 = ptrtoint %"struct.vr::ControllerModel"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"struct.vr::ControllerModel"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %14, i64 %32
  %34 = ptrtoint %"struct.vr::ControllerModel"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"struct.vr::ControllerModel"** %33 to i8*
  %40 = bitcast %"struct.vr::ControllerModel"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #10
  %41 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"struct.vr::ControllerModel"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %33, i64 %36
  store %"struct.vr::ControllerModel"** %44, %"struct.vr::ControllerModel"*** %15, align 8
  %45 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %43, i64 %32
  store %"struct.vr::ControllerModel"** %45, %"struct.vr::ControllerModel"*** %10, align 8
  %46 = bitcast %"struct.vr::ControllerModel"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"struct.vr::ControllerModel"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #12
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #11
  %60 = bitcast i8* %59 to %"struct.vr::ControllerModel"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %60, i64 %57
  %63 = ptrtoint %"struct.vr::ControllerModel"** %62 to i64
  %64 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %60, i64 %53
  %65 = ptrtoint %"struct.vr::ControllerModel"** %64 to i64
  %66 = ptrtoint %"struct.vr::ControllerModel"** %14 to i64
  %67 = ptrtoint %"struct.vr::ControllerModel"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"struct.vr::ControllerModel"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"struct.vr::ControllerModel"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"struct.vr::ControllerModel"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %79, i64 1
  %87 = ptrtoint %"struct.vr::ControllerModel"** %86 to i64
  %88 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !33

91:                                               ; preds = %78
  %92 = ptrtoint %"struct.vr::ControllerModel"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"struct.vr::ControllerModel"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"struct.vr::ControllerModel"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"struct.vr::ControllerModel"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"struct.vr::ControllerModel"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"struct.vr::ControllerModel"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %99, i64 1
  %106 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %101, i64 1
  %107 = bitcast %"struct.vr::ControllerModel"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.vr::ControllerModel"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %99, i64 2
  %111 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %101, i64 2
  %112 = bitcast %"struct.vr::ControllerModel"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.vr::ControllerModel"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %99, i64 3
  %116 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %101, i64 3
  %117 = bitcast %"struct.vr::ControllerModel"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.vr::ControllerModel"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %99, i64 4
  %121 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %101, i64 4
  %122 = bitcast %"struct.vr::ControllerModel"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.vr::ControllerModel"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %99, i64 5
  %126 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %101, i64 5
  %127 = bitcast %"struct.vr::ControllerModel"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.vr::ControllerModel"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %99, i64 6
  %131 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %101, i64 6
  %132 = bitcast %"struct.vr::ControllerModel"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.vr::ControllerModel"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %99, i64 7
  %136 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %101, i64 7
  %137 = bitcast %"struct.vr::ControllerModel"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.vr::ControllerModel"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %99, i64 8
  %141 = ptrtoint %"struct.vr::ControllerModel"** %140 to i64
  %142 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %101, i64 8
  %143 = icmp eq %"struct.vr::ControllerModel"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"struct.vr::ControllerModel"** %70 to i64
  %146 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"struct.vr::ControllerModel"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"struct.vr::ControllerModel"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"struct.vr::ControllerModel"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"struct.vr::ControllerModel"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"struct.vr::ControllerModel"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #11
  %156 = bitcast %"struct.vr::ControllerModel"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %15, align 8
  %161 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %160, i64 1
  store %"struct.vr::ControllerModel"** %161, %"struct.vr::ControllerModel"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"struct.vr::ControllerModel"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.vr::ControllerModel"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"struct.vr::ControllerModel"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"struct.vr::ControllerModel"**
  %181 = inttoptr i64 %169 to %"struct.vr::ControllerModel"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"struct.vr::ControllerModel"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #10
  %186 = tail call i8* @_Znwm(i64 3952) #11
  %187 = bitcast %"struct.vr::ControllerModel"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPN2vr15ControllerModelENS_9allocatorIS3_EEE9push_backEOS3_(%"struct.std::__1::__split_buffer"* %163, %"struct.vr::ControllerModel"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #10
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"struct.vr::ControllerModel"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #10
  %190 = tail call i8* @_Znwm(i64 3952) #11
  %191 = bitcast %"struct.vr::ControllerModel"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPN2vr15ControllerModelENS_9allocatorIS3_EEE10push_frontEOS3_(%"struct.std::__1::__split_buffer"* %163, %"struct.vr::ControllerModel"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #10
  %192 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %167, align 8
  %193 = bitcast %"struct.vr::ControllerModel"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %192, i64 1
  store %"struct.vr::ControllerModel"** %195, %"struct.vr::ControllerModel"*** %167, align 8
  %196 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %164, align 8
  %197 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %172, align 8
  %198 = icmp eq %"struct.vr::ControllerModel"** %196, %197
  %199 = ptrtoint %"struct.vr::ControllerModel"** %197 to i64
  %200 = bitcast %"struct.vr::ControllerModel"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %202, align 8
  %204 = icmp ugt %"struct.vr::ControllerModel"** %195, %203
  %205 = ptrtoint %"struct.vr::ControllerModel"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"struct.vr::ControllerModel"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %195, i64 %211
  %213 = ptrtoint %"struct.vr::ControllerModel"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"struct.vr::ControllerModel"** %212 to i8*
  %219 = bitcast %"struct.vr::ControllerModel"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #10
  %220 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"struct.vr::ControllerModel"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %212, i64 %215
  store %"struct.vr::ControllerModel"** %223, %"struct.vr::ControllerModel"*** %164, align 8
  %224 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %222, i64 %211
  store %"struct.vr::ControllerModel"** %224, %"struct.vr::ControllerModel"*** %167, align 8
  %225 = bitcast %"struct.vr::ControllerModel"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #12
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #11
  %237 = bitcast i8* %236 to %"struct.vr::ControllerModel"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %237, i64 %234
  %240 = ptrtoint %"struct.vr::ControllerModel"** %239 to i64
  %241 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %237, i64 %230
  %242 = ptrtoint %"struct.vr::ControllerModel"** %241 to i64
  %243 = ptrtoint %"struct.vr::ControllerModel"** %195 to i64
  %244 = ptrtoint %"struct.vr::ControllerModel"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"struct.vr::ControllerModel"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"struct.vr::ControllerModel"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"struct.vr::ControllerModel"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %256, i64 1
  %264 = ptrtoint %"struct.vr::ControllerModel"** %263 to i64
  %265 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !35

268:                                              ; preds = %255
  %269 = ptrtoint %"struct.vr::ControllerModel"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"struct.vr::ControllerModel"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"struct.vr::ControllerModel"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"struct.vr::ControllerModel"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"struct.vr::ControllerModel"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"struct.vr::ControllerModel"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %276, i64 1
  %283 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %278, i64 1
  %284 = bitcast %"struct.vr::ControllerModel"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"struct.vr::ControllerModel"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %276, i64 2
  %288 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %278, i64 2
  %289 = bitcast %"struct.vr::ControllerModel"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"struct.vr::ControllerModel"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %276, i64 3
  %293 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %278, i64 3
  %294 = bitcast %"struct.vr::ControllerModel"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"struct.vr::ControllerModel"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %276, i64 4
  %298 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %278, i64 4
  %299 = bitcast %"struct.vr::ControllerModel"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"struct.vr::ControllerModel"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %276, i64 5
  %303 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %278, i64 5
  %304 = bitcast %"struct.vr::ControllerModel"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"struct.vr::ControllerModel"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %276, i64 6
  %308 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %278, i64 6
  %309 = bitcast %"struct.vr::ControllerModel"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"struct.vr::ControllerModel"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %276, i64 7
  %313 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %278, i64 7
  %314 = bitcast %"struct.vr::ControllerModel"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"struct.vr::ControllerModel"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %276, i64 8
  %318 = ptrtoint %"struct.vr::ControllerModel"** %317 to i64
  %319 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %278, i64 8
  %320 = icmp eq %"struct.vr::ControllerModel"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"struct.vr::ControllerModel"** %247 to i64
  %323 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"struct.vr::ControllerModel"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"struct.vr::ControllerModel"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"struct.vr::ControllerModel"** %325 to i8*
  call void @_ZdlPv(i8* %330) #11
  %331 = bitcast %"struct.vr::ControllerModel"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %164, align 8
  %336 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %335, i64 1
  store %"struct.vr::ControllerModel"** %336, %"struct.vr::ControllerModel"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.85"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #10
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.85", %"struct.std::__1::__split_buffer.85"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.85", %"struct.std::__1::__split_buffer.85"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.85", %"struct.std::__1::__split_buffer.85"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.85", %"struct.std::__1::__split_buffer.85"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.85"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"struct.vr::ControllerModel"** null, %"struct.vr::ControllerModel"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator"** %342 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %346, %"class.std::__1::__compressed_pair"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #12
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #11
  %354 = bitcast i8* %353 to %"struct.vr::ControllerModel"**
  %355 = bitcast %"struct.std::__1::__split_buffer.85"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %354, i64 %171
  store %"struct.vr::ControllerModel"** %356, %"struct.vr::ControllerModel"*** %340, align 8
  store %"struct.vr::ControllerModel"** %356, %"struct.vr::ControllerModel"*** %339, align 8
  %357 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %354, i64 %345
  store %"struct.vr::ControllerModel"** %357, %"struct.vr::ControllerModel"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 3952) #11
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"struct.vr::ControllerModel"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"struct.vr::ControllerModel"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"struct.vr::ControllerModel"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %356, i64 %370
  store %"struct.vr::ControllerModel"** %371, %"struct.vr::ControllerModel"*** %340, align 8
  store %"struct.vr::ControllerModel"** %371, %"struct.vr::ControllerModel"*** %339, align 8
  %372 = ptrtoint %"struct.vr::ControllerModel"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #12
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.85"* %4 to i64*
  %382 = bitcast %"struct.vr::ControllerModel"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #11
  %386 = bitcast i8* %385 to %"struct.vr::ControllerModel"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %386, i64 %383
  %389 = ptrtoint %"struct.vr::ControllerModel"** %388 to i64
  %390 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %386, i64 %377
  %391 = ptrtoint %"struct.vr::ControllerModel"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"struct.vr::ControllerModel"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"struct.vr::ControllerModel"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #11
  %394 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %164, align 8
  %395 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %167, align 8
  %396 = ptrtoint %"struct.vr::ControllerModel"** %395 to i64
  %397 = ptrtoint %"struct.vr::ControllerModel"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"struct.vr::ControllerModel"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"struct.vr::ControllerModel"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"struct.vr::ControllerModel"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"struct.vr::ControllerModel"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %406, i64 1
  store %"struct.vr::ControllerModel"** %408, %"struct.vr::ControllerModel"*** %340, align 8
  %409 = icmp eq %"struct.vr::ControllerModel"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"struct.vr::ControllerModel"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.85"* %4 to i64*
  %413 = bitcast %"struct.vr::ControllerModel"*** %339 to i64*
  %414 = bitcast %"struct.vr::ControllerModel"*** %340 to i64*
  %415 = bitcast %"struct.vr::ControllerModel"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"struct.vr::ControllerModel"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.85"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"struct.vr::ControllerModel"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"struct.vr::ControllerModel"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"struct.vr::ControllerModel"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"struct.vr::ControllerModel"**
  %441 = inttoptr i64 %434 to %"struct.vr::ControllerModel"**
  %442 = icmp eq %"struct.vr::ControllerModel"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %441, i64 -1
  %445 = ptrtoint %"struct.vr::ControllerModel"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %441, i64 %448
  store %"struct.vr::ControllerModel"** %449, %"struct.vr::ControllerModel"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #11
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #10
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"struct.vr::ControllerModel"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPN2vr15ControllerModelERNS_9allocatorIS3_EEE10push_frontERKS3_(%"struct.std::__1::__split_buffer.85"* nonnull %4, %"struct.vr::ControllerModel"** dereferenceable(8) %457)
  %458 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %167, align 8
  %459 = icmp eq %"struct.vr::ControllerModel"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2vr15ControllerModelENS_9allocatorIS3_EEE9push_backEOS3_(%"struct.std::__1::__split_buffer"*, %"struct.vr::ControllerModel"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %5, align 8
  %7 = icmp eq %"struct.vr::ControllerModel"** %4, %6
  %8 = ptrtoint %"struct.vr::ControllerModel"** %6 to i64
  %9 = bitcast %"struct.vr::ControllerModel"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %13, align 8
  %15 = icmp ugt %"struct.vr::ControllerModel"** %12, %14
  %16 = ptrtoint %"struct.vr::ControllerModel"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.vr::ControllerModel"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %12, i64 %22
  %24 = ptrtoint %"struct.vr::ControllerModel"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.vr::ControllerModel"** %23 to i8*
  %30 = bitcast %"struct.vr::ControllerModel"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #10
  %31 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.vr::ControllerModel"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %23, i64 %26
  store %"struct.vr::ControllerModel"** %34, %"struct.vr::ControllerModel"*** %3, align 8
  %35 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %33, i64 %22
  store %"struct.vr::ControllerModel"** %35, %"struct.vr::ControllerModel"*** %11, align 8
  %36 = bitcast %"struct.vr::ControllerModel"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.vr::ControllerModel"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #11
  %50 = bitcast i8* %49 to %"struct.vr::ControllerModel"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %50, i64 %47
  %53 = ptrtoint %"struct.vr::ControllerModel"** %52 to i64
  %54 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %50, i64 %43
  %55 = ptrtoint %"struct.vr::ControllerModel"** %54 to i64
  %56 = ptrtoint %"struct.vr::ControllerModel"** %12 to i64
  %57 = ptrtoint %"struct.vr::ControllerModel"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.vr::ControllerModel"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.vr::ControllerModel"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.vr::ControllerModel"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %69, i64 1
  %77 = ptrtoint %"struct.vr::ControllerModel"** %76 to i64
  %78 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !36

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.vr::ControllerModel"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.vr::ControllerModel"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.vr::ControllerModel"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.vr::ControllerModel"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.vr::ControllerModel"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.vr::ControllerModel"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %89, i64 1
  %96 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %91, i64 1
  %97 = bitcast %"struct.vr::ControllerModel"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.vr::ControllerModel"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %89, i64 2
  %101 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %91, i64 2
  %102 = bitcast %"struct.vr::ControllerModel"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.vr::ControllerModel"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %89, i64 3
  %106 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %91, i64 3
  %107 = bitcast %"struct.vr::ControllerModel"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.vr::ControllerModel"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %89, i64 4
  %111 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %91, i64 4
  %112 = bitcast %"struct.vr::ControllerModel"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.vr::ControllerModel"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %89, i64 5
  %116 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %91, i64 5
  %117 = bitcast %"struct.vr::ControllerModel"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.vr::ControllerModel"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %89, i64 6
  %121 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %91, i64 6
  %122 = bitcast %"struct.vr::ControllerModel"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.vr::ControllerModel"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %89, i64 7
  %126 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %91, i64 7
  %127 = bitcast %"struct.vr::ControllerModel"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.vr::ControllerModel"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %89, i64 8
  %131 = ptrtoint %"struct.vr::ControllerModel"** %130 to i64
  %132 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %91, i64 8
  %133 = icmp eq %"struct.vr::ControllerModel"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.vr::ControllerModel"** %60 to i64
  %136 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.vr::ControllerModel"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.vr::ControllerModel"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.vr::ControllerModel"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.vr::ControllerModel"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.vr::ControllerModel"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = bitcast %"struct.vr::ControllerModel"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.vr::ControllerModel"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %3, align 8
  %153 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %152, i64 1
  store %"struct.vr::ControllerModel"** %153, %"struct.vr::ControllerModel"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2vr15ControllerModelENS_9allocatorIS3_EEE10push_frontEOS3_(%"struct.std::__1::__split_buffer"*, %"struct.vr::ControllerModel"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %5, align 8
  %7 = icmp eq %"struct.vr::ControllerModel"** %4, %6
  %8 = ptrtoint %"struct.vr::ControllerModel"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %12, align 8
  %14 = icmp ult %"struct.vr::ControllerModel"** %11, %13
  %15 = bitcast %"struct.vr::ControllerModel"*** %12 to i64*
  %16 = ptrtoint %"struct.vr::ControllerModel"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.vr::ControllerModel"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %11, i64 %22
  %24 = ptrtoint %"struct.vr::ControllerModel"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %23, i64 %29
  %31 = bitcast %"struct.vr::ControllerModel"** %30 to i8*
  %32 = bitcast %"struct.vr::ControllerModel"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #10
  %33 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.vr::ControllerModel"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.vr::ControllerModel"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.vr::ControllerModel"** %36, %"struct.vr::ControllerModel"*** %3, align 8
  %37 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %35, i64 %22
  store %"struct.vr::ControllerModel"** %37, %"struct.vr::ControllerModel"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #11
  %51 = bitcast i8* %50 to %"struct.vr::ControllerModel"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %51, i64 %48
  %54 = ptrtoint %"struct.vr::ControllerModel"** %53 to i64
  %55 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %51, i64 %43
  %56 = ptrtoint %"struct.vr::ControllerModel"** %55 to i64
  %57 = ptrtoint %"struct.vr::ControllerModel"** %4 to i64
  %58 = ptrtoint %"struct.vr::ControllerModel"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.vr::ControllerModel"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.vr::ControllerModel"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.vr::ControllerModel"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %70, i64 1
  %78 = ptrtoint %"struct.vr::ControllerModel"** %77 to i64
  %79 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !37

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.vr::ControllerModel"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.vr::ControllerModel"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.vr::ControllerModel"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.vr::ControllerModel"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.vr::ControllerModel"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.vr::ControllerModel"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %90, i64 1
  %97 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %92, i64 1
  %98 = bitcast %"struct.vr::ControllerModel"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.vr::ControllerModel"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %90, i64 2
  %102 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %92, i64 2
  %103 = bitcast %"struct.vr::ControllerModel"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.vr::ControllerModel"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %90, i64 3
  %107 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %92, i64 3
  %108 = bitcast %"struct.vr::ControllerModel"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.vr::ControllerModel"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %90, i64 4
  %112 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %92, i64 4
  %113 = bitcast %"struct.vr::ControllerModel"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.vr::ControllerModel"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %90, i64 5
  %117 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %92, i64 5
  %118 = bitcast %"struct.vr::ControllerModel"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.vr::ControllerModel"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %90, i64 6
  %122 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %92, i64 6
  %123 = bitcast %"struct.vr::ControllerModel"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.vr::ControllerModel"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %90, i64 7
  %127 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %92, i64 7
  %128 = bitcast %"struct.vr::ControllerModel"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.vr::ControllerModel"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %90, i64 8
  %132 = ptrtoint %"struct.vr::ControllerModel"** %131 to i64
  %133 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %92, i64 8
  %134 = icmp eq %"struct.vr::ControllerModel"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.vr::ControllerModel"** %61 to i64
  %137 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.vr::ControllerModel"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.vr::ControllerModel"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.vr::ControllerModel"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.vr::ControllerModel"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.vr::ControllerModel"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.vr::ControllerModel"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %148, i64 -1
  %150 = bitcast %"struct.vr::ControllerModel"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.vr::ControllerModel"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %3, align 8
  %154 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %153, i64 -1
  store %"struct.vr::ControllerModel"** %154, %"struct.vr::ControllerModel"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2vr15ControllerModelERNS_9allocatorIS3_EEE10push_frontERKS3_(%"struct.std::__1::__split_buffer.85"*, %"struct.vr::ControllerModel"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.85", %"struct.std::__1::__split_buffer.85"* %0, i64 0, i32 1
  %4 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.85", %"struct.std::__1::__split_buffer.85"* %0, i64 0, i32 0
  %6 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %5, align 8
  %7 = icmp eq %"struct.vr::ControllerModel"** %4, %6
  %8 = ptrtoint %"struct.vr::ControllerModel"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.85", %"struct.std::__1::__split_buffer.85"* %0, i64 0, i32 2
  %11 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.85", %"struct.std::__1::__split_buffer.85"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %12, align 8
  %14 = icmp ult %"struct.vr::ControllerModel"** %11, %13
  %15 = bitcast %"struct.vr::ControllerModel"*** %12 to i64*
  %16 = ptrtoint %"struct.vr::ControllerModel"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.vr::ControllerModel"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %11, i64 %22
  %24 = ptrtoint %"struct.vr::ControllerModel"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %23, i64 %29
  %31 = bitcast %"struct.vr::ControllerModel"** %30 to i8*
  %32 = bitcast %"struct.vr::ControllerModel"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #10
  %33 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.vr::ControllerModel"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.vr::ControllerModel"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.vr::ControllerModel"** %36, %"struct.vr::ControllerModel"*** %3, align 8
  %37 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %35, i64 %22
  store %"struct.vr::ControllerModel"** %37, %"struct.vr::ControllerModel"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.85"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #11
  %51 = bitcast i8* %50 to %"struct.vr::ControllerModel"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %51, i64 %48
  %54 = ptrtoint %"struct.vr::ControllerModel"** %53 to i64
  %55 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %51, i64 %43
  %56 = ptrtoint %"struct.vr::ControllerModel"** %55 to i64
  %57 = ptrtoint %"struct.vr::ControllerModel"** %4 to i64
  %58 = ptrtoint %"struct.vr::ControllerModel"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.vr::ControllerModel"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.vr::ControllerModel"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.vr::ControllerModel"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %70, i64 1
  %78 = ptrtoint %"struct.vr::ControllerModel"** %77 to i64
  %79 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !38

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.vr::ControllerModel"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.vr::ControllerModel"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.vr::ControllerModel"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.vr::ControllerModel"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.vr::ControllerModel"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.vr::ControllerModel"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %90, i64 1
  %97 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %92, i64 1
  %98 = bitcast %"struct.vr::ControllerModel"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.vr::ControllerModel"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %90, i64 2
  %102 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %92, i64 2
  %103 = bitcast %"struct.vr::ControllerModel"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.vr::ControllerModel"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %90, i64 3
  %107 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %92, i64 3
  %108 = bitcast %"struct.vr::ControllerModel"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.vr::ControllerModel"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %90, i64 4
  %112 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %92, i64 4
  %113 = bitcast %"struct.vr::ControllerModel"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.vr::ControllerModel"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %90, i64 5
  %117 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %92, i64 5
  %118 = bitcast %"struct.vr::ControllerModel"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.vr::ControllerModel"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %90, i64 6
  %122 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %92, i64 6
  %123 = bitcast %"struct.vr::ControllerModel"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.vr::ControllerModel"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %90, i64 7
  %127 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %92, i64 7
  %128 = bitcast %"struct.vr::ControllerModel"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.vr::ControllerModel"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %90, i64 8
  %132 = ptrtoint %"struct.vr::ControllerModel"** %131 to i64
  %133 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %92, i64 8
  %134 = icmp eq %"struct.vr::ControllerModel"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.vr::ControllerModel"** %61 to i64
  %137 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.vr::ControllerModel"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.vr::ControllerModel"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.vr::ControllerModel"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.vr::ControllerModel"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.vr::ControllerModel"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.vr::ControllerModel"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %148, i64 -1
  %150 = bitcast %"struct.vr::ControllerModel"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.vr::ControllerModel"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.vr::ControllerModel"**, %"struct.vr::ControllerModel"*** %3, align 8
  %154 = getelementptr inbounds %"struct.vr::ControllerModel"*, %"struct.vr::ControllerModel"** %153, i64 -1
  store %"struct.vr::ControllerModel"** %154, %"struct.vr::ControllerModel"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

declare void @_ZN6device5mojom18XRInputSourceStateC1Ev(%"class.device::mojom::XRInputSourceState"*) unnamed_addr #1

declare void @_ZN6device5mojom24XRInputSourceDescriptionC1Ev(%"class.device::mojom::XRInputSourceDescription"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN2vr23InputDelegateForTesting18GetMostRecentModelEv: argument 0"}
!4 = distinct !{!4, !"_ZN2vr23InputDelegateForTesting18GetMostRecentModelEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN2vr23InputDelegateForTesting18GetMostRecentModelEv: argument 0"}
!7 = distinct !{!7, !"_ZN2vr23InputDelegateForTesting18GetMostRecentModelEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN2vr23InputDelegateForTesting18GetMostRecentModelEv: argument 0"}
!10 = distinct !{!10, !"_ZN2vr23InputDelegateForTesting18GetMostRecentModelEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN2vr23InputDelegateForTesting18GetMostRecentModelEv: argument 0"}
!13 = distinct !{!13, !"_ZN2vr23InputDelegateForTesting18GetMostRecentModelEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN2vr23InputDelegateForTesting18GetMostRecentModelEv: argument 0"}
!16 = distinct !{!16, !"_ZN2vr23InputDelegateForTesting18GetMostRecentModelEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN2vr23InputDelegateForTesting18GetMostRecentModelEv: argument 0"}
!19 = distinct !{!19, !"_ZN2vr23InputDelegateForTesting18GetMostRecentModelEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN2vr23InputDelegateForTesting18GetMostRecentModelEv: argument 0"}
!22 = distinct !{!22, !"_ZN2vr23InputDelegateForTesting18GetMostRecentModelEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN2vr23InputDelegateForTesting18GetMostRecentModelEv: argument 0"}
!25 = distinct !{!25, !"_ZN2vr23InputDelegateForTesting18GetMostRecentModelEv"}
!26 = !{i8 0, i8 2}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN6device5mojom18XRInputSourceState3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!29 = distinct !{!29, !"_ZN6device5mojom18XRInputSourceState3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN6device5mojom24XRInputSourceDescription3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!32 = distinct !{!32, !"_ZN6device5mojom24XRInputSourceDescription3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!33 = distinct !{!33, !34}
!34 = !{!"llvm.loop.unroll.disable"}
!35 = distinct !{!35, !34}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !34}
!38 = distinct !{!38, !34}
