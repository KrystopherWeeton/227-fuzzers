; ModuleID = '../../third_party/blink/renderer/modules/sensor/sensor_reading_remapper.cc'
source_filename = "../../third_party/blink/renderer/modules/sensor/sensor_reading_remapper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"union.device::SensorReading" = type { %"struct.device::SensorReadingRaw" }
%"struct.device::SensorReadingRaw" = type { %"struct.device::SensorReadingBase", [4 x %"class.device::SensorReadingField"] }
%"struct.device::SensorReadingBase" = type { %"class.device::SensorReadingField" }
%"class.device::SensorReadingField" = type { %"union.device::SensorReadingField<double>::Storage" }
%"union.device::SensorReadingField<double>::Storage" = type { i64 }

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink21SensorReadingRemapper19RemapToScreenCoordsEN6device5mojom10SensorTypeEtPNS1_13SensorReadingE(i32, i16 zeroext, %"union.device::SensorReading"* nocapture) local_unnamed_addr #0 align 2 {
  switch i32 %0, label %111 [
    i32 11, label %73
    i32 9, label %73
    i32 6, label %50
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %27
  ]

4:                                                ; preds = %3, %3, %3
  switch i16 %1, label %8 [
    i16 270, label %7
    i16 90, label %5
    i16 180, label %6
  ]

5:                                                ; preds = %4
  br label %8

6:                                                ; preds = %4
  br label %8

7:                                                ; preds = %4
  br label %8

8:                                                ; preds = %4, %5, %6, %7
  %9 = phi double [ 0.000000e+00, %7 ], [ -1.000000e+00, %6 ], [ 0.000000e+00, %5 ], [ 1.000000e+00, %4 ]
  %10 = icmp eq i16 %1, 90
  %11 = icmp eq i16 %1, 270
  %12 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %2, i64 0, i32 0, i32 1, i64 0
  %13 = bitcast %"class.device::SensorReadingField"* %12 to double*
  %14 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %2, i64 0, i32 0, i32 1, i64 1
  %15 = bitcast %"class.device::SensorReadingField"* %12 to <2 x double>*
  %16 = load <2 x double>, <2 x double>* %15, align 8
  %17 = extractelement <2 x double> %16, i32 0
  %18 = fmul double %9, %17
  %19 = uitofp i1 %10 to double
  %20 = select i1 %11, double -1.000000e+00, double %19
  %21 = extractelement <2 x double> %16, i32 1
  %22 = fmul double %20, %21
  %23 = fadd double %18, %22
  store double %23, double* %13, align 8
  %24 = insertelement <2 x double> undef, double %20, i32 0
  %25 = insertelement <2 x double> %24, double %9, i32 1
  %26 = fmul <2 x double> %25, %16
  br label %104

27:                                               ; preds = %3
  switch i16 %1, label %31 [
    i16 270, label %30
    i16 90, label %28
    i16 180, label %29
  ]

28:                                               ; preds = %27
  br label %31

29:                                               ; preds = %27
  br label %31

30:                                               ; preds = %27
  br label %31

31:                                               ; preds = %27, %28, %29, %30
  %32 = phi double [ 0.000000e+00, %30 ], [ -1.000000e+00, %29 ], [ 0.000000e+00, %28 ], [ 1.000000e+00, %27 ]
  %33 = icmp eq i16 %1, 90
  %34 = icmp eq i16 %1, 270
  %35 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %2, i64 0, i32 0, i32 1, i64 0
  %36 = bitcast %"class.device::SensorReadingField"* %35 to double*
  %37 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %2, i64 0, i32 0, i32 1, i64 1
  %38 = bitcast %"class.device::SensorReadingField"* %35 to <2 x double>*
  %39 = load <2 x double>, <2 x double>* %38, align 8
  %40 = extractelement <2 x double> %39, i32 0
  %41 = fmul double %32, %40
  %42 = uitofp i1 %33 to double
  %43 = select i1 %34, double -1.000000e+00, double %42
  %44 = extractelement <2 x double> %39, i32 1
  %45 = fmul double %43, %44
  %46 = fadd double %41, %45
  store double %46, double* %36, align 8
  %47 = insertelement <2 x double> undef, double %43, i32 0
  %48 = insertelement <2 x double> %47, double %32, i32 1
  %49 = fmul <2 x double> %48, %39
  br label %104

50:                                               ; preds = %3
  switch i16 %1, label %54 [
    i16 270, label %53
    i16 90, label %51
    i16 180, label %52
  ]

51:                                               ; preds = %50
  br label %54

52:                                               ; preds = %50
  br label %54

53:                                               ; preds = %50
  br label %54

54:                                               ; preds = %50, %51, %52, %53
  %55 = phi double [ 0.000000e+00, %53 ], [ -1.000000e+00, %52 ], [ 0.000000e+00, %51 ], [ 1.000000e+00, %50 ]
  %56 = icmp eq i16 %1, 90
  %57 = icmp eq i16 %1, 270
  %58 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %2, i64 0, i32 0, i32 1, i64 0
  %59 = bitcast %"class.device::SensorReadingField"* %58 to double*
  %60 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %2, i64 0, i32 0, i32 1, i64 1
  %61 = bitcast %"class.device::SensorReadingField"* %58 to <2 x double>*
  %62 = load <2 x double>, <2 x double>* %61, align 8
  %63 = extractelement <2 x double> %62, i32 0
  %64 = fmul double %55, %63
  %65 = uitofp i1 %56 to double
  %66 = select i1 %57, double -1.000000e+00, double %65
  %67 = extractelement <2 x double> %62, i32 1
  %68 = fmul double %66, %67
  %69 = fadd double %64, %68
  store double %69, double* %59, align 8
  %70 = insertelement <2 x double> undef, double %66, i32 0
  %71 = insertelement <2 x double> %70, double %55, i32 1
  %72 = fmul <2 x double> %71, %62
  br label %104

73:                                               ; preds = %3, %3
  switch i16 %1, label %77 [
    i16 270, label %76
    i16 90, label %74
    i16 180, label %75
  ]

74:                                               ; preds = %73
  br label %77

75:                                               ; preds = %73
  br label %77

76:                                               ; preds = %73
  br label %77

77:                                               ; preds = %73, %74, %75, %76
  %78 = phi <2 x double> [ <double 0xBFE6A09E667E556E, double 0xBFE6A09E667E556E>, %76 ], [ <double -1.000000e+00, double 0.000000e+00>, %75 ], [ <double 0xBFE6A09E667E556E, double 0x3FE6A09E667E556E>, %74 ], [ <double 0.000000e+00, double 1.000000e+00>, %73 ]
  %79 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %2, i64 0, i32 0, i32 1, i64 0
  %80 = bitcast %"class.device::SensorReadingField"* %79 to <2 x double>*
  %81 = load <2 x double>, <2 x double>* %80, align 8
  %82 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %2, i64 0, i32 0, i32 1, i64 2
  %83 = bitcast %"class.device::SensorReadingField"* %82 to double*
  %84 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %2, i64 0, i32 0, i32 1, i64 3
  %85 = bitcast %"class.device::SensorReadingField"* %82 to <2 x double>*
  %86 = load <2 x double>, <2 x double>* %85, align 8
  %87 = extractelement <2 x double> %78, i32 1
  %88 = extractelement <2 x double> %78, i32 0
  %89 = shufflevector <2 x double> %78, <2 x double> undef, <2 x i32> <i32 1, i32 1>
  %90 = fmul <2 x double> %89, %81
  %91 = shufflevector <2 x double> %78, <2 x double> undef, <2 x i32> zeroinitializer
  %92 = shufflevector <2 x double> %81, <2 x double> undef, <2 x i32> <i32 1, i32 0>
  %93 = fmul <2 x double> %91, %92
  %94 = fadd <2 x double> %90, %93
  %95 = fsub <2 x double> %90, %93
  %96 = shufflevector <2 x double> %94, <2 x double> %95, <2 x i32> <i32 0, i32 3>
  %97 = bitcast %"class.device::SensorReadingField"* %79 to <2 x double>*
  store <2 x double> %96, <2 x double>* %97, align 8
  %98 = extractelement <2 x double> %86, i32 0
  %99 = fmul double %87, %98
  %100 = extractelement <2 x double> %86, i32 1
  %101 = fmul double %88, %100
  %102 = fadd double %99, %101
  store double %102, double* %83, align 8
  %103 = fmul <2 x double> %78, %86
  br label %104

104:                                              ; preds = %8, %31, %54, %77
  %105 = phi %"class.device::SensorReadingField"* [ %84, %77 ], [ %60, %54 ], [ %37, %31 ], [ %14, %8 ]
  %106 = phi <2 x double> [ %103, %77 ], [ %72, %54 ], [ %49, %31 ], [ %26, %8 ]
  %107 = bitcast %"class.device::SensorReadingField"* %105 to double*
  %108 = extractelement <2 x double> %106, i32 0
  %109 = extractelement <2 x double> %106, i32 1
  %110 = fsub double %109, %108
  store double %110, double* %107, align 8
  br label %111

111:                                              ; preds = %104, %3
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
