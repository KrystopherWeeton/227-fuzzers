; ModuleID = '../../extensions/common/manifest_handlers/extension_action_handler.cc'
source_filename = "../../extensions/common/manifest_handlers/extension_action_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::ExtensionActionHandler" = type { %"class.extensions::ManifestHandler" }
%"class.extensions::ManifestHandler" = type { i32 (...)** }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.13", %"class.std::__1::vector", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.37", %"class.std::__1::map", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.19" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.extensions::InstallWarning"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.24" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %class.GURL* }
%"class.base::Version" = type { %"class.std::__1::vector.30" }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { i32*, i32*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.43" }
%"union.absl::variant_internal::DestructibleUnionImpl.43" = type { %"union.absl::variant_internal::DestructibleUnionImpl.44" }
%"union.absl::variant_internal::DestructibleUnionImpl.44" = type { %"union.absl::variant_internal::DestructibleUnionImpl.45" }
%"union.absl::variant_internal::DestructibleUnionImpl.45" = type { %"union.absl::variant_internal::DestructibleUnionImpl.46" }
%"union.absl::variant_internal::DestructibleUnionImpl.46" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.78" }
%"class.std::__1::__tree.78" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.90 }
%union.anon.90 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.91 }
%struct.anon.91 = type { %"struct.std::__1::__padding.92", i8 }
%"struct.std::__1::__padding.92" = type { [1 x i8] }
%"struct.extensions::ActionInfo" = type <{ i32, [4 x i8], %class.ExtensionIconSet, %"class.std::__1::basic_string", %class.GURL, i32, i8, [3 x i8] }>
%class.ExtensionIconSet = type { %"class.std::__1::map.99" }
%"class.std::__1::map.99" = type { %"class.std::__1::__tree.100" }
%"class.std::__1::__tree.100" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.extensions::ManifestPermission" = type opaque

@_ZTVN10extensions22ExtensionActionHandlerE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::ExtensionActionHandler"*)* @_ZN10extensions22ExtensionActionHandlerD2Ev to i8*), i8* bitcast (void (%"class.extensions::ExtensionActionHandler"*)* @_ZN10extensions22ExtensionActionHandlerD0Ev to i8*), i8* bitcast (i1 (%"class.extensions::ExtensionActionHandler"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.87"*)* @_ZN10extensions22ExtensionActionHandler5ParseEPNS_9ExtensionEPNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE to i8*), i8* bitcast (i1 (%"class.extensions::ExtensionActionHandler"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector"*)* @_ZNK10extensions22ExtensionActionHandler8ValidateEPKNS_9ExtensionEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPNS4_6vectorINS_14InstallWarningENS8_ISD_EEEE to i8*), i8* bitcast (i1 (%"class.extensions::ExtensionActionHandler"*, i32)* @_ZNK10extensions22ExtensionActionHandler18AlwaysParseForTypeENS_8Manifest4TypeE to i8*), i8* bitcast (i1 (%"class.extensions::ManifestHandler"*, i32)* @_ZNK10extensions15ManifestHandler21AlwaysValidateForTypeENS_8Manifest4TypeE to i8*), i8* bitcast (void ()* @_ZNK10extensions15ManifestHandler16PrerequisiteKeysEv to i8*), i8* bitcast (%"class.extensions::ManifestPermission"* (%"class.extensions::ManifestHandler"*)* @_ZN10extensions15ManifestHandler16CreatePermissionEv to i8*), i8* bitcast (%"class.extensions::ManifestPermission"* (%"class.extensions::ManifestHandler"*, %"class.extensions::Extension"*)* @_ZN10extensions15ManifestHandler31CreateInitialRequiredPermissionEPKNS_9ExtensionE to i8*), i8* bitcast ({ i64, i8** } (%"class.extensions::ExtensionActionHandler"*)* @_ZNK10extensions22ExtensionActionHandler4KeysEv to i8*)] }, align 8
@_ZN10extensions13manifest_keys7kActionE = external constant [0 x i8], align 1
@_ZN10extensions15manifest_errors14kInvalidActionE = external constant [0 x i8], align 1
@_ZN10extensions13manifest_keys11kPageActionE = external constant [0 x i8], align 1
@_ZN10extensions15manifest_errors17kOneUISurfaceOnlyE = external constant [0 x i8], align 1
@_ZN10extensions15manifest_errors18kInvalidPageActionE = external constant [0 x i8], align 1
@_ZN10extensions13manifest_keys14kBrowserActionE = external constant [0 x i8], align 1
@_ZN10extensions15manifest_errors21kInvalidBrowserActionE = external constant [0 x i8], align 1
@_ZN10extensions10image_util20kDefaultToolbarColorE = external local_unnamed_addr constant i32, align 4
@_ZZNK10extensions22ExtensionActionHandler4KeysEvE5kKeys = internal constant [2 x i8*] [i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys11kPageActionE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys14kBrowserActionE, i32 0, i32 0)], align 16
@.str = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"s\00", align 1

@_ZN10extensions22ExtensionActionHandlerC1Ev = hidden unnamed_addr alias void (%"class.extensions::ExtensionActionHandler"*), void (%"class.extensions::ExtensionActionHandler"*)* @_ZN10extensions22ExtensionActionHandlerC2Ev
@_ZN10extensions22ExtensionActionHandlerD1Ev = hidden unnamed_addr alias void (%"class.extensions::ExtensionActionHandler"*), void (%"class.extensions::ExtensionActionHandler"*)* @_ZN10extensions22ExtensionActionHandlerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions22ExtensionActionHandlerC2Ev(%"class.extensions::ExtensionActionHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ExtensionActionHandler", %"class.extensions::ExtensionActionHandler"* %0, i64 0, i32 0
  tail call void @_ZN10extensions15ManifestHandlerC2Ev(%"class.extensions::ManifestHandler"* %2) #9
  %3 = getelementptr inbounds %"class.extensions::ExtensionActionHandler", %"class.extensions::ExtensionActionHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN10extensions22ExtensionActionHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN10extensions15ManifestHandlerC2Ev(%"class.extensions::ManifestHandler"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN10extensions15ManifestHandlerD2Ev(%"class.extensions::ManifestHandler"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions22ExtensionActionHandlerD2Ev(%"class.extensions::ExtensionActionHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ExtensionActionHandler", %"class.extensions::ExtensionActionHandler"* %0, i64 0, i32 0
  tail call void @_ZN10extensions15ManifestHandlerD2Ev(%"class.extensions::ManifestHandler"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions22ExtensionActionHandlerD0Ev(%"class.extensions::ExtensionActionHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ExtensionActionHandler", %"class.extensions::ExtensionActionHandler"* %0, i64 0, i32 0
  tail call void @_ZN10extensions15ManifestHandlerD2Ev(%"class.extensions::ManifestHandler"* %2) #9
  %3 = bitcast %"class.extensions::ExtensionActionHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions22ExtensionActionHandler5ParseEPNS_9ExtensionEPNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.extensions::ExtensionActionHandler"* nocapture readnone, %"class.extensions::Extension"*, %"class.std::__1::basic_string.87"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string.87", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string.87", align 8
  %10 = alloca %"class.base::DictionaryValue"*, align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string.87", align 8
  %13 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %1, i64 0, i32 16, i32 0, i32 0, i32 0
  %14 = load %"class.extensions::Manifest"*, %"class.extensions::Manifest"** %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %16 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys7kActionE, i64 0, i64 0)) #9
  %17 = icmp ugt i64 %16, -17
  br i1 %17, label %18, label %20

18:                                               ; preds = %3
  %19 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %19) #11
  unreachable

20:                                               ; preds = %3
  %21 = icmp ult i64 %16, 23
  br i1 %21, label %31, label %22

22:                                               ; preds = %20
  %23 = add nuw i64 %16, 16
  %24 = and i64 %23, -16
  %25 = tail call i8* @_Znwm(i64 %24) #10
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %25, i8** %26, align 8
  %27 = or i64 %24, -9223372036854775808
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %16, i64* %29, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %36

31:                                               ; preds = %20
  %32 = trunc i64 %16 to i8
  %33 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 %32, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %31, %22
  %37 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %33, %31 ], [ %30, %22 ]
  %38 = phi i8* [ %15, %31 ], [ %25, %22 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %38, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys7kActionE, i64 0, i64 0), i64 %16, i1 false) #9
  br label %39

39:                                               ; preds = %31, %36
  %40 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %33, %31 ], [ %37, %36 ]
  %41 = phi i8* [ %15, %31 ], [ %38, %36 ]
  %42 = getelementptr inbounds i8, i8* %41, i64 %16
  store i8 0, i8* %42, align 1
  %43 = call zeroext i1 @_ZNK10extensions8Manifest6HasKeyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::Manifest"* %14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #9
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %39, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  %51 = select i1 %43, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys7kActionE, i64 0, i64 0), i8* null
  %52 = select i1 %43, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors14kInvalidActionE, i64 0, i64 0), i8* null
  %53 = load %"class.extensions::Manifest"*, %"class.extensions::Manifest"** %13, align 8
  %54 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #9
  %55 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys11kPageActionE, i64 0, i64 0)) #9
  %56 = icmp ugt i64 %55, -17
  br i1 %56, label %57, label %59

57:                                               ; preds = %50
  %58 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %58) #11
  unreachable

59:                                               ; preds = %50
  %60 = icmp ult i64 %55, 23
  br i1 %60, label %70, label %61

61:                                               ; preds = %59
  %62 = add nuw i64 %55, 16
  %63 = and i64 %62, -16
  %64 = call i8* @_Znwm(i64 %63) #10
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %64, i8** %65, align 8
  %66 = or i64 %63, -9223372036854775808
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %55, i64* %68, align 8
  %69 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %75

70:                                               ; preds = %59
  %71 = trunc i64 %55 to i8
  %72 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  store i8 %71, i8* %73, align 1
  %74 = icmp eq i64 %55, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %70, %61
  %76 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %72, %70 ], [ %69, %61 ]
  %77 = phi i8* [ %54, %70 ], [ %64, %61 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %77, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys11kPageActionE, i64 0, i64 0), i64 %55, i1 false) #9
  br label %78

78:                                               ; preds = %70, %75
  %79 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %72, %70 ], [ %76, %75 ]
  %80 = phi i8* [ %54, %70 ], [ %77, %75 ]
  %81 = getelementptr inbounds i8, i8* %80, i64 %55
  store i8 0, i8* %81, align 1
  %82 = call zeroext i1 @_ZNK10extensions8Manifest6HasKeyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::Manifest"* %53, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #9
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  call void @_ZdlPv(i8* %88) #10
  br label %89

89:                                               ; preds = %78, %86
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #9
  %90 = and i1 %43, %82
  %91 = select i1 %82, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys11kPageActionE, i64 0, i64 0), i8* %51
  %92 = select i1 %82, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors18kInvalidPageActionE, i64 0, i64 0), i8* %52
  %93 = select i1 %82, i32 2, i32 0
  br i1 %90, label %94, label %106

94:                                               ; preds = %89
  %95 = bitcast %"class.std::__1::basic_string.87"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #9
  %96 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors17kOneUISurfaceOnlyE, i64 0, i64 0)) #9
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.87"* nonnull sret %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors17kOneUISurfaceOnlyE, i64 0, i64 0), i64 %96) #9
  %97 = bitcast %"class.std::__1::basic_string.87"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %97, i64 0, i32 1, i32 1
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %94
  %102 = bitcast %"class.std::__1::basic_string.87"* %2 to i8**
  %103 = load i8*, i8** %102, align 8
  call void @_ZdlPv(i8* %103) #10
  br label %104

104:                                              ; preds = %101, %94
  %105 = bitcast %"class.std::__1::basic_string.87"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* nonnull align 8 %95, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #9
  br label %237

106:                                              ; preds = %89
  %107 = load %"class.extensions::Manifest"*, %"class.extensions::Manifest"** %13, align 8
  %108 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #9
  %109 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys14kBrowserActionE, i64 0, i64 0)) #9
  %110 = icmp ugt i64 %109, -17
  br i1 %110, label %111, label %113

111:                                              ; preds = %106
  %112 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %112) #11
  unreachable

113:                                              ; preds = %106
  %114 = icmp ult i64 %109, 23
  br i1 %114, label %124, label %115

115:                                              ; preds = %113
  %116 = add nuw i64 %109, 16
  %117 = and i64 %116, -16
  %118 = call i8* @_Znwm(i64 %117) #10
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %118, i8** %119, align 8
  %120 = or i64 %117, -9223372036854775808
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %120, i64* %121, align 8
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %109, i64* %122, align 8
  %123 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %129

124:                                              ; preds = %113
  %125 = trunc i64 %109 to i8
  %126 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %126, i64 0, i32 1, i32 0
  store i8 %125, i8* %127, align 1
  %128 = icmp eq i64 %109, 0
  br i1 %128, label %132, label %129

129:                                              ; preds = %124, %115
  %130 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %126, %124 ], [ %123, %115 ]
  %131 = phi i8* [ %108, %124 ], [ %118, %115 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %131, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys14kBrowserActionE, i64 0, i64 0), i64 %109, i1 false) #9
  br label %132

132:                                              ; preds = %124, %129
  %133 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %126, %124 ], [ %130, %129 ]
  %134 = phi i8* [ %108, %124 ], [ %131, %129 ]
  %135 = getelementptr inbounds i8, i8* %134, i64 %109
  store i8 0, i8* %135, align 1
  %136 = call zeroext i1 @_ZNK10extensions8Manifest6HasKeyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::Manifest"* %107, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #9
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %138 = load i8, i8* %137, align 1
  %139 = icmp slt i8 %138, 0
  br i1 %139, label %140, label %143

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load i8*, i8** %141, align 8
  call void @_ZdlPv(i8* %142) #10
  br label %143

143:                                              ; preds = %132, %140
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #9
  %144 = icmp eq i8* %91, null
  br i1 %136, label %145, label %158

145:                                              ; preds = %143
  br i1 %144, label %159, label %146

146:                                              ; preds = %145
  %147 = bitcast %"class.std::__1::basic_string.87"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147) #9
  %148 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors17kOneUISurfaceOnlyE, i64 0, i64 0)) #9
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.87"* nonnull sret %9, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors17kOneUISurfaceOnlyE, i64 0, i64 0), i64 %148) #9
  %149 = bitcast %"class.std::__1::basic_string.87"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %150 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %149, i64 0, i32 1, i32 1
  %151 = load i8, i8* %150, align 1
  %152 = icmp slt i8 %151, 0
  br i1 %152, label %153, label %156

153:                                              ; preds = %146
  %154 = bitcast %"class.std::__1::basic_string.87"* %2 to i8**
  %155 = load i8*, i8** %154, align 8
  call void @_ZdlPv(i8* %155) #10
  br label %156

156:                                              ; preds = %153, %146
  %157 = bitcast %"class.std::__1::basic_string.87"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* nonnull align 8 %147, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147) #9
  br label %237

158:                                              ; preds = %143
  br i1 %144, label %226, label %159

159:                                              ; preds = %145, %158
  %160 = phi i32 [ %93, %158 ], [ 1, %145 ]
  %161 = phi i8* [ %92, %158 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions15manifest_errors21kInvalidBrowserActionE, i64 0, i64 0), %145 ]
  %162 = phi i8* [ %91, %158 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys14kBrowserActionE, i64 0, i64 0), %145 ]
  %163 = bitcast %"class.base::DictionaryValue"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #9
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %10, align 8
  %164 = load %"class.extensions::Manifest"*, %"class.extensions::Manifest"** %13, align 8
  %165 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %165) #9
  %166 = call i64 @strlen(i8* nonnull %162) #9
  %167 = icmp ugt i64 %166, -17
  br i1 %167, label %168, label %170

168:                                              ; preds = %159
  %169 = bitcast %"class.std::__1::basic_string"* %11 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %169) #11
  unreachable

170:                                              ; preds = %159
  %171 = icmp ult i64 %166, 23
  br i1 %171, label %181, label %172

172:                                              ; preds = %170
  %173 = add nuw i64 %166, 16
  %174 = and i64 %173, -16
  %175 = call i8* @_Znwm(i64 %174) #10
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %175, i8** %176, align 8
  %177 = or i64 %174, -9223372036854775808
  %178 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %177, i64* %178, align 8
  %179 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %166, i64* %179, align 8
  %180 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %186

181:                                              ; preds = %170
  %182 = trunc i64 %166 to i8
  %183 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %184 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %183, i64 0, i32 1, i32 0
  store i8 %182, i8* %184, align 1
  %185 = icmp eq i64 %166, 0
  br i1 %185, label %189, label %186

186:                                              ; preds = %181, %172
  %187 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %183, %181 ], [ %180, %172 ]
  %188 = phi i8* [ %165, %181 ], [ %175, %172 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %188, i8* align 1 %162, i64 %166, i1 false) #9
  br label %189

189:                                              ; preds = %181, %186
  %190 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %183, %181 ], [ %187, %186 ]
  %191 = phi i8* [ %165, %181 ], [ %188, %186 ]
  %192 = getelementptr inbounds i8, i8* %191, i64 %166
  store i8 0, i8* %192, align 1
  %193 = call zeroext i1 @_ZNK10extensions8Manifest13GetDictionaryERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPPKN4base15DictionaryValueE(%"class.extensions::Manifest"* %164, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11, %"class.base::DictionaryValue"** nonnull %10) #9
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %190, i64 0, i32 1, i32 0
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %197, label %200

197:                                              ; preds = %189
  %198 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load i8*, i8** %198, align 8
  call void @_ZdlPv(i8* %199) #10
  br label %200

200:                                              ; preds = %189, %197
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %165) #9
  br i1 %193, label %220, label %201

201:                                              ; preds = %200
  %202 = bitcast %"class.std::__1::basic_string.87"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %202) #9
  %203 = icmp eq i8* %161, null
  br i1 %203, label %206, label %204

204:                                              ; preds = %201
  %205 = call i64 @strlen(i8* nonnull %161) #9
  br label %209

206:                                              ; preds = %201
  %207 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %207) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #9
  %208 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %207) #9
  br label %209

209:                                              ; preds = %204, %206
  %210 = phi i64 [ 0, %206 ], [ %205, %204 ]
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.87"* nonnull sret %12, i8* %161, i64 %210) #9
  %211 = bitcast %"class.std::__1::basic_string.87"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %212 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %211, i64 0, i32 1, i32 1
  %213 = load i8, i8* %212, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %215, label %218

215:                                              ; preds = %209
  %216 = bitcast %"class.std::__1::basic_string.87"* %2 to i8**
  %217 = load i8*, i8** %216, align 8
  call void @_ZdlPv(i8* %217) #10
  br label %218

218:                                              ; preds = %215, %209
  %219 = bitcast %"class.std::__1::basic_string.87"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %219, i8* nonnull align 8 %202, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %202) #9
  br label %224

220:                                              ; preds = %200
  %221 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %10, align 8
  %222 = call %"struct.extensions::ActionInfo"* @_ZN10extensions10ActionInfo4LoadEPKNS_9ExtensionENS0_4TypeEPKN4base15DictionaryValueEPNSt3__112basic_stringIDsNS9_11char_traitsIDsEENS9_9allocatorIDsEEEE(%"class.extensions::Extension"* %1, i32 %160, %"class.base::DictionaryValue"* %221, %"class.std::__1::basic_string.87"* %2) #9
  %223 = icmp eq %"struct.extensions::ActionInfo"* %222, null
  br i1 %223, label %224, label %225

224:                                              ; preds = %220, %218
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #9
  br label %237

225:                                              ; preds = %220
  call void @_ZN10extensions10ActionInfo22SetExtensionActionInfoEPNS_9ExtensionENSt3__110unique_ptrIS0_NS3_14default_deleteIS0_EEEE(%"class.extensions::Extension"* %1, %"struct.extensions::ActionInfo"* nonnull %222) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #9
  br label %237

226:                                              ; preds = %158
  %227 = call i32 @_ZNK10extensions9Extension8locationEv(%"class.extensions::Extension"* %1) #9
  switch i32 %227, label %228 [
    i32 10, label %237
    i32 5, label %237
  ]

228:                                              ; preds = %226
  %229 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %1, i64 0, i32 23
  %230 = load i32, i32* %229, align 8
  %231 = trunc i32 %230 to i8
  %232 = icmp slt i8 %231, 0
  br i1 %232, label %237, label %233

233:                                              ; preds = %228
  %234 = call i8* @_Znwm(i64 184) #10
  %235 = bitcast i8* %234 to %"struct.extensions::ActionInfo"*
  call void @_ZN10extensions10ActionInfoC1ENS0_4TypeE(%"struct.extensions::ActionInfo"* nonnull %235, i32 2) #9
  %236 = getelementptr inbounds i8, i8* %234, i64 180
  store i8 1, i8* %236, align 4
  call void @_ZN10extensions10ActionInfo22SetExtensionActionInfoEPNS_9ExtensionENSt3__110unique_ptrIS0_NS3_14default_deleteIS0_EEEE(%"class.extensions::Extension"* %1, %"struct.extensions::ActionInfo"* nonnull %235) #9
  br label %237

237:                                              ; preds = %226, %226, %233, %225, %224, %228, %156, %104
  %238 = phi i1 [ false, %104 ], [ false, %156 ], [ true, %226 ], [ true, %228 ], [ false, %224 ], [ true, %225 ], [ true, %233 ], [ true, %226 ]
  ret i1 %238
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare zeroext i1 @_ZNK10extensions8Manifest6HasKeyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::Manifest"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.87"* sret, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZNK10extensions8Manifest13GetDictionaryERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPPKN4base15DictionaryValueE(%"class.extensions::Manifest"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::DictionaryValue"**) local_unnamed_addr #1

declare %"struct.extensions::ActionInfo"* @_ZN10extensions10ActionInfo4LoadEPKNS_9ExtensionENS0_4TypeEPKN4base15DictionaryValueEPNSt3__112basic_stringIDsNS9_11char_traitsIDsEENS9_9allocatorIDsEEEE(%"class.extensions::Extension"*, i32, %"class.base::DictionaryValue"*, %"class.std::__1::basic_string.87"*) local_unnamed_addr #1

declare void @_ZN10extensions10ActionInfo22SetExtensionActionInfoEPNS_9ExtensionENSt3__110unique_ptrIS0_NS3_14default_deleteIS0_EEEE(%"class.extensions::Extension"*, %"struct.extensions::ActionInfo"*) local_unnamed_addr #1

declare i32 @_ZNK10extensions9Extension8locationEv(%"class.extensions::Extension"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions22ExtensionActionHandler8ValidateEPKNS_9ExtensionEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPNS4_6vectorINS_14InstallWarningENS8_ISD_EEEE(%"class.extensions::ExtensionActionHandler"* nocapture readnone, %"class.extensions::Extension"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector"* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = tail call %"struct.extensions::ActionInfo"* @_ZN10extensions10ActionInfo22GetExtensionActionInfoEPKNS_9ExtensionE(%"class.extensions::Extension"* %1) #9
  %6 = icmp eq %"struct.extensions::ActionInfo"* %5, null
  br i1 %6, label %22, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"struct.extensions::ActionInfo", %"struct.extensions::ActionInfo"* %5, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.extensions::ActionInfo", %"struct.extensions::ActionInfo"* %5, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"struct.extensions::ActionInfo", %"struct.extensions::ActionInfo"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  switch i32 %14, label %18 [
    i32 0, label %15
    i32 1, label %16
    i32 2, label %17
  ]

15:                                               ; preds = %12
  br label %18

16:                                               ; preds = %12
  br label %18

17:                                               ; preds = %12
  br label %18

18:                                               ; preds = %12, %17, %16, %15
  %19 = phi i8* [ null, %12 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys11kPageActionE, i64 0, i64 0), %17 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys14kBrowserActionE, i64 0, i64 0), %16 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys7kActionE, i64 0, i64 0), %15 ]
  %20 = load i32, i32* @_ZN10extensions10image_util20kDefaultToolbarColorE, align 4
  %21 = tail call zeroext i1 @_ZN10extensions9file_util24ValidateExtensionIconSetERK16ExtensionIconSetPKNS_9ExtensionEPKcjPNSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEE(%class.ExtensionIconSet* dereferenceable(24) %8, %"class.extensions::Extension"* %1, i8* %19, i32 %20, %"class.std::__1::basic_string"* %2) #9
  br label %22

22:                                               ; preds = %7, %4, %18
  %23 = phi i1 [ %21, %18 ], [ true, %4 ], [ true, %7 ]
  ret i1 %23
}

declare %"struct.extensions::ActionInfo"* @_ZN10extensions10ActionInfo22GetExtensionActionInfoEPKNS_9ExtensionE(%"class.extensions::Extension"*) local_unnamed_addr #1

declare zeroext i1 @_ZN10extensions9file_util24ValidateExtensionIconSetERK16ExtensionIconSetPKNS_9ExtensionEPKcjPNSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEE(%class.ExtensionIconSet* dereferenceable(24), %"class.extensions::Extension"*, i8*, i32, %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK10extensions22ExtensionActionHandler18AlwaysParseForTypeENS_8Manifest4TypeE(%"class.extensions::ExtensionActionHandler"* nocapture readnone, i32) unnamed_addr #5 align 2 {
  %3 = or i32 %1, 2
  %4 = icmp eq i32 %3, 3
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i64, i8** } @_ZNK10extensions22ExtensionActionHandler4KeysEv(%"class.extensions::ExtensionActionHandler"* nocapture readnone) unnamed_addr #5 align 2 {
  ret { i64, i8** } { i64 2, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZZNK10extensions22ExtensionActionHandler4KeysEvE5kKeys, i64 0, i64 0) }
}

declare zeroext i1 @_ZNK10extensions15ManifestHandler21AlwaysValidateForTypeENS_8Manifest4TypeE(%"class.extensions::ManifestHandler"*, i32) unnamed_addr #1

declare void @_ZNK10extensions15ManifestHandler16PrerequisiteKeysEv() unnamed_addr

declare %"class.extensions::ManifestPermission"* @_ZN10extensions15ManifestHandler16CreatePermissionEv(%"class.extensions::ManifestHandler"*) unnamed_addr #1

declare %"class.extensions::ManifestPermission"* @_ZN10extensions15ManifestHandler31CreateInitialRequiredPermissionEPKNS_9ExtensionE(%"class.extensions::ManifestHandler"*, %"class.extensions::Extension"*) unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN10extensions10ActionInfoC1ENS0_4TypeE(%"struct.extensions::ActionInfo"*, i32) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
