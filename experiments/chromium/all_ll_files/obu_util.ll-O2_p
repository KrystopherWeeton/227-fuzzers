; ModuleID = '../../third_party/libaom/source/libaom/av1/common/obu_util.c'
source_filename = "../../third_party/libaom/source/libaom/av1/common/obu_util.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ObuHeader = type { i64, i8, i32, i32, i32, i32 }
%struct.aom_read_bit_buffer = type { i8*, i8*, i32, i8*, void (i8*)* }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_read_obu_header(i8*, i64, i64*, %struct.ObuHeader*, i32) local_unnamed_addr #0 {
  %6 = alloca %struct.aom_read_bit_buffer, align 8
  %7 = icmp ne i64 %1, 0
  %8 = icmp ne i64* %2, null
  %9 = and i1 %7, %8
  %10 = icmp ne %struct.ObuHeader* %3, null
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %26

12:                                               ; preds = %5
  %13 = bitcast %struct.aom_read_bit_buffer* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  %14 = getelementptr inbounds %struct.aom_read_bit_buffer, %struct.aom_read_bit_buffer* %6, i64 0, i32 0
  store i8* %0, i8** %14, align 8
  %15 = getelementptr inbounds %struct.aom_read_bit_buffer, %struct.aom_read_bit_buffer* %6, i64 0, i32 1
  %16 = getelementptr inbounds i8, i8* %0, i64 %1
  store i8* %16, i8** %15, align 8
  %17 = getelementptr inbounds %struct.aom_read_bit_buffer, %struct.aom_read_bit_buffer* %6, i64 0, i32 2
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %struct.aom_read_bit_buffer, %struct.aom_read_bit_buffer* %6, i64 0, i32 3
  %19 = bitcast i8** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false)
  %20 = call fastcc i32 @read_obu_header(%struct.aom_read_bit_buffer* nonnull %6, i32 %4, %struct.ObuHeader* nonnull %3)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %12
  %23 = getelementptr inbounds %struct.ObuHeader, %struct.ObuHeader* %3, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %2, align 8
  br label %25

25:                                               ; preds = %22, %12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #3
  br label %26

26:                                               ; preds = %5, %25
  %27 = phi i32 [ %20, %25 ], [ 8, %5 ]
  ret i32 %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @read_obu_header(%struct.aom_read_bit_buffer*, i32, %struct.ObuHeader*) unnamed_addr #0 {
  %4 = icmp ne %struct.aom_read_bit_buffer* %0, null
  %5 = icmp ne %struct.ObuHeader* %2, null
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %46

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.aom_read_bit_buffer, %struct.aom_read_bit_buffer* %0, i64 0, i32 1
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %struct.aom_read_bit_buffer* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = icmp slt i64 %13, 1
  br i1 %14, label %46, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.ObuHeader, %struct.ObuHeader* %2, i64 0, i32 0
  store i64 1, i64* %16, align 8
  %17 = tail call i32 @aom_rb_read_bit(%struct.aom_read_bit_buffer* nonnull %0) #3
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %46

19:                                               ; preds = %15
  %20 = tail call i32 @aom_rb_read_literal(%struct.aom_read_bit_buffer* nonnull %0, i32 4) #3
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.ObuHeader, %struct.ObuHeader* %2, i64 0, i32 1
  store i8 %21, i8* %22, align 8
  %23 = tail call i32 @aom_rb_read_bit(%struct.aom_read_bit_buffer* nonnull %0) #3
  %24 = getelementptr inbounds %struct.ObuHeader, %struct.ObuHeader* %2, i64 0, i32 3
  store i32 %23, i32* %24, align 8
  %25 = tail call i32 @aom_rb_read_bit(%struct.aom_read_bit_buffer* nonnull %0) #3
  %26 = getelementptr inbounds %struct.ObuHeader, %struct.ObuHeader* %2, i64 0, i32 2
  store i32 %25, i32* %26, align 4
  %27 = or i32 %25, %1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %46, label %29

29:                                               ; preds = %19
  %30 = tail call i32 @aom_rb_read_bit(%struct.aom_read_bit_buffer* nonnull %0) #3
  %31 = load i32, i32* %24, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %43, label %33

33:                                               ; preds = %29
  %34 = icmp eq i64 %13, 1
  br i1 %34, label %46, label %35

35:                                               ; preds = %33
  %36 = load i64, i64* %16, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %16, align 8
  %38 = tail call i32 @aom_rb_read_literal(%struct.aom_read_bit_buffer* nonnull %0, i32 3) #3
  %39 = getelementptr inbounds %struct.ObuHeader, %struct.ObuHeader* %2, i64 0, i32 4
  store i32 %38, i32* %39, align 4
  %40 = tail call i32 @aom_rb_read_literal(%struct.aom_read_bit_buffer* nonnull %0, i32 2) #3
  %41 = getelementptr inbounds %struct.ObuHeader, %struct.ObuHeader* %2, i64 0, i32 5
  store i32 %40, i32* %41, align 8
  %42 = tail call i32 @aom_rb_read_literal(%struct.aom_read_bit_buffer* nonnull %0, i32 3) #3
  br label %46

43:                                               ; preds = %29
  %44 = getelementptr inbounds %struct.ObuHeader, %struct.ObuHeader* %2, i64 0, i32 4
  store i32 0, i32* %44, align 4
  %45 = getelementptr inbounds %struct.ObuHeader, %struct.ObuHeader* %2, i64 0, i32 5
  store i32 0, i32* %45, align 8
  br label %46

46:                                               ; preds = %7, %15, %19, %33, %43, %35, %3
  %47 = phi i32 [ 8, %3 ], [ 7, %7 ], [ 7, %15 ], [ 5, %19 ], [ 7, %33 ], [ 0, %43 ], [ 0, %35 ]
  ret i32 %47
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @aom_read_obu_header_and_size(i8*, i64, i32, %struct.ObuHeader*, i64* nocapture, i64* nocapture) local_unnamed_addr #0 {
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %struct.aom_read_bit_buffer, align 8
  %12 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #3
  store i64 0, i64* %9, align 8
  %13 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #3
  store i64 0, i64* %10, align 8
  %14 = icmp eq i32 %2, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %6
  %16 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #3
  store i64 0, i64* %8, align 8
  %17 = call i32 @aom_uleb_decode(i8* %0, i64 %1, i64* nonnull %8, i64* nonnull %9) #3
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = load i64, i64* %8, align 8
  %21 = icmp ugt i64 %20, 4294967295
  br i1 %21, label %22, label %23

22:                                               ; preds = %15, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #3
  br label %73

23:                                               ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #3
  %24 = load i64, i64* %9, align 8
  br label %25

25:                                               ; preds = %23, %6
  %26 = phi i64 [ 0, %6 ], [ %24, %23 ]
  %27 = phi i64 [ 0, %6 ], [ %20, %23 ]
  %28 = bitcast %struct.aom_read_bit_buffer* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %28) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  %29 = getelementptr inbounds %struct.aom_read_bit_buffer, %struct.aom_read_bit_buffer* %11, i64 0, i32 0
  %30 = getelementptr inbounds i8, i8* %0, i64 %26
  store i8* %30, i8** %29, align 8
  %31 = getelementptr inbounds %struct.aom_read_bit_buffer, %struct.aom_read_bit_buffer* %11, i64 0, i32 1
  %32 = getelementptr inbounds i8, i8* %0, i64 %1
  store i8* %32, i8** %31, align 8
  %33 = getelementptr inbounds %struct.aom_read_bit_buffer, %struct.aom_read_bit_buffer* %11, i64 0, i32 2
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %struct.aom_read_bit_buffer, %struct.aom_read_bit_buffer* %11, i64 0, i32 3
  %35 = bitcast i8** %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false)
  %36 = call fastcc i32 @read_obu_header(%struct.aom_read_bit_buffer* nonnull %11, i32 %2, %struct.ObuHeader* %3)
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %71

38:                                               ; preds = %25
  %39 = getelementptr inbounds %struct.ObuHeader, %struct.ObuHeader* %3, i64 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %48

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.ObuHeader, %struct.ObuHeader* %3, i64 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = icmp ult i64 %27, %44
  br i1 %45, label %71, label %46

46:                                               ; preds = %42
  %47 = sub i64 %27, %44
  store i64 %47, i64* %4, align 8
  br label %64

48:                                               ; preds = %38
  %49 = load i64, i64* %9, align 8
  %50 = getelementptr inbounds i8, i8* %0, i64 %49
  %51 = getelementptr inbounds %struct.ObuHeader, %struct.ObuHeader* %3, i64 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds i8, i8* %50, i64 %52
  %54 = sub i64 %1, %49
  %55 = sub i64 %54, %52
  %56 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #3
  store i64 0, i64* %7, align 8
  %57 = call i32 @aom_uleb_decode(i8* %53, i64 %55, i64* nonnull %7, i64* nonnull %10) #3
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %48
  %60 = load i64, i64* %7, align 8
  %61 = icmp ugt i64 %60, 4294967295
  br i1 %61, label %62, label %63

62:                                               ; preds = %48, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #3
  br label %71

63:                                               ; preds = %59
  store i64 %60, i64* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #3
  br label %64

64:                                               ; preds = %63, %46
  %65 = load i64, i64* %9, align 8
  %66 = getelementptr inbounds %struct.ObuHeader, %struct.ObuHeader* %3, i64 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, %65
  %69 = load i64, i64* %10, align 8
  %70 = add i64 %68, %69
  store i64 %70, i64* %5, align 8
  br label %71

71:                                               ; preds = %62, %42, %25, %64
  %72 = phi i32 [ 0, %64 ], [ %36, %25 ], [ 7, %42 ], [ 7, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28) #3
  br label %73

73:                                               ; preds = %22, %71
  %74 = phi i32 [ %72, %71 ], [ 7, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #3
  ret i32 %74
}

declare i32 @aom_rb_read_bit(%struct.aom_read_bit_buffer*) local_unnamed_addr #2

declare i32 @aom_rb_read_literal(%struct.aom_read_bit_buffer*, i32) local_unnamed_addr #2

declare i32 @aom_uleb_decode(i8*, i64, i64*, i64*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
